; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c_pt.bc'
source_filename = "../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.atomic_t = type { i32 }
%struct.module_version_attribute = type { %struct.module_attribute, ptr, ptr }
%struct.module_attribute = type { %struct.attribute, ptr, ptr, ptr, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.hclge_mac_speed_map = type { i32, i32 }
%struct.hnae3_ae_algo = type { ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.hnae3_ae_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.cpumask = type { [1 x i32] }
%struct.hclge_mac_mgr_tbl_entry_cmd = type { i8, i8, i16, [6 x i8], i16, i16, i16, i16, i8, i8, i8, i8, [2 x i8] }
%struct.key_info = type { i8, i8, i32, i32, i32 }
%struct.hclge_speed_bit_map = type { i32, i32 }
%struct.hclge_comm_stats_str = type { [32 x i8], i32, i32 }
%struct.hclge_desc = type { i16, i16, i16, i16, [6 x i32] }
%struct.hclge_dev = type { ptr, ptr, %struct.hclge_hw, %struct.hclge_misc_vector, %struct.hclge_mac_stats, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hclge_rst_stats, %struct.semaphore, i32, i16, i16, i16, i16, i16, i16, i32, i16, i16, i32, i16, i16, i16, i8, i32, i8, i8, i8, i8, i8, i8, %struct.hclge_tm_info, i16, i16, i16, ptr, ptr, i16, i16, i32, i32, %struct.timer_list, %struct.delayed_work, i8, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, %struct.mutex, %struct.hclge_vlan_type_cfg, [4096 x [8 x i32]], [8 x i32], [8 x i32], %struct.hclge_fd_cfg, %struct.hlist_head, %struct.spinlock, i16, i32, i32, i32, i32, [128 x i32], i32, i8, i8, i16, i16, i16, i16, i16, %struct.anon.178, %struct.cpumask, ptr, ptr, %struct.hclge_comm_rss_cfg }
%struct.hclge_hw = type { %struct.hclge_comm_hw, %struct.hclge_mac, i32 }
%struct.hclge_comm_hw = type { ptr, ptr, %struct.hclge_comm_cmq, i32 }
%struct.hclge_comm_cmq = type { %struct.hclge_comm_cmq_ring, %struct.hclge_comm_cmq_ring, i16, i32 }
%struct.hclge_comm_cmq_ring = type { i32, ptr, ptr, i32, i32, i16, i16, i32, i32, i8, %struct.spinlock }
%struct.hclge_mac = type { i8, i8, i8, i8, [6 x i8], i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, [3 x i32], [3 x i32] }
%struct.hclge_misc_vector = type { ptr, i32, [32 x i8] }
%struct.hclge_mac_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.hclge_rst_stats = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.hclge_tm_info = type { i8, i8, [4 x i8], [8 x i8], [4 x %struct.hclge_pg_info], [8 x %struct.hclge_tc_info], i32, i8, i8 }
%struct.hclge_pg_info = type { i8, i8, i8, i32, [8 x i8] }
%struct.hclge_tc_info = type { i8, i8, i8, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.hclge_vlan_type_cfg = type { i16, i16, i16, i16, i16, i16 }
%struct.hclge_fd_cfg = type { i8, i16, [2 x i32], [2 x i16], [2 x %struct.hclge_fd_key_cfg], [3 x %struct.hclge_fd_user_def_cfg] }
%struct.hclge_fd_key_cfg = type { i8, i8, i8, i8, i8, i32, i32 }
%struct.hclge_fd_user_def_cfg = type { i16, i16 }
%struct.hlist_head = type { ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.anon.178 = type { %union.anon.179, [8 x %struct.hclge_mac_tnl_stats] }
%union.anon.179 = type { %struct.__kfifo }
%struct.__kfifo = type { i32, i32, i32, i32, ptr }
%struct.hclge_mac_tnl_stats = type { i64, i32 }
%struct.hclge_comm_rss_cfg = type { [40 x i8], ptr, i32, %struct.hclge_comm_rss_tuple_cfg, i32 }
%struct.hclge_comm_rss_tuple_cfg = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.hnae3_ae_dev = type { ptr, ptr, %struct.list_head, i32, i32, %struct.hnae3_dev_specs, i32, [3 x i32], ptr }
%struct.hnae3_dev_specs = type { i32, i32, i32, i16, i16, i16, i16, i8, i16, i16, i16, i16, i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.128, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.128 = type { ptr }
%struct.hclge_priv_buf = type { %struct.hclge_waterline, i32, i32, i32 }
%struct.hclge_waterline = type { i32, i32 }
%struct.hclge_pkt_buf_alloc = type { [8 x %struct.hclge_priv_buf], %struct.hclge_shared_buf }
%struct.hclge_shared_buf = type { %struct.hclge_waterline, [8 x %struct.hclge_tc_thrd], i32 }
%struct.hclge_tc_thrd = type { i32, i32 }
%struct.hclge_priv_wl = type { i16, i16 }
%struct.hclge_config_mac_speed_dup_cmd = type { i8, i8, [22 x i8] }
%struct.hclge_vport = type { i16, i16, i32, i8, i8, i8, [128 x i32], %struct.hclge_port_base_vlan_config, %struct.hclge_tx_vtag_cfg, %struct.hclge_rx_vtag_cfg, i16, i16, ptr, %struct.hnae3_handle, %struct.hnae3_handle, i32, i32, i32, %struct.hclge_vf_info, i8, i8, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.hclge_port_base_vlan_config = type { i16, %struct.hclge_vlan_info }
%struct.hclge_vlan_info = type { i16, i16, i16 }
%struct.hclge_tx_vtag_cfg = type { i8, i8, i8, i8, i8, i8, i16, i16, i8 }
%struct.hclge_rx_vtag_cfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.hnae3_handle = type { ptr, ptr, ptr, ptr, i64, %union.anon.158, i32, i32, i8, ptr, %struct.mutex, i32, i32, i32 }
%union.anon.158 = type { %struct.hnae3_knic_private_info }
%struct.hnae3_knic_private_info = type { ptr, i16, i16, i16, i16, i16, i32, %struct.hnae3_tc_info, i16, ptr, ptr, i16, i32, ptr }
%struct.hnae3_tc_info = type { [8 x i8], [8 x i16], [8 x i16], i8, i8 }
%struct.hclge_vf_info = type { i32, [6 x i8], i32, i32, i32, i8, i8, i8 }
%struct.hnae3_client = type { [16 x i8], i32, i32, ptr, %struct.list_head }
%struct.hnae3_client_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.hclge_reset_cmd = type { i8, i8, i8, i8, i16, i16, i8, [15 x i8] }
%struct.hclge_ctrl_vector_chain_cmd = type { i8, i8, [10 x i16], i8, i8 }
%struct.hnae3_ring_chain_node = type { ptr, i32, i32, i32 }
%struct.hclge_promisc_cfg_cmd = type { i8, i8, i8, [21 x i8] }
%struct.hclge_vport_vlan_cfg = type { %struct.list_head, i32, i16 }
%struct.hclge_fd_rule = type { %struct.hlist_node, %struct.hclge_fd_rule_tuples, %struct.hclge_fd_rule_tuples, i32, i32, %union.anon.184, i16, i16, i16, i32, i32, i8 }
%struct.hclge_fd_rule_tuples = type { [6 x i8], [6 x i8], [4 x i32], [4 x i32], i16, i16, i16, i16, i16, i16, i32, i8, i8 }
%union.anon.184 = type { %struct.anon.187 }
%struct.anon.187 = type { %struct.hclge_fd_user_def_info }
%struct.hclge_fd_user_def_info = type { i32, i16, i16, i16 }
%struct.hclge_mac_node = type { %struct.list_head, i32, [6 x i8] }
%struct.hclge_mac_vlan_tbl_entry_cmd = type { i8, i8, i16, i32, i16, i16, i8, i8, i16, i16, [6 x i8] }
%struct.hclge_vlan_filter_pf_cfg_cmd = type { i8, i8, [2 x i8], [20 x i8] }
%struct.hclge_vport_vtag_rx_cfg_cmd = type { i8, i8, [6 x i8], [8 x i8], [8 x i8] }
%struct.hclge_vport_vtag_tx_cfg_cmd = type { i8, i8, [2 x i8], i16, i16, [8 x i8], [8 x i8] }
%struct.hclge_config_max_frm_size_cmd = type { i16, i8, [21 x i8] }
%struct.hclge_cfg_com_tqp_queue_cmd = type { i16, i16, i8, [19 x i8] }
%struct.hclge_reset_tqp_queue_cmd = type { i16, i8, i8, [20 x i8] }
%struct.phy_device = type { %struct.mdio_device, ptr, i32, %struct.phy_c45_device_ids, i16, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [3 x i32], [3 x i32], [3 x i32], [3 x i32], i32, ptr, i32, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, %struct.delayed_work, %struct.mutex, i8, ptr, ptr, ptr, ptr, i8, i8, ptr, ptr, ptr }
%struct.mdio_device = type { %struct.device, ptr, [32 x i8], ptr, ptr, ptr, i32, i32, ptr, ptr, i32, i32 }
%struct.phy_c45_device_ids = type { i32, i32, [32 x i32] }
%struct.hclge_vlan_filter_ctrl_cmd = type { i8, i8, [2 x i8], i8, [19 x i8] }
%struct.hclge_vlan_filter_vf_cfg_cmd = type { i16, i8, i8, i8, [3 x i8], [16 x i8] }
%struct.phy_driver = type { %struct.mdio_driver_common, i32, ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mdio_driver_common = type { %struct.device_driver, i32 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ifreq = type { %union.anon.130, %union.anon.131 }
%union.anon.130 = type { [16 x i8] }
%union.anon.131 = type { %struct.ifmap }
%struct.ifmap = type { i32, i32, i16, i8, i8, i8 }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.hns3_mac_stats = type { i64, i64 }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.147, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.147 = type { i32 }
%struct.hnae3_vector_info = type { ptr, i32 }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hclge_set_led_state_cmd = type { [3 x i8], i8, [20 x i8] }
%struct.ethtool_tcpip4_spec = type { i32, i32, i16, i16, i8 }
%struct.ethtool_usrip4_spec = type { i32, i32, i32, i8, i8, i8 }
%struct.ethtool_usrip6_spec = type { [4 x i32], [4 x i32], i32, i8, i8 }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.flow_keys = type { %struct.flow_dissector_key_control, %struct.flow_dissector_key_basic, %struct.flow_dissector_key_tags, %struct.flow_dissector_key_vlan, %struct.flow_dissector_key_vlan, %struct.flow_dissector_key_keyid, %struct.flow_dissector_key_ports, %struct.flow_dissector_key_icmp, %struct.flow_dissector_key_addrs, [4 x i8] }
%struct.flow_dissector_key_control = type { i16, i16, i32 }
%struct.flow_dissector_key_basic = type { i16, i8, i8 }
%struct.flow_dissector_key_tags = type { i32 }
%struct.flow_dissector_key_vlan = type { %union.anon.159, i16 }
%union.anon.159 = type { %struct.anon.160 }
%struct.anon.160 = type { i16 }
%struct.flow_dissector_key_keyid = type { i32 }
%struct.flow_dissector_key_ports = type { %union.anon.161 }
%union.anon.161 = type { i32 }
%struct.flow_dissector_key_icmp = type { %struct.anon.163, i16 }
%struct.anon.163 = type { i8, i8 }
%struct.flow_dissector_key_addrs = type { %union.anon.164 }
%union.anon.164 = type { %struct.flow_dissector_key_ipv6_addrs }
%struct.flow_dissector_key_ipv6_addrs = type { %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.71 }
%union.anon.71 = type { [4 x i32] }
%struct.anon.162 = type { i16, i16 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.hclge_sfp_info_bd0_cmd = type { i16, i16, [20 x i8] }
%struct.flow_match_ports = type { ptr, ptr }
%struct.flow_match_control = type { ptr, ptr }
%struct.flow_match_ipv4_addrs = type { ptr, ptr }
%struct.flow_match_ipv6_addrs = type { ptr, ptr }
%struct.flow_match_vlan = type { ptr, ptr }
%struct.flow_match_eth_addrs = type { ptr, ptr }
%struct.flow_match_basic = type { ptr, ptr }
%struct.flow_cls_common_offload = type { i32, i16, i32, ptr }
%struct.flow_cls_offload = type { %struct.flow_cls_common_offload, i32, i32, ptr, %struct.flow_stats, i32 }
%struct.flow_stats = type { i64, i64, i64, i64, i32, i8 }
%struct.flow_dissector_key_eth_addrs = type { [6 x i8], [6 x i8] }
%struct.flow_dissector_key_ipv4_addrs = type { i32, i32 }
%struct.hclge_phy_link_ksetting_0_cmd = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.148, i32 }
%struct.anon.148 = type { [3 x i32], [3 x i32], [3 x i32] }
%struct.hclge_phy_link_ksetting_1_cmd = type { i8, i8, [22 x i8] }
%struct.hclge_func_status_cmd = type { [4 x i32], i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.hclge_pf_res_cmd = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, [6 x i8] }
%struct.hclge_dev_specs_0_cmd = type { i32, i32, i32, i16, i16, i16, i8, i8, i32 }
%struct.hclge_dev_specs_1_cmd = type { i16, i16, i16, [2 x i8], i16, i16, [12 x i8] }
%struct.hclge_comm_tqp = type { ptr, %struct.hnae3_queue, %struct.hclge_comm_tqp_stats, i16, i8 }
%struct.hnae3_queue = type { ptr, ptr, ptr, i32, i32, i16, i16 }
%struct.hclge_comm_tqp_stats = type { i64, i64 }
%struct.hclge_tqp_map_cmd = type { i16, i8, i8, i16, [18 x i8] }
%struct.hclge_cfg_tso_status_cmd = type { i16, i16, [20 x i8] }
%struct.hclge_rx_vlan_type_cfg_cmd = type { i16, i16, i16, i16, [16 x i8] }
%struct.hclge_get_fd_allocation_cmd = type { i32, i32, i16, i16, [12 x i8] }
%struct.hclge_set_fd_key_config_cmd = type { i8, i8, i8, i8, i8, i8, [2 x i8], i32, i32, [8 x i8] }
%struct.hclge_ptp = type { ptr, ptr, ptr, i32, ptr, %struct.ptp_clock_info, %struct.hwtstamp_config, %struct.spinlock, i32, i32, %struct.hclge_ptp_cycle, i32, i32, i32, i32, i32, i32, i32 }
%struct.ptp_clock_info = type { ptr, [32 x i8], i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.hclge_ptp_cycle = type { i32, i32, i32 }
%struct.hclge_common_lb_cmd = type { i8, i8, i8, [21 x i8] }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.hclge_vf_rst_cmd = type { i8, i8, [22 x i8] }
%struct.hclge_sfp_info_cmd = type { i32, i8, i8, i8, i8, i32, i32, [8 x i8] }
%struct.hclge_fd_tcam_config_1_cmd = type { i8, i8, i8, [1 x i8], i32, i8, [7 x i8], [8 x i8] }

@hclge_buffer_alloc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 2434, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"could not calc tx buffer size for all TCs %d\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_buffer_alloc\00", [45 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c\00", [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@hclge_buffer_alloc._entry_ptr = internal global ptr @hclge_buffer_alloc._entry, section ".printk_index", align 4
@hclge_buffer_alloc._entry.5 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.6, ptr @.str.1, ptr @.str.2, i32 2441, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"could not alloc tx buffers %d\0A\00", [33 x i8] zeroinitializer }, align 32
@hclge_buffer_alloc._entry_ptr.7 = internal global ptr @hclge_buffer_alloc._entry.5, section ".printk_index", align 4
@hclge_buffer_alloc._entry.8 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.1, ptr @.str.2, i32 2449, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"could not calc rx priv buffer size for all TCs %d\0A\00", [45 x i8] zeroinitializer }, align 32
@hclge_buffer_alloc._entry_ptr.10 = internal global ptr @hclge_buffer_alloc._entry.8, section ".printk_index", align 4
@hclge_buffer_alloc._entry.11 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.12, ptr @.str.1, ptr @.str.2, i32 2456, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"could not alloc rx priv buffer %d\0A\00", [61 x i8] zeroinitializer }, align 32
@hclge_buffer_alloc._entry_ptr.13 = internal global ptr @hclge_buffer_alloc._entry.11, section ".printk_index", align 4
@hclge_buffer_alloc._entry.14 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.1, ptr @.str.2, i32 2465, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"could not configure rx private waterline %d\0A\00", [51 x i8] zeroinitializer }, align 32
@hclge_buffer_alloc._entry_ptr.16 = internal global ptr @hclge_buffer_alloc._entry.14, section ".printk_index", align 4
@hclge_buffer_alloc._entry.17 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.1, ptr @.str.2, i32 2473, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"could not configure common threshold %d\0A\00", [55 x i8] zeroinitializer }, align 32
@hclge_buffer_alloc._entry_ptr.19 = internal global ptr @hclge_buffer_alloc._entry.17, section ".printk_index", align 4
@hclge_buffer_alloc._entry.20 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.1, ptr @.str.2, i32 2481, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"could not configure common waterline %d\0A\00", [55 x i8] zeroinitializer }, align 32
@hclge_buffer_alloc._entry_ptr.22 = internal global ptr @hclge_buffer_alloc._entry.20, section ".printk_index", align 4
@hclge_wq = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@hclge_notify_client._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.24, ptr @.str.2, i32 3610, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"notify nic client failed %d(%d)\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_notify_client\00", [44 x i8] zeroinitializer }, align 32
@hclge_notify_client._entry_ptr = internal global ptr @hclge_notify_client._entry, section ".printk_index", align 4
@hclge_func_reset_cmd._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.26, ptr @.str.2, i32 3828, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"send function reset cmd fail, status =%d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_func_reset_cmd\00", [43 x i8] zeroinitializer }, align 32
@hclge_func_reset_cmd._entry_ptr = internal global ptr @hclge_func_reset_cmd._entry, section ".printk_index", align 4
@hclge_bind_ring_with_vector._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.28, ptr @.str.2, i32 4808, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Map TQP fail, status is %d.\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hclge_bind_ring_with_vector\00", [36 x i8] zeroinitializer }, align 32
@hclge_bind_ring_with_vector._entry_ptr = internal global ptr @hclge_bind_ring_with_vector._entry, section ".printk_index", align 4
@hclge_bind_ring_with_vector._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.28, ptr @.str.2, i32 4833, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@hclge_bind_ring_with_vector._entry_ptr.30 = internal global ptr @hclge_bind_ring_with_vector._entry.29, section ".printk_index", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@hclge_update_mac_list._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.31, ptr @.str.32, ptr @.str.2, i32 8309, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"failed to delete address %s from mac list\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hclge_update_mac_list\00", [42 x i8] zeroinitializer }, align 32
@hclge_update_mac_list._entry_ptr = internal global ptr @hclge_update_mac_list._entry, section ".printk_index", align 4
@hclge_add_uc_addr_common._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.34, ptr @.str.2, i32 8358, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"Set_uc mac err! invalid mac:%s. is_zero:%d,is_br=%d,is_mul=%d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_add_uc_addr_common\00", [39 x i8] zeroinitializer }, align 32
@hclge_add_uc_addr_common._entry_ptr = internal global ptr @hclge_add_uc_addr_common._entry, section ".printk_index", align 4
@hclge_add_uc_addr_common._entry.35 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.34, ptr @.str.2, i32 8389, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"UC MAC table full(%u)\0A\00", [41 x i8] zeroinitializer }, align 32
@hclge_add_uc_addr_common._entry_ptr.37 = internal global ptr @hclge_add_uc_addr_common._entry.35, section ".printk_index", align 4
@hclge_rm_uc_addr_common.__UNIQUE_ID_ddebug540 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.38, ptr @.str.39, ptr @.str.2, ptr @.str.40, i8 8, i8 58, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.38 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"hclge\00", [26 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_rm_uc_addr_common\00", [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Remove mac err! invalid mac:%s.\0A\00", [63 x i8] zeroinitializer }, align 32
@hclge_add_mc_addr_common._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.42, ptr @.str.2, i32 8467, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Add mc mac err! invalid mac:%s.\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_add_mc_addr_common\00", [39 x i8] zeroinitializer }, align 32
@hclge_add_mc_addr_common._entry_ptr = internal global ptr @hclge_add_mc_addr_common._entry, section ".printk_index", align 4
@hclge_add_mc_addr_common._entry.43 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.42, ptr @.str.2, i32 8501, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"mc mac vlan table is full\0A\00", [37 x i8] zeroinitializer }, align 32
@hclge_add_mc_addr_common._entry_ptr.45 = internal global ptr @hclge_add_mc_addr_common._entry.43, section ".printk_index", align 4
@hclge_rm_mc_addr_common.__UNIQUE_ID_ddebug541 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.38, ptr @.str.46, ptr @.str.2, ptr @.str.47, i8 8, i8 84, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.46 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_rm_mc_addr_common\00", [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Remove mc mac err! invalid mac:%s.\0A\00", [60 x i8] zeroinitializer }, align 32
@hclge_set_vport_mtu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.49, ptr @.str.2, i32 10391, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Change mtu fail, ret =%d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_set_vport_mtu\00", [44 x i8] zeroinitializer }, align 32
@hclge_set_vport_mtu._entry_ptr = internal global ptr @hclge_set_vport_mtu._entry, section ".printk_index", align 4
@hclge_set_vport_mtu._entry.50 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.49, ptr @.str.2, i32 10401, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Allocate buffer fail, ret =%d\0A\00", [33 x i8] zeroinitializer }, align 32
@hclge_set_vport_mtu._entry_ptr.52 = internal global ptr @hclge_set_vport_mtu._entry.50, section ".printk_index", align 4
@hclge_reset_tqp._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.54, ptr @.str.2, i32 10574, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"failed to disable tqp, ret = %d\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"hclge_reset_tqp\00", [16 x i8] zeroinitializer }, align 32
@hclge_reset_tqp._entry_ptr = internal global ptr @hclge_reset_tqp._entry, section ".printk_index", align 4
@__initcall__kmod_hclge__554_12788_hclge_init6 = internal global ptr @hclge_init, section ".initcall6.init", align 4
@__exitcall_hclge_exit = internal global ptr @hclge_exit, section ".exitcall.exit", align 4
@__UNIQUE_ID_file555 = internal constant [53 x i8] c"hclge.file=drivers/net/ethernet/hisilicon/hns3/hclge\00", section ".modinfo", align 1
@__UNIQUE_ID_license556 = internal constant [18 x i8] c"hclge.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_author557 = internal constant [36 x i8] c"hclge.author=Huawei Tech. Co., Ltd.\00", section ".modinfo", align 1
@__UNIQUE_ID_description558 = internal constant [31 x i8] c"hclge.description=HCLGE Driver\00", section ".modinfo", align 1
@__UNIQUE_ID_version559 = internal constant [18 x i8] c"hclge.version=1.0\00", section ".modinfo", align 1
@.str.55 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"version\00", [24 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"1.0\00", [28 x i8] zeroinitializer }, align 32
@__modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { ptr @.str.55, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @__modver_version_show, ptr null, ptr null, ptr null, ptr null }, ptr @.str.38, ptr @.str.56 }, section "__modver", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@hclge_mac_update_stats_defective._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.58, ptr @.str.2, i32 503, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Get MAC pkt stats fail, status = %d.\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"hclge_mac_update_stats_defective\00", [63 x i8] zeroinitializer }, align 32
@hclge_mac_update_stats_defective._entry_ptr = internal global ptr @hclge_mac_update_stats_defective._entry, section ".printk_index", align 4
@hclge_tx_buffer_alloc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.59, ptr @.str.60, ptr @.str.2, i32 1926, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"tx buffer alloc failed %d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hclge_tx_buffer_alloc\00", [42 x i8] zeroinitializer }, align 32
@hclge_tx_buffer_alloc._entry_ptr = internal global ptr @hclge_tx_buffer_alloc._entry, section ".printk_index", align 4
@hclge_cmd_alloc_tx_buff._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.62, ptr @.str.2, i32 1915, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"tx buffer alloc cmd failed %d.\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_cmd_alloc_tx_buff\00", [40 x i8] zeroinitializer }, align 32
@hclge_cmd_alloc_tx_buff._entry_ptr = internal global ptr @hclge_cmd_alloc_tx_buff._entry, section ".printk_index", align 4
@hclge_rx_priv_buf_alloc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str.2, i32 2305, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"rx private buffer alloc cmd failed %d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_rx_priv_buf_alloc\00", [40 x i8] zeroinitializer }, align 32
@hclge_rx_priv_buf_alloc._entry_ptr = internal global ptr @hclge_rx_priv_buf_alloc._entry, section ".printk_index", align 4
@hclge_rx_priv_wl_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.66, ptr @.str.2, i32 2350, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"rx private waterline config cmd failed %d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_rx_priv_wl_config\00", [40 x i8] zeroinitializer }, align 32
@hclge_rx_priv_wl_config._entry_ptr = internal global ptr @hclge_rx_priv_wl_config._entry, section ".printk_index", align 4
@hclge_common_thrd_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.68, ptr @.str.2, i32 2393, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"common threshold config cmd failed %d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_common_thrd_config\00", [39 x i8] zeroinitializer }, align 32
@hclge_common_thrd_config._entry_ptr = internal global ptr @hclge_common_thrd_config._entry, section ".printk_index", align 4
@hclge_common_wl_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.70, ptr @.str.2, i32 2417, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"common waterline config cmd failed %d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_common_wl_config\00", [41 x i8] zeroinitializer }, align 32
@hclge_common_wl_config._entry_ptr = internal global ptr @hclge_common_wl_config._entry, section ".printk_index", align 4
@hclge_cfg_mac_speed_dup_hw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.71, ptr @.str.72, ptr @.str.2, i32 2606, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"invalid speed (%d)\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_cfg_mac_speed_dup_hw\00", [37 x i8] zeroinitializer }, align 32
@hclge_cfg_mac_speed_dup_hw._entry_ptr = internal global ptr @hclge_cfg_mac_speed_dup_hw._entry, section ".printk_index", align 4
@hclge_cfg_mac_speed_dup_hw._entry.73 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.74, ptr @.str.72, ptr @.str.2, i32 2618, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"mac speed/duplex config cmd failed %d.\0A\00", [56 x i8] zeroinitializer }, align 32
@hclge_cfg_mac_speed_dup_hw._entry_ptr.75 = internal global ptr @hclge_cfg_mac_speed_dup_hw._entry.73, section ".printk_index", align 4
@hclge_mac_speed_map_to_fw = internal constant { [9 x %struct.hclge_mac_speed_map], [56 x i8] } { [9 x %struct.hclge_mac_speed_map] [%struct.hclge_mac_speed_map { i32 10, i32 6 }, %struct.hclge_mac_speed_map { i32 100, i32 7 }, %struct.hclge_mac_speed_map { i32 1000, i32 0 }, %struct.hclge_mac_speed_map { i32 10000, i32 1 }, %struct.hclge_mac_speed_map { i32 25000, i32 2 }, %struct.hclge_mac_speed_map { i32 40000, i32 3 }, %struct.hclge_mac_speed_map { i32 50000, i32 4 }, %struct.hclge_mac_speed_map { i32 100000, i32 5 }, %struct.hclge_mac_speed_map { i32 200000, i32 8 }], [56 x i8] zeroinitializer }, align 32
@hclge_init_rss_tc_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.76, ptr @.str.77, ptr @.str.2, i32 4722, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Configure rss tc size failed, invalid TC_SIZE = %u\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_init_rss_tc_mode\00", [41 x i8] zeroinitializer }, align 32
@hclge_init_rss_tc_mode._entry_ptr = internal global ptr @hclge_init_rss_tc_mode._entry, section ".printk_index", align 4
@hclge_cmd_set_promisc_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str.2, i32 4924, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"failed to set vport %u promisc mode, ret = %d.\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_cmd_set_promisc_mode\00", [37 x i8] zeroinitializer }, align 32
@hclge_cmd_set_promisc_mode._entry_ptr = internal global ptr @hclge_cmd_set_promisc_mode._entry, section ".printk_index", align 4
@.str.80 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%02x:**:**:**:%02x:%02x\00", [40 x i8] zeroinitializer }, align 32
@hclge_lookup_mac_vlan_tbl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.82, ptr @.str.2, i32 8070, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"lookup mac addr failed for cmd_send, ret =%d.\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_lookup_mac_vlan_tbl\00", [38 x i8] zeroinitializer }, align 32
@hclge_lookup_mac_vlan_tbl._entry_ptr = internal global ptr @hclge_lookup_mac_vlan_tbl._entry, section ".printk_index", align 4
@hclge_get_mac_vlan_cmd_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @.str.84, ptr @.str.2, i32 7900, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"cmdq execute failed for get_mac_vlan_cmd_status,status=%u.\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hclge_get_mac_vlan_cmd_status\00", [34 x i8] zeroinitializer }, align 32
@hclge_get_mac_vlan_cmd_status._entry_ptr = internal global ptr @hclge_get_mac_vlan_cmd_status._entry, section ".printk_index", align 4
@hclge_get_mac_vlan_cmd_status._entry.85 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.84, ptr @.str.2, i32 7913, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"add mac addr failed for undefined, code=%u.\0A\00", [51 x i8] zeroinitializer }, align 32
@hclge_get_mac_vlan_cmd_status._entry_ptr.87 = internal global ptr @hclge_get_mac_vlan_cmd_status._entry.85, section ".printk_index", align 4
@hclge_get_mac_vlan_cmd_status.__UNIQUE_ID_ddebug538 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.38, ptr @.str.84, ptr @.str.2, ptr @.str.88, i8 7, i8 -68, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.88 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"remove mac addr failed for miss.\0A\00", [62 x i8] zeroinitializer }, align 32
@hclge_get_mac_vlan_cmd_status._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.84, ptr @.str.2, i32 7926, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"remove mac addr failed for undefined, code=%u.\0A\00", [48 x i8] zeroinitializer }, align 32
@hclge_get_mac_vlan_cmd_status._entry_ptr.91 = internal global ptr @hclge_get_mac_vlan_cmd_status._entry.89, section ".printk_index", align 4
@hclge_get_mac_vlan_cmd_status.__UNIQUE_ID_ddebug539 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.38, ptr @.str.84, ptr @.str.2, ptr @.str.92, i8 7, i8 -65, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.92 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"lookup mac addr failed for miss.\0A\00", [62 x i8] zeroinitializer }, align 32
@hclge_get_mac_vlan_cmd_status._entry.93 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.94, ptr @.str.84, ptr @.str.2, i32 7939, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"lookup mac addr failed for undefined, code=%u.\0A\00", [48 x i8] zeroinitializer }, align 32
@hclge_get_mac_vlan_cmd_status._entry_ptr.95 = internal global ptr @hclge_get_mac_vlan_cmd_status._entry.93, section ".printk_index", align 4
@hclge_get_mac_vlan_cmd_status._entry.96 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.84, ptr @.str.2, i32 7944, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"unknown opcode for get_mac_vlan_cmd_status, opcode=%d.\0A\00", [40 x i8] zeroinitializer }, align 32
@hclge_get_mac_vlan_cmd_status._entry_ptr.98 = internal global ptr @hclge_get_mac_vlan_cmd_status._entry.96, section ".printk_index", align 4
@hclge_add_mac_vlan_tbl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.100, ptr @.str.2, i32 8126, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"add mac addr failed for cmd_send, ret =%d.\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_add_mac_vlan_tbl\00", [41 x i8] zeroinitializer }, align 32
@hclge_add_mac_vlan_tbl._entry_ptr = internal global ptr @hclge_add_mac_vlan_tbl._entry, section ".printk_index", align 4
@hclge_remove_mac_vlan_tbl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.101, ptr @.str.102, ptr @.str.2, i32 8027, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"del mac addr failed for cmd_send, ret =%d.\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_remove_mac_vlan_tbl\00", [38 x i8] zeroinitializer }, align 32
@hclge_remove_mac_vlan_tbl._entry_ptr = internal global ptr @hclge_remove_mac_vlan_tbl._entry, section ".printk_index", align 4
@hclge_set_vlan_filter_ctrl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.103, ptr @.str.104, ptr @.str.2, i32 9231, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"failed to get vport%u vlan filter config, ret = %d.\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_set_vlan_filter_ctrl\00", [37 x i8] zeroinitializer }, align 32
@hclge_set_vlan_filter_ctrl._entry_ptr = internal global ptr @hclge_set_vlan_filter_ctrl._entry, section ".printk_index", align 4
@hclge_set_vlan_filter_ctrl._entry.105 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.106, ptr @.str.104, ptr @.str.2, i32 9243, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"failed to set vport%u vlan filter, ret = %d.\0A\00", [50 x i8] zeroinitializer }, align 32
@hclge_set_vlan_filter_ctrl._entry_ptr.107 = internal global ptr @hclge_set_vlan_filter_ctrl._entry.105, section ".printk_index", align 4
@hclge_set_port_vlan_filter_bypass._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.109, ptr @.str.2, i32 9210, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"failed to set vport%u port vlan filter bypass state, ret = %d.\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"hclge_set_port_vlan_filter_bypass\00", [62 x i8] zeroinitializer }, align 32
@hclge_set_port_vlan_filter_bypass._entry_ptr = internal global ptr @hclge_set_port_vlan_filter_bypass._entry, section ".printk_index", align 4
@hclge_set_vlan_filter_hw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.110, ptr @.str.111, ptr @.str.2, i32 9532, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Set %u vport vlan filter config fail, ret =%d.\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_set_vlan_filter_hw\00", [39 x i8] zeroinitializer }, align 32
@hclge_set_vlan_filter_hw._entry_ptr = internal global ptr @hclge_set_vlan_filter_hw._entry, section ".printk_index", align 4
@hclge_set_vf_vlan_common._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.112, ptr @.str.113, ptr @.str.2, i32 9447, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"Can't add vlan due to spoof check is on and vf vlan table is full\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_set_vf_vlan_common\00", [39 x i8] zeroinitializer }, align 32
@hclge_set_vf_vlan_common._entry_ptr = internal global ptr @hclge_set_vf_vlan_common._entry, section ".printk_index", align 4
@hclge_set_vf_vlan_filter_cmd._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.114, ptr @.str.115, ptr @.str.2, i32 9382, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Send vf vlan command fail, ret =%d.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hclge_set_vf_vlan_filter_cmd\00", [35 x i8] zeroinitializer }, align 32
@hclge_set_vf_vlan_filter_cmd._entry_ptr = internal global ptr @hclge_set_vf_vlan_filter_cmd._entry, section ".printk_index", align 4
@hclge_check_vf_vlan_cmd_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.116, ptr @.str.117, ptr @.str.2, i32 9404, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"vf vlan table is full, vf vlan filter is disabled\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hclge_check_vf_vlan_cmd_status\00", [33 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@hclge_check_vf_vlan_cmd_status._entry_ptr = internal global ptr @hclge_check_vf_vlan_cmd_status._entry, section ".printk_index", align 4
@hclge_check_vf_vlan_cmd_status._entry.119 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.120, ptr @.str.117, ptr @.str.2, i32 9410, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Add vf vlan filter fail, ret =%u.\0A\00", [61 x i8] zeroinitializer }, align 32
@hclge_check_vf_vlan_cmd_status._entry_ptr.121 = internal global ptr @hclge_check_vf_vlan_cmd_status._entry.119, section ".printk_index", align 4
@hclge_check_vf_vlan_cmd_status._entry.122 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.123, ptr @.str.117, ptr @.str.2, i32 9426, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Kill vf vlan filter fail, ret =%u.\0A\00", [60 x i8] zeroinitializer }, align 32
@hclge_check_vf_vlan_cmd_status._entry_ptr.124 = internal global ptr @hclge_check_vf_vlan_cmd_status._entry.122, section ".printk_index", align 4
@hclge_need_update_port_vlan._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.125, ptr @.str.126, ptr @.str.2, i32 9500, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Add port vlan failed, vport %u is already in vlan %u\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hclge_need_update_port_vlan\00", [36 x i8] zeroinitializer }, align 32
@hclge_need_update_port_vlan._entry_ptr = internal global ptr @hclge_need_update_port_vlan._entry, section ".printk_index", align 4
@hclge_need_update_port_vlan._entry.127 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.128, ptr @.str.126, ptr @.str.2, i32 9508, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"Delete port vlan failed, vport %u is not in vlan %u\0A\00", [43 x i8] zeroinitializer }, align 32
@hclge_need_update_port_vlan._entry_ptr.129 = internal global ptr @hclge_need_update_port_vlan._entry.127, section ".printk_index", align 4
@hclge_set_port_vlan_filter._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.130, ptr @.str.131, ptr @.str.2, i32 9485, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"port vlan command, send fail, ret =%d.\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_set_port_vlan_filter\00", [37 x i8] zeroinitializer }, align 32
@hclge_set_port_vlan_filter._entry_ptr = internal global ptr @hclge_set_port_vlan_filter._entry, section ".printk_index", align 4
@hclge_set_vlan_rx_offload_cfg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.133, ptr @.str.2, i32 9629, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Send port rxvlan cfg command fail, ret =%d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hclge_set_vlan_rx_offload_cfg\00", [34 x i8] zeroinitializer }, align 32
@hclge_set_vlan_rx_offload_cfg._entry_ptr = internal global ptr @hclge_set_vlan_rx_offload_cfg._entry, section ".printk_index", align 4
@hclge_set_vlan_tx_offload_cfg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.135, ptr @.str.2, i32 9589, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Send port txvlan cfg command fail, ret =%d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hclge_set_vlan_tx_offload_cfg\00", [34 x i8] zeroinitializer }, align 32
@hclge_set_vlan_tx_offload_cfg._entry_ptr = internal global ptr @hclge_set_vlan_tx_offload_cfg._entry, section ".printk_index", align 4
@hclge_modify_port_base_vlan_tag._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.136, ptr @.str.137, ptr @.str.2, i32 10085, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"failed to clear vport%u port base vlan %u, ret = %d.\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hclge_modify_port_base_vlan_tag\00", [32 x i8] zeroinitializer }, align 32
@hclge_modify_port_base_vlan_tag._entry_ptr = internal global ptr @hclge_modify_port_base_vlan_tag._entry, section ".printk_index", align 4
@hclge_add_vport_all_vlan_table._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.139, ptr @.str.2, i32 9841, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"restore vport vlan list failed, ret=%d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hclge_add_vport_all_vlan_table\00", [33 x i8] zeroinitializer }, align 32
@hclge_add_vport_all_vlan_table._entry_ptr = internal global ptr @hclge_add_vport_all_vlan_table._entry, section ".printk_index", align 4
@hclge_reset_rcb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.140, ptr @.str.141, ptr @.str.2, i32 10543, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"failed to send rcb reset cmd, ret = %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"hclge_reset_rcb\00", [16 x i8] zeroinitializer }, align 32
@hclge_reset_rcb._entry_ptr = internal global ptr @hclge_reset_rcb._entry, section ".printk_index", align 4
@hclge_reset_rcb._entry.142 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.143, ptr @.str.141, ptr @.str.2, i32 10553, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"failed to reset rcb, ret = %u\0A\00", [33 x i8] zeroinitializer }, align 32
@hclge_reset_rcb._entry_ptr.144 = internal global ptr @hclge_reset_rcb._entry.142, section ".printk_index", align 4
@hclge_reset_tqp_cmd._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.145, ptr @.str.146, ptr @.str.2, i32 10484, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"failed to send reset tqp cmd, ret = %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_reset_tqp_cmd\00", [44 x i8] zeroinitializer }, align 32
@hclge_reset_tqp_cmd._entry_ptr = internal global ptr @hclge_reset_tqp_cmd._entry, section ".printk_index", align 4
@hclge_reset_tqp_cmd._entry.147 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.148, ptr @.str.146, ptr @.str.2, i32 10503, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"wait for tqp hw reset timeout\0A\00", [33 x i8] zeroinitializer }, align 32
@hclge_reset_tqp_cmd._entry_ptr.149 = internal global ptr @hclge_reset_tqp_cmd._entry.147, section ".printk_index", align 4
@hclge_reset_tqp_cmd._entry.150 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.146, ptr @.str.2, i32 10511, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"failed to deassert soft reset, ret = %d\0A\00", [55 x i8] zeroinitializer }, align 32
@hclge_reset_tqp_cmd._entry_ptr.152 = internal global ptr @hclge_reset_tqp_cmd._entry.150, section ".printk_index", align 4
@hclge_reset_tqp_cmd_send._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.154, ptr @.str.2, i32 10426, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Send tqp reset cmd error, status =%d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_reset_tqp_cmd_send\00", [39 x i8] zeroinitializer }, align 32
@hclge_reset_tqp_cmd_send._entry_ptr = internal global ptr @hclge_reset_tqp_cmd_send._entry, section ".printk_index", align 4
@hclge_get_reset_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.155, ptr @.str.156, ptr @.str.2, i32 10448, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Get reset status error, status =%d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_get_reset_status\00", [41 x i8] zeroinitializer }, align 32
@hclge_get_reset_status._entry_ptr = internal global ptr @hclge_get_reset_status._entry, section ".printk_index", align 4
@hclge_cfg_pauseparam._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.157, ptr @.str.158, ptr @.str.2, i32 10610, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"configure pauseparam error, ret = %d.\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_cfg_pauseparam\00", [43 x i8] zeroinitializer }, align 32
@hclge_cfg_pauseparam._entry_ptr = internal global ptr @hclge_cfg_pauseparam._entry, section ".printk_index", align 4
@hclge_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.159, ptr @.str.160, ptr @.str.2, i32 12769, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016%s is initializing\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"hclge_init\00", [21 x i8] zeroinitializer }, align 32
@hclge_init._entry_ptr = internal global ptr @hclge_init._entry, section ".printk_index", align 4
@.str.161 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@hclge_init._entry.162 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.163, ptr @.str.160, ptr @.str.2, i32 12773, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013%s: failed to create workqueue\0A\00", [62 x i8] zeroinitializer }, align 32
@hclge_init._entry_ptr.164 = internal global ptr @hclge_init._entry.162, section ".printk_index", align 4
@ae_algo = internal global { %struct.hnae3_ae_algo, [16 x i8] } { %struct.hnae3_ae_algo { ptr @hclge_ops, %struct.list_head zeroinitializer, ptr @ae_algo_pci_tbl }, [16 x i8] zeroinitializer }, align 32
@hclge_ops = internal constant { %struct.hnae3_ae_ops, [108 x i8] } { %struct.hnae3_ae_ops { ptr @hclge_init_ae_dev, ptr @hclge_uninit_ae_dev, ptr @hclge_reset_prepare_general, ptr @hclge_reset_done, ptr @hclge_init_client_instance, ptr @hclge_uninit_client_instance, ptr @hclge_ae_start, ptr @hclge_ae_stop, ptr @hclge_client_start, ptr @hclge_client_stop, ptr @hclge_get_status, ptr @hclge_get_ksettings_an_result, ptr @hclge_cfg_mac_speed_dup_h, ptr @hclge_get_media_type, ptr @hclge_check_port_speed, ptr @hclge_get_fec, ptr @hclge_set_fec, ptr null, ptr @hclge_set_loopback, ptr @hclge_set_promisc_mode, ptr @hclge_request_update_promisc_mode, ptr @hclge_set_mtu, ptr @hclge_get_pauseparam, ptr @hclge_set_pauseparam, ptr @hclge_set_autoneg, ptr @hclge_get_autoneg, ptr @hclge_restart_autoneg, ptr @hclge_halt_autoneg, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @hclge_get_mac_addr, ptr @hclge_set_mac_addr, ptr @hclge_do_ioctl, ptr @hclge_add_uc_addr, ptr @hclge_rm_uc_addr, ptr null, ptr @hclge_add_mc_addr, ptr @hclge_rm_mc_addr, ptr null, ptr @hclge_update_stats, ptr @hclge_get_stats, ptr @hclge_get_mac_stat, ptr @hclge_get_strings, ptr @hclge_get_sset_count, ptr @hclge_get_regs, ptr @hclge_get_regs_len, ptr @hclge_comm_get_rss_key_size, ptr @hclge_get_rss, ptr @hclge_set_rss, ptr @hclge_set_rss_tuple, ptr @hclge_get_rss_tuple, ptr @hclge_get_tc_size, ptr @hclge_get_vector, ptr @hclge_put_vector, ptr @hclge_map_ring_to_vector, ptr @hclge_unmap_ring_frm_vector, ptr @hclge_reset_tqp, ptr @hclge_get_fw_version, ptr @hclge_get_mdix_mode, ptr @hclge_enable_vlan_filter, ptr @hclge_set_vlan_filter, ptr @hclge_set_vf_vlan_filter, ptr @hclge_en_hw_strip_rxvtag, ptr @hclge_reset_event, ptr @hclge_get_reset_level, ptr @hclge_set_def_reset_request, ptr @hclge_get_channels, ptr @hclge_get_tqps_and_rss_info, ptr @hclge_set_channels, ptr null, ptr @hclge_set_led_id, ptr @hclge_get_link_mode, ptr @hclge_add_fd_entry, ptr @hclge_del_fd_entry, ptr @hclge_get_fd_rule_cnt, ptr @hclge_get_fd_rule_info, ptr @hclge_get_all_rules, ptr @hclge_enable_fd, ptr @hclge_add_fd_entry_by_arfs, ptr @hclge_dbg_read_cmd, ptr @hclge_handle_hw_ras_error, ptr @hclge_get_hw_reset_stat, ptr @hclge_ae_dev_resetting, ptr @hclge_ae_dev_reset_cnt, ptr @hclge_gro_en, ptr @hclge_covert_handle_qid_global, ptr @hclge_set_timer_task, ptr @hclge_mac_connect_phy, ptr @hclge_mac_disconnect_phy, ptr @hclge_get_vf_config, ptr @hclge_set_vf_link_state, ptr @hclge_set_vf_spoofchk, ptr @hclge_set_vf_trust, ptr @hclge_set_vf_rate, ptr @hclge_set_vf_mac, ptr @hclge_get_module_eeprom, ptr @hclge_get_cmdq_stat, ptr @hclge_add_cls_flower, ptr @hclge_del_cls_flower, ptr @hclge_is_cls_flower_active, ptr @hclge_get_phy_link_ksettings, ptr @hclge_set_phy_link_ksettings, ptr @hclge_ptp_set_tx_info, ptr @hclge_ptp_get_rx_hwts, ptr @hclge_ptp_get_ts_info, ptr @hclge_get_link_diagnosis_info }, [108 x i8] zeroinitializer }, align 32
@ae_algo_pci_tbl = internal constant { [9 x %struct.pci_device_id], [64 x i8] } { [9 x %struct.pci_device_id] [%struct.pci_device_id { i32 6629, i32 41504, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 6629, i32 41505, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 6629, i32 41506, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 6629, i32 41507, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 6629, i32 41508, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 6629, i32 41509, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 6629, i32 41510, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 6629, i32 41512, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id zeroinitializer], [64 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.165 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&hdev->vport_lock\00", [46 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev.__key.166 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.167 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&hdev->fd_rule_lock\00", [44 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.169, ptr @.str.2, i32 11279, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"failed to query dev specifications, ret = %d.\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_init_ae_dev\00", [46 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr = internal global ptr @hclge_init_ae_dev._entry, section ".printk_index", align 4
@hclge_init_ae_dev._entry.170 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.171, ptr @.str.169, ptr @.str.2, i32 11285, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Configure dev error, ret = %d.\0A\00", [32 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.172 = internal global ptr @hclge_init_ae_dev._entry.170, section ".printk_index", align 4
@hclge_init_ae_dev._entry.173 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.169, ptr @.str.2, i32 11291, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Init MSI/MSI-X error, ret = %d.\0A\00", [63 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.175 = internal global ptr @hclge_init_ae_dev._entry.173, section ".printk_index", align 4
@hclge_init_ae_dev._entry.176 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.169, ptr @.str.2, i32 11301, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Allocate TQPs error, ret = %d.\0A\00", [32 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.178 = internal global ptr @hclge_init_ae_dev._entry.176, section ".printk_index", align 4
@hclge_init_ae_dev._entry.179 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.169, ptr @.str.2, i32 11326, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Mac init error, ret = %d\0A\00", [38 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.181 = internal global ptr @hclge_init_ae_dev._entry.179, section ".printk_index", align 4
@hclge_init_ae_dev._entry.182 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.169, ptr @.str.2, i32 11332, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Enable tso fail, ret =%d\0A\00", [38 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.184 = internal global ptr @hclge_init_ae_dev._entry.182, section ".printk_index", align 4
@hclge_init_ae_dev._entry.185 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.186, ptr @.str.169, ptr @.str.2, i32 11342, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"VLAN init fail, ret =%d\0A\00", [39 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.187 = internal global ptr @hclge_init_ae_dev._entry.185, section ".printk_index", align 4
@hclge_init_ae_dev._entry.188 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.189, ptr @.str.169, ptr @.str.2, i32 11348, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"tm schd init fail, ret =%d\0A\00", [36 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.190 = internal global ptr @hclge_init_ae_dev._entry.188, section ".printk_index", align 4
@hclge_init_ae_dev._entry.191 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.192, ptr @.str.169, ptr @.str.2, i32 11355, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"failed to init rss cfg, ret = %d\0A\00", [62 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.193 = internal global ptr @hclge_init_ae_dev._entry.191, section ".printk_index", align 4
@hclge_init_ae_dev._entry.194 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.169, ptr @.str.2, i32 11361, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Rss init fail, ret =%d\0A\00", [40 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.196 = internal global ptr @hclge_init_ae_dev._entry.194, section ".printk_index", align 4
@hclge_init_ae_dev._entry.197 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.169, ptr @.str.2, i32 11367, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"manager table init fail, ret =%d\0A\00", [62 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.199 = internal global ptr @hclge_init_ae_dev._entry.197, section ".printk_index", align 4
@hclge_init_ae_dev._entry.200 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.201, ptr @.str.169, ptr @.str.2, i32 11374, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"fd table init fail, ret=%d\0A\00", [36 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.202 = internal global ptr @hclge_init_ae_dev._entry.200, section ".printk_index", align 4
@hclge_init_ae_dev.__key.203 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.204 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"(&hdev->reset_timer)\00", [43 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev.__key.205 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.206 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"(work_completion)(&(&hdev->service_task)->work)\00", [48 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev.__key.207 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.208 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"&(&hdev->service_task)->timer\00", [34 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry.209 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.210, ptr @.str.169, ptr @.str.2, i32 11424, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s driver initialization finished.\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@hclge_init_ae_dev._entry_ptr.212 = internal global ptr @hclge_init_ae_dev._entry.209, section ".printk_index", align 4
@sema_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.213 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"(*sem).lock\00", [20 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"semaphore->lock\00", [16 x i8] zeroinitializer }, align 32
@hclge_pci_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.215, ptr @.str.216, ptr @.str.2, i32 11040, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"failed to enable PCI device\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"hclge_pci_init\00", [17 x i8] zeroinitializer }, align 32
@hclge_pci_init._entry_ptr = internal global ptr @hclge_pci_init._entry, section ".printk_index", align 4
@hclge_pci_init._entry.217 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.218, ptr @.str.216, ptr @.str.2, i32 11049, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"can't set consistent PCI DMA\00", [35 x i8] zeroinitializer }, align 32
@hclge_pci_init._entry_ptr.219 = internal global ptr @hclge_pci_init._entry.217, section ".printk_index", align 4
@hclge_pci_init._entry.220 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.221, ptr @.str.216, ptr @.str.2, i32 11052, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"set DMA mask to 32 bits\0A\00", [39 x i8] zeroinitializer }, align 32
@hclge_pci_init._entry_ptr.222 = internal global ptr @hclge_pci_init._entry.220, section ".printk_index", align 4
@hclge_pci_init._entry.223 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.224, ptr @.str.216, ptr @.str.2, i32 11057, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"PCI request regions failed %d\0A\00", [33 x i8] zeroinitializer }, align 32
@hclge_pci_init._entry_ptr.225 = internal global ptr @hclge_pci_init._entry.223, section ".printk_index", align 4
@hclge_pci_init._entry.226 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.227, ptr @.str.216, ptr @.str.2, i32 11065, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Can't map configuration register space\0A\00", [56 x i8] zeroinitializer }, align 32
@hclge_pci_init._entry_ptr.228 = internal global ptr @hclge_pci_init._entry.226, section ".printk_index", align 4
@hclge_dev_mem_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.230, ptr @.str.2, i32 11025, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"failed to map device memory\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_dev_mem_map\00", [46 x i8] zeroinitializer }, align 32
@hclge_dev_mem_map._entry_ptr = internal global ptr @hclge_dev_mem_map._entry, section ".printk_index", align 4
@hclge_clear_hw_resource._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.231, ptr @.str.232, ptr @.str.2, i32 11208, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"failed to clear hw resource, ret = %d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_clear_hw_resource\00", [40 x i8] zeroinitializer }, align 32
@hclge_clear_hw_resource._entry_ptr = internal global ptr @hclge_clear_hw_resource._entry, section ".printk_index", align 4
@hclge_get_cap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.234, ptr @.str.2, i32 1493, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"query function status error %d.\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"hclge_get_cap\00", [18 x i8] zeroinitializer }, align 32
@hclge_get_cap._entry_ptr = internal global ptr @hclge_get_cap._entry, section ".printk_index", align 4
@hclge_query_function_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.235, ptr @.str.236, ptr @.str.2, i32 854, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"query function status failed %d.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hclge_query_function_status\00", [36 x i8] zeroinitializer }, align 32
@hclge_query_function_status._entry_ptr = internal global ptr @hclge_query_function_status._entry, section ".printk_index", align 4
@hclge_query_pf_resource._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.237, ptr @.str.238, ptr @.str.2, i32 877, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"query pf resource failed %d.\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_query_pf_resource\00", [40 x i8] zeroinitializer }, align 32
@hclge_query_pf_resource._entry_ptr = internal global ptr @hclge_query_pf_resource._entry, section ".printk_index", align 4
@hclge_query_pf_resource._entry.239 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.240, ptr @.str.238, ptr @.str.2, i32 906, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"only %u msi resources available, not enough for pf(min:2).\0A\00", [36 x i8] zeroinitializer }, align 32
@hclge_query_pf_resource._entry_ptr.241 = internal global ptr @hclge_query_pf_resource._entry.239, section ".printk_index", align 4
@hclge_mac_query_reg_num._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.243, ptr @.str.2, i32 591, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"failed to query mac statistic reg number, ret = %d\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_mac_query_reg_num\00", [40 x i8] zeroinitializer }, align 32
@hclge_mac_query_reg_num._entry_ptr = internal global ptr @hclge_mac_query_reg_num._entry, section ".printk_index", align 4
@hclge_mac_query_reg_num._entry.244 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.245, ptr @.str.243, ptr @.str.2, i32 598, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"mac statistic reg number is invalid!\0A\00", [58 x i8] zeroinitializer }, align 32
@hclge_mac_query_reg_num._entry_ptr.246 = internal global ptr @hclge_mac_query_reg_num._entry.244, section ".printk_index", align 4
@__cpu_online_mask = external dso_local local_unnamed_addr global %struct.cpumask, align 4
@hclge_configure._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.247, ptr @.str.248, ptr @.str.2, i32 1586, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"failed to parse speed %u, ret = %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"hclge_configure\00", [16 x i8] zeroinitializer }, align 32
@hclge_configure._entry_ptr = internal global ptr @hclge_configure._entry, section ".printk_index", align 4
@hclge_get_cfg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.249, ptr @.str.250, ptr @.str.2, i32 1368, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"get config failed %d.\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"hclge_get_cfg\00", [18 x i8] zeroinitializer }, align 32
@hclge_get_cfg._entry_ptr = internal global ptr @hclge_get_cfg._entry, section ".printk_index", align 4
@hclge_init_tc_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.251, ptr @.str.252, ptr @.str.2, i32 1525, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TC num = %u.\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_init_tc_config\00", [43 x i8] zeroinitializer }, align 32
@hclge_init_tc_config._entry_ptr = internal global ptr @hclge_init_tc_config._entry, section ".printk_index", align 4
@hclge_init_kdump_kernel_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.253, ptr @.str.254, ptr @.str.2, i32 1510, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Running kdump kernel. Using minimal resources\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hclge_init_kdump_kernel_config\00", [33 x i8] zeroinitializer }, align 32
@hclge_init_kdump_kernel_config._entry_ptr = internal global ptr @hclge_init_kdump_kernel_config._entry, section ".printk_index", align 4
@elfcorehdr_addr = external dso_local local_unnamed_addr global i64, align 8
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@hclge_init_msi._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.255, ptr @.str.256, ptr @.str.2, i32 2524, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"failed(%d) to allocate MSI/MSI-X vectors\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"hclge_init_msi\00", [17 x i8] zeroinitializer }, align 32
@hclge_init_msi._entry_ptr = internal global ptr @hclge_init_msi._entry, section ".printk_index", align 4
@hclge_init_msi._entry.257 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.258, ptr @.str.256, ptr @.str.2, i32 2530, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"requested %u MSI/MSI-X, but allocated %d MSI/MSI-X\0A\00", [44 x i8] zeroinitializer }, align 32
@hclge_init_msi._entry_ptr.259 = internal global ptr @hclge_init_msi._entry.257, section ".printk_index", align 4
@.str.260 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s-misc-%s\00", [21 x i8] zeroinitializer }, align 32
@hclge_misc_irq_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.261, ptr @.str.262, ptr @.str.2, i32 3582, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"request misc irq(%d) fail\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_misc_irq_init\00", [44 x i8] zeroinitializer }, align 32
@hclge_misc_irq_init._entry_ptr = internal global ptr @hclge_misc_irq_init._entry, section ".printk_index", align 4
@hclge_misc_irq_handle._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.263, ptr @.str.264, ptr @.str.2, i32 3516, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"received unknown or unhandled event of vector0\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hclge_misc_irq_handle\00", [42 x i8] zeroinitializer }, align 32
@hclge_misc_irq_handle._entry_ptr = internal global ptr @hclge_misc_irq_handle._entry, section ".printk_index", align 4
@hclge_check_event_cause._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.265, ptr @.str.266, ptr @.str.2, i32 3406, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IMP reset interrupt\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_check_event_cause\00", [40 x i8] zeroinitializer }, align 32
@hclge_check_event_cause._entry_ptr = internal global ptr @hclge_check_event_cause._entry, section ".printk_index", align 4
@hclge_check_event_cause._entry.267 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.268, ptr @.str.266, ptr @.str.2, i32 3415, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"global reset interrupt\0A\00", [40 x i8] zeroinitializer }, align 32
@hclge_check_event_cause._entry_ptr.269 = internal global ptr @hclge_check_event_cause._entry.267, section ".printk_index", align 4
@hclge_check_event_cause._entry.270 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.271, ptr @.str.266, ptr @.str.2, i32 3444, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"INT status: CMDQ(%#x) HW errors(%#x) other(%#x)\0A\00", [47 x i8] zeroinitializer }, align 32
@hclge_check_event_cause._entry_ptr.272 = internal global ptr @hclge_check_event_cause._entry.270, section ".printk_index", align 4
@hclge_free_vector._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.273, ptr @.str.274, ptr @.str.2, i32 3535, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"vector(vector_id %d) has been freed.\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_free_vector\00", [46 x i8] zeroinitializer }, align 32
@hclge_free_vector._entry_ptr = internal global ptr @hclge_free_vector._entry, section ".printk_index", align 4
@hclge_alloc_vport._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.275, ptr @.str.276, ptr @.str.2, i32 1841, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"tqps(%u) is less than vports(%d)\00", [63 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_alloc_vport\00", [46 x i8] zeroinitializer }, align 32
@hclge_alloc_vport._entry_ptr = internal global ptr @hclge_alloc_vport._entry, section ".printk_index", align 4
@hclge_alloc_vport.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.277 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&vport->mac_list_lock\00", [42 x i8] zeroinitializer }, align 32
@hclge_alloc_vport._entry.278 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.279, ptr @.str.276, ptr @.str.2, i32 1880, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"vport setup failed for vport %d, %d\0A\00", [59 x i8] zeroinitializer }, align 32
@hclge_alloc_vport._entry_ptr.280 = internal global ptr @hclge_alloc_vport._entry.278, section ".printk_index", align 4
@hclge_vport_setup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.281, ptr @.str.282, ptr @.str.2, i32 1822, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"knic setup failed %d\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_vport_setup\00", [46 x i8] zeroinitializer }, align 32
@hclge_vport_setup._entry_ptr = internal global ptr @hclge_vport_setup._entry, section ".printk_index", align 4
@hclge_knic_setup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.283, ptr @.str.284, ptr @.str.2, i32 1760, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"fail to assign TQPs %d.\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hclge_knic_setup\00", [47 x i8] zeroinitializer }, align 32
@hclge_knic_setup._entry_ptr = internal global ptr @hclge_knic_setup._entry, section ".printk_index", align 4
@hclge_map_tqps_to_func._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.285, ptr @.str.286, ptr @.str.2, i32 1704, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"TQP map failed %d.\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_map_tqps_to_func\00", [41 x i8] zeroinitializer }, align 32
@hclge_map_tqps_to_func._entry_ptr = internal global ptr @hclge_map_tqps_to_func._entry, section ".printk_index", align 4
@hclge_init_umv_space._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.287, ptr @.str.288, ptr @.str.2, i32 8169, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"failed to alloc umv space, want %u, get %u\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_init_umv_space\00", [43 x i8] zeroinitializer }, align 32
@hclge_init_umv_space._entry_ptr = internal global ptr @hclge_init_umv_space._entry, section ".printk_index", align 4
@hclge_set_umv_space._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.289, ptr @.str.290, ptr @.str.2, i32 8148, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"failed to set umv space, ret = %d\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_set_umv_space\00", [44 x i8] zeroinitializer }, align 32
@hclge_set_umv_space._entry_ptr = internal global ptr @hclge_set_umv_space._entry, section ".printk_index", align 4
@hclge_mac_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.291, ptr @.str.292, ptr @.str.2, i32 2817, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"set mtu failed ret=%d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"hclge_mac_init\00", [17 x i8] zeroinitializer }, align 32
@hclge_mac_init._entry_ptr = internal global ptr @hclge_mac_init._entry, section ".printk_index", align 4
@hclge_mac_init._entry.293 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.294, ptr @.str.292, ptr @.str.2, i32 2828, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"allocate buffer fail, ret=%d\0A\00", [34 x i8] zeroinitializer }, align 32
@hclge_mac_init._entry_ptr.295 = internal global ptr @hclge_mac_init._entry.293, section ".printk_index", align 4
@hclge_set_autoneg_en._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.296, ptr @.str.297, ptr @.str.2, i32 2671, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"auto neg set cmd failed %d.\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_set_autoneg_en\00", [43 x i8] zeroinitializer }, align 32
@hclge_set_autoneg_en._entry_ptr = internal global ptr @hclge_set_autoneg_en._entry, section ".printk_index", align 4
@hclge_set_fec_hw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.298, ptr @.str.299, ptr @.str.2, i32 2751, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"set fec mode failed %d.\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hclge_set_fec_hw\00", [47 x i8] zeroinitializer }, align 32
@hclge_set_fec_hw._entry_ptr = internal global ptr @hclge_set_fec_hw._entry, section ".printk_index", align 4
@hclge_set_app_loopback._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.300, ptr @.str.301, ptr @.str.2, i32 7479, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"mac loopback get fail, ret =%d.\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_set_app_loopback\00", [41 x i8] zeroinitializer }, align 32
@hclge_set_app_loopback._entry_ptr = internal global ptr @hclge_set_app_loopback._entry, section ".printk_index", align 4
@hclge_set_app_loopback._entry.302 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.303, ptr @.str.301, ptr @.str.2, i32 7496, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"mac loopback set fail, ret =%d.\0A\00", [63 x i8] zeroinitializer }, align 32
@hclge_set_app_loopback._entry_ptr.304 = internal global ptr @hclge_set_app_loopback._entry.302, section ".printk_index", align 4
@hclge_cfg_common_loopback_cmd_send._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.305, ptr @.str.306, ptr @.str.2, i32 7523, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"unsupported loopback mode %d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"hclge_cfg_common_loopback_cmd_send\00", [61 x i8] zeroinitializer }, align 32
@hclge_cfg_common_loopback_cmd_send._entry_ptr = internal global ptr @hclge_cfg_common_loopback_cmd_send._entry, section ".printk_index", align 4
@hclge_cfg_common_loopback_cmd_send._entry.307 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.306, ptr @.str.2, i32 7535, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"failed to send loopback cmd, loop_mode = %d, ret = %d\0A\00", [41 x i8] zeroinitializer }, align 32
@hclge_cfg_common_loopback_cmd_send._entry_ptr.309 = internal global ptr @hclge_cfg_common_loopback_cmd_send._entry.307, section ".printk_index", align 4
@hclge_cfg_common_loopback_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.310, ptr @.str.311, ptr @.str.2, i32 7560, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.310 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"failed to get loopback done status, ret = %d\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hclge_cfg_common_loopback_wait\00", [33 x i8] zeroinitializer }, align 32
@hclge_cfg_common_loopback_wait._entry_ptr = internal global ptr @hclge_cfg_common_loopback_wait._entry, section ".printk_index", align 4
@hclge_cfg_common_loopback_wait._entry.312 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.313, ptr @.str.311, ptr @.str.2, i32 7567, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"wait loopback timeout\0A\00", [41 x i8] zeroinitializer }, align 32
@hclge_cfg_common_loopback_wait._entry_ptr.314 = internal global ptr @hclge_cfg_common_loopback_wait._entry.312, section ".printk_index", align 4
@hclge_cfg_common_loopback_wait._entry.315 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.316, ptr @.str.311, ptr @.str.2, i32 7570, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"failed to do loopback test\0A\00", [36 x i8] zeroinitializer }, align 32
@hclge_cfg_common_loopback_wait._entry_ptr.317 = internal global ptr @hclge_cfg_common_loopback_wait._entry.315, section ".printk_index", align 4
@hclge_config_gro._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.318, ptr @.str.319, ptr @.str.2, i32 1639, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"GRO hardware config cmd failed, ret = %d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hclge_config_gro\00", [47 x i8] zeroinitializer }, align 32
@hclge_config_gro._entry_ptr = internal global ptr @hclge_config_gro._entry, section ".printk_index", align 4
@hclge_set_vlan_protocol_type._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.320, ptr @.str.321, ptr @.str.2, i32 9711, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Send rxvlan protocol type command fail, ret =%d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hclge_set_vlan_protocol_type\00", [35 x i8] zeroinitializer }, align 32
@hclge_set_vlan_protocol_type._entry_ptr = internal global ptr @hclge_set_vlan_protocol_type._entry, section ".printk_index", align 4
@hclge_set_vlan_protocol_type._entry.322 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.323, ptr @.str.321, ptr @.str.2, i32 9725, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Send txvlan protocol type command fail, ret =%d\0A\00", [47 x i8] zeroinitializer }, align 32
@hclge_set_vlan_protocol_type._entry_ptr.324 = internal global ptr @hclge_set_vlan_protocol_type._entry.322, section ".printk_index", align 4
@hclge_mgr_table = internal constant { [1 x %struct.hclge_mac_mgr_tbl_entry_cmd], [40 x i8] } { [1 x %struct.hclge_mac_mgr_tbl_entry_cmd] [%struct.hclge_mac_mgr_tbl_entry_cmd { i8 1, i8 0, i16 0, [6 x i8] c"\01\80\C2\00\00\0E", i16 0, i16 -13176, i16 0, i16 0, i8 0, i8 0, i8 1, i8 0, [2 x i8] zeroinitializer }], [40 x i8] zeroinitializer }, align 32
@init_mgr_tbl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.325, ptr @.str.326, ptr @.str.2, i32 9034, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"add mac ethertype failed, ret =%d.\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"init_mgr_tbl\00", [19 x i8] zeroinitializer }, align 32
@init_mgr_tbl._entry_ptr = internal global ptr @init_mgr_tbl._entry, section ".printk_index", align 4
@hclge_add_mgr_tbl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.327, ptr @.str.328, ptr @.str.2, i32 9014, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"add mac ethertype failed for cmd_send, ret =%d.\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_add_mgr_tbl\00", [46 x i8] zeroinitializer }, align 32
@hclge_add_mgr_tbl._entry_ptr = internal global ptr @hclge_add_mgr_tbl._entry, section ".printk_index", align 4
@hclge_get_mac_ethertype_cmd_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.329, ptr @.str.330, ptr @.str.2, i32 8937, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"cmdq execute failed for get_mac_ethertype_cmd_status, status=%u.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"hclge_get_mac_ethertype_cmd_status\00", [61 x i8] zeroinitializer }, align 32
@hclge_get_mac_ethertype_cmd_status._entry_ptr = internal global ptr @hclge_get_mac_ethertype_cmd_status._entry, section ".printk_index", align 4
@hclge_get_mac_ethertype_cmd_status._entry.331 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.332, ptr @.str.330, ptr @.str.2, i32 8948, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"add mac ethertype failed for manager table overflow.\0A\00", [42 x i8] zeroinitializer }, align 32
@hclge_get_mac_ethertype_cmd_status._entry_ptr.333 = internal global ptr @hclge_get_mac_ethertype_cmd_status._entry.331, section ".printk_index", align 4
@hclge_get_mac_ethertype_cmd_status._entry.334 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.335, ptr @.str.330, ptr @.str.2, i32 8953, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"add mac ethertype failed for key conflict.\0A\00", [52 x i8] zeroinitializer }, align 32
@hclge_get_mac_ethertype_cmd_status._entry_ptr.336 = internal global ptr @hclge_get_mac_ethertype_cmd_status._entry.334, section ".printk_index", align 4
@hclge_get_mac_ethertype_cmd_status._entry.337 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.338, ptr @.str.330, ptr @.str.2, i32 8959, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"add mac ethertype failed for undefined, code=%u.\0A\00", [46 x i8] zeroinitializer }, align 32
@hclge_get_mac_ethertype_cmd_status._entry_ptr.339 = internal global ptr @hclge_get_mac_ethertype_cmd_status._entry.337, section ".printk_index", align 4
@hclge_init_fd_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.340, ptr @.str.341, ptr @.str.2, i32 5352, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Unsupported flow director mode %u\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_init_fd_config\00", [43 x i8] zeroinitializer }, align 32
@hclge_init_fd_config._entry_ptr = internal global ptr @hclge_init_fd_config._entry, section ".printk_index", align 4
@hclge_get_fd_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.342, ptr @.str.343, ptr @.str.2, i32 5252, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"get fd mode fail, ret=%d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_get_fd_mode\00", [46 x i8] zeroinitializer }, align 32
@hclge_get_fd_mode._entry_ptr = internal global ptr @hclge_get_fd_mode._entry, section ".printk_index", align 4
@hclge_get_fd_allocation._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.344, ptr @.str.345, ptr @.str.2, i32 5278, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"query fd allocation fail, ret=%d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_get_fd_allocation\00", [40 x i8] zeroinitializer }, align 32
@hclge_get_fd_allocation._entry_ptr = internal global ptr @hclge_get_fd_allocation._entry, section ".printk_index", align 4
@hclge_set_fd_key_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.346, ptr @.str.347, ptr @.str.2, i32 5313, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"set fd key fail, ret=%d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_set_fd_key_config\00", [40 x i8] zeroinitializer }, align 32
@hclge_set_fd_key_config._entry_ptr = internal global ptr @hclge_set_fd_key_config._entry, section ".printk_index", align 4
@hclge_reset_timer._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.348, ptr @.str.349, ptr @.str.2, i32 4297, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"triggering reset in reset timer\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_reset_timer\00", [46 x i8] zeroinitializer }, align 32
@hclge_reset_timer._entry_ptr = internal global ptr @hclge_reset_timer._entry, section ".printk_index", align 4
@hclge_misc_err_recovery._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.350, ptr @.str.351, ptr @.str.2, i32 4370, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"received msix interrupt 0x%x\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_misc_err_recovery\00", [40 x i8] zeroinitializer }, align 32
@hclge_misc_err_recovery._entry_ptr = internal global ptr @hclge_misc_err_recovery._entry, section ".printk_index", align 4
@hclge_reset_service_task._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.352, ptr @.str.353, ptr @.str.2, i32 4399, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"reset service task is scheduled after %ums on cpu%u!\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_reset_service_task\00", [39 x i8] zeroinitializer }, align 32
@hclge_reset_service_task._entry_ptr = internal global ptr @hclge_reset_service_task._entry, section ".printk_index", align 4
@hclge_notify_roce_client._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.354, ptr @.str.355, ptr @.str.2, i32 3631, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"notify roce client failed %d(%d)\00", [63 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_notify_roce_client\00", [39 x i8] zeroinitializer }, align 32
@hclge_notify_roce_client._entry_ptr = internal global ptr @hclge_notify_roce_client._entry, section ".printk_index", align 4
@hclge_reset_prepare_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.356, ptr @.str.357, ptr @.str.2, i32 3972, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"asserting function reset fail %d!\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_reset_prepare_wait\00", [39 x i8] zeroinitializer }, align 32
@hclge_reset_prepare_wait._entry_ptr = internal global ptr @hclge_reset_prepare_wait._entry, section ".printk_index", align 4
@hclge_reset_prepare_wait._entry.358 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.359, ptr @.str.357, ptr @.str.2, i32 4002, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"prepare wait ok\0A\00", [47 x i8] zeroinitializer }, align 32
@hclge_reset_prepare_wait._entry_ptr.360 = internal global ptr @hclge_reset_prepare_wait._entry.358, section ".printk_index", align 4
@hclge_set_all_vf_rst._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.361, ptr @.str.362, ptr @.str.2, i32 3709, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"set vf(%u) rst failed %d!\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_set_all_vf_rst\00", [43 x i8] zeroinitializer }, align 32
@hclge_set_all_vf_rst._entry_ptr = internal global ptr @hclge_set_all_vf_rst._entry, section ".printk_index", align 4
@hclge_set_all_vf_rst._entry.363 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.364, ptr @.str.362, ptr @.str.2, i32 3725, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"inform reset to vf(%u) failed %d!\0A\00", [61 x i8] zeroinitializer }, align 32
@hclge_set_all_vf_rst._entry_ptr.365 = internal global ptr @hclge_set_all_vf_rst._entry.363, section ".printk_index", align 4
@hclge_func_reset_sync_vf._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.366, ptr @.str.367, ptr @.str.2, i32 3773, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.366 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sync with VF fail %d!\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_func_reset_sync_vf\00", [39 x i8] zeroinitializer }, align 32
@hclge_func_reset_sync_vf._entry_ptr = internal global ptr @hclge_func_reset_sync_vf._entry, section ".printk_index", align 4
@hclge_func_reset_sync_vf._entry.368 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.369, ptr @.str.367, ptr @.str.2, i32 3782, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.369 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sync with VF timeout!\0A\00", [41 x i8] zeroinitializer }, align 32
@hclge_func_reset_sync_vf._entry_ptr.370 = internal global ptr @hclge_func_reset_sync_vf._entry.368, section ".printk_index", align 4
@hclge_reset_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.371, ptr @.str.372, ptr @.str.2, i32 3660, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.371 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Wait for unsupported reset type: %d\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hclge_reset_wait\00", [47 x i8] zeroinitializer }, align 32
@hclge_reset_wait._entry_ptr = internal global ptr @hclge_reset_wait._entry, section ".printk_index", align 4
@hclge_reset_wait._entry.373 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.374, ptr @.str.372, ptr @.str.2, i32 3673, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.374 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Wait for reset timeout: %d\0A\00", [36 x i8] zeroinitializer }, align 32
@hclge_reset_wait._entry_ptr.375 = internal global ptr @hclge_reset_wait._entry.373, section ".printk_index", align 4
@hclge_reset_ae_dev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.376, ptr @.str.377, ptr @.str.2, i32 11692, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Cmd queue init failed\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.377 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_reset_ae_dev\00", [45 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr = internal global ptr @hclge_reset_ae_dev._entry, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.378 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.379, ptr @.str.377, ptr @.str.2, i32 11698, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Map tqp error, ret = %d.\0A\00", [38 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.380 = internal global ptr @hclge_reset_ae_dev._entry.378, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.381 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.377, ptr @.str.2, i32 11704, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.382 = internal global ptr @hclge_reset_ae_dev._entry.381, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.383 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.384, ptr @.str.377, ptr @.str.2, i32 11711, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"failed to init tp port, ret = %d\0A\00", [62 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.385 = internal global ptr @hclge_reset_ae_dev._entry.383, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.386 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.377, ptr @.str.2, i32 11717, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.387 = internal global ptr @hclge_reset_ae_dev._entry.386, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.388 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.186, ptr @.str.377, ptr @.str.2, i32 11727, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.389 = internal global ptr @hclge_reset_ae_dev._entry.388, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.390 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.391, ptr @.str.377, ptr @.str.2, i32 11733, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"tm init hw fail, ret =%d\0A\00", [38 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.392 = internal global ptr @hclge_reset_ae_dev._entry.390, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.393 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.377, ptr @.str.2, i32 11739, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.394 = internal global ptr @hclge_reset_ae_dev._entry.393, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.395 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.396, ptr @.str.377, ptr @.str.2, i32 11746, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.396 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"failed to reinit manager table, ret = %d\0A\00", [54 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.397 = internal global ptr @hclge_reset_ae_dev._entry.395, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.398 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.201, ptr @.str.377, ptr @.str.2, i32 11752, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.399 = internal global ptr @hclge_reset_ae_dev._entry.398, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.400 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.401, ptr @.str.377, ptr @.str.2, i32 11773, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"fail(%d) to re-enable NIC hw error interrupts\0A\00", [49 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.402 = internal global ptr @hclge_reset_ae_dev._entry.400, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.403 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.404, ptr @.str.377, ptr @.str.2, i32 11782, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"fail(%d) to re-enable roce ras interrupts\0A\00", [53 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.405 = internal global ptr @hclge_reset_ae_dev._entry.403, section ".printk_index", align 4
@hclge_reset_ae_dev._entry.406 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.407, ptr @.str.377, ptr @.str.2, i32 11799, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Reset done, %s driver initialization finished.\0A\00", [48 x i8] zeroinitializer }, align 32
@hclge_reset_ae_dev._entry_ptr.408 = internal global ptr @hclge_reset_ae_dev._entry.406, section ".printk_index", align 4
@hclge_set_vf_spoofchk_hw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.409, ptr @.str.410, ptr @.str.2, i32 11477, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Set vf %d mac spoof check %s failed, ret=%d\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_set_vf_spoofchk_hw\00", [39 x i8] zeroinitializer }, align 32
@hclge_set_vf_spoofchk_hw._entry_ptr = internal global ptr @hclge_set_vf_spoofchk_hw._entry, section ".printk_index", align 4
@.str.411 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"on\00", [29 x i8] zeroinitializer }, align 32
@.str.412 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"off\00", [28 x i8] zeroinitializer }, align 32
@hclge_set_vf_spoofchk_hw._entry.413 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.414, ptr @.str.410, ptr @.str.2, i32 11485, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.414 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Set vf %d vlan spoof check %s failed, ret=%d\0A\00", [50 x i8] zeroinitializer }, align 32
@hclge_set_vf_spoofchk_hw._entry_ptr.415 = internal global ptr @hclge_set_vf_spoofchk_hw._entry.413, section ".printk_index", align 4
@hclge_config_switch_param._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.416, ptr @.str.417, ptr @.str.2, i32 7393, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"read mac vlan switch parameter fail, ret = %d\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.417 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_config_switch_param\00", [38 x i8] zeroinitializer }, align 32
@hclge_config_switch_param._entry_ptr = internal global ptr @hclge_config_switch_param._entry, section ".printk_index", align 4
@hclge_config_switch_param._entry.418 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.419, ptr @.str.417, ptr @.str.2, i32 7405, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.419 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"set mac vlan switch parameter fail, ret = %d\0A\00", [50 x i8] zeroinitializer }, align 32
@hclge_config_switch_param._entry_ptr.420 = internal global ptr @hclge_config_switch_param._entry.418, section ".printk_index", align 4
@hclge_resume_vf_rate._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.421, ptr @.str.422, ptr @.str.2, i32 11650, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"vf%d failed to resume tx_rate:%u, ret=%d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.422 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_resume_vf_rate\00", [43 x i8] zeroinitializer }, align 32
@hclge_resume_vf_rate._entry_ptr = internal global ptr @hclge_resume_vf_rate._entry, section ".printk_index", align 4
@hclge_get_vf_vport._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.423, ptr @.str.424, ptr @.str.2, i32 3322, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.423 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"SRIOV is disabled, can not get vport(%d) info.\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.424 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_get_vf_vport\00", [45 x i8] zeroinitializer }, align 32
@hclge_get_vf_vport._entry_ptr = internal global ptr @hclge_get_vf_vport._entry, section ".printk_index", align 4
@hclge_get_vf_vport._entry.425 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.426, ptr @.str.424, ptr @.str.2, i32 3329, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.426 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"vf id(%d) is out of range(0 <= vfid < %d)\0A\00", [53 x i8] zeroinitializer }, align 32
@hclge_get_vf_vport._entry_ptr.427 = internal global ptr @hclge_get_vf_vport._entry.425, section ".printk_index", align 4
@hclge_set_rst_done._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.428, ptr @.str.429, ptr @.str.2, i32 4098, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.428 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"current firmware does not support command(0x%x)!\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.429 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_set_rst_done\00", [45 x i8] zeroinitializer }, align 32
@hclge_set_rst_done._entry_ptr = internal global ptr @hclge_set_rst_done._entry, section ".printk_index", align 4
@hclge_set_rst_done._entry.430 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.431, ptr @.str.429, ptr @.str.2, i32 4102, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.431 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"assert PF reset done fail %d!\0A\00", [33 x i8] zeroinitializer }, align 32
@hclge_set_rst_done._entry_ptr.432 = internal global ptr @hclge_set_rst_done._entry.430, section ".printk_index", align 4
@hclge_reset_err_handle._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.433, ptr @.str.434, ptr @.str.2, i32 4028, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.433 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Reset pending %lu\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.434 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_reset_err_handle\00", [41 x i8] zeroinitializer }, align 32
@hclge_reset_err_handle._entry_ptr = internal global ptr @hclge_reset_err_handle._entry, section ".printk_index", align 4
@hclge_reset_err_handle._entry.435 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.436, ptr @.str.434, ptr @.str.2, i32 4033, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.436 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"reset failed because new reset interrupt\0A\00", [54 x i8] zeroinitializer }, align 32
@hclge_reset_err_handle._entry_ptr.437 = internal global ptr @hclge_reset_err_handle._entry.435, section ".printk_index", align 4
@hclge_reset_err_handle._entry.438 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.439, ptr @.str.434, ptr @.str.2, i32 4041, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.439 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"re-schedule reset task(%u)\0A\00", [36 x i8] zeroinitializer }, align 32
@hclge_reset_err_handle._entry_ptr.440 = internal global ptr @hclge_reset_err_handle._entry.438, section ".printk_index", align 4
@hclge_reset_err_handle._entry.441 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.442, ptr @.str.434, ptr @.str.2, i32 4050, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.442 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Reset fail!\0A\00", [19 x i8] zeroinitializer }, align 32
@hclge_reset_err_handle._entry_ptr.443 = internal global ptr @hclge_reset_err_handle._entry.441, section ".printk_index", align 4
@hclge_show_rst_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.444, ptr @.str.445, ptr @.str.2, i32 4017, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.444 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"dump reset info:\0A%s\00", [44 x i8] zeroinitializer }, align 32
@.str.445 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_show_rst_info\00", [44 x i8] zeroinitializer }, align 32
@hclge_show_rst_info._entry_ptr = internal global ptr @hclge_show_rst_info._entry, section ".printk_index", align 4
@hclge_do_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.446, ptr @.str.447, ptr @.str.2, i32 3840, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.446 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hardware reset not finish\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.447 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"hclge_do_reset\00", [17 x i8] zeroinitializer }, align 32
@hclge_do_reset._entry_ptr = internal global ptr @hclge_do_reset._entry, section ".printk_index", align 4
@hclge_do_reset._entry.448 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.449, ptr @.str.447, ptr @.str.2, i32 3843, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"func_rst_reg:0x%x, global_rst_reg:0x%x\0A\00", [56 x i8] zeroinitializer }, align 32
@hclge_do_reset._entry_ptr.450 = internal global ptr @hclge_do_reset._entry.448, section ".printk_index", align 4
@hclge_do_reset._entry.451 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.452, ptr @.str.447, ptr @.str.2, i32 3849, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IMP reset requested\0A\00", [43 x i8] zeroinitializer }, align 32
@hclge_do_reset._entry_ptr.453 = internal global ptr @hclge_do_reset._entry.451, section ".printk_index", align 4
@hclge_do_reset._entry.454 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.455, ptr @.str.447, ptr @.str.2, i32 3855, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.455 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"global reset requested\0A\00", [40 x i8] zeroinitializer }, align 32
@hclge_do_reset._entry_ptr.456 = internal global ptr @hclge_do_reset._entry.454, section ".printk_index", align 4
@hclge_do_reset._entry.457 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.458, ptr @.str.447, ptr @.str.2, i32 3861, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.458 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"PF reset requested\0A\00", [44 x i8] zeroinitializer }, align 32
@hclge_do_reset._entry_ptr.459 = internal global ptr @hclge_do_reset._entry.457, section ".printk_index", align 4
@hclge_do_reset._entry.460 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.461, ptr @.str.447, ptr @.str.2, i32 3868, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.461 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"unsupported reset type: %d\0A\00", [36 x i8] zeroinitializer }, align 32
@hclge_do_reset._entry_ptr.462 = internal global ptr @hclge_do_reset._entry.460, section ".printk_index", align 4
@hclge_mailbox_service_task._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.463, ptr @.str.464, ptr @.str.2, i32 3743, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.463 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"mbx service task is scheduled after %ums on cpu%u!\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.464 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_mailbox_service_task\00", [37 x i8] zeroinitializer }, align 32
@hclge_mailbox_service_task._entry_ptr = internal global ptr @hclge_mailbox_service_task._entry, section ".printk_index", align 4
@hclge_get_mac_link_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.465, ptr @.str.466, ptr @.str.2, i32 2876, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.465 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"get link status cmd failed %d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.466 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_get_mac_link_status\00", [38 x i8] zeroinitializer }, align 32
@hclge_get_mac_link_status._entry_ptr = internal global ptr @hclge_get_mac_link_status._entry, section ".printk_index", align 4
@hclge_push_link_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.467, ptr @.str.468, ptr @.str.2, i32 2919, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"failed to push link status to vf%u, ret = %d\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.468 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_push_link_status\00", [41 x i8] zeroinitializer }, align 32
@hclge_push_link_status._entry_ptr = internal global ptr @hclge_push_link_status._entry, section ".printk_index", align 4
@hclge_fd_tcam_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.469, ptr @.str.470, ptr @.str.2, i32 5429, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"config tcam key fail, ret=%d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.470 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_fd_tcam_config\00", [43 x i8] zeroinitializer }, align 32
@hclge_fd_tcam_config._entry_ptr = internal global ptr @hclge_fd_tcam_config._entry, section ".printk_index", align 4
@hclge_fd_set_user_def_cmd._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.471, ptr @.str.472, ptr @.str.2, i32 5105, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.471 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"failed to set fd user def data, ret= %d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_fd_set_user_def_cmd\00", [38 x i8] zeroinitializer }, align 32
@hclge_fd_set_user_def_cmd._entry_ptr = internal global ptr @hclge_fd_set_user_def_cmd._entry, section ".printk_index", align 4
@hclge_fd_ad_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.473, ptr @.str.474, ptr @.str.2, i32 5475, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.473 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"fd ad config fail, ret=%d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.474 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_fd_ad_config\00", [45 x i8] zeroinitializer }, align 32
@hclge_fd_ad_config._entry_ptr = internal global ptr @hclge_fd_ad_config._entry, section ".printk_index", align 4
@tuple_key_info = internal constant { [30 x %struct.key_info], [96 x i8] } { [30 x %struct.key_info] [%struct.key_info { i8 0, i8 48, i32 3, i32 -1, i32 -1 }, %struct.key_info { i8 1, i8 48, i32 3, i32 -1, i32 -1 }, %struct.key_info { i8 2, i8 16, i32 1, i32 -1, i32 -1 }, %struct.key_info { i8 3, i8 16, i32 1, i32 -1, i32 -1 }, %struct.key_info { i8 4, i8 16, i32 1, i32 -1, i32 -1 }, %struct.key_info { i8 5, i8 16, i32 1, i32 -1, i32 -1 }, %struct.key_info { i8 6, i8 8, i32 0, i32 -1, i32 -1 }, %struct.key_info { i8 7, i8 8, i32 0, i32 -1, i32 -1 }, %struct.key_info { i8 8, i8 32, i32 4, i32 -1, i32 -1 }, %struct.key_info { i8 9, i8 32, i32 4, i32 -1, i32 -1 }, %struct.key_info { i8 10, i8 16, i32 1, i32 -1, i32 -1 }, %struct.key_info { i8 11, i8 16, i32 1, i32 -1, i32 -1 }, %struct.key_info { i8 12, i8 16, i32 1, i32 -1, i32 -1 }, %struct.key_info { i8 13, i8 32, i32 2, i32 -1, i32 -1 }, %struct.key_info { i8 14, i8 24, i32 5, i32 -1, i32 -1 }, %struct.key_info { i8 15, i8 8, i32 0, i32 -1, i32 -1 }, %struct.key_info { i8 16, i8 48, i32 3, i32 14, i32 78 }, %struct.key_info { i8 17, i8 48, i32 3, i32 8, i32 72 }, %struct.key_info { i8 18, i8 16, i32 1, i32 56, i32 120 }, %struct.key_info { i8 19, i8 16, i32 1, i32 -1, i32 -1 }, %struct.key_info { i8 20, i8 16, i32 1, i32 58, i32 122 }, %struct.key_info { i8 21, i8 16, i32 1, i32 60, i32 124 }, %struct.key_info { i8 22, i8 8, i32 0, i32 68, i32 132 }, %struct.key_info { i8 23, i8 8, i32 0, i32 69, i32 133 }, %struct.key_info { i8 24, i8 32, i32 4, i32 20, i32 84 }, %struct.key_info { i8 25, i8 32, i32 4, i32 36, i32 100 }, %struct.key_info { i8 26, i8 16, i32 1, i32 62, i32 126 }, %struct.key_info { i8 27, i8 16, i32 1, i32 52, i32 116 }, %struct.key_info { i8 28, i8 16, i32 1, i32 54, i32 118 }, %struct.key_info { i8 29, i8 32, i32 2, i32 64, i32 128 }], [96 x i8] zeroinitializer }, align 32
@hclge_config_key._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.475, ptr @.str.476, ptr @.str.2, i32 5647, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.475 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"fd key_y config fail, loc=%u, ret=%d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.476 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hclge_config_key\00", [47 x i8] zeroinitializer }, align 32
@hclge_config_key._entry_ptr = internal global ptr @hclge_config_key._entry, section ".printk_index", align 4
@hclge_config_key._entry.477 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.478, ptr @.str.476, ptr @.str.2, i32 5656, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.478 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"fd key_x config fail, loc=%u, ret=%d\0A\00", [58 x i8] zeroinitializer }, align 32
@hclge_config_key._entry_ptr.479 = internal global ptr @hclge_config_key._entry.477, section ".printk_index", align 4
@meta_data_key_info = internal constant { [8 x %struct.key_info], [32 x i8] } { [8 x %struct.key_info] [%struct.key_info { i8 0, i8 6, i32 0, i32 0, i32 0 }, %struct.key_info { i8 1, i8 1, i32 0, i32 0, i32 0 }, %struct.key_info { i8 2, i8 1, i32 0, i32 0, i32 0 }, %struct.key_info { i8 3, i8 5, i32 0, i32 0, i32 0 }, %struct.key_info { i8 4, i8 2, i32 0, i32 0, i32 0 }, %struct.key_info { i8 5, i8 12, i32 0, i32 0, i32 0 }, %struct.key_info { i8 6, i8 12, i32 0, i32 0, i32 0 }, %struct.key_info { i8 7, i8 1, i32 0, i32 0, i32 0 }], [32 x i8] zeroinitializer }, align 32
@hclge_update_stats_for_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.480, ptr @.str.481, ptr @.str.2, i32 678, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.480 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Update TQPS stats fail, status = %d.\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_update_stats_for_all\00", [37 x i8] zeroinitializer }, align 32
@hclge_update_stats_for_all._entry_ptr = internal global ptr @hclge_update_stats_for_all._entry, section ".printk_index", align 4
@hclge_update_stats_for_all._entry.482 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.483, ptr @.str.481, ptr @.str.2, i32 685, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.483 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Update MAC stats fail, status = %d.\0A\00", [59 x i8] zeroinitializer }, align 32
@hclge_update_stats_for_all._entry_ptr.484 = internal global ptr @hclge_update_stats_for_all._entry.482, section ".printk_index", align 4
@hclge_get_sfp_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.485, ptr @.str.486, ptr @.str.2, i32 3097, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.485 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"IMP does not support get SFP info %d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.486 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_get_sfp_info\00", [45 x i8] zeroinitializer }, align 32
@hclge_get_sfp_info._entry_ptr = internal global ptr @hclge_get_sfp_info._entry, section ".printk_index", align 4
@hclge_get_sfp_info._entry.487 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.488, ptr @.str.486, ptr @.str.2, i32 3100, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.488 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"get sfp info failed %d\0A\00", [40 x i8] zeroinitializer }, align 32
@hclge_get_sfp_info._entry_ptr.489 = internal global ptr @hclge_get_sfp_info._entry.487, section ".printk_index", align 4
@hclge_get_sfp_speed._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.490, ptr @.str.491, ptr @.str.2, i32 3071, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.490 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"IMP do not support get SFP speed %d\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.491 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_get_sfp_speed\00", [44 x i8] zeroinitializer }, align 32
@hclge_get_sfp_speed._entry_ptr = internal global ptr @hclge_get_sfp_speed._entry, section ".printk_index", align 4
@hclge_get_sfp_speed._entry.492 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.493, ptr @.str.491, ptr @.str.2, i32 3074, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.493 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"get sfp speed failed %d\0A\00", [39 x i8] zeroinitializer }, align 32
@hclge_get_sfp_speed._entry_ptr.494 = internal global ptr @hclge_get_sfp_speed._entry.492, section ".printk_index", align 4
@speed_bit_map = internal constant { [9 x %struct.hclge_speed_bit_map], [56 x i8] } { [9 x %struct.hclge_speed_bit_map] [%struct.hclge_speed_bit_map { i32 10, i32 128 }, %struct.hclge_speed_bit_map { i32 100, i32 64 }, %struct.hclge_speed_bit_map { i32 1000, i32 1 }, %struct.hclge_speed_bit_map { i32 10000, i32 2 }, %struct.hclge_speed_bit_map { i32 25000, i32 4 }, %struct.hclge_speed_bit_map { i32 40000, i32 32 }, %struct.hclge_speed_bit_map { i32 50000, i32 8 }, %struct.hclge_speed_bit_map { i32 100000, i32 16 }, %struct.hclge_speed_bit_map { i32 200000, i32 256 }], [56 x i8] zeroinitializer }, align 32
@hclge_sync_vlan_fltr_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.495, ptr @.str.496, ptr @.str.2, i32 10291, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.495 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"failed to sync vlan filter state for vport%u, ret = %d\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.496 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_sync_vlan_fltr_state\00", [37 x i8] zeroinitializer }, align 32
@hclge_sync_vlan_fltr_state._entry_ptr = internal global ptr @hclge_sync_vlan_fltr_state._entry, section ".printk_index", align 4
@hclge_clear_resetting_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.497, ptr @.str.498, ptr @.str.2, i32 11188, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.497 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"clear vport(%u) rst failed %d!\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.498 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hclge_clear_resetting_state\00", [36 x i8] zeroinitializer }, align 32
@hclge_clear_resetting_state._entry_ptr = internal global ptr @hclge_clear_resetting_state._entry, section ".printk_index", align 4
@hclge_reset_vf_rate._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.499, ptr @.str.500, ptr @.str.2, i32 11581, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.499 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"vf%d failed to reset to default, ret=%d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.500 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_reset_vf_rate\00", [44 x i8] zeroinitializer }, align 32
@hclge_reset_vf_rate._entry_ptr = internal global ptr @hclge_reset_vf_rate._entry, section ".printk_index", align 4
@hclge_clear_vf_vlan._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.501, ptr @.str.502, ptr @.str.2, i32 10221, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.501 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"failed to clear vf vlan for vf%d, ret = %d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.502 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_clear_vf_vlan\00", [44 x i8] zeroinitializer }, align 32
@hclge_clear_vf_vlan._entry_ptr = internal global ptr @hclge_clear_vf_vlan._entry, section ".printk_index", align 4
@hclge_uninit_vport_mac_list._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.503, ptr @.str.504, ptr @.str.2, i32 8904, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.503 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"uninit %s mac list for vport %u not completely.\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.504 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hclge_uninit_vport_mac_list\00", [36 x i8] zeroinitializer }, align 32
@hclge_uninit_vport_mac_list._entry_ptr = internal global ptr @hclge_uninit_vport_mac_list._entry, section ".printk_index", align 4
@.str.505 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"uc\00", [29 x i8] zeroinitializer }, align 32
@.str.506 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"mc\00", [29 x i8] zeroinitializer }, align 32
@hclge_reset_prepare_general._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.507, ptr @.str.508, ptr @.str.2, i32 11145, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.507 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"failed to prepare to reset, ret=%d, reset_pending:0x%lx, retry_cnt:%d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.508 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hclge_reset_prepare_general\00", [36 x i8] zeroinitializer }, align 32
@hclge_reset_prepare_general._entry_ptr = internal global ptr @hclge_reset_prepare_general._entry, section ".printk_index", align 4
@hclge_reset_done._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.509, ptr @.str.510, ptr @.str.2, i32 11168, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.509 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"fail to rebuild, ret=%d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.510 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hclge_reset_done\00", [47 x i8] zeroinitializer }, align 32
@hclge_reset_done._entry_ptr = internal global ptr @hclge_reset_done._entry, section ".printk_index", align 4
@hclge_init_nic_client_instance._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.511, ptr @.str.512, ptr @.str.2, i32 10862, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.511 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"fail(%d) to enable hw error interrupts\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.512 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hclge_init_nic_client_instance\00", [33 x i8] zeroinitializer }, align 32
@hclge_init_nic_client_instance._entry_ptr = internal global ptr @hclge_init_nic_client_instance._entry, section ".printk_index", align 4
@hclge_info_show._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.513, ptr @.str.514, ptr @.str.2, i32 10816, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.513 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"PF info begin:\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.514 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"hclge_info_show\00", [16 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr = internal global ptr @hclge_info_show._entry, section ".printk_index", align 4
@hclge_info_show._entry.515 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.516, ptr @.str.514, ptr @.str.2, i32 10818, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.516 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Task queue pairs numbers: %u\0A\00", [34 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.517 = internal global ptr @hclge_info_show._entry.515, section ".printk_index", align 4
@hclge_info_show._entry.518 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.519, ptr @.str.514, ptr @.str.2, i32 10819, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.519 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Desc num per TX queue: %u\0A\00", [37 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.520 = internal global ptr @hclge_info_show._entry.518, section ".printk_index", align 4
@hclge_info_show._entry.521 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.522, ptr @.str.514, ptr @.str.2, i32 10820, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.522 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Desc num per RX queue: %u\0A\00", [37 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.523 = internal global ptr @hclge_info_show._entry.521, section ".printk_index", align 4
@hclge_info_show._entry.524 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.525, ptr @.str.514, ptr @.str.2, i32 10821, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.525 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Numbers of vports: %u\0A\00", [41 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.526 = internal global ptr @hclge_info_show._entry.524, section ".printk_index", align 4
@hclge_info_show._entry.527 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.528, ptr @.str.514, ptr @.str.2, i32 10822, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.528 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Numbers of VF for this PF: %u\0A\00", [33 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.529 = internal global ptr @hclge_info_show._entry.527, section ".printk_index", align 4
@hclge_info_show._entry.530 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.531, ptr @.str.514, ptr @.str.2, i32 10823, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.531 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"HW tc map: 0x%x\0A\00", [47 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.532 = internal global ptr @hclge_info_show._entry.530, section ".printk_index", align 4
@hclge_info_show._entry.533 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.534, ptr @.str.514, ptr @.str.2, i32 10824, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.534 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Total buffer size for TX/RX: %u\0A\00", [63 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.535 = internal global ptr @hclge_info_show._entry.533, section ".printk_index", align 4
@hclge_info_show._entry.536 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.537, ptr @.str.514, ptr @.str.2, i32 10825, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.537 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"TX buffer size for each TC: %u\0A\00", [32 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.538 = internal global ptr @hclge_info_show._entry.536, section ".printk_index", align 4
@hclge_info_show._entry.539 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.540, ptr @.str.514, ptr @.str.2, i32 10826, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.540 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"DV buffer size for each TC: %u\0A\00", [32 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.541 = internal global ptr @hclge_info_show._entry.539, section ".printk_index", align 4
@hclge_info_show._entry.542 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.543, ptr @.str.514, ptr @.str.2, i32 10828, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.543 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"This is %s PF\0A\00", [17 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.544 = internal global ptr @hclge_info_show._entry.542, section ".printk_index", align 4
@.str.545 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"main\00", [27 x i8] zeroinitializer }, align 32
@.str.546 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"not main\00", [23 x i8] zeroinitializer }, align 32
@hclge_info_show._entry.547 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.548, ptr @.str.514, ptr @.str.2, i32 10830, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.548 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"DCB %s\0A\00", [24 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.549 = internal global ptr @hclge_info_show._entry.547, section ".printk_index", align 4
@.str.550 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"enable\00", [25 x i8] zeroinitializer }, align 32
@.str.551 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"disable\00", [24 x i8] zeroinitializer }, align 32
@hclge_info_show._entry.552 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.553, ptr @.str.514, ptr @.str.2, i32 10832, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.553 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"MQPRIO %s\0A\00", [21 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.554 = internal global ptr @hclge_info_show._entry.552, section ".printk_index", align 4
@hclge_info_show._entry.555 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.556, ptr @.str.514, ptr @.str.2, i32 10834, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.556 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Default tx spare buffer size: %u\0A\00", [62 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.557 = internal global ptr @hclge_info_show._entry.555, section ".printk_index", align 4
@hclge_info_show._entry.558 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.559, ptr @.str.514, ptr @.str.2, i32 10836, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.559 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"PF info end.\0A\00", [18 x i8] zeroinitializer }, align 32
@hclge_info_show._entry_ptr.560 = internal global ptr @hclge_info_show._entry.558, section ".printk_index", align 4
@hclge_init_roce_client_instance._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.561, ptr @.str.562, ptr @.str.2, i32 10916, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.561 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"fail(%d) to enable roce ras interrupts\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.562 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hclge_init_roce_client_instance\00", [32 x i8] zeroinitializer }, align 32
@hclge_init_roce_client_instance._entry_ptr = internal global ptr @hclge_init_roce_client_instance._entry, section ".printk_index", align 4
@hclge_cfg_mac_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.563, ptr @.str.564, ptr @.str.2, i32 7370, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.563 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"mac enable fail, ret =%d.\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.564 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_cfg_mac_mode\00", [45 x i8] zeroinitializer }, align 32
@hclge_cfg_mac_mode._entry_ptr = internal global ptr @hclge_cfg_mac_mode._entry, section ".printk_index", align 4
@hclge_set_fec._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.565, ptr @.str.566, ptr @.str.2, i32 2764, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.565 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"unsupported fec mode\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.566 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"hclge_set_fec\00", [18 x i8] zeroinitializer }, align 32
@hclge_set_fec._entry_ptr = internal global ptr @hclge_set_fec._entry, section ".printk_index", align 4
@hclge_set_loopback._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.567, ptr @.str.568, ptr @.str.2, i32 7736, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.567 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"loop_mode %d is not supported\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.568 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_set_loopback\00", [45 x i8] zeroinitializer }, align 32
@hclge_set_loopback._entry_ptr = internal global ptr @hclge_set_loopback._entry, section ".printk_index", align 4
@hclge_set_loopback._entry.569 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.570, ptr @.str.568, ptr @.str.2, i32 7746, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.570 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"failed to %s tqp in loopback, ret = %d\0A\00", [56 x i8] zeroinitializer }, align 32
@hclge_set_loopback._entry_ptr.571 = internal global ptr @hclge_set_loopback._entry.569, section ".printk_index", align 4
@hclge_set_common_loopback._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.572, ptr @.str.573, ptr @.str.2, i32 7603, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.572 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"serdes loopback config mac mode timeout\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.573 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_set_common_loopback\00", [38 x i8] zeroinitializer }, align 32
@hclge_set_common_loopback._entry_ptr = internal global ptr @hclge_set_common_loopback._entry, section ".printk_index", align 4
@hclge_phy_link_status_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.574, ptr @.str.575, ptr @.str.2, i32 7422, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.574 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"phy update link status fail, ret = %d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.575 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_phy_link_status_wait\00", [37 x i8] zeroinitializer }, align 32
@hclge_phy_link_status_wait._entry_ptr = internal global ptr @hclge_phy_link_status_wait._entry, section ".printk_index", align 4
@hclge_set_phy_loopback._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.576, ptr @.str.577, ptr @.str.2, i32 7656, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.576 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"set phy loopback fail, ret = %d\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.577 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_set_phy_loopback\00", [41 x i8] zeroinitializer }, align 32
@hclge_set_phy_loopback._entry_ptr = internal global ptr @hclge_set_phy_loopback._entry, section ".printk_index", align 4
@hclge_set_phy_loopback._entry.578 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.579, ptr @.str.577, ptr @.str.2, i32 7665, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.579 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"phy loopback config mac mode timeout\0A\00", [58 x i8] zeroinitializer }, align 32
@hclge_set_phy_loopback._entry_ptr.580 = internal global ptr @hclge_set_phy_loopback._entry.578, section ".printk_index", align 4
@hclge_set_pauseparam._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.581, ptr @.str.582, ptr @.str.2, i32 10705, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.581 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"To change autoneg please use: ethtool -s <dev> autoneg <on|off>\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.582 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_set_pauseparam\00", [43 x i8] zeroinitializer }, align 32
@hclge_set_pauseparam._entry_ptr = internal global ptr @hclge_set_pauseparam._entry, section ".printk_index", align 4
@hclge_set_pauseparam._entry.583 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.584, ptr @.str.582, ptr @.str.2, i32 10712, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.584 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"Priority flow control enabled. Cannot set link flow control.\0A\00", [34 x i8] zeroinitializer }, align 32
@hclge_set_pauseparam._entry_ptr.585 = internal global ptr @hclge_set_pauseparam._entry.583, section ".printk_index", align 4
@hclge_set_autoneg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.586, ptr @.str.587, ptr @.str.2, i32 2684, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.586 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"autoneg is not supported by current port\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.587 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_set_autoneg\00", [46 x i8] zeroinitializer }, align 32
@hclge_set_autoneg._entry_ptr = internal global ptr @hclge_set_autoneg._entry, section ".printk_index", align 4
@hclge_restart_autoneg.__UNIQUE_ID_ddebug533 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.38, ptr @.str.588, ptr @.str.2, ptr @.str.589, i8 2, i8 -90, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.588 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hclge_restart_autoneg\00", [42 x i8] zeroinitializer }, align 32
@.str.589 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"restart autoneg\0A\00", [47 x i8] zeroinitializer }, align 32
@hclge_set_mac_addr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.590, ptr @.str.591, ptr @.str.2, i32 9111, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.590 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"change uc mac err! invalid mac: %s.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.591 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_set_mac_addr\00", [45 x i8] zeroinitializer }, align 32
@hclge_set_mac_addr._entry_ptr = internal global ptr @hclge_set_mac_addr._entry, section ".printk_index", align 4
@hclge_set_mac_addr._entry.592 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.593, ptr @.str.591, ptr @.str.2, i32 9119, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.593 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"failed to configure mac pause address, ret = %d\0A\00", [47 x i8] zeroinitializer }, align 32
@hclge_set_mac_addr._entry_ptr.594 = internal global ptr @hclge_set_mac_addr._entry.592, section ".printk_index", align 4
@hclge_set_mac_addr._entry.595 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.596, ptr @.str.591, ptr @.str.2, i32 9132, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.596 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"failed to change the mac addr:%s, ret = %d\0A\00", [52 x i8] zeroinitializer }, align 32
@hclge_set_mac_addr._entry_ptr.597 = internal global ptr @hclge_set_mac_addr._entry.595, section ".printk_index", align 4
@hclge_update_stats._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.483, ptr @.str.598, ptr @.str.2, i32 702, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.598 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_update_stats\00", [45 x i8] zeroinitializer }, align 32
@hclge_update_stats._entry_ptr = internal global ptr @hclge_update_stats._entry, section ".printk_index", align 4
@hclge_update_stats._entry.599 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.480, ptr @.str.598, ptr @.str.2, i32 708, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@hclge_update_stats._entry_ptr.600 = internal global ptr @hclge_update_stats._entry.599, section ".printk_index", align 4
@g_mac_stats_string = internal constant { [102 x %struct.hclge_comm_stats_str], [1008 x i8] } { [102 x %struct.hclge_comm_stats_str] [%struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_mac_pause_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 0 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_mac_pause_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 8 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pause_xoff_time\00\00\00\00\00\00\00\00\00\00", i32 105, i32 824 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pause_xoff_time\00\00\00\00\00\00\00\00\00\00", i32 105, i32 832 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_control_pkt_num\00\00\00\00\00\00\00\00\00\00", i32 87, i32 680 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_control_pkt_num\00\00\00\00\00\00\00\00\00\00", i32 87, i32 688 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 664 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri0_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 24 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri1_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 32 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri2_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 40 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri3_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 48 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri4_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 56 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri5_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 64 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri6_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 72 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri7_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 80 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri0_xoff_time\00\00\00\00\00\00\00", i32 105, i32 696 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri1_xoff_time\00\00\00\00\00\00\00", i32 105, i32 704 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri2_xoff_time\00\00\00\00\00\00\00", i32 105, i32 712 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri3_xoff_time\00\00\00\00\00\00\00", i32 105, i32 720 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri4_xoff_time\00\00\00\00\00\00\00", i32 105, i32 728 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri5_xoff_time\00\00\00\00\00\00\00", i32 105, i32 736 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri6_xoff_time\00\00\00\00\00\00\00", i32 105, i32 744 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_pfc_pri7_xoff_time\00\00\00\00\00\00\00", i32 105, i32 752 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 672 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri0_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 88 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri1_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 96 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri2_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 104 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri3_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 112 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri4_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 120 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri5_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 128 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri6_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 136 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri7_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 144 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri0_xoff_time\00\00\00\00\00\00\00", i32 105, i32 760 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri1_xoff_time\00\00\00\00\00\00\00", i32 105, i32 768 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri2_xoff_time\00\00\00\00\00\00\00", i32 105, i32 776 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri3_xoff_time\00\00\00\00\00\00\00", i32 105, i32 784 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri4_xoff_time\00\00\00\00\00\00\00", i32 105, i32 792 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri5_xoff_time\00\00\00\00\00\00\00", i32 105, i32 800 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri6_xoff_time\00\00\00\00\00\00\00", i32 105, i32 808 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_pfc_pri7_xoff_time\00\00\00\00\00\00\00", i32 105, i32 816 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_total_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 152 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_total_oct_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 160 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_good_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 168 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_bad_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 176 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_good_oct_num\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 184 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_bad_oct_num\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 192 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_uni_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 200 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_multi_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 208 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_broad_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 216 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_undersize_pkt_num\00\00\00\00\00\00\00\00", i32 87, i32 224 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_oversize_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 232 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_64_oct_pkt_num\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 240 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_65_127_oct_pkt_num\00\00\00\00\00\00\00", i32 87, i32 248 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_128_255_oct_pkt_num\00\00\00\00\00\00", i32 87, i32 256 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_256_511_oct_pkt_num\00\00\00\00\00\00", i32 87, i32 264 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_512_1023_oct_pkt_num\00\00\00\00\00", i32 87, i32 272 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_1024_1518_oct_pkt_num\00\00\00\00", i32 87, i32 280 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_1519_2047_oct_pkt_num\00\00\00\00", i32 87, i32 288 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_2048_4095_oct_pkt_num\00\00\00\00", i32 87, i32 296 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_4096_8191_oct_pkt_num\00\00\00\00", i32 87, i32 304 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_8192_9216_oct_pkt_num\00\00\00\00", i32 87, i32 320 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_9217_12287_oct_pkt_num\00\00\00", i32 87, i32 328 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_12288_16383_oct_pkt_num\00\00", i32 87, i32 336 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_1519_max_good_pkt_num\00\00\00\00", i32 87, i32 344 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_1519_max_bad_pkt_num\00\00\00\00\00", i32 87, i32 352 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_total_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 360 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_total_oct_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 368 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_good_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 376 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_bad_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 384 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_good_oct_num\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 392 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_bad_oct_num\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 400 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_uni_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 408 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_multi_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 416 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_broad_pkt_num\00\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 424 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_undersize_pkt_num\00\00\00\00\00\00\00\00", i32 87, i32 432 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_oversize_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 440 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_64_oct_pkt_num\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 448 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_65_127_oct_pkt_num\00\00\00\00\00\00\00", i32 87, i32 456 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_128_255_oct_pkt_num\00\00\00\00\00\00", i32 87, i32 464 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_256_511_oct_pkt_num\00\00\00\00\00\00", i32 87, i32 472 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_512_1023_oct_pkt_num\00\00\00\00\00", i32 87, i32 480 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_1024_1518_oct_pkt_num\00\00\00\00", i32 87, i32 488 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_1519_2047_oct_pkt_num\00\00\00\00", i32 87, i32 496 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_2048_4095_oct_pkt_num\00\00\00\00", i32 87, i32 504 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_4096_8191_oct_pkt_num\00\00\00\00", i32 87, i32 512 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_8192_9216_oct_pkt_num\00\00\00\00", i32 87, i32 528 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_9217_12287_oct_pkt_num\00\00\00", i32 87, i32 536 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_12288_16383_oct_pkt_num\00\00", i32 87, i32 544 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_1519_max_good_pkt_num\00\00\00\00", i32 87, i32 552 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_1519_max_bad_pkt_num\00\00\00\00\00", i32 87, i32 560 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_fragment_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 568 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_undermin_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 576 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_jabber_pkt_num\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 584 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_err_all_pkt_num\00\00\00\00\00\00\00\00\00\00", i32 87, i32 592 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_from_app_good_pkt_num\00\00\00\00", i32 87, i32 600 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_tx_from_app_bad_pkt_num\00\00\00\00\00", i32 87, i32 608 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_fragment_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 616 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_undermin_pkt_num\00\00\00\00\00\00\00\00\00", i32 87, i32 624 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_jabber_pkt_num\00\00\00\00\00\00\00\00\00\00\00", i32 87, i32 632 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_fcs_err_pkt_num\00\00\00\00\00\00\00\00\00\00", i32 87, i32 640 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_send_app_good_pkt_num\00\00\00\00", i32 87, i32 648 }, %struct.hclge_comm_stats_str { [32 x i8] c"mac_rx_send_app_bad_pkt_num\00\00\00\00\00", i32 87, i32 656 }], [1008 x i8] zeroinitializer }, align 32
@hns3_nic_test_strs = internal constant { [4 x [32 x i8]], [32 x i8] } { [4 x [32 x i8]] [[32 x i8] c"App    Loopback test\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"Serdes serial Loopback test\00\00\00\00\00", [32 x i8] c"Serdes parallel Loopback test\00\00\00", [32 x i8] c"Phy    Loopback test\00\00\00\00\00\00\00\00\00\00\00\00"], [32 x i8] zeroinitializer }, align 32
@hclge_get_regs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.601, ptr @.str.602, ptr @.str.2, i32 12370, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.601 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Get register number failed, ret = %d.\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.602 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"hclge_get_regs\00", [17 x i8] zeroinitializer }, align 32
@hclge_get_regs._entry_ptr = internal global ptr @hclge_get_regs._entry, section ".printk_index", align 4
@hclge_get_regs._entry.603 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.604, ptr @.str.602, ptr @.str.2, i32 12379, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.604 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Get 32 bit register failed, ret = %d.\0A\00", [57 x i8] zeroinitializer }, align 32
@hclge_get_regs._entry_ptr.605 = internal global ptr @hclge_get_regs._entry.603, section ".printk_index", align 4
@hclge_get_regs._entry.606 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.607, ptr @.str.602, ptr @.str.2, i32 12391, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.607 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Get 64 bit register failed, ret = %d.\0A\00", [57 x i8] zeroinitializer }, align 32
@hclge_get_regs._entry_ptr.608 = internal global ptr @hclge_get_regs._entry.606, section ".printk_index", align 4
@hclge_get_regs._entry.609 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.610, ptr @.str.602, ptr @.str.2, i32 12403, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.610 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Get dfx register failed, ret = %d.\0A\00", [60 x i8] zeroinitializer }, align 32
@hclge_get_regs._entry_ptr.611 = internal global ptr @hclge_get_regs._entry.609, section ".printk_index", align 4
@hclge_get_regs_num._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.612, ptr @.str.613, ptr @.str.2, i32 11960, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.612 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Query register number cmd failed, ret = %d.\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.613 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_get_regs_num\00", [45 x i8] zeroinitializer }, align 32
@hclge_get_regs_num._entry_ptr = internal global ptr @hclge_get_regs_num._entry, section ".printk_index", align 4
@cmdq_reg_addr_list = internal constant { [14 x i32], [40 x i8] } { [14 x i32] [i32 159744, i32 159748, i32 159752, i32 159760, i32 159764, i32 159768, i32 159772, i32 159776, i32 159780, i32 159784, i32 160000, i32 160004, i32 160008, i32 160012], [40 x i8] zeroinitializer }, align 32
@ring_reg_addr_list = internal constant { [26 x i32], [56 x i8] } { [26 x i32] [i32 524288, i32 524292, i32 524296, i32 524300, i32 524308, i32 524312, i32 524316, i32 524320, i32 524324, i32 524328, i32 524336, i32 524340, i32 524352, i32 524356, i32 524360, i32 524364, i32 524368, i32 524372, i32 524376, i32 524380, i32 524384, i32 524388, i32 524392, i32 524400, i32 524404, i32 524432], [56 x i8] zeroinitializer }, align 32
@hclge_get_32_bit_regs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.614, ptr @.str.615, ptr @.str.2, i32 12002, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.614 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Query 32 bit register cmd failed, ret = %d.\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.615 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hclge_get_32_bit_regs\00", [42 x i8] zeroinitializer }, align 32
@hclge_get_32_bit_regs._entry_ptr = internal global ptr @hclge_get_32_bit_regs._entry, section ".printk_index", align 4
@hclge_get_64_bit_regs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.616, ptr @.str.617, ptr @.str.2, i32 12056, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.616 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Query 64 bit register cmd failed, ret = %d.\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.617 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hclge_get_64_bit_regs\00", [42 x i8] zeroinitializer }, align 32
@hclge_get_64_bit_regs._entry_ptr = internal global ptr @hclge_get_64_bit_regs._entry, section ".printk_index", align 4
@hclge_get_dfx_reg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.618, ptr @.str.619, ptr @.str.2, i32 12225, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.618 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Get dfx reg bd num fail, status is %d.\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.619 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_get_dfx_reg\00", [46 x i8] zeroinitializer }, align 32
@hclge_get_dfx_reg._entry_ptr = internal global ptr @hclge_get_dfx_reg._entry, section ".printk_index", align 4
@hclge_dfx_reg_opcode_list = internal constant { [12 x i32], [48 x i8] } { [12 x i32] [i32 68, i32 69, i32 70, i32 71, i32 72, i32 73, i32 74, i32 75, i32 76, i32 77, i32 78, i32 79], [48 x i8] zeroinitializer }, align 32
@hclge_get_dfx_reg._entry.620 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.621, ptr @.str.619, ptr @.str.2, i32 12246, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.621 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Get dfx reg fail, status is %d.\0A\00", [63 x i8] zeroinitializer }, align 32
@hclge_get_dfx_reg._entry_ptr.622 = internal global ptr @hclge_get_dfx_reg._entry.620, section ".printk_index", align 4
@hclge_get_dfx_reg_bd_num._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.623, ptr @.str.624, ptr @.str.2, i32 12117, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.623 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Get dfx bd num fail, status is %d.\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.624 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_get_dfx_reg_bd_num\00", [39 x i8] zeroinitializer }, align 32
@hclge_get_dfx_reg_bd_num._entry_ptr = internal global ptr @hclge_get_dfx_reg_bd_num._entry, section ".printk_index", align 4
@hclge_dfx_reg_cmd_send._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.625, ptr @.str.626, ptr @.str.2, i32 12151, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.625 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Query dfx reg cmd(0x%x) send fail, status is %d.\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.626 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_dfx_reg_cmd_send\00", [41 x i8] zeroinitializer }, align 32
@hclge_dfx_reg_cmd_send._entry_ptr = internal global ptr @hclge_dfx_reg_cmd_send._entry, section ".printk_index", align 4
@hclge_get_regs_len._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.601, ptr @.str.627, ptr @.str.2, i32 12326, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.627 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_get_regs_len\00", [45 x i8] zeroinitializer }, align 32
@hclge_get_regs_len._entry_ptr = internal global ptr @hclge_get_regs_len._entry, section ".printk_index", align 4
@hclge_get_regs_len._entry.628 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.629, ptr @.str.627, ptr @.str.2, i32 12333, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.629 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Get dfx reg len failed, ret = %d.\0A\00", [61 x i8] zeroinitializer }, align 32
@hclge_get_regs_len._entry_ptr.630 = internal global ptr @hclge_get_regs_len._entry.628, section ".printk_index", align 4
@hclge_get_dfx_reg_len._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.618, ptr @.str.631, ptr @.str.2, i32 12192, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.631 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hclge_get_dfx_reg_len\00", [42 x i8] zeroinitializer }, align 32
@hclge_get_dfx_reg_len._entry_ptr = internal global ptr @hclge_get_dfx_reg_len._entry, section ".printk_index", align 4
@hclge_set_rss._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.632, ptr @.str.633, ptr @.str.2, i32 4635, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.632 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"invalid hfunc type %u\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.633 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"hclge_set_rss\00", [18 x i8] zeroinitializer }, align 32
@hclge_set_rss._entry_ptr = internal global ptr @hclge_set_rss._entry, section ".printk_index", align 4
@hclge_set_rss_tuple._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.634, ptr @.str.635, ptr @.str.2, i32 4659, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.634 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"failed to set rss tuple, ret = %d.\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.635 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_set_rss_tuple\00", [44 x i8] zeroinitializer }, align 32
@hclge_set_rss_tuple._entry_ptr = internal global ptr @hclge_set_rss_tuple._entry, section ".printk_index", align 4
@hclge_put_vector._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.636, ptr @.str.637, ptr @.str.2, i32 4600, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.636 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Get vector index fail. vector = %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.637 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hclge_put_vector\00", [47 x i8] zeroinitializer }, align 32
@hclge_put_vector._entry_ptr = internal global ptr @hclge_put_vector._entry, section ".printk_index", align 4
@hclge_map_ring_to_vector._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.638, ptr @.str.639, ptr @.str.2, i32 4851, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.638 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"failed to get vector index. vector=%d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.639 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_map_ring_to_vector\00", [39 x i8] zeroinitializer }, align 32
@hclge_map_ring_to_vector._entry_ptr = internal global ptr @hclge_map_ring_to_vector._entry, section ".printk_index", align 4
@hclge_unmap_ring_frm_vector._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.640, ptr @.str.641, ptr @.str.2, i32 4871, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.640 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Get vector index fail. ret =%d\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.641 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hclge_unmap_ring_frm_vector\00", [36 x i8] zeroinitializer }, align 32
@hclge_unmap_ring_frm_vector._entry_ptr = internal global ptr @hclge_unmap_ring_frm_vector._entry, section ".printk_index", align 4
@hclge_unmap_ring_frm_vector._entry.642 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.643, ptr @.str.641, ptr @.str.2, i32 4879, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.643 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"Unmap ring from vector fail. vectorid=%d, ret =%d\0A\00", [45 x i8] zeroinitializer }, align 32
@hclge_unmap_ring_frm_vector._entry_ptr.644 = internal global ptr @hclge_unmap_ring_frm_vector._entry.642, section ".printk_index", align 4
@hclge_set_vf_vlan_filter._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.645, ptr @.str.646, ptr @.str.2, i32 10187, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.645 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"failed to update port base vlan for vf %d, ret = %d\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.646 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_set_vf_vlan_filter\00", [39 x i8] zeroinitializer }, align 32
@hclge_set_vf_vlan_filter._entry_ptr = internal global ptr @hclge_set_vf_vlan_filter._entry, section ".printk_index", align 4
@hclge_reset_event._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.647, ptr @.str.648, ptr @.str.2, i32 4268, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.647 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"received reset event, reset type is %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.648 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hclge_reset_event\00", [46 x i8] zeroinitializer }, align 32
@hclge_reset_event._entry_ptr = internal global ptr @hclge_reset_event._entry, section ".printk_index", align 4
@hclge_set_channels._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.649, ptr @.str.650, ptr @.str.2, i32 11911, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.649 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"tm vport map fail, ret =%d\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.650 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_set_channels\00", [45 x i8] zeroinitializer }, align 32
@hclge_set_channels._entry_ptr = internal global ptr @hclge_set_channels._entry, section ".printk_index", align 4
@hclge_set_channels._entry.651 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.652, ptr @.str.650, ptr @.str.2, i32 11935, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.652 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"set rss indir table fail, ret=%d\0A\00", [62 x i8] zeroinitializer }, align 32
@hclge_set_channels._entry_ptr.653 = internal global ptr @hclge_set_channels._entry.651, section ".printk_index", align 4
@hclge_set_channels._entry.654 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.655, ptr @.str.650, ptr @.str.2, i32 11944, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.655 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"Channels changed, rss_size from %u to %u, tqps from %u to %u\00", [35 x i8] zeroinitializer }, align 32
@hclge_set_channels._entry_ptr.656 = internal global ptr @hclge_set_channels._entry.654, section ".printk_index", align 4
@hclge_set_led_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.657, ptr @.str.658, ptr @.str.2, i32 12421, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.657 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Send set led state cmd error, ret =%d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.658 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_set_led_status\00", [43 x i8] zeroinitializer }, align 32
@hclge_set_led_status._entry_ptr = internal global ptr @hclge_set_led_status._entry, section ".printk_index", align 4
@hclge_add_fd_entry._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.659, ptr @.str.660, ptr @.str.2, i32 6342, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.659 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"flow table director is not supported\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.660 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_add_fd_entry\00", [45 x i8] zeroinitializer }, align 32
@hclge_add_fd_entry._entry_ptr = internal global ptr @hclge_add_fd_entry._entry, section ".printk_index", align 4
@hclge_add_fd_entry._entry.661 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.662, ptr @.str.660, ptr @.str.2, i32 6348, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.662 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"please enable flow director first\0A\00", [61 x i8] zeroinitializer }, align 32
@hclge_add_fd_entry._entry_ptr.663 = internal global ptr @hclge_add_fd_entry._entry.661, section ".printk_index", align 4
@hclge_fd_check_spec._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.664, ptr @.str.665, ptr @.str.2, i32 5974, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.664 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"failed to config fd rules, invalid rule location: %u, max is %u\0A.\00", [62 x i8] zeroinitializer }, align 32
@.str.665 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hclge_fd_check_spec\00", [44 x i8] zeroinitializer }, align 32
@hclge_fd_check_spec._entry_ptr = internal global ptr @hclge_fd_check_spec._entry, section ".printk_index", align 4
@hclge_fd_check_spec._entry.666 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.667, ptr @.str.665, ptr @.str.2, i32 6008, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.667 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"ETHER_FLOW is not supported in current fd mode!\0A\00", [47 x i8] zeroinitializer }, align 32
@hclge_fd_check_spec._entry_ptr.668 = internal global ptr @hclge_fd_check_spec._entry.666, section ".printk_index", align 4
@hclge_fd_check_spec._entry.669 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.670, ptr @.str.665, ptr @.str.2, i32 6018, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.670 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"unsupported protocol type, protocol type = %#x\0A\00", [48 x i8] zeroinitializer }, align 32
@hclge_fd_check_spec._entry_ptr.671 = internal global ptr @hclge_fd_check_spec._entry.669, section ".printk_index", align 4
@hclge_fd_check_spec._entry.672 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.673, ptr @.str.665, ptr @.str.2, i32 6025, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.673 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"failed to check flow union tuple, ret = %d\0A\00", [52 x i8] zeroinitializer }, align 32
@hclge_fd_check_spec._entry_ptr.674 = internal global ptr @hclge_fd_check_spec._entry.672, section ".printk_index", align 4
@hclge_fd_parse_user_def_field._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.675, ptr @.str.676, ptr @.str.2, i32 5931, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.675 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"user-def bytes are not supported\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.676 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hclge_fd_parse_user_def_field\00", [34 x i8] zeroinitializer }, align 32
@hclge_fd_parse_user_def_field._entry_ptr = internal global ptr @hclge_fd_parse_user_def_field._entry, section ".printk_index", align 4
@hclge_fd_parse_user_def_field._entry.677 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.678, ptr @.str.676, ptr @.str.2, i32 5938, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.678 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"user-def offset[%u] should be no more than %u\0A\00", [49 x i8] zeroinitializer }, align 32
@hclge_fd_parse_user_def_field._entry_ptr.679 = internal global ptr @hclge_fd_parse_user_def_field._entry.677, section ".printk_index", align 4
@hclge_fd_parse_user_def_field._entry.680 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.681, ptr @.str.676, ptr @.str.2, i32 5943, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.681 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"user-def offset can't be masked\0A\00", [63 x i8] zeroinitializer }, align 32
@hclge_fd_parse_user_def_field._entry_ptr.682 = internal global ptr @hclge_fd_parse_user_def_field._entry.680, section ".printk_index", align 4
@hclge_fd_parse_user_def_field._entry.683 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.684, ptr @.str.676, ptr @.str.2, i32 5951, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.684 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"unsupported flow type for user-def bytes, ret = %d\0A\00", [44 x i8] zeroinitializer }, align 32
@hclge_fd_parse_user_def_field._entry_ptr.685 = internal global ptr @hclge_fd_parse_user_def_field._entry.683, section ".printk_index", align 4
@hclge_fd_check_ext_tuple._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.686, ptr @.str.687, ptr @.str.2, i32 5839, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.686 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"vlan-etype is not supported!\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.687 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hclge_fd_check_ext_tuple\00", [39 x i8] zeroinitializer }, align 32
@hclge_fd_check_ext_tuple._entry_ptr = internal global ptr @hclge_fd_check_ext_tuple._entry, section ".printk_index", align 4
@hclge_fd_check_ext_tuple._entry.688 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.689, ptr @.str.687, ptr @.str.2, i32 5850, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.689 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"failed to config vlan_tci, invalid vlan_tci: %u, max is %d.\0A\00", [35 x i8] zeroinitializer }, align 32
@hclge_fd_check_ext_tuple._entry_ptr.690 = internal global ptr @hclge_fd_check_ext_tuple._entry.688, section ".printk_index", align 4
@hclge_fd_check_ext_tuple._entry.691 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.692, ptr @.str.687, ptr @.str.2, i32 5861, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.692 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"FLOW_MAC_EXT is not supported in current fd mode!\0A\00", [45 x i8] zeroinitializer }, align 32
@hclge_fd_check_ext_tuple._entry_ptr.693 = internal global ptr @hclge_fd_check_ext_tuple._entry.691, section ".printk_index", align 4
@hclge_fd_parse_ring_cookie._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.694, ptr @.str.695, ptr @.str.2, i32 6306, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.694 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Error: vf id (%u) should be less than %u\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.695 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hclge_fd_parse_ring_cookie\00", [37 x i8] zeroinitializer }, align 32
@hclge_fd_parse_ring_cookie._entry_ptr = internal global ptr @hclge_fd_parse_ring_cookie._entry, section ".printk_index", align 4
@hclge_fd_parse_ring_cookie._entry.696 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.697, ptr @.str.695, ptr @.str.2, i32 6316, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.697 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Error: queue id (%u) > max tqp num (%u)\0A\00", [55 x i8] zeroinitializer }, align 32
@hclge_fd_parse_ring_cookie._entry_ptr.698 = internal global ptr @hclge_fd_parse_ring_cookie._entry.696, section ".printk_index", align 4
@hclge_add_fd_entry_common._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.699, ptr @.str.700, ptr @.str.2, i32 6254, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.699 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"mode conflict(new type %d, active type %d), please delete existent rules first\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.700 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_add_fd_entry_common\00", [38 x i8] zeroinitializer }, align 32
@hclge_add_fd_entry_common._entry_ptr = internal global ptr @hclge_add_fd_entry_common._entry, section ".printk_index", align 4
@hclge_fd_check_user_def_refcnt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.701, ptr @.str.702, ptr @.str.2, i32 5159, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.701 = internal constant { [87 x i8], [41 x i8] } { [87 x i8] c"No available offset for layer%d fd rule, each layer only support one user def offset.\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.702 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hclge_fd_check_user_def_refcnt\00", [33 x i8] zeroinitializer }, align 32
@hclge_fd_check_user_def_refcnt._entry_ptr = internal global ptr @hclge_fd_check_user_def_refcnt._entry, section ".printk_index", align 4
@hclge_update_fd_list._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.703, ptr @.str.704, ptr @.str.2, i32 5224, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.703 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"failed to delete fd rule %u, it's inexistent\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.704 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_update_fd_list\00", [43 x i8] zeroinitializer }, align 32
@hclge_update_fd_list._entry_ptr = internal global ptr @hclge_update_fd_list._entry, section ".printk_index", align 4
@hclge_del_fd_entry._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.705, ptr @.str.706, ptr @.str.2, i32 6408, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.705 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Delete fail, rule %u is inexistent\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.706 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hclge_del_fd_entry\00", [45 x i8] zeroinitializer }, align 32
@hclge_del_fd_entry._entry_ptr = internal global ptr @hclge_del_fd_entry._entry, section ".printk_index", align 4
@hclge_set_vf_link_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.707, ptr @.str.708, ptr @.str.2, i32 3381, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.707 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"failed to push vf%d link status, ret = %d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.708 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hclge_set_vf_link_state\00", [40 x i8] zeroinitializer }, align 32
@hclge_set_vf_link_state._entry_ptr = internal global ptr @hclge_set_vf_link_state._entry, section ".printk_index", align 4
@hclge_set_vf_spoofchk._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.709, ptr @.str.710, ptr @.str.2, i32 11511, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.709 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"vf %d vlan table is full, enable spoof check may cause its packet send fail\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.710 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hclge_set_vf_spoofchk\00", [42 x i8] zeroinitializer }, align 32
@hclge_set_vf_spoofchk._entry_ptr = internal global ptr @hclge_set_vf_spoofchk._entry, section ".printk_index", align 4
@hclge_set_vf_spoofchk._entry.711 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.712, ptr @.str.710, ptr @.str.2, i32 11515, ptr @.str.118, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.712 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"vf %d mac table is full, enable spoof check may cause its packet send fail\0A\00", [52 x i8] zeroinitializer }, align 32
@hclge_set_vf_spoofchk._entry_ptr.713 = internal global ptr @hclge_set_vf_spoofchk._entry.711, section ".printk_index", align 4
@hclge_vf_rate_param_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.714, ptr @.str.715, ptr @.str.2, i32 11592, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.714 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"min_tx_rate:%d [0], max_tx_rate:%d [0, %u]\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.715 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_vf_rate_param_check\00", [38 x i8] zeroinitializer }, align 32
@hclge_vf_rate_param_check._entry_ptr = internal global ptr @hclge_vf_rate_param_check._entry, section ".printk_index", align 4
@hclge_set_vf_mac._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.716, ptr @.str.717, ptr @.str.2, i32 8981, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.716 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"Specified MAC(=%s) is same as before, no change committed!\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.717 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hclge_set_vf_mac\00", [47 x i8] zeroinitializer }, align 32
@hclge_set_vf_mac._entry_ptr = internal global ptr @hclge_set_vf_mac._entry, section ".printk_index", align 4
@hclge_set_vf_mac._entry.718 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.719, ptr @.str.717, ptr @.str.2, i32 8990, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.719 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"MAC of VF %d has been set to %s, and it will be reinitialized!\0A\00", [32 x i8] zeroinitializer }, align 32
@hclge_set_vf_mac._entry_ptr.720 = internal global ptr @hclge_set_vf_mac._entry.718, section ".printk_index", align 4
@hclge_set_vf_mac._entry.721 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.722, ptr @.str.717, ptr @.str.2, i32 8995, ptr @.str.211, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.722 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"MAC of VF %d has been set to %s\0A\00", [63 x i8] zeroinitializer }, align 32
@hclge_set_vf_mac._entry_ptr.723 = internal global ptr @hclge_set_vf_mac._entry.721, section ".printk_index", align 4
@hclge_module_existed._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.724, ptr @.str.725, ptr @.str.2, i32 12545, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.724 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"failed to get SFP exist state, ret = %d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.725 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_module_existed\00", [43 x i8] zeroinitializer }, align 32
@hclge_module_existed._entry_ptr = internal global ptr @hclge_module_existed._entry, section ".printk_index", align 4
@hclge_get_sfp_eeprom_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.726, ptr @.str.727, ptr @.str.2, i32 12586, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.726 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"failed to get SFP eeprom info, ret = %d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.727 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hclge_get_sfp_eeprom_info\00", [38 x i8] zeroinitializer }, align 32
@hclge_get_sfp_eeprom_info._entry_ptr = internal global ptr @hclge_get_sfp_eeprom_info._entry, section ".printk_index", align 4
@hclge_add_cls_flower._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.728, ptr @.str.729, ptr @.str.2, i32 7171, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.728 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"failed to check cls flower params, ret = %d\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.729 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hclge_add_cls_flower\00", [43 x i8] zeroinitializer }, align 32
@hclge_add_cls_flower._entry_ptr = internal global ptr @hclge_add_cls_flower._entry, section ".printk_index", align 4
@hclge_check_cls_flower._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.730, ptr @.str.731, ptr @.str.2, i32 7140, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.730 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"invalid traffic class\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.731 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_check_cls_flower\00", [41 x i8] zeroinitializer }, align 32
@hclge_check_cls_flower._entry_ptr = internal global ptr @hclge_check_cls_flower._entry, section ".printk_index", align 4
@hclge_check_cls_flower._entry.732 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.733, ptr @.str.731, ptr @.str.2, i32 7148, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.733 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"prio %u should be in range[1, %u]\0A\00", [61 x i8] zeroinitializer }, align 32
@hclge_check_cls_flower._entry_ptr.734 = internal global ptr @hclge_check_cls_flower._entry.732, section ".printk_index", align 4
@hclge_check_cls_flower._entry.735 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.736, ptr @.str.731, ptr @.str.2, i32 7153, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.736 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"prio %u is already used\0A\00", [39 x i8] zeroinitializer }, align 32
@hclge_check_cls_flower._entry_ptr.737 = internal global ptr @hclge_check_cls_flower._entry.735, section ".printk_index", align 4
@hclge_parse_cls_flower._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.738, ptr @.str.739, ptr @.str.2, i32 7121, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.738 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"unsupported key set: %#x\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.739 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hclge_parse_cls_flower\00", [41 x i8] zeroinitializer }, align 32
@hclge_parse_cls_flower._entry_ptr = internal global ptr @hclge_parse_cls_flower._entry, section ".printk_index", align 4
@hclge_get_phy_link_ksettings._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.740, ptr @.str.741, ptr @.str.2, i32 3151, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.740 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"failed to get phy link ksetting, ret = %d.\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.741 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hclge_get_phy_link_ksettings\00", [35 x i8] zeroinitializer }, align 32
@hclge_get_phy_link_ksettings._entry_ptr = internal global ptr @hclge_get_phy_link_ksettings._entry, section ".printk_index", align 4
@hclge_set_phy_link_ksettings._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.742, ptr @.str.743, ptr @.str.2, i32 3220, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.742 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"failed to set phy link ksettings, ret = %d.\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.743 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hclge_set_phy_link_ksettings\00", [35 x i8] zeroinitializer }, align 32
@hclge_set_phy_link_ksettings._entry_ptr = internal global ptr @hclge_set_phy_link_ksettings._entry, section ".printk_index", align 4
@hclge_get_link_diagnosis_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.744, ptr @.str.745, ptr @.str.2, i32 12651, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.744 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"failed to query link diagnosis info, ret = %d\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.745 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hclge_get_link_diagnosis_info\00", [34 x i8] zeroinitializer }, align 32
@hclge_get_link_diagnosis_info._entry_ptr = internal global ptr @hclge_get_link_diagnosis_info._entry, section ".printk_index", align 4
@switch.table.hclge_add_mac_vlan_tbl = internal constant { [4 x i32], [16 x i8] } { [4 x i32] [i32 0, i32 0, i32 -28, i32 -28], [16 x i8] zeroinitializer }, align 32
@switch.table.hclge_configure = internal constant { [9 x i32], [60 x i8] } { [9 x i32] [i32 1000, i32 10000, i32 25000, i32 40000, i32 50000, i32 100000, i32 10, i32 100, i32 200000], [60 x i8] zeroinitializer }, align 32
@switch.table.hclge_reset_service_task = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 134144, i32 133632, i32 133632], [20 x i8] zeroinitializer }, align 32
@switch.table.hclge_reset_service_task.746 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 0, i32 0, i32 2], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 10, i64 100]
@__sancov_gen_cov_switch_values.747 = internal global [11 x i64] [i64 9, i64 32, i64 10, i64 100, i64 1000, i64 10000, i64 25000, i64 40000, i64 50000, i64 100000, i64 200000]
@__sancov_gen_cov_switch_values.748 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.749 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.750 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.751 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.752 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.753 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.754 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.755 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.756 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.757 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.758 = internal global [4 x i64] [i64 2, i64 16, i64 1, i64 2]
@__sancov_gen_cov_switch_values.759 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.760 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.761 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.762 = internal global [4 x i64] [i64 2, i64 32, i64 10, i64 100]
@__sancov_gen_cov_switch_values.763 = internal global [11 x i64] [i64 9, i64 32, i64 10, i64 100, i64 1000, i64 10000, i64 25000, i64 40000, i64 50000, i64 100000, i64 200000]
@__sancov_gen_cov_switch_values.764 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.765 = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.766 = internal global [4 x i64] [i64 2, i64 32, i64 35248, i64 35249]
@__sancov_gen_cov_switch_values.767 = internal global [5 x i64] [i64 3, i64 32, i64 35143, i64 35144, i64 35145]
@__sancov_gen_cov_switch_values.768 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.769 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.770 = internal global [5 x i64] [i64 3, i64 32, i64 10, i64 100, i64 1000]
@__sancov_gen_cov_switch_values.771 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.772 = internal global [9 x i64] [i64 7, i64 32, i64 1, i64 2, i64 5, i64 6, i64 13, i64 14, i64 18]
@__sancov_gen_cov_switch_values.773 = internal global [11 x i64] [i64 9, i64 32, i64 1, i64 2, i64 3, i64 5, i64 6, i64 7, i64 13, i64 14, i64 18]
@__sancov_gen_cov_switch_values.774 = internal global [11 x i64] [i64 9, i64 32, i64 1, i64 2, i64 3, i64 5, i64 6, i64 7, i64 13, i64 14, i64 18]
@__sancov_gen_cov_switch_values.775 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.776 = internal global [10 x i64] [i64 8, i64 32, i64 1, i64 2, i64 3, i64 5, i64 6, i64 7, i64 13, i64 14]
@__sancov_gen_cov_switch_values.777 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 3]
@__sancov_gen_cov_switch_values.778 = internal global [4 x i64] [i64 2, i64 32, i64 10, i64 100]
@__sancov_gen_cov_switch_values.779 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.780 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.781 = internal global [8 x i64] [i64 6, i64 32, i64 10000, i64 25000, i64 40000, i64 50000, i64 100000, i64 200000]
@__sancov_gen_cov_switch_values.782 = internal global [8 x i64] [i64 6, i64 32, i64 10000, i64 25000, i64 40000, i64 50000, i64 100000, i64 200000]
@__sancov_gen_cov_switch_values.783 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.784 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 2]
@__sancov_gen_cov_switch_values.785 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.786 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967274]
@__sancov_gen_cov_switch_values.787 = internal global [4 x i64] [i64 2, i64 32, i64 6, i64 7]
@__sancov_gen_cov_switch_values.788 = internal global [4 x i64] [i64 2, i64 32, i64 6, i64 7]
@__sancov_gen_cov_switch_values.789 = internal global [5 x i64] [i64 3, i64 32, i64 5, i64 6, i64 7]
@__sancov_gen_cov_switch_values.790 = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 5, i64 7]
@__sancov_gen_cov_switch_values.791 = internal global [4 x i64] [i64 2, i64 32, i64 6, i64 7]
@__sancov_gen_cov_switch_values.792 = internal global [6 x i64] [i64 4, i64 32, i64 4, i64 5, i64 6, i64 7]
@__sancov_gen_cov_switch_values.793 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.794 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.795 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.796 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.797 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.798 = internal global [8 x i64] [i64 6, i64 32, i64 10000, i64 25000, i64 40000, i64 50000, i64 100000, i64 200000]
@__sancov_gen_cov_switch_values.799 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 3]
@__sancov_gen_cov_switch_values.800 = internal global [11 x i64] [i64 9, i64 32, i64 10, i64 100, i64 1000, i64 10000, i64 25000, i64 40000, i64 50000, i64 100000, i64 200000]
@__sancov_gen_cov_switch_values.801 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.802 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.803 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.804 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.805 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 2]
@__sancov_gen_cov_switch_values.806 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.807 = internal global [4 x i64] [i64 2, i64 32, i64 4, i64 64]
@__sancov_gen_cov_switch_values.808 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.809 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.810 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.811 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.812 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 3]
@___asan_gen_.830 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2433, i32 3 }
@___asan_gen_.836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2440, i32 3 }
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2447, i32 3 }
@___asan_gen_.848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2455, i32 3 }
@___asan_gen_.854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2463, i32 4 }
@___asan_gen_.860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2471, i32 4 }
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2480, i32 3 }
@___asan_gen_.867 = private unnamed_addr constant [9 x i8] c"hclge_wq\00", align 1
@___asan_gen_.869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 77, i32 33 }
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3609, i32 3 }
@___asan_gen_.887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3827, i32 3 }
@___asan_gen_.896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4806, i32 5 }
@___asan_gen_.899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4832, i32 4 }
@___asan_gen_.908 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8307, i32 3 }
@___asan_gen_.917 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8354, i32 3 }
@___asan_gen_.923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8388, i32 4 }
@___asan_gen_.932 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8423, i32 3 }
@___asan_gen_.941 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8465, i32 3 }
@___asan_gen_.947 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8501, i32 3 }
@___asan_gen_.953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8528, i32 3 }
@___asan_gen_.962 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10390, i32 3 }
@___asan_gen_.968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10400, i32 3 }
@___asan_gen_.977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10573, i32 4 }
@___asan_gen_.983 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12794, i32 1 }
@___asan_gen_.992 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 502, i32 3 }
@___asan_gen_.1001 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1926, i32 3 }
@___asan_gen_.1010 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1914, i32 3 }
@___asan_gen_.1019 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2304, i32 3 }
@___asan_gen_.1028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2348, i32 3 }
@___asan_gen_.1037 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2392, i32 3 }
@___asan_gen_.1046 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2416, i32 3 }
@___asan_gen_.1055 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2606, i32 3 }
@___asan_gen_.1061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2617, i32 3 }
@___asan_gen_.1062 = private unnamed_addr constant [26 x i8] c"hclge_mac_speed_map_to_fw\00", align 1
@___asan_gen_.1064 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2563, i32 35 }
@___asan_gen_.1073 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4720, i32 4 }
@___asan_gen_.1082 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4922, i32 3 }
@___asan_gen_.1084 = private unnamed_addr constant [47 x i8] c"../drivers/net/ethernet/hisilicon/hns3/hnae3.h\00", align 1
@___asan_gen_.1085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1084, i32 872, i32 55 }
@___asan_gen_.1094 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8068, i32 3 }
@___asan_gen_.1103 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7898, i32 3 }
@___asan_gen_.1109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7911, i32 3 }
@___asan_gen_.1112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7919, i32 4 }
@___asan_gen_.1118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7924, i32 3 }
@___asan_gen_.1121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7932, i32 4 }
@___asan_gen_.1127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7937, i32 3 }
@___asan_gen_.1133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7943, i32 2 }
@___asan_gen_.1142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8124, i32 3 }
@___asan_gen_.1151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8025, i32 3 }
@___asan_gen_.1160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9230, i32 3 }
@___asan_gen_.1166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9242, i32 3 }
@___asan_gen_.1175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9208, i32 3 }
@___asan_gen_.1184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9530, i32 3 }
@___asan_gen_.1193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9446, i32 4 }
@___asan_gen_.1202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9380, i32 3 }
@___asan_gen_.1214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9403, i32 4 }
@___asan_gen_.1220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9408, i32 3 }
@___asan_gen_.1226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9424, i32 3 }
@___asan_gen_.1235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9498, i32 3 }
@___asan_gen_.1241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9506, i32 3 }
@___asan_gen_.1250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9484, i32 3 }
@___asan_gen_.1259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9627, i32 3 }
@___asan_gen_.1268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9587, i32 3 }
@___asan_gen_.1277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10083, i32 3 }
@___asan_gen_.1286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9839, i32 5 }
@___asan_gen_.1295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10542, i32 3 }
@___asan_gen_.1301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10552, i32 3 }
@___asan_gen_.1310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10482, i32 4 }
@___asan_gen_.1316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10502, i32 4 }
@___asan_gen_.1322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10509, i32 4 }
@___asan_gen_.1331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10425, i32 3 }
@___asan_gen_.1340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10447, i32 3 }
@___asan_gen_.1349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10609, i32 3 }
@___asan_gen_.1358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12769, i32 2 }
@___asan_gen_.1361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12771, i32 29 }
@___asan_gen_.1367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12773, i32 3 }
@___asan_gen_.1368 = private unnamed_addr constant [8 x i8] c"ae_algo\00", align 1
@___asan_gen_.1370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12762, i32 29 }
@___asan_gen_.1371 = private unnamed_addr constant [10 x i8] c"hclge_ops\00", align 1
@___asan_gen_.1373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12659, i32 34 }
@___asan_gen_.1374 = private unnamed_addr constant [16 x i8] c"ae_algo_pci_tbl\00", align 1
@___asan_gen_.1376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 79, i32 35 }
@___asan_gen_.1382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11245, i32 2 }
@___asan_gen_.1388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11246, i32 2 }
@___asan_gen_.1397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11278, i32 3 }
@___asan_gen_.1403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11285, i32 3 }
@___asan_gen_.1409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11291, i32 3 }
@___asan_gen_.1415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11301, i32 3 }
@___asan_gen_.1421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11326, i32 3 }
@___asan_gen_.1427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11332, i32 3 }
@___asan_gen_.1433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11342, i32 3 }
@___asan_gen_.1439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11348, i32 3 }
@___asan_gen_.1445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11355, i32 3 }
@___asan_gen_.1451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11361, i32 3 }
@___asan_gen_.1457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11367, i32 3 }
@___asan_gen_.1463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11373, i32 3 }
@___asan_gen_.1469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11386, i32 2 }
@___asan_gen_.1481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11387, i32 2 }
@___asan_gen_.1490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11423, i32 2 }
@___asan_gen_.1493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1498, i32 33, i32 31 }
@___asan_gen_.1496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1498, i32 34, i32 28 }
@___asan_gen_.1498 = private unnamed_addr constant [29 x i8] c"../include/linux/semaphore.h\00", align 1
@___asan_gen_.1499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1498, i32 35, i32 39 }
@___asan_gen_.1508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11040, i32 3 }
@___asan_gen_.1514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11048, i32 4 }
@___asan_gen_.1520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11052, i32 3 }
@___asan_gen_.1526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11057, i32 3 }
@___asan_gen_.1532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11065, i32 3 }
@___asan_gen_.1541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11025, i32 3 }
@___asan_gen_.1550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11207, i32 3 }
@___asan_gen_.1559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1492, i32 3 }
@___asan_gen_.1568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 853, i32 4 }
@___asan_gen_.1577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 876, i32 3 }
@___asan_gen_.1583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 904, i32 3 }
@___asan_gen_.1592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 589, i32 3 }
@___asan_gen_.1598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 597, i32 3 }
@___asan_gen_.1607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1585, i32 3 }
@___asan_gen_.1616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1368, i32 3 }
@___asan_gen_.1625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1524, i32 3 }
@___asan_gen_.1634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1509, i32 2 }
@___asan_gen_.1643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2522, i32 3 }
@___asan_gen_.1649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2528, i32 3 }
@___asan_gen_.1652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3575, i32 55 }
@___asan_gen_.1661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3581, i32 3 }
@___asan_gen_.1670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3515, i32 3 }
@___asan_gen_.1679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3406, i32 3 }
@___asan_gen_.1685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3415, i32 3 }
@___asan_gen_.1691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3442, i32 2 }
@___asan_gen_.1700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3534, i32 3 }
@___asan_gen_.1709 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1840, i32 3 }
@___asan_gen_.1710 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1871, i32 3 }
@___asan_gen_.1721 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1878, i32 4 }
@___asan_gen_.1730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1822, i32 3 }
@___asan_gen_.1739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1760, i32 3 }
@___asan_gen_.1748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1704, i32 3 }
@___asan_gen_.1757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8167, i32 3 }
@___asan_gen_.1766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8147, i32 3 }
@___asan_gen_.1775 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2817, i32 3 }
@___asan_gen_.1781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2827, i32 3 }
@___asan_gen_.1790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2670, i32 3 }
@___asan_gen_.1799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2751, i32 3 }
@___asan_gen_.1808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7478, i32 3 }
@___asan_gen_.1814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7495, i32 3 }
@___asan_gen_.1823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7522, i32 3 }
@___asan_gen_.1829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7533, i32 3 }
@___asan_gen_.1838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7558, i32 4 }
@___asan_gen_.1844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7567, i32 3 }
@___asan_gen_.1850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7570, i32 3 }
@___asan_gen_.1859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 1638, i32 3 }
@___asan_gen_.1868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9709, i32 3 }
@___asan_gen_.1874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9723, i32 3 }
@___asan_gen_.1875 = private unnamed_addr constant [16 x i8] c"hclge_mgr_table\00", align 1
@___asan_gen_.1877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 365, i32 49 }
@___asan_gen_.1886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9032, i32 4 }
@___asan_gen_.1895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9012, i32 3 }
@___asan_gen_.1904 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8935, i32 3 }
@___asan_gen_.1910 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8947, i32 3 }
@___asan_gen_.1916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8952, i32 3 }
@___asan_gen_.1922 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8957, i32 3 }
@___asan_gen_.1931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5350, i32 3 }
@___asan_gen_.1940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5252, i32 3 }
@___asan_gen_.1949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5277, i32 3 }
@___asan_gen_.1958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5313, i32 3 }
@___asan_gen_.1967 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4296, i32 2 }
@___asan_gen_.1976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4369, i32 4 }
@___asan_gen_.1985 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4396, i32 3 }
@___asan_gen_.1994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3630, i32 3 }
@___asan_gen_.2003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3971, i32 4 }
@___asan_gen_.2009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4002, i32 2 }
@___asan_gen_.2018 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3706, i32 4 }
@___asan_gen_.2024 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3722, i32 4 }
@___asan_gen_.2033 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3772, i32 4 }
@___asan_gen_.2039 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3782, i32 2 }
@___asan_gen_.2048 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3658, i32 3 }
@___asan_gen_.2054 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3672, i32 3 }
@___asan_gen_.2063 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11692, i32 3 }
@___asan_gen_.2069 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11698, i32 3 }
@___asan_gen_.2072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11704, i32 3 }
@___asan_gen_.2078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11710, i32 3 }
@___asan_gen_.2081 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11717, i32 3 }
@___asan_gen_.2084 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11727, i32 3 }
@___asan_gen_.2090 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11733, i32 3 }
@___asan_gen_.2093 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11739, i32 3 }
@___asan_gen_.2099 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11745, i32 3 }
@___asan_gen_.2102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11752, i32 3 }
@___asan_gen_.2108 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11771, i32 3 }
@___asan_gen_.2114 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11780, i32 4 }
@___asan_gen_.2120 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11798, i32 2 }
@___asan_gen_.2135 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11475, i32 3 }
@___asan_gen_.2141 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11483, i32 3 }
@___asan_gen_.2150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7392, i32 3 }
@___asan_gen_.2156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7404, i32 3 }
@___asan_gen_.2165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11648, i32 4 }
@___asan_gen_.2174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3321, i32 3 }
@___asan_gen_.2180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3327, i32 3 }
@___asan_gen_.2189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4096, i32 3 }
@___asan_gen_.2195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4101, i32 3 }
@___asan_gen_.2204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4027, i32 3 }
@___asan_gen_.2210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4032, i32 3 }
@___asan_gen_.2216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4039, i32 3 }
@___asan_gen_.2222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4050, i32 2 }
@___asan_gen_.2231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4017, i32 2 }
@___asan_gen_.2240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3840, i32 3 }
@___asan_gen_.2246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3841, i32 3 }
@___asan_gen_.2252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3849, i32 3 }
@___asan_gen_.2258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3855, i32 3 }
@___asan_gen_.2264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3861, i32 3 }
@___asan_gen_.2270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3867, i32 3 }
@___asan_gen_.2279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3740, i32 3 }
@___asan_gen_.2288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2875, i32 3 }
@___asan_gen_.2297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2917, i32 4 }
@___asan_gen_.2306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5427, i32 3 }
@___asan_gen_.2315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5104, i32 3 }
@___asan_gen_.2324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5475, i32 3 }
@___asan_gen_.2325 = private unnamed_addr constant [15 x i8] c"tuple_key_info\00", align 1
@___asan_gen_.2327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 415, i32 30 }
@___asan_gen_.2336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5645, i32 3 }
@___asan_gen_.2342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5654, i32 3 }
@___asan_gen_.2343 = private unnamed_addr constant [19 x i8] c"meta_data_key_info\00", align 1
@___asan_gen_.2345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 404, i32 30 }
@___asan_gen_.2354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 676, i32 4 }
@___asan_gen_.2360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 684, i32 3 }
@___asan_gen_.2369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3096, i32 3 }
@___asan_gen_.2375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3100, i32 3 }
@___asan_gen_.2384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3070, i32 3 }
@___asan_gen_.2390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3074, i32 3 }
@___asan_gen_.2391 = private unnamed_addr constant [14 x i8] c"speed_bit_map\00", align 1
@___asan_gen_.2393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 962, i32 41 }
@___asan_gen_.2402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10289, i32 4 }
@___asan_gen_.2411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11186, i32 4 }
@___asan_gen_.2420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11579, i32 4 }
@___asan_gen_.2429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10219, i32 4 }
@___asan_gen_.2444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8901, i32 3 }
@___asan_gen_.2453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11143, i32 3 }
@___asan_gen_.2462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11168, i32 3 }
@___asan_gen_.2471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10861, i32 3 }
@___asan_gen_.2480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10816, i32 2 }
@___asan_gen_.2486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10818, i32 2 }
@___asan_gen_.2492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10819, i32 2 }
@___asan_gen_.2498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10820, i32 2 }
@___asan_gen_.2504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10821, i32 2 }
@___asan_gen_.2510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10822, i32 2 }
@___asan_gen_.2516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10823, i32 2 }
@___asan_gen_.2522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10824, i32 2 }
@___asan_gen_.2528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10825, i32 2 }
@___asan_gen_.2534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10826, i32 2 }
@___asan_gen_.2546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10827, i32 2 }
@___asan_gen_.2558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10829, i32 2 }
@___asan_gen_.2564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10831, i32 2 }
@___asan_gen_.2570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10833, i32 2 }
@___asan_gen_.2576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10836, i32 2 }
@___asan_gen_.2585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10915, i32 3 }
@___asan_gen_.2594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7369, i32 3 }
@___asan_gen_.2603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2764, i32 3 }
@___asan_gen_.2612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7735, i32 3 }
@___asan_gen_.2618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7745, i32 3 }
@___asan_gen_.2627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7602, i32 3 }
@___asan_gen_.2636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7421, i32 4 }
@___asan_gen_.2645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7655, i32 3 }
@___asan_gen_.2651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7664, i32 3 }
@___asan_gen_.2660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10704, i32 4 }
@___asan_gen_.2666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10711, i32 3 }
@___asan_gen_.2675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2683, i32 4 }
@___asan_gen_.2681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 2712, i32 2 }
@___asan_gen_.2690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9109, i32 3 }
@___asan_gen_.2696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9117, i32 3 }
@___asan_gen_.2702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 9130, i32 3 }
@___asan_gen_.2708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 700, i32 3 }
@___asan_gen_.2711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 706, i32 3 }
@___asan_gen_.2712 = private unnamed_addr constant [19 x i8] c"g_mac_stats_string\00", align 1
@___asan_gen_.2714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 157, i32 42 }
@___asan_gen_.2715 = private unnamed_addr constant [19 x i8] c"hns3_nic_test_strs\00", align 1
@___asan_gen_.2717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 150, i32 19 }
@___asan_gen_.2726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12369, i32 3 }
@___asan_gen_.2732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12378, i32 3 }
@___asan_gen_.2738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12390, i32 3 }
@___asan_gen_.2744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12402, i32 3 }
@___asan_gen_.2753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11959, i32 3 }
@___asan_gen_.2754 = private unnamed_addr constant [19 x i8] c"cmdq_reg_addr_list\00", align 1
@___asan_gen_.2756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 94, i32 18 }
@___asan_gen_.2757 = private unnamed_addr constant [19 x i8] c"ring_reg_addr_list\00", align 1
@___asan_gen_.2759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 117, i32 18 }
@___asan_gen_.2768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12001, i32 3 }
@___asan_gen_.2777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12055, i32 3 }
@___asan_gen_.2786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12224, i32 3 }
@___asan_gen_.2787 = private unnamed_addr constant [26 x i8] c"hclge_dfx_reg_opcode_list\00", align 1
@___asan_gen_.2789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 389, i32 37 }
@___asan_gen_.2795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12245, i32 4 }
@___asan_gen_.2804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12116, i32 3 }
@___asan_gen_.2813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12149, i32 3 }
@___asan_gen_.2819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12325, i32 3 }
@___asan_gen_.2825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12332, i32 3 }
@___asan_gen_.2831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12191, i32 3 }
@___asan_gen_.2840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4635, i32 3 }
@___asan_gen_.2849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4658, i32 3 }
@___asan_gen_.2858 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4599, i32 3 }
@___asan_gen_.2867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4850, i32 3 }
@___asan_gen_.2876 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4870, i32 3 }
@___asan_gen_.2882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4877, i32 3 }
@___asan_gen_.2891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 10185, i32 3 }
@___asan_gen_.2900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 4267, i32 2 }
@___asan_gen_.2909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11911, i32 3 }
@___asan_gen_.2915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11934, i32 3 }
@___asan_gen_.2921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11941, i32 3 }
@___asan_gen_.2930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12420, i32 3 }
@___asan_gen_.2939 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6341, i32 3 }
@___asan_gen_.2945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6347, i32 3 }
@___asan_gen_.2954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5971, i32 3 }
@___asan_gen_.2960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6007, i32 4 }
@___asan_gen_.2966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6016, i32 3 }
@___asan_gen_.2972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6023, i32 3 }
@___asan_gen_.2981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5931, i32 3 }
@___asan_gen_.2987 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5936, i32 3 }
@___asan_gen_.2993 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5943, i32 3 }
@___asan_gen_.2999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5949, i32 3 }
@___asan_gen_.3008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5839, i32 4 }
@___asan_gen_.3014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5848, i32 4 }
@___asan_gen_.3020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5860, i32 4 }
@___asan_gen_.3029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6304, i32 4 }
@___asan_gen_.3035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6314, i32 4 }
@___asan_gen_.3044 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6252, i32 3 }
@___asan_gen_.3053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5157, i32 2 }
@___asan_gen_.3062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 5222, i32 3 }
@___asan_gen_.3071 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 6407, i32 3 }
@___asan_gen_.3080 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3380, i32 3 }
@___asan_gen_.3089 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11509, i32 3 }
@___asan_gen_.3095 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11513, i32 3 }
@___asan_gen_.3104 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 11590, i32 3 }
@___asan_gen_.3113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8979, i32 3 }
@___asan_gen_.3119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8988, i32 3 }
@___asan_gen_.3125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 8994, i32 2 }
@___asan_gen_.3134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12544, i32 3 }
@___asan_gen_.3143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12585, i32 3 }
@___asan_gen_.3152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7170, i32 3 }
@___asan_gen_.3161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7140, i32 3 }
@___asan_gen_.3167 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7146, i32 3 }
@___asan_gen_.3173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7153, i32 3 }
@___asan_gen_.3182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 7120, i32 3 }
@___asan_gen_.3191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3150, i32 3 }
@___asan_gen_.3200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 3219, i32 3 }
@___asan_gen_.3201 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.3207 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.3208 = private constant [59 x i8] c"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c\00", align 1
@___asan_gen_.3209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3208, i32 12650, i32 3 }
@___asan_gen_.3210 = private unnamed_addr constant [36 x i8] c"switch.table.hclge_add_mac_vlan_tbl\00", align 1
@___asan_gen_.3211 = private unnamed_addr constant [29 x i8] c"switch.table.hclge_configure\00", align 1
@___asan_gen_.3212 = private unnamed_addr constant [38 x i8] c"switch.table.hclge_reset_service_task\00", align 1
@___asan_gen_.3213 = private unnamed_addr constant [42 x i8] c"switch.table.hclge_reset_service_task.746\00", align 1
@llvm.compiler.used = appending global [1105 x ptr] [ptr @__UNIQUE_ID_author557, ptr @__UNIQUE_ID_description558, ptr @__UNIQUE_ID_file555, ptr @__UNIQUE_ID_license556, ptr @__UNIQUE_ID_version559, ptr @__exitcall_hclge_exit, ptr @__initcall__kmod_hclge__554_12788_hclge_init6, ptr @__modver_attr, ptr @hclge_add_cls_flower._entry, ptr @hclge_add_cls_flower._entry_ptr, ptr @hclge_add_fd_entry._entry, ptr @hclge_add_fd_entry._entry.661, ptr @hclge_add_fd_entry._entry_ptr, ptr @hclge_add_fd_entry._entry_ptr.663, ptr @hclge_add_fd_entry_common._entry, ptr @hclge_add_fd_entry_common._entry_ptr, ptr @hclge_add_mac_vlan_tbl._entry, ptr @hclge_add_mac_vlan_tbl._entry_ptr, ptr @hclge_add_mc_addr_common._entry, ptr @hclge_add_mc_addr_common._entry.43, ptr @hclge_add_mc_addr_common._entry_ptr, ptr @hclge_add_mc_addr_common._entry_ptr.45, ptr @hclge_add_mgr_tbl._entry, ptr @hclge_add_mgr_tbl._entry_ptr, ptr @hclge_add_uc_addr_common._entry, ptr @hclge_add_uc_addr_common._entry.35, ptr @hclge_add_uc_addr_common._entry_ptr, ptr @hclge_add_uc_addr_common._entry_ptr.37, ptr @hclge_add_vport_all_vlan_table._entry, ptr @hclge_add_vport_all_vlan_table._entry_ptr, ptr @hclge_alloc_vport._entry, ptr @hclge_alloc_vport._entry.278, ptr @hclge_alloc_vport._entry_ptr, ptr @hclge_alloc_vport._entry_ptr.280, ptr @hclge_bind_ring_with_vector._entry, ptr @hclge_bind_ring_with_vector._entry.29, ptr @hclge_bind_ring_with_vector._entry_ptr, ptr @hclge_bind_ring_with_vector._entry_ptr.30, ptr @hclge_buffer_alloc._entry, ptr @hclge_buffer_alloc._entry.11, ptr @hclge_buffer_alloc._entry.14, ptr @hclge_buffer_alloc._entry.17, ptr @hclge_buffer_alloc._entry.20, ptr @hclge_buffer_alloc._entry.5, ptr @hclge_buffer_alloc._entry.8, ptr @hclge_buffer_alloc._entry_ptr, ptr @hclge_buffer_alloc._entry_ptr.10, ptr @hclge_buffer_alloc._entry_ptr.13, ptr @hclge_buffer_alloc._entry_ptr.16, ptr @hclge_buffer_alloc._entry_ptr.19, ptr @hclge_buffer_alloc._entry_ptr.22, ptr @hclge_buffer_alloc._entry_ptr.7, ptr @hclge_cfg_common_loopback_cmd_send._entry, ptr @hclge_cfg_common_loopback_cmd_send._entry.307, ptr @hclge_cfg_common_loopback_cmd_send._entry_ptr, ptr @hclge_cfg_common_loopback_cmd_send._entry_ptr.309, ptr @hclge_cfg_common_loopback_wait._entry, ptr @hclge_cfg_common_loopback_wait._entry.312, ptr @hclge_cfg_common_loopback_wait._entry.315, ptr @hclge_cfg_common_loopback_wait._entry_ptr, ptr @hclge_cfg_common_loopback_wait._entry_ptr.314, ptr @hclge_cfg_common_loopback_wait._entry_ptr.317, ptr @hclge_cfg_mac_mode._entry, ptr @hclge_cfg_mac_mode._entry_ptr, ptr @hclge_cfg_mac_speed_dup_hw._entry, ptr @hclge_cfg_mac_speed_dup_hw._entry.73, ptr @hclge_cfg_mac_speed_dup_hw._entry_ptr, ptr @hclge_cfg_mac_speed_dup_hw._entry_ptr.75, ptr @hclge_cfg_pauseparam._entry, ptr @hclge_cfg_pauseparam._entry_ptr, ptr @hclge_check_cls_flower._entry, ptr @hclge_check_cls_flower._entry.732, ptr @hclge_check_cls_flower._entry.735, ptr @hclge_check_cls_flower._entry_ptr, ptr @hclge_check_cls_flower._entry_ptr.734, ptr @hclge_check_cls_flower._entry_ptr.737, ptr @hclge_check_event_cause._entry, ptr @hclge_check_event_cause._entry.267, ptr @hclge_check_event_cause._entry.270, ptr @hclge_check_event_cause._entry_ptr, ptr @hclge_check_event_cause._entry_ptr.269, ptr @hclge_check_event_cause._entry_ptr.272, ptr @hclge_check_vf_vlan_cmd_status._entry, ptr @hclge_check_vf_vlan_cmd_status._entry.119, ptr @hclge_check_vf_vlan_cmd_status._entry.122, ptr @hclge_check_vf_vlan_cmd_status._entry_ptr, ptr @hclge_check_vf_vlan_cmd_status._entry_ptr.121, ptr @hclge_check_vf_vlan_cmd_status._entry_ptr.124, ptr @hclge_clear_hw_resource._entry, ptr @hclge_clear_hw_resource._entry_ptr, ptr @hclge_clear_resetting_state._entry, ptr @hclge_clear_resetting_state._entry_ptr, ptr @hclge_clear_vf_vlan._entry, ptr @hclge_clear_vf_vlan._entry_ptr, ptr @hclge_cmd_alloc_tx_buff._entry, ptr @hclge_cmd_alloc_tx_buff._entry_ptr, ptr @hclge_cmd_set_promisc_mode._entry, ptr @hclge_cmd_set_promisc_mode._entry_ptr, ptr @hclge_common_thrd_config._entry, ptr @hclge_common_thrd_config._entry_ptr, ptr @hclge_common_wl_config._entry, ptr @hclge_common_wl_config._entry_ptr, ptr @hclge_config_gro._entry, ptr @hclge_config_gro._entry_ptr, ptr @hclge_config_key._entry, ptr @hclge_config_key._entry.477, ptr @hclge_config_key._entry_ptr, ptr @hclge_config_key._entry_ptr.479, ptr @hclge_config_switch_param._entry, ptr @hclge_config_switch_param._entry.418, ptr @hclge_config_switch_param._entry_ptr, ptr @hclge_config_switch_param._entry_ptr.420, ptr @hclge_configure._entry, ptr @hclge_configure._entry_ptr, ptr @hclge_del_fd_entry._entry, ptr @hclge_del_fd_entry._entry_ptr, ptr @hclge_dev_mem_map._entry, ptr @hclge_dev_mem_map._entry_ptr, ptr @hclge_dfx_reg_cmd_send._entry, ptr @hclge_dfx_reg_cmd_send._entry_ptr, ptr @hclge_do_reset._entry, ptr @hclge_do_reset._entry.448, ptr @hclge_do_reset._entry.451, ptr @hclge_do_reset._entry.454, ptr @hclge_do_reset._entry.457, ptr @hclge_do_reset._entry.460, ptr @hclge_do_reset._entry_ptr, ptr @hclge_do_reset._entry_ptr.450, ptr @hclge_do_reset._entry_ptr.453, ptr @hclge_do_reset._entry_ptr.456, ptr @hclge_do_reset._entry_ptr.459, ptr @hclge_do_reset._entry_ptr.462, ptr @hclge_fd_ad_config._entry, ptr @hclge_fd_ad_config._entry_ptr, ptr @hclge_fd_check_ext_tuple._entry, ptr @hclge_fd_check_ext_tuple._entry.688, ptr @hclge_fd_check_ext_tuple._entry.691, ptr @hclge_fd_check_ext_tuple._entry_ptr, ptr @hclge_fd_check_ext_tuple._entry_ptr.690, ptr @hclge_fd_check_ext_tuple._entry_ptr.693, ptr @hclge_fd_check_spec._entry, ptr @hclge_fd_check_spec._entry.666, ptr @hclge_fd_check_spec._entry.669, ptr @hclge_fd_check_spec._entry.672, ptr @hclge_fd_check_spec._entry_ptr, ptr @hclge_fd_check_spec._entry_ptr.668, ptr @hclge_fd_check_spec._entry_ptr.671, ptr @hclge_fd_check_spec._entry_ptr.674, ptr @hclge_fd_check_user_def_refcnt._entry, ptr @hclge_fd_check_user_def_refcnt._entry_ptr, ptr @hclge_fd_parse_ring_cookie._entry, ptr @hclge_fd_parse_ring_cookie._entry.696, ptr @hclge_fd_parse_ring_cookie._entry_ptr, ptr @hclge_fd_parse_ring_cookie._entry_ptr.698, ptr @hclge_fd_parse_user_def_field._entry, ptr @hclge_fd_parse_user_def_field._entry.677, ptr @hclge_fd_parse_user_def_field._entry.680, ptr @hclge_fd_parse_user_def_field._entry.683, ptr @hclge_fd_parse_user_def_field._entry_ptr, ptr @hclge_fd_parse_user_def_field._entry_ptr.679, ptr @hclge_fd_parse_user_def_field._entry_ptr.682, ptr @hclge_fd_parse_user_def_field._entry_ptr.685, ptr @hclge_fd_set_user_def_cmd._entry, ptr @hclge_fd_set_user_def_cmd._entry_ptr, ptr @hclge_fd_tcam_config._entry, ptr @hclge_fd_tcam_config._entry_ptr, ptr @hclge_free_vector._entry, ptr @hclge_free_vector._entry_ptr, ptr @hclge_func_reset_cmd._entry, ptr @hclge_func_reset_cmd._entry_ptr, ptr @hclge_func_reset_sync_vf._entry, ptr @hclge_func_reset_sync_vf._entry.368, ptr @hclge_func_reset_sync_vf._entry_ptr, ptr @hclge_func_reset_sync_vf._entry_ptr.370, ptr @hclge_get_32_bit_regs._entry, ptr @hclge_get_32_bit_regs._entry_ptr, ptr @hclge_get_64_bit_regs._entry, ptr @hclge_get_64_bit_regs._entry_ptr, ptr @hclge_get_cap._entry, ptr @hclge_get_cap._entry_ptr, ptr @hclge_get_cfg._entry, ptr @hclge_get_cfg._entry_ptr, ptr @hclge_get_dfx_reg._entry, ptr @hclge_get_dfx_reg._entry.620, ptr @hclge_get_dfx_reg._entry_ptr, ptr @hclge_get_dfx_reg._entry_ptr.622, ptr @hclge_get_dfx_reg_bd_num._entry, ptr @hclge_get_dfx_reg_bd_num._entry_ptr, ptr @hclge_get_dfx_reg_len._entry, ptr @hclge_get_dfx_reg_len._entry_ptr, ptr @hclge_get_fd_allocation._entry, ptr @hclge_get_fd_allocation._entry_ptr, ptr @hclge_get_fd_mode._entry, ptr @hclge_get_fd_mode._entry_ptr, ptr @hclge_get_link_diagnosis_info._entry, ptr @hclge_get_link_diagnosis_info._entry_ptr, ptr @hclge_get_mac_ethertype_cmd_status._entry, ptr @hclge_get_mac_ethertype_cmd_status._entry.331, ptr @hclge_get_mac_ethertype_cmd_status._entry.334, ptr @hclge_get_mac_ethertype_cmd_status._entry.337, ptr @hclge_get_mac_ethertype_cmd_status._entry_ptr, ptr @hclge_get_mac_ethertype_cmd_status._entry_ptr.333, ptr @hclge_get_mac_ethertype_cmd_status._entry_ptr.336, ptr @hclge_get_mac_ethertype_cmd_status._entry_ptr.339, ptr @hclge_get_mac_link_status._entry, ptr @hclge_get_mac_link_status._entry_ptr, ptr @hclge_get_mac_vlan_cmd_status._entry, ptr @hclge_get_mac_vlan_cmd_status._entry.85, ptr @hclge_get_mac_vlan_cmd_status._entry.89, ptr @hclge_get_mac_vlan_cmd_status._entry.93, ptr @hclge_get_mac_vlan_cmd_status._entry.96, ptr @hclge_get_mac_vlan_cmd_status._entry_ptr, ptr @hclge_get_mac_vlan_cmd_status._entry_ptr.87, ptr @hclge_get_mac_vlan_cmd_status._entry_ptr.91, ptr @hclge_get_mac_vlan_cmd_status._entry_ptr.95, ptr @hclge_get_mac_vlan_cmd_status._entry_ptr.98, ptr @hclge_get_phy_link_ksettings._entry, ptr @hclge_get_phy_link_ksettings._entry_ptr, ptr @hclge_get_regs._entry, ptr @hclge_get_regs._entry.603, ptr @hclge_get_regs._entry.606, ptr @hclge_get_regs._entry.609, ptr @hclge_get_regs._entry_ptr, ptr @hclge_get_regs._entry_ptr.605, ptr @hclge_get_regs._entry_ptr.608, ptr @hclge_get_regs._entry_ptr.611, ptr @hclge_get_regs_len._entry, ptr @hclge_get_regs_len._entry.628, ptr @hclge_get_regs_len._entry_ptr, ptr @hclge_get_regs_len._entry_ptr.630, ptr @hclge_get_regs_num._entry, ptr @hclge_get_regs_num._entry_ptr, ptr @hclge_get_reset_status._entry, ptr @hclge_get_reset_status._entry_ptr, ptr @hclge_get_sfp_eeprom_info._entry, ptr @hclge_get_sfp_eeprom_info._entry_ptr, ptr @hclge_get_sfp_info._entry, ptr @hclge_get_sfp_info._entry.487, ptr @hclge_get_sfp_info._entry_ptr, ptr @hclge_get_sfp_info._entry_ptr.489, ptr @hclge_get_sfp_speed._entry, ptr @hclge_get_sfp_speed._entry.492, ptr @hclge_get_sfp_speed._entry_ptr, ptr @hclge_get_sfp_speed._entry_ptr.494, ptr @hclge_get_vf_vport._entry, ptr @hclge_get_vf_vport._entry.425, ptr @hclge_get_vf_vport._entry_ptr, ptr @hclge_get_vf_vport._entry_ptr.427, ptr @hclge_info_show._entry, ptr @hclge_info_show._entry.515, ptr @hclge_info_show._entry.518, ptr @hclge_info_show._entry.521, ptr @hclge_info_show._entry.524, ptr @hclge_info_show._entry.527, ptr @hclge_info_show._entry.530, ptr @hclge_info_show._entry.533, ptr @hclge_info_show._entry.536, ptr @hclge_info_show._entry.539, ptr @hclge_info_show._entry.542, ptr @hclge_info_show._entry.547, ptr @hclge_info_show._entry.552, ptr @hclge_info_show._entry.555, ptr @hclge_info_show._entry.558, ptr @hclge_info_show._entry_ptr, ptr @hclge_info_show._entry_ptr.517, ptr @hclge_info_show._entry_ptr.520, ptr @hclge_info_show._entry_ptr.523, ptr @hclge_info_show._entry_ptr.526, ptr @hclge_info_show._entry_ptr.529, ptr @hclge_info_show._entry_ptr.532, ptr @hclge_info_show._entry_ptr.535, ptr @hclge_info_show._entry_ptr.538, ptr @hclge_info_show._entry_ptr.541, ptr @hclge_info_show._entry_ptr.544, ptr @hclge_info_show._entry_ptr.549, ptr @hclge_info_show._entry_ptr.554, ptr @hclge_info_show._entry_ptr.557, ptr @hclge_info_show._entry_ptr.560, ptr @hclge_init._entry, ptr @hclge_init._entry.162, ptr @hclge_init._entry_ptr, ptr @hclge_init._entry_ptr.164, ptr @hclge_init_ae_dev._entry, ptr @hclge_init_ae_dev._entry.170, ptr @hclge_init_ae_dev._entry.173, ptr @hclge_init_ae_dev._entry.176, ptr @hclge_init_ae_dev._entry.179, ptr @hclge_init_ae_dev._entry.182, ptr @hclge_init_ae_dev._entry.185, ptr @hclge_init_ae_dev._entry.188, ptr @hclge_init_ae_dev._entry.191, ptr @hclge_init_ae_dev._entry.194, ptr @hclge_init_ae_dev._entry.197, ptr @hclge_init_ae_dev._entry.200, ptr @hclge_init_ae_dev._entry.209, ptr @hclge_init_ae_dev._entry_ptr, ptr @hclge_init_ae_dev._entry_ptr.172, ptr @hclge_init_ae_dev._entry_ptr.175, ptr @hclge_init_ae_dev._entry_ptr.178, ptr @hclge_init_ae_dev._entry_ptr.181, ptr @hclge_init_ae_dev._entry_ptr.184, ptr @hclge_init_ae_dev._entry_ptr.187, ptr @hclge_init_ae_dev._entry_ptr.190, ptr @hclge_init_ae_dev._entry_ptr.193, ptr @hclge_init_ae_dev._entry_ptr.196, ptr @hclge_init_ae_dev._entry_ptr.199, ptr @hclge_init_ae_dev._entry_ptr.202, ptr @hclge_init_ae_dev._entry_ptr.212, ptr @hclge_init_fd_config._entry, ptr @hclge_init_fd_config._entry_ptr, ptr @hclge_init_kdump_kernel_config._entry, ptr @hclge_init_kdump_kernel_config._entry_ptr, ptr @hclge_init_msi._entry, ptr @hclge_init_msi._entry.257, ptr @hclge_init_msi._entry_ptr, ptr @hclge_init_msi._entry_ptr.259, ptr @hclge_init_nic_client_instance._entry, ptr @hclge_init_nic_client_instance._entry_ptr, ptr @hclge_init_roce_client_instance._entry, ptr @hclge_init_roce_client_instance._entry_ptr, ptr @hclge_init_rss_tc_mode._entry, ptr @hclge_init_rss_tc_mode._entry_ptr, ptr @hclge_init_tc_config._entry, ptr @hclge_init_tc_config._entry_ptr, ptr @hclge_init_umv_space._entry, ptr @hclge_init_umv_space._entry_ptr, ptr @hclge_knic_setup._entry, ptr @hclge_knic_setup._entry_ptr, ptr @hclge_lookup_mac_vlan_tbl._entry, ptr @hclge_lookup_mac_vlan_tbl._entry_ptr, ptr @hclge_mac_init._entry, ptr @hclge_mac_init._entry.293, ptr @hclge_mac_init._entry_ptr, ptr @hclge_mac_init._entry_ptr.295, ptr @hclge_mac_query_reg_num._entry, ptr @hclge_mac_query_reg_num._entry.244, ptr @hclge_mac_query_reg_num._entry_ptr, ptr @hclge_mac_query_reg_num._entry_ptr.246, ptr @hclge_mac_update_stats_defective._entry, ptr @hclge_mac_update_stats_defective._entry_ptr, ptr @hclge_mailbox_service_task._entry, ptr @hclge_mailbox_service_task._entry_ptr, ptr @hclge_map_ring_to_vector._entry, ptr @hclge_map_ring_to_vector._entry_ptr, ptr @hclge_map_tqps_to_func._entry, ptr @hclge_map_tqps_to_func._entry_ptr, ptr @hclge_misc_err_recovery._entry, ptr @hclge_misc_err_recovery._entry_ptr, ptr @hclge_misc_irq_handle._entry, ptr @hclge_misc_irq_handle._entry_ptr, ptr @hclge_misc_irq_init._entry, ptr @hclge_misc_irq_init._entry_ptr, ptr @hclge_modify_port_base_vlan_tag._entry, ptr @hclge_modify_port_base_vlan_tag._entry_ptr, ptr @hclge_module_existed._entry, ptr @hclge_module_existed._entry_ptr, ptr @hclge_need_update_port_vlan._entry, ptr @hclge_need_update_port_vlan._entry.127, ptr @hclge_need_update_port_vlan._entry_ptr, ptr @hclge_need_update_port_vlan._entry_ptr.129, ptr @hclge_notify_client._entry, ptr @hclge_notify_client._entry_ptr, ptr @hclge_notify_roce_client._entry, ptr @hclge_notify_roce_client._entry_ptr, ptr @hclge_parse_cls_flower._entry, ptr @hclge_parse_cls_flower._entry_ptr, ptr @hclge_pci_init._entry, ptr @hclge_pci_init._entry.217, ptr @hclge_pci_init._entry.220, ptr @hclge_pci_init._entry.223, ptr @hclge_pci_init._entry.226, ptr @hclge_pci_init._entry_ptr, ptr @hclge_pci_init._entry_ptr.219, ptr @hclge_pci_init._entry_ptr.222, ptr @hclge_pci_init._entry_ptr.225, ptr @hclge_pci_init._entry_ptr.228, ptr @hclge_phy_link_status_wait._entry, ptr @hclge_phy_link_status_wait._entry_ptr, ptr @hclge_push_link_status._entry, ptr @hclge_push_link_status._entry_ptr, ptr @hclge_put_vector._entry, ptr @hclge_put_vector._entry_ptr, ptr @hclge_query_function_status._entry, ptr @hclge_query_function_status._entry_ptr, ptr @hclge_query_pf_resource._entry, ptr @hclge_query_pf_resource._entry.239, ptr @hclge_query_pf_resource._entry_ptr, ptr @hclge_query_pf_resource._entry_ptr.241, ptr @hclge_remove_mac_vlan_tbl._entry, ptr @hclge_remove_mac_vlan_tbl._entry_ptr, ptr @hclge_reset_ae_dev._entry, ptr @hclge_reset_ae_dev._entry.378, ptr @hclge_reset_ae_dev._entry.381, ptr @hclge_reset_ae_dev._entry.383, ptr @hclge_reset_ae_dev._entry.386, ptr @hclge_reset_ae_dev._entry.388, ptr @hclge_reset_ae_dev._entry.390, ptr @hclge_reset_ae_dev._entry.393, ptr @hclge_reset_ae_dev._entry.395, ptr @hclge_reset_ae_dev._entry.398, ptr @hclge_reset_ae_dev._entry.400, ptr @hclge_reset_ae_dev._entry.403, ptr @hclge_reset_ae_dev._entry.406, ptr @hclge_reset_ae_dev._entry_ptr, ptr @hclge_reset_ae_dev._entry_ptr.380, ptr @hclge_reset_ae_dev._entry_ptr.382, ptr @hclge_reset_ae_dev._entry_ptr.385, ptr @hclge_reset_ae_dev._entry_ptr.387, ptr @hclge_reset_ae_dev._entry_ptr.389, ptr @hclge_reset_ae_dev._entry_ptr.392, ptr @hclge_reset_ae_dev._entry_ptr.394, ptr @hclge_reset_ae_dev._entry_ptr.397, ptr @hclge_reset_ae_dev._entry_ptr.399, ptr @hclge_reset_ae_dev._entry_ptr.402, ptr @hclge_reset_ae_dev._entry_ptr.405, ptr @hclge_reset_ae_dev._entry_ptr.408, ptr @hclge_reset_done._entry, ptr @hclge_reset_done._entry_ptr, ptr @hclge_reset_err_handle._entry, ptr @hclge_reset_err_handle._entry.435, ptr @hclge_reset_err_handle._entry.438, ptr @hclge_reset_err_handle._entry.441, ptr @hclge_reset_err_handle._entry_ptr, ptr @hclge_reset_err_handle._entry_ptr.437, ptr @hclge_reset_err_handle._entry_ptr.440, ptr @hclge_reset_err_handle._entry_ptr.443, ptr @hclge_reset_event._entry, ptr @hclge_reset_event._entry_ptr, ptr @hclge_reset_prepare_general._entry, ptr @hclge_reset_prepare_general._entry_ptr, ptr @hclge_reset_prepare_wait._entry, ptr @hclge_reset_prepare_wait._entry.358, ptr @hclge_reset_prepare_wait._entry_ptr, ptr @hclge_reset_prepare_wait._entry_ptr.360, ptr @hclge_reset_rcb._entry, ptr @hclge_reset_rcb._entry.142, ptr @hclge_reset_rcb._entry_ptr, ptr @hclge_reset_rcb._entry_ptr.144, ptr @hclge_reset_service_task._entry, ptr @hclge_reset_service_task._entry_ptr, ptr @hclge_reset_timer._entry, ptr @hclge_reset_timer._entry_ptr, ptr @hclge_reset_tqp._entry, ptr @hclge_reset_tqp._entry_ptr, ptr @hclge_reset_tqp_cmd._entry, ptr @hclge_reset_tqp_cmd._entry.147, ptr @hclge_reset_tqp_cmd._entry.150, ptr @hclge_reset_tqp_cmd._entry_ptr, ptr @hclge_reset_tqp_cmd._entry_ptr.149, ptr @hclge_reset_tqp_cmd._entry_ptr.152, ptr @hclge_reset_tqp_cmd_send._entry, ptr @hclge_reset_tqp_cmd_send._entry_ptr, ptr @hclge_reset_vf_rate._entry, ptr @hclge_reset_vf_rate._entry_ptr, ptr @hclge_reset_wait._entry, ptr @hclge_reset_wait._entry.373, ptr @hclge_reset_wait._entry_ptr, ptr @hclge_reset_wait._entry_ptr.375, ptr @hclge_resume_vf_rate._entry, ptr @hclge_resume_vf_rate._entry_ptr, ptr @hclge_rx_priv_buf_alloc._entry, ptr @hclge_rx_priv_buf_alloc._entry_ptr, ptr @hclge_rx_priv_wl_config._entry, ptr @hclge_rx_priv_wl_config._entry_ptr, ptr @hclge_set_all_vf_rst._entry, ptr @hclge_set_all_vf_rst._entry.363, ptr @hclge_set_all_vf_rst._entry_ptr, ptr @hclge_set_all_vf_rst._entry_ptr.365, ptr @hclge_set_app_loopback._entry, ptr @hclge_set_app_loopback._entry.302, ptr @hclge_set_app_loopback._entry_ptr, ptr @hclge_set_app_loopback._entry_ptr.304, ptr @hclge_set_autoneg._entry, ptr @hclge_set_autoneg._entry_ptr, ptr @hclge_set_autoneg_en._entry, ptr @hclge_set_autoneg_en._entry_ptr, ptr @hclge_set_channels._entry, ptr @hclge_set_channels._entry.651, ptr @hclge_set_channels._entry.654, ptr @hclge_set_channels._entry_ptr, ptr @hclge_set_channels._entry_ptr.653, ptr @hclge_set_channels._entry_ptr.656, ptr @hclge_set_common_loopback._entry, ptr @hclge_set_common_loopback._entry_ptr, ptr @hclge_set_fd_key_config._entry, ptr @hclge_set_fd_key_config._entry_ptr, ptr @hclge_set_fec._entry, ptr @hclge_set_fec._entry_ptr, ptr @hclge_set_fec_hw._entry, ptr @hclge_set_fec_hw._entry_ptr, ptr @hclge_set_led_status._entry, ptr @hclge_set_led_status._entry_ptr, ptr @hclge_set_loopback._entry, ptr @hclge_set_loopback._entry.569, ptr @hclge_set_loopback._entry_ptr, ptr @hclge_set_loopback._entry_ptr.571, ptr @hclge_set_mac_addr._entry, ptr @hclge_set_mac_addr._entry.592, ptr @hclge_set_mac_addr._entry.595, ptr @hclge_set_mac_addr._entry_ptr, ptr @hclge_set_mac_addr._entry_ptr.594, ptr @hclge_set_mac_addr._entry_ptr.597, ptr @hclge_set_pauseparam._entry, ptr @hclge_set_pauseparam._entry.583, ptr @hclge_set_pauseparam._entry_ptr, ptr @hclge_set_pauseparam._entry_ptr.585, ptr @hclge_set_phy_link_ksettings._entry, ptr @hclge_set_phy_link_ksettings._entry_ptr, ptr @hclge_set_phy_loopback._entry, ptr @hclge_set_phy_loopback._entry.578, ptr @hclge_set_phy_loopback._entry_ptr, ptr @hclge_set_phy_loopback._entry_ptr.580, ptr @hclge_set_port_vlan_filter._entry, ptr @hclge_set_port_vlan_filter._entry_ptr, ptr @hclge_set_port_vlan_filter_bypass._entry, ptr @hclge_set_port_vlan_filter_bypass._entry_ptr, ptr @hclge_set_rss._entry, ptr @hclge_set_rss._entry_ptr, ptr @hclge_set_rss_tuple._entry, ptr @hclge_set_rss_tuple._entry_ptr, ptr @hclge_set_rst_done._entry, ptr @hclge_set_rst_done._entry.430, ptr @hclge_set_rst_done._entry_ptr, ptr @hclge_set_rst_done._entry_ptr.432, ptr @hclge_set_umv_space._entry, ptr @hclge_set_umv_space._entry_ptr, ptr @hclge_set_vf_link_state._entry, ptr @hclge_set_vf_link_state._entry_ptr, ptr @hclge_set_vf_mac._entry, ptr @hclge_set_vf_mac._entry.718, ptr @hclge_set_vf_mac._entry.721, ptr @hclge_set_vf_mac._entry_ptr, ptr @hclge_set_vf_mac._entry_ptr.720, ptr @hclge_set_vf_mac._entry_ptr.723, ptr @hclge_set_vf_spoofchk._entry, ptr @hclge_set_vf_spoofchk._entry.711, ptr @hclge_set_vf_spoofchk._entry_ptr, ptr @hclge_set_vf_spoofchk._entry_ptr.713, ptr @hclge_set_vf_spoofchk_hw._entry, ptr @hclge_set_vf_spoofchk_hw._entry.413, ptr @hclge_set_vf_spoofchk_hw._entry_ptr, ptr @hclge_set_vf_spoofchk_hw._entry_ptr.415, ptr @hclge_set_vf_vlan_common._entry, ptr @hclge_set_vf_vlan_common._entry_ptr, ptr @hclge_set_vf_vlan_filter._entry, ptr @hclge_set_vf_vlan_filter._entry_ptr, ptr @hclge_set_vf_vlan_filter_cmd._entry, ptr @hclge_set_vf_vlan_filter_cmd._entry_ptr, ptr @hclge_set_vlan_filter_ctrl._entry, ptr @hclge_set_vlan_filter_ctrl._entry.105, ptr @hclge_set_vlan_filter_ctrl._entry_ptr, ptr @hclge_set_vlan_filter_ctrl._entry_ptr.107, ptr @hclge_set_vlan_filter_hw._entry, ptr @hclge_set_vlan_filter_hw._entry_ptr, ptr @hclge_set_vlan_protocol_type._entry, ptr @hclge_set_vlan_protocol_type._entry.322, ptr @hclge_set_vlan_protocol_type._entry_ptr, ptr @hclge_set_vlan_protocol_type._entry_ptr.324, ptr @hclge_set_vlan_rx_offload_cfg._entry, ptr @hclge_set_vlan_rx_offload_cfg._entry_ptr, ptr @hclge_set_vlan_tx_offload_cfg._entry, ptr @hclge_set_vlan_tx_offload_cfg._entry_ptr, ptr @hclge_set_vport_mtu._entry, ptr @hclge_set_vport_mtu._entry.50, ptr @hclge_set_vport_mtu._entry_ptr, ptr @hclge_set_vport_mtu._entry_ptr.52, ptr @hclge_show_rst_info._entry, ptr @hclge_show_rst_info._entry_ptr, ptr @hclge_sync_vlan_fltr_state._entry, ptr @hclge_sync_vlan_fltr_state._entry_ptr, ptr @hclge_tx_buffer_alloc._entry, ptr @hclge_tx_buffer_alloc._entry_ptr, ptr @hclge_uninit_vport_mac_list._entry, ptr @hclge_uninit_vport_mac_list._entry_ptr, ptr @hclge_unmap_ring_frm_vector._entry, ptr @hclge_unmap_ring_frm_vector._entry.642, ptr @hclge_unmap_ring_frm_vector._entry_ptr, ptr @hclge_unmap_ring_frm_vector._entry_ptr.644, ptr @hclge_update_fd_list._entry, ptr @hclge_update_fd_list._entry_ptr, ptr @hclge_update_mac_list._entry, ptr @hclge_update_mac_list._entry_ptr, ptr @hclge_update_stats._entry, ptr @hclge_update_stats._entry.599, ptr @hclge_update_stats._entry_ptr, ptr @hclge_update_stats._entry_ptr.600, ptr @hclge_update_stats_for_all._entry, ptr @hclge_update_stats_for_all._entry.482, ptr @hclge_update_stats_for_all._entry_ptr, ptr @hclge_update_stats_for_all._entry_ptr.484, ptr @hclge_vf_rate_param_check._entry, ptr @hclge_vf_rate_param_check._entry_ptr, ptr @hclge_vport_setup._entry, ptr @hclge_vport_setup._entry_ptr, ptr @init_mgr_tbl._entry, ptr @init_mgr_tbl._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.6, ptr @.str.9, ptr @.str.12, ptr @.str.15, ptr @.str.18, ptr @.str.21, ptr @hclge_wq, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.36, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.44, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.51, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.74, ptr @hclge_mac_speed_map_to_fw, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.86, ptr @.str.88, ptr @.str.90, ptr @.str.92, ptr @.str.94, ptr @.str.97, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.106, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.120, ptr @.str.123, ptr @.str.125, ptr @.str.126, ptr @.str.128, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.143, ptr @.str.145, ptr @.str.146, ptr @.str.148, ptr @.str.151, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.163, ptr @ae_algo, ptr @hclge_ops, ptr @ae_algo_pci_tbl, ptr @hclge_init_ae_dev.__key, ptr @.str.165, ptr @hclge_init_ae_dev.__key.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.171, ptr @.str.174, ptr @.str.177, ptr @.str.180, ptr @.str.183, ptr @.str.186, ptr @.str.189, ptr @.str.192, ptr @.str.195, ptr @.str.198, ptr @.str.201, ptr @hclge_init_ae_dev.__key.203, ptr @.str.204, ptr @hclge_init_ae_dev.__key.205, ptr @.str.206, ptr @hclge_init_ae_dev.__key.207, ptr @.str.208, ptr @.str.210, ptr @.str.211, ptr @sema_init.__key, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.218, ptr @.str.221, ptr @.str.224, ptr @.str.227, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.240, ptr @.str.242, ptr @.str.243, ptr @.str.245, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.258, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.268, ptr @.str.271, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @hclge_alloc_vport.__key, ptr @.str.277, ptr @.str.279, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.294, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @.str.300, ptr @.str.301, ptr @.str.303, ptr @.str.305, ptr @.str.306, ptr @.str.308, ptr @.str.310, ptr @.str.311, ptr @.str.313, ptr @.str.316, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.323, ptr @hclge_mgr_table, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.332, ptr @.str.335, ptr @.str.338, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.359, ptr @.str.361, ptr @.str.362, ptr @.str.364, ptr @.str.366, ptr @.str.367, ptr @.str.369, ptr @.str.371, ptr @.str.372, ptr @.str.374, ptr @.str.376, ptr @.str.377, ptr @.str.379, ptr @.str.384, ptr @.str.391, ptr @.str.396, ptr @.str.401, ptr @.str.404, ptr @.str.407, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.414, ptr @.str.416, ptr @.str.417, ptr @.str.419, ptr @.str.421, ptr @.str.422, ptr @.str.423, ptr @.str.424, ptr @.str.426, ptr @.str.428, ptr @.str.429, ptr @.str.431, ptr @.str.433, ptr @.str.434, ptr @.str.436, ptr @.str.439, ptr @.str.442, ptr @.str.444, ptr @.str.445, ptr @.str.446, ptr @.str.447, ptr @.str.449, ptr @.str.452, ptr @.str.455, ptr @.str.458, ptr @.str.461, ptr @.str.463, ptr @.str.464, ptr @.str.465, ptr @.str.466, ptr @.str.467, ptr @.str.468, ptr @.str.469, ptr @.str.470, ptr @.str.471, ptr @.str.472, ptr @.str.473, ptr @.str.474, ptr @tuple_key_info, ptr @.str.475, ptr @.str.476, ptr @.str.478, ptr @meta_data_key_info, ptr @.str.480, ptr @.str.481, ptr @.str.483, ptr @.str.485, ptr @.str.486, ptr @.str.488, ptr @.str.490, ptr @.str.491, ptr @.str.493, ptr @speed_bit_map, ptr @.str.495, ptr @.str.496, ptr @.str.497, ptr @.str.498, ptr @.str.499, ptr @.str.500, ptr @.str.501, ptr @.str.502, ptr @.str.503, ptr @.str.504, ptr @.str.505, ptr @.str.506, ptr @.str.507, ptr @.str.508, ptr @.str.509, ptr @.str.510, ptr @.str.511, ptr @.str.512, ptr @.str.513, ptr @.str.514, ptr @.str.516, ptr @.str.519, ptr @.str.522, ptr @.str.525, ptr @.str.528, ptr @.str.531, ptr @.str.534, ptr @.str.537, ptr @.str.540, ptr @.str.543, ptr @.str.545, ptr @.str.546, ptr @.str.548, ptr @.str.550, ptr @.str.551, ptr @.str.553, ptr @.str.556, ptr @.str.559, ptr @.str.561, ptr @.str.562, ptr @.str.563, ptr @.str.564, ptr @.str.565, ptr @.str.566, ptr @.str.567, ptr @.str.568, ptr @.str.570, ptr @.str.572, ptr @.str.573, ptr @.str.574, ptr @.str.575, ptr @.str.576, ptr @.str.577, ptr @.str.579, ptr @.str.581, ptr @.str.582, ptr @.str.584, ptr @.str.586, ptr @.str.587, ptr @.str.588, ptr @.str.589, ptr @.str.590, ptr @.str.591, ptr @.str.593, ptr @.str.596, ptr @.str.598, ptr @g_mac_stats_string, ptr @hns3_nic_test_strs, ptr @.str.601, ptr @.str.602, ptr @.str.604, ptr @.str.607, ptr @.str.610, ptr @.str.612, ptr @.str.613, ptr @cmdq_reg_addr_list, ptr @ring_reg_addr_list, ptr @.str.614, ptr @.str.615, ptr @.str.616, ptr @.str.617, ptr @.str.618, ptr @.str.619, ptr @hclge_dfx_reg_opcode_list, ptr @.str.621, ptr @.str.623, ptr @.str.624, ptr @.str.625, ptr @.str.626, ptr @.str.627, ptr @.str.629, ptr @.str.631, ptr @.str.632, ptr @.str.633, ptr @.str.634, ptr @.str.635, ptr @.str.636, ptr @.str.637, ptr @.str.638, ptr @.str.639, ptr @.str.640, ptr @.str.641, ptr @.str.643, ptr @.str.645, ptr @.str.646, ptr @.str.647, ptr @.str.648, ptr @.str.649, ptr @.str.650, ptr @.str.652, ptr @.str.655, ptr @.str.657, ptr @.str.658, ptr @.str.659, ptr @.str.660, ptr @.str.662, ptr @.str.664, ptr @.str.665, ptr @.str.667, ptr @.str.670, ptr @.str.673, ptr @.str.675, ptr @.str.676, ptr @.str.678, ptr @.str.681, ptr @.str.684, ptr @.str.686, ptr @.str.687, ptr @.str.689, ptr @.str.692, ptr @.str.694, ptr @.str.695, ptr @.str.697, ptr @.str.699, ptr @.str.700, ptr @.str.701, ptr @.str.702, ptr @.str.703, ptr @.str.704, ptr @.str.705, ptr @.str.706, ptr @.str.707, ptr @.str.708, ptr @.str.709, ptr @.str.710, ptr @.str.712, ptr @.str.714, ptr @.str.715, ptr @.str.716, ptr @.str.717, ptr @.str.719, ptr @.str.722, ptr @.str.724, ptr @.str.725, ptr @.str.726, ptr @.str.727, ptr @.str.728, ptr @.str.729, ptr @.str.730, ptr @.str.731, ptr @.str.733, ptr @.str.736, ptr @.str.738, ptr @.str.739, ptr @.str.740, ptr @.str.741, ptr @.str.742, ptr @.str.743, ptr @.str.744, ptr @.str.745, ptr @switch.table.hclge_add_mac_vlan_tbl, ptr @switch.table.hclge_configure, ptr @switch.table.hclge_reset_service_task, ptr @switch.table.hclge_reset_service_task.746], section "llvm.metadata"
@0 = internal global [803 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_buffer_alloc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_buffer_alloc._entry.5 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_buffer_alloc._entry.8 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_buffer_alloc._entry.11 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_buffer_alloc._entry.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_buffer_alloc._entry.17 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_buffer_alloc._entry.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_notify_client._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_func_reset_cmd._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_bind_ring_with_vector._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_bind_ring_with_vector._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_update_mac_list._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_uc_addr_common._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_uc_addr_common._entry.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_mc_addr_common._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_mc_addr_common._entry.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vport_mtu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vport_mtu._entry.50 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_tqp._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_mac_update_stats_defective._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_tx_buffer_alloc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cmd_alloc_tx_buff._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_rx_priv_buf_alloc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_rx_priv_wl_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_common_thrd_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_common_wl_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_mac_speed_dup_hw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_mac_speed_dup_hw._entry.73 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_mac_speed_map_to_fw to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_rss_tc_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cmd_set_promisc_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_lookup_mac_vlan_tbl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_vlan_cmd_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_vlan_cmd_status._entry.85 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_vlan_cmd_status._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_vlan_cmd_status._entry.93 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_vlan_cmd_status._entry.96 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_mac_vlan_tbl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_remove_mac_vlan_tbl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vlan_filter_ctrl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vlan_filter_ctrl._entry.105 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_port_vlan_filter_bypass._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vlan_filter_hw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_vlan_common._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_vlan_filter_cmd._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_vf_vlan_cmd_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_vf_vlan_cmd_status._entry.119 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_vf_vlan_cmd_status._entry.122 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_need_update_port_vlan._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_need_update_port_vlan._entry.127 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_port_vlan_filter._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vlan_rx_offload_cfg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vlan_tx_offload_cfg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_modify_port_base_vlan_tag._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_vport_all_vlan_table._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_rcb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_rcb._entry.142 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_tqp_cmd._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_tqp_cmd._entry.147 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_tqp_cmd._entry.150 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_tqp_cmd_send._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_reset_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_pauseparam._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init._entry.162 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ae_algo to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1368 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_ops to i32), i32 436, i32 544, i32 ptrtoint (ptr @___asan_gen_.1371 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ae_algo_pci_tbl to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.1374 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev.__key.166 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.170 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.173 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.176 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.179 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.185 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.188 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.191 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.194 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.197 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.200 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev.__key.203 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev.__key.205 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev.__key.207 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_ae_dev._entry.209 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sema_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_pci_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_pci_init._entry.217 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_pci_init._entry.220 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_pci_init._entry.223 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_pci_init._entry.226 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_dev_mem_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_clear_hw_resource._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_cap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_query_function_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_query_pf_resource._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_query_pf_resource._entry.239 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_mac_query_reg_num._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_mac_query_reg_num._entry.244 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_configure._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_cfg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_tc_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_kdump_kernel_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_msi._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_msi._entry.257 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_misc_irq_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_misc_irq_handle._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_event_cause._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_event_cause._entry.267 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_event_cause._entry.270 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_free_vector._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_alloc_vport._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_alloc_vport.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_alloc_vport._entry.278 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_vport_setup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_knic_setup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_map_tqps_to_func._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_umv_space._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_umv_space._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_mac_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_mac_init._entry.293 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_autoneg_en._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_fec_hw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_app_loopback._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_app_loopback._entry.302 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_common_loopback_cmd_send._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_common_loopback_cmd_send._entry.307 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_common_loopback_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_common_loopback_wait._entry.312 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_common_loopback_wait._entry.315 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_config_gro._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vlan_protocol_type._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vlan_protocol_type._entry.322 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_mgr_table to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1875 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_mgr_tbl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_mgr_tbl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_ethertype_cmd_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_ethertype_cmd_status._entry.331 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_ethertype_cmd_status._entry.334 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_ethertype_cmd_status._entry.337 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_fd_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_fd_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_fd_allocation._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_fd_key_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_timer._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_misc_err_recovery._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_service_task._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_notify_roce_client._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_prepare_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_prepare_wait._entry.358 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_all_vf_rst._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_all_vf_rst._entry.363 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_func_reset_sync_vf._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.366 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_func_reset_sync_vf._entry.368 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_wait._entry.373 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.378 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.381 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.383 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.386 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.388 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2084 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.390 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.393 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.395 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.396 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.398 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.400 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.403 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_ae_dev._entry.406 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_spoofchk_hw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.411 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.412 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_spoofchk_hw._entry.413 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.414 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_config_switch_param._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.417 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_config_switch_param._entry.418 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_resume_vf_rate._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_vf_vport._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.423 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.424 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_vf_vport._entry.425 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.426 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_rst_done._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.428 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_rst_done._entry.430 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.431 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_err_handle._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.433 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_err_handle._entry.435 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.436 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_err_handle._entry.438 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.439 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_err_handle._entry.441 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.442 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_show_rst_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.444 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.445 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_do_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.446 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.447 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_do_reset._entry.448 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_do_reset._entry.451 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_do_reset._entry.454 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.455 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_do_reset._entry.457 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.458 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_do_reset._entry.460 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.461 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_mailbox_service_task._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.463 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_mac_link_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.465 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.466 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_push_link_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.468 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_tcam_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.470 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_set_user_def_cmd._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.471 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_ad_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.473 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.474 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tuple_key_info to i32), i32 480, i32 576, i32 ptrtoint (ptr @___asan_gen_.2325 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_config_key._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.476 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_config_key._entry.477 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.478 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @meta_data_key_info to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.2343 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_update_stats_for_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.480 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_update_stats_for_all._entry.482 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.483 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_sfp_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_sfp_info._entry.487 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.488 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_sfp_speed._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.490 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.491 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_sfp_speed._entry.492 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.493 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @speed_bit_map to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.2391 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_sync_vlan_fltr_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.495 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.496 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_clear_resetting_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.497 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.498 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_vf_rate._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.499 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.500 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_clear_vf_vlan._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.501 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.502 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_uninit_vport_mac_list._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.503 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.504 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.505 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.506 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_prepare_general._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.507 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.508 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_done._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.509 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.510 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_nic_client_instance._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.511 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.512 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.513 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.514 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.515 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.516 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.518 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.519 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.521 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.522 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.524 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.525 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.527 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.528 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.530 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.531 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.533 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.534 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.536 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.537 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.539 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.540 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.542 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.543 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.545 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.546 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.547 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.548 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.550 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.551 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.552 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.553 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.555 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.556 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_info_show._entry.558 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.559 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_init_roce_client_instance._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.561 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.562 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_cfg_mac_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.563 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.564 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_fec._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.565 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.566 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_loopback._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.567 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.568 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_loopback._entry.569 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.570 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_common_loopback._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.572 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.573 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_phy_link_status_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.574 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.575 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_phy_loopback._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.576 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.577 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_phy_loopback._entry.578 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.579 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_pauseparam._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.581 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.582 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_pauseparam._entry.583 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.584 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_autoneg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.586 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.587 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.588 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.589 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_mac_addr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.590 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.591 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_mac_addr._entry.592 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.593 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_mac_addr._entry.595 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.596 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_update_stats._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.598 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_update_stats._entry.599 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @g_mac_stats_string to i32), i32 4080, i32 5088, i32 ptrtoint (ptr @___asan_gen_.2712 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hns3_nic_test_strs to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.2715 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_regs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.601 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.602 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_regs._entry.603 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.604 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_regs._entry.606 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.607 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_regs._entry.609 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.610 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_regs_num._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.612 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.613 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cmdq_reg_addr_list to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2754 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ring_reg_addr_list to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.2757 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_32_bit_regs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.614 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.615 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_64_bit_regs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.616 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.617 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_dfx_reg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.618 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.619 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_dfx_reg_opcode_list to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2787 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_dfx_reg._entry.620 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.621 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_dfx_reg_bd_num._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.623 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.624 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_dfx_reg_cmd_send._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.625 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.626 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_regs_len._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.627 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_regs_len._entry.628 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.629 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_dfx_reg_len._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.631 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_rss._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.632 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.633 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_rss_tuple._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.634 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.635 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_put_vector._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.636 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.637 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_map_ring_to_vector._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.638 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.639 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_unmap_ring_frm_vector._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.640 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.641 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_unmap_ring_frm_vector._entry.642 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.643 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_vlan_filter._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.645 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.646 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_reset_event._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.647 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.648 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_channels._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.649 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.650 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_channels._entry.651 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.652 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_channels._entry.654 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.655 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_led_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.657 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.658 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_fd_entry._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2939 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.659 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2939 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.660 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2939 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_fd_entry._entry.661 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.662 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_check_spec._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.664 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.665 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_check_spec._entry.666 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.667 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_check_spec._entry.669 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.670 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_check_spec._entry.672 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.673 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_parse_user_def_field._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.675 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.676 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_parse_user_def_field._entry.677 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.678 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_parse_user_def_field._entry.680 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.681 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_parse_user_def_field._entry.683 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.684 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_check_ext_tuple._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.686 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.687 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_check_ext_tuple._entry.688 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.689 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_check_ext_tuple._entry.691 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.692 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_parse_ring_cookie._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.694 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.695 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_parse_ring_cookie._entry.696 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.697 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_fd_entry_common._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.699 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.700 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_fd_check_user_def_refcnt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.701 to i32), i32 87, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.702 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_update_fd_list._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.703 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.704 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_del_fd_entry._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.705 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.706 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_link_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.707 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.708 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_spoofchk._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.709 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.710 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_spoofchk._entry.711 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.712 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_vf_rate_param_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.714 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.715 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_mac._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.716 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.717 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_mac._entry.718 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.719 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_vf_mac._entry.721 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.722 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_module_existed._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.724 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.725 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_sfp_eeprom_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.726 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.727 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_add_cls_flower._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.728 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.729 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_cls_flower._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.730 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.731 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_cls_flower._entry.732 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3167 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.733 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3167 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_check_cls_flower._entry.735 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.736 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_parse_cls_flower._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.738 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.739 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_phy_link_ksettings._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.740 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.741 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_set_phy_link_ksettings._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.742 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.743 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hclge_get_link_diagnosis_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3201 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.744 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.745 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3207 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.hclge_add_mac_vlan_tbl to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3210 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.hclge_configure to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3211 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.hclge_reset_service_task to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3212 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.hclge_reset_service_task.746 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3213 to i32), i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_cmd_send(ptr noundef %hw, ptr noundef %desc, i32 noundef %num) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef %desc, i32 noundef %num) #16
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_cmd_send(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_mac_update_stats(ptr noundef %hdev) local_unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca [21 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %0 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ae_dev, align 4
  %mac_stats_num = getelementptr inbounds %struct.hnae3_ae_dev, ptr %1, i32 0, i32 5, i32 12
  %2 = ptrtoint ptr %mac_stats_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mac_stats_num, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %mac_stats.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 4
  %div33.i = lshr i32 %3, 2
  %add.i = add nuw nsw i32 %div33.i, 1
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %add.i, i32 32) #16
  %5 = extractvalue { i32, i1 } %4, 1
  br i1 %5, label %if.then.return_crit_edge, label %if.end7.i.i.i, !prof !1452

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end7.i.i.i:                                    ; preds = %if.then
  %6 = extractvalue { i32, i1 } %4, 0
  %call8.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %6, i32 noundef 2848) #19
  %tobool.not.i = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool.not.i, label %if.end7.i.i.i.return_crit_edge, label %if.end.i

if.end7.i.i.i.return_crit_edge:                   ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i:                                         ; preds = %if.end7.i.i.i
  tail call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %call8.i.i.i, i32 noundef 52, i1 noundef zeroext true) #16
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = tail call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %call8.i.i.i, i32 noundef %add.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i.cleanup.sink.split.i_crit_edge

if.end.i.cleanup.sink.split.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split.i

if.end4.i:                                        ; preds = %if.end.i
  %7 = tail call i32 @llvm.umin.i32(i32 %3, i32 105) #16
  %data6.i = getelementptr inbounds %struct.hclge_desc, ptr %call8.i.i.i, i32 0, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end4.i
  %i.043.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end4.i ]
  %desc_data.042.i = phi ptr [ %incdec.ptr10.i, %for.body.i.for.body.i_crit_edge ], [ %data6.i, %if.end4.i ]
  %data.041.i = phi ptr [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ], [ %mac_stats.i, %if.end4.i ]
  %8 = ptrtoint ptr %desc_data.042.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %desc_data.042.i, align 8
  %10 = tail call i64 @llvm.bswap.i64(i64 %9) #16
  %11 = ptrtoint ptr %data.041.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %data.041.i, align 8
  %add9.i = add i64 %12, %10
  store i64 %add9.i, ptr %data.041.i, align 8
  %incdec.ptr.i = getelementptr i64, ptr %data.041.i, i32 1
  %incdec.ptr10.i = getelementptr i64, ptr %desc_data.042.i, i32 1
  %inc.i = add nuw nsw i32 %i.043.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %7
  br i1 %exitcond.not.i, label %for.body.i.cleanup.sink.split.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body.i.cleanup.sink.split.i_crit_edge:        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %for.body.i.cleanup.sink.split.i_crit_edge, %if.end.i.cleanup.sink.split.i_crit_edge
  %retval.0.ph.i = phi i32 [ %call.i.i, %if.end.i.cleanup.sink.split.i_crit_edge ], [ 0, %for.body.i.cleanup.sink.split.i_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call8.i.i.i) #16
  br label %return

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 672, ptr nonnull %desc.i) #16
  %13 = call ptr @memset(ptr %desc.i, i32 255, i32 672)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 50, i1 noundef zeroext true) #16
  %hw.i4 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i5 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i4, ptr noundef nonnull %desc.i, i32 noundef 21) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i5)
  %tobool.not.i6 = icmp eq i32 %call.i.i5, 0
  br i1 %tobool.not.i6, label %if.end.i8, label %do.end.i

do.end.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.57, i32 noundef %call.i.i5) #20
  br label %hclge_mac_update_stats_defective.exit

if.end.i8:                                        ; preds = %if.else
  %mac_stats.i7 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 4
  %data2.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13.for.body.i13_crit_edge, %if.end.i8
  %i.019.i = phi i32 [ 0, %if.end.i8 ], [ %inc.i11, %for.body.i13.for.body.i13_crit_edge ]
  %desc_data.018.i = phi ptr [ %data2.i, %if.end.i8 ], [ %incdec.ptr4.i, %for.body.i13.for.body.i13_crit_edge ]
  %data.017.i = phi ptr [ %mac_stats.i7, %if.end.i8 ], [ %incdec.ptr.i10, %for.body.i13.for.body.i13_crit_edge ]
  %16 = ptrtoint ptr %desc_data.018.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %desc_data.018.i, align 8
  %18 = call i64 @llvm.bswap.i64(i64 %17) #16
  %19 = ptrtoint ptr %data.017.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %data.017.i, align 8
  %add.i9 = add i64 %20, %18
  store i64 %add.i9, ptr %data.017.i, align 8
  %incdec.ptr.i10 = getelementptr i64, ptr %data.017.i, i32 1
  %incdec.ptr4.i = getelementptr i64, ptr %desc_data.018.i, i32 1
  %inc.i11 = add nuw nsw i32 %i.019.i, 1
  %exitcond.not.i12 = icmp eq i32 %inc.i11, 83
  br i1 %exitcond.not.i12, label %for.body.i13.hclge_mac_update_stats_defective.exit_crit_edge, label %for.body.i13.for.body.i13_crit_edge

for.body.i13.for.body.i13_crit_edge:              ; preds = %for.body.i13
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i13

for.body.i13.hclge_mac_update_stats_defective.exit_crit_edge: ; preds = %for.body.i13
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_mac_update_stats_defective.exit

hclge_mac_update_stats_defective.exit:            ; preds = %for.body.i13.hclge_mac_update_stats_defective.exit_crit_edge, %do.end.i
  %retval.0.i14 = phi i32 [ %call.i.i5, %do.end.i ], [ 0, %for.body.i13.hclge_mac_update_stats_defective.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 672, ptr nonnull %desc.i) #16
  br label %return

return:                                           ; preds = %hclge_mac_update_stats_defective.exit, %cleanup.sink.split.i, %if.end7.i.i.i.return_crit_edge, %if.then.return_crit_edge
  %retval.0 = phi i32 [ %retval.0.i14, %hclge_mac_update_stats_defective.exit ], [ -12, %if.end7.i.i.i.return_crit_edge ], [ -12, %if.then.return_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_buffer_alloc(ptr noundef %hdev) local_unnamed_addr #0 align 64 {
entry:
  %desc.i157 = alloca %struct.hclge_desc, align 4
  %desc.i128 = alloca [2 x %struct.hclge_desc], align 4
  %desc.i117 = alloca [2 x %struct.hclge_desc], align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 236) #21
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %pkt_buf_size.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 57
  %1 = ptrtoint ptr %pkt_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pkt_buf_size.i, align 8
  %tx_buf_size.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 58
  %hw_tc_map.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 29
  %3 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %hw_tc_map.i, align 2
  %5 = and i8 %4, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.end.for.inc.i_crit_edge, label %if.then.i

if.end.for.inc.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %if.end
  %6 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tx_buf_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %7)
  %cmp1.i = icmp ult i32 %2, %7
  br i1 %cmp1.i, label %if.then.i.do.end_crit_edge, label %if.then.i.for.inc.i_crit_edge

if.then.i.for.inc.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i.do.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.inc.i:                                        ; preds = %if.then.i.for.inc.i_crit_edge, %if.end.for.inc.i_crit_edge
  %.sink.i = phi i32 [ %7, %if.then.i.for.inc.i_crit_edge ], [ 0, %if.end.for.inc.i_crit_edge ]
  %tx_buf_size5.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 0, i32 2
  %8 = ptrtoint ptr %tx_buf_size5.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %.sink.i, ptr %tx_buf_size5.i, align 4
  %sub.i = sub i32 %2, %.sink.i
  %9 = and i8 %4, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.1.i = icmp eq i8 %9, 0
  br i1 %tobool.not.1.i, label %for.inc.i.for.inc.1.i_crit_edge, label %if.then.1.i

for.inc.i.for.inc.1.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1.i

if.then.1.i:                                      ; preds = %for.inc.i
  %10 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tx_buf_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %11)
  %cmp1.1.i = icmp ult i32 %sub.i, %11
  br i1 %cmp1.1.i, label %if.then.1.i.do.end_crit_edge, label %if.then.1.i.for.inc.1.i_crit_edge

if.then.1.i.for.inc.1.i_crit_edge:                ; preds = %if.then.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1.i

if.then.1.i.do.end_crit_edge:                     ; preds = %if.then.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.inc.1.i:                                      ; preds = %if.then.1.i.for.inc.1.i_crit_edge, %for.inc.i.for.inc.1.i_crit_edge
  %.sink26.i = phi i32 [ %11, %if.then.1.i.for.inc.1.i_crit_edge ], [ 0, %for.inc.i.for.inc.1.i_crit_edge ]
  %tx_buf_size6.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1, i32 2
  %12 = ptrtoint ptr %tx_buf_size6.1.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %.sink26.i, ptr %tx_buf_size6.1.i, align 8
  %sub.1.i = sub i32 %sub.i, %.sink26.i
  %13 = and i8 %4, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.2.i = icmp eq i8 %13, 0
  br i1 %tobool.not.2.i, label %for.inc.1.i.for.inc.2.i_crit_edge, label %if.then.2.i

for.inc.1.i.for.inc.2.i_crit_edge:                ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2.i

if.then.2.i:                                      ; preds = %for.inc.1.i
  %14 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %tx_buf_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.1.i, i32 %15)
  %cmp1.2.i = icmp ult i32 %sub.1.i, %15
  br i1 %cmp1.2.i, label %if.then.2.i.do.end_crit_edge, label %if.then.2.i.for.inc.2.i_crit_edge

if.then.2.i.for.inc.2.i_crit_edge:                ; preds = %if.then.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2.i

if.then.2.i.do.end_crit_edge:                     ; preds = %if.then.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.inc.2.i:                                      ; preds = %if.then.2.i.for.inc.2.i_crit_edge, %for.inc.1.i.for.inc.2.i_crit_edge
  %.sink27.i = phi i32 [ %15, %if.then.2.i.for.inc.2.i_crit_edge ], [ 0, %for.inc.1.i.for.inc.2.i_crit_edge ]
  %tx_buf_size6.2.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2, i32 2
  %16 = ptrtoint ptr %tx_buf_size6.2.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %.sink27.i, ptr %tx_buf_size6.2.i, align 4
  %sub.2.i = sub i32 %sub.1.i, %.sink27.i
  %17 = and i8 %4, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.3.i = icmp eq i8 %17, 0
  br i1 %tobool.not.3.i, label %for.inc.2.i.for.inc.3.i_crit_edge, label %if.then.3.i

for.inc.2.i.for.inc.3.i_crit_edge:                ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3.i

if.then.3.i:                                      ; preds = %for.inc.2.i
  %18 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tx_buf_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.2.i, i32 %19)
  %cmp1.3.i = icmp ult i32 %sub.2.i, %19
  br i1 %cmp1.3.i, label %if.then.3.i.do.end_crit_edge, label %if.then.3.i.for.inc.3.i_crit_edge

if.then.3.i.for.inc.3.i_crit_edge:                ; preds = %if.then.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3.i

if.then.3.i.do.end_crit_edge:                     ; preds = %if.then.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.inc.3.i:                                      ; preds = %if.then.3.i.for.inc.3.i_crit_edge, %for.inc.2.i.for.inc.3.i_crit_edge
  %.sink28.i = phi i32 [ %19, %if.then.3.i.for.inc.3.i_crit_edge ], [ 0, %for.inc.2.i.for.inc.3.i_crit_edge ]
  %tx_buf_size6.3.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3, i32 2
  %20 = ptrtoint ptr %tx_buf_size6.3.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %.sink28.i, ptr %tx_buf_size6.3.i, align 8
  %sub.3.i = sub i32 %sub.2.i, %.sink28.i
  %21 = and i8 %4, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not.4.i = icmp eq i8 %21, 0
  br i1 %tobool.not.4.i, label %for.inc.3.i.for.inc.4.i_crit_edge, label %if.then.4.i

for.inc.3.i.for.inc.4.i_crit_edge:                ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4.i

if.then.4.i:                                      ; preds = %for.inc.3.i
  %22 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %tx_buf_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.3.i, i32 %23)
  %cmp1.4.i = icmp ult i32 %sub.3.i, %23
  br i1 %cmp1.4.i, label %if.then.4.i.do.end_crit_edge, label %if.then.4.i.for.inc.4.i_crit_edge

if.then.4.i.for.inc.4.i_crit_edge:                ; preds = %if.then.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4.i

if.then.4.i.do.end_crit_edge:                     ; preds = %if.then.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.inc.4.i:                                      ; preds = %if.then.4.i.for.inc.4.i_crit_edge, %for.inc.3.i.for.inc.4.i_crit_edge
  %.sink29.i = phi i32 [ %23, %if.then.4.i.for.inc.4.i_crit_edge ], [ 0, %for.inc.3.i.for.inc.4.i_crit_edge ]
  %tx_buf_size6.4.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4, i32 2
  %24 = ptrtoint ptr %tx_buf_size6.4.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %.sink29.i, ptr %tx_buf_size6.4.i, align 4
  %sub.4.i = sub i32 %sub.3.i, %.sink29.i
  %25 = and i8 %4, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.5.i = icmp eq i8 %25, 0
  br i1 %tobool.not.5.i, label %for.inc.4.i.for.inc.5.i_crit_edge, label %if.then.5.i

for.inc.4.i.for.inc.5.i_crit_edge:                ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5.i

if.then.5.i:                                      ; preds = %for.inc.4.i
  %26 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %tx_buf_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.4.i, i32 %27)
  %cmp1.5.i = icmp ult i32 %sub.4.i, %27
  br i1 %cmp1.5.i, label %if.then.5.i.do.end_crit_edge, label %if.then.5.i.for.inc.5.i_crit_edge

if.then.5.i.for.inc.5.i_crit_edge:                ; preds = %if.then.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5.i

if.then.5.i.do.end_crit_edge:                     ; preds = %if.then.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.inc.5.i:                                      ; preds = %if.then.5.i.for.inc.5.i_crit_edge, %for.inc.4.i.for.inc.5.i_crit_edge
  %.sink30.i = phi i32 [ %27, %if.then.5.i.for.inc.5.i_crit_edge ], [ 0, %for.inc.4.i.for.inc.5.i_crit_edge ]
  %tx_buf_size6.5.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5, i32 2
  %28 = ptrtoint ptr %tx_buf_size6.5.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %.sink30.i, ptr %tx_buf_size6.5.i, align 8
  %sub.5.i = sub i32 %sub.4.i, %.sink30.i
  %29 = and i8 %4, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool.not.6.i = icmp eq i8 %29, 0
  br i1 %tobool.not.6.i, label %for.inc.5.i.for.inc.6.i_crit_edge, label %if.then.6.i

for.inc.5.i.for.inc.6.i_crit_edge:                ; preds = %for.inc.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6.i

if.then.6.i:                                      ; preds = %for.inc.5.i
  %30 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %tx_buf_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.5.i, i32 %31)
  %cmp1.6.i = icmp ult i32 %sub.5.i, %31
  br i1 %cmp1.6.i, label %if.then.6.i.do.end_crit_edge, label %if.then.6.i.for.inc.6.i_crit_edge

if.then.6.i.for.inc.6.i_crit_edge:                ; preds = %if.then.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6.i

if.then.6.i.do.end_crit_edge:                     ; preds = %if.then.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.inc.6.i:                                      ; preds = %if.then.6.i.for.inc.6.i_crit_edge, %for.inc.5.i.for.inc.6.i_crit_edge
  %.sink31.i = phi i32 [ %31, %if.then.6.i.for.inc.6.i_crit_edge ], [ 0, %for.inc.5.i.for.inc.6.i_crit_edge ]
  %tx_buf_size6.6.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6, i32 2
  %32 = ptrtoint ptr %tx_buf_size6.6.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %.sink31.i, ptr %tx_buf_size6.6.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %4)
  %tobool.not.7.i = icmp sgt i8 %4, -1
  br i1 %tobool.not.7.i, label %for.inc.6.i.if.end4_crit_edge, label %if.then.7.i

for.inc.6.i.if.end4_crit_edge:                    ; preds = %for.inc.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then.7.i:                                      ; preds = %for.inc.6.i
  %sub.6.i = sub i32 %sub.5.i, %.sink31.i
  %33 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %tx_buf_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.6.i, i32 %34)
  %cmp1.7.i = icmp ult i32 %sub.6.i, %34
  br i1 %cmp1.7.i, label %if.then.7.i.do.end_crit_edge, label %if.then.7.i.if.end4_crit_edge

if.then.7.i.if.end4_crit_edge:                    ; preds = %if.then.7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then.7.i.do.end_crit_edge:                     ; preds = %if.then.7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %if.then.7.i.do.end_crit_edge, %if.then.6.i.do.end_crit_edge, %if.then.5.i.do.end_crit_edge, %if.then.4.i.do.end_crit_edge, %if.then.3.i.do.end_crit_edge, %if.then.2.i.do.end_crit_edge, %if.then.1.i.do.end_crit_edge, %if.then.i.do.end_crit_edge
  %35 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %36, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str, i32 noundef -12) #20
  br label %out

if.end4:                                          ; preds = %if.then.7.i.if.end4_crit_edge, %for.inc.6.i.if.end4_crit_edge
  %.sink32.i = phi i32 [ %34, %if.then.7.i.if.end4_crit_edge ], [ 0, %for.inc.6.i.if.end4_crit_edge ]
  %tx_buf_size5.7.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7, i32 2
  %37 = ptrtoint ptr %tx_buf_size5.7.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %.sink32.i, ptr %tx_buf_size5.7.i, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %38 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %39 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 2305, i1 noundef zeroext false) #16
  %40 = ptrtoint ptr %tx_buf_size5.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %tx_buf_size5.i, align 4
  %shr.i.i = lshr i32 %41, 7
  %42 = trunc i32 %shr.i.i to i16
  %conv2.i.i = or i16 %42, -32768
  %43 = call i16 @llvm.bswap.i16(i16 %conv2.i.i) #16
  %44 = ptrtoint ptr %38 to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %43, ptr %38, align 4
  %45 = ptrtoint ptr %tx_buf_size6.1.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %tx_buf_size6.1.i, align 8
  %shr.1.i.i = lshr i32 %46, 7
  %47 = trunc i32 %shr.1.i.i to i16
  %conv2.1.i.i = or i16 %47, -32768
  %48 = call i16 @llvm.bswap.i16(i16 %conv2.1.i.i) #16
  %arrayidx4.1.i.i = getelementptr inbounds [8 x i16], ptr %38, i32 0, i32 1
  %49 = ptrtoint ptr %arrayidx4.1.i.i to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %48, ptr %arrayidx4.1.i.i, align 2
  %50 = ptrtoint ptr %tx_buf_size6.2.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %tx_buf_size6.2.i, align 4
  %shr.2.i.i = lshr i32 %51, 7
  %52 = trunc i32 %shr.2.i.i to i16
  %conv2.2.i.i = or i16 %52, -32768
  %53 = call i16 @llvm.bswap.i16(i16 %conv2.2.i.i) #16
  %arrayidx4.2.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4, i32 1
  %54 = ptrtoint ptr %arrayidx4.2.i.i to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 %53, ptr %arrayidx4.2.i.i, align 4
  %55 = ptrtoint ptr %tx_buf_size6.3.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %tx_buf_size6.3.i, align 8
  %shr.3.i.i = lshr i32 %56, 7
  %57 = trunc i32 %shr.3.i.i to i16
  %conv2.3.i.i = or i16 %57, -32768
  %58 = call i16 @llvm.bswap.i16(i16 %conv2.3.i.i) #16
  %arrayidx4.3.i.i = getelementptr inbounds [8 x i16], ptr %38, i32 0, i32 3
  %59 = ptrtoint ptr %arrayidx4.3.i.i to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 %58, ptr %arrayidx4.3.i.i, align 2
  %60 = ptrtoint ptr %tx_buf_size6.4.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %tx_buf_size6.4.i, align 4
  %shr.4.i.i = lshr i32 %61, 7
  %62 = trunc i32 %shr.4.i.i to i16
  %conv2.4.i.i = or i16 %62, -32768
  %63 = call i16 @llvm.bswap.i16(i16 %conv2.4.i.i) #16
  %arrayidx4.4.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4, i32 2
  %64 = ptrtoint ptr %arrayidx4.4.i.i to i32
  call void @__asan_store2_noabort(i32 %64)
  store i16 %63, ptr %arrayidx4.4.i.i, align 4
  %65 = ptrtoint ptr %tx_buf_size6.5.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %tx_buf_size6.5.i, align 8
  %shr.5.i.i = lshr i32 %66, 7
  %67 = trunc i32 %shr.5.i.i to i16
  %conv2.5.i.i = or i16 %67, -32768
  %68 = call i16 @llvm.bswap.i16(i16 %conv2.5.i.i) #16
  %arrayidx4.5.i.i = getelementptr inbounds [8 x i16], ptr %38, i32 0, i32 5
  %69 = ptrtoint ptr %arrayidx4.5.i.i to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 %68, ptr %arrayidx4.5.i.i, align 2
  %70 = ptrtoint ptr %tx_buf_size6.6.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %tx_buf_size6.6.i, align 4
  %shr.6.i.i = lshr i32 %71, 7
  %72 = trunc i32 %shr.6.i.i to i16
  %conv2.6.i.i = or i16 %72, -32768
  %73 = call i16 @llvm.bswap.i16(i16 %conv2.6.i.i) #16
  %arrayidx4.6.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4, i32 3
  %74 = ptrtoint ptr %arrayidx4.6.i.i to i32
  call void @__asan_store2_noabort(i32 %74)
  store i16 %73, ptr %arrayidx4.6.i.i, align 4
  %75 = ptrtoint ptr %tx_buf_size5.7.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %tx_buf_size5.7.i, align 8
  %shr.7.i.i = lshr i32 %76, 7
  %77 = trunc i32 %shr.7.i.i to i16
  %conv2.7.i.i = or i16 %77, -32768
  %78 = call i16 @llvm.bswap.i16(i16 %conv2.7.i.i) #16
  %arrayidx4.7.i.i = getelementptr inbounds [8 x i16], ptr %38, i32 0, i32 7
  %79 = ptrtoint ptr %arrayidx4.7.i.i to i32
  call void @__asan_store2_noabort(i32 %79)
  store i16 %78, ptr %arrayidx4.7.i.i, align 2
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end13, label %do.end10

do.end10:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %80 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.61, i32 noundef %call.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  %82 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %83, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.59, i32 noundef %call.i.i.i) #20
  %84 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %hdev, align 8
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %85, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.6, i32 noundef %call.i.i.i) #20
  br label %out

if.end13:                                         ; preds = %if.end4
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %86 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %ae_dev.i, align 4
  %flag.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %87, i32 0, i32 3
  %88 = ptrtoint ptr %flag.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %flag.i, align 4
  %90 = and i32 %89, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool.not.i99 = icmp eq i32 %90, 0
  %91 = ptrtoint ptr %pkt_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %pkt_buf_size.i, align 8
  %93 = ptrtoint ptr %tx_buf_size5.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %tx_buf_size5.i, align 4
  %95 = ptrtoint ptr %tx_buf_size6.1.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %tx_buf_size6.1.i, align 8
  %97 = ptrtoint ptr %tx_buf_size6.2.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %tx_buf_size6.2.i, align 4
  %99 = ptrtoint ptr %tx_buf_size6.3.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %tx_buf_size6.3.i, align 8
  %101 = ptrtoint ptr %tx_buf_size6.4.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %tx_buf_size6.4.i, align 4
  %103 = ptrtoint ptr %tx_buf_size6.5.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %tx_buf_size6.5.i, align 8
  %105 = ptrtoint ptr %tx_buf_size6.6.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %tx_buf_size6.6.i, align 4
  %107 = ptrtoint ptr %tx_buf_size5.7.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %tx_buf_size5.7.i, align 8
  %109 = add i32 %94, %96
  %110 = add i32 %109, %98
  %111 = add i32 %110, %100
  %112 = add i32 %111, %102
  %113 = add i32 %112, %104
  %114 = add i32 %113, %106
  %115 = add i32 %114, %108
  %sub.i109 = sub i32 %92, %115
  br i1 %tobool.not.i99, label %if.then.i110, label %if.end3.i

if.then.i110:                                     ; preds = %if.end13
  %call1.i = call fastcc zeroext i1 @hclge_is_rx_buf_ok(ptr noundef %hdev, ptr noundef nonnull %call7.i.i, i32 noundef %sub.i109) #16
  br i1 %call1.i, label %if.then.i110.if.end22_crit_edge, label %if.then.i110.do.end19_crit_edge

if.then.i110.do.end19_crit_edge:                  ; preds = %if.then.i110
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end19

if.then.i110.if.end22_crit_edge:                  ; preds = %if.then.i110
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.end3.i:                                        ; preds = %if.end13
  %116 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %hw_tc_map.i, align 2
  %conv.i.i.i = zext i8 %117 to i32
  %118 = and i32 %conv.i.i.i, 1
  %119 = lshr i32 %conv.i.i.i, 1
  %120 = and i32 %119, 1
  %121 = lshr i32 %conv.i.i.i, 2
  %122 = and i32 %121, 1
  %123 = lshr i32 %conv.i.i.i, 3
  %124 = and i32 %123, 1
  %125 = lshr i32 %conv.i.i.i, 4
  %126 = and i32 %125, 1
  %127 = lshr i32 %conv.i.i.i, 5
  %128 = and i32 %127, 1
  %129 = lshr i32 %conv.i.i.i, 6
  %130 = and i32 %129, 1
  %131 = lshr i32 %conv.i.i.i, 7
  %spec.select.1.i.i.i = add nuw nsw i32 %131, %118
  %spec.select.2.i.i.i = add nuw nsw i32 %spec.select.1.i.i.i, %120
  %spec.select.3.i.i.i = add nuw nsw i32 %spec.select.2.i.i.i, %122
  %spec.select.4.i.i.i = add nuw nsw i32 %spec.select.3.i.i.i, %124
  %spec.select.5.i.i.i = add nuw nsw i32 %spec.select.4.i.i.i, %126
  %spec.select.6.i.i.i = add nuw nsw i32 %spec.select.5.i.i.i, %128
  %spec.select.7.i.i.i = add nuw nsw i32 %spec.select.6.i.i.i, %130
  %mps.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 60
  %132 = ptrtoint ptr %mps.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %mps.i.i, align 4
  %shr.i.i111 = lshr i32 %133, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.7.i.i.i)
  %tobool.not.i.i112 = icmp eq i32 %spec.select.7.i.i.i, 0
  br i1 %tobool.not.i.i112, label %if.end3.i.if.end.i.i_crit_edge, label %if.then.i.i

if.end3.i.if.end.i.i_crit_edge:                   ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  %div.i.i = udiv i32 %sub.i109, %spec.select.7.i.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.end3.i.if.end.i.i_crit_edge
  %rx_priv.0.i.i = phi i32 [ %div.i.i, %if.then.i.i ], [ %sub.i109, %if.end3.i.if.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %spec.select.7.i.i.i)
  %cmp.i.i = icmp ult i32 %spec.select.7.i.i.i, 3
  %mul.i.i = mul i32 %rx_priv.0.i.i, 90
  %div3.i.i = udiv i32 %mul.i.i, 100
  %rx_priv.1.i.i = select i1 %cmp.i.i, i32 %div3.i.i, i32 %rx_priv.0.i.i
  %dv_buf_size.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 59
  %134 = ptrtoint ptr %dv_buf_size.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %dv_buf_size.i.i, align 8
  %mul5.i.i = mul i32 %shr.i.i111, 5
  %add6.i.i = add i32 %mul5.i.i, 15359
  %sub7.i.i = add i32 %add6.i.i, %135
  %or.i.i = or i32 %sub7.i.i, 255
  %add8.i.i = add i32 %or.i.i, 1
  %and.i.i = and i32 %rx_priv.1.i.i, -256
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i.i, i32 %add8.i.i)
  %cmp9.i.i = icmp ult i32 %and.i.i, %add8.i.i
  br i1 %cmp9.i.i, label %if.end7.i, label %for.body.preheader.i.i

for.body.preheader.i.i:                           ; preds = %if.end.i.i
  %enable.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 0, i32 3
  %136 = ptrtoint ptr %enable.i.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store i32 0, ptr %enable.i.i, align 8
  %137 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 0, ptr %call7.i.i, align 8
  %high.i.i = getelementptr inbounds %struct.hclge_waterline, ptr %call7.i.i, i32 0, i32 1
  %138 = ptrtoint ptr %high.i.i to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 0, ptr %high.i.i, align 4
  %buf_size.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 0, i32 1
  %139 = ptrtoint ptr %buf_size.i.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 0, ptr %buf_size.i.i, align 8
  %140 = and i8 %117, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %140)
  %tobool15.not.i.i = icmp eq i8 %140, 0
  br i1 %tobool15.not.i.i, label %for.body.preheader.i.i.cleanup.i.i_crit_edge, label %if.end17.i.i

for.body.preheader.i.i.cleanup.i.i_crit_edge:     ; preds = %for.body.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i.i

if.end17.i.i:                                     ; preds = %for.body.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %141 = ptrtoint ptr %enable.i.i to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 1, ptr %enable.i.i, align 8
  %142 = ptrtoint ptr %buf_size.i.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %and.i.i, ptr %buf_size.i.i, align 8
  %sub21.i.i = sub i32 %and.i.i, %135
  %143 = ptrtoint ptr %high.i.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 %sub21.i.i, ptr %high.i.i, align 4
  %sub26.i.i = add i32 %sub21.i.i, -6144
  %144 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %sub26.i.i, ptr %call7.i.i, align 8
  br label %cleanup.i.i

cleanup.i.i:                                      ; preds = %if.end17.i.i, %for.body.preheader.i.i.cleanup.i.i_crit_edge
  %arrayidx.1.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1
  %enable.1.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1, i32 3
  %145 = ptrtoint ptr %enable.1.i.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 0, ptr %enable.1.i.i, align 4
  %146 = ptrtoint ptr %arrayidx.1.i.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 0, ptr %arrayidx.1.i.i, align 4
  %high.1.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1, i32 0, i32 1
  %147 = ptrtoint ptr %high.1.i.i to i32
  call void @__asan_store4_noabort(i32 %147)
  store i32 0, ptr %high.1.i.i, align 8
  %buf_size.1.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1, i32 1
  %148 = ptrtoint ptr %buf_size.1.i.i to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 0, ptr %buf_size.1.i.i, align 4
  %149 = and i8 %117, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %149)
  %tobool15.not.1.i.i = icmp eq i8 %149, 0
  br i1 %tobool15.not.1.i.i, label %cleanup.i.i.cleanup.1.i.i_crit_edge, label %if.end17.1.i.i

cleanup.i.i.cleanup.1.i.i_crit_edge:              ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.1.i.i

if.end17.1.i.i:                                   ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %150 = ptrtoint ptr %enable.1.i.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 1, ptr %enable.1.i.i, align 4
  %151 = ptrtoint ptr %buf_size.1.i.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %and.i.i, ptr %buf_size.1.i.i, align 4
  %sub21.1.i.i = sub i32 %and.i.i, %135
  %152 = ptrtoint ptr %high.1.i.i to i32
  call void @__asan_store4_noabort(i32 %152)
  store i32 %sub21.1.i.i, ptr %high.1.i.i, align 8
  %sub26.1.i.i = add i32 %sub21.1.i.i, -6144
  %153 = ptrtoint ptr %arrayidx.1.i.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 %sub26.1.i.i, ptr %arrayidx.1.i.i, align 4
  br label %cleanup.1.i.i

cleanup.1.i.i:                                    ; preds = %if.end17.1.i.i, %cleanup.i.i.cleanup.1.i.i_crit_edge
  %arrayidx.2.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2
  %enable.2.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2, i32 3
  %154 = ptrtoint ptr %enable.2.i.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 0, ptr %enable.2.i.i, align 8
  %155 = ptrtoint ptr %arrayidx.2.i.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 0, ptr %arrayidx.2.i.i, align 8
  %high.2.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2, i32 0, i32 1
  %156 = ptrtoint ptr %high.2.i.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store i32 0, ptr %high.2.i.i, align 4
  %buf_size.2.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2, i32 1
  %157 = ptrtoint ptr %buf_size.2.i.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 0, ptr %buf_size.2.i.i, align 8
  %158 = and i8 %117, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %158)
  %tobool15.not.2.i.i = icmp eq i8 %158, 0
  br i1 %tobool15.not.2.i.i, label %cleanup.1.i.i.cleanup.2.i.i_crit_edge, label %if.end17.2.i.i

cleanup.1.i.i.cleanup.2.i.i_crit_edge:            ; preds = %cleanup.1.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.2.i.i

if.end17.2.i.i:                                   ; preds = %cleanup.1.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %159 = ptrtoint ptr %enable.2.i.i to i32
  call void @__asan_store4_noabort(i32 %159)
  store i32 1, ptr %enable.2.i.i, align 8
  %160 = ptrtoint ptr %buf_size.2.i.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 %and.i.i, ptr %buf_size.2.i.i, align 8
  %sub21.2.i.i = sub i32 %and.i.i, %135
  %161 = ptrtoint ptr %high.2.i.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store i32 %sub21.2.i.i, ptr %high.2.i.i, align 4
  %sub26.2.i.i = add i32 %sub21.2.i.i, -6144
  %162 = ptrtoint ptr %arrayidx.2.i.i to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 %sub26.2.i.i, ptr %arrayidx.2.i.i, align 8
  br label %cleanup.2.i.i

cleanup.2.i.i:                                    ; preds = %if.end17.2.i.i, %cleanup.1.i.i.cleanup.2.i.i_crit_edge
  %arrayidx.3.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3
  %enable.3.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3, i32 3
  %163 = ptrtoint ptr %enable.3.i.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 0, ptr %enable.3.i.i, align 4
  %164 = ptrtoint ptr %arrayidx.3.i.i to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 0, ptr %arrayidx.3.i.i, align 4
  %high.3.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3, i32 0, i32 1
  %165 = ptrtoint ptr %high.3.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 0, ptr %high.3.i.i, align 8
  %buf_size.3.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3, i32 1
  %166 = ptrtoint ptr %buf_size.3.i.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 0, ptr %buf_size.3.i.i, align 4
  %167 = and i8 %117, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %167)
  %tobool15.not.3.i.i = icmp eq i8 %167, 0
  br i1 %tobool15.not.3.i.i, label %cleanup.2.i.i.cleanup.3.i.i_crit_edge, label %if.end17.3.i.i

cleanup.2.i.i.cleanup.3.i.i_crit_edge:            ; preds = %cleanup.2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.3.i.i

if.end17.3.i.i:                                   ; preds = %cleanup.2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %168 = ptrtoint ptr %enable.3.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store i32 1, ptr %enable.3.i.i, align 4
  %169 = ptrtoint ptr %buf_size.3.i.i to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 %and.i.i, ptr %buf_size.3.i.i, align 4
  %sub21.3.i.i = sub i32 %and.i.i, %135
  %170 = ptrtoint ptr %high.3.i.i to i32
  call void @__asan_store4_noabort(i32 %170)
  store i32 %sub21.3.i.i, ptr %high.3.i.i, align 8
  %sub26.3.i.i = add i32 %sub21.3.i.i, -6144
  %171 = ptrtoint ptr %arrayidx.3.i.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %sub26.3.i.i, ptr %arrayidx.3.i.i, align 4
  br label %cleanup.3.i.i

cleanup.3.i.i:                                    ; preds = %if.end17.3.i.i, %cleanup.2.i.i.cleanup.3.i.i_crit_edge
  %arrayidx.4.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4
  %enable.4.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4, i32 3
  %172 = ptrtoint ptr %enable.4.i.i to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 0, ptr %enable.4.i.i, align 8
  %173 = ptrtoint ptr %arrayidx.4.i.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 0, ptr %arrayidx.4.i.i, align 8
  %high.4.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4, i32 0, i32 1
  %174 = ptrtoint ptr %high.4.i.i to i32
  call void @__asan_store4_noabort(i32 %174)
  store i32 0, ptr %high.4.i.i, align 4
  %buf_size.4.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4, i32 1
  %175 = ptrtoint ptr %buf_size.4.i.i to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 0, ptr %buf_size.4.i.i, align 8
  %176 = and i8 %117, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %176)
  %tobool15.not.4.i.i = icmp eq i8 %176, 0
  br i1 %tobool15.not.4.i.i, label %cleanup.3.i.i.cleanup.4.i.i_crit_edge, label %if.end17.4.i.i

cleanup.3.i.i.cleanup.4.i.i_crit_edge:            ; preds = %cleanup.3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.4.i.i

if.end17.4.i.i:                                   ; preds = %cleanup.3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %177 = ptrtoint ptr %enable.4.i.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 1, ptr %enable.4.i.i, align 8
  %178 = ptrtoint ptr %buf_size.4.i.i to i32
  call void @__asan_store4_noabort(i32 %178)
  store i32 %and.i.i, ptr %buf_size.4.i.i, align 8
  %sub21.4.i.i = sub i32 %and.i.i, %135
  %179 = ptrtoint ptr %high.4.i.i to i32
  call void @__asan_store4_noabort(i32 %179)
  store i32 %sub21.4.i.i, ptr %high.4.i.i, align 4
  %sub26.4.i.i = add i32 %sub21.4.i.i, -6144
  %180 = ptrtoint ptr %arrayidx.4.i.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store i32 %sub26.4.i.i, ptr %arrayidx.4.i.i, align 8
  br label %cleanup.4.i.i

cleanup.4.i.i:                                    ; preds = %if.end17.4.i.i, %cleanup.3.i.i.cleanup.4.i.i_crit_edge
  %arrayidx.5.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5
  %enable.5.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5, i32 3
  %181 = ptrtoint ptr %enable.5.i.i to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 0, ptr %enable.5.i.i, align 4
  %182 = ptrtoint ptr %arrayidx.5.i.i to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 0, ptr %arrayidx.5.i.i, align 4
  %high.5.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5, i32 0, i32 1
  %183 = ptrtoint ptr %high.5.i.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 0, ptr %high.5.i.i, align 8
  %buf_size.5.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5, i32 1
  %184 = ptrtoint ptr %buf_size.5.i.i to i32
  call void @__asan_store4_noabort(i32 %184)
  store i32 0, ptr %buf_size.5.i.i, align 4
  %185 = and i8 %117, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %185)
  %tobool15.not.5.i.i = icmp eq i8 %185, 0
  br i1 %tobool15.not.5.i.i, label %cleanup.4.i.i.cleanup.5.i.i_crit_edge, label %if.end17.5.i.i

cleanup.4.i.i.cleanup.5.i.i_crit_edge:            ; preds = %cleanup.4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.5.i.i

if.end17.5.i.i:                                   ; preds = %cleanup.4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %186 = ptrtoint ptr %enable.5.i.i to i32
  call void @__asan_store4_noabort(i32 %186)
  store i32 1, ptr %enable.5.i.i, align 4
  %187 = ptrtoint ptr %buf_size.5.i.i to i32
  call void @__asan_store4_noabort(i32 %187)
  store i32 %and.i.i, ptr %buf_size.5.i.i, align 4
  %sub21.5.i.i = sub i32 %and.i.i, %135
  %188 = ptrtoint ptr %high.5.i.i to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 %sub21.5.i.i, ptr %high.5.i.i, align 8
  %sub26.5.i.i = add i32 %sub21.5.i.i, -6144
  %189 = ptrtoint ptr %arrayidx.5.i.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 %sub26.5.i.i, ptr %arrayidx.5.i.i, align 4
  br label %cleanup.5.i.i

cleanup.5.i.i:                                    ; preds = %if.end17.5.i.i, %cleanup.4.i.i.cleanup.5.i.i_crit_edge
  %arrayidx.6.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6
  %enable.6.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6, i32 3
  %190 = ptrtoint ptr %enable.6.i.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 0, ptr %enable.6.i.i, align 8
  %191 = ptrtoint ptr %arrayidx.6.i.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 0, ptr %arrayidx.6.i.i, align 8
  %high.6.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6, i32 0, i32 1
  %192 = ptrtoint ptr %high.6.i.i to i32
  call void @__asan_store4_noabort(i32 %192)
  store i32 0, ptr %high.6.i.i, align 4
  %buf_size.6.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6, i32 1
  %193 = ptrtoint ptr %buf_size.6.i.i to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 0, ptr %buf_size.6.i.i, align 8
  %194 = and i8 %117, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %194)
  %tobool15.not.6.i.i = icmp eq i8 %194, 0
  br i1 %tobool15.not.6.i.i, label %cleanup.5.i.i.cleanup.6.i.i_crit_edge, label %if.end17.6.i.i

cleanup.5.i.i.cleanup.6.i.i_crit_edge:            ; preds = %cleanup.5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.6.i.i

if.end17.6.i.i:                                   ; preds = %cleanup.5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %195 = ptrtoint ptr %enable.6.i.i to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 1, ptr %enable.6.i.i, align 8
  %196 = ptrtoint ptr %buf_size.6.i.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store i32 %and.i.i, ptr %buf_size.6.i.i, align 8
  %sub21.6.i.i = sub i32 %and.i.i, %135
  %197 = ptrtoint ptr %high.6.i.i to i32
  call void @__asan_store4_noabort(i32 %197)
  store i32 %sub21.6.i.i, ptr %high.6.i.i, align 4
  %sub26.6.i.i = add i32 %sub21.6.i.i, -6144
  %198 = ptrtoint ptr %arrayidx.6.i.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 %sub26.6.i.i, ptr %arrayidx.6.i.i, align 8
  br label %cleanup.6.i.i

cleanup.6.i.i:                                    ; preds = %if.end17.6.i.i, %cleanup.5.i.i.cleanup.6.i.i_crit_edge
  %arrayidx.7.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7
  %enable.7.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7, i32 3
  %199 = ptrtoint ptr %enable.7.i.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 0, ptr %enable.7.i.i, align 4
  %200 = ptrtoint ptr %arrayidx.7.i.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 0, ptr %arrayidx.7.i.i, align 4
  %high.7.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7, i32 0, i32 1
  %201 = ptrtoint ptr %high.7.i.i to i32
  call void @__asan_store4_noabort(i32 %201)
  store i32 0, ptr %high.7.i.i, align 8
  %buf_size.7.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7, i32 1
  %202 = ptrtoint ptr %buf_size.7.i.i to i32
  call void @__asan_store4_noabort(i32 %202)
  store i32 0, ptr %buf_size.7.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %117)
  %tobool15.not.7.i.i = icmp sgt i8 %117, -1
  br i1 %tobool15.not.7.i.i, label %cleanup.6.i.i.hclge_only_alloc_priv_buff.exit.i_crit_edge, label %if.end17.7.i.i

cleanup.6.i.i.hclge_only_alloc_priv_buff.exit.i_crit_edge: ; preds = %cleanup.6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_only_alloc_priv_buff.exit.i

if.end17.7.i.i:                                   ; preds = %cleanup.6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %203 = ptrtoint ptr %enable.7.i.i to i32
  call void @__asan_store4_noabort(i32 %203)
  store i32 1, ptr %enable.7.i.i, align 4
  %204 = ptrtoint ptr %buf_size.7.i.i to i32
  call void @__asan_store4_noabort(i32 %204)
  store i32 %and.i.i, ptr %buf_size.7.i.i, align 4
  %sub21.7.i.i = sub i32 %and.i.i, %135
  %205 = ptrtoint ptr %high.7.i.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %sub21.7.i.i, ptr %high.7.i.i, align 8
  %sub26.7.i.i = add i32 %sub21.7.i.i, -6144
  %206 = ptrtoint ptr %arrayidx.7.i.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 %sub26.7.i.i, ptr %arrayidx.7.i.i, align 4
  br label %hclge_only_alloc_priv_buff.exit.i

hclge_only_alloc_priv_buff.exit.i:                ; preds = %if.end17.7.i.i, %cleanup.6.i.i.hclge_only_alloc_priv_buff.exit.i_crit_edge
  %buf_size29.i.i = getelementptr inbounds %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 2
  %207 = ptrtoint ptr %buf_size29.i.i to i32
  call void @__asan_store4_noabort(i32 %207)
  store i32 0, ptr %buf_size29.i.i, align 8
  br label %if.end22

if.end7.i:                                        ; preds = %if.end.i.i
  %call8.i = call fastcc zeroext i1 @hclge_rx_buf_calc_all(ptr noundef %hdev, i1 noundef zeroext true, ptr noundef nonnull %call7.i.i) #16
  br i1 %call8.i, label %if.end7.i.if.end22_crit_edge, label %if.end10.i

if.end7.i.if.end22_crit_edge:                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.end10.i:                                       ; preds = %if.end7.i
  %call11.i = call fastcc zeroext i1 @hclge_rx_buf_calc_all(ptr noundef %hdev, i1 noundef zeroext false, ptr noundef nonnull %call7.i.i) #16
  br i1 %call11.i, label %if.end10.i.if.end22_crit_edge, label %if.end13.i

if.end10.i.if.end22_crit_edge:                    ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.end13.i:                                       ; preds = %if.end10.i
  %208 = ptrtoint ptr %pkt_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %pkt_buf_size.i, align 8
  %210 = ptrtoint ptr %tx_buf_size5.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %tx_buf_size5.i, align 4
  %212 = ptrtoint ptr %tx_buf_size6.1.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %tx_buf_size6.1.i, align 8
  %214 = ptrtoint ptr %tx_buf_size6.2.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %tx_buf_size6.2.i, align 4
  %216 = ptrtoint ptr %tx_buf_size6.3.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %tx_buf_size6.3.i, align 8
  %218 = ptrtoint ptr %tx_buf_size6.4.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %tx_buf_size6.4.i, align 4
  %220 = ptrtoint ptr %tx_buf_size6.5.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %tx_buf_size6.5.i, align 8
  %222 = ptrtoint ptr %tx_buf_size6.6.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %tx_buf_size6.6.i, align 4
  %224 = ptrtoint ptr %tx_buf_size5.7.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %tx_buf_size5.7.i, align 8
  %226 = add i32 %211, %213
  %227 = add i32 %226, %215
  %228 = add i32 %227, %217
  %229 = add i32 %228, %219
  %230 = add i32 %229, %221
  %231 = add i32 %230, %223
  %232 = add i32 %231, %225
  %sub.i44.i = sub i32 %209, %232
  %233 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %233)
  %234 = load i8, ptr %hw_tc_map.i, align 2
  %conv.i.i46.i = zext i8 %234 to i32
  %hw_pfc_map.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 37, i32 7
  %and.i.i.i = and i32 %conv.i.i46.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end13.i.for.inc.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end13.i.for.inc.i.i.i_crit_edge:               ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end13.i
  %235 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %235)
  %236 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %237 = and i8 %236, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %237)
  %tobool4.not.i.i.i = icmp eq i8 %237, 0
  br i1 %tobool4.not.i.i.i, label %land.lhs.true5.i.i.i, label %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge

land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

land.lhs.true5.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.i.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 0, i32 3
  %238 = ptrtoint ptr %enable.i.i.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %enable.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %239)
  %tobool6.not.i.i.i = icmp ne i32 %239, 0
  %inc.i.i.i = zext i1 %tobool6.not.i.i.i to i32
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true5.i.i.i, %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge, %if.end13.i.for.inc.i.i.i_crit_edge
  %cnt.1.i.i.i = phi i32 [ 0, %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge ], [ 0, %if.end13.i.for.inc.i.i.i_crit_edge ], [ %inc.i.i.i, %land.lhs.true5.i.i.i ]
  %and.1.i.i.i = and i32 %conv.i.i46.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1.i.i.i)
  %tobool.not.1.i.i.i = icmp eq i32 %and.1.i.i.i, 0
  br i1 %tobool.not.1.i.i.i, label %for.inc.i.i.i.for.inc.1.i.i.i_crit_edge, label %land.lhs.true.1.i.i.i

for.inc.i.i.i.for.inc.1.i.i.i_crit_edge:          ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1.i.i.i

land.lhs.true.1.i.i.i:                            ; preds = %for.inc.i.i.i
  %240 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %240)
  %241 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %242 = and i8 %241, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %242)
  %tobool4.not.1.i.i.i = icmp eq i8 %242, 0
  br i1 %tobool4.not.1.i.i.i, label %land.lhs.true5.1.i.i.i, label %land.lhs.true.1.i.i.i.for.inc.1.i.i.i_crit_edge

land.lhs.true.1.i.i.i.for.inc.1.i.i.i_crit_edge:  ; preds = %land.lhs.true.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1.i.i.i

land.lhs.true5.1.i.i.i:                           ; preds = %land.lhs.true.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.1.i.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1, i32 3
  %243 = ptrtoint ptr %enable.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %enable.1.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %244)
  %tobool6.not.1.i.i.i = icmp ne i32 %244, 0
  %inc.1.i.i.i = zext i1 %tobool6.not.1.i.i.i to i32
  %spec.select.1.i.i47.i = add nuw nsw i32 %cnt.1.i.i.i, %inc.1.i.i.i
  br label %for.inc.1.i.i.i

for.inc.1.i.i.i:                                  ; preds = %land.lhs.true5.1.i.i.i, %land.lhs.true.1.i.i.i.for.inc.1.i.i.i_crit_edge, %for.inc.i.i.i.for.inc.1.i.i.i_crit_edge
  %cnt.1.1.i.i.i = phi i32 [ %cnt.1.i.i.i, %land.lhs.true.1.i.i.i.for.inc.1.i.i.i_crit_edge ], [ %cnt.1.i.i.i, %for.inc.i.i.i.for.inc.1.i.i.i_crit_edge ], [ %spec.select.1.i.i47.i, %land.lhs.true5.1.i.i.i ]
  %and.2.i.i.i = and i32 %conv.i.i46.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2.i.i.i)
  %tobool.not.2.i.i.i = icmp eq i32 %and.2.i.i.i, 0
  br i1 %tobool.not.2.i.i.i, label %for.inc.1.i.i.i.for.inc.2.i.i.i_crit_edge, label %land.lhs.true.2.i.i.i

for.inc.1.i.i.i.for.inc.2.i.i.i_crit_edge:        ; preds = %for.inc.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2.i.i.i

land.lhs.true.2.i.i.i:                            ; preds = %for.inc.1.i.i.i
  %245 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %245)
  %246 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %247 = and i8 %246, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %247)
  %tobool4.not.2.i.i.i = icmp eq i8 %247, 0
  br i1 %tobool4.not.2.i.i.i, label %land.lhs.true5.2.i.i.i, label %land.lhs.true.2.i.i.i.for.inc.2.i.i.i_crit_edge

land.lhs.true.2.i.i.i.for.inc.2.i.i.i_crit_edge:  ; preds = %land.lhs.true.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2.i.i.i

land.lhs.true5.2.i.i.i:                           ; preds = %land.lhs.true.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.2.i.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2, i32 3
  %248 = ptrtoint ptr %enable.2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %enable.2.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %249)
  %tobool6.not.2.i.i.i = icmp ne i32 %249, 0
  %inc.2.i.i.i = zext i1 %tobool6.not.2.i.i.i to i32
  %spec.select.2.i.i48.i = add nuw nsw i32 %cnt.1.1.i.i.i, %inc.2.i.i.i
  br label %for.inc.2.i.i.i

for.inc.2.i.i.i:                                  ; preds = %land.lhs.true5.2.i.i.i, %land.lhs.true.2.i.i.i.for.inc.2.i.i.i_crit_edge, %for.inc.1.i.i.i.for.inc.2.i.i.i_crit_edge
  %cnt.1.2.i.i.i = phi i32 [ %cnt.1.1.i.i.i, %land.lhs.true.2.i.i.i.for.inc.2.i.i.i_crit_edge ], [ %cnt.1.1.i.i.i, %for.inc.1.i.i.i.for.inc.2.i.i.i_crit_edge ], [ %spec.select.2.i.i48.i, %land.lhs.true5.2.i.i.i ]
  %and.3.i.i.i = and i32 %conv.i.i46.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3.i.i.i)
  %tobool.not.3.i.i.i = icmp eq i32 %and.3.i.i.i, 0
  br i1 %tobool.not.3.i.i.i, label %for.inc.2.i.i.i.for.inc.3.i.i.i_crit_edge, label %land.lhs.true.3.i.i.i

for.inc.2.i.i.i.for.inc.3.i.i.i_crit_edge:        ; preds = %for.inc.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3.i.i.i

land.lhs.true.3.i.i.i:                            ; preds = %for.inc.2.i.i.i
  %250 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %250)
  %251 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %252 = and i8 %251, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %252)
  %tobool4.not.3.i.i.i = icmp eq i8 %252, 0
  br i1 %tobool4.not.3.i.i.i, label %land.lhs.true5.3.i.i.i, label %land.lhs.true.3.i.i.i.for.inc.3.i.i.i_crit_edge

land.lhs.true.3.i.i.i.for.inc.3.i.i.i_crit_edge:  ; preds = %land.lhs.true.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3.i.i.i

land.lhs.true5.3.i.i.i:                           ; preds = %land.lhs.true.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.3.i.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3, i32 3
  %253 = ptrtoint ptr %enable.3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %enable.3.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %254)
  %tobool6.not.3.i.i.i = icmp ne i32 %254, 0
  %inc.3.i.i.i = zext i1 %tobool6.not.3.i.i.i to i32
  %spec.select.3.i.i49.i = add nuw nsw i32 %cnt.1.2.i.i.i, %inc.3.i.i.i
  br label %for.inc.3.i.i.i

for.inc.3.i.i.i:                                  ; preds = %land.lhs.true5.3.i.i.i, %land.lhs.true.3.i.i.i.for.inc.3.i.i.i_crit_edge, %for.inc.2.i.i.i.for.inc.3.i.i.i_crit_edge
  %cnt.1.3.i.i.i = phi i32 [ %cnt.1.2.i.i.i, %land.lhs.true.3.i.i.i.for.inc.3.i.i.i_crit_edge ], [ %cnt.1.2.i.i.i, %for.inc.2.i.i.i.for.inc.3.i.i.i_crit_edge ], [ %spec.select.3.i.i49.i, %land.lhs.true5.3.i.i.i ]
  %and.4.i.i.i = and i32 %conv.i.i46.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4.i.i.i)
  %tobool.not.4.i.i.i = icmp eq i32 %and.4.i.i.i, 0
  br i1 %tobool.not.4.i.i.i, label %for.inc.3.i.i.i.for.inc.4.i.i.i_crit_edge, label %land.lhs.true.4.i.i.i

for.inc.3.i.i.i.for.inc.4.i.i.i_crit_edge:        ; preds = %for.inc.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4.i.i.i

land.lhs.true.4.i.i.i:                            ; preds = %for.inc.3.i.i.i
  %255 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %255)
  %256 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %257 = and i8 %256, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %257)
  %tobool4.not.4.i.i.i = icmp eq i8 %257, 0
  br i1 %tobool4.not.4.i.i.i, label %land.lhs.true5.4.i.i.i, label %land.lhs.true.4.i.i.i.for.inc.4.i.i.i_crit_edge

land.lhs.true.4.i.i.i.for.inc.4.i.i.i_crit_edge:  ; preds = %land.lhs.true.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4.i.i.i

land.lhs.true5.4.i.i.i:                           ; preds = %land.lhs.true.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.4.i.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4, i32 3
  %258 = ptrtoint ptr %enable.4.i.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %enable.4.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %259)
  %tobool6.not.4.i.i.i = icmp ne i32 %259, 0
  %inc.4.i.i.i = zext i1 %tobool6.not.4.i.i.i to i32
  %spec.select.4.i.i50.i = add nuw nsw i32 %cnt.1.3.i.i.i, %inc.4.i.i.i
  br label %for.inc.4.i.i.i

for.inc.4.i.i.i:                                  ; preds = %land.lhs.true5.4.i.i.i, %land.lhs.true.4.i.i.i.for.inc.4.i.i.i_crit_edge, %for.inc.3.i.i.i.for.inc.4.i.i.i_crit_edge
  %cnt.1.4.i.i.i = phi i32 [ %cnt.1.3.i.i.i, %land.lhs.true.4.i.i.i.for.inc.4.i.i.i_crit_edge ], [ %cnt.1.3.i.i.i, %for.inc.3.i.i.i.for.inc.4.i.i.i_crit_edge ], [ %spec.select.4.i.i50.i, %land.lhs.true5.4.i.i.i ]
  %and.5.i.i.i = and i32 %conv.i.i46.i, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5.i.i.i)
  %tobool.not.5.i.i.i = icmp eq i32 %and.5.i.i.i, 0
  br i1 %tobool.not.5.i.i.i, label %for.inc.4.i.i.i.for.inc.5.i.i.i_crit_edge, label %land.lhs.true.5.i.i.i

for.inc.4.i.i.i.for.inc.5.i.i.i_crit_edge:        ; preds = %for.inc.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5.i.i.i

land.lhs.true.5.i.i.i:                            ; preds = %for.inc.4.i.i.i
  %260 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %260)
  %261 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %262 = and i8 %261, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %262)
  %tobool4.not.5.i.i.i = icmp eq i8 %262, 0
  br i1 %tobool4.not.5.i.i.i, label %land.lhs.true5.5.i.i.i, label %land.lhs.true.5.i.i.i.for.inc.5.i.i.i_crit_edge

land.lhs.true.5.i.i.i.for.inc.5.i.i.i_crit_edge:  ; preds = %land.lhs.true.5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5.i.i.i

land.lhs.true5.5.i.i.i:                           ; preds = %land.lhs.true.5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.5.i.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5, i32 3
  %263 = ptrtoint ptr %enable.5.i.i.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load i32, ptr %enable.5.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %264)
  %tobool6.not.5.i.i.i = icmp ne i32 %264, 0
  %inc.5.i.i.i = zext i1 %tobool6.not.5.i.i.i to i32
  %spec.select.5.i.i51.i = add nuw nsw i32 %cnt.1.4.i.i.i, %inc.5.i.i.i
  br label %for.inc.5.i.i.i

for.inc.5.i.i.i:                                  ; preds = %land.lhs.true5.5.i.i.i, %land.lhs.true.5.i.i.i.for.inc.5.i.i.i_crit_edge, %for.inc.4.i.i.i.for.inc.5.i.i.i_crit_edge
  %cnt.1.5.i.i.i = phi i32 [ %cnt.1.4.i.i.i, %land.lhs.true.5.i.i.i.for.inc.5.i.i.i_crit_edge ], [ %cnt.1.4.i.i.i, %for.inc.4.i.i.i.for.inc.5.i.i.i_crit_edge ], [ %spec.select.5.i.i51.i, %land.lhs.true5.5.i.i.i ]
  %and.6.i.i.i = and i32 %conv.i.i46.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6.i.i.i)
  %tobool.not.6.i.i.i = icmp eq i32 %and.6.i.i.i, 0
  br i1 %tobool.not.6.i.i.i, label %for.inc.5.i.i.i.for.inc.6.i.i.i_crit_edge, label %land.lhs.true.6.i.i.i

for.inc.5.i.i.i.for.inc.6.i.i.i_crit_edge:        ; preds = %for.inc.5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6.i.i.i

land.lhs.true.6.i.i.i:                            ; preds = %for.inc.5.i.i.i
  %265 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %265)
  %266 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %267 = and i8 %266, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %267)
  %tobool4.not.6.i.i.i = icmp eq i8 %267, 0
  br i1 %tobool4.not.6.i.i.i, label %land.lhs.true5.6.i.i.i, label %land.lhs.true.6.i.i.i.for.inc.6.i.i.i_crit_edge

land.lhs.true.6.i.i.i.for.inc.6.i.i.i_crit_edge:  ; preds = %land.lhs.true.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6.i.i.i

land.lhs.true5.6.i.i.i:                           ; preds = %land.lhs.true.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.6.i.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6, i32 3
  %268 = ptrtoint ptr %enable.6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %enable.6.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %269)
  %tobool6.not.6.i.i.i = icmp ne i32 %269, 0
  %inc.6.i.i.i = zext i1 %tobool6.not.6.i.i.i to i32
  %spec.select.6.i.i52.i = add nuw nsw i32 %cnt.1.5.i.i.i, %inc.6.i.i.i
  br label %for.inc.6.i.i.i

for.inc.6.i.i.i:                                  ; preds = %land.lhs.true5.6.i.i.i, %land.lhs.true.6.i.i.i.for.inc.6.i.i.i_crit_edge, %for.inc.5.i.i.i.for.inc.6.i.i.i_crit_edge
  %cnt.1.6.i.i.i = phi i32 [ %cnt.1.5.i.i.i, %land.lhs.true.6.i.i.i.for.inc.6.i.i.i_crit_edge ], [ %cnt.1.5.i.i.i, %for.inc.5.i.i.i.for.inc.6.i.i.i_crit_edge ], [ %spec.select.6.i.i52.i, %land.lhs.true5.6.i.i.i ]
  %and.7.i.i.i = and i32 %conv.i.i46.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.7.i.i.i)
  %tobool.not.7.i.i.i = icmp eq i32 %and.7.i.i.i, 0
  br i1 %tobool.not.7.i.i.i, label %for.inc.6.i.i.i.for.body.i.i.preheader_crit_edge, label %land.lhs.true.7.i.i.i

for.inc.6.i.i.i.for.body.i.i.preheader_crit_edge: ; preds = %for.inc.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.preheader

land.lhs.true.7.i.i.i:                            ; preds = %for.inc.6.i.i.i
  %270 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %270)
  %271 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %271)
  %tobool4.not.7.i.i.i = icmp sgt i8 %271, -1
  br i1 %tobool4.not.7.i.i.i, label %land.lhs.true5.7.i.i.i, label %land.lhs.true.7.i.i.i.for.body.i.i.preheader_crit_edge

land.lhs.true.7.i.i.i.for.body.i.i.preheader_crit_edge: ; preds = %land.lhs.true.7.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.preheader

land.lhs.true5.7.i.i.i:                           ; preds = %land.lhs.true.7.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.7.i.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7, i32 3
  %272 = ptrtoint ptr %enable.7.i.i.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %enable.7.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %273)
  %tobool6.not.7.i.i.i = icmp ne i32 %273, 0
  %inc.7.i.i.i = zext i1 %tobool6.not.7.i.i.i to i32
  %spec.select.7.i.i53.i = add nuw nsw i32 %cnt.1.6.i.i.i, %inc.7.i.i.i
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %land.lhs.true5.7.i.i.i, %land.lhs.true.7.i.i.i.for.body.i.i.preheader_crit_edge, %for.inc.6.i.i.i.for.body.i.i.preheader_crit_edge
  %no_pfc_priv_num.043.i.i.ph = phi i32 [ %cnt.1.6.i.i.i, %for.inc.6.i.i.i.for.body.i.i.preheader_crit_edge ], [ %cnt.1.6.i.i.i, %land.lhs.true.7.i.i.i.for.body.i.i.preheader_crit_edge ], [ %spec.select.7.i.i53.i, %land.lhs.true5.7.i.i.i ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i60.i.for.body.i.i_crit_edge, %for.body.i.i.preheader
  %i.044.i.i = phi i32 [ %dec13.i.i, %if.end.i60.i.for.body.i.i_crit_edge ], [ 7, %for.body.i.i.preheader ]
  %no_pfc_priv_num.043.i.i = phi i32 [ %no_pfc_priv_num.1.i.i, %if.end.i60.i.for.body.i.i_crit_edge ], [ %no_pfc_priv_num.043.i.i.ph, %for.body.i.i.preheader ]
  %arrayidx.i.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 %i.044.i.i
  %shl.i.i = shl nuw i32 1, %i.044.i.i
  %274 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %274)
  %275 = load i8, ptr %hw_tc_map.i, align 2
  %conv.i.i = zext i8 %275 to i32
  %and.i54.i = and i32 %shl.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i54.i)
  %tobool.not.i55.i = icmp eq i32 %and.i54.i, 0
  br i1 %tobool.not.i55.i, label %for.body.i.i.if.end.i60.i_crit_edge, label %land.lhs.true.i.i

for.body.i.i.if.end.i60.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i60.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %276 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %276)
  %277 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %conv2.i.i113 = zext i8 %277 to i32
  %and3.i.i = and i32 %shl.i.i, %conv2.i.i113
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.i)
  %tobool4.not.i.i = icmp eq i32 %and3.i.i, 0
  br i1 %tobool4.not.i.i, label %if.then.i59.i, label %land.lhs.true.i.i.if.end.i60.i_crit_edge

land.lhs.true.i.i.if.end.i60.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i60.i

if.then.i59.i:                                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %278 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %278)
  store i32 0, ptr %arrayidx.i.i, align 4
  %high.i56.i = getelementptr inbounds %struct.hclge_waterline, ptr %arrayidx.i.i, i32 0, i32 1
  %279 = ptrtoint ptr %high.i56.i to i32
  call void @__asan_store4_noabort(i32 %279)
  store i32 0, ptr %high.i56.i, align 4
  %buf_size.i57.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 %i.044.i.i, i32 1
  %280 = ptrtoint ptr %buf_size.i57.i to i32
  call void @__asan_store4_noabort(i32 %280)
  store i32 0, ptr %buf_size.i57.i, align 4
  %enable.i58.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 %i.044.i.i, i32 3
  %281 = ptrtoint ptr %enable.i58.i to i32
  call void @__asan_store4_noabort(i32 %281)
  store i32 0, ptr %enable.i58.i, align 4
  %dec.i.i = add i32 %no_pfc_priv_num.043.i.i, -1
  br label %if.end.i60.i

if.end.i60.i:                                     ; preds = %if.then.i59.i, %land.lhs.true.i.i.if.end.i60.i_crit_edge, %for.body.i.i.if.end.i60.i_crit_edge
  %no_pfc_priv_num.1.i.i = phi i32 [ %no_pfc_priv_num.043.i.i, %land.lhs.true.i.i.if.end.i60.i_crit_edge ], [ %dec.i.i, %if.then.i59.i ], [ %no_pfc_priv_num.043.i.i, %for.body.i.i.if.end.i60.i_crit_edge ]
  %call6.i.i = call fastcc zeroext i1 @hclge_is_rx_buf_ok(ptr noundef %hdev, ptr noundef %call7.i.i, i32 noundef %sub.i44.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %no_pfc_priv_num.1.i.i)
  %cmp8.i.i = icmp eq i32 %no_pfc_priv_num.1.i.i, 0
  %or.cond.i.i = select i1 %call6.i.i, i1 true, i1 %cmp8.i.i
  %dec13.i.i = add nsw i32 %i.044.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.044.i.i)
  %cmp.not.i.i = icmp eq i32 %i.044.i.i, 0
  %or.cond46.i.i = select i1 %or.cond.i.i, i1 true, i1 %cmp.not.i.i
  br i1 %or.cond46.i.i, label %hclge_drop_nopfc_buf_till_fit.exit.i, label %if.end.i60.i.for.body.i.i_crit_edge

if.end.i60.i.for.body.i.i_crit_edge:              ; preds = %if.end.i60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

hclge_drop_nopfc_buf_till_fit.exit.i:             ; preds = %if.end.i60.i
  %call14.i.i = call fastcc zeroext i1 @hclge_is_rx_buf_ok(ptr noundef %hdev, ptr noundef %call7.i.i, i32 noundef %sub.i44.i) #16
  br i1 %call14.i.i, label %hclge_drop_nopfc_buf_till_fit.exit.i.if.end22_crit_edge, label %if.end16.i

hclge_drop_nopfc_buf_till_fit.exit.i.if.end22_crit_edge: ; preds = %hclge_drop_nopfc_buf_till_fit.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.end16.i:                                       ; preds = %hclge_drop_nopfc_buf_till_fit.exit.i
  %282 = ptrtoint ptr %pkt_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %pkt_buf_size.i, align 8
  %284 = ptrtoint ptr %tx_buf_size5.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %tx_buf_size5.i, align 4
  %286 = ptrtoint ptr %tx_buf_size6.1.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %tx_buf_size6.1.i, align 8
  %288 = ptrtoint ptr %tx_buf_size6.2.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %tx_buf_size6.2.i, align 4
  %290 = ptrtoint ptr %tx_buf_size6.3.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %tx_buf_size6.3.i, align 8
  %292 = ptrtoint ptr %tx_buf_size6.4.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %tx_buf_size6.4.i, align 4
  %294 = ptrtoint ptr %tx_buf_size6.5.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %tx_buf_size6.5.i, align 8
  %296 = ptrtoint ptr %tx_buf_size6.6.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %tx_buf_size6.6.i, align 4
  %298 = ptrtoint ptr %tx_buf_size5.7.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %tx_buf_size5.7.i, align 8
  %300 = add i32 %285, %287
  %301 = add i32 %300, %289
  %302 = add i32 %301, %291
  %303 = add i32 %302, %293
  %304 = add i32 %303, %295
  %305 = add i32 %304, %297
  %306 = add i32 %305, %299
  %sub.i70.i = sub i32 %283, %306
  %307 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %307)
  %308 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %conv.i.i72.i = zext i8 %308 to i32
  %and.i.i73.i = and i32 %conv.i.i72.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i73.i)
  %tobool.not.i.i74.i = icmp eq i32 %and.i.i73.i, 0
  br i1 %tobool.not.i.i74.i, label %if.end16.i.for.inc.i.i81.i_crit_edge, label %land.lhs.true.i.i77.i

if.end16.i.for.inc.i.i81.i_crit_edge:             ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i81.i

land.lhs.true.i.i77.i:                            ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.i.i75.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 0, i32 3
  %309 = ptrtoint ptr %enable.i.i75.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load i32, ptr %enable.i.i75.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %310)
  %tobool1.not.i.i.i = icmp ne i32 %310, 0
  %inc.i.i76.i = zext i1 %tobool1.not.i.i.i to i32
  br label %for.inc.i.i81.i

for.inc.i.i81.i:                                  ; preds = %land.lhs.true.i.i77.i, %if.end16.i.for.inc.i.i81.i_crit_edge
  %cnt.1.i.i78.i = phi i32 [ 0, %if.end16.i.for.inc.i.i81.i_crit_edge ], [ %inc.i.i76.i, %land.lhs.true.i.i77.i ]
  %and.1.i.i79.i = and i32 %conv.i.i72.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1.i.i79.i)
  %tobool.not.1.i.i80.i = icmp eq i32 %and.1.i.i79.i, 0
  br i1 %tobool.not.1.i.i80.i, label %for.inc.i.i81.i.for.inc.1.i.i89.i_crit_edge, label %land.lhs.true.1.i.i85.i

for.inc.i.i81.i.for.inc.1.i.i89.i_crit_edge:      ; preds = %for.inc.i.i81.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1.i.i89.i

land.lhs.true.1.i.i85.i:                          ; preds = %for.inc.i.i81.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.1.i.i82.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1, i32 3
  %311 = ptrtoint ptr %enable.1.i.i82.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load i32, ptr %enable.1.i.i82.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %312)
  %tobool1.not.1.i.i.i = icmp ne i32 %312, 0
  %inc.1.i.i83.i = zext i1 %tobool1.not.1.i.i.i to i32
  %spec.select.1.i.i84.i = add nuw nsw i32 %cnt.1.i.i78.i, %inc.1.i.i83.i
  br label %for.inc.1.i.i89.i

for.inc.1.i.i89.i:                                ; preds = %land.lhs.true.1.i.i85.i, %for.inc.i.i81.i.for.inc.1.i.i89.i_crit_edge
  %cnt.1.1.i.i86.i = phi i32 [ %cnt.1.i.i78.i, %for.inc.i.i81.i.for.inc.1.i.i89.i_crit_edge ], [ %spec.select.1.i.i84.i, %land.lhs.true.1.i.i85.i ]
  %and.2.i.i87.i = and i32 %conv.i.i72.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2.i.i87.i)
  %tobool.not.2.i.i88.i = icmp eq i32 %and.2.i.i87.i, 0
  br i1 %tobool.not.2.i.i88.i, label %for.inc.1.i.i89.i.for.inc.2.i.i97.i_crit_edge, label %land.lhs.true.2.i.i93.i

for.inc.1.i.i89.i.for.inc.2.i.i97.i_crit_edge:    ; preds = %for.inc.1.i.i89.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2.i.i97.i

land.lhs.true.2.i.i93.i:                          ; preds = %for.inc.1.i.i89.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.2.i.i90.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2, i32 3
  %313 = ptrtoint ptr %enable.2.i.i90.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %enable.2.i.i90.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %314)
  %tobool1.not.2.i.i.i = icmp ne i32 %314, 0
  %inc.2.i.i91.i = zext i1 %tobool1.not.2.i.i.i to i32
  %spec.select.2.i.i92.i = add nuw nsw i32 %cnt.1.1.i.i86.i, %inc.2.i.i91.i
  br label %for.inc.2.i.i97.i

for.inc.2.i.i97.i:                                ; preds = %land.lhs.true.2.i.i93.i, %for.inc.1.i.i89.i.for.inc.2.i.i97.i_crit_edge
  %cnt.1.2.i.i94.i = phi i32 [ %cnt.1.1.i.i86.i, %for.inc.1.i.i89.i.for.inc.2.i.i97.i_crit_edge ], [ %spec.select.2.i.i92.i, %land.lhs.true.2.i.i93.i ]
  %and.3.i.i95.i = and i32 %conv.i.i72.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3.i.i95.i)
  %tobool.not.3.i.i96.i = icmp eq i32 %and.3.i.i95.i, 0
  br i1 %tobool.not.3.i.i96.i, label %for.inc.2.i.i97.i.for.inc.3.i.i105.i_crit_edge, label %land.lhs.true.3.i.i101.i

for.inc.2.i.i97.i.for.inc.3.i.i105.i_crit_edge:   ; preds = %for.inc.2.i.i97.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3.i.i105.i

land.lhs.true.3.i.i101.i:                         ; preds = %for.inc.2.i.i97.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.3.i.i98.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3, i32 3
  %315 = ptrtoint ptr %enable.3.i.i98.i to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load i32, ptr %enable.3.i.i98.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %316)
  %tobool1.not.3.i.i.i = icmp ne i32 %316, 0
  %inc.3.i.i99.i = zext i1 %tobool1.not.3.i.i.i to i32
  %spec.select.3.i.i100.i = add nuw nsw i32 %cnt.1.2.i.i94.i, %inc.3.i.i99.i
  br label %for.inc.3.i.i105.i

for.inc.3.i.i105.i:                               ; preds = %land.lhs.true.3.i.i101.i, %for.inc.2.i.i97.i.for.inc.3.i.i105.i_crit_edge
  %cnt.1.3.i.i102.i = phi i32 [ %cnt.1.2.i.i94.i, %for.inc.2.i.i97.i.for.inc.3.i.i105.i_crit_edge ], [ %spec.select.3.i.i100.i, %land.lhs.true.3.i.i101.i ]
  %and.4.i.i103.i = and i32 %conv.i.i72.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4.i.i103.i)
  %tobool.not.4.i.i104.i = icmp eq i32 %and.4.i.i103.i, 0
  br i1 %tobool.not.4.i.i104.i, label %for.inc.3.i.i105.i.for.inc.4.i.i113.i_crit_edge, label %land.lhs.true.4.i.i109.i

for.inc.3.i.i105.i.for.inc.4.i.i113.i_crit_edge:  ; preds = %for.inc.3.i.i105.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4.i.i113.i

land.lhs.true.4.i.i109.i:                         ; preds = %for.inc.3.i.i105.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.4.i.i106.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4, i32 3
  %317 = ptrtoint ptr %enable.4.i.i106.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %enable.4.i.i106.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %318)
  %tobool1.not.4.i.i.i = icmp ne i32 %318, 0
  %inc.4.i.i107.i = zext i1 %tobool1.not.4.i.i.i to i32
  %spec.select.4.i.i108.i = add nuw nsw i32 %cnt.1.3.i.i102.i, %inc.4.i.i107.i
  br label %for.inc.4.i.i113.i

for.inc.4.i.i113.i:                               ; preds = %land.lhs.true.4.i.i109.i, %for.inc.3.i.i105.i.for.inc.4.i.i113.i_crit_edge
  %cnt.1.4.i.i110.i = phi i32 [ %cnt.1.3.i.i102.i, %for.inc.3.i.i105.i.for.inc.4.i.i113.i_crit_edge ], [ %spec.select.4.i.i108.i, %land.lhs.true.4.i.i109.i ]
  %and.5.i.i111.i = and i32 %conv.i.i72.i, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5.i.i111.i)
  %tobool.not.5.i.i112.i = icmp eq i32 %and.5.i.i111.i, 0
  br i1 %tobool.not.5.i.i112.i, label %for.inc.4.i.i113.i.for.inc.5.i.i121.i_crit_edge, label %land.lhs.true.5.i.i117.i

for.inc.4.i.i113.i.for.inc.5.i.i121.i_crit_edge:  ; preds = %for.inc.4.i.i113.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5.i.i121.i

land.lhs.true.5.i.i117.i:                         ; preds = %for.inc.4.i.i113.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.5.i.i114.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5, i32 3
  %319 = ptrtoint ptr %enable.5.i.i114.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load i32, ptr %enable.5.i.i114.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %320)
  %tobool1.not.5.i.i.i = icmp ne i32 %320, 0
  %inc.5.i.i115.i = zext i1 %tobool1.not.5.i.i.i to i32
  %spec.select.5.i.i116.i = add nuw nsw i32 %cnt.1.4.i.i110.i, %inc.5.i.i115.i
  br label %for.inc.5.i.i121.i

for.inc.5.i.i121.i:                               ; preds = %land.lhs.true.5.i.i117.i, %for.inc.4.i.i113.i.for.inc.5.i.i121.i_crit_edge
  %cnt.1.5.i.i118.i = phi i32 [ %cnt.1.4.i.i110.i, %for.inc.4.i.i113.i.for.inc.5.i.i121.i_crit_edge ], [ %spec.select.5.i.i116.i, %land.lhs.true.5.i.i117.i ]
  %and.6.i.i119.i = and i32 %conv.i.i72.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6.i.i119.i)
  %tobool.not.6.i.i120.i = icmp eq i32 %and.6.i.i119.i, 0
  br i1 %tobool.not.6.i.i120.i, label %for.inc.5.i.i121.i.for.inc.6.i.i129.i_crit_edge, label %land.lhs.true.6.i.i125.i

for.inc.5.i.i121.i.for.inc.6.i.i129.i_crit_edge:  ; preds = %for.inc.5.i.i121.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6.i.i129.i

land.lhs.true.6.i.i125.i:                         ; preds = %for.inc.5.i.i121.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.6.i.i122.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6, i32 3
  %321 = ptrtoint ptr %enable.6.i.i122.i to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %enable.6.i.i122.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %322)
  %tobool1.not.6.i.i.i = icmp ne i32 %322, 0
  %inc.6.i.i123.i = zext i1 %tobool1.not.6.i.i.i to i32
  %spec.select.6.i.i124.i = add nuw nsw i32 %cnt.1.5.i.i118.i, %inc.6.i.i123.i
  br label %for.inc.6.i.i129.i

for.inc.6.i.i129.i:                               ; preds = %land.lhs.true.6.i.i125.i, %for.inc.5.i.i121.i.for.inc.6.i.i129.i_crit_edge
  %cnt.1.6.i.i126.i = phi i32 [ %cnt.1.5.i.i118.i, %for.inc.5.i.i121.i.for.inc.6.i.i129.i_crit_edge ], [ %spec.select.6.i.i124.i, %land.lhs.true.6.i.i125.i ]
  %and.7.i.i127.i = and i32 %conv.i.i72.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.7.i.i127.i)
  %tobool.not.7.i.i128.i = icmp eq i32 %and.7.i.i127.i, 0
  br i1 %tobool.not.7.i.i128.i, label %for.inc.6.i.i129.i.for.body.i141.i.preheader_crit_edge, label %land.lhs.true.7.i.i133.i

for.inc.6.i.i129.i.for.body.i141.i.preheader_crit_edge: ; preds = %for.inc.6.i.i129.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i141.i.preheader

land.lhs.true.7.i.i133.i:                         ; preds = %for.inc.6.i.i129.i
  call void @__sanitizer_cov_trace_pc() #18
  %enable.7.i.i130.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7, i32 3
  %323 = ptrtoint ptr %enable.7.i.i130.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %enable.7.i.i130.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %324)
  %tobool1.not.7.i.i.i = icmp ne i32 %324, 0
  %inc.7.i.i131.i = zext i1 %tobool1.not.7.i.i.i to i32
  %spec.select.7.i.i132.i = add nuw nsw i32 %cnt.1.6.i.i126.i, %inc.7.i.i131.i
  br label %for.body.i141.i.preheader

for.body.i141.i.preheader:                        ; preds = %land.lhs.true.7.i.i133.i, %for.inc.6.i.i129.i.for.body.i141.i.preheader_crit_edge
  %pfc_priv_num.043.i.i.ph = phi i32 [ %cnt.1.6.i.i126.i, %for.inc.6.i.i129.i.for.body.i141.i.preheader_crit_edge ], [ %spec.select.7.i.i132.i, %land.lhs.true.7.i.i133.i ]
  br label %for.body.i141.i

for.body.i141.i:                                  ; preds = %if.end.i157.i.for.body.i141.i_crit_edge, %for.body.i141.i.preheader
  %i.044.i135.i = phi i32 [ %dec13.i154.i, %if.end.i157.i.for.body.i141.i_crit_edge ], [ 7, %for.body.i141.i.preheader ]
  %pfc_priv_num.043.i.i = phi i32 [ %pfc_priv_num.1.i.i, %if.end.i157.i.for.body.i141.i_crit_edge ], [ %pfc_priv_num.043.i.i.ph, %for.body.i141.i.preheader ]
  %arrayidx.i136.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 %i.044.i135.i
  %shl.i137.i = shl nuw i32 1, %i.044.i135.i
  %325 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %325)
  %326 = load i8, ptr %hw_tc_map.i, align 2
  %conv.i138.i = zext i8 %326 to i32
  %and.i139.i = and i32 %shl.i137.i, %conv.i138.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i139.i)
  %tobool.not.i140.i = icmp eq i32 %and.i139.i, 0
  br i1 %tobool.not.i140.i, label %for.body.i141.i.if.end.i157.i_crit_edge, label %land.lhs.true.i145.i

for.body.i141.i.if.end.i157.i_crit_edge:          ; preds = %for.body.i141.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i157.i

land.lhs.true.i145.i:                             ; preds = %for.body.i141.i
  %327 = ptrtoint ptr %hw_pfc_map.i.i.i to i32
  call void @__asan_load1_noabort(i32 %327)
  %328 = load i8, ptr %hw_pfc_map.i.i.i, align 4
  %conv2.i142.i = zext i8 %328 to i32
  %and3.i143.i = and i32 %shl.i137.i, %conv2.i142.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i143.i)
  %tobool4.not.i144.i = icmp eq i32 %and3.i143.i, 0
  br i1 %tobool4.not.i144.i, label %land.lhs.true.i145.i.if.end.i157.i_crit_edge, label %if.then.i150.i

land.lhs.true.i145.i.if.end.i157.i_crit_edge:     ; preds = %land.lhs.true.i145.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i157.i

if.then.i150.i:                                   ; preds = %land.lhs.true.i145.i
  call void @__sanitizer_cov_trace_pc() #18
  %329 = ptrtoint ptr %arrayidx.i136.i to i32
  call void @__asan_store4_noabort(i32 %329)
  store i32 0, ptr %arrayidx.i136.i, align 4
  %enable.i146.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 %i.044.i135.i, i32 3
  %330 = ptrtoint ptr %enable.i146.i to i32
  call void @__asan_store4_noabort(i32 %330)
  store i32 0, ptr %enable.i146.i, align 4
  %high.i147.i = getelementptr inbounds %struct.hclge_waterline, ptr %arrayidx.i136.i, i32 0, i32 1
  %331 = ptrtoint ptr %high.i147.i to i32
  call void @__asan_store4_noabort(i32 %331)
  store i32 0, ptr %high.i147.i, align 4
  %buf_size.i148.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 %i.044.i135.i, i32 1
  %332 = ptrtoint ptr %buf_size.i148.i to i32
  call void @__asan_store4_noabort(i32 %332)
  store i32 0, ptr %buf_size.i148.i, align 4
  %dec.i149.i = add i32 %pfc_priv_num.043.i.i, -1
  br label %if.end.i157.i

if.end.i157.i:                                    ; preds = %if.then.i150.i, %land.lhs.true.i145.i.if.end.i157.i_crit_edge, %for.body.i141.i.if.end.i157.i_crit_edge
  %pfc_priv_num.1.i.i = phi i32 [ %dec.i149.i, %if.then.i150.i ], [ %pfc_priv_num.043.i.i, %land.lhs.true.i145.i.if.end.i157.i_crit_edge ], [ %pfc_priv_num.043.i.i, %for.body.i141.i.if.end.i157.i_crit_edge ]
  %call6.i151.i = call fastcc zeroext i1 @hclge_is_rx_buf_ok(ptr noundef %hdev, ptr noundef %call7.i.i, i32 noundef %sub.i70.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %pfc_priv_num.1.i.i)
  %cmp8.i152.i = icmp eq i32 %pfc_priv_num.1.i.i, 0
  %or.cond.i153.i = select i1 %call6.i151.i, i1 true, i1 %cmp8.i152.i
  %dec13.i154.i = add nsw i32 %i.044.i135.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.044.i135.i)
  %cmp.not.i155.i = icmp eq i32 %i.044.i135.i, 0
  %or.cond46.i156.i = select i1 %or.cond.i153.i, i1 true, i1 %cmp.not.i155.i
  br i1 %or.cond46.i156.i, label %hclge_drop_pfc_buf_till_fit.exit.i, label %if.end.i157.i.for.body.i141.i_crit_edge

if.end.i157.i.for.body.i141.i_crit_edge:          ; preds = %if.end.i157.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i141.i

hclge_drop_pfc_buf_till_fit.exit.i:               ; preds = %if.end.i157.i
  %call14.i158.i = call fastcc zeroext i1 @hclge_is_rx_buf_ok(ptr noundef %hdev, ptr noundef %call7.i.i, i32 noundef %sub.i70.i) #16
  br i1 %call14.i158.i, label %hclge_drop_pfc_buf_till_fit.exit.i.if.end22_crit_edge, label %hclge_drop_pfc_buf_till_fit.exit.i.do.end19_crit_edge

hclge_drop_pfc_buf_till_fit.exit.i.do.end19_crit_edge: ; preds = %hclge_drop_pfc_buf_till_fit.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end19

hclge_drop_pfc_buf_till_fit.exit.i.if.end22_crit_edge: ; preds = %hclge_drop_pfc_buf_till_fit.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

do.end19:                                         ; preds = %hclge_drop_pfc_buf_till_fit.exit.i.do.end19_crit_edge, %if.then.i110.do.end19_crit_edge
  %333 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %hdev, align 8
  %dev21 = getelementptr inbounds %struct.pci_dev, ptr %334, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev21, ptr noundef nonnull @.str.9, i32 noundef -12) #20
  br label %out

if.end22:                                         ; preds = %hclge_drop_pfc_buf_till_fit.exit.i.if.end22_crit_edge, %hclge_drop_nopfc_buf_till_fit.exit.i.if.end22_crit_edge, %if.end10.i.if.end22_crit_edge, %if.end7.i.if.end22_crit_edge, %hclge_only_alloc_priv_buff.exit.i, %if.then.i110.if.end22_crit_edge
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %335 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %336 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 4
  %337 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 2306, i1 noundef zeroext false) #16
  %buf_size.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 0, i32 1
  %338 = ptrtoint ptr %buf_size.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %buf_size.i, align 8
  %shr.i = lshr i32 %339, 7
  %conv.i = trunc i32 %shr.i to i16
  %340 = or i16 %conv.i, -32768
  %341 = call i16 @llvm.bswap.i16(i16 %340) #16
  %342 = ptrtoint ptr %335 to i32
  call void @__asan_store2_noabort(i32 %342)
  store i16 %341, ptr %335, align 4
  %buf_size.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1, i32 1
  %343 = ptrtoint ptr %buf_size.1.i to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load i32, ptr %buf_size.1.i, align 4
  %shr.1.i = lshr i32 %344, 7
  %conv.1.i = trunc i32 %shr.1.i to i16
  %arrayidx1.1.i = getelementptr inbounds [8 x i16], ptr %335, i32 0, i32 1
  %345 = or i16 %conv.1.i, -32768
  %346 = call i16 @llvm.bswap.i16(i16 %345) #16
  %347 = ptrtoint ptr %arrayidx1.1.i to i32
  call void @__asan_store2_noabort(i32 %347)
  store i16 %346, ptr %arrayidx1.1.i, align 2
  %buf_size.2.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2, i32 1
  %348 = ptrtoint ptr %buf_size.2.i to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %buf_size.2.i, align 8
  %shr.2.i = lshr i32 %349, 7
  %conv.2.i = trunc i32 %shr.2.i to i16
  %arrayidx1.2.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 1
  %350 = or i16 %conv.2.i, -32768
  %351 = call i16 @llvm.bswap.i16(i16 %350) #16
  %352 = ptrtoint ptr %arrayidx1.2.i to i32
  call void @__asan_store2_noabort(i32 %352)
  store i16 %351, ptr %arrayidx1.2.i, align 4
  %buf_size.3.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3, i32 1
  %353 = ptrtoint ptr %buf_size.3.i to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load i32, ptr %buf_size.3.i, align 4
  %shr.3.i = lshr i32 %354, 7
  %conv.3.i = trunc i32 %shr.3.i to i16
  %arrayidx1.3.i = getelementptr inbounds [8 x i16], ptr %335, i32 0, i32 3
  %355 = or i16 %conv.3.i, -32768
  %356 = call i16 @llvm.bswap.i16(i16 %355) #16
  %357 = ptrtoint ptr %arrayidx1.3.i to i32
  call void @__asan_store2_noabort(i32 %357)
  store i16 %356, ptr %arrayidx1.3.i, align 2
  %buf_size.4.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4, i32 1
  %358 = ptrtoint ptr %buf_size.4.i to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load i32, ptr %buf_size.4.i, align 8
  %shr.4.i = lshr i32 %359, 7
  %conv.4.i = trunc i32 %shr.4.i to i16
  %arrayidx1.4.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 2
  %360 = or i16 %conv.4.i, -32768
  %361 = call i16 @llvm.bswap.i16(i16 %360) #16
  %362 = ptrtoint ptr %arrayidx1.4.i to i32
  call void @__asan_store2_noabort(i32 %362)
  store i16 %361, ptr %arrayidx1.4.i, align 4
  %buf_size.5.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5, i32 1
  %363 = ptrtoint ptr %buf_size.5.i to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load i32, ptr %buf_size.5.i, align 4
  %shr.5.i = lshr i32 %364, 7
  %conv.5.i = trunc i32 %shr.5.i to i16
  %arrayidx1.5.i = getelementptr inbounds [8 x i16], ptr %335, i32 0, i32 5
  %365 = or i16 %conv.5.i, -32768
  %366 = call i16 @llvm.bswap.i16(i16 %365) #16
  %367 = ptrtoint ptr %arrayidx1.5.i to i32
  call void @__asan_store2_noabort(i32 %367)
  store i16 %366, ptr %arrayidx1.5.i, align 2
  %buf_size.6.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6, i32 1
  %368 = ptrtoint ptr %buf_size.6.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load i32, ptr %buf_size.6.i, align 8
  %shr.6.i = lshr i32 %369, 7
  %conv.6.i = trunc i32 %shr.6.i to i16
  %arrayidx1.6.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 3
  %370 = or i16 %conv.6.i, -32768
  %371 = call i16 @llvm.bswap.i16(i16 %370) #16
  %372 = ptrtoint ptr %arrayidx1.6.i to i32
  call void @__asan_store2_noabort(i32 %372)
  store i16 %371, ptr %arrayidx1.6.i, align 4
  %buf_size.7.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7, i32 1
  %373 = ptrtoint ptr %buf_size.7.i to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load i32, ptr %buf_size.7.i, align 4
  %shr.7.i = lshr i32 %374, 7
  %conv.7.i = trunc i32 %shr.7.i to i16
  %arrayidx1.7.i = getelementptr inbounds [8 x i16], ptr %335, i32 0, i32 7
  %375 = or i16 %conv.7.i, -32768
  %376 = call i16 @llvm.bswap.i16(i16 %375) #16
  %377 = ptrtoint ptr %arrayidx1.7.i to i32
  call void @__asan_store2_noabort(i32 %377)
  store i16 %376, ptr %arrayidx1.7.i, align 2
  %buf_size6.i = getelementptr inbounds %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 2
  %378 = ptrtoint ptr %buf_size6.i to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load i32, ptr %buf_size6.i, align 8
  %shr7.i = lshr i32 %379, 7
  %380 = trunc i32 %shr7.i to i16
  %conv9.i = or i16 %380, -32768
  %381 = call i16 @llvm.bswap.i16(i16 %conv9.i) #16
  %382 = ptrtoint ptr %336 to i32
  call void @__asan_store2_noabort(i32 %382)
  store i16 %381, ptr %336, align 4
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i114 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i114, label %if.end31, label %do.end28

do.end28:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %383 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load ptr, ptr %hdev, align 8
  %dev.i115 = getelementptr inbounds %struct.pci_dev, ptr %384, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i115, ptr noundef nonnull @.str.63, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %385 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load ptr, ptr %hdev, align 8
  %dev30 = getelementptr inbounds %struct.pci_dev, ptr %386, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev30, ptr noundef nonnull @.str.12, i32 noundef %call.i.i) #20
  br label %out

if.end31:                                         ; preds = %if.end22
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %387 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load ptr, ptr %ae_dev.i, align 4
  %flag = getelementptr inbounds %struct.hnae3_ae_dev, ptr %388, i32 0, i32 3
  %389 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %flag, align 4
  %391 = and i32 %390, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %391)
  %tobool32.not = icmp eq i32 %391, 0
  br i1 %tobool32.not, label %if.end31.if.end52_crit_edge, label %if.then33

if.end31.if.end52_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end52

if.then33:                                        ; preds = %if.end31
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %desc.i117) #16
  %392 = call ptr @memset(ptr %desc.i117, i32 255, i32 64)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i117, i32 noundef 2307, i1 noundef zeroext false) #16
  %data.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 0, i32 4
  %flag.i118 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 0, i32 1
  %393 = ptrtoint ptr %flag.i118 to i32
  call void @__asan_load2_noabort(i32 %393)
  %394 = load i16, ptr %flag.i118, align 2
  %395 = or i16 %394, 1024
  store i16 %395, ptr %flag.i118, align 2
  %high.i = getelementptr inbounds %struct.hclge_waterline, ptr %call7.i.i, i32 0, i32 1
  %396 = ptrtoint ptr %high.i to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load i32, ptr %high.i, align 4
  %shr.i119 = lshr i32 %397, 7
  %conv14.i = trunc i32 %shr.i119 to i16
  %398 = or i16 %conv14.i, -32768
  %399 = call i16 @llvm.bswap.i16(i16 %398) #16
  %400 = ptrtoint ptr %data.i to i32
  call void @__asan_store2_noabort(i32 %400)
  store i16 %399, ptr %data.i, align 4
  %401 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load i32, ptr %call7.i.i, align 8
  %shr24.i = lshr i32 %402, 7
  %conv25.i = trunc i32 %shr24.i to i16
  %low28.i = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i, i32 0, i32 0, i32 1
  %403 = or i16 %conv25.i, -32768
  %404 = call i16 @llvm.bswap.i16(i16 %403) #16
  %405 = ptrtoint ptr %low28.i to i32
  call void @__asan_store2_noabort(i32 %405)
  store i16 %404, ptr %low28.i, align 2
  %arrayidx13.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1
  %high.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 1, i32 0, i32 1
  %406 = ptrtoint ptr %high.1.i to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load i32, ptr %high.1.i, align 8
  %shr.1.i120 = lshr i32 %407, 7
  %conv14.1.i = trunc i32 %shr.1.i120 to i16
  %arrayidx15.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 0, i32 4, i32 1
  %408 = or i16 %conv14.1.i, -32768
  %409 = call i16 @llvm.bswap.i16(i16 %408) #16
  %410 = ptrtoint ptr %arrayidx15.1.i to i32
  call void @__asan_store2_noabort(i32 %410)
  store i16 %409, ptr %arrayidx15.1.i, align 4
  %411 = ptrtoint ptr %arrayidx13.1.i to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load i32, ptr %arrayidx13.1.i, align 4
  %shr24.1.i = lshr i32 %412, 7
  %conv25.1.i = trunc i32 %shr24.1.i to i16
  %low28.1.i = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i, i32 0, i32 1, i32 1
  %413 = or i16 %conv25.1.i, -32768
  %414 = call i16 @llvm.bswap.i16(i16 %413) #16
  %415 = ptrtoint ptr %low28.1.i to i32
  call void @__asan_store2_noabort(i32 %415)
  store i16 %414, ptr %low28.1.i, align 2
  %arrayidx13.2.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2
  %high.2.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 2, i32 0, i32 1
  %416 = ptrtoint ptr %high.2.i to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load i32, ptr %high.2.i, align 4
  %shr.2.i121 = lshr i32 %417, 7
  %conv14.2.i = trunc i32 %shr.2.i121 to i16
  %arrayidx15.2.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 0, i32 4, i32 2
  %418 = or i16 %conv14.2.i, -32768
  %419 = call i16 @llvm.bswap.i16(i16 %418) #16
  %420 = ptrtoint ptr %arrayidx15.2.i to i32
  call void @__asan_store2_noabort(i32 %420)
  store i16 %419, ptr %arrayidx15.2.i, align 4
  %421 = ptrtoint ptr %arrayidx13.2.i to i32
  call void @__asan_load4_noabort(i32 %421)
  %422 = load i32, ptr %arrayidx13.2.i, align 8
  %shr24.2.i = lshr i32 %422, 7
  %conv25.2.i = trunc i32 %shr24.2.i to i16
  %low28.2.i = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i, i32 0, i32 2, i32 1
  %423 = or i16 %conv25.2.i, -32768
  %424 = call i16 @llvm.bswap.i16(i16 %423) #16
  %425 = ptrtoint ptr %low28.2.i to i32
  call void @__asan_store2_noabort(i32 %425)
  store i16 %424, ptr %low28.2.i, align 2
  %arrayidx13.3.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3
  %high.3.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 3, i32 0, i32 1
  %426 = ptrtoint ptr %high.3.i to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load i32, ptr %high.3.i, align 8
  %shr.3.i122 = lshr i32 %427, 7
  %conv14.3.i = trunc i32 %shr.3.i122 to i16
  %arrayidx15.3.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 0, i32 4, i32 3
  %428 = or i16 %conv14.3.i, -32768
  %429 = call i16 @llvm.bswap.i16(i16 %428) #16
  %430 = ptrtoint ptr %arrayidx15.3.i to i32
  call void @__asan_store2_noabort(i32 %430)
  store i16 %429, ptr %arrayidx15.3.i, align 4
  %431 = ptrtoint ptr %arrayidx13.3.i to i32
  call void @__asan_load4_noabort(i32 %431)
  %432 = load i32, ptr %arrayidx13.3.i, align 4
  %shr24.3.i = lshr i32 %432, 7
  %conv25.3.i = trunc i32 %shr24.3.i to i16
  %low28.3.i = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i, i32 0, i32 3, i32 1
  %433 = or i16 %conv25.3.i, -32768
  %434 = call i16 @llvm.bswap.i16(i16 %433) #16
  %435 = ptrtoint ptr %low28.3.i to i32
  call void @__asan_store2_noabort(i32 %435)
  store i16 %434, ptr %low28.3.i, align 2
  %arrayidx.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.1.i, i32 noundef 2307, i1 noundef zeroext false) #16
  %data.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 1, i32 4
  %flag6.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 1, i32 1
  %436 = ptrtoint ptr %flag6.1.i to i32
  call void @__asan_load2_noabort(i32 %436)
  %437 = load i16, ptr %flag6.1.i, align 2
  %438 = and i16 %437, -1025
  store i16 %438, ptr %flag6.1.i, align 2
  %arrayidx13.163.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4
  %high.164.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 4, i32 0, i32 1
  %439 = ptrtoint ptr %high.164.i to i32
  call void @__asan_load4_noabort(i32 %439)
  %440 = load i32, ptr %high.164.i, align 4
  %shr.165.i = lshr i32 %440, 7
  %conv14.166.i = trunc i32 %shr.165.i to i16
  %441 = or i16 %conv14.166.i, -32768
  %442 = call i16 @llvm.bswap.i16(i16 %441) #16
  %443 = ptrtoint ptr %data.1.i to i32
  call void @__asan_store2_noabort(i32 %443)
  store i16 %442, ptr %data.1.i, align 4
  %444 = ptrtoint ptr %arrayidx13.163.i to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load i32, ptr %arrayidx13.163.i, align 8
  %shr24.167.i = lshr i32 %445, 7
  %conv25.168.i = trunc i32 %shr24.167.i to i16
  %low28.169.i = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.1.i, i32 0, i32 0, i32 1
  %446 = or i16 %conv25.168.i, -32768
  %447 = call i16 @llvm.bswap.i16(i16 %446) #16
  %448 = ptrtoint ptr %low28.169.i to i32
  call void @__asan_store2_noabort(i32 %448)
  store i16 %447, ptr %low28.169.i, align 2
  %arrayidx13.1.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5
  %high.1.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 5, i32 0, i32 1
  %449 = ptrtoint ptr %high.1.1.i to i32
  call void @__asan_load4_noabort(i32 %449)
  %450 = load i32, ptr %high.1.1.i, align 8
  %shr.1.1.i = lshr i32 %450, 7
  %conv14.1.1.i = trunc i32 %shr.1.1.i to i16
  %arrayidx15.1.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 1, i32 4, i32 1
  %451 = or i16 %conv14.1.1.i, -32768
  %452 = call i16 @llvm.bswap.i16(i16 %451) #16
  %453 = ptrtoint ptr %arrayidx15.1.1.i to i32
  call void @__asan_store2_noabort(i32 %453)
  store i16 %452, ptr %arrayidx15.1.1.i, align 4
  %454 = ptrtoint ptr %arrayidx13.1.1.i to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load i32, ptr %arrayidx13.1.1.i, align 4
  %shr24.1.1.i = lshr i32 %455, 7
  %conv25.1.1.i = trunc i32 %shr24.1.1.i to i16
  %low28.1.1.i = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.1.i, i32 0, i32 1, i32 1
  %456 = or i16 %conv25.1.1.i, -32768
  %457 = call i16 @llvm.bswap.i16(i16 %456) #16
  %458 = ptrtoint ptr %low28.1.1.i to i32
  call void @__asan_store2_noabort(i32 %458)
  store i16 %457, ptr %low28.1.1.i, align 2
  %arrayidx13.2.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6
  %high.2.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 6, i32 0, i32 1
  %459 = ptrtoint ptr %high.2.1.i to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load i32, ptr %high.2.1.i, align 4
  %shr.2.1.i = lshr i32 %460, 7
  %conv14.2.1.i = trunc i32 %shr.2.1.i to i16
  %arrayidx15.2.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 1, i32 4, i32 2
  %461 = or i16 %conv14.2.1.i, -32768
  %462 = call i16 @llvm.bswap.i16(i16 %461) #16
  %463 = ptrtoint ptr %arrayidx15.2.1.i to i32
  call void @__asan_store2_noabort(i32 %463)
  store i16 %462, ptr %arrayidx15.2.1.i, align 4
  %464 = ptrtoint ptr %arrayidx13.2.1.i to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load i32, ptr %arrayidx13.2.1.i, align 8
  %shr24.2.1.i = lshr i32 %465, 7
  %conv25.2.1.i = trunc i32 %shr24.2.1.i to i16
  %low28.2.1.i = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.1.i, i32 0, i32 2, i32 1
  %466 = or i16 %conv25.2.1.i, -32768
  %467 = call i16 @llvm.bswap.i16(i16 %466) #16
  %468 = ptrtoint ptr %low28.2.1.i to i32
  call void @__asan_store2_noabort(i32 %468)
  store i16 %467, ptr %low28.2.1.i, align 2
  %arrayidx13.3.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7
  %high.3.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %call7.i.i, i32 0, i32 7, i32 0, i32 1
  %469 = ptrtoint ptr %high.3.1.i to i32
  call void @__asan_load4_noabort(i32 %469)
  %470 = load i32, ptr %high.3.1.i, align 8
  %shr.3.1.i = lshr i32 %470, 7
  %conv14.3.1.i = trunc i32 %shr.3.1.i to i16
  %arrayidx15.3.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i117, i32 0, i32 1, i32 4, i32 3
  %471 = or i16 %conv14.3.1.i, -32768
  %472 = call i16 @llvm.bswap.i16(i16 %471) #16
  %473 = ptrtoint ptr %arrayidx15.3.1.i to i32
  call void @__asan_store2_noabort(i32 %473)
  store i16 %472, ptr %arrayidx15.3.1.i, align 4
  %474 = ptrtoint ptr %arrayidx13.3.1.i to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load i32, ptr %arrayidx13.3.1.i, align 4
  %shr24.3.1.i = lshr i32 %475, 7
  %conv25.3.1.i = trunc i32 %shr24.3.1.i to i16
  %low28.3.1.i = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.1.i, i32 0, i32 3, i32 1
  %476 = or i16 %conv25.3.1.i, -32768
  %477 = call i16 @llvm.bswap.i16(i16 %476) #16
  %478 = ptrtoint ptr %low28.3.1.i to i32
  call void @__asan_store2_noabort(i32 %478)
  store i16 %477, ptr %low28.3.1.i, align 2
  %call.i.i124 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i117, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i124)
  %tobool.not.i125 = icmp eq i32 %call.i.i124, 0
  br i1 %tobool.not.i125, label %if.end.i.1, label %do.end39

do.end39:                                         ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  %479 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %479)
  %480 = load ptr, ptr %hdev, align 8
  %dev.i126 = getelementptr inbounds %struct.pci_dev, ptr %480, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i126, ptr noundef nonnull @.str.65, i32 noundef %call.i.i124) #20
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc.i117) #16
  %481 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %481)
  %482 = load ptr, ptr %hdev, align 8
  %dev41 = getelementptr inbounds %struct.pci_dev, ptr %482, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev41, ptr noundef nonnull @.str.15, i32 noundef %call.i.i124) #20
  br label %out

if.end.i.1:                                       ; preds = %if.then33
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc.i117) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %desc.i128) #16
  %483 = call ptr @memset(ptr %desc.i128, i32 255, i32 64)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i128, i32 noundef 2308, i1 noundef zeroext false) #16
  %data.i130 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 0, i32 4
  %flag.i129 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 0, i32 1
  %484 = ptrtoint ptr %flag.i129 to i32
  call void @__asan_load2_noabort(i32 %484)
  %485 = load i16, ptr %flag.i129, align 2
  %486 = or i16 %485, 1024
  store i16 %486, ptr %flag.i129, align 2
  %arrayidx14.i = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 0
  %high.i132 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 0, i32 1
  %487 = ptrtoint ptr %high.i132 to i32
  call void @__asan_load4_noabort(i32 %487)
  %488 = load i32, ptr %high.i132, align 4
  %shr.i133 = lshr i32 %488, 7
  %conv15.i = trunc i32 %shr.i133 to i16
  %489 = or i16 %conv15.i, -32768
  %490 = call i16 @llvm.bswap.i16(i16 %489) #16
  %491 = ptrtoint ptr %data.i130 to i32
  call void @__asan_store2_noabort(i32 %491)
  store i16 %490, ptr %data.i130, align 4
  %492 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %492)
  %493 = load i32, ptr %arrayidx14.i, align 8
  %shr24.i134 = lshr i32 %493, 7
  %conv25.i135 = trunc i32 %shr24.i134 to i16
  %low28.i136 = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i130, i32 0, i32 0, i32 1
  %494 = or i16 %conv25.i135, -32768
  %495 = call i16 @llvm.bswap.i16(i16 %494) #16
  %496 = ptrtoint ptr %low28.i136 to i32
  call void @__asan_store2_noabort(i32 %496)
  store i16 %495, ptr %low28.i136, align 2
  %arrayidx14.1.i = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 1
  %high.1.i137 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 1, i32 1
  %497 = ptrtoint ptr %high.1.i137 to i32
  call void @__asan_load4_noabort(i32 %497)
  %498 = load i32, ptr %high.1.i137, align 4
  %shr.1.i138 = lshr i32 %498, 7
  %conv15.1.i = trunc i32 %shr.1.i138 to i16
  %arrayidx16.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 0, i32 4, i32 1
  %499 = or i16 %conv15.1.i, -32768
  %500 = call i16 @llvm.bswap.i16(i16 %499) #16
  %501 = ptrtoint ptr %arrayidx16.1.i to i32
  call void @__asan_store2_noabort(i32 %501)
  store i16 %500, ptr %arrayidx16.1.i, align 4
  %502 = ptrtoint ptr %arrayidx14.1.i to i32
  call void @__asan_load4_noabort(i32 %502)
  %503 = load i32, ptr %arrayidx14.1.i, align 8
  %shr24.1.i139 = lshr i32 %503, 7
  %conv25.1.i140 = trunc i32 %shr24.1.i139 to i16
  %low28.1.i141 = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i130, i32 0, i32 1, i32 1
  %504 = or i16 %conv25.1.i140, -32768
  %505 = call i16 @llvm.bswap.i16(i16 %504) #16
  %506 = ptrtoint ptr %low28.1.i141 to i32
  call void @__asan_store2_noabort(i32 %506)
  store i16 %505, ptr %low28.1.i141, align 2
  %arrayidx14.2.i = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 2
  %high.2.i142 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 2, i32 1
  %507 = ptrtoint ptr %high.2.i142 to i32
  call void @__asan_load4_noabort(i32 %507)
  %508 = load i32, ptr %high.2.i142, align 4
  %shr.2.i143 = lshr i32 %508, 7
  %conv15.2.i = trunc i32 %shr.2.i143 to i16
  %arrayidx16.2.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 0, i32 4, i32 2
  %509 = or i16 %conv15.2.i, -32768
  %510 = call i16 @llvm.bswap.i16(i16 %509) #16
  %511 = ptrtoint ptr %arrayidx16.2.i to i32
  call void @__asan_store2_noabort(i32 %511)
  store i16 %510, ptr %arrayidx16.2.i, align 4
  %512 = ptrtoint ptr %arrayidx14.2.i to i32
  call void @__asan_load4_noabort(i32 %512)
  %513 = load i32, ptr %arrayidx14.2.i, align 8
  %shr24.2.i144 = lshr i32 %513, 7
  %conv25.2.i145 = trunc i32 %shr24.2.i144 to i16
  %low28.2.i146 = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i130, i32 0, i32 2, i32 1
  %514 = or i16 %conv25.2.i145, -32768
  %515 = call i16 @llvm.bswap.i16(i16 %514) #16
  %516 = ptrtoint ptr %low28.2.i146 to i32
  call void @__asan_store2_noabort(i32 %516)
  store i16 %515, ptr %low28.2.i146, align 2
  %arrayidx14.3.i = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 3
  %high.3.i147 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 3, i32 1
  %517 = ptrtoint ptr %high.3.i147 to i32
  call void @__asan_load4_noabort(i32 %517)
  %518 = load i32, ptr %high.3.i147, align 4
  %shr.3.i148 = lshr i32 %518, 7
  %conv15.3.i = trunc i32 %shr.3.i148 to i16
  %arrayidx16.3.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 0, i32 4, i32 3
  %519 = or i16 %conv15.3.i, -32768
  %520 = call i16 @llvm.bswap.i16(i16 %519) #16
  %521 = ptrtoint ptr %arrayidx16.3.i to i32
  call void @__asan_store2_noabort(i32 %521)
  store i16 %520, ptr %arrayidx16.3.i, align 4
  %522 = ptrtoint ptr %arrayidx14.3.i to i32
  call void @__asan_load4_noabort(i32 %522)
  %523 = load i32, ptr %arrayidx14.3.i, align 8
  %shr24.3.i149 = lshr i32 %523, 7
  %conv25.3.i150 = trunc i32 %shr24.3.i149 to i16
  %low28.3.i151 = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i130, i32 0, i32 3, i32 1
  %524 = or i16 %conv25.3.i150, -32768
  %525 = call i16 @llvm.bswap.i16(i16 %524) #16
  %526 = ptrtoint ptr %low28.3.i151 to i32
  call void @__asan_store2_noabort(i32 %526)
  store i16 %525, ptr %low28.3.i151, align 2
  %arrayidx.i.1 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.i.1, i32 noundef 2308, i1 noundef zeroext false) #16
  %data.i130.1 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 1, i32 4
  %flag7.i.1 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 1, i32 1
  %527 = ptrtoint ptr %flag7.i.1 to i32
  call void @__asan_load2_noabort(i32 %527)
  %528 = load i16, ptr %flag7.i.1, align 2
  %529 = and i16 %528, -1025
  store i16 %529, ptr %flag7.i.1, align 2
  %arrayidx14.i.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 4
  %high.i132.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 4, i32 1
  %530 = ptrtoint ptr %high.i132.1 to i32
  call void @__asan_load4_noabort(i32 %530)
  %531 = load i32, ptr %high.i132.1, align 4
  %shr.i133.1 = lshr i32 %531, 7
  %conv15.i.1 = trunc i32 %shr.i133.1 to i16
  %532 = or i16 %conv15.i.1, -32768
  %533 = call i16 @llvm.bswap.i16(i16 %532) #16
  %534 = ptrtoint ptr %data.i130.1 to i32
  call void @__asan_store2_noabort(i32 %534)
  store i16 %533, ptr %data.i130.1, align 4
  %535 = ptrtoint ptr %arrayidx14.i.1 to i32
  call void @__asan_load4_noabort(i32 %535)
  %536 = load i32, ptr %arrayidx14.i.1, align 8
  %shr24.i134.1 = lshr i32 %536, 7
  %conv25.i135.1 = trunc i32 %shr24.i134.1 to i16
  %low28.i136.1 = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i130.1, i32 0, i32 0, i32 1
  %537 = or i16 %conv25.i135.1, -32768
  %538 = call i16 @llvm.bswap.i16(i16 %537) #16
  %539 = ptrtoint ptr %low28.i136.1 to i32
  call void @__asan_store2_noabort(i32 %539)
  store i16 %538, ptr %low28.i136.1, align 2
  %arrayidx14.1.i.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 5
  %high.1.i137.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 5, i32 1
  %540 = ptrtoint ptr %high.1.i137.1 to i32
  call void @__asan_load4_noabort(i32 %540)
  %541 = load i32, ptr %high.1.i137.1, align 4
  %shr.1.i138.1 = lshr i32 %541, 7
  %conv15.1.i.1 = trunc i32 %shr.1.i138.1 to i16
  %arrayidx16.1.i.1 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 1, i32 4, i32 1
  %542 = or i16 %conv15.1.i.1, -32768
  %543 = call i16 @llvm.bswap.i16(i16 %542) #16
  %544 = ptrtoint ptr %arrayidx16.1.i.1 to i32
  call void @__asan_store2_noabort(i32 %544)
  store i16 %543, ptr %arrayidx16.1.i.1, align 4
  %545 = ptrtoint ptr %arrayidx14.1.i.1 to i32
  call void @__asan_load4_noabort(i32 %545)
  %546 = load i32, ptr %arrayidx14.1.i.1, align 8
  %shr24.1.i139.1 = lshr i32 %546, 7
  %conv25.1.i140.1 = trunc i32 %shr24.1.i139.1 to i16
  %low28.1.i141.1 = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i130.1, i32 0, i32 1, i32 1
  %547 = or i16 %conv25.1.i140.1, -32768
  %548 = call i16 @llvm.bswap.i16(i16 %547) #16
  %549 = ptrtoint ptr %low28.1.i141.1 to i32
  call void @__asan_store2_noabort(i32 %549)
  store i16 %548, ptr %low28.1.i141.1, align 2
  %arrayidx14.2.i.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 6
  %high.2.i142.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 6, i32 1
  %550 = ptrtoint ptr %high.2.i142.1 to i32
  call void @__asan_load4_noabort(i32 %550)
  %551 = load i32, ptr %high.2.i142.1, align 4
  %shr.2.i143.1 = lshr i32 %551, 7
  %conv15.2.i.1 = trunc i32 %shr.2.i143.1 to i16
  %arrayidx16.2.i.1 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 1, i32 4, i32 2
  %552 = or i16 %conv15.2.i.1, -32768
  %553 = call i16 @llvm.bswap.i16(i16 %552) #16
  %554 = ptrtoint ptr %arrayidx16.2.i.1 to i32
  call void @__asan_store2_noabort(i32 %554)
  store i16 %553, ptr %arrayidx16.2.i.1, align 4
  %555 = ptrtoint ptr %arrayidx14.2.i.1 to i32
  call void @__asan_load4_noabort(i32 %555)
  %556 = load i32, ptr %arrayidx14.2.i.1, align 8
  %shr24.2.i144.1 = lshr i32 %556, 7
  %conv25.2.i145.1 = trunc i32 %shr24.2.i144.1 to i16
  %low28.2.i146.1 = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i130.1, i32 0, i32 2, i32 1
  %557 = or i16 %conv25.2.i145.1, -32768
  %558 = call i16 @llvm.bswap.i16(i16 %557) #16
  %559 = ptrtoint ptr %low28.2.i146.1 to i32
  call void @__asan_store2_noabort(i32 %559)
  store i16 %558, ptr %low28.2.i146.1, align 2
  %arrayidx14.3.i.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 7
  %high.3.i147.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 7, i32 1
  %560 = ptrtoint ptr %high.3.i147.1 to i32
  call void @__asan_load4_noabort(i32 %560)
  %561 = load i32, ptr %high.3.i147.1, align 4
  %shr.3.i148.1 = lshr i32 %561, 7
  %conv15.3.i.1 = trunc i32 %shr.3.i148.1 to i16
  %arrayidx16.3.i.1 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i128, i32 0, i32 1, i32 4, i32 3
  %562 = or i16 %conv15.3.i.1, -32768
  %563 = call i16 @llvm.bswap.i16(i16 %562) #16
  %564 = ptrtoint ptr %arrayidx16.3.i.1 to i32
  call void @__asan_store2_noabort(i32 %564)
  store i16 %563, ptr %arrayidx16.3.i.1, align 4
  %565 = ptrtoint ptr %arrayidx14.3.i.1 to i32
  call void @__asan_load4_noabort(i32 %565)
  %566 = load i32, ptr %arrayidx14.3.i.1, align 8
  %shr24.3.i149.1 = lshr i32 %566, 7
  %conv25.3.i150.1 = trunc i32 %shr24.3.i149.1 to i16
  %low28.3.i151.1 = getelementptr inbounds [4 x %struct.hclge_priv_wl], ptr %data.i130.1, i32 0, i32 3, i32 1
  %567 = or i16 %conv25.3.i150.1, -32768
  %568 = call i16 @llvm.bswap.i16(i16 %567) #16
  %569 = ptrtoint ptr %low28.3.i151.1 to i32
  call void @__asan_store2_noabort(i32 %569)
  store i16 %568, ptr %low28.3.i151.1, align 2
  %call.i.i153 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i128, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i153)
  %tobool.not.i154 = icmp eq i32 %call.i.i153, 0
  br i1 %tobool.not.i154, label %hclge_common_thrd_config.exit.thread, label %do.end48

hclge_common_thrd_config.exit.thread:             ; preds = %if.end.i.1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc.i128) #16
  br label %if.end52

do.end48:                                         ; preds = %if.end.i.1
  call void @__sanitizer_cov_trace_pc() #18
  %570 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %570)
  %571 = load ptr, ptr %hdev, align 8
  %dev.i155 = getelementptr inbounds %struct.pci_dev, ptr %571, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i155, ptr noundef nonnull @.str.67, i32 noundef %call.i.i153) #20
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc.i128) #16
  %572 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %572)
  %573 = load ptr, ptr %hdev, align 8
  %dev50 = getelementptr inbounds %struct.pci_dev, ptr %573, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev50, ptr noundef nonnull @.str.18, i32 noundef %call.i.i153) #20
  br label %out

if.end52:                                         ; preds = %hclge_common_thrd_config.exit.thread, %if.end31.if.end52_crit_edge
  %s_buf.i = getelementptr inbounds %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i157) #16
  %574 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i157, i32 0, i32 4
  %575 = call ptr @memset(ptr %desc.i157, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i157, i32 noundef 2309, i1 noundef zeroext false) #16
  %high.i158 = getelementptr inbounds %struct.hclge_pkt_buf_alloc, ptr %call7.i.i, i32 0, i32 1, i32 0, i32 1
  %576 = ptrtoint ptr %high.i158 to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load i32, ptr %high.i158, align 4
  %shr.i159 = lshr i32 %577, 7
  %conv.i160 = trunc i32 %shr.i159 to i16
  %578 = or i16 %conv.i160, -32768
  %579 = call i16 @llvm.bswap.i16(i16 %578) #16
  %580 = ptrtoint ptr %574 to i32
  call void @__asan_store2_noabort(i32 %580)
  store i16 %579, ptr %574, align 4
  %581 = ptrtoint ptr %s_buf.i to i32
  call void @__asan_load4_noabort(i32 %581)
  %582 = load i32, ptr %s_buf.i, align 8
  %shr7.i161 = lshr i32 %582, 7
  %conv8.i = trunc i32 %shr7.i161 to i16
  %low10.i = getelementptr inbounds %struct.hclge_priv_wl, ptr %574, i32 0, i32 1
  %583 = or i16 %conv8.i, -32768
  %584 = call i16 @llvm.bswap.i16(i16 %583) #16
  %585 = ptrtoint ptr %low10.i to i32
  call void @__asan_store2_noabort(i32 %585)
  store i16 %584, ptr %low10.i, align 2
  %call.i.i163 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i157, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i163)
  %tobool.not.i164 = icmp eq i32 %call.i.i163, 0
  br i1 %tobool.not.i164, label %hclge_common_wl_config.exit.thread, label %do.end58

hclge_common_wl_config.exit.thread:               ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i157) #16
  br label %out

do.end58:                                         ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #18
  %586 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %586)
  %587 = load ptr, ptr %hdev, align 8
  %dev.i165 = getelementptr inbounds %struct.pci_dev, ptr %587, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i165, ptr noundef nonnull @.str.69, i32 noundef %call.i.i163) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i157) #16
  %588 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %588)
  %589 = load ptr, ptr %hdev, align 8
  %dev60 = getelementptr inbounds %struct.pci_dev, ptr %589, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev60, ptr noundef nonnull @.str.21, i32 noundef %call.i.i163) #20
  br label %out

out:                                              ; preds = %do.end58, %hclge_common_wl_config.exit.thread, %do.end48, %do.end39, %do.end28, %do.end19, %do.end10, %do.end
  %ret.0 = phi i32 [ -12, %do.end ], [ %call.i.i.i, %do.end10 ], [ -12, %do.end19 ], [ %call.i.i, %do.end28 ], [ %call.i.i124, %do.end39 ], [ %call.i.i153, %do.end48 ], [ %call.i.i163, %do.end58 ], [ 0, %hclge_common_wl_config.exit.thread ]
  call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_cfg_mac_speed_dup(ptr noundef %hdev, i32 noundef %speed, i8 noundef zeroext %duplex) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %speed to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values)
  switch i32 %speed, label %if.then.i [
    i32 10, label %entry.hclge_check_speed_dup.exit_crit_edge
    i32 100, label %entry.hclge_check_speed_dup.exit_crit_edge31
  ]

entry.hclge_check_speed_dup.exit_crit_edge31:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_check_speed_dup.exit

entry.hclge_check_speed_dup.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_check_speed_dup.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_check_speed_dup.exit

hclge_check_speed_dup.exit:                       ; preds = %if.then.i, %entry.hclge_check_speed_dup.exit_crit_edge, %entry.hclge_check_speed_dup.exit_crit_edge31
  %duplex.addr.0.i = phi i8 [ %duplex, %entry.hclge_check_speed_dup.exit_crit_edge ], [ 1, %if.then.i ], [ %duplex, %entry.hclge_check_speed_dup.exit_crit_edge31 ]
  %support_autoneg = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 7
  %1 = ptrtoint ptr %support_autoneg to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %support_autoneg, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %land.lhs.true, label %hclge_check_speed_dup.exit.if.end_crit_edge

hclge_check_speed_dup.exit.if.end_crit_edge:      ; preds = %hclge_check_speed_dup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %hclge_check_speed_dup.exit
  %speed2 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %3 = ptrtoint ptr %speed2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %speed2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %speed)
  %cmp = icmp eq i32 %4, %speed
  br i1 %cmp, label %land.lhs.true3, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %duplex4 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 6
  %5 = ptrtoint ptr %duplex4 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %duplex4, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %6, i8 %duplex.addr.0.i)
  %cmp6 = icmp eq i8 %6, %duplex.addr.0.i
  br i1 %cmp6, label %land.lhs.true3.cleanup_crit_edge, label %land.lhs.true3.if.end_crit_edge

land.lhs.true3.if.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true3.cleanup_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true3.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %hclge_check_speed_dup.exit.if.end_crit_edge
  %call8 = tail call fastcc i32 @hclge_cfg_mac_speed_dup_hw(ptr noundef %hdev, i32 noundef %speed, i8 noundef zeroext %duplex.addr.0.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %speed14 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %7 = ptrtoint ptr %speed14 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %speed, ptr %speed14, align 4
  %duplex17 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 6
  %8 = ptrtoint ptr %duplex17 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %duplex.addr.0.i, ptr %duplex17, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %if.end.cleanup_crit_edge, %land.lhs.true3.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end11 ], [ 0, %land.lhs.true3.cleanup_crit_edge ], [ %call8, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_cfg_mac_speed_dup_hw(ptr noundef %hdev, i32 noundef %speed, i8 noundef zeroext %duplex) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %1 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 777, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %duplex)
  %tobool.not = icmp eq i8 %duplex, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %0, align 4
  %4 = or i8 %3, -128
  store i8 %4, ptr %0, align 4
  br label %if.end

if.end:                                           ; preds = %do.body, %entry.if.end_crit_edge
  %5 = zext i32 %speed to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.747)
  switch i32 %speed, label %do.end9 [
    i32 10, label %if.end.do.body11_crit_edge
    i32 100, label %if.then.fold.split.i
    i32 1000, label %if.then.fold.split13.i
    i32 10000, label %if.then.fold.split14.i
    i32 25000, label %if.then.fold.split15.i
    i32 40000, label %if.then.fold.split16.i
    i32 50000, label %if.then.fold.split17.i
    i32 100000, label %if.then.fold.split18.i
    i32 200000, label %if.then.fold.split19.i
  ]

if.end.do.body11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

if.then.fold.split.i:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

if.then.fold.split13.i:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

if.then.fold.split14.i:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

if.then.fold.split15.i:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

if.then.fold.split16.i:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

if.then.fold.split17.i:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

if.then.fold.split18.i:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

if.then.fold.split19.i:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body11

do.end9:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.71, i32 noundef %speed) #20
  br label %cleanup

do.body11:                                        ; preds = %if.then.fold.split19.i, %if.then.fold.split18.i, %if.then.fold.split17.i, %if.then.fold.split16.i, %if.then.fold.split15.i, %if.then.fold.split14.i, %if.then.fold.split13.i, %if.then.fold.split.i, %if.end.do.body11_crit_edge
  %conv.lcssa.i = phi i32 [ 0, %if.end.do.body11_crit_edge ], [ 1, %if.then.fold.split.i ], [ 2, %if.then.fold.split13.i ], [ 3, %if.then.fold.split14.i ], [ 4, %if.then.fold.split15.i ], [ 5, %if.then.fold.split16.i ], [ 6, %if.then.fold.split17.i ], [ 7, %if.then.fold.split18.i ], [ 8, %if.then.fold.split19.i ]
  %speed_fw7.i = getelementptr [9 x %struct.hclge_mac_speed_map], ptr @hclge_mac_speed_map_to_fw, i32 0, i32 %conv.lcssa.i, i32 1
  %8 = ptrtoint ptr %speed_fw7.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %speed_fw7.i, align 4
  %10 = ptrtoint ptr %0 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %0, align 4
  %12 = and i8 %11, -64
  %13 = trunc i32 %9 to i8
  %14 = and i8 %13, 63
  %conv20 = or i8 %14, %12
  store i8 %conv20, ptr %0, align 4
  %mac_change_fec_en = getelementptr inbounds %struct.hclge_config_mac_speed_dup_cmd, ptr %0, i32 0, i32 1
  %15 = ptrtoint ptr %mac_change_fec_en to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %mac_change_fec_en, align 1
  %17 = or i8 %16, 1
  store i8 %17, ptr %mac_change_fec_en, align 1
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool34.not = icmp eq i32 %call.i, 0
  br i1 %tobool34.not, label %do.body11.cleanup_crit_edge, label %do.end38

do.body11.cleanup_crit_edge:                      ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end38:                                         ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hdev, align 8
  %dev40 = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev40, ptr noundef nonnull @.str.74, i32 noundef %call.i) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end38, %do.body11.cleanup_crit_edge, %do.end9
  %retval.0 = phi i32 [ -22, %do.end9 ], [ %call.i, %do.end38 ], [ 0, %do.body11.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hclge_task_schedule(ptr noundef %hdev, i32 noundef %delay_time) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 4
  %2 = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %state, align 4
  %5 = and i32 %4, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %6 = load ptr, ptr @hclge_wq, align 4
  %service_task = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 48
  %call.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %6, ptr noundef %service_task, i32 noundef %delay_time) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_notify_client(ptr noundef %hdev, i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %0 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vport, align 4
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %1, i32 0, i32 13
  %nic_client = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 54
  %2 = ptrtoint ptr %nic_client to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nic_client, align 4
  %state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state, align 4
  %6 = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  %tobool1.not = icmp eq ptr %3, null
  %or.cond = select i1 %tobool.not, i1 true, i1 %tobool1.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %ops = getelementptr inbounds %struct.hnae3_client, ptr %3, i32 0, i32 3
  %7 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops, align 4
  %reset_notify = getelementptr inbounds %struct.hnae3_client_ops, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %reset_notify to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %reset_notify, align 4
  %tobool2.not = icmp eq ptr %10, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call7 = tail call i32 %10(ptr noundef %nic, i32 noundef %type) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end4.cleanup_crit_edge, label %do.end

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %12, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.23, i32 noundef %type, i32 noundef %call7) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ], [ %call7, %do.end ], [ 0, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hclge_report_hw_error(ptr noundef %hdev, i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %nic_client = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 54
  %0 = ptrtoint ptr %nic_client to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nic_client, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %ops = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %process_hw_error = getelementptr inbounds %struct.hnae3_client_ops, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %process_hw_error to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %process_hw_error, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false2

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state, align 4
  %8 = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool3.not = icmp eq i32 %8, 0
  br i1 %tobool3.not, label %lor.lhs.false2.cleanup_crit_edge, label %if.end

lor.lhs.false2.cleanup_crit_edge:                 ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #18
  %vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %9 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vport, align 4
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %10, i32 0, i32 13
  tail call void %5(ptr noundef %nic, i32 noundef %type) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %lor.lhs.false2.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_func_reset_cmd(ptr noundef %hdev, i32 noundef %func_id) local_unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %1 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 32, i1 noundef zeroext false) #16
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %0, align 4
  %4 = or i8 %3, -128
  store i8 %4, ptr %0, align 4
  %conv5 = trunc i32 %func_id to i8
  %fun_reset_vfid = getelementptr inbounds %struct.hclge_reset_cmd, ptr %0, i32 0, i32 1
  %5 = ptrtoint ptr %fun_reset_vfid to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %conv5, ptr %fun_reset_vfid, align 1
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end8

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end8:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.25, i32 noundef %call.i) #20
  br label %if.end

if.end:                                           ; preds = %do.end8, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %call.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_comm_cmd_setup_basic_desc(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @hclge_get_vport(ptr noundef readonly %handle) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.else

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp = icmp eq i32 %3, 1
  %. = select i1 %cmp, i32 -792, i32 -560
  br label %return

return:                                           ; preds = %if.else, %entry.return_crit_edge
  %.sink = phi i32 [ -560, %entry.return_crit_edge ], [ %., %if.else ]
  %add.ptr9 = getelementptr i8, ptr %handle, i32 %.sink
  ret ptr %add.ptr9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_rss_init_hw(ptr noundef %hdev) local_unnamed_addr #0 align 64 {
entry:
  %tc_offset.i = alloca [8 x i16], align 2
  %tc_valid.i = alloca [8 x i16], align 2
  %tc_size.i = alloca [8 x i16], align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %rss_cfg = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 87
  %rss_indirection_tbl = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 87, i32 1
  %0 = ptrtoint ptr %rss_indirection_tbl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rss_indirection_tbl, align 4
  %rss_algo = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 87, i32 2
  %2 = ptrtoint ptr %rss_algo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rss_algo, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %4 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ae_dev, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call = tail call i32 @hclge_comm_set_rss_indir_table(ptr noundef %5, ptr noundef %hw, ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = trunc i32 %3 to i8
  %call6 = tail call i32 @hclge_comm_set_rss_algo_key(ptr noundef %hw, i8 noundef zeroext %conv, ptr noundef %rss_cfg) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end9, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %6 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vport, align 4
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %7, i32 0, i32 13
  %call13 = tail call i32 @hclge_comm_set_rss_input_tuple(ptr noundef %nic, ptr noundef %hw, i1 noundef zeroext true, ptr noundef %rss_cfg) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16:                                         ; preds = %if.end9
  %8 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ae_dev, align 4
  %10 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vport, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tc_offset.i) #16
  %12 = call ptr @memset(ptr %tc_offset.i, i32 0, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tc_valid.i) #16
  %13 = call ptr @memset(ptr %tc_valid.i, i32 0, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tc_size.i) #16
  %14 = call ptr @memset(ptr %tc_size.i, i32 0, i32 16)
  %hw_tc_map.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 29
  %15 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %hw_tc_map.i, align 2
  %conv.i = zext i8 %16 to i32
  %rss_ind_tbl_size.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %9, i32 0, i32 5, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end16
  %i.0108.i = phi i32 [ 0, %if.end16 ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.hclge_vport, ptr %11, i32 0, i32 13, i32 5, i32 0, i32 7, i32 1, i32 %i.0108.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %arrayidx.i, align 2
  %arrayidx4.i = getelementptr [8 x i16], ptr %tc_valid.i, i32 0, i32 %i.0108.i
  %19 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 0, ptr %arrayidx4.i, align 2
  %shl.i = shl nuw nsw i32 1, %i.0108.i
  %and.i = and i32 %shl.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %20 = ptrtoint ptr %rss_ind_tbl_size.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %rss_ind_tbl_size.i, align 4
  %22 = add i16 %18, -1
  call void @__sanitizer_cov_trace_cmp2(i16 %22, i16 %21)
  %.not.i = icmp ult i16 %22, %21
  br i1 %.not.i, label %cond.false39.i, label %do.end.i

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv5.i.le = zext i16 %18 to i32
  %23 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.76, i32 noundef %conv5.i.le) #20
  br label %hclge_init_rss_tc_mode.exit

cond.false39.i:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv5.i = zext i16 %18 to i32
  %sub.i104.i = add nsw i32 %conv5.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i104.i)
  %tobool.not.i.i.i.i = icmp eq i32 %sub.i104.i, 0
  %25 = tail call i32 @llvm.ctlz.i32(i32 %sub.i104.i, i1 true) #16, !range !1453
  %sub.i.i.i.i = sub nuw nsw i32 32, %25
  %sub.i.i.op.i.i = shl nuw i32 1, %sub.i.i.i.i
  %sub.i.i.op.i.i.op = and i32 %sub.i.i.op.i.i, 65535
  %conv57.i = select i1 %tobool.not.i.i.i.i, i32 1, i32 %sub.i.i.op.i.i.op
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv57.i)
  %tobool.not.i.i105.i = icmp eq i32 %conv57.i, 0
  %26 = tail call i32 @llvm.ctlz.i32(i32 %conv57.i, i1 true) #16, !range !1453
  %27 = trunc i32 %26 to i16
  %28 = xor i16 %27, 31
  %conv61.i = select i1 %tobool.not.i.i105.i, i16 -1, i16 %28
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 1, ptr %arrayidx4.i, align 2
  %arrayidx63.i = getelementptr [8 x i16], ptr %tc_size.i, i32 0, i32 %i.0108.i
  %30 = ptrtoint ptr %arrayidx63.i to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %conv61.i, ptr %arrayidx63.i, align 2
  %arrayidx64.i = getelementptr %struct.hclge_vport, ptr %11, i32 0, i32 13, i32 5, i32 0, i32 7, i32 2, i32 %i.0108.i
  %31 = ptrtoint ptr %arrayidx64.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %arrayidx64.i, align 2
  %arrayidx65.i = getelementptr [8 x i16], ptr %tc_offset.i, i32 0, i32 %i.0108.i
  %33 = ptrtoint ptr %arrayidx65.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %32, ptr %arrayidx65.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %cond.false39.i, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.0108.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 8
  br i1 %exitcond.not.i, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  %call69.i = call i32 @hclge_comm_set_rss_tc_mode(ptr noundef %hw, ptr noundef nonnull %tc_offset.i, ptr noundef nonnull %tc_valid.i, ptr noundef nonnull %tc_size.i) #16
  br label %hclge_init_rss_tc_mode.exit

hclge_init_rss_tc_mode.exit:                      ; preds = %for.end.i, %do.end.i
  %retval.0.i = phi i32 [ -22, %do.end.i ], [ %call69.i, %for.end.i ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tc_size.i) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tc_valid.i) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tc_offset.i) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_init_rss_tc_mode.exit, %if.end9.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %hclge_init_rss_tc_mode.exit ], [ %call, %entry.cleanup_crit_edge ], [ %call6, %if.end.cleanup_crit_edge ], [ %call13, %if.end9.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_set_rss_indir_table(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_set_rss_algo_key(ptr noundef, i8 noundef zeroext, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_set_rss_input_tuple(ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_bind_ring_with_vector(ptr nocapture noundef readonly %vport, i32 noundef %vector_id, i1 noundef zeroext %en, ptr noundef readonly %ring_chain) local_unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %cond = select i1 %en, i32 5379, i32 5380
  %3 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef %cond, i1 noundef zeroext false) #16
  %conv = trunc i32 %vector_id to i8
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %conv, ptr %2, align 4
  %and1 = lshr i32 %vector_id, 8
  %conv3 = trunc i32 %and1 to i8
  %int_vector_id_h = getelementptr inbounds %struct.hclge_ctrl_vector_chain_cmd, ptr %2, i32 0, i32 4
  %5 = ptrtoint ptr %int_vector_id_h to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %conv3, ptr %int_vector_id_h, align 1
  %tobool4.not120 = icmp eq ptr %ring_chain, null
  br i1 %tobool4.not120, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %int_cause_num = getelementptr inbounds %struct.hclge_ctrl_vector_chain_cmd, ptr %2, i32 0, i32 1
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %vfid = getelementptr inbounds %struct.hclge_ctrl_vector_chain_cmd, ptr %2, i32 0, i32 3
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0122 = phi i32 [ 0, %for.body.lr.ph ], [ %i.1, %for.inc.for.body_crit_edge ]
  %node.0121 = phi ptr [ %ring_chain, %for.body.lr.ph ], [ %31, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hclge_ctrl_vector_chain_cmd, ptr %2, i32 0, i32 2, i32 %i.0122
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %arrayidx, align 2
  %8 = shl i16 %7, 8
  %flag = getelementptr inbounds %struct.hnae3_ring_chain_node, ptr %node.0121, i32 0, i32 2
  %9 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flag, align 4
  %11 = trunc i32 %10 to i16
  %12 = and i16 %11, 1
  %.masked = and i16 %8, -32768
  %13 = or i16 %12, %.masked
  %tqp_index = getelementptr inbounds %struct.hnae3_ring_chain_node, ptr %node.0121, i32 0, i32 1
  %14 = ptrtoint ptr %tqp_index to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %tqp_index, align 4
  %.tr = trunc i32 %15 to i16
  %16 = shl i16 %.tr, 2
  %17 = and i16 %16, 8188
  %conv22 = or i16 %13, %17
  %int_gl_idx = getelementptr inbounds %struct.hnae3_ring_chain_node, ptr %node.0121, i32 0, i32 3
  %18 = ptrtoint ptr %int_gl_idx to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %int_gl_idx, align 4
  %.tr117 = trunc i32 %19 to i16
  %20 = shl i16 %.tr117, 13
  %21 = and i16 %20, 24576
  %conv35 = or i16 %conv22, %21
  %22 = call i16 @llvm.bswap.i16(i16 %conv35)
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %22, ptr %arrayidx, align 2
  %inc = add i32 %i.0122, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %inc)
  %cmp = icmp sgt i32 %inc, 9
  br i1 %cmp, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %for.body
  %24 = ptrtoint ptr %int_cause_num to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 10, ptr %int_cause_num, align 1
  %25 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %vport_id, align 2
  %conv41 = trunc i16 %26 to i8
  %27 = ptrtoint ptr %vfid to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %conv41, ptr %vfid, align 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool42.not = icmp eq i32 %call.i, 0
  br i1 %tobool42.not, label %if.end, label %if.then.cleanup.sink.split_crit_edge

if.then.cleanup.sink.split_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef %cond, i1 noundef zeroext false) #16
  %28 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %conv, ptr %2, align 4
  %29 = ptrtoint ptr %int_vector_id_h to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %conv3, ptr %int_vector_id_h, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body.for.inc_crit_edge
  %i.1 = phi i32 [ 0, %if.end ], [ %inc, %for.body.for.inc_crit_edge ]
  %30 = ptrtoint ptr %node.0121 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %node.0121, align 4
  %tobool4.not = icmp eq ptr %31, null
  br i1 %tobool4.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.1)
  %cmp56 = icmp sgt i32 %i.1, 0
  br i1 %cmp56, label %if.then58, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then58:                                        ; preds = %for.end
  %conv59 = trunc i32 %i.1 to i8
  %int_cause_num60 = getelementptr inbounds %struct.hclge_ctrl_vector_chain_cmd, ptr %2, i32 0, i32 1
  %32 = ptrtoint ptr %int_cause_num60 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %conv59, ptr %int_cause_num60, align 1
  %vport_id61 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %33 = ptrtoint ptr %vport_id61 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %vport_id61, align 2
  %conv62 = trunc i16 %34 to i8
  %vfid63 = getelementptr inbounds %struct.hclge_ctrl_vector_chain_cmd, ptr %2, i32 0, i32 3
  %35 = ptrtoint ptr %vfid63 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %conv62, ptr %vfid63, align 2
  %hw64 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %call.i118 = call i32 @hclge_comm_cmd_send(ptr noundef %hw64, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i118)
  %tobool66.not = icmp eq i32 %call.i118, 0
  br i1 %tobool66.not, label %if.then58.cleanup_crit_edge, label %if.then58.cleanup.sink.split_crit_edge

if.then58.cleanup.sink.split_crit_edge:           ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then58.cleanup_crit_edge:                      ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.then58.cleanup.sink.split_crit_edge, %if.then.cleanup.sink.split_crit_edge
  %call.i118.sink = phi i32 [ %call.i118, %if.then58.cleanup.sink.split_crit_edge ], [ %call.i, %if.then.cleanup.sink.split_crit_edge ]
  %36 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %1, align 8
  %dev72 = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev72, ptr noundef nonnull @.str.27, i32 noundef %call.i118.sink) #20
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.then58.cleanup_crit_edge, %for.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then58.cleanup_crit_edge ], [ 0, %for.end.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ -5, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_set_vport_promisc_mode(ptr nocapture noundef readonly %vport, i1 noundef zeroext %en_uc_pmc, i1 noundef zeroext %en_mc_pmc, i1 noundef zeroext %en_bc_pmc) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %2 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vport_id, align 2
  %conv = trunc i16 %3 to i8
  %call = tail call fastcc i32 @hclge_cmd_set_promisc_mode(ptr noundef %1, i8 noundef zeroext %conv, i1 noundef zeroext %en_uc_pmc, i1 noundef zeroext %en_mc_pmc, i1 noundef zeroext %en_bc_pmc)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_cmd_set_promisc_mode(ptr noundef %hdev, i8 noundef zeroext %vf_id, i1 noundef zeroext %en_uc, i1 noundef zeroext %en_mc, i1 noundef zeroext %en_bc) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vport3 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %0 = ptrtoint ptr %vport3 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vport3, align 4
  %idxprom = zext i8 %vf_id to i32
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %3 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 3585, i1 noundef zeroext false) #16
  %vf_id5 = getelementptr inbounds %struct.hclge_promisc_cfg_cmd, ptr %2, i32 0, i32 1
  %4 = ptrtoint ptr %vf_id5 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %vf_id, ptr %vf_id5, align 1
  %priv_flags = getelementptr %struct.hclge_vport, ptr %1, i32 %idxprom, i32 13, i32 13
  %5 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %priv_flags, align 4
  %and1.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool6.not = icmp eq i32 %and1.i, 0
  %spec.select = and i1 %tobool6.not, %en_uc
  %shl20 = select i1 %en_mc, i8 8, i8 0
  %conv22 = select i1 %en_uc, i8 4, i8 0
  %or23 = or i8 %shl20, %conv22
  %shl34 = select i1 %en_bc, i8 16, i8 0
  %shl48 = select i1 %spec.select, i8 32, i8 0
  %shl62 = select i1 %en_mc, i8 64, i8 0
  %shl76 = select i1 %en_bc, i8 -128, i8 0
  %or37 = or i8 %or23, %shl62
  %or51 = or i8 %or37, %shl34
  %or65 = or i8 %or51, %shl76
  %or79 = or i8 %or65, %shl48
  %extend_promisc = getelementptr inbounds %struct.hclge_promisc_cfg_cmd, ptr %2, i32 0, i32 2
  %7 = ptrtoint ptr %extend_promisc to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %or79, ptr %extend_promisc, align 2
  %shl104 = select i1 %en_mc, i8 4, i8 0
  %shl118 = select i1 %en_bc, i8 8, i8 0
  %or107 = select i1 %en_uc, i8 50, i8 48
  %or121 = or i8 %or107, %shl104
  %or139 = or i8 %or121, %shl118
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %or139, ptr %2, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool144.not = icmp eq i32 %call.i, 0
  br i1 %tobool144.not, label %entry.if.end150_crit_edge, label %do.end148

entry.if.end150_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end150

do.end148:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.78, i32 noundef %idxprom, i32 noundef %call.i) #20
  br label %if.end150

if.end150:                                        ; preds = %do.end148, %entry.if.end150_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_vport_start(ptr noundef %vport) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %state = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state) #16
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  %last_active_jiffies = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 16
  %3 = ptrtoint ptr %last_active_jiffies to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %last_active_jiffies, align 4
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %4 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vport_id, align 2
  %conv = zext i16 %5 to i32
  %vport_config_block = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 65
  %div3.i = lshr i32 %conv, 5
  %arrayidx.i = getelementptr i32, ptr %vport_config_block, i32 %div3.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %conv, 31
  %8 = shl nuw i32 1, %and.i
  %9 = and i32 %8, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %entry.if.end5_crit_edge, label %if.then

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool3.not = icmp eq i16 %5, 0
  br i1 %tobool3.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.then
  tail call void @hclge_restore_mac_table_common(ptr noundef %vport)
  %10 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %back, align 4
  %port_base_vlan_cfg.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7
  %12 = ptrtoint ptr %port_base_vlan_cfg.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %port_base_vlan_cfg.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %cmp.not.i = icmp eq i16 %13, 0
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  %vlan_tag.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7, i32 1, i32 2
  %14 = ptrtoint ptr %vlan_tag.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vlan_tag.i, align 2
  %16 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vport_id, align 2
  %conv7.i = zext i16 %17 to i32
  %idxprom.i = zext i16 %15 to i32
  %arrayidx.i20 = getelementptr %struct.hclge_dev, ptr %11, i32 0, i32 63, i32 %idxprom.i
  tail call void @_clear_bit(i32 noundef %conv7.i, ptr noundef %arrayidx.i20) #16
  %18 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vport_id, align 2
  %20 = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %11, i16 noundef zeroext %19, i16 noundef zeroext %15, i1 noundef zeroext false) #16
  br label %if.end5

if.end.i:                                         ; preds = %if.then4
  %vlan_list.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 24
  %21 = ptrtoint ptr %vlan_list.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vlan_list.i, align 8
  %cmp16.not50.i = icmp eq ptr %22, %vlan_list.i
  br i1 %cmp16.not50.i, label %if.end.i.if.end5_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.if.end5_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

for.body.i:                                       ; preds = %if.end22.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %vlan.051.i = phi ptr [ %tmp.052.i, %if.end22.i.for.body.i_crit_edge ], [ %22, %if.end.i.for.body.i_crit_edge ]
  %23 = ptrtoint ptr %vlan.051.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %tmp.052.i = load ptr, ptr %vlan.051.i, align 4
  %24 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vport_id, align 2
  %vlan_id19.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.051.i, i32 0, i32 2
  %26 = ptrtoint ptr %vlan_id19.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %vlan_id19.i, align 4
  %call20.i = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %11, i16 noundef zeroext %25, i16 noundef zeroext %27, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %tobool.not.i = icmp eq i32 %call20.i, 0
  br i1 %tobool.not.i, label %if.end22.i, label %for.body.i.if.end5_crit_edge

for.body.i.if.end5_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end22.i:                                       ; preds = %for.body.i
  %hd_tbl_status.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.051.i, i32 0, i32 1
  %28 = ptrtoint ptr %hd_tbl_status.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 1, ptr %hd_tbl_status.i, align 4
  %cmp16.not.i = icmp eq ptr %tmp.052.i, %vlan_list.i
  br i1 %cmp16.not.i, label %if.end22.i.if.end5_crit_edge, label %if.end22.i.for.body.i_crit_edge

if.end22.i.for.body.i_crit_edge:                  ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

if.end22.i.if.end5_crit_edge:                     ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.else:                                          ; preds = %if.then
  %vport1.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 52
  %29 = ptrtoint ptr %vport1.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %vport1.i, align 4
  %nic.i = getelementptr inbounds %struct.hclge_vport, ptr %30, i32 0, i32 13
  tail call void @hclge_restore_mac_table_common(ptr noundef %30) #16
  %back.i.i = getelementptr inbounds %struct.hclge_vport, ptr %30, i32 0, i32 12
  %31 = ptrtoint ptr %back.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %back.i.i, align 4
  %port_base_vlan_cfg.i.i = getelementptr inbounds %struct.hclge_vport, ptr %30, i32 0, i32 7
  %33 = ptrtoint ptr %port_base_vlan_cfg.i.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %port_base_vlan_cfg.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %34)
  %cmp.not.i.i = icmp eq i16 %34, 0
  br i1 %cmp.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %vlan_tag.i.i = getelementptr inbounds %struct.hclge_vport, ptr %30, i32 0, i32 7, i32 1, i32 2
  %35 = ptrtoint ptr %vlan_tag.i.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %vlan_tag.i.i, align 2
  %vport_id.i.i = getelementptr inbounds %struct.hclge_vport, ptr %30, i32 0, i32 11
  %37 = ptrtoint ptr %vport_id.i.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %vport_id.i.i, align 2
  %conv7.i.i = zext i16 %38 to i32
  %idxprom.i.i = zext i16 %36 to i32
  %arrayidx.i.i = getelementptr %struct.hclge_dev, ptr %32, i32 0, i32 63, i32 %idxprom.i.i
  tail call void @_clear_bit(i32 noundef %conv7.i.i, ptr noundef %arrayidx.i.i) #16
  %39 = ptrtoint ptr %vport_id.i.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %vport_id.i.i, align 2
  %41 = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %32, i16 noundef zeroext %40, i16 noundef zeroext %36, i1 noundef zeroext false) #16
  br label %hclge_restore_vport_vlan_table.exit.i

if.end.i.i:                                       ; preds = %if.else
  %vlan_list.i.i = getelementptr inbounds %struct.hclge_vport, ptr %30, i32 0, i32 24
  %42 = ptrtoint ptr %vlan_list.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %vlan_list.i.i, align 8
  %vport_id18.i.i = getelementptr inbounds %struct.hclge_vport, ptr %30, i32 0, i32 11
  %cmp16.not50.i.i = icmp eq ptr %43, %vlan_list.i.i
  br i1 %cmp16.not50.i.i, label %if.end.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge, label %if.end.i.i.for.body.i.i_crit_edge

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  br label %for.body.i.i

if.end.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_restore_vport_vlan_table.exit.i

for.body.i.i:                                     ; preds = %if.end22.i.i.for.body.i.i_crit_edge, %if.end.i.i.for.body.i.i_crit_edge
  %vlan.051.i.i = phi ptr [ %tmp.052.i.i, %if.end22.i.i.for.body.i.i_crit_edge ], [ %43, %if.end.i.i.for.body.i.i_crit_edge ]
  %44 = ptrtoint ptr %vlan.051.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %tmp.052.i.i = load ptr, ptr %vlan.051.i.i, align 4
  %45 = ptrtoint ptr %vport_id18.i.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %vport_id18.i.i, align 2
  %vlan_id19.i.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.051.i.i, i32 0, i32 2
  %47 = ptrtoint ptr %vlan_id19.i.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %vlan_id19.i.i, align 4
  %call20.i.i = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %32, i16 noundef zeroext %46, i16 noundef zeroext %48, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i.i)
  %tobool.not.i.i = icmp eq i32 %call20.i.i, 0
  br i1 %tobool.not.i.i, label %if.end22.i.i, label %for.body.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge

for.body.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_restore_vport_vlan_table.exit.i

if.end22.i.i:                                     ; preds = %for.body.i.i
  %hd_tbl_status.i.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.051.i.i, i32 0, i32 1
  %49 = ptrtoint ptr %hd_tbl_status.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 1, ptr %hd_tbl_status.i.i, align 4
  %cmp16.not.i.i = icmp eq ptr %tmp.052.i.i, %vlan_list.i.i
  br i1 %cmp16.not.i.i, label %if.end22.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge, label %if.end22.i.i.for.body.i.i_crit_edge

if.end22.i.i.for.body.i.i_crit_edge:              ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

if.end22.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge: ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_restore_vport_vlan_table.exit.i

hclge_restore_vport_vlan_table.exit.i:            ; preds = %if.end22.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge, %for.body.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge, %if.end.i.i.hclge_restore_vport_vlan_table.exit.i_crit_edge, %if.then.i.i
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 17, ptr noundef %state.i) #16
  %50 = ptrtoint ptr %nic.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %nic.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %51, null
  br i1 %tobool.not.i.i.i, label %hclge_restore_vport_vlan_table.exit.i.hclge_get_vport.exit.i.i_crit_edge, label %if.else.i.i.i

hclge_restore_vport_vlan_table.exit.i.hclge_get_vport.exit.i.i_crit_edge: ; preds = %hclge_restore_vport_vlan_table.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i.i

if.else.i.i.i:                                    ; preds = %hclge_restore_vport_vlan_table.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i.i = getelementptr inbounds %struct.hnae3_client, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %53)
  %cmp.i.i.i = icmp eq i32 %53, 1
  %..i.i.i = select i1 %cmp.i.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i.i

hclge_get_vport.exit.i.i:                         ; preds = %if.else.i.i.i, %hclge_restore_vport_vlan_table.exit.i.hclge_get_vport.exit.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ -560, %hclge_restore_vport_vlan_table.exit.i.hclge_get_vport.exit.i.i_crit_edge ], [ %..i.i.i, %if.else.i.i.i ]
  %add.ptr9.i.i.i = getelementptr i8, ptr %nic.i, i32 %.sink.i.i.i
  %back.i5.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i.i, i32 0, i32 12
  %54 = ptrtoint ptr %back.i5.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %back.i5.i, align 4
  %ae_dev.i.i = getelementptr inbounds %struct.hclge_dev, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %ae_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %ae_dev.i.i, align 4
  %caps.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %57, i32 0, i32 7
  %58 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %caps.i.i, align 4
  %and1.i.i.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i6.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i6.i, label %hclge_get_vport.exit.i.i.if.end5_crit_edge, label %if.end.i7.i

hclge_get_vport.exit.i.i.if.end5_crit_edge:       ; preds = %hclge_get_vport.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end.i7.i:                                      ; preds = %hclge_get_vport.exit.i.i
  %fd_en.i.i = getelementptr inbounds %struct.hclge_dev, ptr %55, i32 0, i32 76
  %60 = ptrtoint ptr %fd_en.i.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %fd_en.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %tobool2.not.i.i = icmp eq i8 %61, 0
  br i1 %tobool2.not.i.i, label %if.end.i7.i.if.end5_crit_edge, label %if.end4.i.i

if.end.i7.i.if.end5_crit_edge:                    ; preds = %if.end.i7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end4.i.i:                                      ; preds = %if.end.i7.i
  %fd_rule_lock.i.i = getelementptr inbounds %struct.hclge_dev, ptr %55, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock.i.i) #16
  %fd_rule_list.i.i = getelementptr inbounds %struct.hclge_dev, ptr %55, i32 0, i32 67
  %62 = ptrtoint ptr %fd_rule_list.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %fd_rule_list.i.i, align 4
  %tobool7.not2.i.i = icmp eq ptr %63, null
  br i1 %tobool7.not2.i.i, label %if.end4.i.i.for.end.i.i_crit_edge, label %if.end4.i.i.land.rhs.i.i_crit_edge

if.end4.i.i.land.rhs.i.i_crit_edge:               ; preds = %if.end4.i.i
  br label %land.rhs.i.i

if.end4.i.i.for.end.i.i_crit_edge:                ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i

land.rhs.i.i:                                     ; preds = %for.inc.i.i.land.rhs.i.i_crit_edge, %if.end4.i.i.land.rhs.i.i_crit_edge
  %rule.03.i.i = phi ptr [ %65, %for.inc.i.i.land.rhs.i.i_crit_edge ], [ %63, %if.end4.i.i.land.rhs.i.i_crit_edge ]
  %64 = ptrtoint ptr %rule.03.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %rule.03.i.i, align 4
  %state.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.03.i.i, i32 0, i32 10
  %66 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %67)
  %cmp.i.i = icmp eq i32 %67, 2
  br i1 %cmp.i.i, label %if.then10.i.i, label %land.rhs.i.i.for.inc.i.i_crit_edge

land.rhs.i.i.for.inc.i.i_crit_edge:               ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.then10.i.i:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %68 = ptrtoint ptr %state.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 0, ptr %state.i.i, align 4
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then10.i.i, %land.rhs.i.i.for.inc.i.i_crit_edge
  %tobool7.not.i.i = icmp eq ptr %65, null
  br i1 %tobool7.not.i.i, label %for.inc.i.i.for.end.i.i_crit_edge, label %for.inc.i.i.land.rhs.i.i_crit_edge

for.inc.i.i.land.rhs.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i

for.inc.i.i.for.end.i.i_crit_edge:                ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i.for.end.i.i_crit_edge, %if.end4.i.i.for.end.i.i_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock.i.i) #16
  %state24.i.i = getelementptr inbounds %struct.hclge_dev, ptr %55, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 15, ptr noundef %state24.i.i) #16
  br label %if.end5

if.end5:                                          ; preds = %for.end.i.i, %if.end.i7.i.if.end5_crit_edge, %hclge_get_vport.exit.i.i.if.end5_crit_edge, %if.end22.i.if.end5_crit_edge, %for.body.i.if.end5_crit_edge, %if.end.i.if.end5_crit_edge, %if.then.i, %entry.if.end5_crit_edge
  %69 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %vport_id, align 2
  %conv7 = zext i16 %70 to i32
  tail call void @_clear_bit(i32 noundef %conv7, ptr noundef %vport_config_block) #16
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hclge_restore_mac_table_common(ptr noundef %vport) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_list_lock = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 21
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_list_lock) #16
  %uc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 22
  %0 = ptrtoint ptr %uc_mac_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %uc_mac_list, align 4
  %cmp.not28.i = icmp eq ptr %1, %uc_mac_list
  br i1 %cmp.not28.i, label %entry.hclge_mac_node_convert_for_reset.exit_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.hclge_mac_node_convert_for_reset.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_mac_node_convert_for_reset.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %mac_node.029.i = phi ptr [ %tmp.031.i, %for.inc.i.for.body.i_crit_edge ], [ %1, %entry.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %mac_node.029.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %tmp.031.i = load ptr, ptr %mac_node.029.i, align 4
  %state.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.029.i, i32 0, i32 1
  %3 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %state.i, align 4
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.748)
  switch i32 %4, label %for.body.i.for.inc.i_crit_edge [
    i32 2, label %if.then.i
    i32 1, label %if.then11.i
  ]

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %state.i, align 4
  br label %for.inc.i

if.then11.i:                                      ; preds = %for.body.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.029.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then11.i.list_del.exit.i_crit_edge

if.then11.i.list_del.exit.i_crit_edge:            ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.029.i, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i.i, align 4
  %9 = ptrtoint ptr %mac_node.029.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mac_node.029.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then11.i.list_del.exit.i_crit_edge
  %13 = ptrtoint ptr %mac_node.029.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.029.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.029.i, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef %mac_node.029.i) #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %list_del.exit.i, %if.then.i, %for.body.i.for.inc.i_crit_edge
  %cmp.not.i = icmp eq ptr %tmp.031.i, %uc_mac_list
  br i1 %cmp.not.i, label %for.inc.i.hclge_mac_node_convert_for_reset.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.hclge_mac_node_convert_for_reset.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_mac_node_convert_for_reset.exit

hclge_mac_node_convert_for_reset.exit:            ; preds = %for.inc.i.hclge_mac_node_convert_for_reset.exit_crit_edge, %entry.hclge_mac_node_convert_for_reset.exit_crit_edge
  %mc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 23
  %15 = ptrtoint ptr %mc_mac_list to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mc_mac_list, align 4
  %cmp.not28.i6 = icmp eq ptr %16, %mc_mac_list
  br i1 %cmp.not28.i6, label %hclge_mac_node_convert_for_reset.exit.hclge_mac_node_convert_for_reset.exit21_crit_edge, label %hclge_mac_node_convert_for_reset.exit.for.body.i10_crit_edge

hclge_mac_node_convert_for_reset.exit.for.body.i10_crit_edge: ; preds = %hclge_mac_node_convert_for_reset.exit
  br label %for.body.i10

hclge_mac_node_convert_for_reset.exit.hclge_mac_node_convert_for_reset.exit21_crit_edge: ; preds = %hclge_mac_node_convert_for_reset.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_mac_node_convert_for_reset.exit21

for.body.i10:                                     ; preds = %for.inc.i20.for.body.i10_crit_edge, %hclge_mac_node_convert_for_reset.exit.for.body.i10_crit_edge
  %mac_node.029.i7 = phi ptr [ %tmp.031.i8, %for.inc.i20.for.body.i10_crit_edge ], [ %16, %hclge_mac_node_convert_for_reset.exit.for.body.i10_crit_edge ]
  %17 = ptrtoint ptr %mac_node.029.i7 to i32
  call void @__asan_load4_noabort(i32 %17)
  %tmp.031.i8 = load ptr, ptr %mac_node.029.i7, align 4
  %state.i9 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.029.i7, i32 0, i32 1
  %18 = ptrtoint ptr %state.i9 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %state.i9, align 4
  %20 = zext i32 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.749)
  switch i32 %19, label %for.body.i10.for.inc.i20_crit_edge [
    i32 2, label %if.then.i11
    i32 1, label %if.then11.i13
  ]

for.body.i10.for.inc.i20_crit_edge:               ; preds = %for.body.i10
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i20

if.then.i11:                                      ; preds = %for.body.i10
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %state.i9 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %state.i9, align 4
  br label %for.inc.i20

if.then11.i13:                                    ; preds = %for.body.i10
  %call.i.i.i12 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.029.i7) #16
  br i1 %call.i.i.i12, label %if.end.i.i.i16, label %if.then11.i13.list_del.exit.i18_crit_edge

if.then11.i13.list_del.exit.i18_crit_edge:        ; preds = %if.then11.i13
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i18

if.end.i.i.i16:                                   ; preds = %if.then11.i13
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i14 = getelementptr inbounds %struct.list_head, ptr %mac_node.029.i7, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i.i.i14 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %prev.i.i.i14, align 4
  %24 = ptrtoint ptr %mac_node.029.i7 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mac_node.029.i7, align 4
  %prev1.i.i.i.i15 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %prev1.i.i.i.i15 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %23, ptr %prev1.i.i.i.i15, align 4
  %27 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %25, ptr %23, align 4
  br label %list_del.exit.i18

list_del.exit.i18:                                ; preds = %if.end.i.i.i16, %if.then11.i13.list_del.exit.i18_crit_edge
  %28 = ptrtoint ptr %mac_node.029.i7 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.029.i7, align 4
  %prev.i.i17 = getelementptr inbounds %struct.list_head, ptr %mac_node.029.i7, i32 0, i32 1
  %29 = ptrtoint ptr %prev.i.i17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i17, align 4
  tail call void @kfree(ptr noundef %mac_node.029.i7) #16
  br label %for.inc.i20

for.inc.i20:                                      ; preds = %list_del.exit.i18, %if.then.i11, %for.body.i10.for.inc.i20_crit_edge
  %cmp.not.i19 = icmp eq ptr %tmp.031.i8, %mc_mac_list
  br i1 %cmp.not.i19, label %for.inc.i20.hclge_mac_node_convert_for_reset.exit21_crit_edge, label %for.inc.i20.for.body.i10_crit_edge

for.inc.i20.for.body.i10_crit_edge:               ; preds = %for.inc.i20
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i10

for.inc.i20.hclge_mac_node_convert_for_reset.exit21_crit_edge: ; preds = %for.inc.i20
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_mac_node_convert_for_reset.exit21

hclge_mac_node_convert_for_reset.exit21:          ; preds = %for.inc.i20.hclge_mac_node_convert_for_reset.exit21_crit_edge, %hclge_mac_node_convert_for_reset.exit.hclge_mac_node_convert_for_reset.exit21_crit_edge
  %state = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state) #16
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hclge_restore_vport_vlan_table(ptr noundef readonly %vport) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %port_base_vlan_cfg = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7
  %2 = ptrtoint ptr %port_base_vlan_cfg to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %port_base_vlan_cfg, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %cmp.not = icmp eq i16 %3, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %vlan_tag = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7, i32 1, i32 2
  %4 = ptrtoint ptr %vlan_tag to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vlan_tag, align 2
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %6 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vport_id, align 2
  %conv7 = zext i16 %7 to i32
  %idxprom = zext i16 %5 to i32
  %arrayidx = getelementptr %struct.hclge_dev, ptr %1, i32 0, i32 63, i32 %idxprom
  tail call void @_clear_bit(i32 noundef %conv7, ptr noundef %arrayidx) #16
  %8 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %vport_id, align 2
  %10 = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %1, i16 noundef zeroext %9, i16 noundef zeroext %5, i1 noundef zeroext false)
  br label %cleanup

if.end:                                           ; preds = %entry
  %vlan_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 24
  %11 = ptrtoint ptr %vlan_list to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vlan_list, align 8
  %vport_id18 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %cmp16.not50 = icmp eq ptr %12, %vlan_list
  br i1 %cmp16.not50, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body:                                         ; preds = %if.end22.for.body_crit_edge, %if.end.for.body_crit_edge
  %vlan.051 = phi ptr [ %tmp.052, %if.end22.for.body_crit_edge ], [ %12, %if.end.for.body_crit_edge ]
  %13 = ptrtoint ptr %vlan.051 to i32
  call void @__asan_load4_noabort(i32 %13)
  %tmp.052 = load ptr, ptr %vlan.051, align 4
  %14 = ptrtoint ptr %vport_id18 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vport_id18, align 2
  %vlan_id19 = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.051, i32 0, i32 2
  %16 = ptrtoint ptr %vlan_id19 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vlan_id19, align 4
  %call20 = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %1, i16 noundef zeroext %15, i16 noundef zeroext %17, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool.not = icmp eq i32 %call20, 0
  br i1 %tobool.not, label %if.end22, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end22:                                         ; preds = %for.body
  %hd_tbl_status = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.051, i32 0, i32 1
  %18 = ptrtoint ptr %hd_tbl_status to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %hd_tbl_status, align 4
  %cmp16.not = icmp eq ptr %tmp.052, %vlan_list
  br i1 %cmp16.not, label %if.end22.cleanup_crit_edge, label %if.end22.for.body_crit_edge

if.end22.for.body_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %if.end22.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hclge_vport_stop(ptr noundef %vport) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_update_mac_list(ptr noundef %vport, i32 noundef %state, i32 noundef %mac_type, ptr nocapture noundef readonly %addr) local_unnamed_addr #0 align 64 {
entry:
  %format_mac_addr = alloca [18 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %format_mac_addr) #16
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = call ptr @memset(ptr %format_mac_addr, i32 255, i32 18)
  %1 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %back, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mac_type)
  %cmp = icmp eq i32 %mac_type, 0
  %uc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 22
  %mc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 23
  %cond = select i1 %cmp, ptr %uc_mac_list, ptr %mc_mac_list
  %mac_list_lock = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 21
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_list_lock) #16
  %add.ptr.i.i = getelementptr i8, ptr %addr, i32 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %mac_node.0.in.i = phi ptr [ %cond, %entry ], [ %mac_node.0.i, %for.body.i.for.cond.i_crit_edge ]
  %3 = ptrtoint ptr %mac_node.0.in.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %mac_node.0.i = load ptr, ptr %mac_node.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %mac_node.0.i, %cond
  br i1 %cmp.not.i, label %for.cond.i.if.end_crit_edge, label %for.body.i

for.cond.i.if.end_crit_edge:                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.i:                                       ; preds = %for.cond.i
  %mac_addr7.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 2
  %4 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %addr, align 4
  %6 = ptrtoint ptr %mac_addr7.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mac_addr7.i, align 4
  %xor.i.i = xor i32 %7, %5
  %8 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i.i = getelementptr %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 2, i32 4
  %10 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %add.ptr1.i.i, align 2
  %xor37.i.i = xor i16 %11, %9
  %xor3.i.i = zext i16 %xor37.i.i to i32
  %or.i.i = or i32 %xor.i.i, %xor3.i.i
  %cmp.i.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i, label %hclge_find_mac_node.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

hclge_find_mac_node.exit:                         ; preds = %for.body.i
  %tobool.not = icmp eq ptr %mac_node.0.i, null
  br i1 %tobool.not, label %hclge_find_mac_node.exit.if.end_crit_edge, label %if.then

hclge_find_mac_node.exit.if.end_crit_edge:        ; preds = %hclge_find_mac_node.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %hclge_find_mac_node.exit
  %12 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.750)
  switch i32 %state, label %if.then.hclge_update_mac_node.exit_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb3.i
    i32 2, label %sw.bb9.i
  ]

if.then.hclge_update_mac_node.exit_crit_edge:     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_mac_node.exit

sw.bb.i:                                          ; preds = %if.then
  %state1.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 1
  %13 = ptrtoint ptr %state1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %state1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp.i = icmp eq i32 %14, 1
  br i1 %cmp.i, label %if.then.i, label %sw.bb.i.hclge_update_mac_node.exit_crit_edge

sw.bb.i.hclge_update_mac_node.exit_crit_edge:     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_mac_node.exit

if.then.i:                                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %state1.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 2, ptr %state1.i, align 4
  br label %hclge_update_mac_node.exit

sw.bb3.i:                                         ; preds = %if.then
  %state4.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %state4.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %state4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp5.i = icmp eq i32 %17, 0
  br i1 %cmp5.i, label %if.then6.i, label %if.else.i

if.then6.i:                                       ; preds = %sw.bb3.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %mac_node.0.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then6.i.list_del.exit.i_crit_edge

if.then6.i.list_del.exit.i_crit_edge:             ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.0.i, i32 0, i32 1
  %18 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %prev.i.i.i, align 4
  %20 = ptrtoint ptr %mac_node.0.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mac_node.0.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %19, ptr %prev1.i.i.i.i, align 4
  %23 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %21, ptr %19, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then6.i.list_del.exit.i_crit_edge
  %24 = ptrtoint ptr %mac_node.0.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.0.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.0.i, i32 0, i32 1
  %25 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef nonnull %mac_node.0.i) #16
  br label %hclge_update_mac_node.exit

if.else.i:                                        ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %state4.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %state4.i, align 4
  br label %hclge_update_mac_node.exit

sw.bb9.i:                                         ; preds = %if.then
  %state10.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 1
  %27 = ptrtoint ptr %state10.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %state10.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp11.i = icmp eq i32 %28, 0
  br i1 %cmp11.i, label %if.then12.i, label %sw.bb9.i.hclge_update_mac_node.exit_crit_edge

sw.bb9.i.hclge_update_mac_node.exit_crit_edge:    ; preds = %sw.bb9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_mac_node.exit

if.then12.i:                                      ; preds = %sw.bb9.i
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %state10.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 2, ptr %state10.i, align 4
  br label %hclge_update_mac_node.exit

hclge_update_mac_node.exit:                       ; preds = %if.then12.i, %sw.bb9.i.hclge_update_mac_node.exit_crit_edge, %if.else.i, %list_del.exit.i, %if.then.i, %sw.bb.i.hclge_update_mac_node.exit_crit_edge, %if.then.hclge_update_mac_node.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  %state2 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state2) #16
  br label %cleanup

if.end:                                           ; preds = %hclge_find_mac_node.exit.if.end_crit_edge, %for.cond.i.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp3 = icmp eq i32 %state, 1
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  %30 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %addr, align 1
  %conv.i = zext i8 %31 to i32
  %32 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %add.ptr.i.i, align 1
  %conv2.i = zext i8 %33 to i32
  %arrayidx3.i = getelementptr i8, ptr %addr, i32 5
  %34 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %arrayidx3.i, align 1
  %conv4.i = zext i8 %35 to i32
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %format_mac_addr, i32 noundef 18, ptr noundef nonnull @.str.80, i32 noundef %conv.i, i32 noundef %conv2.i, i32 noundef %conv4.i) #16
  %36 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %2, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.31, ptr noundef nonnull %format_mac_addr) #20
  br label %cleanup

if.end7:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %38 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %38, i32 noundef 2848, i32 noundef 20) #21
  %tobool9.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool9.not, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  br label %cleanup

if.end12:                                         ; preds = %if.end7
  %state13 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state13) #16
  %state14 = getelementptr inbounds %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 1
  %39 = ptrtoint ptr %state14 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %state, ptr %state14, align 8
  %mac_addr = getelementptr inbounds %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 2
  %40 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %addr, align 4
  %42 = ptrtoint ptr %mac_addr to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %mac_addr, align 4
  %43 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i = getelementptr %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 2, i32 4
  %45 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %44, ptr %add.ptr1.i, align 8
  %prev.i = getelementptr inbounds %struct.list_head, ptr %cond, i32 0, i32 1
  %46 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %47, ptr noundef %cond) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.end12.list_add_tail.exit_crit_edge

if.end12.list_add_tail.exit_crit_edge:            ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %48 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %call7.i.i, ptr %prev.i, align 4
  %49 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %cond, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %50 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %47, ptr %prev3.i.i, align 4
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %call7.i.i, ptr %47, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end12.list_add_tail.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %list_add_tail.exit, %if.then10, %if.then4, %hclge_update_mac_node.exit
  %retval.0 = phi i32 [ 0, %hclge_update_mac_node.exit ], [ -2, %if.then4 ], [ 0, %list_add_tail.exit ], [ -12, %if.then10 ]
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %format_mac_addr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_add_uc_addr_common(ptr nocapture noundef %vport, ptr noundef readonly %addr) local_unnamed_addr #0 align 64 {
entry:
  %format_mac_addr = alloca [18 x i8], align 1
  %req = alloca %struct.hclge_mac_vlan_tbl_entry_cmd, align 4
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %format_mac_addr) #16
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = call ptr @memset(ptr %format_mac_addr, i32 255, i32 18)
  %1 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %req) #16
  %3 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 3
  %4 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 4
  %5 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 8
  %6 = call ptr @memset(ptr %req, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %7 = call ptr @memset(ptr %desc, i32 255, i32 32)
  %8 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %addr, align 4
  %add.ptr.i = getelementptr i8, ptr %addr, i32 4
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %add.ptr.i, align 2
  %conv.i = zext i16 %11 to i32
  %or.i = or i32 %9, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i = icmp eq i32 %or.i, 0
  br i1 %cmp.i, label %entry.if.then_crit_edge, label %lor.lhs.false

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %12 = ptrtoint ptr %addr to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %addr, align 2
  %add.ptr1.i = getelementptr i8, ptr %addr, i32 2
  %14 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %add.ptr1.i, align 2
  %and9.i = and i16 %13, %11
  %and510.i = and i16 %and9.i, %15
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i)
  %cmp.i75 = icmp eq i16 %and510.i, -1
  br i1 %cmp.i75, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false2

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %16 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %addr, align 4
  %18 = and i32 %17, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.i.not = icmp eq i32 %18, 0
  br i1 %tobool.i.not, label %if.end, label %lor.lhs.false2.if.then_crit_edge

lor.lhs.false2.if.then_crit_edge:                 ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false2.if.then_crit_edge, %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %19 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %addr, align 1
  %conv.i76 = zext i8 %20 to i32
  %21 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %add.ptr.i, align 1
  %conv2.i = zext i8 %22 to i32
  %arrayidx3.i = getelementptr i8, ptr %addr, i32 5
  %23 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx3.i, align 1
  %conv4.i = zext i8 %24 to i32
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %format_mac_addr, i32 noundef 18, ptr noundef nonnull @.str.80, i32 noundef %conv.i76, i32 noundef %conv2.i, i32 noundef %conv4.i) #16
  %25 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %2, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  %27 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %addr, align 4
  %29 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %add.ptr.i, align 2
  %conv.i78 = zext i16 %30 to i32
  %or.i79 = or i32 %28, %conv.i78
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i79)
  %cmp.i80 = icmp eq i32 %or.i79, 0
  %conv = zext i1 %cmp.i80 to i32
  %31 = lshr i32 %28, 16
  %32 = trunc i32 %31 to i16
  %33 = trunc i32 %28 to i16
  %and9.i82 = and i16 %30, %32
  %and510.i84 = and i16 %and9.i82, %33
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i84)
  %cmp.i85 = icmp eq i16 %and510.i84, -1
  %conv7 = zext i1 %cmp.i85 to i32
  %34 = lshr i32 %28, 24
  %.lobit = and i32 %34, 1
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.33, ptr noundef nonnull %format_mac_addr, i32 noundef %conv, i32 noundef %conv7, i32 noundef %.lobit) #20
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false2
  %35 = call ptr @memset(ptr %req, i32 0, i32 24)
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %36 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %vport_id, align 2
  %shl = shl i16 %37, 3
  %and14 = and i16 %shl, 2040
  %38 = tail call i16 @llvm.bswap.i16(i16 %and14)
  %39 = ptrtoint ptr %5 to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %38, ptr %5, align 2
  %40 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %add.ptr1.i, align 1
  %arrayidx1.i87 = getelementptr i8, ptr %addr, i32 3
  %42 = ptrtoint ptr %arrayidx1.i87 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %arrayidx1.i87, align 1
  %44 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %addr, align 1
  %arrayidx7.i = getelementptr i8, ptr %addr, i32 1
  %46 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %arrayidx7.i, align 1
  %48 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %add.ptr.i, align 1
  %arrayidx13.i = getelementptr i8, ptr %addr, i32 5
  %50 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %arrayidx13.i, align 1
  %52 = ptrtoint ptr %req to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 1, ptr %req, align 4
  %conv12.i = zext i8 %49 to i16
  %conv14.i = zext i8 %51 to i16
  %shl15.i = shl nuw i16 %conv14.i, 8
  %or16.i = or i16 %shl15.i, %conv12.i
  %conv.i88 = zext i8 %41 to i32
  %shl.i = shl nuw nsw i32 %conv.i88, 16
  %conv2.i89 = zext i8 %43 to i32
  %shl3.i = shl nuw i32 %conv2.i89, 24
  %or.i90 = or i32 %shl3.i, %shl.i
  %conv5.i = zext i8 %45 to i32
  %or6.i = or i32 %or.i90, %conv5.i
  %conv8.i = zext i8 %47 to i32
  %shl9.i = shl nuw nsw i32 %conv8.i, 8
  %or10.i = or i32 %or6.i, %shl9.i
  %53 = tail call i32 @llvm.bswap.i32(i32 %or10.i) #16
  %54 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %3, align 4
  %55 = tail call i16 @llvm.bswap.i16(i16 %or16.i) #16
  %56 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %56)
  store i16 %55, ptr %4, align 4
  %call20 = call fastcc i32 @hclge_lookup_mac_vlan_tbl(ptr noundef %vport, ptr noundef nonnull %req, ptr noundef nonnull %desc, i1 noundef zeroext false)
  %57 = zext i32 %call20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.751)
  switch i32 %call20, label %if.end45 [
    i32 -2, label %if.then22
    i32 0, label %if.end.cleanup_crit_edge
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then22:                                        ; preds = %if.end
  %vport_lock = getelementptr inbounds %struct.hclge_dev, ptr %2, i32 0, i32 61
  call void @mutex_lock_nested(ptr noundef %vport_lock, i32 noundef 0) #16
  %58 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %back, align 4
  %used_umv_num.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 10
  %60 = ptrtoint ptr %used_umv_num.i to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %used_umv_num.i, align 8
  %priv_umv_size.i = getelementptr inbounds %struct.hclge_dev, ptr %59, i32 0, i32 80
  %62 = ptrtoint ptr %priv_umv_size.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %priv_umv_size.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %61, i16 %63)
  %cmp.not.i = icmp ult i16 %61, %63
  br i1 %cmp.not.i, label %if.then22.if.then24_crit_edge, label %hclge_is_umv_space_full.exit

if.then22.if.then24_crit_edge:                    ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then24

hclge_is_umv_space_full.exit:                     ; preds = %if.then22
  %share_umv_size.i = getelementptr inbounds %struct.hclge_dev, ptr %59, i32 0, i32 81
  %64 = ptrtoint ptr %share_umv_size.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %share_umv_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %65)
  %cmp4.i = icmp eq i16 %65, 0
  br i1 %cmp4.i, label %if.end29, label %hclge_is_umv_space_full.exit.if.then24_crit_edge

hclge_is_umv_space_full.exit.if.then24_crit_edge: ; preds = %hclge_is_umv_space_full.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then24

if.then24:                                        ; preds = %hclge_is_umv_space_full.exit.if.then24_crit_edge, %if.then22.if.then24_crit_edge
  %call25 = call fastcc i32 @hclge_add_mac_vlan_tbl(ptr noundef %vport, ptr noundef nonnull %req, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool.not = icmp eq i32 %call25, 0
  br i1 %tobool.not, label %if.then26, label %if.then24.if.end27_crit_edge

if.then24.if.end27_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

if.then26:                                        ; preds = %if.then24
  %66 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %back, align 4
  %68 = ptrtoint ptr %used_umv_num.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %used_umv_num.i, align 8
  %priv_umv_size.i93 = getelementptr inbounds %struct.hclge_dev, ptr %67, i32 0, i32 80
  %70 = ptrtoint ptr %priv_umv_size.i93 to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %priv_umv_size.i93, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %69, i16 %71)
  %cmp15.not.i = icmp ult i16 %69, %71
  br i1 %cmp15.not.i, label %if.then26.hclge_update_umv_space.exit_crit_edge, label %land.lhs.true.i

if.then26.hclge_update_umv_space.exit_crit_edge:  ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_umv_space.exit

land.lhs.true.i:                                  ; preds = %if.then26
  %share_umv_size17.i = getelementptr inbounds %struct.hclge_dev, ptr %67, i32 0, i32 81
  %72 = ptrtoint ptr %share_umv_size17.i to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %share_umv_size17.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %73)
  %cmp19.not.i = icmp eq i16 %73, 0
  br i1 %cmp19.not.i, label %land.lhs.true.i.hclge_update_umv_space.exit_crit_edge, label %if.then21.i

land.lhs.true.i.hclge_update_umv_space.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_umv_space.exit

if.then21.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %dec23.i = add i16 %73, -1
  %74 = ptrtoint ptr %share_umv_size17.i to i32
  call void @__asan_store2_noabort(i32 %74)
  store i16 %dec23.i, ptr %share_umv_size17.i, align 4
  br label %hclge_update_umv_space.exit

hclge_update_umv_space.exit:                      ; preds = %if.then21.i, %land.lhs.true.i.hclge_update_umv_space.exit_crit_edge, %if.then26.hclge_update_umv_space.exit_crit_edge
  %75 = ptrtoint ptr %used_umv_num.i to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %used_umv_num.i, align 8
  %inc26.i = add i16 %76, 1
  store i16 %inc26.i, ptr %used_umv_num.i, align 8
  br label %if.end27

if.end27:                                         ; preds = %hclge_update_umv_space.exit, %if.then24.if.end27_crit_edge
  call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

if.end29:                                         ; preds = %hclge_is_umv_space_full.exit
  call void @mutex_unlock(ptr noundef %vport_lock) #16
  %overflow_promisc_flags = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 19
  %77 = ptrtoint ptr %overflow_promisc_flags to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %overflow_promisc_flags, align 8
  %79 = and i8 %78, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %79)
  %tobool33.not = icmp eq i8 %79, 0
  br i1 %tobool33.not, label %do.end37, label %if.end29.cleanup_crit_edge

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end37:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  %80 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %2, align 8
  %dev39 = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  %priv_umv_size = getelementptr inbounds %struct.hclge_dev, ptr %2, i32 0, i32 80
  %82 = ptrtoint ptr %priv_umv_size to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %priv_umv_size, align 2
  %conv40 = zext i16 %83 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev39, ptr noundef nonnull @.str.36, i32 noundef %conv40) #20
  br label %cleanup

if.end45:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %if.end45, %do.end37, %if.end29.cleanup_crit_edge, %if.end27, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ %call25, %if.end27 ], [ %call20, %if.end45 ], [ -28, %do.end37 ], [ -28, %if.end29.cleanup_crit_edge ], [ -17, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %req) #16
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %format_mac_addr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_lookup_mac_vlan_tbl(ptr nocapture noundef readonly %vport, ptr nocapture noundef readonly %req, ptr noundef %desc, i1 noundef zeroext %is_mc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  tail call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %desc, i32 noundef 4096, i1 noundef zeroext true) #16
  br i1 %is_mc, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %flag = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 1
  %2 = ptrtoint ptr %flag to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %flag, align 2
  %4 = or i16 %3, 1024
  store i16 %4, ptr %flag, align 2
  %data = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %5 = call ptr @memcpy(ptr %data, ptr %req, i32 24)
  %arrayidx5 = getelementptr %struct.hclge_desc, ptr %desc, i32 1
  tail call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx5, i32 noundef 4096, i1 noundef zeroext true) #16
  %flag7 = getelementptr %struct.hclge_desc, ptr %desc, i32 1, i32 1
  %6 = ptrtoint ptr %flag7 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %flag7, align 2
  %8 = or i16 %7, 1024
  store i16 %8, ptr %flag7, align 2
  %arrayidx11 = getelementptr %struct.hclge_desc, ptr %desc, i32 2
  tail call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx11, i32 noundef 4096, i1 noundef zeroext true) #16
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %data13 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %9 = call ptr @memcpy(ptr %data13, ptr %req, i32 24)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.sink = phi i32 [ 1, %if.else ], [ 3, %if.then ]
  %hw15 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %call.i46 = tail call i32 @hclge_comm_cmd_send(ptr noundef %hw15, ptr noundef %desc, i32 noundef %.sink) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i46)
  %tobool17.not = icmp eq i32 %call.i46, 0
  br i1 %tobool17.not, label %if.end19, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.81, i32 noundef %call.i46) #20
  br label %cleanup

if.end19:                                         ; preds = %if.end
  %data21 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %12 = ptrtoint ptr %data21 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data21, align 4
  %14 = lshr i32 %13, 16
  %retval25 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 2
  %15 = ptrtoint ptr %retval25 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %retval25, align 4
  %17 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %back, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %tobool.not.i = icmp eq i16 %16, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  %19 = tail call i16 @llvm.bswap.i16(i16 %16)
  %20 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %18, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  %conv.i = zext i16 %19 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.83, i32 noundef %conv.i) #20
  br label %cleanup

if.end.i:                                         ; preds = %if.end19
  %conv23 = trunc i32 %14 to i8
  %22 = zext i8 %conv23 to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.752)
  switch i8 %conv23, label %do.end86.i [
    i8 0, label %if.end.i.cleanup_crit_edge
    i8 1, label %do.body64.i
  ]

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body64.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hclge_get_mac_vlan_cmd_status.__UNIQUE_ID_ddebug539, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hclge_lookup_mac_vlan_tbl, %if.then76.i)) #16
          to label %cleanup [label %if.then76.i], !srcloc !1454

if.then76.i:                                      ; preds = %do.body64.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %18, align 8
  %dev78.i = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @hclge_get_mac_vlan_cmd_status.__UNIQUE_ID_ddebug539, ptr noundef %dev78.i, ptr noundef nonnull @.str.92) #16
  br label %cleanup

do.end86.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv60.i = and i32 %14, 255
  %25 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %18, align 8
  %dev88.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev88.i, ptr noundef nonnull @.str.94, i32 noundef %conv60.i) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end86.i, %if.then76.i, %do.body64.i, %if.end.i.cleanup_crit_edge, %do.end.i, %do.end
  %retval.0 = phi i32 [ %call.i46, %do.end ], [ -5, %do.end.i ], [ -5, %do.end86.i ], [ 0, %if.end.i.cleanup_crit_edge ], [ -2, %if.then76.i ], [ -2, %do.body64.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_add_mac_vlan_tbl(ptr nocapture noundef readonly %vport, ptr nocapture noundef readonly %req, ptr noundef %mc_desc) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %tobool.not = icmp eq ptr %mc_desc, null
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 2
  %3 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %4 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 4096, i1 noundef zeroext false) #16
  %5 = call ptr @memcpy(ptr %3, ptr %req, i32 24)
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %3, align 4
  %8 = lshr i32 %7, 16
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %2, align 4
  %11 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %back, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %13 = call i16 @llvm.bswap.i16(i16 %10)
  %14 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %12, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  %conv.i = zext i16 %13 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.83, i32 noundef %conv.i) #20
  br label %hclge_get_mac_vlan_cmd_status.exit

if.end.i:                                         ; preds = %if.then
  %16 = and i32 %7, 16515072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %switch.lookup, label %do.end20.i

do.end20.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv4.i = and i32 %8, 255
  %18 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %12, align 8
  %dev22.i = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev22.i, ptr noundef nonnull @.str.86, i32 noundef %conv4.i) #20
  br label %hclge_get_mac_vlan_cmd_status.exit

switch.lookup:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %sext = shl i32 %8, 24
  %20 = ashr exact i32 %sext, 24
  %switch.gep = getelementptr inbounds [4 x i32], ptr @switch.table.hclge_add_mac_vlan_tbl, i32 0, i32 %20
  %21 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %21)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %hclge_get_mac_vlan_cmd_status.exit

hclge_get_mac_vlan_cmd_status.exit:               ; preds = %switch.lookup, %do.end20.i, %do.end.i
  %retval.0.i = phi i32 [ -5, %do.end.i ], [ -5, %do.end20.i ], [ %switch.load, %switch.lookup ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @hclge_comm_cmd_reuse_desc(ptr noundef nonnull %mc_desc, i1 noundef zeroext false) #16
  %flag = getelementptr inbounds %struct.hclge_desc, ptr %mc_desc, i32 0, i32 1
  %22 = ptrtoint ptr %flag to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %flag, align 2
  %24 = or i16 %23, 1024
  store i16 %24, ptr %flag, align 2
  %arrayidx9 = getelementptr %struct.hclge_desc, ptr %mc_desc, i32 1
  tail call void @hclge_comm_cmd_reuse_desc(ptr noundef %arrayidx9, i1 noundef zeroext false) #16
  %flag11 = getelementptr %struct.hclge_desc, ptr %mc_desc, i32 1, i32 1
  %25 = ptrtoint ptr %flag11 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %flag11, align 2
  %27 = or i16 %26, 1024
  store i16 %27, ptr %flag11, align 2
  %arrayidx15 = getelementptr %struct.hclge_desc, ptr %mc_desc, i32 2
  tail call void @hclge_comm_cmd_reuse_desc(ptr noundef %arrayidx15, i1 noundef zeroext false) #16
  %flag17 = getelementptr %struct.hclge_desc, ptr %mc_desc, i32 2, i32 1
  %28 = ptrtoint ptr %flag17 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %flag17, align 2
  %30 = and i16 %29, -1025
  store i16 %30, ptr %flag17, align 2
  %data22 = getelementptr inbounds %struct.hclge_desc, ptr %mc_desc, i32 0, i32 4
  %31 = call ptr @memcpy(ptr %data22, ptr %req, i32 24)
  %hw24 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %call.i61 = tail call i32 @hclge_comm_cmd_send(ptr noundef %hw24, ptr noundef nonnull %mc_desc, i32 noundef 3) #16
  %32 = ptrtoint ptr %data22 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %data22, align 4
  %34 = lshr i32 %33, 16
  %retval33 = getelementptr inbounds %struct.hclge_desc, ptr %mc_desc, i32 0, i32 2
  %35 = ptrtoint ptr %retval33 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %retval33, align 4
  %37 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %back, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %36)
  %tobool.not.i63 = icmp eq i16 %36, 0
  br i1 %tobool.not.i63, label %if.end.i67, label %do.end.i66

do.end.i66:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %39 = tail call i16 @llvm.bswap.i16(i16 %36)
  %40 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %38, align 8
  %dev.i64 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  %conv.i65 = zext i16 %39 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i64, ptr noundef nonnull @.str.83, i32 noundef %conv.i65) #20
  br label %if.end

if.end.i67:                                       ; preds = %if.else
  %conv31 = trunc i32 %34 to i8
  %42 = zext i8 %conv31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %42, ptr @__sancov_gen_cov_switch_values.753)
  switch i8 %conv31, label %do.end20.i71 [
    i8 0, label %if.end.i67.if.end_crit_edge
    i8 1, label %if.end.i67.if.end_crit_edge74
    i8 2, label %if.end.i67.if.then15.i68_crit_edge
    i8 3, label %if.end.i67.if.then15.i68_crit_edge75
  ]

if.end.i67.if.then15.i68_crit_edge75:             ; preds = %if.end.i67
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then15.i68

if.end.i67.if.then15.i68_crit_edge:               ; preds = %if.end.i67
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then15.i68

if.end.i67.if.end_crit_edge74:                    ; preds = %if.end.i67
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i67.if.end_crit_edge:                      ; preds = %if.end.i67
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then15.i68:                                    ; preds = %if.end.i67.if.then15.i68_crit_edge, %if.end.i67.if.then15.i68_crit_edge75
  br label %if.end

do.end20.i71:                                     ; preds = %if.end.i67
  call void @__sanitizer_cov_trace_pc() #18
  %conv4.i69 = and i32 %34, 255
  %43 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %38, align 8
  %dev22.i70 = getelementptr inbounds %struct.pci_dev, ptr %44, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev22.i70, ptr noundef nonnull @.str.86, i32 noundef %conv4.i69) #20
  br label %if.end

if.end:                                           ; preds = %do.end20.i71, %if.then15.i68, %if.end.i67.if.end_crit_edge, %if.end.i67.if.end_crit_edge74, %do.end.i66, %hclge_get_mac_vlan_cmd_status.exit
  %cfg_status.0 = phi i32 [ %retval.0.i, %hclge_get_mac_vlan_cmd_status.exit ], [ -5, %do.end.i66 ], [ -28, %if.then15.i68 ], [ -5, %do.end20.i71 ], [ 0, %if.end.i67.if.end_crit_edge ], [ 0, %if.end.i67.if.end_crit_edge74 ]
  %ret.0 = phi i32 [ %call.i, %hclge_get_mac_vlan_cmd_status.exit ], [ %call.i61, %do.end.i66 ], [ %call.i61, %if.then15.i68 ], [ %call.i61, %do.end20.i71 ], [ %call.i61, %if.end.i67.if.end_crit_edge ], [ %call.i61, %if.end.i67.if.end_crit_edge74 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool35.not = icmp eq i32 %ret.0, 0
  br i1 %tobool35.not, label %if.end.cleanup_crit_edge, label %do.end

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %45 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %46, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.99, i32 noundef %ret.0) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %do.end ], [ %cfg_status.0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_rm_uc_addr_common(ptr nocapture noundef %vport, ptr nocapture noundef readonly %addr) #0 align 64 {
entry:
  %format_mac_addr = alloca [18 x i8], align 1
  %req = alloca %struct.hclge_mac_vlan_tbl_entry_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %format_mac_addr) #16
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = call ptr @memset(ptr %format_mac_addr, i32 255, i32 18)
  %1 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %req) #16
  %3 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 3
  %4 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 4
  %5 = call ptr @memset(ptr %req, i32 255, i32 24)
  %6 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %addr, align 4
  %add.ptr.i = getelementptr i8, ptr %addr, i32 4
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %add.ptr.i, align 2
  %conv.i = zext i16 %9 to i32
  %or.i = or i32 %7, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i = icmp eq i32 %or.i, 0
  br i1 %cmp.i, label %entry.if.then_crit_edge, label %lor.lhs.false

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %10 = ptrtoint ptr %addr to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %addr, align 2
  %add.ptr1.i = getelementptr i8, ptr %addr, i32 2
  %12 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %add.ptr1.i, align 2
  %and9.i = and i16 %11, %9
  %and510.i = and i16 %and9.i, %13
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i)
  %cmp.i38 = icmp eq i16 %and510.i, -1
  br i1 %cmp.i38, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false2

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %14 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %addr, align 4
  %16 = and i32 %15, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not = icmp eq i32 %16, 0
  br i1 %tobool.i.not, label %if.end9, label %lor.lhs.false2.if.then_crit_edge

lor.lhs.false2.if.then_crit_edge:                 ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false2.if.then_crit_edge, %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %17 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %addr, align 1
  %conv.i39 = zext i8 %18 to i32
  %19 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %add.ptr.i, align 1
  %conv2.i = zext i8 %20 to i32
  %arrayidx3.i = getelementptr i8, ptr %addr, i32 5
  %21 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx3.i, align 1
  %conv4.i = zext i8 %22 to i32
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %format_mac_addr, i32 noundef 18, ptr noundef nonnull @.str.80, i32 noundef %conv.i39, i32 noundef %conv2.i, i32 noundef %conv4.i) #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hclge_rm_uc_addr_common.__UNIQUE_ID_ddebug540, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hclge_rm_uc_addr_common, %if.then7)) #16
          to label %cleanup [label %if.then7], !srcloc !1454

if.then7:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %2, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @hclge_rm_uc_addr_common.__UNIQUE_ID_ddebug540, ptr noundef %dev, ptr noundef nonnull @.str.40, ptr noundef nonnull %format_mac_addr) #16
  br label %cleanup

if.end9:                                          ; preds = %lor.lhs.false2
  %25 = call ptr @memset(ptr %req, i32 0, i32 24)
  %26 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %add.ptr1.i, align 1
  %arrayidx1.i40 = getelementptr i8, ptr %addr, i32 3
  %28 = ptrtoint ptr %arrayidx1.i40 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx1.i40, align 1
  %30 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %addr, align 1
  %arrayidx7.i = getelementptr i8, ptr %addr, i32 1
  %32 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx7.i, align 1
  %34 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %add.ptr.i, align 1
  %arrayidx13.i = getelementptr i8, ptr %addr, i32 5
  %36 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx13.i, align 1
  %38 = ptrtoint ptr %req to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 1, ptr %req, align 4
  %conv12.i = zext i8 %35 to i16
  %conv14.i = zext i8 %37 to i16
  %shl15.i = shl nuw i16 %conv14.i, 8
  %or16.i = or i16 %shl15.i, %conv12.i
  %conv.i41 = zext i8 %27 to i32
  %shl.i = shl nuw nsw i32 %conv.i41, 16
  %conv2.i42 = zext i8 %29 to i32
  %shl3.i = shl nuw i32 %conv2.i42, 24
  %or.i43 = or i32 %shl3.i, %shl.i
  %conv5.i = zext i8 %31 to i32
  %or6.i = or i32 %or.i43, %conv5.i
  %conv8.i = zext i8 %33 to i32
  %shl9.i = shl nuw nsw i32 %conv8.i, 8
  %or10.i = or i32 %or6.i, %shl9.i
  %39 = tail call i32 @llvm.bswap.i32(i32 %or10.i) #16
  %40 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %3, align 4
  %41 = tail call i16 @llvm.bswap.i16(i16 %or16.i) #16
  %42 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %41, ptr %4, align 4
  %call17 = call fastcc i32 @hclge_remove_mac_vlan_tbl(ptr noundef %vport, ptr noundef nonnull %req)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.then19, label %if.else

if.then19:                                        ; preds = %if.end9
  %vport_lock = getelementptr inbounds %struct.hclge_dev, ptr %2, i32 0, i32 61
  tail call void @mutex_lock_nested(ptr noundef %vport_lock, i32 noundef 0) #16
  %43 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %back, align 4
  %used_umv_num.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 10
  %45 = ptrtoint ptr %used_umv_num.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %used_umv_num.i, align 8
  %priv_umv_size.i = getelementptr inbounds %struct.hclge_dev, ptr %44, i32 0, i32 80
  %47 = ptrtoint ptr %priv_umv_size.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %priv_umv_size.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %46, i16 %48)
  %cmp.i44 = icmp ugt i16 %46, %48
  br i1 %cmp.i44, label %if.then3.i, label %if.then19.if.end.i_crit_edge

if.then19.if.end.i_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then3.i:                                       ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  %share_umv_size.i = getelementptr inbounds %struct.hclge_dev, ptr %44, i32 0, i32 81
  %49 = ptrtoint ptr %share_umv_size.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %share_umv_size.i, align 4
  %inc.i = add i16 %50, 1
  store i16 %inc.i, ptr %share_umv_size.i, align 4
  %51 = ptrtoint ptr %used_umv_num.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %.pr.i = load i16, ptr %used_umv_num.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then19.if.end.i_crit_edge
  %52 = phi i16 [ %.pr.i, %if.then3.i ], [ %46, %if.then19.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %52)
  %cmp6.not.i = icmp eq i16 %52, 0
  br i1 %cmp6.not.i, label %if.end.i.hclge_update_umv_space.exit_crit_edge, label %if.then8.i

if.end.i.hclge_update_umv_space.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_umv_space.exit

if.then8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %dec.i = add i16 %52, -1
  %53 = ptrtoint ptr %used_umv_num.i to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 %dec.i, ptr %used_umv_num.i, align 8
  br label %hclge_update_umv_space.exit

hclge_update_umv_space.exit:                      ; preds = %if.then8.i, %if.end.i.hclge_update_umv_space.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

if.else:                                          ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call17)
  %cmp = icmp eq i32 %call17, -2
  %spec.store.select = select i1 %cmp, i32 0, i32 %call17
  br label %cleanup

cleanup:                                          ; preds = %if.else, %hclge_update_umv_space.exit, %if.then7, %if.then
  %retval.0 = phi i32 [ -22, %if.then7 ], [ %spec.store.select, %if.else ], [ 0, %hclge_update_umv_space.exit ], [ -22, %if.then ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %req) #16
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %format_mac_addr) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_remove_mac_vlan_tbl(ptr nocapture noundef readonly %vport, ptr nocapture noundef readonly %req) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %3 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 4097, i1 noundef zeroext false) #16
  %4 = call ptr @memcpy(ptr %2, ptr %req, i32 24)
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.101, i32 noundef %call.i) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 2
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %2, align 4
  %10 = lshr i32 %9, 16
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %7, align 4
  %13 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %back, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool.not.i = icmp eq i16 %12, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %15 = call i16 @llvm.bswap.i16(i16 %12)
  %16 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %14, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44
  %conv.i = zext i16 %15 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.83, i32 noundef %conv.i) #20
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  %conv = trunc i32 %10 to i8
  %18 = zext i8 %conv to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.754)
  switch i8 %conv, label %do.end49.i [
    i8 0, label %if.end.i.cleanup_crit_edge
    i8 1, label %do.body35.i
  ]

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body35.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hclge_get_mac_vlan_cmd_status.__UNIQUE_ID_ddebug538, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hclge_remove_mac_vlan_tbl, %if.then39.i)) #16
          to label %cleanup [label %if.then39.i], !srcloc !1454

if.then39.i:                                      ; preds = %do.body35.i
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %14, align 8
  %dev41.i = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @hclge_get_mac_vlan_cmd_status.__UNIQUE_ID_ddebug538, ptr noundef %dev41.i, ptr noundef nonnull @.str.88) #16
  br label %cleanup

do.end49.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv31.i = and i32 %10, 255
  %21 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %14, align 8
  %dev51.i = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev51.i, ptr noundef nonnull @.str.90, i32 noundef %conv31.i) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end49.i, %if.then39.i, %do.body35.i, %if.end.i.cleanup_crit_edge, %do.end.i, %do.end
  %retval.0 = phi i32 [ %call.i, %do.end ], [ -5, %do.end.i ], [ -5, %do.end49.i ], [ 0, %if.end.i.cleanup_crit_edge ], [ -2, %if.then39.i ], [ -2, %do.body35.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_add_mc_addr_common(ptr nocapture noundef %vport, ptr nocapture noundef readonly %addr) local_unnamed_addr #0 align 64 {
entry:
  %format_mac_addr = alloca [18 x i8], align 1
  %req = alloca %struct.hclge_mac_vlan_tbl_entry_cmd, align 4
  %desc = alloca [3 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %format_mac_addr) #16
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = call ptr @memset(ptr %format_mac_addr, i32 255, i32 18)
  %1 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %req) #16
  %3 = call ptr @memset(ptr %req, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %desc) #16
  %4 = call ptr @memset(ptr %desc, i32 255, i32 96)
  %5 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %addr, align 4
  %7 = and i32 %6, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i.not = icmp eq i32 %7, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %addr, align 1
  %conv.i = zext i8 %9 to i32
  %arrayidx1.i = getelementptr i8, ptr %addr, i32 4
  %10 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx1.i, align 1
  %conv2.i = zext i8 %11 to i32
  %arrayidx3.i = getelementptr i8, ptr %addr, i32 5
  %12 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx3.i, align 1
  %conv4.i = zext i8 %13 to i32
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %format_mac_addr, i32 noundef 18, ptr noundef nonnull @.str.80, i32 noundef %conv.i, i32 noundef %conv2.i, i32 noundef %conv4.i) #16
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %2, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.41, ptr noundef nonnull %format_mac_addr) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %16 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 7
  %17 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 6
  %18 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 4
  %19 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 3
  %20 = call ptr @memset(ptr %req, i32 0, i32 24)
  %arrayidx.i = getelementptr i8, ptr %addr, i32 2
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx.i, align 1
  %arrayidx1.i74 = getelementptr i8, ptr %addr, i32 3
  %23 = ptrtoint ptr %arrayidx1.i74 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx1.i74, align 1
  %25 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %addr, align 1
  %arrayidx7.i = getelementptr i8, ptr %addr, i32 1
  %27 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx7.i, align 1
  %arrayidx11.i = getelementptr i8, ptr %addr, i32 4
  %29 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx11.i, align 1
  %arrayidx13.i = getelementptr i8, ptr %addr, i32 5
  %31 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx13.i, align 1
  %33 = ptrtoint ptr %req to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 1, ptr %req, align 4
  %34 = ptrtoint ptr %17 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 2, ptr %17, align 4
  %35 = ptrtoint ptr %16 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 1, ptr %16, align 1
  %conv12.i = zext i8 %30 to i16
  %conv14.i = zext i8 %32 to i16
  %shl15.i = shl nuw i16 %conv14.i, 8
  %or16.i = or i16 %shl15.i, %conv12.i
  %conv.i75 = zext i8 %22 to i32
  %shl.i = shl nuw nsw i32 %conv.i75, 16
  %conv2.i76 = zext i8 %24 to i32
  %shl3.i = shl nuw i32 %conv2.i76, 24
  %or.i = or i32 %shl3.i, %shl.i
  %conv5.i = zext i8 %26 to i32
  %or6.i = or i32 %or.i, %conv5.i
  %conv8.i = zext i8 %28 to i32
  %shl9.i = shl nuw nsw i32 %conv8.i, 8
  %or10.i = or i32 %or6.i, %shl9.i
  %36 = tail call i32 @llvm.bswap.i32(i32 %or10.i) #16
  %37 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %19, align 4
  %38 = tail call i16 @llvm.bswap.i16(i16 %or16.i) #16
  %39 = ptrtoint ptr %18 to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %38, ptr %18, align 4
  %call3 = call fastcc i32 @hclge_lookup_mac_vlan_tbl(ptr noundef %vport, ptr noundef nonnull %req, ptr noundef nonnull %desc, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end.if.end20_crit_edge, label %if.then4

if.end.if.end20_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then4:                                         ; preds = %if.end
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %2, i32 0, i32 1
  %40 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %41, i32 0, i32 7
  %42 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %caps, align 4
  %44 = and i32 %43, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool7.not = icmp eq i32 %44, 0
  br i1 %tobool7.not, label %if.then4.if.end12_crit_edge, label %land.lhs.true

if.then4.if.end12_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

land.lhs.true:                                    ; preds = %if.then4
  %used_mc_mac_num = getelementptr inbounds %struct.hclge_dev, ptr %2, i32 0, i32 82
  %45 = ptrtoint ptr %used_mc_mac_num to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %used_mc_mac_num, align 2
  %mc_mac_size = getelementptr inbounds %struct.hnae3_ae_dev, ptr %41, i32 0, i32 5, i32 11
  %47 = ptrtoint ptr %mc_mac_size to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %mc_mac_size, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %46, i16 %48)
  %cmp.not = icmp ult i16 %46, %48
  br i1 %cmp.not, label %land.lhs.true.if.end12_crit_edge, label %land.lhs.true.err_no_space_crit_edge

land.lhs.true.err_no_space_crit_edge:             ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_no_space

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.end12:                                         ; preds = %land.lhs.true.if.end12_crit_edge, %if.then4.if.end12_crit_edge
  %data = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %49 = call ptr @memset(ptr %data, i32 0, i32 24)
  %data15 = getelementptr inbounds [3 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4
  %50 = call ptr @memset(ptr %data15, i32 0, i32 24)
  %data18 = getelementptr inbounds [3 x %struct.hclge_desc], ptr %desc, i32 0, i32 2, i32 4
  %51 = call ptr @memset(ptr %data18, i32 0, i32 24)
  br label %if.end20

if.end20:                                         ; preds = %if.end12, %if.end.if.end20_crit_edge
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %52 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %vport_id, align 2
  %conv22 = zext i16 %53 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 255, i16 %53)
  %cmp.i = icmp ugt i16 %53, 255
  br i1 %cmp.i, label %if.end20.cleanup_crit_edge, label %land.lhs.true.i

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end20
  call void @__sanitizer_cov_trace_const_cmp2(i16 192, i16 %53)
  %cmp3.i = icmp ult i16 %53, 192
  br i1 %cmp3.i, label %if.then4.i, label %if.else12.i

if.then4.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %54 = lshr i16 %53, 5
  %div.i81.zext = zext i16 %54 to i32
  %rem54.i = and i32 %conv22, 31
  %shl.i77 = shl nuw i32 1, %rem54.i
  %55 = call i32 @llvm.bswap.i32(i32 %shl.i77) #16
  %arrayidx10.i = getelementptr %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 %div.i81.zext
  br label %if.end26

if.else12.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %div1349.lhs.trunc.i = add nuw nsw i32 %conv22, 64
  %div13495053.i = lshr i32 %div1349.lhs.trunc.i, 5
  %div1349.zext.i = and i32 %div13495053.i, 7
  %rem145152.i = and i32 %conv22, 31
  %shl17.i = shl nuw i32 1, %rem145152.i
  %56 = call i32 @llvm.bswap.i32(i32 %shl17.i) #16
  %arrayidx27.i = getelementptr %struct.hclge_desc, ptr %desc, i32 2, i32 4, i32 %div1349.zext.i
  br label %if.end26

if.end26:                                         ; preds = %if.else12.i, %if.then4.i
  %arrayidx27.i.sink85 = phi ptr [ %arrayidx27.i, %if.else12.i ], [ %arrayidx10.i, %if.then4.i ]
  %.sink84 = phi i32 [ %56, %if.else12.i ], [ %55, %if.then4.i ]
  %57 = ptrtoint ptr %arrayidx27.i.sink85 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx27.i.sink85, align 4
  %or28.i = or i32 %58, %.sink84
  store i32 %or28.i, ptr %arrayidx27.i.sink85, align 4
  %call28 = call fastcc i32 @hclge_add_mac_vlan_tbl(ptr noundef %vport, ptr noundef nonnull %req, ptr noundef nonnull %desc)
  %59 = zext i32 %call28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.755)
  switch i32 %call28, label %if.end26.cleanup_crit_edge [
    i32 -28, label %if.end26.err_no_space_crit_edge
    i32 0, label %land.lhs.true33
  ]

if.end26.err_no_space_crit_edge:                  ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_no_space

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true33:                                  ; preds = %if.end26
  br i1 %tobool.not, label %land.lhs.true33.cleanup_crit_edge, label %if.then36

land.lhs.true33.cleanup_crit_edge:                ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then36:                                        ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #18
  %used_mc_mac_num37 = getelementptr inbounds %struct.hclge_dev, ptr %2, i32 0, i32 82
  %60 = ptrtoint ptr %used_mc_mac_num37 to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %used_mc_mac_num37, align 2
  %inc = add i16 %61, 1
  store i16 %inc, ptr %used_mc_mac_num37, align 2
  br label %cleanup

err_no_space:                                     ; preds = %if.end26.err_no_space_crit_edge, %land.lhs.true.err_no_space_crit_edge
  %overflow_promisc_flags = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 19
  %62 = ptrtoint ptr %overflow_promisc_flags to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %overflow_promisc_flags, align 8
  %64 = and i8 %63, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %64)
  %tobool41.not = icmp eq i8 %64, 0
  br i1 %tobool41.not, label %if.then42, label %err_no_space.cleanup_crit_edge

err_no_space.cleanup_crit_edge:                   ; preds = %err_no_space
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then42:                                        ; preds = %err_no_space
  call void @__sanitizer_cov_trace_pc() #18
  %or = or i8 %63, 16
  %65 = ptrtoint ptr %overflow_promisc_flags to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 %or, ptr %overflow_promisc_flags, align 8
  %66 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %2, align 8
  %dev50 = getelementptr inbounds %struct.pci_dev, ptr %67, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev50, ptr noundef nonnull @.str.44) #20
  br label %cleanup

cleanup:                                          ; preds = %if.then42, %err_no_space.cleanup_crit_edge, %if.then36, %land.lhs.true33.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.end20.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ %call28, %if.end26.cleanup_crit_edge ], [ 0, %land.lhs.true33.cleanup_crit_edge ], [ 0, %if.then36 ], [ -28, %if.then42 ], [ -28, %err_no_space.cleanup_crit_edge ], [ -5, %if.end20.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %desc) #16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %req) #16
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %format_mac_addr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_rm_mc_addr_common(ptr nocapture noundef readonly %vport, ptr nocapture noundef readonly %addr) #0 align 64 {
entry:
  %format_mac_addr = alloca [18 x i8], align 1
  %req = alloca %struct.hclge_mac_vlan_tbl_entry_cmd, align 4
  %desc = alloca [3 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %format_mac_addr) #16
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = call ptr @memset(ptr %format_mac_addr, i32 255, i32 18)
  %1 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %req) #16
  %3 = call ptr @memset(ptr %req, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %desc) #16
  %4 = call ptr @memset(ptr %desc, i32 255, i32 96)
  %5 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %addr, align 4
  %7 = and i32 %6, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i.not = icmp eq i32 %7, 0
  br i1 %tobool.i.not, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %addr, align 1
  %conv.i = zext i8 %9 to i32
  %arrayidx1.i = getelementptr i8, ptr %addr, i32 4
  %10 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx1.i, align 1
  %conv2.i = zext i8 %11 to i32
  %arrayidx3.i = getelementptr i8, ptr %addr, i32 5
  %12 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx3.i, align 1
  %conv4.i = zext i8 %13 to i32
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %format_mac_addr, i32 noundef 18, ptr noundef nonnull @.str.80, i32 noundef %conv.i, i32 noundef %conv2.i, i32 noundef %conv4.i) #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hclge_rm_mc_addr_common.__UNIQUE_ID_ddebug541, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hclge_rm_mc_addr_common, %if.then4)) #16
          to label %cleanup [label %if.then4], !srcloc !1454

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %2, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @hclge_rm_mc_addr_common.__UNIQUE_ID_ddebug541, ptr noundef %dev, ptr noundef nonnull @.str.47, ptr noundef nonnull %format_mac_addr) #16
  br label %cleanup

if.end6:                                          ; preds = %entry
  %16 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 7
  %17 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 6
  %18 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 4
  %19 = getelementptr inbounds %struct.hclge_mac_vlan_tbl_entry_cmd, ptr %req, i32 0, i32 3
  %20 = call ptr @memset(ptr %req, i32 0, i32 24)
  %arrayidx.i = getelementptr i8, ptr %addr, i32 2
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx.i, align 1
  %arrayidx1.i47 = getelementptr i8, ptr %addr, i32 3
  %23 = ptrtoint ptr %arrayidx1.i47 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx1.i47, align 1
  %25 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %addr, align 1
  %arrayidx7.i = getelementptr i8, ptr %addr, i32 1
  %27 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx7.i, align 1
  %arrayidx11.i = getelementptr i8, ptr %addr, i32 4
  %29 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx11.i, align 1
  %arrayidx13.i = getelementptr i8, ptr %addr, i32 5
  %31 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx13.i, align 1
  %33 = ptrtoint ptr %req to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 1, ptr %req, align 4
  %34 = ptrtoint ptr %17 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 2, ptr %17, align 4
  %35 = ptrtoint ptr %16 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 1, ptr %16, align 1
  %conv12.i = zext i8 %30 to i16
  %conv14.i = zext i8 %32 to i16
  %shl15.i = shl nuw i16 %conv14.i, 8
  %or16.i = or i16 %shl15.i, %conv12.i
  %conv.i48 = zext i8 %22 to i32
  %shl.i = shl nuw nsw i32 %conv.i48, 16
  %conv2.i49 = zext i8 %24 to i32
  %shl3.i = shl nuw i32 %conv2.i49, 24
  %or.i = or i32 %shl3.i, %shl.i
  %conv5.i = zext i8 %26 to i32
  %or6.i = or i32 %or.i, %conv5.i
  %conv8.i = zext i8 %28 to i32
  %shl9.i = shl nuw nsw i32 %conv8.i, 8
  %or10.i = or i32 %or6.i, %shl9.i
  %36 = tail call i32 @llvm.bswap.i32(i32 %or10.i) #16
  %37 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %19, align 4
  %38 = tail call i16 @llvm.bswap.i16(i16 %or16.i) #16
  %39 = ptrtoint ptr %18 to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %38, ptr %18, align 4
  %call8 = call fastcc i32 @hclge_lookup_mac_vlan_tbl(ptr noundef %vport, ptr noundef nonnull %req, ptr noundef nonnull %desc, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.then10, label %if.else26

if.then10:                                        ; preds = %if.end6
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %40 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %vport_id, align 2
  %conv = zext i16 %41 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 255, i16 %41)
  %cmp.i = icmp ugt i16 %41, 255
  br i1 %cmp.i, label %if.then10.cleanup_crit_edge, label %land.lhs.true.i

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.then10
  call void @__sanitizer_cov_trace_const_cmp2(i16 192, i16 %41)
  %cmp3.i = icmp ult i16 %41, 192
  br i1 %cmp3.i, label %if.then4.i, label %if.else12.i

if.then4.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %42 = lshr i16 %41, 5
  %div.i56.zext = zext i16 %42 to i32
  %rem54.i = and i32 %conv, 31
  %shl.i50 = shl nuw i32 1, %rem54.i
  %neg.i = xor i32 %shl.i50, -1
  %43 = call i32 @llvm.bswap.i32(i32 %neg.i) #16
  %arrayidx6.i = getelementptr %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 %div.i56.zext
  br label %if.end15

if.else12.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %div1349.lhs.trunc.i = add nuw nsw i32 %conv, 64
  %div13495053.i = lshr i32 %div1349.lhs.trunc.i, 5
  %div1349.zext.i = and i32 %div13495053.i, 7
  %rem145152.i = and i32 %conv, 31
  %shl17.i = shl nuw i32 1, %rem145152.i
  %neg18.i = xor i32 %shl17.i, -1
  %44 = call i32 @llvm.bswap.i32(i32 %neg18.i) #16
  %arrayidx21.i = getelementptr %struct.hclge_desc, ptr %desc, i32 2, i32 4, i32 %div1349.zext.i
  br label %if.end15

if.end15:                                         ; preds = %if.else12.i, %if.then4.i
  %arrayidx21.i.sink60 = phi ptr [ %arrayidx21.i, %if.else12.i ], [ %arrayidx6.i, %if.then4.i ]
  %.sink59 = phi i32 [ %44, %if.else12.i ], [ %43, %if.then4.i ]
  %45 = ptrtoint ptr %arrayidx21.i.sink60 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx21.i.sink60, align 4
  %and22.i = and i32 %46, %.sink59
  store i32 %and22.i, ptr %arrayidx21.i.sink60, align 4
  %arrayidx4.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 0
  %47 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i = icmp eq i32 %48, 0
  br i1 %tobool.not.i, label %for.cond1.i, label %if.end15.if.else_crit_edge

if.end15.if.else_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.i:                                      ; preds = %if.end15
  %arrayidx4.1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 1
  %49 = ptrtoint ptr %arrayidx4.1.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx4.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.not.1.i = icmp eq i32 %50, 0
  br i1 %tobool.not.1.i, label %for.cond1.1.i, label %for.cond1.i.if.else_crit_edge

for.cond1.i.if.else_crit_edge:                    ; preds = %for.cond1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.1.i:                                    ; preds = %for.cond1.i
  %arrayidx4.2.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 2
  %51 = ptrtoint ptr %arrayidx4.2.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx4.2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.2.i = icmp eq i32 %52, 0
  br i1 %tobool.not.2.i, label %for.cond1.2.i, label %for.cond1.1.i.if.else_crit_edge

for.cond1.1.i.if.else_crit_edge:                  ; preds = %for.cond1.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.2.i:                                    ; preds = %for.cond1.1.i
  %arrayidx4.3.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 3
  %53 = ptrtoint ptr %arrayidx4.3.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx4.3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.3.i = icmp eq i32 %54, 0
  br i1 %tobool.not.3.i, label %for.cond1.3.i, label %for.cond1.2.i.if.else_crit_edge

for.cond1.2.i.if.else_crit_edge:                  ; preds = %for.cond1.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.3.i:                                    ; preds = %for.cond1.2.i
  %arrayidx4.4.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 4
  %55 = ptrtoint ptr %arrayidx4.4.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx4.4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.not.4.i = icmp eq i32 %56, 0
  br i1 %tobool.not.4.i, label %for.cond1.4.i, label %for.cond1.3.i.if.else_crit_edge

for.cond1.3.i.if.else_crit_edge:                  ; preds = %for.cond1.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.4.i:                                    ; preds = %for.cond1.3.i
  %arrayidx4.5.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 5
  %57 = ptrtoint ptr %arrayidx4.5.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx4.5.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.not.5.i = icmp eq i32 %58, 0
  br i1 %tobool.not.5.i, label %for.cond1.5.i, label %for.cond1.4.i.if.else_crit_edge

for.cond1.4.i.if.else_crit_edge:                  ; preds = %for.cond1.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.5.i:                                    ; preds = %for.cond1.4.i
  %arrayidx4.121.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 2, i32 4, i32 0
  %59 = ptrtoint ptr %arrayidx4.121.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx4.121.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.not.122.i = icmp eq i32 %60, 0
  br i1 %tobool.not.122.i, label %for.cond1.123.i, label %for.cond1.5.i.if.else_crit_edge

for.cond1.5.i.if.else_crit_edge:                  ; preds = %for.cond1.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.123.i:                                  ; preds = %for.cond1.5.i
  %arrayidx4.1.1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 2, i32 4, i32 1
  %61 = ptrtoint ptr %arrayidx4.1.1.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx4.1.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.1.1.i = icmp eq i32 %62, 0
  br i1 %tobool.not.1.1.i, label %for.cond1.1.1.i, label %for.cond1.123.i.if.else_crit_edge

for.cond1.123.i.if.else_crit_edge:                ; preds = %for.cond1.123.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.1.1.i:                                  ; preds = %for.cond1.123.i
  %arrayidx4.2.1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 2, i32 4, i32 2
  %63 = ptrtoint ptr %arrayidx4.2.1.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx4.2.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool.not.2.1.i = icmp eq i32 %64, 0
  br i1 %tobool.not.2.1.i, label %for.cond1.2.1.i, label %for.cond1.1.1.i.if.else_crit_edge

for.cond1.1.1.i.if.else_crit_edge:                ; preds = %for.cond1.1.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.2.1.i:                                  ; preds = %for.cond1.1.1.i
  %arrayidx4.3.1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 2, i32 4, i32 3
  %65 = ptrtoint ptr %arrayidx4.3.1.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx4.3.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool.not.3.1.i = icmp eq i32 %66, 0
  br i1 %tobool.not.3.1.i, label %for.cond1.3.1.i, label %for.cond1.2.1.i.if.else_crit_edge

for.cond1.2.1.i.if.else_crit_edge:                ; preds = %for.cond1.2.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.3.1.i:                                  ; preds = %for.cond1.2.1.i
  %arrayidx4.4.1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 2, i32 4, i32 4
  %67 = ptrtoint ptr %arrayidx4.4.1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx4.4.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool.not.4.1.i = icmp eq i32 %68, 0
  br i1 %tobool.not.4.1.i, label %for.cond1.4.1.i, label %for.cond1.3.1.i.if.else_crit_edge

for.cond1.3.1.i.if.else_crit_edge:                ; preds = %for.cond1.3.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.cond1.4.1.i:                                  ; preds = %for.cond1.3.1.i
  %arrayidx4.5.1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 2, i32 4, i32 5
  %69 = ptrtoint ptr %arrayidx4.5.1.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx4.5.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool.not.5.1.i = icmp eq i32 %70, 0
  br i1 %tobool.not.5.1.i, label %if.then18, label %for.cond1.4.1.i.if.else_crit_edge

for.cond1.4.1.i.if.else_crit_edge:                ; preds = %for.cond1.4.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.then18:                                        ; preds = %for.cond1.4.1.i
  %call19 = call fastcc i32 @hclge_remove_mac_vlan_tbl(ptr noundef %vport, ptr noundef nonnull %req)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then21, label %if.then18.cleanup_crit_edge

if.then18.cleanup_crit_edge:                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then21:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  %used_mc_mac_num = getelementptr inbounds %struct.hclge_dev, ptr %2, i32 0, i32 82
  %71 = ptrtoint ptr %used_mc_mac_num to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %used_mc_mac_num, align 2
  %dec = add i16 %72, -1
  store i16 %dec, ptr %used_mc_mac_num, align 2
  br label %cleanup

if.else:                                          ; preds = %for.cond1.4.1.i.if.else_crit_edge, %for.cond1.3.1.i.if.else_crit_edge, %for.cond1.2.1.i.if.else_crit_edge, %for.cond1.1.1.i.if.else_crit_edge, %for.cond1.123.i.if.else_crit_edge, %for.cond1.5.i.if.else_crit_edge, %for.cond1.4.i.if.else_crit_edge, %for.cond1.3.i.if.else_crit_edge, %for.cond1.2.i.if.else_crit_edge, %for.cond1.1.i.if.else_crit_edge, %for.cond1.i.if.else_crit_edge, %if.end15.if.else_crit_edge
  %call24 = call fastcc i32 @hclge_add_mac_vlan_tbl(ptr noundef %vport, ptr noundef nonnull %req, ptr noundef nonnull %desc)
  br label %cleanup

if.else26:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call8)
  %cmp = icmp eq i32 %call8, -2
  %spec.store.select = select i1 %cmp, i32 0, i32 %call8
  br label %cleanup

cleanup:                                          ; preds = %if.else26, %if.else, %if.then21, %if.then18.cleanup_crit_edge, %if.then10.cleanup_crit_edge, %if.then4, %if.then
  %retval.0 = phi i32 [ -22, %if.then4 ], [ %spec.store.select, %if.else26 ], [ %call19, %if.then18.cleanup_crit_edge ], [ 0, %if.then21 ], [ %call24, %if.else ], [ -22, %if.then ], [ -5, %if.then10.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %desc) #16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %req) #16
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %format_mac_addr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hclge_rm_vport_all_mac_table(ptr noundef %vport, i1 noundef zeroext %is_del_list, i32 noundef %mac_type) local_unnamed_addr #0 align 64 {
entry:
  %tmp_del_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_del_list) #16
  %2 = getelementptr inbounds %struct.list_head, ptr %tmp_del_list, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mac_type)
  %cmp = icmp eq i32 %mac_type, 0
  %uc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 22
  %mc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 23
  %unsync.0 = select i1 %cmp, ptr @hclge_rm_uc_addr_common, ptr @hclge_rm_mc_addr_common
  %list.0 = select i1 %cmp, ptr %uc_mac_list, ptr %mc_mac_list
  %3 = ptrtoint ptr %tmp_del_list to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %tmp_del_list, ptr %tmp_del_list, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %tmp_del_list, ptr %2, align 4
  br i1 %is_del_list, label %entry.if.end2_crit_edge, label %if.then1

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end2

if.then1:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %5 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %vport_id, align 2
  %conv = zext i16 %6 to i32
  %vport_config_block = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 65
  call void @_set_bit(i32 noundef %conv, ptr noundef %vport_config_block) #16
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %entry.if.end2_crit_edge
  %mac_list_lock = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 21
  call void @_raw_spin_lock_bh(ptr noundef %mac_list_lock) #16
  %7 = ptrtoint ptr %list.0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %list.0, align 4
  %cmp.not28.i = icmp eq ptr %8, %list.0
  br i1 %cmp.not28.i, label %if.end2.hclge_build_del_list.exit_crit_edge, label %if.end2.for.body.i_crit_edge

if.end2.for.body.i_crit_edge:                     ; preds = %if.end2
  br label %for.body.i

if.end2.hclge_build_del_list.exit_crit_edge:      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_build_del_list.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end2.for.body.i_crit_edge
  %mac_cfg.029.i = phi ptr [ %tmp.032.i, %for.inc.i.for.body.i_crit_edge ], [ %8, %if.end2.for.body.i_crit_edge ]
  %9 = ptrtoint ptr %mac_cfg.029.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %tmp.032.i = load ptr, ptr %mac_cfg.029.i, align 4
  %state.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_cfg.029.i, i32 0, i32 1
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %state.i, align 4
  %12 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.756)
  switch i32 %11, label %for.body.i.for.inc.i_crit_edge [
    i32 1, label %for.body.i.sw.bb.i_crit_edge
    i32 2, label %for.body.i.sw.bb.i_crit_edge30
    i32 0, label %sw.bb8.i
  ]

for.body.i.sw.bb.i_crit_edge30:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

for.body.i.sw.bb.i_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

sw.bb.i:                                          ; preds = %for.body.i.sw.bb.i_crit_edge, %for.body.i.sw.bb.i_crit_edge30
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_cfg.029.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %sw.bb.i.__list_del_entry.exit.i.i_crit_edge

sw.bb.i.__list_del_entry.exit.i.i_crit_edge:      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_cfg.029.i, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i.i, align 4
  %15 = ptrtoint ptr %mac_cfg.029.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mac_cfg.029.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %sw.bb.i.__list_del_entry.exit.i.i_crit_edge
  %19 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %2, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %mac_cfg.029.i, ptr noundef %20, ptr noundef nonnull %tmp_del_list) #16
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.for.inc.i_crit_edge

__list_del_entry.exit.i.i.for.inc.i_crit_edge:    ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %mac_cfg.029.i, ptr %2, align 4
  %22 = ptrtoint ptr %mac_cfg.029.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %tmp_del_list, ptr %mac_cfg.029.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_cfg.029.i, i32 0, i32 1
  %23 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev3.i.i.i.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %mac_cfg.029.i, ptr %20, align 4
  br label %for.inc.i

sw.bb8.i:                                         ; preds = %for.body.i
  br i1 %is_del_list, label %if.then.i, label %sw.bb8.i.for.inc.i_crit_edge

sw.bb8.i.for.inc.i_crit_edge:                     ; preds = %sw.bb8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %sw.bb8.i
  %call.i.i22.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_cfg.029.i) #16
  br i1 %call.i.i22.i, label %if.end.i.i25.i, label %if.then.i.list_del.exit.i_crit_edge

if.then.i.list_del.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i25.i:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i23.i = getelementptr inbounds %struct.list_head, ptr %mac_cfg.029.i, i32 0, i32 1
  %25 = ptrtoint ptr %prev.i.i23.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %prev.i.i23.i, align 4
  %27 = ptrtoint ptr %mac_cfg.029.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mac_cfg.029.i, align 4
  %prev1.i.i.i24.i = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %prev1.i.i.i24.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %26, ptr %prev1.i.i.i24.i, align 4
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %28, ptr %26, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i25.i, %if.then.i.list_del.exit.i_crit_edge
  %31 = ptrtoint ptr %mac_cfg.029.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_cfg.029.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %mac_cfg.029.i, i32 0, i32 1
  %32 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  call void @kfree(ptr noundef %mac_cfg.029.i) #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %list_del.exit.i, %sw.bb8.i.for.inc.i_crit_edge, %if.end.i.i.i.i, %__list_del_entry.exit.i.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %cmp.not.i = icmp eq ptr %tmp.032.i, %list.0
  br i1 %cmp.not.i, label %for.inc.i.hclge_build_del_list.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.hclge_build_del_list.exit_crit_edge:    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_build_del_list.exit

hclge_build_del_list.exit:                        ; preds = %for.inc.i.hclge_build_del_list.exit_crit_edge, %if.end2.hclge_build_del_list.exit_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  %33 = ptrtoint ptr %tmp_del_list to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tmp_del_list, align 4
  %cmp.not36.i = icmp eq ptr %34, %tmp_del_list
  br i1 %cmp.not36.i, label %hclge_build_del_list.exit.hclge_unsync_del_list.exit_crit_edge, label %hclge_build_del_list.exit.for.body.i19_crit_edge

hclge_build_del_list.exit.for.body.i19_crit_edge: ; preds = %hclge_build_del_list.exit
  br label %for.body.i19

hclge_build_del_list.exit.hclge_unsync_del_list.exit_crit_edge: ; preds = %hclge_build_del_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_unsync_del_list.exit

for.body.i19:                                     ; preds = %for.inc.i29.for.body.i19_crit_edge, %hclge_build_del_list.exit.for.body.i19_crit_edge
  %mac_cfg.037.i = phi ptr [ %tmp.039.i, %for.inc.i29.for.body.i19_crit_edge ], [ %34, %hclge_build_del_list.exit.for.body.i19_crit_edge ]
  %35 = ptrtoint ptr %mac_cfg.037.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %tmp.039.i = load ptr, ptr %mac_cfg.037.i, align 4
  %mac_addr.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_cfg.037.i, i32 0, i32 2
  %call.i = call i32 %unsync.0(ptr noundef %vport, ptr noundef %mac_addr.i) #16, !callees !1455
  %36 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.757)
  switch i32 %call.i, label %if.else13.i [
    i32 0, label %for.body.i19.if.then.i20_crit_edge
    i32 -2, label %for.body.i19.if.then.i20_crit_edge31
  ]

for.body.i19.if.then.i20_crit_edge31:             ; preds = %for.body.i19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i20

for.body.i19.if.then.i20_crit_edge:               ; preds = %for.body.i19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i20

if.then.i20:                                      ; preds = %for.body.i19.if.then.i20_crit_edge, %for.body.i19.if.then.i20_crit_edge31
  br i1 %is_del_list, label %if.then.i20.if.else.i_crit_edge, label %land.lhs.true.i

if.then.i20.if.else.i_crit_edge:                  ; preds = %if.then.i20
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then.i20
  %state.i21 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_cfg.037.i, i32 0, i32 1
  %37 = ptrtoint ptr %state.i21 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %state.i21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %38)
  %cmp9.i = icmp eq i32 %38, 2
  br i1 %cmp9.i, label %if.then10.i, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then10.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %state.i21 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %state.i21, align 4
  br label %for.inc.i29

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then.i20.if.else.i_crit_edge
  %call.i.i.i22 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_cfg.037.i) #16
  br i1 %call.i.i.i22, label %if.end.i.i.i25, label %if.else.i.list_del.exit.i27_crit_edge

if.else.i.list_del.exit.i27_crit_edge:            ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i27

if.end.i.i.i25:                                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i23 = getelementptr inbounds %struct.list_head, ptr %mac_cfg.037.i, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i.i.i23 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev.i.i.i23, align 4
  %42 = ptrtoint ptr %mac_cfg.037.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %mac_cfg.037.i, align 4
  %prev1.i.i.i.i24 = getelementptr inbounds %struct.list_head, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %prev1.i.i.i.i24 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %41, ptr %prev1.i.i.i.i24, align 4
  %45 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %43, ptr %41, align 4
  br label %list_del.exit.i27

list_del.exit.i27:                                ; preds = %if.end.i.i.i25, %if.else.i.list_del.exit.i27_crit_edge
  %46 = ptrtoint ptr %mac_cfg.037.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_cfg.037.i, align 4
  %prev.i.i26 = getelementptr inbounds %struct.list_head, ptr %mac_cfg.037.i, i32 0, i32 1
  %47 = ptrtoint ptr %prev.i.i26 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i26, align 4
  call void @kfree(ptr noundef %mac_cfg.037.i) #16
  br label %for.inc.i29

if.else13.i:                                      ; preds = %for.body.i19
  br i1 %is_del_list, label %if.then15.i, label %if.else13.i.for.inc.i29_crit_edge

if.else13.i.for.inc.i29_crit_edge:                ; preds = %if.else13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i29

if.then15.i:                                      ; preds = %if.else13.i
  call void @__sanitizer_cov_trace_pc() #18
  %state16.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_cfg.037.i, i32 0, i32 1
  %48 = ptrtoint ptr %state16.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 1, ptr %state16.i, align 4
  br label %for.inc.i29

for.inc.i29:                                      ; preds = %if.then15.i, %if.else13.i.for.inc.i29_crit_edge, %list_del.exit.i27, %if.then10.i
  %cmp.not.i28 = icmp eq ptr %tmp.039.i, %tmp_del_list
  br i1 %cmp.not.i28, label %for.inc.i29.hclge_unsync_del_list.exit_crit_edge, label %for.inc.i29.for.body.i19_crit_edge

for.inc.i29.for.body.i19_crit_edge:               ; preds = %for.inc.i29
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i19

for.inc.i29.hclge_unsync_del_list.exit_crit_edge: ; preds = %for.inc.i29
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_unsync_del_list.exit

hclge_unsync_del_list.exit:                       ; preds = %for.inc.i29.hclge_unsync_del_list.exit_crit_edge, %hclge_build_del_list.exit.hclge_unsync_del_list.exit_crit_edge
  call void @_raw_spin_lock_bh(ptr noundef %mac_list_lock) #16
  call fastcc void @hclge_sync_from_del_list(ptr noundef nonnull %tmp_del_list, ptr noundef %list.0)
  call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_del_list) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_sync_from_del_list(ptr noundef readonly %del_list, ptr noundef %mac_list) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %del_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %del_list, align 4
  %cmp.not31 = icmp eq ptr %1, %del_list
  br i1 %cmp.not31, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %prev.i2.i = getelementptr inbounds %struct.list_head, ptr %mac_list, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %mac_node.032 = phi ptr [ %1, %for.body.lr.ph ], [ %tmp.035, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %mac_node.032 to i32
  call void @__asan_load4_noabort(i32 %2)
  %tmp.035 = load ptr, ptr %mac_node.032, align 4
  %mac_addr = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.032, i32 0, i32 2
  %add.ptr.i.i = getelementptr %struct.hclge_mac_node, ptr %mac_node.032, i32 0, i32 2, i32 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %for.body
  %mac_node.0.in.i = phi ptr [ %mac_list, %for.body ], [ %mac_node.0.i, %for.body.i.for.cond.i_crit_edge ]
  %3 = ptrtoint ptr %mac_node.0.in.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %mac_node.0.i = load ptr, ptr %mac_node.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %mac_node.0.i, %mac_list
  br i1 %cmp.not.i, label %for.cond.i.if.else_crit_edge, label %for.body.i

for.cond.i.if.else_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

for.body.i:                                       ; preds = %for.cond.i
  %mac_addr7.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 2
  %4 = ptrtoint ptr %mac_addr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mac_addr, align 4
  %6 = ptrtoint ptr %mac_addr7.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mac_addr7.i, align 4
  %xor.i.i = xor i32 %7, %5
  %8 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i.i = getelementptr %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 2, i32 4
  %10 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %add.ptr1.i.i, align 2
  %xor37.i.i = xor i16 %11, %9
  %xor3.i.i = zext i16 %xor37.i.i to i32
  %or.i.i = or i32 %xor.i.i, %xor3.i.i
  %cmp.i.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i, label %hclge_find_mac_node.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

hclge_find_mac_node.exit:                         ; preds = %for.body.i
  %tobool.not = icmp eq ptr %mac_node.0.i, null
  br i1 %tobool.not, label %hclge_find_mac_node.exit.if.else_crit_edge, label %if.then

hclge_find_mac_node.exit.if.else_crit_edge:       ; preds = %hclge_find_mac_node.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.then:                                          ; preds = %hclge_find_mac_node.exit
  %state = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 1
  %12 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 2, ptr %state, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.032) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.032, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i, align 4
  %15 = ptrtoint ptr %mac_node.032 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mac_node.032, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %19 = ptrtoint ptr %mac_node.032 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.032, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %mac_node.032, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef %mac_node.032) #16
  br label %for.inc

if.else:                                          ; preds = %hclge_find_mac_node.exit.if.else_crit_edge, %for.cond.i.if.else_crit_edge
  %call.i.i23 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.032) #16
  br i1 %call.i.i23, label %if.end.i.i26, label %if.else.__list_del_entry.exit.i_crit_edge

if.else.__list_del_entry.exit.i_crit_edge:        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i

if.end.i.i26:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i24 = getelementptr inbounds %struct.list_head, ptr %mac_node.032, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i.i24 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i.i24, align 4
  %23 = ptrtoint ptr %mac_node.032 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mac_node.032, align 4
  %prev1.i.i.i25 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i25 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i.i25, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %24, ptr %22, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i26, %if.else.__list_del_entry.exit.i_crit_edge
  %27 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mac_node.032, ptr noundef %28, ptr noundef %mac_list) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.for.inc_crit_edge

__list_del_entry.exit.i.for.inc_crit_edge:        ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %mac_node.032, ptr %prev.i2.i, align 4
  %30 = ptrtoint ptr %mac_node.032 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %mac_list, ptr %mac_node.032, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.032, i32 0, i32 1
  %31 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %prev3.i.i.i, align 4
  %32 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %mac_node.032, ptr %28, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.for.inc_crit_edge, %list_del.exit
  %cmp.not = icmp eq ptr %tmp.035, %del_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_update_mac_node_for_dev_addr(ptr noundef %vport, ptr noundef readonly %old_addr, ptr nocapture noundef readonly %new_addr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %uc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 22
  %add.ptr.i.i = getelementptr i8, ptr %new_addr, i32 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %mac_node.0.in.i = phi ptr [ %uc_mac_list, %entry ], [ %mac_node.0.i, %for.body.i.for.cond.i_crit_edge ]
  %0 = ptrtoint ptr %mac_node.0.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %mac_node.0.i = load ptr, ptr %mac_node.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %mac_node.0.i, %uc_mac_list
  br i1 %cmp.not.i, label %for.cond.i.if.then_crit_edge, label %for.body.i

for.cond.i.if.then_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

for.body.i:                                       ; preds = %for.cond.i
  %mac_addr7.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 2
  %1 = ptrtoint ptr %new_addr to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %new_addr, align 4
  %3 = ptrtoint ptr %mac_addr7.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %mac_addr7.i, align 4
  %xor.i.i = xor i32 %4, %2
  %5 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i.i = getelementptr %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 2, i32 4
  %7 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %add.ptr1.i.i, align 2
  %xor37.i.i = xor i16 %8, %6
  %xor3.i.i = zext i16 %xor37.i.i to i32
  %or.i.i = or i32 %xor.i.i, %xor3.i.i
  %cmp.i.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i, label %hclge_find_mac_node.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

hclge_find_mac_node.exit:                         ; preds = %for.body.i
  %tobool.not = icmp eq ptr %mac_node.0.i, null
  br i1 %tobool.not, label %hclge_find_mac_node.exit.if.then_crit_edge, label %if.else

hclge_find_mac_node.exit.if.then_crit_edge:       ; preds = %hclge_find_mac_node.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %hclge_find_mac_node.exit.if.then_crit_edge, %for.cond.i.if.then_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %9 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %9, i32 noundef 2848, i32 noundef 20) #21
  %tobool2.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool2.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.then
  %state = getelementptr inbounds %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %state, align 8
  %mac_addr = getelementptr inbounds %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 2
  %11 = ptrtoint ptr %new_addr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %new_addr, align 4
  %13 = ptrtoint ptr %mac_addr to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %mac_addr, align 4
  %14 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i = getelementptr %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 2, i32 4
  %16 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %15, ptr %add.ptr1.i, align 8
  %17 = ptrtoint ptr %uc_mac_list to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %uc_mac_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %uc_mac_list, ptr noundef %18) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call7.i.i, ptr %prev1.i.i, align 4
  %20 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %18, ptr %call7.i.i, align 8
  br label %if.end9.sink.split

if.else:                                          ; preds = %hclge_find_mac_node.exit
  %state4 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i, i32 0, i32 1
  %21 = ptrtoint ptr %state4 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %state4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp = icmp eq i32 %22, 1
  br i1 %cmp, label %if.then5, label %if.else.if.end7_crit_edge

if.else.if.end7_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then5:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %state4 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 2, ptr %state4, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.else.if.end7_crit_edge
  %call.i.i47 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %mac_node.0.i) #16
  br i1 %call.i.i47, label %if.end.i.i48, label %if.end7.__list_del_entry.exit.i_crit_edge

if.end7.__list_del_entry.exit.i_crit_edge:        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i

if.end.i.i48:                                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.0.i, i32 0, i32 1
  %24 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i.i, align 4
  %26 = ptrtoint ptr %mac_node.0.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mac_node.0.i, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev1.i.i.i, align 4
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %27, ptr %25, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i48, %if.end7.__list_del_entry.exit.i_crit_edge
  %30 = ptrtoint ptr %uc_mac_list to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %uc_mac_list, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %mac_node.0.i, ptr noundef %uc_mac_list, ptr noundef %31) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.if.end9_crit_edge

__list_del_entry.exit.i.if.end9_crit_edge:        ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %mac_node.0.i, ptr %prev1.i.i2.i, align 4
  %33 = ptrtoint ptr %mac_node.0.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %31, ptr %mac_node.0.i, align 4
  br label %if.end9.sink.split

if.end9.sink.split:                               ; preds = %if.end.i.i.i, %if.end.i.i
  %mac_node.0.i.lcssa80.sink81 = phi ptr [ %mac_node.0.i, %if.end.i.i.i ], [ %call7.i.i, %if.end.i.i ]
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.0.i.lcssa80.sink81, i32 0, i32 1
  %34 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %uc_mac_list, ptr %prev3.i.i.i, align 4
  %35 = ptrtoint ptr %uc_mac_list to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %mac_node.0.i.lcssa80.sink81, ptr %uc_mac_list, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.end9.sink.split, %__list_del_entry.exit.i.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %tobool10.not = icmp eq ptr %old_addr, null
  br i1 %tobool10.not, label %if.end9.if.end24_crit_edge, label %land.lhs.true

if.end9.if.end24_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

land.lhs.true:                                    ; preds = %if.end9
  %36 = ptrtoint ptr %old_addr to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %old_addr, align 4
  %38 = ptrtoint ptr %new_addr to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %new_addr, align 4
  %xor.i = xor i32 %39, %37
  %add.ptr.i49 = getelementptr i8, ptr %old_addr, i32 4
  %40 = ptrtoint ptr %add.ptr.i49 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %add.ptr.i49, align 2
  %42 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %add.ptr.i.i, align 2
  %xor37.i = xor i16 %43, %41
  %xor3.i = zext i16 %xor37.i to i32
  %or.i = or i32 %xor.i, %xor3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i = icmp eq i32 %or.i, 0
  br i1 %cmp.i, label %land.lhs.true.if.end24_crit_edge, label %land.lhs.true.for.cond.i55_crit_edge

land.lhs.true.for.cond.i55_crit_edge:             ; preds = %land.lhs.true
  br label %for.cond.i55

land.lhs.true.if.end24_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

for.cond.i55:                                     ; preds = %for.body.i63.for.cond.i55_crit_edge, %land.lhs.true.for.cond.i55_crit_edge
  %mac_node.0.in.i52 = phi ptr [ %mac_node.0.i53, %for.body.i63.for.cond.i55_crit_edge ], [ %uc_mac_list, %land.lhs.true.for.cond.i55_crit_edge ]
  %44 = ptrtoint ptr %mac_node.0.in.i52 to i32
  call void @__asan_load4_noabort(i32 %44)
  %mac_node.0.i53 = load ptr, ptr %mac_node.0.in.i52, align 4
  %cmp.not.i54 = icmp eq ptr %mac_node.0.i53, %uc_mac_list
  br i1 %cmp.not.i54, label %for.cond.i55.if.end24_crit_edge, label %for.body.i63

for.cond.i55.if.end24_crit_edge:                  ; preds = %for.cond.i55
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

for.body.i63:                                     ; preds = %for.cond.i55
  %mac_addr7.i56 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i53, i32 0, i32 2
  %45 = ptrtoint ptr %mac_addr7.i56 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %mac_addr7.i56, align 4
  %xor.i.i57 = xor i32 %46, %37
  %add.ptr1.i.i58 = getelementptr %struct.hclge_mac_node, ptr %mac_node.0.i53, i32 0, i32 2, i32 4
  %47 = ptrtoint ptr %add.ptr1.i.i58 to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %add.ptr1.i.i58, align 2
  %xor37.i.i59 = xor i16 %48, %41
  %xor3.i.i60 = zext i16 %xor37.i.i59 to i32
  %or.i.i61 = or i32 %xor.i.i57, %xor3.i.i60
  %cmp.i.i62 = icmp eq i32 %or.i.i61, 0
  br i1 %cmp.i.i62, label %hclge_find_mac_node.exit65, label %for.body.i63.for.cond.i55_crit_edge

for.body.i63.for.cond.i55_crit_edge:              ; preds = %for.body.i63
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i55

hclge_find_mac_node.exit65:                       ; preds = %for.body.i63
  %tobool14.not = icmp eq ptr %mac_node.0.i53, null
  br i1 %tobool14.not, label %hclge_find_mac_node.exit65.if.end24_crit_edge, label %if.then15

hclge_find_mac_node.exit65.if.end24_crit_edge:    ; preds = %hclge_find_mac_node.exit65
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

if.then15:                                        ; preds = %hclge_find_mac_node.exit65
  %state16 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i53, i32 0, i32 1
  %49 = ptrtoint ptr %state16 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %state16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %cmp17 = icmp eq i32 %50, 0
  br i1 %cmp17, label %if.then18, label %if.else20

if.then18:                                        ; preds = %if.then15
  %call.i.i66 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %mac_node.0.i53) #16
  br i1 %call.i.i66, label %if.end.i.i69, label %if.then18.list_del.exit_crit_edge

if.then18.list_del.exit_crit_edge:                ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i69:                                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i67 = getelementptr inbounds %struct.list_head, ptr %mac_node.0.i53, i32 0, i32 1
  %51 = ptrtoint ptr %prev.i.i67 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %prev.i.i67, align 4
  %53 = ptrtoint ptr %mac_node.0.i53 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %mac_node.0.i53, align 4
  %prev1.i.i.i68 = getelementptr inbounds %struct.list_head, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %prev1.i.i.i68 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %52, ptr %prev1.i.i.i68, align 4
  %56 = ptrtoint ptr %52 to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile ptr %54, ptr %52, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i69, %if.then18.list_del.exit_crit_edge
  %57 = ptrtoint ptr %mac_node.0.i53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.0.i53, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %mac_node.0.i53, i32 0, i32 1
  %58 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef nonnull %mac_node.0.i53) #16
  br label %if.end24

if.else20:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #18
  %59 = ptrtoint ptr %state16 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 1, ptr %state16, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.else20, %list_del.exit, %hclge_find_mac_node.exit65.if.end24_crit_edge, %for.cond.i55.if.end24_crit_edge, %land.lhs.true.if.end24_crit_edge, %if.end9.if.end24_crit_edge
  %state25 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state25) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end24 ], [ -12, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_enable_vport_vlan_filter(ptr noundef %vport, i1 noundef zeroext %request_en) local_unnamed_addr #0 align 64 {
entry:
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %request_en to i8
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %vport_lock = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 61
  tail call void @mutex_lock_nested(ptr noundef %vport_lock, i32 noundef 0) #16
  %req_vlan_fltr_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 4
  %2 = ptrtoint ptr %req_vlan_fltr_en to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %frombool, ptr %req_vlan_fltr_en, align 1
  %3 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %back, align 4
  %vport_id.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %5 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %vport_id.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %tobool.not.i = icmp eq i16 %6, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %port_base_vlan_cfg.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7
  %7 = ptrtoint ptr %port_base_vlan_cfg.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %port_base_vlan_cfg.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %cmp.not.i = icmp eq i16 %8, 0
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge

if.then.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_need_enable_vport_vlan_filter.exit

if.end.i:                                         ; preds = %if.then.i
  %trusted.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 18, i32 4
  %9 = ptrtoint ptr %trusted.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %trusted.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool3.not.i = icmp eq i32 %10, 0
  br i1 %tobool3.not.i, label %if.end13.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %request_uc_en.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 18, i32 5
  %11 = ptrtoint ptr %request_uc_en.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %request_uc_en.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool6.not.i = icmp eq i8 %12, 0
  %13 = and i1 %tobool6.not.i, %request_en
  br i1 %13, label %land.lhs.true.i.if.end16.i_crit_edge, label %land.lhs.true.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge

land.lhs.true.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_need_enable_vport_vlan_filter.exit

land.lhs.true.i.if.end16.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

if.else.i:                                        ; preds = %entry
  %netdev_flags.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 8
  %14 = ptrtoint ptr %netdev_flags.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %netdev_flags.i, align 4
  %16 = and i8 %15, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool10.not.i = icmp eq i8 %16, 0
  %17 = and i1 %tobool10.not.i, %request_en
  br i1 %17, label %if.else.i.if.end16.i_crit_edge, label %if.else.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge

if.else.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_need_enable_vport_vlan_filter.exit

if.else.i.if.end16.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

if.end13.i:                                       ; preds = %if.end.i
  br i1 %request_en, label %if.end13.i.if.end16.i_crit_edge, label %if.end13.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge

if.end13.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge: ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_need_enable_vport_vlan_filter.exit

if.end13.i.if.end16.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.end13.i.if.end16.i_crit_edge, %if.else.i.if.end16.i_crit_edge, %land.lhs.true.i.if.end16.i_crit_edge
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %4, i32 0, i32 1
  %18 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ae_dev.i, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %19, i32 0, i32 7
  %20 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %caps.i, align 4
  %22 = and i32 %21, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool17.not.i = icmp eq i32 %22, 0
  br i1 %tobool17.not.i, label %if.end16.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge, label %if.end19.i

if.end16.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge: ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_need_enable_vport_vlan_filter.exit

if.end19.i:                                       ; preds = %if.end16.i
  %vlan_list.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 24
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end19.i
  %vlan.0.in.i = phi ptr [ %vlan_list.i, %if.end19.i ], [ %vlan.0.i, %for.body.i.for.cond.i_crit_edge ]
  %23 = ptrtoint ptr %vlan.0.in.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %vlan.0.i = load ptr, ptr %vlan.0.in.i, align 4
  %cmp27.not.i = icmp eq ptr %vlan.0.i, %vlan_list.i
  br i1 %cmp27.not.i, label %for.cond.i.cleanup.loopexit.i_crit_edge, label %for.body.i

for.cond.i.cleanup.loopexit.i_crit_edge:          ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.loopexit.i

for.body.i:                                       ; preds = %for.cond.i
  %vlan_id.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.0.i, i32 0, i32 2
  %24 = ptrtoint ptr %vlan_id.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vlan_id.i, align 4
  %cmp30.not.i = icmp eq i16 %25, 0
  br i1 %cmp30.not.i, label %for.body.i.for.cond.i_crit_edge, label %for.body.i.cleanup.loopexit.i_crit_edge

for.body.i.cleanup.loopexit.i_crit_edge:          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.loopexit.i

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

cleanup.loopexit.i:                               ; preds = %for.body.i.cleanup.loopexit.i_crit_edge, %for.cond.i.cleanup.loopexit.i_crit_edge
  %26 = xor i1 %cmp27.not.i, true
  br label %hclge_need_enable_vport_vlan_filter.exit

hclge_need_enable_vport_vlan_filter.exit:         ; preds = %cleanup.loopexit.i, %if.end16.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge, %if.end13.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge, %if.else.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge, %land.lhs.true.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge, %if.then.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge
  %retval.0.i = phi i1 [ true, %if.then.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge ], [ false, %land.lhs.true.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge ], [ false, %if.else.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge ], [ false, %if.end13.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge ], [ true, %if.end16.i.hclge_need_enable_vport_vlan_filter.exit_crit_edge ], [ %26, %cleanup.loopexit.i ]
  %frombool2 = zext i1 %retval.0.i to i8
  %cur_vlan_fltr_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 5
  %27 = ptrtoint ptr %cur_vlan_fltr_en to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %cur_vlan_fltr_en, align 2, !range !1456
  call void @__sanitizer_cov_trace_cmp1(i8 %28, i8 %frombool2)
  %cmp = icmp eq i8 %28, %frombool2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %hclge_need_enable_vport_vlan_filter.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

if.end:                                           ; preds = %hclge_need_enable_vport_vlan_filter.exit
  %ae_dev1.i = getelementptr inbounds %struct.hclge_dev, ptr %4, i32 0, i32 1
  %29 = ptrtoint ptr %ae_dev1.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ae_dev1.i, align 4
  %dev_version.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %30, i32 0, i32 6
  %31 = ptrtoint ptr %dev_version.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %dev_version.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %32)
  %cmp.i = icmp ult i32 %32, 33
  %conv.i = trunc i16 %6 to i8
  br i1 %cmp.i, label %if.then.i33, label %if.end.i34

if.then.i33:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %4, i8 noundef zeroext 0, i8 noundef zeroext 1, i1 noundef zeroext %retval.0.i, i8 noundef zeroext %conv.i) #16
  br label %hclge_set_vport_vlan_filter.exit

if.end.i34:                                       ; preds = %if.end
  %call6.i = tail call fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %4, i8 noundef zeroext 0, i8 noundef zeroext 10, i1 noundef zeroext %retval.0.i, i8 noundef zeroext %conv.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %if.end9.i, label %if.end.i34.if.then11_crit_edge

if.end.i34.if.then11_crit_edge:                   ; preds = %if.end.i34
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then11

if.end9.i:                                        ; preds = %if.end.i34
  %caps.i35 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %30, i32 0, i32 7
  %33 = ptrtoint ptr %caps.i35 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %caps.i35, align 4
  %35 = and i32 %34, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool11.not.i = icmp eq i32 %35, 0
  %36 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %vport_id.i, align 2
  br i1 %tobool11.not.i, label %if.else.i36, label %if.then12.i

if.then12.i:                                      ; preds = %if.end9.i
  %conv14.i = trunc i16 %37 to i8
  %lnot.i = xor i1 %retval.0.i, true
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %38 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %39 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4, i32 1
  %40 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 4355, i1 noundef zeroext false) #16
  %41 = ptrtoint ptr %39 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %conv14.i, ptr %39, align 4
  %42 = ptrtoint ptr %38 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %38, align 4
  %44 = and i8 %43, -2
  %cond.i.i = zext i1 %lnot.i to i8
  %or.i.i = or i8 %44, %cond.i.i
  store i8 %or.i.i, ptr %38, align 4
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %4, i32 0, i32 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool8.not.i.i, label %if.then12.i.hclge_set_port_vlan_filter_bypass.exit.i_crit_edge, label %do.end11.i.i

if.then12.i.hclge_set_port_vlan_filter_bypass.exit.i_crit_edge: ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_port_vlan_filter_bypass.exit.i

do.end11.i.i:                                     ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #18
  %45 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %4, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %46, i32 0, i32 44
  %conv14.mask.i = and i16 %37, 255
  %conv12.i.i = zext i16 %conv14.mask.i to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.108, i32 noundef %conv12.i.i, i32 noundef %call.i.i.i) #20
  br label %hclge_set_port_vlan_filter_bypass.exit.i

hclge_set_port_vlan_filter_bypass.exit.i:         ; preds = %do.end11.i.i, %if.then12.i.hclge_set_port_vlan_filter_bypass.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %hclge_set_vport_vlan_filter.exit

if.else.i36:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %37)
  %tobool18.not.i = icmp eq i16 %37, 0
  br i1 %tobool18.not.i, label %if.then19.i, label %if.else.i36.if.end13_crit_edge

if.else.i36.if.end13_crit_edge:                   ; preds = %if.else.i36
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then19.i:                                      ; preds = %if.else.i36
  call void @__sanitizer_cov_trace_pc() #18
  %47 = ptrtoint ptr %caps.i35 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %caps.i35, align 4
  %49 = and i32 %48, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool23.not.i = icmp eq i32 %49, 0
  %spec.select.i = and i1 %retval.0.i, %tobool23.not.i
  %call27.i = tail call fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %4, i8 noundef zeroext 1, i8 noundef zeroext 5, i1 noundef zeroext %spec.select.i, i8 noundef zeroext 0) #16
  br label %hclge_set_vport_vlan_filter.exit

hclge_set_vport_vlan_filter.exit:                 ; preds = %if.then19.i, %hclge_set_port_vlan_filter_bypass.exit.i, %if.then.i33
  %retval.0.i37 = phi i32 [ %call.i, %if.then.i33 ], [ %call.i.i.i, %hclge_set_port_vlan_filter_bypass.exit.i ], [ %call27.i, %if.then19.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i37)
  %tobool10.not = icmp eq i32 %retval.0.i37, 0
  br i1 %tobool10.not, label %hclge_set_vport_vlan_filter.exit.if.end13_crit_edge, label %hclge_set_vport_vlan_filter.exit.if.then11_crit_edge

hclge_set_vport_vlan_filter.exit.if.then11_crit_edge: ; preds = %hclge_set_vport_vlan_filter.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then11

hclge_set_vport_vlan_filter.exit.if.end13_crit_edge: ; preds = %hclge_set_vport_vlan_filter.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then11:                                        ; preds = %hclge_set_vport_vlan_filter.exit.if.then11_crit_edge, %if.end.i34.if.then11_crit_edge
  %retval.0.i3743 = phi i32 [ %retval.0.i37, %hclge_set_vport_vlan_filter.exit.if.then11_crit_edge ], [ %call6.i, %if.end.i34.if.then11_crit_edge ]
  call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

if.end13:                                         ; preds = %hclge_set_vport_vlan_filter.exit.if.end13_crit_edge, %if.else.i36.if.end13_crit_edge
  %50 = ptrtoint ptr %cur_vlan_fltr_en to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %frombool2, ptr %cur_vlan_fltr_en, align 2
  call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.then11, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %retval.0.i3743, %if.then11 ], [ 0, %if.end13 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hclge_rm_vport_all_vlan_table(ptr noundef readonly %vport, i1 noundef zeroext %is_del_list) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %vlan_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 24
  %2 = ptrtoint ptr %vlan_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vlan_list, align 8
  %cmp.not32 = icmp eq ptr %3, %vlan_list
  br i1 %cmp.not32, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %vlan.033 = phi ptr [ %3, %for.body.lr.ph ], [ %tmp.035, %for.inc.for.body_crit_edge ]
  %4 = ptrtoint ptr %vlan.033 to i32
  call void @__asan_load4_noabort(i32 %4)
  %tmp.035 = load ptr, ptr %vlan.033, align 4
  %hd_tbl_status = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.033, i32 0, i32 1
  %5 = ptrtoint ptr %hd_tbl_status to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %hd_tbl_status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %for.body.if.end_crit_edge, label %if.then

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %vport_id, align 2
  %vlan_id = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.033, i32 0, i32 2
  %9 = ptrtoint ptr %vlan_id to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vlan_id, align 4
  %11 = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %1, i16 noundef zeroext %8, i16 noundef zeroext %10, i1 noundef zeroext true)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.if.end_crit_edge
  %12 = ptrtoint ptr %hd_tbl_status to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %hd_tbl_status, align 4
  br i1 %is_del_list, label %if.then10, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then10:                                        ; preds = %if.end
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %vlan.033) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then10.list_del.exit_crit_edge

if.then10.list_del.exit_crit_edge:                ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %vlan.033, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i, align 4
  %15 = ptrtoint ptr %vlan.033 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vlan.033, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then10.list_del.exit_crit_edge
  %19 = ptrtoint ptr %vlan.033 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 256 to ptr), ptr %vlan.033, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %vlan.033, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef %vlan.033) #16
  br label %for.inc

for.inc:                                          ; preds = %list_del.exit, %if.end.for.inc_crit_edge
  %cmp.not = icmp eq ptr %tmp.035, %vlan_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %vport_id18 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %21 = ptrtoint ptr %vport_id18 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %vport_id18, align 2
  %conv = zext i16 %22 to i32
  %vf_vlan_full = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 64
  tail call void @_clear_bit(i32 noundef %conv, ptr noundef %vf_vlan_full) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %hdev, i16 noundef zeroext %vport_id, i16 noundef zeroext %vlan_id, i1 noundef zeroext %is_kill) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vlan_id)
  %tobool1.not = icmp eq i16 %vlan_id, 0
  %or.cond = and i1 %tobool1.not, %is_kill
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = zext i16 %vlan_id to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 4095, i16 %vlan_id)
  %cmp = icmp ugt i16 %vlan_id, 4095
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call = tail call fastcc i32 @hclge_set_vf_vlan_common(ptr noundef %hdev, i16 noundef zeroext %vport_id, i1 noundef zeroext %is_kill, i16 noundef zeroext %vlan_id)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool6.not = icmp eq i32 %call, 0
  br i1 %tobool6.not, label %if.end9, label %do.end

do.end:                                           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44
  %conv8 = zext i16 %vport_id to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.110, i32 noundef %conv8, i32 noundef %call) #20
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vlan_id)
  %tobool1.not.i = icmp ne i16 %vlan_id, 0
  %2 = or i1 %tobool1.not.i, %is_kill
  %.pre = zext i16 %vport_id to i32
  br i1 %2, label %if.end9.if.end.i_crit_edge, label %land.lhs.true2.i

if.end9.if.end.i_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true2.i:                                 ; preds = %if.end9
  %vlan_table.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 63
  %div3.i.i = lshr i32 %.pre, 5
  %arrayidx.i.i = getelementptr i32, ptr %vlan_table.i, i32 %div3.i.i
  %3 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %.pre, 31
  %5 = shl nuw i32 1, %and.i.i
  %6 = and i32 %4, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool3.not.i = icmp eq i32 %6, 0
  br i1 %tobool3.not.i, label %land.lhs.true2.i.if.end.i_crit_edge, label %land.lhs.true2.i.cleanup_crit_edge

land.lhs.true2.i.cleanup_crit_edge:               ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true2.i.if.end.i_crit_edge:              ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true2.i.if.end.i_crit_edge, %if.end9.if.end.i_crit_edge
  %arrayidx23.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 63, i32 %conv
  br i1 %is_kill, label %land.lhs.true19.critedge.i, label %land.lhs.true5.i

land.lhs.true5.i:                                 ; preds = %if.end.i
  %call11.i = tail call i32 @_test_and_set_bit(i32 noundef %.pre, ptr noundef %arrayidx23.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i)
  %tobool12.not.i = icmp eq i32 %call11.i, 0
  br i1 %tobool12.not.i, label %land.lhs.true5.i.if.end13_crit_edge, label %land.lhs.true5.i.return.sink.split.i_crit_edge

land.lhs.true5.i.return.sink.split.i_crit_edge:   ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return.sink.split.i

land.lhs.true5.i.if.end13_crit_edge:              ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

land.lhs.true19.critedge.i:                       ; preds = %if.end.i
  %call25.i = tail call i32 @_test_and_clear_bit(i32 noundef %.pre, ptr noundef %arrayidx23.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool26.not.i = icmp eq i32 %call25.i, 0
  br i1 %tobool26.not.i, label %land.lhs.true19.critedge.i.return.sink.split.i_crit_edge, label %land.lhs.true19.critedge.i.if.end13_crit_edge

land.lhs.true19.critedge.i.if.end13_crit_edge:    ; preds = %land.lhs.true19.critedge.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

land.lhs.true19.critedge.i.return.sink.split.i_crit_edge: ; preds = %land.lhs.true19.critedge.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return.sink.split.i

return.sink.split.i:                              ; preds = %land.lhs.true19.critedge.i.return.sink.split.i_crit_edge, %land.lhs.true5.i.return.sink.split.i_crit_edge
  %.str.128.sink.i = phi ptr [ @.str.125, %land.lhs.true5.i.return.sink.split.i_crit_edge ], [ @.str.128, %land.lhs.true19.critedge.i.return.sink.split.i_crit_edge ]
  %7 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hdev, align 8
  %dev31.i = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev31.i, ptr noundef nonnull %.str.128.sink.i, i32 noundef %.pre, i32 noundef %conv) #20
  br label %cleanup

if.end13:                                         ; preds = %land.lhs.true19.critedge.i.if.end13_crit_edge, %land.lhs.true5.i.if.end13_crit_edge
  %call14 = tail call i32 @_find_next_bit_be(ptr noundef %arrayidx23.i, i32 noundef 256, i32 noundef 0) #16
  %conv165 = and i32 %call14, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %conv165)
  %cmp176 = icmp ult i32 %conv165, 256
  br i1 %cmp176, label %if.end13.for.body_crit_edge, label %if.end13.for.end_crit_edge

if.end13.for.end_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.end13.for.body_crit_edge:                      ; preds = %if.end13
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end13.for.body_crit_edge
  %conv168 = phi i32 [ %conv16, %for.body.for.body_crit_edge ], [ %conv165, %if.end13.for.body_crit_edge ]
  %vport_num.07 = phi i16 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end13.for.body_crit_edge ]
  %inc = add i16 %vport_num.07, 1
  %add = add nuw nsw i32 %conv168, 1
  %call24 = tail call i32 @_find_next_bit_be(ptr noundef %arrayidx23.i, i32 noundef 256, i32 noundef %add) #16
  %conv16 = and i32 %call24, 65535
  %cmp17 = icmp ult i32 %conv16, 256
  br i1 %cmp17, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end13.for.end_crit_edge
  %vport_num.0.lcssa = phi i16 [ 0, %if.end13.for.end_crit_edge ], [ %inc, %for.body.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vport_num.0.lcssa)
  %cmp30 = icmp eq i16 %vport_num.0.lcssa, 0
  %or.cond1 = select i1 %is_kill, i1 %cmp30, i1 false
  br i1 %or.cond1, label %for.end.if.then37_crit_edge, label %lor.lhs.false

for.end.if.then37_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

lor.lhs.false:                                    ; preds = %for.end
  %is_kill.not = xor i1 %is_kill, true
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %vport_num.0.lcssa)
  %cmp35 = icmp eq i16 %vport_num.0.lcssa, 1
  %or.cond2 = select i1 %is_kill.not, i1 %cmp35, i1 false
  br i1 %or.cond2, label %lor.lhs.false.if.then37_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.if.then37_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

if.then37:                                        ; preds = %lor.lhs.false.if.then37_crit_edge, %for.end.if.then37_crit_edge
  %frombool.i = zext i1 %is_kill to i8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %9 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %10 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 1
  %11 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 4353, i1 noundef zeroext false) #16
  %div.i = udiv i16 %vlan_id, 160
  %conv1.i = trunc i16 %div.i to i8
  %12 = mul i16 %div.i, 160
  %rem.i.decomposed = sub i16 %vlan_id, %12
  %div31.i = lshr i16 %rem.i.decomposed, 3
  %conv4.i = zext i16 %div31.i to i32
  %13 = trunc i16 %vlan_id to i8
  %rem6.i = and i8 %13, 7
  %shl.i = shl nuw i8 1, %rem6.i
  %14 = ptrtoint ptr %9 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %conv1.i, ptr %9, align 4
  %vlan_cfg.i = getelementptr inbounds %struct.hclge_vlan_filter_pf_cfg_cmd, ptr %9, i32 0, i32 1
  %15 = ptrtoint ptr %vlan_cfg.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %frombool.i, ptr %vlan_cfg.i, align 1
  %arrayidx.i = getelementptr [20 x i8], ptr %10, i32 0, i32 %conv4.i
  %16 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %shl.i, ptr %arrayidx.i, align 1
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool9.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool9.not.i, label %if.then37.hclge_set_port_vlan_filter.exit_crit_edge, label %do.end.i

if.then37.hclge_set_port_vlan_filter.exit_crit_edge: ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_port_vlan_filter.exit

do.end.i:                                         ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.130, i32 noundef %call.i.i) #20
  br label %hclge_set_port_vlan_filter.exit

hclge_set_port_vlan_filter.exit:                  ; preds = %do.end.i, %if.then37.hclge_set_port_vlan_filter.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_set_port_vlan_filter.exit, %lor.lhs.false.cleanup_crit_edge, %return.sink.split.i, %land.lhs.true2.i.cleanup_crit_edge, %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %do.end ], [ 0, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %call.i.i, %hclge_set_port_vlan_filter.exit ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %land.lhs.true2.i.cleanup_crit_edge ], [ 0, %return.sink.split.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hclge_uninit_vport_vlan_table(ptr nocapture noundef readonly %hdev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %num_alloc_vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 24
  %0 = ptrtoint ptr %num_alloc_vport to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_alloc_vport, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %cmp34.not = icmp eq i16 %1, 0
  br i1 %cmp34.not, label %entry.for.end21_crit_edge, label %for.body.lr.ph

entry.for.end21_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end21

for.body.lr.ph:                                   ; preds = %entry
  %vport2 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  br label %for.body

for.body:                                         ; preds = %for.inc20.for.body_crit_edge, %for.body.lr.ph
  %i.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc20.for.body_crit_edge ]
  %2 = ptrtoint ptr %vport2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vport2, align 4
  %vlan_list = getelementptr %struct.hclge_vport, ptr %3, i32 %i.035, i32 24
  %4 = ptrtoint ptr %vlan_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vlan_list, align 8
  %cmp11.not30 = icmp eq ptr %5, %vlan_list
  br i1 %cmp11.not30, label %for.body.for.inc20_crit_edge, label %for.body.for.body13_crit_edge

for.body.for.body13_crit_edge:                    ; preds = %for.body
  br label %for.body13

for.body.for.inc20_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc20

for.body13:                                       ; preds = %list_del.exit.for.body13_crit_edge, %for.body.for.body13_crit_edge
  %vlan.031 = phi ptr [ %tmp.0, %list_del.exit.for.body13_crit_edge ], [ %5, %for.body.for.body13_crit_edge ]
  %6 = ptrtoint ptr %vlan.031 to i32
  call void @__asan_load4_noabort(i32 %6)
  %tmp.0 = load ptr, ptr %vlan.031, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %vlan.031) #16
  br i1 %call.i.i, label %if.end.i.i, label %for.body13.list_del.exit_crit_edge

for.body13.list_del.exit_crit_edge:               ; preds = %for.body13
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body13
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %vlan.031, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %vlan.031 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vlan.031, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body13.list_del.exit_crit_edge
  %13 = ptrtoint ptr %vlan.031 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %vlan.031, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %vlan.031, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef %vlan.031) #16
  %cmp11.not = icmp eq ptr %tmp.0, %vlan_list
  br i1 %cmp11.not, label %list_del.exit.for.inc20_crit_edge, label %list_del.exit.for.body13_crit_edge

list_del.exit.for.body13_crit_edge:               ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body13

list_del.exit.for.inc20_crit_edge:                ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc20

for.inc20:                                        ; preds = %list_del.exit.for.inc20_crit_edge, %for.body.for.inc20_crit_edge
  %inc = add nuw nsw i32 %i.035, 1
  %15 = ptrtoint ptr %num_alloc_vport to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %num_alloc_vport, align 2
  %conv = zext i16 %16 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.inc20.for.body_crit_edge, label %for.inc20.for.end21_crit_edge

for.inc20.for.end21_crit_edge:                    ; preds = %for.inc20
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end21

for.inc20.for.body_crit_edge:                     ; preds = %for.inc20
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end21:                                        ; preds = %for.inc20.for.end21_crit_edge, %entry.for.end21_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_en_hw_strip_rxvtag(ptr nocapture noundef %handle, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %frombool = zext i1 %enable to i8
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %port_base_vlan_cfg = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 7
  %4 = ptrtoint ptr %port_base_vlan_cfg to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %port_base_vlan_cfg, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %cmp = icmp eq i16 %5, 0
  %frombool.sink = select i1 %cmp, i8 0, i8 %frombool
  %.sink33 = select i1 %cmp, i8 %frombool, i8 1
  %not.cmp = xor i1 %cmp, true
  %.sink = zext i1 %not.cmp to i8
  %6 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 9, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %frombool.sink, ptr %6, align 1
  %8 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 9, i32 2
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %.sink33, ptr %8, align 2
  %10 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 9, i32 6
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %.sink, ptr %10, align 2
  %rxvlan_cfg13 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 9
  %strip_tag1_discard_en = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 9, i32 5
  %12 = ptrtoint ptr %strip_tag1_discard_en to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %strip_tag1_discard_en, align 1
  %vlan1_vlan_prionly = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 9, i32 3
  %13 = ptrtoint ptr %vlan1_vlan_prionly to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %vlan1_vlan_prionly, align 1
  %vlan2_vlan_prionly = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 9, i32 4
  %14 = ptrtoint ptr %vlan2_vlan_prionly to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 0, ptr %vlan2_vlan_prionly, align 4
  %15 = ptrtoint ptr %rxvlan_cfg13 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %frombool, ptr %rxvlan_cfg13, align 8
  %call19 = tail call fastcc i32 @hclge_set_vlan_rx_offload_cfg(ptr noundef %add.ptr9.i)
  ret i32 %call19
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_set_vlan_rx_offload_cfg(ptr nocapture noundef readonly %vport) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %3 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 2
  %4 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 3842, i1 noundef zeroext false) #16
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %2, align 4
  %strip_tag1_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 1
  %7 = ptrtoint ptr %strip_tag1_en to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %strip_tag1_en, align 1, !range !1456
  %.masked = and i8 %6, -112
  %9 = or i8 %8, %.masked
  %strip_tag2_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 2
  %10 = ptrtoint ptr %strip_tag2_en to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %strip_tag2_en, align 1, !range !1456
  %12 = shl nuw nsw i8 %11, 1
  %13 = or i8 %12, %9
  %vlan1_vlan_prionly = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 3
  %14 = ptrtoint ptr %vlan1_vlan_prionly to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %vlan1_vlan_prionly, align 1, !range !1456
  %16 = shl nuw nsw i8 %15, 2
  %17 = or i8 %13, %16
  %vlan2_vlan_prionly = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 4
  %18 = ptrtoint ptr %vlan2_vlan_prionly to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %vlan2_vlan_prionly, align 1, !range !1456
  %20 = shl nuw nsw i8 %19, 3
  %21 = or i8 %17, %20
  %strip_tag1_discard_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 5
  %22 = ptrtoint ptr %strip_tag1_discard_en to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %strip_tag1_discard_en, align 1, !range !1456
  %24 = shl nuw nsw i8 %23, 5
  %25 = or i8 %21, %24
  %strip_tag2_discard_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 6
  %26 = ptrtoint ptr %strip_tag2_discard_en to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %strip_tag2_discard_en, align 1, !range !1456
  %28 = shl nuw nsw i8 %27, 6
  %or83136 = or i8 %28, %25
  store i8 %or83136, ptr %2, align 4
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %29 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %vport_id, align 2
  %31 = lshr i16 %30, 6
  %conv88 = trunc i16 %31 to i8
  %vf_offset = getelementptr inbounds %struct.hclge_vport_vtag_rx_cfg_cmd, ptr %2, i32 0, i32 1
  %32 = ptrtoint ptr %vf_offset to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %conv88, ptr %vf_offset, align 1
  %rem = lshr i16 %30, 3
  %div91137 = and i16 %rem, 7
  %33 = trunc i16 %30 to i8
  %rem95 = and i8 %33, 7
  %shl96 = shl nuw i8 1, %rem95
  %idxprom = zext i16 %div91137 to i32
  %arrayidx = getelementptr [8 x i8], ptr %3, i32 0, i32 %idxprom
  %34 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %shl96, ptr %arrayidx, align 1
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool98.not = icmp eq i32 %call.i, 0
  br i1 %tobool98.not, label %entry.if.end_crit_edge, label %do.end101

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end101:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %36, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.132, i32 noundef %call.i) #20
  br label %if.end

if.end:                                           ; preds = %do.end101, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_update_port_base_vlan_cfg(ptr noundef %vport, i16 noundef zeroext %state, ptr nocapture noundef readonly %vlan_info) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %port_base_vlan_cfg = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7
  %vlan_info2 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7, i32 1
  %vlan_tag = getelementptr inbounds %struct.hclge_vlan_info, ptr %vlan_info, i32 0, i32 2
  %0 = ptrtoint ptr %vlan_tag to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %vlan_tag, align 2
  %qos = getelementptr inbounds %struct.hclge_vlan_info, ptr %vlan_info, i32 0, i32 1
  %2 = ptrtoint ptr %qos to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %qos, align 2
  %conv = trunc i16 %3 to i8
  %call = tail call fastcc i32 @hclge_vlan_offload_cfg(ptr noundef %vport, i16 noundef zeroext %state, i16 noundef zeroext %1, i8 noundef zeroext %conv)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %vlan_tag to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vlan_tag, align 2
  %vlan_tag1.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7, i32 1, i32 2
  %6 = ptrtoint ptr %vlan_tag1.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vlan_tag1.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %7)
  %cmp.not.i = icmp eq i16 %5, %7
  br i1 %cmp.not.i, label %if.end.i, label %if.end.if.end5_crit_edge

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %cmp6.i = icmp eq i16 %5, 0
  br i1 %cmp6.i, label %land.lhs.true.i, label %if.end.i.out_crit_edge

if.end.i.out_crit_edge:                           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

land.lhs.true.i:                                  ; preds = %if.end.i
  %8 = ptrtoint ptr %qos to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %qos, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %cmp9.i = icmp eq i16 %9, 0
  br i1 %cmp9.i, label %land.lhs.true.i.if.end5_crit_edge, label %lor.lhs.false.i

land.lhs.true.i.if.end5_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %qos11.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 7, i32 1, i32 1
  %10 = ptrtoint ptr %qos11.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %qos11.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %cmp13.i = icmp eq i16 %11, 0
  br i1 %cmp13.i, label %lor.lhs.false.i.if.end5_crit_edge, label %lor.lhs.false.i.out_crit_edge

lor.lhs.false.i.out_crit_edge:                    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

lor.lhs.false.i.if.end5_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end5:                                          ; preds = %lor.lhs.false.i.if.end5_crit_edge, %land.lhs.true.i.if.end5_crit_edge, %if.end.if.end5_crit_edge
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %12 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %back.i, align 4
  %14 = zext i16 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.758)
  switch i16 %state, label %if.end5.i [
    i16 2, label %if.then8
    i16 1, label %if.then.i
  ]

if.then8:                                         ; preds = %if.end5
  %vport_id.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %15 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %vport_id.i, align 2
  %call.i = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %13, i16 noundef zeroext %16, i16 noundef zeroext %5, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i52, label %if.then8.cleanup_crit_edge

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i52:                                       ; preds = %if.then8
  %17 = ptrtoint ptr %vlan_tag1.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %vlan_tag1.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %cmp.i = icmp eq i16 %18, 0
  %19 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %vport_id.i, align 2
  br i1 %cmp.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #18
  %call5.i = tail call fastcc i32 @hclge_set_vf_vlan_common(ptr noundef %13, i16 noundef zeroext %20, i1 noundef zeroext true, i16 noundef zeroext 0) #16
  br label %if.end9.i

if.else.i:                                        ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #18
  %call8.i = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %13, i16 noundef zeroext %20, i16 noundef zeroext %18, i1 noundef zeroext true) #16
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.else.i, %if.then3.i
  %ret.0.i = phi i32 [ %call5.i, %if.then3.i ], [ %call8.i, %if.else.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool10.not.i = icmp eq i32 %ret.0.i, 0
  br i1 %tobool10.not.i, label %out.thread, label %do.end.i

out.thread:                                       ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %port_base_vlan_cfg to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 2, ptr %port_base_vlan_cfg, align 4
  br label %if.else21

do.end.i:                                         ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %13, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  %24 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vport_id.i, align 2
  %conv13.i = zext i16 %25 to i32
  %26 = ptrtoint ptr %vlan_tag1.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %vlan_tag1.i, align 2
  %conv15.i = zext i16 %27 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.136, i32 noundef %conv13.i, i32 noundef %conv15.i, i32 noundef %ret.0.i) #20
  br label %cleanup

if.then.i:                                        ; preds = %if.end5
  %vlan_list.i.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 24
  %28 = ptrtoint ptr %vlan_list.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vlan_list.i.i, align 8
  %cmp.not32.i.i = icmp eq ptr %29, %vlan_list.i.i
  br i1 %cmp.not32.i.i, label %if.then.i.hclge_rm_vport_all_vlan_table.exit.i_crit_edge, label %for.body.lr.ph.i.i

if.then.i.hclge_rm_vport_all_vlan_table.exit.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_rm_vport_all_vlan_table.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.then.i
  %vport_id.i.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %vlan.033.i.i = phi ptr [ %29, %for.body.lr.ph.i.i ], [ %tmp.035.i.i, %if.end.i.i.for.body.i.i_crit_edge ]
  %30 = ptrtoint ptr %vlan.033.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %tmp.035.i.i = load ptr, ptr %vlan.033.i.i, align 4
  %hd_tbl_status.i.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.033.i.i, i32 0, i32 1
  %31 = ptrtoint ptr %hd_tbl_status.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %hd_tbl_status.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i.i = icmp eq i32 %32, 0
  br i1 %tobool.not.i.i, label %for.body.i.i.if.end.i.i_crit_edge, label %if.then.i.i

for.body.i.i.if.end.i.i_crit_edge:                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %33 = ptrtoint ptr %vport_id.i.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %vport_id.i.i, align 2
  %vlan_id.i.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.033.i.i, i32 0, i32 2
  %35 = ptrtoint ptr %vlan_id.i.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %vlan_id.i.i, align 4
  %37 = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %13, i16 noundef zeroext %34, i16 noundef zeroext %36, i1 noundef zeroext true) #16
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i.if.end.i.i_crit_edge
  %38 = ptrtoint ptr %hd_tbl_status.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %hd_tbl_status.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %tmp.035.i.i, %vlan_list.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i.hclge_rm_vport_all_vlan_table.exit.i_crit_edge, label %if.end.i.i.for.body.i.i_crit_edge

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

if.end.i.i.hclge_rm_vport_all_vlan_table.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_rm_vport_all_vlan_table.exit.i

hclge_rm_vport_all_vlan_table.exit.i:             ; preds = %if.end.i.i.hclge_rm_vport_all_vlan_table.exit.i_crit_edge, %if.then.i.hclge_rm_vport_all_vlan_table.exit.i_crit_edge
  %vport_id18.i.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %39 = ptrtoint ptr %vport_id18.i.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %vport_id18.i.i, align 2
  %conv.i.i = zext i16 %40 to i32
  %vf_vlan_full.i.i = getelementptr inbounds %struct.hclge_dev, ptr %13, i32 0, i32 64
  tail call void @_clear_bit(i32 noundef %conv.i.i, ptr noundef %vf_vlan_full.i.i) #16
  %41 = ptrtoint ptr %vport_id18.i.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %vport_id18.i.i, align 2
  %call.i56 = tail call fastcc i32 @hclge_set_vf_vlan_common(ptr noundef %13, i16 noundef zeroext %42, i1 noundef zeroext true, i16 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i56)
  %tobool.not.i57 = icmp eq i32 %call.i56, 0
  br i1 %tobool.not.i57, label %if.end11, label %hclge_rm_vport_all_vlan_table.exit.i.cleanup_crit_edge

hclge_rm_vport_all_vlan_table.exit.i.cleanup_crit_edge: ; preds = %hclge_rm_vport_all_vlan_table.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5.i:                                        ; preds = %if.end5
  %vport_id6.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %43 = ptrtoint ptr %vport_id6.i to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %vport_id6.i, align 2
  %call7.i = tail call fastcc i32 @hclge_set_vf_vlan_common(ptr noundef %13, i16 noundef zeroext %44, i1 noundef zeroext false, i16 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end10.i, label %if.end5.i.cleanup_crit_edge

if.end5.i.cleanup_crit_edge:                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10.i:                                       ; preds = %if.end5.i
  %45 = ptrtoint ptr %vport_id6.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %vport_id6.i, align 2
  %47 = ptrtoint ptr %vlan_tag1.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %vlan_tag1.i, align 2
  %call14.i = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %13, i16 noundef zeroext %46, i16 noundef zeroext %48, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.end17.i, label %if.end10.i.cleanup_crit_edge

if.end10.i.cleanup_crit_edge:                     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end17.i:                                       ; preds = %if.end10.i
  %49 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %back.i, align 4
  %vlan_list.i37.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 24
  %51 = ptrtoint ptr %vlan_list.i37.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %vlan_list.i37.i, align 8
  %cmp.not32.i38.i = icmp eq ptr %52, %vlan_list.i37.i
  br i1 %cmp.not32.i38.i, label %if.end17.i.out_crit_edge, label %if.end17.i.for.body.i44.i_crit_edge

if.end17.i.for.body.i44.i_crit_edge:              ; preds = %if.end17.i
  br label %for.body.i44.i

if.end17.i.out_crit_edge:                         ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

for.body.i44.i:                                   ; preds = %if.end10.i.i.for.body.i44.i_crit_edge, %if.end17.i.for.body.i44.i_crit_edge
  %vlan.033.i41.i = phi ptr [ %tmp.034.i.i, %if.end10.i.i.for.body.i44.i_crit_edge ], [ %52, %if.end17.i.for.body.i44.i_crit_edge ]
  %53 = ptrtoint ptr %vlan.033.i41.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %tmp.034.i.i = load ptr, ptr %vlan.033.i41.i, align 4
  %hd_tbl_status.i42.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.033.i41.i, i32 0, i32 1
  %54 = ptrtoint ptr %hd_tbl_status.i42.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %hd_tbl_status.i42.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool.not.i43.i = icmp eq i32 %55, 0
  br i1 %tobool.not.i43.i, label %if.then.i46.i, label %for.body.i44.i.if.end10.i.i_crit_edge

for.body.i44.i.if.end10.i.i_crit_edge:            ; preds = %for.body.i44.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i

if.then.i46.i:                                    ; preds = %for.body.i44.i
  %56 = ptrtoint ptr %vport_id6.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %vport_id6.i, align 2
  %vlan_id.i45.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.033.i41.i, i32 0, i32 2
  %58 = ptrtoint ptr %vlan_id.i45.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %vlan_id.i45.i, align 4
  %call.i.i = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %50, i16 noundef zeroext %57, i16 noundef zeroext %59, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.then.i46.i.if.end10.i.i_crit_edge, label %do.end.i.i

if.then.i46.i.if.end10.i.i_crit_edge:             ; preds = %if.then.i46.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i

do.end.i.i:                                       ; preds = %if.then.i46.i
  call void @__sanitizer_cov_trace_pc() #18
  %60 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %50, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %61, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.138, i32 noundef %call.i.i) #20
  br label %cleanup

if.end10.i.i:                                     ; preds = %if.then.i46.i.if.end10.i.i_crit_edge, %for.body.i44.i.if.end10.i.i_crit_edge
  %62 = ptrtoint ptr %hd_tbl_status.i42.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 1, ptr %hd_tbl_status.i42.i, align 4
  %cmp.not.i47.i = icmp eq ptr %tmp.034.i.i, %vlan_list.i37.i
  br i1 %cmp.not.i47.i, label %if.end10.i.i.out_crit_edge, label %if.end10.i.i.for.body.i44.i_crit_edge

if.end10.i.i.for.body.i44.i_crit_edge:            ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i44.i

if.end10.i.i.out_crit_edge:                       ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end11:                                         ; preds = %hclge_rm_vport_all_vlan_table.exit.i
  %63 = ptrtoint ptr %vport_id18.i.i to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %vport_id18.i.i, align 2
  %65 = ptrtoint ptr %vlan_tag to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %vlan_tag, align 2
  %call4.i = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %13, i16 noundef zeroext %64, i16 noundef zeroext %66, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool12.not = icmp eq i32 %call4.i, 0
  br i1 %tobool12.not, label %if.end11.out_crit_edge, label %if.end11.cleanup_crit_edge

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11.out_crit_edge:                           ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

out:                                              ; preds = %if.end11.out_crit_edge, %if.end10.i.i.out_crit_edge, %if.end17.i.out_crit_edge, %lor.lhs.false.i.out_crit_edge, %if.end.i.out_crit_edge
  %67 = ptrtoint ptr %port_base_vlan_cfg to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 %state, ptr %port_base_vlan_cfg, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %state)
  %cmp18 = icmp eq i16 %state, 0
  br i1 %cmp18, label %out.if.end23_crit_edge, label %out.if.else21_crit_edge

out.if.else21_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else21

out.if.end23_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

if.else21:                                        ; preds = %out.if.else21_crit_edge, %out.thread
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %out.if.end23_crit_edge
  %.sink = phi i32 [ 1, %if.else21 ], [ 0, %out.if.end23_crit_edge ]
  %port_base_vlan_state22 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 7
  %68 = ptrtoint ptr %port_base_vlan_state22 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %.sink, ptr %port_base_vlan_state22, align 8
  %69 = call ptr @memcpy(ptr %vlan_info2, ptr %vlan_info, i32 6)
  %back.i61 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %70 = ptrtoint ptr %back.i61 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %back.i61, align 4
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %71, i32 0, i32 1
  %72 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %ae_dev.i, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %73, i32 0, i32 7
  %74 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %caps.i, align 4
  %76 = and i32 %75, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %tobool.not.i62 = icmp eq i32 %76, 0
  br i1 %tobool.not.i62, label %if.end23.cleanup_crit_edge, label %if.then.i63

if.end23.cleanup_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i63:                                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  %state.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then.i63, %if.end23.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %do.end.i.i, %if.end10.i.cleanup_crit_edge, %if.end5.i.cleanup_crit_edge, %hclge_rm_vport_all_vlan_table.exit.i.cleanup_crit_edge, %do.end.i, %if.then8.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call4.i, %if.end11.cleanup_crit_edge ], [ 0, %if.end23.cleanup_crit_edge ], [ 0, %if.then.i63 ], [ %call.i.i, %do.end.i.i ], [ %call14.i, %if.end10.i.cleanup_crit_edge ], [ %call7.i, %if.end5.i.cleanup_crit_edge ], [ %call.i56, %hclge_rm_vport_all_vlan_table.exit.i.cleanup_crit_edge ], [ %ret.0.i, %do.end.i ], [ %call.i, %if.then8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_vlan_offload_cfg(ptr noundef %vport, i16 noundef zeroext %port_base_vlan_state, i16 noundef zeroext %vlan_tag, i8 noundef zeroext %qos) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %port_base_vlan_state)
  %cmp = icmp eq i16 %port_base_vlan_state, 0
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.else

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %pdev = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 1
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 47, i32 %5)
  %cmp4 = icmp ugt i32 %5, 47
  %frombool = zext i1 %cmp4 to i8
  %conv10 = zext i8 %qos to i16
  %shl = shl i16 %conv10, 13
  %or = or i16 %shl, %vlan_tag
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %frombool.sink = phi i8 [ %frombool, %if.else ], [ 1, %entry.if.end_crit_edge ]
  %.sink = phi i8 [ 1, %if.else ], [ 0, %entry.if.end_crit_edge ]
  %or.sink = phi i16 [ %or, %if.else ], [ 0, %entry.if.end_crit_edge ]
  %6 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %frombool.sink, ptr %6, align 4
  %8 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8, i32 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %.sink, ptr %8, align 4
  %10 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8, i32 6
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %or.sink, ptr %10, align 2
  %accept_untag1 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8, i32 1
  %12 = ptrtoint ptr %accept_untag1 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %accept_untag1, align 1
  %accept_tag2 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8, i32 2
  %13 = ptrtoint ptr %accept_tag2 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 1, ptr %accept_tag2, align 2
  %accept_untag2 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8, i32 3
  %14 = ptrtoint ptr %accept_untag2 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 1, ptr %accept_untag2, align 1
  %insert_tag2_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8, i32 5
  %15 = ptrtoint ptr %insert_tag2_en to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %insert_tag2_en, align 1
  %default_tag2 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8, i32 7
  %16 = ptrtoint ptr %default_tag2 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 0, ptr %default_tag2, align 4
  %tag_shift_mode_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 8, i32 8
  %17 = ptrtoint ptr %tag_shift_mode_en to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 1, ptr %tag_shift_mode_en, align 2
  %rxvlan_cfg = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9
  %18 = ptrtoint ptr %rxvlan_cfg to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %rxvlan_cfg, align 8, !range !1456
  %. = select i1 %cmp, i8 0, i8 %19
  %.79 = select i1 %cmp, i8 %19, i8 1
  %not.cmp = xor i1 %cmp, true
  %.80 = zext i1 %not.cmp to i8
  %20 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 1
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %., ptr %20, align 1
  %22 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 2
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %.79, ptr %22, align 2
  %24 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 6
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %.80, ptr %24, align 2
  %strip_tag1_discard_en = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 5
  %26 = ptrtoint ptr %strip_tag1_discard_en to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 0, ptr %strip_tag1_discard_en, align 1
  %vlan1_vlan_prionly = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 3
  %27 = ptrtoint ptr %vlan1_vlan_prionly to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %vlan1_vlan_prionly, align 1
  %vlan2_vlan_prionly = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 9, i32 4
  %28 = ptrtoint ptr %vlan2_vlan_prionly to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %vlan2_vlan_prionly, align 4
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %29 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %back.i, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %31 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %32 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 1
  %33 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 2
  %34 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 3841, i1 noundef zeroext false) #16
  %35 = ptrtoint ptr %10 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %10, align 2
  %37 = call i16 @llvm.bswap.i16(i16 %36) #16
  %38 = ptrtoint ptr %32 to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %32, align 4
  %39 = ptrtoint ptr %default_tag2 to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %default_tag2, align 2
  %41 = call i16 @llvm.bswap.i16(i16 %40) #16
  %def_vlan_tag2.i = getelementptr inbounds %struct.hclge_vport_vtag_tx_cfg_cmd, ptr %31, i32 0, i32 4
  %42 = ptrtoint ptr %def_vlan_tag2.i to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %41, ptr %def_vlan_tag2.i, align 2
  %43 = ptrtoint ptr %6 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %6, align 2, !range !1456
  %45 = ptrtoint ptr %accept_untag1 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %accept_untag1, align 1, !range !1456
  %47 = shl nuw nsw i8 %46, 1
  %48 = or i8 %47, %44
  %49 = ptrtoint ptr %accept_tag2 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %accept_tag2, align 2, !range !1456
  %51 = shl nuw nsw i8 %50, 5
  %52 = or i8 %48, %51
  %53 = ptrtoint ptr %accept_untag2 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %accept_untag2, align 1, !range !1456
  %55 = shl nuw nsw i8 %54, 6
  %56 = or i8 %52, %55
  %57 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %8, align 2, !range !1456
  %59 = shl nuw nsw i8 %58, 2
  %60 = ptrtoint ptr %insert_tag2_en to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %insert_tag2_en, align 1, !range !1456
  %62 = shl nuw nsw i8 %61, 3
  %63 = ptrtoint ptr %tag_shift_mode_en to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %tag_shift_mode_en, align 2, !range !1456
  %65 = shl nuw i8 %64, 7
  %.masked173.masked.i = or i8 %56, %59
  %.masked175.i = or i8 %.masked173.masked.i, %62
  %66 = or i8 %.masked175.i, %65
  %67 = ptrtoint ptr %31 to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 %66, ptr %31, align 4
  %vport_id.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %68 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %vport_id.i, align 2
  %70 = lshr i16 %69, 6
  %conv115.i = trunc i16 %70 to i8
  %vf_offset.i = getelementptr inbounds %struct.hclge_vport_vtag_tx_cfg_cmd, ptr %31, i32 0, i32 1
  %71 = ptrtoint ptr %vf_offset.i to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %conv115.i, ptr %vf_offset.i, align 1
  %rem.i = lshr i16 %69, 3
  %div118176.i = and i16 %rem.i, 7
  %72 = trunc i16 %69 to i8
  %rem122.i = and i8 %72, 7
  %shl123.i = shl nuw i8 1, %rem122.i
  %idxprom.i = zext i16 %div118176.i to i32
  %arrayidx.i = getelementptr [8 x i8], ptr %33, i32 0, i32 %idxprom.i
  %73 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %73)
  store i8 %shl123.i, ptr %arrayidx.i, align 1
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %30, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool125.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool125.not.i, label %if.end47, label %hclge_set_vlan_tx_offload_cfg.exit

hclge_set_vlan_tx_offload_cfg.exit:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %74 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %30, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %75, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.134, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

if.end47:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %call48 = call fastcc i32 @hclge_set_vlan_rx_offload_cfg(ptr noundef %vport)
  br label %cleanup

cleanup:                                          ; preds = %if.end47, %hclge_set_vlan_tx_offload_cfg.exit
  %retval.0 = phi i32 [ %call48, %if.end47 ], [ %call.i.i, %hclge_set_vlan_tx_offload_cfg.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_set_vlan_filter(ptr noundef %handle, i16 zeroext %proto, i16 noundef zeroext %vlan_id, i1 noundef zeroext %is_kill) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %state = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state, align 4
  %8 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %hclge_get_vport.exit
  %9 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %state, align 4
  %11 = and i32 %10, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool4.not = icmp ne i32 %11, 0
  %12 = and i1 %tobool4.not, %is_kill
  br i1 %12, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

land.lhs.true:                                    ; preds = %hclge_get_vport.exit
  br i1 %is_kill, label %land.lhs.true.if.then_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %land.lhs.true.if.then_crit_edge, %lor.lhs.false.if.then_crit_edge
  %conv = zext i16 %vlan_id to i32
  %vlan_del_fail_bmap = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 6
  tail call void @_set_bit(i32 noundef %conv, ptr noundef %vlan_del_fail_bmap) #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge
  %port_base_vlan_state = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 7
  %13 = ptrtoint ptr %port_base_vlan_state to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %port_base_vlan_state, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp = icmp eq i32 %14, 0
  br i1 %cmp, label %if.end10, label %if.end.if.then12_crit_edge

if.end.if.then12_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then12

if.end10:                                         ; preds = %if.end
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 11
  %15 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %vport_id, align 2
  %call9 = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %5, i16 noundef zeroext %16, i16 noundef zeroext %vlan_id, i1 noundef zeroext %is_kill)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool11.not = icmp eq i32 %call9, 0
  br i1 %tobool11.not, label %if.end10.if.then12_crit_edge, label %if.else17

if.end10.if.then12_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then12

if.then12:                                        ; preds = %if.end10.if.then12_crit_edge, %if.end.if.then12_crit_edge
  %vlan_list.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 24
  br i1 %is_kill, label %if.then12.for.cond.i_crit_edge, label %if.then12.for.cond.i51_crit_edge

if.then12.for.cond.i51_crit_edge:                 ; preds = %if.then12
  br label %for.cond.i51

if.then12.for.cond.i_crit_edge:                   ; preds = %if.then12
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.then12.for.cond.i_crit_edge
  %vlan.0.in.i = phi ptr [ %vlan.0.i, %for.body.i.for.cond.i_crit_edge ], [ %vlan_list.i, %if.then12.for.cond.i_crit_edge ]
  %17 = ptrtoint ptr %vlan.0.in.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %vlan.0.i = load ptr, ptr %vlan.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %vlan.0.i, %vlan_list.i
  br i1 %cmp.not.i, label %for.cond.i.if.end24_crit_edge, label %for.body.i

for.cond.i.if.end24_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

for.body.i:                                       ; preds = %for.cond.i
  %vlan_id8.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.0.i, i32 0, i32 2
  %18 = ptrtoint ptr %vlan_id8.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vlan_id8.i, align 4
  %cmp10.i = icmp eq i16 %19, %vlan_id
  br i1 %cmp10.i, label %if.end.i, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

if.end.i:                                         ; preds = %for.body.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %vlan.0.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.i.list_del.exit.i_crit_edge

if.end.i.list_del.exit.i_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %vlan.0.i, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i.i, align 4
  %22 = ptrtoint ptr %vlan.0.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vlan.0.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.end.i.list_del.exit.i_crit_edge
  %26 = ptrtoint ptr %vlan.0.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 256 to ptr), ptr %vlan.0.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %vlan.0.i, i32 0, i32 1
  %27 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef %vlan.0.i) #16
  br label %if.end24

for.cond.i51:                                     ; preds = %for.body.i54.for.cond.i51_crit_edge, %if.then12.for.cond.i51_crit_edge
  %vlan.0.in.i48 = phi ptr [ %vlan.0.i49, %for.body.i54.for.cond.i51_crit_edge ], [ %vlan_list.i, %if.then12.for.cond.i51_crit_edge ]
  %28 = ptrtoint ptr %vlan.0.in.i48 to i32
  call void @__asan_load4_noabort(i32 %28)
  %vlan.0.i49 = load ptr, ptr %vlan.0.in.i48, align 4
  %cmp.not.i50 = icmp eq ptr %vlan.0.i49, %vlan_list.i
  br i1 %cmp.not.i50, label %for.end.i, label %for.body.i54

for.body.i54:                                     ; preds = %for.cond.i51
  %vlan_id8.i52 = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.0.i49, i32 0, i32 2
  %29 = ptrtoint ptr %vlan_id8.i52 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %vlan_id8.i52, align 4
  %cmp10.i53 = icmp eq i16 %30, %vlan_id
  br i1 %cmp10.i53, label %for.body.i54.if.end24_crit_edge, label %for.body.i54.for.cond.i51_crit_edge

for.body.i54.for.cond.i51_crit_edge:              ; preds = %for.body.i54
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i51

for.body.i54.if.end24_crit_edge:                  ; preds = %for.body.i54
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

for.end.i:                                        ; preds = %for.cond.i51
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %31 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %31, i32 noundef 3520, i32 noundef 16) #21
  %tobool.not.i55 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i55, label %for.end.i.if.end24_crit_edge, label %if.end18.i

for.end.i.if.end24_crit_edge:                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

if.end18.i:                                       ; preds = %for.end.i
  %conv20.i = zext i1 %cmp to i32
  %hd_tbl_status.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %call7.i.i.i, i32 0, i32 1
  %32 = ptrtoint ptr %hd_tbl_status.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %conv20.i, ptr %hd_tbl_status.i, align 8
  %vlan_id21.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %call7.i.i.i, i32 0, i32 2
  %33 = ptrtoint ptr %vlan_id21.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %vlan_id, ptr %vlan_id21.i, align 4
  %prev.i.i56 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 24, i32 1
  %34 = ptrtoint ptr %prev.i.i56 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i.i56, align 4
  %call.i.i.i57 = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i, ptr noundef %35, ptr noundef %vlan_list.i) #16
  br i1 %call.i.i.i57, label %if.end.i.i.i58, label %if.end18.i.if.end24_crit_edge

if.end18.i.if.end24_crit_edge:                    ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

if.end.i.i.i58:                                   ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %prev.i.i56 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %call7.i.i.i, ptr %prev.i.i56, align 4
  %37 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %vlan_list.i, ptr %call7.i.i.i, align 8
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i, i32 0, i32 1
  %38 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev3.i.i.i, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %call7.i.i.i, ptr %35, align 4
  br label %if.end24

if.else17:                                        ; preds = %if.end10
  br i1 %is_kill, label %if.then19, label %if.else17.if.end24_crit_edge

if.else17.if.end24_crit_edge:                     ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

if.then19:                                        ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #18
  %conv20 = zext i16 %vlan_id to i32
  %vlan_del_fail_bmap21 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 6
  tail call void @_set_bit(i32 noundef %conv20, ptr noundef %vlan_del_fail_bmap21) #16
  br label %if.end24

if.end24:                                         ; preds = %if.then19, %if.else17.if.end24_crit_edge, %if.end.i.i.i58, %if.end18.i.if.end24_crit_edge, %for.end.i.if.end24_crit_edge, %for.body.i54.if.end24_crit_edge, %list_del.exit.i, %for.cond.i.if.end24_crit_edge
  %ret.063 = phi i32 [ %call9, %if.else17.if.end24_crit_edge ], [ %call9, %if.then19 ], [ 0, %list_del.exit.i ], [ 0, %for.end.i.if.end24_crit_edge ], [ 0, %if.end18.i.if.end24_crit_edge ], [ 0, %if.end.i.i.i58 ], [ 0, %for.cond.i.if.end24_crit_edge ], [ 0, %for.body.i54.if.end24_crit_edge ]
  %40 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %back, align 4
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ae_dev.i, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %43, i32 0, i32 7
  %44 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %caps.i, align 4
  %46 = and i32 %45, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i59 = icmp eq i32 %46, 0
  br i1 %tobool.not.i59, label %if.end24.cleanup_crit_edge, label %if.then.i

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  %state.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end24.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -16, %if.then ], [ %ret.063, %if.end24.cleanup_crit_edge ], [ %ret.063, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_set_vport_mtu(ptr nocapture noundef %vport, i32 noundef %new_mtu) local_unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %add2 = add i32 %new_mtu, 26
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %add2)
  %cmp = icmp slt i32 %add2, 64
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ae_dev, align 4
  %max_frm_size3 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 5, i32 8
  %4 = ptrtoint ptr %max_frm_size3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %max_frm_size3, align 2
  %conv = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %add2, i32 %conv)
  %cmp4 = icmp ugt i32 %add2, %conv
  br i1 %cmp4, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %6 = tail call i32 @llvm.umax.i32(i32 %add2, i32 1526)
  %vport_lock = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 61
  tail call void @mutex_lock_nested(ptr noundef %vport_lock, i32 noundef 0) #16
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %7 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %vport_id, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool.not = icmp eq i16 %8, 0
  br i1 %tobool.not, label %for.cond.preheader, label %land.lhs.true

for.cond.preheader:                               ; preds = %if.end
  %num_alloc_vport = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 24
  %9 = ptrtoint ptr %num_alloc_vport to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %num_alloc_vport, align 2
  %conv20 = zext i16 %10 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %10)
  %cmp21103 = icmp ugt i16 %10, 1
  br i1 %cmp21103, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %vport23 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 52
  %11 = ptrtoint ptr %vport23 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vport23, align 4
  br label %for.body

land.lhs.true:                                    ; preds = %if.end
  %mps = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 60
  %13 = ptrtoint ptr %mps to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mps, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %14)
  %cmp9 = icmp ugt i32 %6, %14
  br i1 %cmp9, label %if.then11, label %if.then15

if.then11:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

if.then15:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %mps16 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 17
  %15 = ptrtoint ptr %mps16 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %6, ptr %mps16, align 8
  tail call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.0104, 1
  %exitcond.not = icmp eq i32 %inc, %conv20
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.lr.ph
  %i.0104 = phi i32 [ 1, %for.body.lr.ph ], [ %inc, %for.cond.for.body_crit_edge ]
  %mps24 = getelementptr %struct.hclge_vport, ptr %12, i32 %i.0104, i32 17
  %16 = ptrtoint ptr %mps24 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mps24, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %17)
  %cmp25 = icmp ult i32 %6, %17
  br i1 %cmp25, label %if.then27, label %for.cond

if.then27:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %vport.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 52
  %18 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vport.i, align 4
  %nic.i = getelementptr inbounds %struct.hclge_vport, ptr %19, i32 0, i32 13
  %nic_client.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 54
  %20 = ptrtoint ptr %nic_client.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %nic_client.i, align 4
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 5
  %22 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %state.i, align 4
  %24 = and i32 %23, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i = icmp eq i32 %24, 0
  %tobool1.not.i = icmp eq ptr %21, null
  %or.cond.i = select i1 %tobool.not.i, i1 true, i1 %tobool1.not.i
  br i1 %or.cond.i, label %for.end.hclge_notify_client.exit_crit_edge, label %if.end.i

for.end.hclge_notify_client.exit_crit_edge:       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_notify_client.exit

if.end.i:                                         ; preds = %for.end
  %ops.i = getelementptr inbounds %struct.hnae3_client, ptr %21, i32 0, i32 3
  %25 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ops.i, align 4
  %reset_notify.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %reset_notify.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %reset_notify.i, align 4
  %tobool2.not.i = icmp eq ptr %28, null
  br i1 %tobool2.not.i, label %if.end.i.hclge_notify_client.exit_crit_edge, label %if.end4.i

if.end.i.hclge_notify_client.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_notify_client.exit

if.end4.i:                                        ; preds = %if.end.i
  %call7.i = tail call i32 %28(ptr noundef %nic.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end4.i.hclge_notify_client.exit_crit_edge, label %do.end.i

if.end4.i.hclge_notify_client.exit_crit_edge:     ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_notify_client.exit

do.end.i:                                         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %1, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.23, i32 noundef 1, i32 noundef %call7.i) #20
  br label %hclge_notify_client.exit

hclge_notify_client.exit:                         ; preds = %do.end.i, %if.end4.i.hclge_notify_client.exit_crit_edge, %if.end.i.hclge_notify_client.exit_crit_edge, %for.end.hclge_notify_client.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %31 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %32 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 776, i1 noundef zeroext false) #16
  %conv.i = trunc i32 %6 to i16
  %33 = call i16 @llvm.bswap.i16(i16 %conv.i) #16
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %31, align 4
  %min_frm_size.i = getelementptr inbounds %struct.hclge_config_max_frm_size_cmd, ptr %31, i32 0, i32 1
  %35 = ptrtoint ptr %min_frm_size.i to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 64, ptr %min_frm_size.i, align 2
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool31.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool31.not, label %if.end33, label %do.end

do.end:                                           ; preds = %hclge_notify_client.exit
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.48, i32 noundef %call.i.i) #20
  br label %out

if.end33:                                         ; preds = %hclge_notify_client.exit
  %mps34 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 60
  %38 = ptrtoint ptr %mps34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %6, ptr %mps34, align 4
  %mps35 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 17
  %39 = ptrtoint ptr %mps35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %6, ptr %mps35, align 8
  %call36 = call i32 @hclge_buffer_alloc(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.end33.out_crit_edge, label %do.end41

if.end33.out_crit_edge:                           ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

do.end41:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %1, align 8
  %dev43 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev43, ptr noundef nonnull @.str.51, i32 noundef %call36) #20
  br label %out

out:                                              ; preds = %do.end41, %if.end33.out_crit_edge, %do.end
  %ret.0 = phi i32 [ %call.i.i, %do.end ], [ %call36, %do.end41 ], [ 0, %if.end33.out_crit_edge ]
  %42 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %vport.i, align 4
  %nic.i86 = getelementptr inbounds %struct.hclge_vport, ptr %43, i32 0, i32 13
  %44 = ptrtoint ptr %nic_client.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %nic_client.i, align 4
  %46 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %state.i, align 4
  %48 = and i32 %47, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i89 = icmp eq i32 %48, 0
  %tobool1.not.i90 = icmp eq ptr %45, null
  %or.cond.i91 = select i1 %tobool.not.i89, i1 true, i1 %tobool1.not.i90
  br i1 %or.cond.i91, label %out.hclge_notify_client.exit102_crit_edge, label %if.end.i95

out.hclge_notify_client.exit102_crit_edge:        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_notify_client.exit102

if.end.i95:                                       ; preds = %out
  %ops.i92 = getelementptr inbounds %struct.hnae3_client, ptr %45, i32 0, i32 3
  %49 = ptrtoint ptr %ops.i92 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %ops.i92, align 4
  %reset_notify.i93 = getelementptr inbounds %struct.hnae3_client_ops, ptr %50, i32 0, i32 3
  %51 = ptrtoint ptr %reset_notify.i93 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %reset_notify.i93, align 4
  %tobool2.not.i94 = icmp eq ptr %52, null
  br i1 %tobool2.not.i94, label %if.end.i95.hclge_notify_client.exit102_crit_edge, label %if.end4.i98

if.end.i95.hclge_notify_client.exit102_crit_edge: ; preds = %if.end.i95
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_notify_client.exit102

if.end4.i98:                                      ; preds = %if.end.i95
  %call7.i96 = call i32 %52(ptr noundef %nic.i86, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i96)
  %tobool8.not.i97 = icmp eq i32 %call7.i96, 0
  br i1 %tobool8.not.i97, label %if.end4.i98.hclge_notify_client.exit102_crit_edge, label %do.end.i100

if.end4.i98.hclge_notify_client.exit102_crit_edge: ; preds = %if.end4.i98
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_notify_client.exit102

do.end.i100:                                      ; preds = %if.end4.i98
  call void @__sanitizer_cov_trace_pc() #18
  %53 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %1, align 8
  %dev.i99 = getelementptr inbounds %struct.pci_dev, ptr %54, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i99, ptr noundef nonnull @.str.23, i32 noundef 0, i32 noundef %call7.i96) #20
  br label %hclge_notify_client.exit102

hclge_notify_client.exit102:                      ; preds = %do.end.i100, %if.end4.i98.hclge_notify_client.exit102_crit_edge, %if.end.i95.hclge_notify_client.exit102_crit_edge, %out.hclge_notify_client.exit102_crit_edge
  call void @mutex_unlock(ptr noundef %vport_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_notify_client.exit102, %if.then27, %if.then15, %if.then11, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.then11 ], [ 0, %if.then15 ], [ -22, %if.then27 ], [ %ret.0, %hclge_notify_client.exit102 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @hclge_covert_handle_qid_global(ptr nocapture noundef readonly %handle, i16 noundef zeroext %queue_id) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tqp1 = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 5, i32 0, i32 9
  %0 = ptrtoint ptr %tqp1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tqp1, align 8
  %idxprom = zext i16 %queue_id to i32
  %arrayidx = getelementptr ptr, ptr %1, i32 %idxprom
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %index = getelementptr i8, ptr %3, i32 44
  %4 = ptrtoint ptr %index to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %index, align 8
  ret i16 %5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_reset_tqp(ptr nocapture noundef readonly %handle) #0 align 64 {
entry:
  %desc.i65.i.i = alloca %struct.hclge_desc, align 4
  %desc.i60.i.i = alloca %struct.hclge_desc, align 4
  %desc.i.i.i = alloca %struct.hclge_desc, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %hclge_get_vport.exit, label %hclge_get_vport.exit.thread

hclge_get_vport.exit:                             ; preds = %entry
  %vport_id = getelementptr i8, ptr %handle, i32 -6
  %2 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vport_id, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge, label %hclge_get_vport.exit.if.end4_crit_edge

hclge_get_vport.exit.if.end4_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i

hclge_get_vport.exit.thread:                      ; preds = %entry
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp eq i32 %5, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  %add.ptr9.i27 = getelementptr i8, ptr %handle, i32 %..i
  %vport_id29 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i27, i32 0, i32 11
  %6 = ptrtoint ptr %vport_id29 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vport_id29, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not30 = icmp eq i16 %7, 0
  br i1 %tobool.not30, label %if.else.i.i, label %hclge_get_vport.exit.thread.if.end4_crit_edge

hclge_get_vport.exit.thread.if.end4_crit_edge:    ; preds = %hclge_get_vport.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.else.i.i:                                      ; preds = %hclge_get_vport.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.i.i = icmp eq i32 %9, 1
  %..i.i = select i1 %cmp.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i

hclge_get_vport.exit.i:                           ; preds = %if.else.i.i, %hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge
  %10 = phi i32 [ %..i, %if.else.i.i ], [ -560, %hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge ]
  %.sink.i.i = phi i32 [ %..i.i, %if.else.i.i ], [ -560, %hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge ]
  %11 = getelementptr i8, ptr %handle, i32 %10
  %.in = getelementptr inbounds %struct.hclge_vport, ptr %11, i32 0, i32 12
  %12 = ptrtoint ptr %.in to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %.in, align 4
  %num_tqps.i = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 5, i32 0, i32 8
  %14 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %num_tqps.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %cmp12.not.i = icmp eq i16 %15, 0
  br i1 %cmp12.not.i, label %hclge_get_vport.exit.i.if.end4_crit_edge, label %for.body.lr.ph.i

hclge_get_vport.exit.i.if.end4_crit_edge:         ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

for.body.lr.ph.i:                                 ; preds = %hclge_get_vport.exit.i
  %add.ptr9.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 12
  %16 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %back.i, align 4
  %18 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %stream_id2.i.i = getelementptr inbounds %struct.hclge_cfg_com_tqp_queue_cmd, ptr %18, i32 0, i32 1
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %17, i32 0, i32 2
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw i16 %i.013.i, 1
  %19 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %num_tqps.i, align 2
  %cmp.i13 = icmp ult i16 %inc.i, %20
  br i1 %cmp.i13, label %for.cond.i.for.body.i_crit_edge, label %for.cond.i.if.end4_crit_edge

for.cond.i.if.end4_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.013.i = phi i16 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.cond.i.for.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %21 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 2848, i1 noundef zeroext false) #16
  %22 = call i16 @llvm.bswap.i16(i16 %i.013.i) #16
  %23 = ptrtoint ptr %18 to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %22, ptr %18, align 4
  %24 = ptrtoint ptr %stream_id2.i.i to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 0, ptr %stream_id2.i.i, align 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool4.not.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool4.not.i, label %for.cond.i, label %do.end

do.end:                                           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %13, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.53, i32 noundef %call.i.i.i) #20
  br label %cleanup

if.end4:                                          ; preds = %for.cond.i.if.end4_crit_edge, %hclge_get_vport.exit.i.if.end4_crit_edge, %hclge_get_vport.exit.thread.if.end4_crit_edge, %hclge_get_vport.exit.if.end4_crit_edge
  %27 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %handle, align 8
  %tobool.not.i.i14 = icmp eq ptr %28, null
  br i1 %tobool.not.i.i14, label %if.end4.hclge_get_vport.exit.i24_crit_edge, label %if.else.i.i18

if.end4.hclge_get_vport.exit.i24_crit_edge:       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i24

if.else.i.i18:                                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i15 = getelementptr inbounds %struct.hnae3_client, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %type.i.i15 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %type.i.i15, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp.i.i16 = icmp eq i32 %30, 1
  %..i.i17 = select i1 %cmp.i.i16, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i24

hclge_get_vport.exit.i24:                         ; preds = %if.else.i.i18, %if.end4.hclge_get_vport.exit.i24_crit_edge
  %.sink.i.i19 = phi i32 [ -560, %if.end4.hclge_get_vport.exit.i24_crit_edge ], [ %..i.i17, %if.else.i.i18 ]
  %add.ptr9.i.i20 = getelementptr i8, ptr %handle, i32 %.sink.i.i19
  %back.i21 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i20, i32 0, i32 12
  %31 = ptrtoint ptr %back.i21 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %back.i21, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %33 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %34 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 1
  %tqp1.i.i = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 5, i32 0, i32 9
  %35 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  %36 = ptrtoint ptr %tqp1.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tqp1.i.i, align 8
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 4
  %index.i.i = getelementptr i8, ptr %39, i32 44
  %40 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %index.i.i, align 8
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 32, i1 noundef zeroext false) #16
  %fun_reset_rcb.i = getelementptr inbounds %struct.hclge_reset_cmd, ptr %33, i32 0, i32 2
  %42 = ptrtoint ptr %fun_reset_rcb.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %fun_reset_rcb.i, align 2
  %44 = or i8 %43, 2
  store i8 %44, ptr %fun_reset_rcb.i, align 2
  %45 = call i16 @llvm.bswap.i16(i16 %41) #16
  %46 = ptrtoint ptr %34 to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %45, ptr %34, align 4
  %num_tqps.i22 = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 5, i32 0, i32 8
  %47 = ptrtoint ptr %num_tqps.i22 to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %num_tqps.i22, align 2
  %49 = call i16 @llvm.bswap.i16(i16 %48) #16
  %fun_reset_rcb_vqid_num.i = getelementptr inbounds %struct.hclge_reset_cmd, ptr %33, i32 0, i32 5
  %50 = ptrtoint ptr %fun_reset_rcb_vqid_num.i to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %49, ptr %fun_reset_rcb_vqid_num.i, align 2
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %32, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i23 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i23, label %if.end.i, label %do.end9.i

do.end9.i:                                        ; preds = %hclge_get_vport.exit.i24
  call void @__sanitizer_cov_trace_pc() #18
  %51 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %32, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %52, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.140, i32 noundef %call.i.i) #20
  br label %hclge_reset_rcb.exit

if.end.i:                                         ; preds = %hclge_get_vport.exit.i24
  %53 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 2
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %53, align 4
  %56 = zext i8 %55 to i64
  call void @__sanitizer_cov_trace_switch(i64 %56, ptr @__sancov_gen_cov_switch_values.759)
  switch i8 %55, label %do.end20.i [
    i8 1, label %if.end.i.hclge_reset_rcb.exit_crit_edge
    i8 0, label %if.end24.i
  ]

if.end.i.hclge_reset_rcb.exit_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_rcb.exit

do.end20.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv10.i = zext i8 %55 to i32
  %57 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %32, align 8
  %dev22.i = getelementptr inbounds %struct.pci_dev, ptr %58, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev22.i, ptr noundef nonnull @.str.143, i32 noundef %conv10.i) #20
  br label %hclge_reset_rcb.exit

if.end24.i:                                       ; preds = %if.end.i
  %59 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %handle, align 8
  %tobool.not.i.i.i = icmp eq ptr %60, null
  br i1 %tobool.not.i.i.i, label %if.end24.i.hclge_get_vport.exit.i.i_crit_edge, label %if.else.i.i.i

if.end24.i.hclge_get_vport.exit.i.i_crit_edge:    ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i.i

if.else.i.i.i:                                    ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i.i = getelementptr inbounds %struct.hnae3_client, ptr %60, i32 0, i32 2
  %61 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %62)
  %cmp.i.i.i = icmp eq i32 %62, 1
  %..i.i.i = select i1 %cmp.i.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i.i

hclge_get_vport.exit.i.i:                         ; preds = %if.else.i.i.i, %if.end24.i.hclge_get_vport.exit.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ -560, %if.end24.i.hclge_get_vport.exit.i.i_crit_edge ], [ %..i.i.i, %if.else.i.i.i ]
  %add.ptr9.i.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i.i
  %back.i.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i.i, i32 0, i32 12
  %63 = ptrtoint ptr %back.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %back.i.i, align 4
  %65 = ptrtoint ptr %num_tqps.i22 to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %num_tqps.i22, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %66)
  %cmp80.not.i.i = icmp eq i16 %66, 0
  br i1 %cmp80.not.i.i, label %hclge_get_vport.exit.i.i.hclge_reset_rcb.exit_crit_edge, label %for.body.lr.ph.i.i

hclge_get_vport.exit.i.i.hclge_reset_rcb.exit_crit_edge: ; preds = %hclge_get_vport.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_rcb.exit

for.body.lr.ph.i.i:                               ; preds = %hclge_get_vport.exit.i.i
  %67 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i.i, i32 0, i32 4
  %reset_req.i.i.i = getelementptr inbounds %struct.hclge_reset_tqp_queue_cmd, ptr %67, i32 0, i32 1
  %hw.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %64, i32 0, i32 2
  %68 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i60.i.i, i32 0, i32 4
  %ready_to_reset.i.i.i = getelementptr inbounds %struct.hclge_reset_tqp_queue_cmd, ptr %68, i32 0, i32 2
  %69 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i65.i.i, i32 0, i32 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end33.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %if.end33.i.i.for.body.i.i_crit_edge ]
  %70 = ptrtoint ptr %tqp1.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %tqp1.i.i, align 8
  %arrayidx.i.i.i = getelementptr ptr, ptr %71, i32 %indvars.iv.i.i
  %72 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx.i.i.i, align 4
  %index.i.i.i = getelementptr i8, ptr %73, i32 44
  %74 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %index.i.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i.i) #16
  %76 = call ptr @memset(ptr %desc.i.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i.i, i32 noundef 2850, i1 noundef zeroext false) #16
  %77 = call i16 @llvm.bswap.i16(i16 %75) #16
  %78 = ptrtoint ptr %67 to i32
  call void @__asan_store2_noabort(i32 %78)
  store i16 %77, ptr %67, align 4
  %79 = ptrtoint ptr %reset_req.i.i.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %reset_req.i.i.i, align 2
  %81 = or i8 %80, 1
  store i8 %81, ptr %reset_req.i.i.i, align 2
  %call.i.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i.i, ptr noundef nonnull %desc.i.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool5.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %hclge_reset_tqp_cmd_send.exit.i.i, label %do.end.i.i

hclge_reset_tqp_cmd_send.exit.i.i:                ; preds = %for.body.i.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i.i) #16
  br label %while.body.i.i

do.end.i.i:                                       ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %82 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %64, align 8
  %dev.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %83, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i, ptr noundef nonnull @.str.153, i32 noundef %call.i.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i.i) #16
  %84 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %64, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %85, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.145, i32 noundef %call.i.i.i.i) #20
  br label %hclge_reset_rcb.exit

while.body.i.i:                                   ; preds = %if.end14.i.i.while.body.i.i_crit_edge, %hclge_reset_tqp_cmd_send.exit.i.i
  %inc79.i.i = phi i16 [ 1, %hclge_reset_tqp_cmd_send.exit.i.i ], [ %inc.i.i, %if.end14.i.i.while.body.i.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i60.i.i) #16
  %86 = call ptr @memset(ptr %desc.i60.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i60.i.i, i32 noundef 2850, i1 noundef zeroext true) #16
  %87 = ptrtoint ptr %68 to i32
  call void @__asan_store2_noabort(i32 %87)
  store i16 %77, ptr %68, align 4
  %call.i.i62.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i.i, ptr noundef nonnull %desc.i60.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i62.i.i)
  %tobool.not.i63.i.i = icmp eq i32 %call.i.i62.i.i, 0
  br i1 %tobool.not.i63.i.i, label %if.end11.i.i, label %hclge_get_reset_status.exit.i.i

hclge_get_reset_status.exit.i.i:                  ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %88 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %64, align 8
  %dev.i64.i.i = getelementptr inbounds %struct.pci_dev, ptr %89, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i64.i.i, ptr noundef nonnull @.str.155, i32 noundef %call.i.i62.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i60.i.i) #16
  br label %hclge_reset_rcb.exit

if.end11.i.i:                                     ; preds = %while.body.i.i
  %90 = ptrtoint ptr %ready_to_reset.i.i.i to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %ready_to_reset.i.i.i, align 1
  %92 = and i8 %91, 1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i60.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %92)
  %tobool12.not.i.i = icmp eq i8 %92, 0
  br i1 %tobool12.not.i.i, label %if.end14.i.i, label %while.end.i.i

if.end14.i.i:                                     ; preds = %if.end11.i.i
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 1200, i32 noundef 2) #16
  %inc.i.i = add nuw nsw i16 %inc79.i.i, 1
  %cmp6.i.i = icmp ult i16 %inc79.i.i, 200
  br i1 %cmp6.i.i, label %if.end14.i.i.while.body.i.i_crit_edge, label %if.end14.i.i.do.end21.i.i_crit_edge

if.end14.i.i.do.end21.i.i_crit_edge:              ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end21.i.i

if.end14.i.i.while.body.i.i_crit_edge:            ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i.i

while.end.i.i:                                    ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 199, i16 %inc79.i.i)
  %cmp16.i.i = icmp ugt i16 %inc79.i.i, 199
  br i1 %cmp16.i.i, label %while.end.i.i.do.end21.i.i_crit_edge, label %if.end24.i.i

while.end.i.i.do.end21.i.i_crit_edge:             ; preds = %while.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end21.i.i

do.end21.i.i:                                     ; preds = %while.end.i.i.do.end21.i.i_crit_edge, %if.end14.i.i.do.end21.i.i_crit_edge
  %93 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %64, align 8
  %dev23.i.i = getelementptr inbounds %struct.pci_dev, ptr %94, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev23.i.i, ptr noundef nonnull @.str.148) #20
  br label %hclge_reset_rcb.exit

if.end24.i.i:                                     ; preds = %while.end.i.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i65.i.i) #16
  %95 = call ptr @memset(ptr %desc.i65.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i65.i.i, i32 noundef 2850, i1 noundef zeroext false) #16
  %96 = ptrtoint ptr %69 to i32
  call void @__asan_store2_noabort(i32 %96)
  store i16 %77, ptr %69, align 4
  %call.i.i67.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i.i, ptr noundef nonnull %desc.i65.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i67.i.i)
  %tobool5.not.i68.i.i = icmp eq i32 %call.i.i67.i.i, 0
  br i1 %tobool5.not.i68.i.i, label %if.end33.i.i, label %do.end30.i.i

do.end30.i.i:                                     ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %97 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %64, align 8
  %dev.i70.i.i = getelementptr inbounds %struct.pci_dev, ptr %98, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i70.i.i, ptr noundef nonnull @.str.153, i32 noundef %call.i.i67.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i65.i.i) #16
  %99 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %64, align 8
  %dev32.i.i = getelementptr inbounds %struct.pci_dev, ptr %100, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev32.i.i, ptr noundef nonnull @.str.151, i32 noundef %call.i.i67.i.i) #20
  br label %hclge_reset_rcb.exit

if.end33.i.i:                                     ; preds = %if.end24.i.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i65.i.i) #16
  %indvars.iv.next.i.i = add nuw nsw i32 %indvars.iv.i.i, 1
  %101 = ptrtoint ptr %num_tqps.i22 to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %num_tqps.i22, align 2
  %103 = zext i16 %102 to i32
  %cmp.i45.i = icmp ult i32 %indvars.iv.next.i.i, %103
  br i1 %cmp.i45.i, label %if.end33.i.i.for.body.i.i_crit_edge, label %if.end33.i.i.hclge_reset_rcb.exit_crit_edge

if.end33.i.i.hclge_reset_rcb.exit_crit_edge:      ; preds = %if.end33.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_rcb.exit

if.end33.i.i.for.body.i.i_crit_edge:              ; preds = %if.end33.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

hclge_reset_rcb.exit:                             ; preds = %if.end33.i.i.hclge_reset_rcb.exit_crit_edge, %do.end30.i.i, %do.end21.i.i, %hclge_get_reset_status.exit.i.i, %do.end.i.i, %hclge_get_vport.exit.i.i.hclge_reset_rcb.exit_crit_edge, %do.end20.i, %if.end.i.hclge_reset_rcb.exit_crit_edge, %do.end9.i
  %retval.0.i25 = phi i32 [ %call.i.i, %do.end9.i ], [ -5, %do.end20.i ], [ 0, %if.end.i.hclge_reset_rcb.exit_crit_edge ], [ %call.i.i.i.i, %do.end.i.i ], [ -62, %do.end21.i.i ], [ %call.i.i67.i.i, %do.end30.i.i ], [ %call.i.i62.i.i, %hclge_get_reset_status.exit.i.i ], [ 0, %hclge_get_vport.exit.i.i.hclge_reset_rcb.exit_crit_edge ], [ 0, %if.end33.i.i.hclge_reset_rcb.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_reset_rcb.exit, %do.end
  %retval.0 = phi i32 [ %retval.0.i25, %hclge_reset_rcb.exit ], [ %call.i.i.i, %do.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_cfg_flowctrl(ptr noundef %hdev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %phydev1 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 17
  %0 = ptrtoint ptr %phydev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phydev1, align 4
  %link = getelementptr inbounds %struct.phy_device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %link to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load = load i16, ptr %link, align 8
  %3 = and i16 %bf.load, 12
  call void @__sanitizer_cov_trace_const_cmp2(i16 12, i16 %3)
  %.not = icmp eq i16 %3, 12
  br i1 %.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %advertising = getelementptr inbounds %struct.phy_device, ptr %1, i32 0, i32 17
  %4 = ptrtoint ptr %advertising to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %advertising, align 4
  %6 = lshr i32 %5, 3
  %7 = and i32 %6, 1024
  %8 = load volatile i32, ptr %advertising, align 4
  %9 = lshr i32 %8, 3
  %10 = and i32 %9, 2048
  %11 = or i32 %10, %7
  %conv = trunc i32 %11 to i16
  %pause = getelementptr inbounds %struct.phy_device, ptr %1, i32 0, i32 11
  %12 = ptrtoint ptr %pause to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pause, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool7.not = icmp eq i32 %13, 0
  %spec.select = select i1 %tobool7.not, i16 0, i16 1024
  %asym_pause = getelementptr inbounds %struct.phy_device, ptr %1, i32 0, i32 12
  %14 = ptrtoint ptr %asym_pause to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %asym_pause, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool10.not = icmp eq i32 %15, 0
  %16 = or i16 %spec.select, 2048
  %remote_advertising.1 = select i1 %tobool10.not, i16 %spec.select, i16 %16
  %and25.i = and i16 %remote_advertising.1, %conv
  %and.i = zext i16 %and25.i to i32
  %and2.i = and i32 %and.i, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.end.mii_resolve_flowctrl_fdx.exit_crit_edge

if.end.mii_resolve_flowctrl_fdx.exit_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %mii_resolve_flowctrl_fdx.exit

if.else.i:                                        ; preds = %if.end
  %and6.i = and i32 %and.i, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %tobool7.not.i = icmp eq i32 %and6.i, 0
  br i1 %tobool7.not.i, label %if.else.i.mii_resolve_flowctrl_fdx.exit_crit_edge, label %if.then8.i

if.else.i.mii_resolve_flowctrl_fdx.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mii_resolve_flowctrl_fdx.exit

if.then8.i:                                       ; preds = %if.else.i
  %17 = and i16 %conv, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool11.not.i = icmp eq i16 %17, 0
  br i1 %tobool11.not.i, label %if.else13.i, label %if.then8.i.mii_resolve_flowctrl_fdx.exit_crit_edge

if.then8.i.mii_resolve_flowctrl_fdx.exit_crit_edge: ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mii_resolve_flowctrl_fdx.exit

if.else13.i:                                      ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #18
  %18 = lshr exact i16 %remote_advertising.1, 10
  %19 = and i16 %18, 1
  %20 = zext i16 %19 to i32
  br label %mii_resolve_flowctrl_fdx.exit

mii_resolve_flowctrl_fdx.exit:                    ; preds = %if.else13.i, %if.then8.i.mii_resolve_flowctrl_fdx.exit_crit_edge, %if.else.i.mii_resolve_flowctrl_fdx.exit_crit_edge, %if.end.mii_resolve_flowctrl_fdx.exit_crit_edge
  %cap.0.i = phi i32 [ 0, %if.else.i.mii_resolve_flowctrl_fdx.exit_crit_edge ], [ 3, %if.end.mii_resolve_flowctrl_fdx.exit_crit_edge ], [ 2, %if.then8.i.mii_resolve_flowctrl_fdx.exit_crit_edge ], [ %20, %if.else13.i ]
  %fc_mode.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 37, i32 6
  %21 = ptrtoint ptr %fc_mode.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %fc_mode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %22)
  %cmp.i = icmp eq i32 %22, 4
  br i1 %cmp.i, label %mii_resolve_flowctrl_fdx.exit.cleanup_crit_edge, label %if.end.i

mii_resolve_flowctrl_fdx.exit.cleanup_crit_edge:  ; preds = %mii_resolve_flowctrl_fdx.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %mii_resolve_flowctrl_fdx.exit
  %duplex = getelementptr inbounds %struct.phy_device, ptr %1, i32 0, i32 9
  %23 = ptrtoint ptr %duplex to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %duplex, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp = icmp ne i32 %24, 0
  %and = and i32 %cap.0.i, 1
  %and18 = and i32 %cap.0.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.i36 = icmp ne i32 %and, 0
  %tobool.i = select i1 %cmp, i1 %tobool.i36, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool1.i37 = icmp ne i32 %and18, 0
  %tobool1.i = select i1 %cmp, i1 %tobool1.i37, i1 false
  %call.i = tail call i32 @hclge_mac_pause_en_cfg(ptr noundef %hdev, i1 noundef zeroext %tobool.i, i1 noundef zeroext %tobool1.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool2.not.i, label %if.end.i.cleanup_crit_edge, label %do.end.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.157, i32 noundef %call.i) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end.i, %if.end.i.cleanup_crit_edge, %mii_resolve_flowctrl_fdx.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %mii_resolve_flowctrl_fdx.exit.cleanup_crit_edge ], [ %call.i, %do.end.i ], [ 0, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @hclge_query_bd_num_cmd_send(ptr noundef %hdev, ptr noundef %desc) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %desc, i32 noundef 67, i1 noundef zeroext true) #16
  %flag = getelementptr %struct.hclge_desc, ptr %desc, i32 0, i32 1
  %0 = ptrtoint ptr %flag to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %flag, align 2
  %2 = or i16 %1, 1024
  store i16 %2, ptr %flag, align 2
  %arrayidx.1 = getelementptr %struct.hclge_desc, ptr %desc, i32 1
  tail call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.1, i32 noundef 67, i1 noundef zeroext true) #16
  %flag.1 = getelementptr %struct.hclge_desc, ptr %desc, i32 1, i32 1
  %3 = ptrtoint ptr %flag.1 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %flag.1, align 2
  %5 = or i16 %4, 1024
  store i16 %5, ptr %flag.1, align 2
  %arrayidx.2 = getelementptr %struct.hclge_desc, ptr %desc, i32 2
  tail call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.2, i32 noundef 67, i1 noundef zeroext true) #16
  %flag.2 = getelementptr %struct.hclge_desc, ptr %desc, i32 2, i32 1
  %6 = ptrtoint ptr %flag.2 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %flag.2, align 2
  %8 = or i16 %7, 1024
  store i16 %8, ptr %flag.2, align 2
  %arrayidx3 = getelementptr %struct.hclge_desc, ptr %desc, i32 3
  tail call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx3, i32 noundef 67, i1 noundef zeroext true) #16
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = tail call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef %desc, i32 noundef 4) #16
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_init() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.159, ptr noundef nonnull @.str.38) #20
  %call1 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.161, i32 noundef 2, i32 noundef 0, ptr noundef nonnull @.str.38) #16
  store ptr %call1, ptr @hclge_wq, align 4
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %do.end3, label %if.end

do.end3:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.163, ptr noundef nonnull @.str.38) #20
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @hnae3_register_ae_algo(ptr noundef nonnull @ae_algo) #16
  br label %return

return:                                           ; preds = %if.end, %do.end3
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %do.end3 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_exit() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @hnae3_unregister_ae_algo_prepare(ptr noundef nonnull @ae_algo) #16
  tail call void @hnae3_unregister_ae_algo(ptr noundef nonnull @ae_algo) #16
  %0 = load ptr, ptr @hclge_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %0) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__modver_version_show(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #5

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @hclge_is_rx_buf_ok(ptr nocapture noundef readonly %hdev, ptr noundef %buf_alloc, i32 noundef %rx_all) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %hw_tc_map.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 29
  %0 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %hw_tc_map.i, align 2
  %conv.i = zext i8 %1 to i32
  %2 = and i32 %conv.i, 1
  %3 = lshr i32 %conv.i, 1
  %4 = and i32 %3, 1
  %5 = lshr i32 %conv.i, 2
  %6 = and i32 %5, 1
  %7 = lshr i32 %conv.i, 3
  %8 = and i32 %7, 1
  %9 = lshr i32 %conv.i, 4
  %10 = and i32 %9, 1
  %11 = lshr i32 %conv.i, 5
  %12 = and i32 %11, 1
  %13 = lshr i32 %conv.i, 6
  %14 = and i32 %13, 1
  %15 = lshr i32 %conv.i, 7
  %spec.select.1.i = add nuw nsw i32 %15, %2
  %spec.select.2.i = add nuw nsw i32 %spec.select.1.i, %4
  %spec.select.3.i = add nuw nsw i32 %spec.select.2.i, %6
  %spec.select.4.i = add nuw nsw i32 %spec.select.3.i, %8
  %spec.select.5.i = add nuw nsw i32 %spec.select.4.i, %10
  %spec.select.6.i = add nuw nsw i32 %spec.select.5.i, %12
  %spec.select.7.i = add nuw nsw i32 %spec.select.6.i, %14
  %mps = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 60
  %16 = ptrtoint ptr %mps to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mps, align 4
  %add = add i32 %17, 255
  %div156 = and i32 %add, -256
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %18 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ae_dev, align 4
  %flag = getelementptr inbounds %struct.hnae3_ae_dev, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flag, align 4
  %22 = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not = icmp eq i32 %22, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %mul1 = shl i32 %div156, 1
  %dv_buf_size = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 59
  %23 = ptrtoint ptr %dv_buf_size to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %dv_buf_size, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add3 = add i32 %div156, 5120
  %dv_buf_size4 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 59
  %25 = ptrtoint ptr %dv_buf_size4 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %dv_buf_size4, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.sink = phi i32 [ %26, %if.else ], [ %mul1, %if.then ]
  %add3.sink = phi i32 [ %add3, %if.else ], [ %24, %if.then ]
  %add5 = add i32 %add3.sink, %.sink
  %mul6 = mul i32 %spec.select.7.i, %div156
  %add7 = add i32 %mul6, %div156
  %27 = tail call i32 @llvm.umax.i32(i32 %add5, i32 %add7)
  %add12 = add i32 %27, 255
  %div13157 = and i32 %add12, -256
  %enable.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 0, i32 3
  %28 = ptrtoint ptr %enable.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %enable.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i = icmp eq i32 %29, 0
  br i1 %tobool.not.i, label %if.end.for.inc.i_crit_edge, label %if.then.i

if.end.for.inc.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %buf_size.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 0, i32 1
  %30 = ptrtoint ptr %buf_size.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %buf_size.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %if.end.for.inc.i_crit_edge
  %rx_priv.1.i = phi i32 [ %31, %if.then.i ], [ 0, %if.end.for.inc.i_crit_edge ]
  %enable.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 1, i32 3
  %32 = ptrtoint ptr %enable.1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %enable.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.not.1.i = icmp eq i32 %33, 0
  br i1 %tobool.not.1.i, label %for.inc.i.for.inc.1.i_crit_edge, label %if.then.1.i

for.inc.i.for.inc.1.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1.i

if.then.1.i:                                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  %buf_size.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 1, i32 1
  %34 = ptrtoint ptr %buf_size.1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %buf_size.1.i, align 4
  %add.1.i = add i32 %35, %rx_priv.1.i
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %if.then.1.i, %for.inc.i.for.inc.1.i_crit_edge
  %rx_priv.1.1.i = phi i32 [ %add.1.i, %if.then.1.i ], [ %rx_priv.1.i, %for.inc.i.for.inc.1.i_crit_edge ]
  %enable.2.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 2, i32 3
  %36 = ptrtoint ptr %enable.2.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %enable.2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.2.i = icmp eq i32 %37, 0
  br i1 %tobool.not.2.i, label %for.inc.1.i.for.inc.2.i_crit_edge, label %if.then.2.i

for.inc.1.i.for.inc.2.i_crit_edge:                ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2.i

if.then.2.i:                                      ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #18
  %buf_size.2.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 2, i32 1
  %38 = ptrtoint ptr %buf_size.2.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %buf_size.2.i, align 4
  %add.2.i = add i32 %39, %rx_priv.1.1.i
  br label %for.inc.2.i

for.inc.2.i:                                      ; preds = %if.then.2.i, %for.inc.1.i.for.inc.2.i_crit_edge
  %rx_priv.1.2.i = phi i32 [ %add.2.i, %if.then.2.i ], [ %rx_priv.1.1.i, %for.inc.1.i.for.inc.2.i_crit_edge ]
  %enable.3.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 3, i32 3
  %40 = ptrtoint ptr %enable.3.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %enable.3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.3.i = icmp eq i32 %41, 0
  br i1 %tobool.not.3.i, label %for.inc.2.i.for.inc.3.i_crit_edge, label %if.then.3.i

for.inc.2.i.for.inc.3.i_crit_edge:                ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3.i

if.then.3.i:                                      ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #18
  %buf_size.3.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 3, i32 1
  %42 = ptrtoint ptr %buf_size.3.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %buf_size.3.i, align 4
  %add.3.i = add i32 %43, %rx_priv.1.2.i
  br label %for.inc.3.i

for.inc.3.i:                                      ; preds = %if.then.3.i, %for.inc.2.i.for.inc.3.i_crit_edge
  %rx_priv.1.3.i = phi i32 [ %add.3.i, %if.then.3.i ], [ %rx_priv.1.2.i, %for.inc.2.i.for.inc.3.i_crit_edge ]
  %enable.4.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 4, i32 3
  %44 = ptrtoint ptr %enable.4.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %enable.4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool.not.4.i = icmp eq i32 %45, 0
  br i1 %tobool.not.4.i, label %for.inc.3.i.for.inc.4.i_crit_edge, label %if.then.4.i

for.inc.3.i.for.inc.4.i_crit_edge:                ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4.i

if.then.4.i:                                      ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #18
  %buf_size.4.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 4, i32 1
  %46 = ptrtoint ptr %buf_size.4.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %buf_size.4.i, align 4
  %add.4.i = add i32 %47, %rx_priv.1.3.i
  br label %for.inc.4.i

for.inc.4.i:                                      ; preds = %if.then.4.i, %for.inc.3.i.for.inc.4.i_crit_edge
  %rx_priv.1.4.i = phi i32 [ %add.4.i, %if.then.4.i ], [ %rx_priv.1.3.i, %for.inc.3.i.for.inc.4.i_crit_edge ]
  %enable.5.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 5, i32 3
  %48 = ptrtoint ptr %enable.5.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %enable.5.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.not.5.i = icmp eq i32 %49, 0
  br i1 %tobool.not.5.i, label %for.inc.4.i.for.inc.5.i_crit_edge, label %if.then.5.i

for.inc.4.i.for.inc.5.i_crit_edge:                ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5.i

if.then.5.i:                                      ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #18
  %buf_size.5.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 5, i32 1
  %50 = ptrtoint ptr %buf_size.5.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %buf_size.5.i, align 4
  %add.5.i = add i32 %51, %rx_priv.1.4.i
  br label %for.inc.5.i

for.inc.5.i:                                      ; preds = %if.then.5.i, %for.inc.4.i.for.inc.5.i_crit_edge
  %rx_priv.1.5.i = phi i32 [ %add.5.i, %if.then.5.i ], [ %rx_priv.1.4.i, %for.inc.4.i.for.inc.5.i_crit_edge ]
  %enable.6.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 6, i32 3
  %52 = ptrtoint ptr %enable.6.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %enable.6.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool.not.6.i = icmp eq i32 %53, 0
  br i1 %tobool.not.6.i, label %for.inc.5.i.for.inc.6.i_crit_edge, label %if.then.6.i

for.inc.5.i.for.inc.6.i_crit_edge:                ; preds = %for.inc.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6.i

if.then.6.i:                                      ; preds = %for.inc.5.i
  call void @__sanitizer_cov_trace_pc() #18
  %buf_size.6.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 6, i32 1
  %54 = ptrtoint ptr %buf_size.6.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %buf_size.6.i, align 4
  %add.6.i = add i32 %55, %rx_priv.1.5.i
  br label %for.inc.6.i

for.inc.6.i:                                      ; preds = %if.then.6.i, %for.inc.5.i.for.inc.6.i_crit_edge
  %rx_priv.1.6.i = phi i32 [ %add.6.i, %if.then.6.i ], [ %rx_priv.1.5.i, %for.inc.5.i.for.inc.6.i_crit_edge ]
  %enable.7.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 7, i32 3
  %56 = ptrtoint ptr %enable.7.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %enable.7.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool.not.7.i = icmp eq i32 %57, 0
  br i1 %tobool.not.7.i, label %for.inc.6.i.hclge_get_rx_priv_buff_alloced.exit_crit_edge, label %if.then.7.i

for.inc.6.i.hclge_get_rx_priv_buff_alloced.exit_crit_edge: ; preds = %for.inc.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_rx_priv_buff_alloced.exit

if.then.7.i:                                      ; preds = %for.inc.6.i
  call void @__sanitizer_cov_trace_pc() #18
  %buf_size.7.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 7, i32 1
  %58 = ptrtoint ptr %buf_size.7.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_size.7.i, align 4
  %add.7.i = add i32 %59, %rx_priv.1.6.i
  br label %hclge_get_rx_priv_buff_alloced.exit

hclge_get_rx_priv_buff_alloced.exit:              ; preds = %if.then.7.i, %for.inc.6.i.hclge_get_rx_priv_buff_alloced.exit_crit_edge
  %rx_priv.1.7.i = phi i32 [ %add.7.i, %if.then.7.i ], [ %rx_priv.1.6.i, %for.inc.6.i.hclge_get_rx_priv_buff_alloced.exit_crit_edge ]
  %add16 = add i32 %rx_priv.1.7.i, %div13157
  call void @__sanitizer_cov_trace_cmp4(i32 %add16, i32 %rx_all)
  %cmp17 = icmp ugt i32 %add16, %rx_all
  br i1 %cmp17, label %hclge_get_rx_priv_buff_alloced.exit.cleanup_crit_edge, label %if.end19

hclge_get_rx_priv_buff_alloced.exit.cleanup_crit_edge: ; preds = %hclge_get_rx_priv_buff_alloced.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19:                                         ; preds = %hclge_get_rx_priv_buff_alloced.exit
  %sub20 = sub i32 %rx_all, %rx_priv.1.7.i
  %sub22 = and i32 %sub20, -256
  %s_buf = getelementptr inbounds %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1
  %buf_size = getelementptr inbounds %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 2
  %60 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %sub22, ptr %buf_size, align 4
  %61 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ae_dev, align 4
  %flag24 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %62, i32 0, i32 3
  %63 = ptrtoint ptr %flag24 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %flag24, align 4
  %65 = and i32 %64, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool27.not = icmp eq i32 %65, 0
  br i1 %tobool27.not, label %if.else45, label %if.then28

if.then28:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  %dv_buf_size29 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 59
  %66 = ptrtoint ptr %dv_buf_size29 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %dv_buf_size29, align 8
  %sub30 = sub i32 %sub22, %67
  %div37159 = lshr exact i32 %div156, 1
  %add39 = add nuw i32 %div37159, 255
  %div40160 = and i32 %add39, -256
  %sub42 = sub i32 %sub30, %div40160
  br label %if.end53

if.else45:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  %add46 = add i32 %div156, 5120
  br label %if.end53

if.end53:                                         ; preds = %if.else45, %if.then28
  %sub30.sink = phi i32 [ %add46, %if.else45 ], [ %sub30, %if.then28 ]
  %storemerge = phi i32 [ %div156, %if.else45 ], [ %sub42, %if.then28 ]
  %68 = getelementptr inbounds %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 0, i32 1
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %sub30.sink, ptr %68, align 4
  %70 = ptrtoint ptr %s_buf to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %storemerge, ptr %s_buf, align 4
  %71 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %ae_dev, align 4
  %flag55 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %72, i32 0, i32 3
  %73 = ptrtoint ptr %flag55 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %flag55, align 4
  %75 = and i32 %74, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool58.not = icmp eq i32 %75, 0
  br i1 %tobool58.not, label %if.else84, label %if.then59

if.then59:                                        ; preds = %if.end53
  %dv_buf_size60 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 59
  %76 = ptrtoint ptr %dv_buf_size60 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %dv_buf_size60, align 8
  %sub61 = sub i32 %sub22, %77
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %spec.select.7.i)
  %cmp62 = icmp ult i32 %spec.select.7.i, 3
  %mul64 = mul i32 %sub61, 90
  %div65 = udiv i32 %mul64, 100
  %hi_thrd.0 = select i1 %cmp62, i32 %div65, i32 %sub61
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.7.i)
  %tobool67.not = icmp eq i32 %spec.select.7.i, 0
  br i1 %tobool67.not, label %if.then59.if.end70_crit_edge, label %if.then68

if.then59.if.end70_crit_edge:                     ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end70

if.then68:                                        ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #18
  %div69 = udiv i32 %hi_thrd.0, %spec.select.7.i
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %if.then59.if.end70_crit_edge
  %hi_thrd.1 = phi i32 [ %div69, %if.then68 ], [ %hi_thrd.0, %if.then59.if.end70_crit_edge ]
  %mul71 = shl i32 %div156, 1
  %78 = tail call i32 @llvm.umax.i32(i32 %hi_thrd.1, i32 %mul71)
  %sub81 = and i32 %78, -256
  %div82158 = lshr exact i32 %div156, 1
  %sub83 = sub i32 %sub81, %div82158
  br label %if.end86

if.else84:                                        ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #18
  %add85 = add i32 %div156, 5120
  br label %if.end86

if.end86:                                         ; preds = %if.else84, %if.end70
  %lo_thrd.0 = phi i32 [ %sub83, %if.end70 ], [ %div156, %if.else84 ]
  %hi_thrd.2 = phi i32 [ %sub81, %if.end70 ], [ %add85, %if.else84 ]
  %arrayidx = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 0
  %79 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %lo_thrd.0, ptr %arrayidx, align 4
  %high93 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 0, i32 1
  %80 = ptrtoint ptr %high93 to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %hi_thrd.2, ptr %high93, align 4
  %arrayidx.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 1
  %81 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %lo_thrd.0, ptr %arrayidx.1, align 4
  %high93.1 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 1, i32 1
  %82 = ptrtoint ptr %high93.1 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %hi_thrd.2, ptr %high93.1, align 4
  %arrayidx.2 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 2
  %83 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %lo_thrd.0, ptr %arrayidx.2, align 4
  %high93.2 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 2, i32 1
  %84 = ptrtoint ptr %high93.2 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %hi_thrd.2, ptr %high93.2, align 4
  %arrayidx.3 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 3
  %85 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %lo_thrd.0, ptr %arrayidx.3, align 4
  %high93.3 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 3, i32 1
  %86 = ptrtoint ptr %high93.3 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %hi_thrd.2, ptr %high93.3, align 4
  %arrayidx.4 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 4
  %87 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %lo_thrd.0, ptr %arrayidx.4, align 4
  %high93.4 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 4, i32 1
  %88 = ptrtoint ptr %high93.4 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %hi_thrd.2, ptr %high93.4, align 4
  %arrayidx.5 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 5
  %89 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %lo_thrd.0, ptr %arrayidx.5, align 4
  %high93.5 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 5, i32 1
  %90 = ptrtoint ptr %high93.5 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %hi_thrd.2, ptr %high93.5, align 4
  %arrayidx.6 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 6
  %91 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %lo_thrd.0, ptr %arrayidx.6, align 4
  %high93.6 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 6, i32 1
  %92 = ptrtoint ptr %high93.6 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %hi_thrd.2, ptr %high93.6, align 4
  %arrayidx.7 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 7
  %93 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %lo_thrd.0, ptr %arrayidx.7, align 4
  %high93.7 = getelementptr %struct.hclge_pkt_buf_alloc, ptr %buf_alloc, i32 0, i32 1, i32 1, i32 7, i32 1
  %94 = ptrtoint ptr %high93.7 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %hi_thrd.2, ptr %high93.7, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end86, %hclge_get_rx_priv_buff_alloced.exit.cleanup_crit_edge
  %95 = xor i1 %cmp17, true
  ret i1 %95
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @hclge_rx_buf_calc_all(ptr nocapture noundef readonly %hdev, i1 noundef zeroext %max, ptr noundef %buf_alloc) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pkt_buf_size = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 57
  %0 = ptrtoint ptr %pkt_buf_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pkt_buf_size, align 8
  %tx_buf_size.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 0, i32 2
  %2 = ptrtoint ptr %tx_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tx_buf_size.i, align 4
  %tx_buf_size.1.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 1, i32 2
  %4 = ptrtoint ptr %tx_buf_size.1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tx_buf_size.1.i, align 4
  %tx_buf_size.2.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 2, i32 2
  %6 = ptrtoint ptr %tx_buf_size.2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tx_buf_size.2.i, align 4
  %tx_buf_size.3.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 3, i32 2
  %8 = ptrtoint ptr %tx_buf_size.3.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %tx_buf_size.3.i, align 4
  %tx_buf_size.4.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 4, i32 2
  %10 = ptrtoint ptr %tx_buf_size.4.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tx_buf_size.4.i, align 4
  %tx_buf_size.5.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 5, i32 2
  %12 = ptrtoint ptr %tx_buf_size.5.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tx_buf_size.5.i, align 4
  %tx_buf_size.6.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 6, i32 2
  %14 = ptrtoint ptr %tx_buf_size.6.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %tx_buf_size.6.i, align 4
  %tx_buf_size.7.i = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 7, i32 2
  %16 = ptrtoint ptr %tx_buf_size.7.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %tx_buf_size.7.i, align 4
  %mps = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 60
  %18 = ptrtoint ptr %mps to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %mps, align 4
  %sub1 = add i32 %19, -1
  %or = or i32 %sub1, 255
  %add = add i32 %or, 1
  %hw_tc_map = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 29
  %hw_pfc_map = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 37, i32 7
  %spec.select = select i1 %max, i32 %add, i32 256
  %add15 = add i32 %spec.select, %add
  %mul25 = zext i1 %max to i32
  %cond28 = shl i32 %add, %mul25
  %dv_buf_size = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 59
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry
  %i.076 = phi i32 [ 0, %entry ], [ %inc, %cleanup.for.body_crit_edge ]
  %arrayidx = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 %i.076
  %enable = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 %i.076, i32 3
  %20 = ptrtoint ptr %enable to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %enable, align 4
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %arrayidx, align 4
  %high = getelementptr inbounds %struct.hclge_waterline, ptr %arrayidx, i32 0, i32 1
  %22 = ptrtoint ptr %high to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %high, align 4
  %buf_size = getelementptr [8 x %struct.hclge_priv_buf], ptr %buf_alloc, i32 0, i32 %i.076, i32 1
  %23 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %buf_size, align 4
  %24 = ptrtoint ptr %hw_tc_map to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %hw_tc_map, align 2
  %conv = zext i8 %25 to i32
  %shl = shl nuw nsw i32 1, %i.076
  %and = and i32 %shl, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %enable to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %enable, align 4
  %27 = ptrtoint ptr %hw_pfc_map to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %hw_pfc_map, align 4
  %conv4 = zext i8 %28 to i32
  %and6 = and i32 %shl, %conv4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %spec.select78 = select i1 %tobool7.not, i32 0, i32 %spec.select
  %spec.select79 = select i1 %tobool7.not, i32 %cond28, i32 %add15
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %spec.select78, ptr %arrayidx, align 4
  %30 = ptrtoint ptr %high to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %spec.select79, ptr %high, align 4
  %31 = ptrtoint ptr %dv_buf_size to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %dv_buf_size, align 8
  %add34 = add i32 %32, %spec.select79
  %33 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %add34, ptr %buf_size, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.076, 1
  %exitcond.not = icmp eq i32 %inc, 8
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  %34 = add i32 %3, %5
  %35 = add i32 %34, %7
  %36 = add i32 %35, %9
  %37 = add i32 %36, %11
  %38 = add i32 %37, %13
  %39 = add i32 %38, %15
  %40 = add i32 %39, %17
  %sub = sub i32 %1, %40
  %call36 = tail call fastcc zeroext i1 @hclge_is_rx_buf_ok(ptr noundef %hdev, ptr noundef %buf_alloc, i32 noundef %sub)
  ret i1 %call36
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mod_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_set_rss_tc_mode(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_comm_cmd_reuse_desc(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %hdev, i8 noundef zeroext %vlan_type, i8 noundef zeroext %fe_type, i1 noundef zeroext %filter_en, i8 noundef zeroext %vf_id) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %1 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 1
  %2 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 4352, i1 noundef zeroext true) #16
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %vlan_type, ptr %0, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %vf_id, ptr %1, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %conv = zext i8 %vf_id to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.103, i32 noundef %conv, i32 noundef %call.i) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @hclge_comm_cmd_reuse_desc(ptr noundef nonnull %desc, i1 noundef zeroext false) #16
  %vlan_fe = getelementptr inbounds %struct.hclge_vlan_filter_ctrl_cmd, ptr %0, i32 0, i32 1
  %7 = ptrtoint ptr %vlan_fe to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %vlan_fe, align 1
  %or = or i8 %8, %fe_type
  %neg = xor i8 %fe_type, -1
  %and = and i8 %8, %neg
  %cond = select i1 %filter_en, i8 %or, i8 %and
  %vlan_fe11 = getelementptr inbounds %struct.hclge_vlan_filter_ctrl_cmd, ptr %0, i32 0, i32 1
  %9 = ptrtoint ptr %vlan_fe11 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %cond, ptr %vlan_fe11, align 1
  %call.i40 = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i40)
  %tobool14.not = icmp eq i32 %call.i40, 0
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %do.end18

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end18:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hdev, align 8
  %dev20 = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  %conv21 = zext i8 %vf_id to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev20, ptr noundef nonnull @.str.106, i32 noundef %conv21, i32 noundef %call.i40) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end18, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ %call.i, %do.end ], [ %call.i40, %do.end18 ], [ 0, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_set_vf_vlan_common(ptr noundef %hdev, i16 noundef zeroext %vfid, i1 noundef zeroext %is_kill, i16 noundef zeroext %vlan) unnamed_addr #0 align 64 {
entry:
  %desc = alloca [2 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vport1 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %0 = ptrtoint ptr %vport1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vport1, align 4
  %idxprom = zext i16 %vfid to i32
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %desc) #16
  %2 = call ptr @memset(ptr %desc, i32 255, i32 64)
  %vf_vlan_full = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 64
  %div3.i = lshr i32 %idxprom, 5
  %arrayidx.i = getelementptr i32, ptr %vf_vlan_full, i32 %div3.i
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %idxprom, 31
  %5 = shl nuw i32 1, %and.i
  %6 = and i32 %4, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  %brmerge = or i1 %tobool.not, %is_kill
  br i1 %brmerge, label %if.end8, label %if.then

if.then:                                          ; preds = %entry
  %spoofchk = getelementptr %struct.hclge_vport, ptr %1, i32 %idxprom, i32 18, i32 2
  %7 = ptrtoint ptr %spoofchk to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %spoofchk, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool3.not = icmp eq i32 %8, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vlan)
  %tobool6.not = icmp eq i16 %vlan, 0
  %or.cond = or i1 %tobool6.not, %tobool3.not
  br i1 %or.cond, label %if.then.cleanup_crit_edge, label %do.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.112) #20
  br label %cleanup

if.end8:                                          ; preds = %entry
  %frombool.i = zext i1 %is_kill to i8
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 4354, i1 noundef zeroext false) #16
  %arrayidx1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx1.i, i32 noundef 4354, i1 noundef zeroext false) #16
  %flag.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 1
  %11 = ptrtoint ptr %flag.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %flag.i, align 2
  %13 = or i16 %12, 1024
  store i16 %13, ptr %flag.i, align 2
  %div40.i = lshr i16 %vfid, 3
  %14 = trunc i16 %vfid to i8
  %rem.i = and i8 %14, 7
  %shl.i = shl nuw i8 1, %rem.i
  %data.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %15 = call i16 @llvm.bswap.i16(i16 %vlan) #16
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %15, ptr %data.i, align 4
  %vlan_cfg.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 1
  %17 = ptrtoint ptr %vlan_cfg.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %frombool.i, ptr %vlan_cfg.i, align 4
  %18 = and i16 %div40.i, 255
  %conv13.i = zext i16 %18 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %18)
  %cmp.i = icmp ult i16 %18, 16
  %vf_bitmap16.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 2
  %sub.i = add nsw i32 %conv13.i, -16
  %arrayidx18.i = getelementptr [16 x i8], ptr %vf_bitmap16.i, i32 0, i32 %sub.i
  %vf_bitmap.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 2
  %arrayidx15.i = getelementptr [16 x i8], ptr %vf_bitmap.i, i32 0, i32 %conv13.i
  %arrayidx18.sink.i = select i1 %cmp.i, ptr %arrayidx15.i, ptr %arrayidx18.i
  %19 = ptrtoint ptr %arrayidx18.sink.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %shl.i, ptr %arrayidx18.sink.i, align 1
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool19.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool19.not.i, label %if.end14, label %hclge_set_vf_vlan_filter_cmd.exit

hclge_set_vf_vlan_filter_cmd.exit:                ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.114, i32 noundef %call.i.i) #20
  br label %cleanup

if.end14:                                         ; preds = %if.end8
  %resp_code20.i = getelementptr inbounds %struct.hclge_vlan_filter_vf_cfg_cmd, ptr %data.i, i32 0, i32 1
  %22 = ptrtoint ptr %resp_code20.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %resp_code20.i, align 2
  br i1 %is_kill, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end14
  %24 = zext i8 %23 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.760)
  switch i8 %23, label %do.end15.i [
    i8 0, label %if.then.i.cleanup_crit_edge
    i8 1, label %if.then.i.cleanup_crit_edge33
    i8 2, label %if.then9.i
  ]

if.then.i.cleanup_crit_edge33:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then9.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @_set_bit(i32 noundef %idxprom, ptr noundef %vf_vlan_full) #16
  %25 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hdev, align 8
  %dev.i32 = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i32, ptr noundef nonnull @.str.116) #20
  br label %cleanup

do.end15.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i = zext i8 %23 to i32
  %27 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hdev, align 8
  %dev17.i = getelementptr inbounds %struct.pci_dev, ptr %28, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev17.i, ptr noundef nonnull @.str.120, i32 noundef %conv.i) #20
  br label %cleanup

if.else.i:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %23)
  %switch.i = icmp ult i8 %23, 2
  br i1 %switch.i, label %if.else.i.cleanup_crit_edge, label %do.end32.i

if.else.i.cleanup_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end32.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv25.i = zext i8 %23 to i32
  %29 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hdev, align 8
  %dev34.i = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev34.i, ptr noundef nonnull @.str.123, i32 noundef %conv25.i) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end32.i, %if.else.i.cleanup_crit_edge, %do.end15.i, %if.then9.i, %if.then.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge33, %hclge_set_vf_vlan_filter_cmd.exit, %do.end, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %do.end ], [ 0, %if.then.cleanup_crit_edge ], [ %call.i.i, %hclge_set_vf_vlan_filter_cmd.exit ], [ 0, %if.then9.i ], [ 0, %if.then.i.cleanup_crit_edge ], [ 0, %if.else.i.cleanup_crit_edge ], [ -5, %do.end32.i ], [ -5, %do.end15.i ], [ 0, %if.then.i.cleanup_crit_edge33 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_mac_pause_en_cfg(ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hnae3_register_ae_algo(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_init_ae_dev(ptr noundef %ae_dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ae_dev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44
  %call.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev, i32 noundef 133824, i32 noundef 3520) #16
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %call.i, align 8
  %ae_dev3 = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 1
  %3 = ptrtoint ptr %ae_dev3 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %ae_dev, ptr %ae_dev3, align 4
  %reset_type = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 8
  %4 = ptrtoint ptr %reset_type to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 8, ptr %reset_type, align 4
  %reset_level = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 9
  %5 = ptrtoint ptr %reset_level to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 5, ptr %reset_level, align 8
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %6 = ptrtoint ptr %priv to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call.i, ptr %priv, align 4
  %mps = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 60
  %7 = ptrtoint ptr %mps to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 1526, ptr %mps, align 4
  %vport_lock = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 61
  tail call void @__mutex_init(ptr noundef %vport_lock, ptr noundef nonnull @.str.165, ptr noundef nonnull @hclge_init_ae_dev.__key) #16
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 68
  tail call void @__raw_spin_lock_init(ptr noundef %fd_rule_lock, ptr noundef nonnull @.str.167, ptr noundef nonnull @hclge_init_ae_dev.__key.166, i16 noundef signext 3) #16
  %reset_sem = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14
  %wait_list1.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 2
  %8 = ptrtoint ptr %reset_sem to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %reset_sem, align 4
  %.compoundliteral.sroa.2.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 0, i32 1
  %9 = ptrtoint ptr %.compoundliteral.sroa.2.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -559067475, ptr %.compoundliteral.sroa.2.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.3.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 0, i32 2
  %10 = ptrtoint ptr %.compoundliteral.sroa.3.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %.compoundliteral.sroa.3.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.4.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 0, i32 3
  %11 = ptrtoint ptr %.compoundliteral.sroa.4.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 -1 to ptr), ptr %.compoundliteral.sroa.4.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.5.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 0, i32 4
  %12 = call ptr @memset(ptr %.compoundliteral.sroa.5.0..sroa_idx.i, i32 0, i32 12)
  %.compoundliteral.sroa.6.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 0, i32 4, i32 2
  %13 = ptrtoint ptr %.compoundliteral.sroa.6.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @.str.213, ptr %.compoundliteral.sroa.6.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.7.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 0, i32 4, i32 3
  %14 = ptrtoint ptr %.compoundliteral.sroa.7.0..sroa_idx.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 0, ptr %.compoundliteral.sroa.7.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.75.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 0, i32 4, i32 4
  %15 = ptrtoint ptr %.compoundliteral.sroa.75.0..sroa_idx.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 2, ptr %.compoundliteral.sroa.75.0..sroa_idx.i, align 1
  %.compoundliteral.sroa.8.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 0, i32 4, i32 5
  %16 = call ptr @memset(ptr %.compoundliteral.sroa.8.0..sroa_idx.i, i32 0, i32 10)
  %.compoundliteral.sroa.86.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 1
  %17 = ptrtoint ptr %.compoundliteral.sroa.86.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 1, ptr %.compoundliteral.sroa.86.0..sroa_idx.i, align 4
  %18 = ptrtoint ptr %wait_list1.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %wait_list1.i, ptr %wait_list1.i, align 4
  %.compoundliteral.sroa.10.0..sroa_idx.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 14, i32 2, i32 1
  %19 = ptrtoint ptr %.compoundliteral.sroa.10.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %wait_list1.i, ptr %.compoundliteral.sroa.10.0..sroa_idx.i, align 4
  tail call void @lockdep_init_map_type(ptr noundef %.compoundliteral.sroa.5.0..sroa_idx.i, ptr noundef nonnull @.str.214, ptr noundef nonnull @sema_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %20 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %call.i, align 8
  %call.i370 = tail call i32 @pci_enable_device(ptr noundef %21) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i370)
  %tobool.not.i = icmp eq i32 %call.i370, 0
  %dev2.i = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev2.i, ptr noundef nonnull @.str.215) #20
  br label %out226

if.end.i:                                         ; preds = %if.end
  %call.i.i = tail call i32 @dma_set_mask(ptr noundef %dev2.i, i64 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i, label %dma_set_mask_and_coherent.exit.thread.i, label %if.then5.i

dma_set_mask_and_coherent.exit.thread.i:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i.i = tail call i32 @dma_set_coherent_mask(ptr noundef %dev2.i, i64 noundef -1) #16
  br label %if.end19.i

if.then5.i:                                       ; preds = %if.end.i
  %call.i77.i = tail call i32 @dma_set_mask(ptr noundef %dev2.i, i64 noundef 4294967295) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i77.i)
  %cmp.i78.i = icmp eq i32 %call.i77.i, 0
  br i1 %cmp.i78.i, label %do.end17.i, label %do.end12.i

do.end12.i:                                       ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev2.i, ptr noundef nonnull @.str.218) #20
  br label %err_disable_device.i

do.end17.i:                                       ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i79.i = tail call i32 @dma_set_coherent_mask(ptr noundef %dev2.i, i64 noundef 4294967295) #16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev2.i, ptr noundef nonnull @.str.221) #20
  br label %if.end19.i

if.end19.i:                                       ; preds = %do.end17.i, %dma_set_mask_and_coherent.exit.thread.i
  %call20.i = tail call i32 @pci_request_regions(ptr noundef %21, ptr noundef nonnull @.str.38) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %tobool21.not.i = icmp eq i32 %call20.i, 0
  br i1 %tobool21.not.i, label %if.end27.i, label %do.end25.i

do.end25.i:                                       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev2.i, ptr noundef nonnull @.str.224, i32 noundef %call20.i) #20
  br label %err_disable_device.i

if.end27.i:                                       ; preds = %if.end19.i
  tail call void @pci_set_master(ptr noundef %21) #16
  %hw28.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 2
  %call29.i = tail call ptr @pcim_iomap(ptr noundef %21, i32 noundef 2, i32 noundef 0) #16
  %22 = ptrtoint ptr %hw28.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call29.i, ptr %hw28.i, align 4
  %tobool33.not.i = icmp eq ptr %call29.i, null
  br i1 %tobool33.not.i, label %do.end37.i, label %if.end39.i

do.end37.i:                                       ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev2.i, ptr noundef nonnull @.str.227) #20
  br label %err_clr_master.i

if.end39.i:                                       ; preds = %if.end27.i
  %23 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %call.i, align 8
  %call.i82.i = tail call i32 @pci_select_bars(ptr noundef %24, i32 noundef 512) #16
  %and.i.i = and i32 %call.i82.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end39.i.if.end11_crit_edge, label %if.end.i.i

if.end39.i.if.end11_crit_edge:                    ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.end.i.i:                                       ; preds = %if.end39.i
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  %arrayidx.i.i = getelementptr %struct.pci_dev, ptr %24, i32 0, i32 47, i32 4
  %25 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx.i.i, align 8
  %end.i.i = getelementptr %struct.pci_dev, ptr %24, i32 0, i32 47, i32 4, i32 1
  %27 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %end.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp.i83.i = icmp eq i32 %28, 0
  %sub.i.i = sub i32 1, %26
  %add.i.i = add i32 %sub.i.i, %28
  %cond.i.i = select i1 %cmp.i83.i, i32 0, i32 %add.i.i
  %call11.i.i = tail call ptr @devm_ioremap_wc(ptr noundef %dev.i.i, i32 noundef %26, i32 noundef %cond.i.i) #16
  %mem_base.i.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 2, i32 0, i32 1
  %29 = ptrtoint ptr %mem_base.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %call11.i.i, ptr %mem_base.i.i, align 4
  %tobool15.not.i.i = icmp eq ptr %call11.i.i, null
  br i1 %tobool15.not.i.i, label %err_unmap_io_base.i, label %if.end.i.i.if.end11_crit_edge

if.end.i.i.if.end11_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

err_unmap_io_base.i:                              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.229) #20
  %30 = ptrtoint ptr %hw28.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw28.i, align 8
  tail call void @pcim_iounmap(ptr noundef %21, ptr noundef %31) #16
  br label %err_clr_master.i

err_clr_master.i:                                 ; preds = %err_unmap_io_base.i, %do.end37.i
  %ret.0.i = phi i32 [ -14, %err_unmap_io_base.i ], [ -12, %do.end37.i ]
  tail call void @pci_clear_master(ptr noundef %21) #16
  tail call void @pci_release_regions(ptr noundef %21) #16
  br label %err_disable_device.i

err_disable_device.i:                             ; preds = %err_clr_master.i, %do.end25.i, %do.end12.i
  %ret.1.i = phi i32 [ %call.i77.i, %do.end12.i ], [ %call20.i, %do.end25.i ], [ %ret.0.i, %err_clr_master.i ]
  tail call void @pci_disable_device(ptr noundef %21) #16
  br label %out226

if.end11:                                         ; preds = %if.end.i.i.if.end11_crit_edge, %if.end39.i.if.end11_crit_edge
  %call44.i = tail call i32 @pci_sriov_get_totalvfs(ptr noundef %21) #16
  %conv.i = trunc i32 %call44.i to i16
  %num_req_vfs.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 17
  %32 = ptrtoint ptr %num_req_vfs.i to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %conv.i, ptr %num_req_vfs.i, align 2
  %call12 = tail call i32 @hclge_devlink_init(ptr noundef nonnull %call.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %if.end11.err_pci_uninit_crit_edge

if.end11.err_pci_uninit_crit_edge:                ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_pci_uninit

if.end15:                                         ; preds = %if.end11
  %33 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %call.i, align 8
  %call18 = tail call i32 @hclge_comm_cmd_queue_init(ptr noundef %34, ptr noundef %hw28.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end21, label %if.end15.err_devlink_uninit_crit_edge

if.end15.err_devlink_uninit_crit_edge:            ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_devlink_uninit

if.end21:                                         ; preds = %if.end15
  %35 = ptrtoint ptr %ae_dev3 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ae_dev3, align 4
  %fw_version = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 15
  %reset_pending = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 12
  %37 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %reset_pending, align 4
  %call25 = tail call i32 @hclge_comm_cmd_init(ptr noundef %36, ptr noundef %hw28.i, ptr noundef %fw_version, i1 noundef zeroext true, i32 noundef %38) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.end21.err_cmd_uninit_crit_edge

if.end21.err_cmd_uninit_crit_edge:                ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_cmd_uninit

if.end28:                                         ; preds = %if.end21
  %call29 = tail call fastcc i32 @hclge_clear_hw_resource(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.end32, label %if.end28.err_cmd_uninit_crit_edge

if.end28.err_cmd_uninit_crit_edge:                ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_cmd_uninit

if.end32:                                         ; preds = %if.end28
  %call33 = tail call fastcc i32 @hclge_get_cap(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end36, label %if.end32.err_cmd_uninit_crit_edge

if.end32.err_cmd_uninit_crit_edge:                ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_cmd_uninit

if.end36:                                         ; preds = %if.end32
  %call37 = tail call fastcc i32 @hclge_query_dev_specs(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end44, label %do.end42

do.end42:                                         ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.168, i32 noundef %call37) #20
  br label %err_cmd_uninit

if.end44:                                         ; preds = %if.end36
  %call45 = tail call fastcc i32 @hclge_configure(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.end52, label %do.end50

do.end50:                                         ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.171, i32 noundef %call45) #20
  br label %err_cmd_uninit

if.end52:                                         ; preds = %if.end44
  %call53 = tail call fastcc i32 @hclge_init_msi(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %if.end60, label %do.end58

do.end58:                                         ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.174, i32 noundef %call53) #20
  br label %err_cmd_uninit

if.end60:                                         ; preds = %if.end52
  %call61 = tail call fastcc i32 @hclge_misc_irq_init(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %if.end64, label %if.end60.err_msi_uninit_crit_edge

if.end60.err_msi_uninit_crit_edge:                ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_msi_uninit

if.end64:                                         ; preds = %if.end60
  %call65 = tail call fastcc i32 @hclge_alloc_tqps(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %if.end72, label %do.end70

do.end70:                                         ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.177, i32 noundef %call65) #20
  br label %err_msi_irq_uninit

if.end72:                                         ; preds = %if.end64
  %call73 = tail call fastcc i32 @hclge_alloc_vport(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73)
  %tobool74.not = icmp eq i32 %call73, 0
  br i1 %tobool74.not, label %if.end76, label %if.end72.err_msi_irq_uninit_crit_edge

if.end72.err_msi_irq_uninit_crit_edge:            ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_msi_irq_uninit

if.end76:                                         ; preds = %if.end72
  %call77 = tail call fastcc i32 @hclge_map_tqp(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %if.end80, label %if.end76.err_msi_irq_uninit_crit_edge

if.end76.err_msi_irq_uninit_crit_edge:            ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_msi_irq_uninit

if.end80:                                         ; preds = %if.end76
  %media_type = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 2, i32 1, i32 3
  %39 = ptrtoint ptr %media_type to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %media_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %40)
  %cmp = icmp eq i8 %40, 2
  br i1 %cmp, label %land.lhs.true, label %if.end80.if.end91_crit_edge

if.end80.if.end91_crit_edge:                      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end91

land.lhs.true:                                    ; preds = %if.end80
  %41 = ptrtoint ptr %ae_dev3 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ae_dev3, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %42, i32 0, i32 7
  %43 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %caps, align 4
  %45 = and i32 %44, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool85.not = icmp eq i32 %45, 0
  br i1 %tobool85.not, label %if.then86, label %land.lhs.true.if.end91_crit_edge

land.lhs.true.if.end91_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end91

if.then86:                                        ; preds = %land.lhs.true
  %call87 = tail call i32 @hclge_mac_mdio_config(ptr noundef nonnull %call.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call87)
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %if.then86.if.end91_crit_edge, label %if.then86.err_msi_irq_uninit_crit_edge

if.then86.err_msi_irq_uninit_crit_edge:           ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_msi_irq_uninit

if.then86.if.end91_crit_edge:                     ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end91

if.end91:                                         ; preds = %if.then86.if.end91_crit_edge, %land.lhs.true.if.end91_crit_edge, %if.end80.if.end91_crit_edge
  %call92 = tail call fastcc i32 @hclge_init_umv_space(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92)
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %if.end95, label %if.end91.err_mdiobus_unreg_crit_edge

if.end91.err_mdiobus_unreg_crit_edge:             ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_mdiobus_unreg

if.end95:                                         ; preds = %if.end91
  %call96 = tail call fastcc i32 @hclge_mac_init(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call96)
  %tobool97.not = icmp eq i32 %call96, 0
  br i1 %tobool97.not, label %if.end103, label %do.end101

do.end101:                                        ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.180, i32 noundef %call96) #20
  br label %err_mdiobus_unreg

if.end103:                                        ; preds = %if.end95
  %call104 = tail call fastcc i32 @hclge_config_tso(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104)
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %if.end111, label %do.end109

do.end109:                                        ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.183, i32 noundef %call104) #20
  br label %err_mdiobus_unreg

if.end111:                                        ; preds = %if.end103
  %call112 = tail call fastcc i32 @hclge_config_gro(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call112)
  %tobool113.not = icmp eq i32 %call112, 0
  br i1 %tobool113.not, label %if.end115, label %if.end111.err_mdiobus_unreg_crit_edge

if.end111.err_mdiobus_unreg_crit_edge:            ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_mdiobus_unreg

if.end115:                                        ; preds = %if.end111
  %call116 = tail call fastcc i32 @hclge_init_vlan_config(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call116)
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %if.end123, label %do.end121

do.end121:                                        ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.186, i32 noundef %call116) #20
  br label %err_mdiobus_unreg

if.end123:                                        ; preds = %if.end115
  %call124 = tail call i32 @hclge_tm_schd_init(ptr noundef nonnull %call.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call124)
  %tobool125.not = icmp eq i32 %call124, 0
  br i1 %tobool125.not, label %if.end131, label %do.end129

do.end129:                                        ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.189, i32 noundef %call124) #20
  br label %err_mdiobus_unreg

if.end131:                                        ; preds = %if.end123
  %vport = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 52
  %46 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %vport, align 4
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %47, i32 0, i32 13
  %48 = ptrtoint ptr %ae_dev3 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %ae_dev3, align 4
  %rss_cfg = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 87
  %call133 = tail call i32 @hclge_comm_rss_init_cfg(ptr noundef %nic, ptr noundef %49, ptr noundef %rss_cfg) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call133)
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %if.end140, label %do.end138

do.end138:                                        ; preds = %if.end131
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.192, i32 noundef %call133) #20
  br label %err_mdiobus_unreg

if.end140:                                        ; preds = %if.end131
  %call141 = tail call i32 @hclge_rss_init_hw(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call141)
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %if.end148, label %do.end146

do.end146:                                        ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.195, i32 noundef %call141) #20
  br label %err_mdiobus_unreg

if.end148:                                        ; preds = %if.end140
  %call149 = tail call fastcc i32 @init_mgr_tbl(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call149)
  %tobool150.not = icmp eq i32 %call149, 0
  br i1 %tobool150.not, label %if.end156, label %do.end154

do.end154:                                        ; preds = %if.end148
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.198, i32 noundef %call149) #20
  br label %err_mdiobus_unreg

if.end156:                                        ; preds = %if.end148
  %call157 = tail call fastcc i32 @hclge_init_fd_config(ptr noundef nonnull %call.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call157)
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %if.end164, label %do.end162

do.end162:                                        ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.201, i32 noundef %call157) #20
  br label %err_mdiobus_unreg

if.end164:                                        ; preds = %if.end156
  %call165 = tail call i32 @hclge_ptp_init(ptr noundef nonnull %call.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call165)
  %tobool166.not = icmp eq i32 %call165, 0
  br i1 %tobool166.not, label %if.end168, label %if.end164.err_mdiobus_unreg_crit_edge

if.end164.err_mdiobus_unreg_crit_edge:            ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_mdiobus_unreg

if.end168:                                        ; preds = %if.end164
  %mac_tnl_log = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 83
  %50 = ptrtoint ptr %mac_tnl_log to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %mac_tnl_log, align 4
  %out = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 83, i32 0, i32 0, i32 1
  %51 = ptrtoint ptr %out to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %out, align 4
  %mask = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 83, i32 0, i32 0, i32 2
  %52 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 7, ptr %mask, align 4
  %esize = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 83, i32 0, i32 0, i32 3
  %53 = ptrtoint ptr %esize to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 16, ptr %esize, align 4
  %buf = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 83, i32 1
  %data = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 83, i32 0, i32 0, i32 4
  %54 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %buf, ptr %data, align 4
  tail call void @hclge_dcb_ops_set(ptr noundef nonnull %call.i) #16
  %reset_timer = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 47
  tail call void @init_timer_key(ptr noundef %reset_timer, ptr noundef nonnull @hclge_reset_timer, i32 noundef 0, ptr noundef nonnull @.str.204, ptr noundef nonnull @hclge_init_ae_dev.__key.203) #16
  %service_task = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 48
  tail call void @__init_work(ptr noundef %service_task, i32 noundef 0) #16
  %55 = ptrtoint ptr %service_task to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 -64, ptr %service_task, align 4
  %lockdep_map = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 48, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.206, ptr noundef nonnull @hclge_init_ae_dev.__key.205, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry182 = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 48, i32 0, i32 1
  %56 = ptrtoint ptr %entry182 to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile ptr %entry182, ptr %entry182, align 4
  %prev.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 48, i32 0, i32 1, i32 1
  %57 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %entry182, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 48, i32 0, i32 2
  %58 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr @hclge_service_task, ptr %func, align 4
  %timer = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 48, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.208, ptr noundef nonnull @hclge_init_ae_dev.__key.207) #16
  %vector_irq.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 3, i32 1
  %59 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %vector_irq.i, align 4
  %affinity_mask.i = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 84
  %call.i.i.i = tail call i32 @__irq_apply_affinity_hint(i32 noundef %60, ptr noundef %affinity_mask.i, i1 noundef zeroext true) #16
  tail call fastcc void @hclge_clear_all_event_cause(ptr noundef nonnull %call.i)
  tail call fastcc void @hclge_clear_resetting_state(ptr noundef nonnull %call.i)
  %61 = ptrtoint ptr %ae_dev3 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ae_dev3, align 4
  %caps194 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %62, i32 0, i32 7
  %63 = ptrtoint ptr %caps194 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %caps194, align 4
  %65 = and i32 %64, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool197.not = icmp eq i32 %65, 0
  br i1 %tobool197.not, label %if.else, label %if.then198

if.then198:                                       ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @hclge_handle_occurred_error(ptr noundef nonnull %call.i) #16
  br label %if.end199

if.else:                                          ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @hclge_handle_all_hns_hw_errors(ptr noundef %ae_dev) #16
  br label %if.end199

if.end199:                                        ; preds = %if.else, %if.then198
  %hw_err_reset_req = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 4
  %66 = ptrtoint ptr %hw_err_reset_req to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %hw_err_reset_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool200.not = icmp eq i32 %67, 0
  br i1 %tobool200.not, label %if.end199.if.end207_crit_edge, label %if.then201

if.end199.if.end207_crit_edge:                    ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end207

if.then201:                                       ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #18
  %call204 = tail call i32 @hclge_get_reset_level(ptr noundef %ae_dev, ptr noundef %hw_err_reset_req), !range !1457
  %68 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %priv, align 4
  %default_reset_request.i = getelementptr inbounds %struct.hclge_dev, ptr %69, i32 0, i32 10
  tail call void @_set_bit(i32 noundef %call204, ptr noundef %default_reset_request.i) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %70 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %70, 1000
  %call206 = tail call i32 @mod_timer(ptr noundef %reset_timer, i32 noundef %add) #16
  br label %if.end207

if.end207:                                        ; preds = %if.then201, %if.end199.if.end207_crit_edge
  tail call fastcc void @hclge_init_rxd_adv_layout(ptr noundef nonnull %call.i)
  %misc_vector = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %71 = ptrtoint ptr %misc_vector to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %misc_vector, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %72, i32 16777216) #16, !srcloc !1459
  tail call fastcc void @hclge_state_init(ptr noundef nonnull %call.i)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %73 = load volatile i32, ptr @jiffies, align 128
  %last_reset_time = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 7
  %74 = ptrtoint ptr %last_reset_time to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %last_reset_time, align 8
  %75 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %call.i, align 8
  %dev212 = getelementptr inbounds %struct.pci_dev, ptr %76, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev212, ptr noundef nonnull @.str.210, ptr noundef nonnull @.str.38) #20
  %call213 = tail call i32 @round_jiffies_relative(i32 noundef 100) #16
  tail call void @hclge_task_schedule(ptr noundef nonnull %call.i, i32 noundef %call213)
  br label %cleanup

err_mdiobus_unreg:                                ; preds = %if.end164.err_mdiobus_unreg_crit_edge, %do.end162, %do.end154, %do.end146, %do.end138, %do.end129, %do.end121, %if.end111.err_mdiobus_unreg_crit_edge, %do.end109, %do.end101, %if.end91.err_mdiobus_unreg_crit_edge
  %ret.0 = phi i32 [ %call92, %if.end91.err_mdiobus_unreg_crit_edge ], [ %call96, %do.end101 ], [ %call104, %do.end109 ], [ %call112, %if.end111.err_mdiobus_unreg_crit_edge ], [ %call116, %do.end121 ], [ %call124, %do.end129 ], [ %call133, %do.end138 ], [ %call141, %do.end146 ], [ %call149, %do.end154 ], [ %call157, %do.end162 ], [ %call165, %if.end164.err_mdiobus_unreg_crit_edge ]
  %phydev = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 2, i32 1, i32 17
  %77 = ptrtoint ptr %phydev to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %phydev, align 4
  %tobool216.not = icmp eq ptr %78, null
  br i1 %tobool216.not, label %err_mdiobus_unreg.err_msi_irq_uninit_crit_edge, label %if.then217

err_mdiobus_unreg.err_msi_irq_uninit_crit_edge:   ; preds = %err_mdiobus_unreg
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_msi_irq_uninit

if.then217:                                       ; preds = %err_mdiobus_unreg
  call void @__sanitizer_cov_trace_pc() #18
  %mdio_bus = getelementptr inbounds %struct.hclge_dev, ptr %call.i, i32 0, i32 2, i32 1, i32 18
  %79 = ptrtoint ptr %mdio_bus to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %mdio_bus, align 4
  tail call void @mdiobus_unregister(ptr noundef %80) #16
  br label %err_msi_irq_uninit

err_msi_irq_uninit:                               ; preds = %if.then217, %err_mdiobus_unreg.err_msi_irq_uninit_crit_edge, %if.then86.err_msi_irq_uninit_crit_edge, %if.end76.err_msi_irq_uninit_crit_edge, %if.end72.err_msi_irq_uninit_crit_edge, %do.end70
  %ret.1 = phi i32 [ %call65, %do.end70 ], [ %call73, %if.end72.err_msi_irq_uninit_crit_edge ], [ %call77, %if.end76.err_msi_irq_uninit_crit_edge ], [ %ret.0, %if.then217 ], [ %ret.0, %err_mdiobus_unreg.err_msi_irq_uninit_crit_edge ], [ %call87, %if.then86.err_msi_irq_uninit_crit_edge ]
  tail call fastcc void @hclge_misc_irq_uninit(ptr noundef nonnull %call.i)
  br label %err_msi_uninit

err_msi_uninit:                                   ; preds = %err_msi_irq_uninit, %if.end60.err_msi_uninit_crit_edge
  %ret.2 = phi i32 [ %call61, %if.end60.err_msi_uninit_crit_edge ], [ %ret.1, %err_msi_irq_uninit ]
  tail call void @pci_free_irq_vectors(ptr noundef %1) #16
  br label %err_cmd_uninit

err_cmd_uninit:                                   ; preds = %err_msi_uninit, %do.end58, %do.end50, %do.end42, %if.end32.err_cmd_uninit_crit_edge, %if.end28.err_cmd_uninit_crit_edge, %if.end21.err_cmd_uninit_crit_edge
  %ret.3 = phi i32 [ %call25, %if.end21.err_cmd_uninit_crit_edge ], [ %call29, %if.end28.err_cmd_uninit_crit_edge ], [ %call33, %if.end32.err_cmd_uninit_crit_edge ], [ %call37, %do.end42 ], [ %call45, %do.end50 ], [ %call53, %do.end58 ], [ %ret.2, %err_msi_uninit ]
  %81 = ptrtoint ptr %ae_dev3 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %ae_dev3, align 4
  tail call void @hclge_comm_cmd_uninit(ptr noundef %82, ptr noundef %hw28.i) #16
  br label %err_devlink_uninit

err_devlink_uninit:                               ; preds = %err_cmd_uninit, %if.end15.err_devlink_uninit_crit_edge
  %ret.4 = phi i32 [ %call18, %if.end15.err_devlink_uninit_crit_edge ], [ %ret.3, %err_cmd_uninit ]
  tail call void @hclge_devlink_uninit(ptr noundef nonnull %call.i) #16
  br label %err_pci_uninit

err_pci_uninit:                                   ; preds = %err_devlink_uninit, %if.end11.err_pci_uninit_crit_edge
  %ret.5 = phi i32 [ %call12, %if.end11.err_pci_uninit_crit_edge ], [ %ret.4, %err_devlink_uninit ]
  %83 = ptrtoint ptr %hw28.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %hw28.i, align 8
  tail call void @pcim_iounmap(ptr noundef %1, ptr noundef %84) #16
  tail call void @pci_clear_master(ptr noundef %1) #16
  tail call void @pci_release_regions(ptr noundef %1) #16
  tail call void @pci_disable_device(ptr noundef %1) #16
  br label %out226

out226:                                           ; preds = %err_pci_uninit, %err_disable_device.i, %do.end.i
  %ret.6 = phi i32 [ %ret.5, %err_pci_uninit ], [ %ret.1.i, %err_disable_device.i ], [ %call.i370, %do.end.i ]
  tail call void @mutex_destroy(ptr noundef %vport_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %out226, %if.end207, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.6, %out226 ], [ 0, %if.end207 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_uninit_ae_dev(ptr nocapture noundef %ae_dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %num_alloc_vport.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 24
  %2 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %num_alloc_vport.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %3)
  %cmp14.i = icmp ugt i16 %3, 1
  br i1 %cmp14.i, label %for.body.lr.ph.i, label %entry.hclge_clear_vf_vlan.exit_crit_edge

entry.hclge_clear_vf_vlan.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_clear_vf_vlan.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %vport2.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 52
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %vf.015.i = phi i32 [ 1, %for.body.lr.ph.i ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %vport2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vport2.i, align 4
  %arrayidx.i = getelementptr %struct.hclge_vport, ptr %5, i32 %vf.015.i
  %max_tx_rate.i = getelementptr %struct.hclge_vport, ptr %5, i32 %vf.015.i, i32 18, i32 3
  %6 = ptrtoint ptr %max_tx_rate.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %max_tx_rate.i, align 4
  %call.i = tail call i32 @hclge_tm_qs_shaper_cfg(ptr noundef %arrayidx.i, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %for.body.i.if.end.i_crit_edge, label %do.end.i

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

do.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  %sub.i = add nsw i32 %vf.015.i, -1
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.499, i32 noundef %sub.i, i32 noundef %call.i) #20
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %for.body.i.if.end.i_crit_edge
  %inc.i = add nuw nsw i32 %vf.015.i, 1
  %9 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %num_alloc_vport.i, align 2
  %conv.i = zext i16 %10 to i32
  %cmp.i = icmp ult i32 %inc.i, %conv.i
  br i1 %cmp.i, label %if.end.i.for.body.i_crit_edge, label %hclge_reset_vf_rate.exit

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

hclge_reset_vf_rate.exit:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %10)
  %cmp13.i = icmp ugt i16 %10, 1
  br i1 %cmp13.i, label %hclge_reset_vf_rate.exit.for.body.i36_crit_edge, label %hclge_reset_vf_rate.exit.hclge_clear_vf_vlan.exit_crit_edge

hclge_reset_vf_rate.exit.hclge_clear_vf_vlan.exit_crit_edge: ; preds = %hclge_reset_vf_rate.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_clear_vf_vlan.exit

hclge_reset_vf_rate.exit.for.body.i36_crit_edge:  ; preds = %hclge_reset_vf_rate.exit
  br label %for.body.i36

for.body.i36:                                     ; preds = %for.inc.i.for.body.i36_crit_edge, %hclge_reset_vf_rate.exit.for.body.i36_crit_edge
  %vf.014.i = phi i32 [ %inc.i40, %for.inc.i.for.body.i36_crit_edge ], [ 1, %hclge_reset_vf_rate.exit.for.body.i36_crit_edge ]
  %11 = ptrtoint ptr %vport2.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vport2.i, align 4
  %vport_id.i = getelementptr %struct.hclge_vport, ptr %12, i32 %vf.014.i, i32 11
  %13 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vport_id.i, align 2
  %vlan_tag.i = getelementptr %struct.hclge_vport, ptr %12, i32 %vf.014.i, i32 7, i32 1, i32 2
  %15 = ptrtoint ptr %vlan_tag.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %vlan_tag.i, align 2
  %call.i34 = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %1, i16 noundef zeroext %14, i16 noundef zeroext %16, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i34)
  %tobool.not.i35 = icmp eq i32 %call.i34, 0
  br i1 %tobool.not.i35, label %for.body.i36.for.inc.i_crit_edge, label %do.end.i39

for.body.i36.for.inc.i_crit_edge:                 ; preds = %for.body.i36
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

do.end.i39:                                       ; preds = %for.body.i36
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %1, align 8
  %dev.i37 = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  %sub.i38 = add nsw i32 %vf.014.i, -1
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i37, ptr noundef nonnull @.str.501, i32 noundef %sub.i38, i32 noundef %call.i34) #20
  br label %for.inc.i

for.inc.i:                                        ; preds = %do.end.i39, %for.body.i36.for.inc.i_crit_edge
  %inc.i40 = add nuw nsw i32 %vf.014.i, 1
  %19 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %num_alloc_vport.i, align 2
  %conv.i41 = zext i16 %20 to i32
  %cmp.i42 = icmp ult i32 %inc.i40, %conv.i41
  br i1 %cmp.i42, label %for.inc.i.for.body.i36_crit_edge, label %for.inc.i.hclge_clear_vf_vlan.exit_crit_edge

for.inc.i.hclge_clear_vf_vlan.exit_crit_edge:     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_clear_vf_vlan.exit

for.inc.i.for.body.i36_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i36

hclge_clear_vf_vlan.exit:                         ; preds = %for.inc.i.hclge_clear_vf_vlan.exit_crit_edge, %hclge_reset_vf_rate.exit.hclge_clear_vf_vlan.exit_crit_edge, %entry.hclge_clear_vf_vlan.exit_crit_edge
  %vector_irq.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 3, i32 1
  %21 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %vector_irq.i, align 4
  %call.i.i.i = tail call i32 @__irq_apply_affinity_hint(i32 noundef %22, ptr noundef null, i1 noundef zeroext true) #16
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state.i) #16
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state.i) #16
  %function.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 47, i32 2
  %23 = ptrtoint ptr %function.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %function.i, align 4
  %tobool.not.i43 = icmp eq ptr %24, null
  br i1 %tobool.not.i43, label %hclge_clear_vf_vlan.exit.if.end.i45_crit_edge, label %if.then.i

hclge_clear_vf_vlan.exit.if.end.i45_crit_edge:    ; preds = %hclge_clear_vf_vlan.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i45

if.then.i:                                        ; preds = %hclge_clear_vf_vlan.exit
  call void @__sanitizer_cov_trace_pc() #18
  %reset_timer.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 47
  %call.i44 = tail call i32 @del_timer_sync(ptr noundef %reset_timer.i) #16
  br label %if.end.i45

if.end.i45:                                       ; preds = %if.then.i, %hclge_clear_vf_vlan.exit.if.end.i45_crit_edge
  %func.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 48, i32 0, i32 2
  %25 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %func.i, align 4
  %tobool3.not.i = icmp eq ptr %26, null
  br i1 %tobool3.not.i, label %if.end.i45.hclge_state_uninit.exit_crit_edge, label %if.then4.i

if.end.i45.hclge_state_uninit.exit_crit_edge:     ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_state_uninit.exit

if.then4.i:                                       ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #18
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 48
  %call6.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %service_task.i) #16
  br label %hclge_state_uninit.exit

hclge_state_uninit.exit:                          ; preds = %if.then4.i, %if.end.i45.hclge_state_uninit.exit_crit_edge
  tail call void @hclge_ptp_uninit(ptr noundef %1) #16
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 1
  %27 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ae_dev.i, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %28, i32 0, i32 7
  %29 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %caps.i, align 4
  %31 = and i32 %30, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i46 = icmp eq i32 %31, 0
  br i1 %tobool.not.i46, label %hclge_state_uninit.exit.hclge_uninit_rxd_adv_layout.exit_crit_edge, label %if.then.i47

hclge_state_uninit.exit.hclge_uninit_rxd_adv_layout.exit_crit_edge: ; preds = %hclge_state_uninit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_uninit_rxd_adv_layout.exit

if.then.i47:                                      ; preds = %hclge_state_uninit.exit
  call void @__sanitizer_cov_trace_pc() #18
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %32 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i = getelementptr i8, ptr %33, i32 163848
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 0) #16, !srcloc !1459
  br label %hclge_uninit_rxd_adv_layout.exit

hclge_uninit_rxd_adv_layout.exit:                 ; preds = %if.then.i47, %hclge_state_uninit.exit.hclge_uninit_rxd_adv_layout.exit_crit_edge
  %34 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %num_alloc_vport.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %35)
  %cmp8.not.i = icmp eq i16 %35, 0
  br i1 %cmp8.not.i, label %hclge_uninit_rxd_adv_layout.exit.hclge_uninit_mac_table.exit_crit_edge, label %for.body.lr.ph.i51

hclge_uninit_rxd_adv_layout.exit.hclge_uninit_mac_table.exit_crit_edge: ; preds = %hclge_uninit_rxd_adv_layout.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_uninit_mac_table.exit

for.body.lr.ph.i51:                               ; preds = %hclge_uninit_rxd_adv_layout.exit
  %vport2.i50 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 52
  br label %for.body.i56

for.body.i56:                                     ; preds = %for.body.i56.for.body.i56_crit_edge, %for.body.lr.ph.i51
  %i.09.i = phi i32 [ 0, %for.body.lr.ph.i51 ], [ %inc.i53, %for.body.i56.for.body.i56_crit_edge ]
  %36 = ptrtoint ptr %vport2.i50 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vport2.i50, align 4
  %arrayidx.i52 = getelementptr %struct.hclge_vport, ptr %37, i32 %i.09.i
  tail call fastcc void @hclge_uninit_vport_mac_list(ptr noundef %arrayidx.i52, i32 noundef 0) #16
  tail call fastcc void @hclge_uninit_vport_mac_list(ptr noundef %arrayidx.i52, i32 noundef 1) #16
  %inc.i53 = add nuw nsw i32 %i.09.i, 1
  %38 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %num_alloc_vport.i, align 2
  %conv.i54 = zext i16 %39 to i32
  %cmp.i55 = icmp ult i32 %inc.i53, %conv.i54
  br i1 %cmp.i55, label %for.body.i56.for.body.i56_crit_edge, label %for.body.i56.hclge_uninit_mac_table.exit_crit_edge

for.body.i56.hclge_uninit_mac_table.exit_crit_edge: ; preds = %for.body.i56
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_uninit_mac_table.exit

for.body.i56.for.body.i56_crit_edge:              ; preds = %for.body.i56
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i56

hclge_uninit_mac_table.exit:                      ; preds = %for.body.i56.hclge_uninit_mac_table.exit_crit_edge, %hclge_uninit_rxd_adv_layout.exit.hclge_uninit_mac_table.exit_crit_edge
  tail call fastcc void @hclge_clear_fd_rules_in_list(ptr noundef %1, i1 noundef zeroext true) #16
  %user_def_cfg.i.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 66, i32 5
  %fd_rule_lock.i.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock.i.i) #16
  %40 = call ptr @memset(ptr %user_def_cfg.i.i, i32 0, i32 12)
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock.i.i) #16
  %call.i.i = tail call fastcc i32 @hclge_fd_set_user_def_cmd(ptr noundef %1, ptr noundef %user_def_cfg.i.i) #16
  %phydev = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2, i32 1, i32 17
  %41 = ptrtoint ptr %phydev to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %phydev, align 4
  %tobool.not = icmp eq ptr %42, null
  br i1 %tobool.not, label %hclge_uninit_mac_table.exit.if.end_crit_edge, label %if.then

hclge_uninit_mac_table.exit.if.end_crit_edge:     ; preds = %hclge_uninit_mac_table.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %hclge_uninit_mac_table.exit
  call void @__sanitizer_cov_trace_pc() #18
  %mdio_bus = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2, i32 1, i32 18
  %43 = ptrtoint ptr %mdio_bus to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %mdio_bus, align 4
  tail call void @mdiobus_unregister(ptr noundef %44) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %hclge_uninit_mac_table.exit.if.end_crit_edge
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %misc_vector = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %45 = ptrtoint ptr %misc_vector to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %misc_vector, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %46, i32 0) #16, !srcloc !1459
  %47 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %vector_irq.i, align 4
  tail call void @synchronize_irq(i32 noundef %48) #16
  %call = tail call i32 @hclge_config_mac_tnl_int(ptr noundef %1, i1 noundef zeroext false) #16
  %call3 = tail call i32 @hclge_config_nic_hw_error(ptr noundef %1, i1 noundef zeroext false) #16
  %call4 = tail call i32 @hclge_config_rocee_ras_interrupt(ptr noundef %1, i1 noundef zeroext false) #16
  %49 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %ae_dev.i, align 4
  tail call void @hclge_comm_cmd_uninit(ptr noundef %50, ptr noundef %hw) #16
  %51 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %vector_irq.i, align 4
  %call.i58 = tail call ptr @free_irq(i32 noundef %52, ptr noundef %1) #16
  %vector_status.i.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 41
  %53 = ptrtoint ptr %vector_status.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %vector_status.i.i, align 8
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %54, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %56)
  %cmp.i.i = icmp eq i16 %56, -1
  br i1 %cmp.i.i, label %do.end.i.i, label %if.end.i.i

do.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %57 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %1, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %58, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i.i, ptr noundef nonnull @.str.273, i32 noundef 0) #20
  br label %hclge_misc_irq_uninit.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %59 = ptrtoint ptr %54 to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 -1, ptr %54, align 2
  %num_msi_left.i.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 39
  %60 = ptrtoint ptr %num_msi_left.i.i to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %num_msi_left.i.i, align 2
  %add.i.i = add i16 %61, 1
  store i16 %add.i.i, ptr %num_msi_left.i.i, align 2
  %num_msi_used.i.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 40
  %62 = ptrtoint ptr %num_msi_used.i.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %num_msi_used.i.i, align 4
  %sub.i.i = add i16 %63, -1
  store i16 %sub.i.i, ptr %num_msi_used.i.i, align 4
  br label %hclge_misc_irq_uninit.exit

hclge_misc_irq_uninit.exit:                       ; preds = %if.end.i.i, %do.end.i.i
  tail call void @hclge_devlink_uninit(ptr noundef %1) #16
  %64 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %1, align 8
  %mem_base.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2, i32 0, i32 1
  %66 = ptrtoint ptr %mem_base.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %mem_base.i, align 4
  %tobool.not.i59 = icmp eq ptr %67, null
  br i1 %tobool.not.i59, label %hclge_misc_irq_uninit.exit.hclge_pci_uninit.exit_crit_edge, label %if.then.i61

hclge_misc_irq_uninit.exit.hclge_pci_uninit.exit_crit_edge: ; preds = %hclge_misc_irq_uninit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_pci_uninit.exit

if.then.i61:                                      ; preds = %hclge_misc_irq_uninit.exit
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i60 = getelementptr inbounds %struct.pci_dev, ptr %65, i32 0, i32 44
  tail call void @devm_iounmap(ptr noundef %dev.i60, ptr noundef nonnull %67) #16
  br label %hclge_pci_uninit.exit

hclge_pci_uninit.exit:                            ; preds = %if.then.i61, %hclge_misc_irq_uninit.exit.hclge_pci_uninit.exit_crit_edge
  %68 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %hw, align 8
  tail call void @pcim_iounmap(ptr noundef %65, ptr noundef %69) #16
  tail call void @pci_free_irq_vectors(ptr noundef %65) #16
  tail call void @pci_clear_master(ptr noundef %65) #16
  %call.i.i63 = tail call i32 @pci_select_bars(ptr noundef %65, i32 noundef 512) #16
  tail call void @pci_release_selected_regions(ptr noundef %65, i32 noundef %call.i.i63) #16
  tail call void @pci_disable_device(ptr noundef %65) #16
  %vport_lock = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 61
  tail call void @mutex_destroy(ptr noundef %vport_lock) #16
  %70 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %num_alloc_vport.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %71)
  %cmp34.not.i = icmp eq i16 %71, 0
  br i1 %cmp34.not.i, label %hclge_pci_uninit.exit.hclge_uninit_vport_vlan_table.exit_crit_edge, label %for.body.lr.ph.i67

hclge_pci_uninit.exit.hclge_uninit_vport_vlan_table.exit_crit_edge: ; preds = %hclge_pci_uninit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_uninit_vport_vlan_table.exit

for.body.lr.ph.i67:                               ; preds = %hclge_pci_uninit.exit
  %vport2.i66 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 52
  br label %for.body.i68

for.body.i68:                                     ; preds = %for.inc20.i.for.body.i68_crit_edge, %for.body.lr.ph.i67
  %i.035.i = phi i32 [ 0, %for.body.lr.ph.i67 ], [ %inc.i70, %for.inc20.i.for.body.i68_crit_edge ]
  %72 = ptrtoint ptr %vport2.i66 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %vport2.i66, align 4
  %vlan_list.i = getelementptr %struct.hclge_vport, ptr %73, i32 %i.035.i, i32 24
  %74 = ptrtoint ptr %vlan_list.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %vlan_list.i, align 8
  %cmp11.not30.i = icmp eq ptr %75, %vlan_list.i
  br i1 %cmp11.not30.i, label %for.body.i68.for.inc20.i_crit_edge, label %for.body.i68.for.body13.i_crit_edge

for.body.i68.for.body13.i_crit_edge:              ; preds = %for.body.i68
  br label %for.body13.i

for.body.i68.for.inc20.i_crit_edge:               ; preds = %for.body.i68
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc20.i

for.body13.i:                                     ; preds = %list_del.exit.i.for.body13.i_crit_edge, %for.body.i68.for.body13.i_crit_edge
  %vlan.031.i = phi ptr [ %tmp.0.i, %list_del.exit.i.for.body13.i_crit_edge ], [ %75, %for.body.i68.for.body13.i_crit_edge ]
  %76 = ptrtoint ptr %vlan.031.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %tmp.0.i = load ptr, ptr %vlan.031.i, align 4
  %call.i.i.i69 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %vlan.031.i) #16
  br i1 %call.i.i.i69, label %if.end.i.i.i, label %for.body13.i.list_del.exit.i_crit_edge

for.body13.i.list_del.exit.i_crit_edge:           ; preds = %for.body13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body13.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %vlan.031.i, i32 0, i32 1
  %77 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %prev.i.i.i, align 4
  %79 = ptrtoint ptr %vlan.031.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %vlan.031.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %78, ptr %prev1.i.i.i.i, align 4
  %82 = ptrtoint ptr %78 to i32
  call void @__asan_store4_noabort(i32 %82)
  store volatile ptr %80, ptr %78, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body13.i.list_del.exit.i_crit_edge
  %83 = ptrtoint ptr %vlan.031.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr inttoptr (i32 256 to ptr), ptr %vlan.031.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %vlan.031.i, i32 0, i32 1
  %84 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef %vlan.031.i) #16
  %cmp11.not.i = icmp eq ptr %tmp.0.i, %vlan_list.i
  br i1 %cmp11.not.i, label %list_del.exit.i.for.inc20.i_crit_edge, label %list_del.exit.i.for.body13.i_crit_edge

list_del.exit.i.for.body13.i_crit_edge:           ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body13.i

list_del.exit.i.for.inc20.i_crit_edge:            ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc20.i

for.inc20.i:                                      ; preds = %list_del.exit.i.for.inc20.i_crit_edge, %for.body.i68.for.inc20.i_crit_edge
  %inc.i70 = add nuw nsw i32 %i.035.i, 1
  %85 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %num_alloc_vport.i, align 2
  %conv.i71 = zext i16 %86 to i32
  %cmp.i72 = icmp ult i32 %inc.i70, %conv.i71
  br i1 %cmp.i72, label %for.inc20.i.for.body.i68_crit_edge, label %for.inc20.i.hclge_uninit_vport_vlan_table.exit_crit_edge

for.inc20.i.hclge_uninit_vport_vlan_table.exit_crit_edge: ; preds = %for.inc20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_uninit_vport_vlan_table.exit

for.inc20.i.for.body.i68_crit_edge:               ; preds = %for.inc20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i68

hclge_uninit_vport_vlan_table.exit:               ; preds = %for.inc20.i.hclge_uninit_vport_vlan_table.exit_crit_edge, %hclge_pci_uninit.exit.hclge_uninit_vport_vlan_table.exit_crit_edge
  %87 = ptrtoint ptr %priv to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr null, ptr %priv, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_reset_prepare_general(ptr nocapture noundef readonly %ae_dev, i32 noundef %rst_type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reset_pending = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 12
  %reset_sem = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 14
  %state = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 5
  %reset_type = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 8
  tail call void @down(ptr noundef %reset_sem) #16
  tail call void @_set_bit(i32 noundef 8, ptr noundef %state) #16
  %2 = ptrtoint ptr %reset_type to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %rst_type, ptr %reset_type, align 4
  %call = tail call fastcc i32 @hclge_reset_prepare(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %3 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %reset_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool1.not = icmp eq i32 %4, 0
  br i1 %tobool1.not, label %land.lhs.true.while.end_crit_edge, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.lhs.true.while.end_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

do.end:                                           ; preds = %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %7 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %reset_pending, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.507, i32 noundef %call, i32 noundef %8, i32 noundef 1) #20
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #16
  tail call void @up(ptr noundef %reset_sem) #16
  tail call void @msleep(i32 noundef 500) #16
  tail call void @down(ptr noundef %reset_sem) #16
  tail call void @_set_bit(i32 noundef 8, ptr noundef %state) #16
  %9 = ptrtoint ptr %reset_type to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %rst_type, ptr %reset_type, align 4
  %call.1 = tail call fastcc i32 @hclge_reset_prepare(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1)
  %tobool.not.1 = icmp eq i32 %call.1, 0
  br i1 %tobool.not.1, label %land.lhs.true.1, label %do.end.do.end.1_crit_edge

do.end.do.end.1_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.1

land.lhs.true.1:                                  ; preds = %do.end
  %10 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %reset_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool1.not.1 = icmp eq i32 %11, 0
  br i1 %tobool1.not.1, label %land.lhs.true.1.while.end_crit_edge, label %land.lhs.true.1.do.end.1_crit_edge

land.lhs.true.1.do.end.1_crit_edge:               ; preds = %land.lhs.true.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.1

land.lhs.true.1.while.end_crit_edge:              ; preds = %land.lhs.true.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

do.end.1:                                         ; preds = %land.lhs.true.1.do.end.1_crit_edge, %do.end.do.end.1_crit_edge
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 8
  %dev.1 = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  %14 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %reset_pending, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.1, ptr noundef nonnull @.str.507, i32 noundef %call.1, i32 noundef %15, i32 noundef 2) #20
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #16
  tail call void @up(ptr noundef %reset_sem) #16
  tail call void @msleep(i32 noundef 500) #16
  tail call void @down(ptr noundef %reset_sem) #16
  tail call void @_set_bit(i32 noundef 8, ptr noundef %state) #16
  %16 = ptrtoint ptr %reset_type to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %rst_type, ptr %reset_type, align 4
  %call.2 = tail call fastcc i32 @hclge_reset_prepare(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.2)
  %tobool.not.2 = icmp eq i32 %call.2, 0
  br i1 %tobool.not.2, label %land.lhs.true.2, label %do.end.1.do.end.2_crit_edge

do.end.1.do.end.2_crit_edge:                      ; preds = %do.end.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.2

land.lhs.true.2:                                  ; preds = %do.end.1
  %17 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %reset_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool1.not.2 = icmp eq i32 %18, 0
  br i1 %tobool1.not.2, label %land.lhs.true.2.while.end_crit_edge, label %land.lhs.true.2.do.end.2_crit_edge

land.lhs.true.2.do.end.2_crit_edge:               ; preds = %land.lhs.true.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.2

land.lhs.true.2.while.end_crit_edge:              ; preds = %land.lhs.true.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

do.end.2:                                         ; preds = %land.lhs.true.2.do.end.2_crit_edge, %do.end.1.do.end.2_crit_edge
  %19 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %1, align 8
  %dev.2 = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44
  %21 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %reset_pending, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.2, ptr noundef nonnull @.str.507, i32 noundef %call.2, i32 noundef %22, i32 noundef 3) #20
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #16
  tail call void @up(ptr noundef %reset_sem) #16
  tail call void @msleep(i32 noundef 500) #16
  tail call void @down(ptr noundef %reset_sem) #16
  tail call void @_set_bit(i32 noundef 8, ptr noundef %state) #16
  %23 = ptrtoint ptr %reset_type to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %rst_type, ptr %reset_type, align 4
  %call.3 = tail call fastcc i32 @hclge_reset_prepare(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.3)
  %tobool.not.3 = icmp eq i32 %call.3, 0
  br i1 %tobool.not.3, label %land.lhs.true.3, label %do.end.2.do.end.3_crit_edge

do.end.2.do.end.3_crit_edge:                      ; preds = %do.end.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.3

land.lhs.true.3:                                  ; preds = %do.end.2
  %24 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %reset_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool1.not.3 = icmp eq i32 %25, 0
  br i1 %tobool1.not.3, label %land.lhs.true.3.while.end_crit_edge, label %land.lhs.true.3.do.end.3_crit_edge

land.lhs.true.3.do.end.3_crit_edge:               ; preds = %land.lhs.true.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.3

land.lhs.true.3.while.end_crit_edge:              ; preds = %land.lhs.true.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

do.end.3:                                         ; preds = %land.lhs.true.3.do.end.3_crit_edge, %do.end.2.do.end.3_crit_edge
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %1, align 8
  %dev.3 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  %28 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %reset_pending, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.3, ptr noundef nonnull @.str.507, i32 noundef %call.3, i32 noundef %29, i32 noundef 4) #20
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #16
  tail call void @up(ptr noundef %reset_sem) #16
  tail call void @msleep(i32 noundef 500) #16
  tail call void @down(ptr noundef %reset_sem) #16
  tail call void @_set_bit(i32 noundef 8, ptr noundef %state) #16
  %30 = ptrtoint ptr %reset_type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %rst_type, ptr %reset_type, align 4
  %call.4 = tail call fastcc i32 @hclge_reset_prepare(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.4)
  %tobool.not.4 = icmp eq i32 %call.4, 0
  br i1 %tobool.not.4, label %land.lhs.true.4, label %do.end.3.do.end.4_crit_edge

do.end.3.do.end.4_crit_edge:                      ; preds = %do.end.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.4

land.lhs.true.4:                                  ; preds = %do.end.3
  %31 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %reset_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool1.not.4 = icmp eq i32 %32, 0
  br i1 %tobool1.not.4, label %land.lhs.true.4.while.end_crit_edge, label %land.lhs.true.4.do.end.4_crit_edge

land.lhs.true.4.do.end.4_crit_edge:               ; preds = %land.lhs.true.4
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.4

land.lhs.true.4.while.end_crit_edge:              ; preds = %land.lhs.true.4
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

do.end.4:                                         ; preds = %land.lhs.true.4.do.end.4_crit_edge, %do.end.3.do.end.4_crit_edge
  %33 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %1, align 8
  %dev.4 = getelementptr inbounds %struct.pci_dev, ptr %34, i32 0, i32 44
  %35 = ptrtoint ptr %reset_pending to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %reset_pending, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.4, ptr noundef nonnull @.str.507, i32 noundef %call.4, i32 noundef %36, i32 noundef 5) #20
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #16
  tail call void @up(ptr noundef %reset_sem) #16
  tail call void @msleep(i32 noundef 500) #16
  br label %while.end

while.end:                                        ; preds = %do.end.4, %land.lhs.true.4.while.end_crit_edge, %land.lhs.true.3.while.end_crit_edge, %land.lhs.true.2.while.end_crit_edge, %land.lhs.true.1.while.end_crit_edge, %land.lhs.true.while.end_crit_edge
  %misc_vector = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %37 = ptrtoint ptr %misc_vector to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %misc_vector, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %38, i32 0) #16, !srcloc !1459
  %comm_state = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2, i32 0, i32 3
  tail call void @_set_bit(i32 noundef 0, ptr noundef %comm_state) #16
  %39 = ptrtoint ptr %reset_type to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %reset_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %40)
  %cmp7 = icmp eq i32 %40, 4
  br i1 %cmp7, label %if.then8, label %while.end.if.end10_crit_edge

while.end.if.end10_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10

if.then8:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  %flr_rst_cnt = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 13, i32 3
  %41 = ptrtoint ptr %flr_rst_cnt to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %flr_rst_cnt, align 4
  %inc9 = add i32 %42, 1
  store i32 %inc9, ptr %flr_rst_cnt, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %while.end.if.end10_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_reset_done(ptr nocapture noundef readonly %ae_dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %misc_vector = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %2 = ptrtoint ptr %misc_vector to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %misc_vector, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %3, i32 16777216) #16, !srcloc !1459
  %call = tail call fastcc i32 @hclge_reset_rebuild(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.509, i32 noundef %call) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %reset_type = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %reset_type to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 8, ptr %reset_type, align 4
  %state = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 5
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #16
  %reset_sem = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 14
  tail call void @up(ptr noundef %reset_sem) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_init_client_instance(ptr noundef %client, ptr noundef %ae_dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %vport1 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 52
  %2 = ptrtoint ptr %vport1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vport1, align 4
  %type = getelementptr inbounds %struct.hnae3_client, ptr %client, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.761)
  switch i32 %5, label %entry.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %nic_client = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 54
  %7 = ptrtoint ptr %nic_client to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %client, ptr %nic_client, align 4
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %3, i32 0, i32 13
  %8 = ptrtoint ptr %nic to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %client, ptr %nic, align 8
  %9 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %priv, align 4
  %reset_cnt.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 13, i32 6
  %11 = ptrtoint ptr %reset_cnt.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %reset_cnt.i, align 8
  %ops.i = getelementptr inbounds %struct.hnae3_client, ptr %client, i32 0, i32 3
  %13 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %call.i = tail call i32 %16(ptr noundef %nic) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %sw.bb.clear_nic_crit_edge

sw.bb.clear_nic_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %clear_nic

if.end.i:                                         ; preds = %sw.bb
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 4, ptr noundef %state.i) #16
  %17 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %state.i, align 4
  %19 = and i32 %18, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool5.not.i = icmp eq i32 %19, 0
  br i1 %tobool5.not.i, label %lor.lhs.false.i, label %if.end.i.init_nic_err.i_crit_edge

if.end.i.init_nic_err.i_crit_edge:                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %init_nic_err.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  %20 = ptrtoint ptr %reset_cnt.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %reset_cnt.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %21)
  %cmp.not.i = icmp eq i32 %12, %21
  br i1 %cmp.not.i, label %if.end9.i, label %lor.lhs.false.i.init_nic_err.i_crit_edge

lor.lhs.false.i.init_nic_err.i_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %init_nic_err.i

if.end9.i:                                        ; preds = %lor.lhs.false.i
  %call10.i = tail call i32 @hclge_config_nic_hw_error(ptr noundef %10, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.end13.i, label %do.end.i

do.end.i:                                         ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ae_dev, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.511, i32 noundef %call10.i) #20
  br label %init_nic_err.i

if.end13.i:                                       ; preds = %if.end9.i
  tail call void @hnae3_set_client_init_flag(ptr noundef %client, ptr noundef %ae_dev, i32 noundef 1) #16
  %vport14.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 52
  %24 = ptrtoint ptr %vport14.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vport14.i, align 4
  %msg_enable.i = getelementptr inbounds %struct.hclge_vport, ptr %25, i32 0, i32 13, i32 11
  %26 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %msg_enable.i, align 8
  %and.i = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool16.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool16.not.i, label %if.end13.i.if.end_crit_edge, label %if.then17.i

if.end13.i.if.end_crit_edge:                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then17.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %10, align 8
  %dev1.i.i = getelementptr inbounds %struct.pci_dev, ptr %29, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.513) #20
  %num_tqps.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 16
  %30 = ptrtoint ptr %num_tqps.i.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %num_tqps.i.i, align 4
  %conv.i.i = zext i16 %31 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.516, i32 noundef %conv.i.i) #20
  %num_tx_desc.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 27
  %32 = ptrtoint ptr %num_tx_desc.i.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %num_tx_desc.i.i, align 2
  %conv8.i.i = zext i16 %33 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.519, i32 noundef %conv8.i.i) #20
  %num_rx_desc.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 28
  %34 = ptrtoint ptr %num_rx_desc.i.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %num_rx_desc.i.i, align 8
  %conv12.i.i = zext i16 %35 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.522, i32 noundef %conv12.i.i) #20
  %num_alloc_vport.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 24
  %36 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %num_alloc_vport.i.i, align 2
  %conv16.i.i = zext i16 %37 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.525, i32 noundef %conv16.i.i) #20
  %num_req_vfs.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 17
  %38 = ptrtoint ptr %num_req_vfs.i.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %num_req_vfs.i.i, align 2
  %conv20.i.i = zext i16 %39 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.528, i32 noundef %conv20.i.i) #20
  %hw_tc_map.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 29
  %40 = ptrtoint ptr %hw_tc_map.i.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %hw_tc_map.i.i, align 2
  %conv24.i.i = zext i8 %41 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.531, i32 noundef %conv24.i.i) #20
  %pkt_buf_size.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 57
  %42 = ptrtoint ptr %pkt_buf_size.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %pkt_buf_size.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.534, i32 noundef %43) #20
  %tx_buf_size.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 58
  %44 = ptrtoint ptr %tx_buf_size.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %tx_buf_size.i.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.537, i32 noundef %45) #20
  %dv_buf_size.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 59
  %46 = ptrtoint ptr %dv_buf_size.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %dv_buf_size.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.540, i32 noundef %47) #20
  %flag.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 56
  %48 = ptrtoint ptr %flag.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %flag.i.i, align 4
  %and.i.i = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %cond.i.i = select i1 %tobool.not.i.i, ptr @.str.546, ptr @.str.545
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.543, ptr noundef nonnull %cond.i.i) #20
  %50 = ptrtoint ptr %flag.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %flag.i.i, align 4
  %and41.i.i = and i32 %51, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41.i.i)
  %tobool42.not.i.i = icmp eq i32 %and41.i.i, 0
  %cond43.i.i = select i1 %tobool42.not.i.i, ptr @.str.551, ptr @.str.550
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.548, ptr noundef nonnull %cond43.i.i) #20
  %52 = ptrtoint ptr %flag.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %flag.i.i, align 4
  %and48.i.i = and i32 %53, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48.i.i)
  %tobool49.not.i.i = icmp eq i32 %and48.i.i, 0
  %cond50.i.i = select i1 %tobool49.not.i.i, ptr @.str.551, ptr @.str.550
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.553, ptr noundef nonnull %cond50.i.i) #20
  %tx_spare_buf_size.i.i = getelementptr inbounds %struct.hclge_dev, ptr %10, i32 0, i32 22
  %54 = ptrtoint ptr %tx_spare_buf_size.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %tx_spare_buf_size.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.556, i32 noundef %55) #20
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.559) #20
  br label %if.end

init_nic_err.i:                                   ; preds = %do.end.i, %lor.lhs.false.i.init_nic_err.i_crit_edge, %if.end.i.init_nic_err.i_crit_edge
  %ret.0.i = phi i32 [ %call10.i, %do.end.i ], [ -16, %lor.lhs.false.i.init_nic_err.i_crit_edge ], [ -16, %if.end.i.init_nic_err.i_crit_edge ]
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %state.i) #16
  %56 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %state.i, align 4
  %58 = and i32 %57, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool22.not49.i = icmp eq i32 %58, 0
  br i1 %tobool22.not49.i, label %init_nic_err.i.hclge_init_nic_client_instance.exit_crit_edge, label %init_nic_err.i.while.body.i_crit_edge

init_nic_err.i.while.body.i_crit_edge:            ; preds = %init_nic_err.i
  br label %while.body.i

init_nic_err.i.hclge_init_nic_client_instance.exit_crit_edge: ; preds = %init_nic_err.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_init_nic_client_instance.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %init_nic_err.i.while.body.i_crit_edge
  tail call void @msleep(i32 noundef 100) #16
  %59 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %state.i, align 4
  %61 = and i32 %60, 256
  %tobool22.not.i = icmp eq i32 %61, 0
  br i1 %tobool22.not.i, label %while.body.i.hclge_init_nic_client_instance.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

while.body.i.hclge_init_nic_client_instance.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_init_nic_client_instance.exit

hclge_init_nic_client_instance.exit:              ; preds = %while.body.i.hclge_init_nic_client_instance.exit_crit_edge, %init_nic_err.i.hclge_init_nic_client_instance.exit_crit_edge
  %62 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %ops.i, align 4
  %uninit_instance.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %uninit_instance.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %uninit_instance.i, align 4
  tail call void %65(ptr noundef %nic, i1 noundef zeroext false) #16
  br label %clear_nic

if.end:                                           ; preds = %if.then17.i, %if.end13.i.if.end_crit_edge
  %call3 = tail call fastcc i32 @hclge_init_roce_client_instance(ptr noundef %ae_dev, ptr noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end.clear_roce_crit_edge

if.end.clear_roce_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %clear_roce

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb7:                                           ; preds = %entry
  %ae_dev8 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 1
  %66 = ptrtoint ptr %ae_dev8 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %ae_dev8, align 4
  %flag = getelementptr inbounds %struct.hnae3_ae_dev, ptr %67, i32 0, i32 3
  %68 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %flag, align 4
  %70 = and i32 %69, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool9.not = icmp eq i32 %70, 0
  br i1 %tobool9.not, label %sw.bb7.if.end12_crit_edge, label %if.then10

sw.bb7.if.end12_crit_edge:                        ; preds = %sw.bb7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.then10:                                        ; preds = %sw.bb7
  call void @__sanitizer_cov_trace_pc() #18
  %roce_client = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 55
  %71 = ptrtoint ptr %roce_client to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %client, ptr %roce_client, align 8
  %roce = getelementptr inbounds %struct.hclge_vport, ptr %3, i32 0, i32 14
  %72 = ptrtoint ptr %roce to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %client, ptr %roce, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %sw.bb7.if.end12_crit_edge
  %call13 = tail call fastcc i32 @hclge_init_roce_client_instance(ptr noundef %ae_dev, ptr noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end12.cleanup_crit_edge, label %if.end12.clear_roce_crit_edge

if.end12.clear_roce_crit_edge:                    ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %clear_roce

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

clear_nic:                                        ; preds = %hclge_init_nic_client_instance.exit, %sw.bb.clear_nic_crit_edge
  %retval.0.i52 = phi i32 [ %ret.0.i, %hclge_init_nic_client_instance.exit ], [ %call.i, %sw.bb.clear_nic_crit_edge ]
  %73 = ptrtoint ptr %nic_client to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr null, ptr %nic_client, align 4
  br label %cleanup.sink.split

clear_roce:                                       ; preds = %if.end12.clear_roce_crit_edge, %if.end.clear_roce_crit_edge
  %ret.0 = phi i32 [ %call13, %if.end12.clear_roce_crit_edge ], [ %call3, %if.end.clear_roce_crit_edge ]
  %roce_client20 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 55
  %74 = ptrtoint ptr %roce_client20 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr null, ptr %roce_client20, align 8
  %roce21 = getelementptr inbounds %struct.hclge_vport, ptr %3, i32 0, i32 14
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %clear_roce, %clear_nic
  %roce21.sink = phi ptr [ %roce21, %clear_roce ], [ %nic, %clear_nic ]
  %retval.0.ph = phi i32 [ %ret.0, %clear_roce ], [ %retval.0.i52, %clear_nic ]
  %75 = ptrtoint ptr %roce21.sink to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr null, ptr %roce21.sink, align 8
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end12.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %if.end12.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_uninit_client_instance(ptr nocapture noundef readonly %client, ptr nocapture noundef readonly %ae_dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %vport1 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 52
  %2 = ptrtoint ptr %vport1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vport1, align 4
  %roce_client = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 55
  %4 = ptrtoint ptr %roce_client to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %roce_client, align 8
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %state = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 5
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %state) #16
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state, align 4
  %8 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool3.not45 = icmp eq i32 %8, 0
  br i1 %tobool3.not45, label %if.then.while.end_crit_edge, label %if.then.while.body_crit_edge

if.then.while.body_crit_edge:                     ; preds = %if.then
  br label %while.body

if.then.while.end_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.then.while.body_crit_edge
  tail call void @msleep(i32 noundef 100) #16
  %9 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %state, align 4
  %11 = and i32 %10, 256
  %tobool3.not = icmp eq i32 %11, 0
  br i1 %tobool3.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %if.then.while.end_crit_edge
  %12 = ptrtoint ptr %roce_client to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %roce_client, align 8
  %ops = getelementptr inbounds %struct.hnae3_client, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops, align 4
  %uninit_instance = getelementptr inbounds %struct.hnae3_client_ops, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %uninit_instance to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %uninit_instance, align 4
  %roce = getelementptr inbounds %struct.hclge_vport, ptr %3, i32 0, i32 14
  tail call void %17(ptr noundef %roce, i1 noundef zeroext false) #16
  %18 = ptrtoint ptr %roce_client to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %roce_client, align 8
  %19 = ptrtoint ptr %roce to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %roce, align 8
  br label %if.end

if.end:                                           ; preds = %while.end, %entry.if.end_crit_edge
  %type = getelementptr inbounds %struct.hnae3_client, ptr %client, i32 0, i32 2
  %20 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %21)
  %cmp = icmp eq i32 %21, 1
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end9

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %nic_client = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 54
  %22 = ptrtoint ptr %nic_client to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %nic_client, align 4
  %tobool10.not = icmp eq ptr %23, null
  br i1 %tobool10.not, label %if.end9.cleanup_crit_edge, label %land.lhs.true

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end9
  %ops11 = getelementptr inbounds %struct.hnae3_client, ptr %client, i32 0, i32 3
  %24 = ptrtoint ptr %ops11 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ops11, align 4
  %uninit_instance12 = getelementptr inbounds %struct.hnae3_client_ops, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %uninit_instance12 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %uninit_instance12, align 4
  %tobool13.not = icmp eq ptr %27, null
  br i1 %tobool13.not, label %land.lhs.true.cleanup_crit_edge, label %if.then14

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then14:                                        ; preds = %land.lhs.true
  %state15 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 5
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %state15) #16
  %28 = ptrtoint ptr %state15 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %state15, align 4
  %30 = and i32 %29, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool19.not46 = icmp eq i32 %30, 0
  br i1 %tobool19.not46, label %if.then14.while.end21_crit_edge, label %if.then14.while.body20_crit_edge

if.then14.while.body20_crit_edge:                 ; preds = %if.then14
  br label %while.body20

if.then14.while.end21_crit_edge:                  ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end21

while.body20:                                     ; preds = %while.body20.while.body20_crit_edge, %if.then14.while.body20_crit_edge
  tail call void @msleep(i32 noundef 100) #16
  %31 = ptrtoint ptr %state15 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %state15, align 4
  %33 = and i32 %32, 256
  %tobool19.not = icmp eq i32 %33, 0
  br i1 %tobool19.not, label %while.body20.while.end21_crit_edge, label %while.body20.while.body20_crit_edge

while.body20.while.body20_crit_edge:              ; preds = %while.body20
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body20

while.body20.while.end21_crit_edge:               ; preds = %while.body20
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end21

while.end21:                                      ; preds = %while.body20.while.end21_crit_edge, %if.then14.while.end21_crit_edge
  %34 = ptrtoint ptr %ops11 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ops11, align 4
  %uninit_instance23 = getelementptr inbounds %struct.hnae3_client_ops, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %uninit_instance23 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %uninit_instance23, align 4
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %3, i32 0, i32 13
  tail call void %37(ptr noundef %nic, i1 noundef zeroext false) #16
  %38 = ptrtoint ptr %nic_client to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %nic_client, align 4
  %39 = ptrtoint ptr %nic to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %nic, align 8
  br label %cleanup

cleanup:                                          ; preds = %while.end21, %land.lhs.true.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %if.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_ae_start(ptr noundef %handle) #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %6 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %7 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 769, i1 noundef zeroext false) #16
  %8 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1072136704, ptr %6, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool46.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool46.not.i, label %hclge_get_vport.exit.hclge_cfg_mac_mode.exit_crit_edge, label %do.end50.i

hclge_get_vport.exit.hclge_cfg_mac_mode.exit_crit_edge: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_cfg_mac_mode.exit

do.end50.i:                                       ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.563, i32 noundef %call.i.i) #20
  br label %hclge_cfg_mac_mode.exit

hclge_cfg_mac_mode.exit:                          ; preds = %do.end50.i, %hclge_get_vport.exit.hclge_cfg_mac_mode.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %state = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  call void @_clear_bit(i32 noundef 1, ptr noundef %state) #16
  %link = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 16
  %11 = ptrtoint ptr %link to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %link, align 4
  call void @hclge_comm_reset_tqp_stats(ptr noundef %handle) #16
  call void @hclge_mac_start_phy(ptr noundef %5) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_ae_stop(ptr noundef %handle) #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %state = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state) #16
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock) #16
  %call1 = tail call fastcc i32 @hclge_clear_arfs_rules(ptr noundef %5)
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state, align 4
  %8 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.if.end_crit_edge, label %land.lhs.true

hclge_get_vport.exit.if.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %hclge_get_vport.exit
  %reset_type = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 8
  %9 = ptrtoint ptr %reset_type to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %reset_type, align 4
  %11 = and i32 %10, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %11)
  %switch = icmp eq i32 %11, 4
  br i1 %switch, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @hclge_mac_stop_phy(ptr noundef %5) #16
  tail call fastcc void @hclge_update_link_status(ptr noundef %5)
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %hclge_get_vport.exit.if.end_crit_edge
  %call8 = tail call i32 @hclge_reset_tqp(ptr noundef %handle)
  %call9 = tail call i32 @hclge_config_mac_tnl_int(ptr noundef %5, i1 noundef zeroext false) #16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %12 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %13 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 769, i1 noundef zeroext false) #16
  %14 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %12, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool46.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool46.not.i, label %if.end.hclge_cfg_mac_mode.exit_crit_edge, label %do.end50.i

if.end.hclge_cfg_mac_mode.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_cfg_mac_mode.exit

do.end50.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.563, i32 noundef %call.i.i) #20
  br label %hclge_cfg_mac_mode.exit

hclge_cfg_mac_mode.exit:                          ; preds = %do.end50.i, %if.end.hclge_cfg_mac_mode.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  call void @hclge_mac_stop_phy(ptr noundef %5) #16
  call void @hclge_comm_reset_tqp_stats(ptr noundef %handle) #16
  call fastcc void @hclge_update_link_status(ptr noundef %5)
  br label %cleanup

cleanup:                                          ; preds = %hclge_cfg_mac_mode.exit, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_client_start(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %call1 = tail call i32 @hclge_vport_start(ptr noundef %add.ptr9.i)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_client_stop(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %state.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 15
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_status(ptr nocapture noundef readonly %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  tail call fastcc void @hclge_update_link_status(ptr noundef %5)
  %link = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 16
  %6 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %link, align 4
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @hclge_get_ksettings_an_result(ptr nocapture noundef readonly %handle, ptr noundef writeonly %auto_neg, ptr noundef writeonly %speed, ptr noundef writeonly %duplex) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %tobool.not = icmp eq ptr %speed, null
  br i1 %tobool.not, label %hclge_get_vport.exit.if.end_crit_edge, label %if.then

hclge_get_vport.exit.if.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %speed1 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 9
  %6 = ptrtoint ptr %speed1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %speed1, align 4
  %8 = ptrtoint ptr %speed to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %speed, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %hclge_get_vport.exit.if.end_crit_edge
  %tobool2.not = icmp eq ptr %duplex, null
  br i1 %tobool2.not, label %if.end.if.end7_crit_edge, label %if.then3

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %duplex6 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 6
  %9 = ptrtoint ptr %duplex6 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %duplex6, align 1
  %11 = ptrtoint ptr %duplex to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %duplex, align 1
  br label %if.end7

if.end7:                                          ; preds = %if.then3, %if.end.if.end7_crit_edge
  %tobool8.not = icmp eq ptr %auto_neg, null
  br i1 %tobool8.not, label %if.end7.if.end12_crit_edge, label %if.then9

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %autoneg = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 5
  %12 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %autoneg, align 2
  %14 = ptrtoint ptr %auto_neg to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %auto_neg, align 1
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %if.end7.if.end12_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_cfg_mac_speed_dup_h(ptr nocapture noundef readonly %handle, i32 noundef %speed, i8 noundef zeroext %duplex) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %6 = zext i32 %speed to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.762)
  switch i32 %speed, label %if.then.i.i [
    i32 10, label %hclge_get_vport.exit.hclge_check_speed_dup.exit.i_crit_edge
    i32 100, label %hclge_get_vport.exit.hclge_check_speed_dup.exit.i_crit_edge4
  ]

hclge_get_vport.exit.hclge_check_speed_dup.exit.i_crit_edge4: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_check_speed_dup.exit.i

hclge_get_vport.exit.hclge_check_speed_dup.exit.i_crit_edge: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_check_speed_dup.exit.i

if.then.i.i:                                      ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_check_speed_dup.exit.i

hclge_check_speed_dup.exit.i:                     ; preds = %if.then.i.i, %hclge_get_vport.exit.hclge_check_speed_dup.exit.i_crit_edge, %hclge_get_vport.exit.hclge_check_speed_dup.exit.i_crit_edge4
  %duplex.addr.0.i.i = phi i8 [ %duplex, %hclge_get_vport.exit.hclge_check_speed_dup.exit.i_crit_edge ], [ 1, %if.then.i.i ], [ %duplex, %hclge_get_vport.exit.hclge_check_speed_dup.exit.i_crit_edge4 ]
  %support_autoneg.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 7
  %7 = ptrtoint ptr %support_autoneg.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %support_autoneg.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i2 = icmp eq i8 %8, 0
  br i1 %tobool.not.i2, label %land.lhs.true.i, label %hclge_check_speed_dup.exit.i.if.end.i_crit_edge

hclge_check_speed_dup.exit.i.if.end.i_crit_edge:  ; preds = %hclge_check_speed_dup.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %hclge_check_speed_dup.exit.i
  %speed2.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 9
  %9 = ptrtoint ptr %speed2.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %speed2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %speed)
  %cmp.i3 = icmp eq i32 %10, %speed
  br i1 %cmp.i3, label %land.lhs.true3.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %duplex4.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 6
  %11 = ptrtoint ptr %duplex4.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %duplex4.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %12, i8 %duplex.addr.0.i.i)
  %cmp6.i = icmp eq i8 %12, %duplex.addr.0.i.i
  br i1 %cmp6.i, label %land.lhs.true3.i.hclge_cfg_mac_speed_dup.exit_crit_edge, label %land.lhs.true3.i.if.end.i_crit_edge

land.lhs.true3.i.if.end.i_crit_edge:              ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true3.i.hclge_cfg_mac_speed_dup.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_cfg_mac_speed_dup.exit

if.end.i:                                         ; preds = %land.lhs.true3.i.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %hclge_check_speed_dup.exit.i.if.end.i_crit_edge
  %call8.i = tail call fastcc i32 @hclge_cfg_mac_speed_dup_hw(ptr noundef %5, i32 noundef %speed, i8 noundef zeroext %duplex.addr.0.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.end11.i, label %if.end.i.hclge_cfg_mac_speed_dup.exit_crit_edge

if.end.i.hclge_cfg_mac_speed_dup.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_cfg_mac_speed_dup.exit

if.end11.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %speed14.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 9
  %13 = ptrtoint ptr %speed14.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %speed, ptr %speed14.i, align 4
  %duplex17.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 6
  %14 = ptrtoint ptr %duplex17.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %duplex.addr.0.i.i, ptr %duplex17.i, align 1
  br label %hclge_cfg_mac_speed_dup.exit

hclge_cfg_mac_speed_dup.exit:                     ; preds = %if.end11.i, %if.end.i.hclge_cfg_mac_speed_dup.exit_crit_edge, %land.lhs.true3.i.hclge_cfg_mac_speed_dup.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end11.i ], [ 0, %land.lhs.true3.i.hclge_cfg_mac_speed_dup.exit_crit_edge ], [ %call8.i, %if.end.i.hclge_cfg_mac_speed_dup.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_get_media_type(ptr nocapture noundef readonly %handle, ptr noundef writeonly %media_type, ptr noundef writeonly %module_type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  tail call fastcc void @hclge_update_port_info(ptr noundef %5)
  %tobool.not = icmp eq ptr %media_type, null
  br i1 %tobool.not, label %hclge_get_vport.exit.if.end_crit_edge, label %if.then

hclge_get_vport.exit.if.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %media_type2 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 3
  %6 = ptrtoint ptr %media_type2 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %media_type2, align 1
  %8 = ptrtoint ptr %media_type to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %media_type, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %hclge_get_vport.exit.if.end_crit_edge
  %tobool3.not = icmp eq ptr %module_type, null
  br i1 %tobool3.not, label %if.end.if.end8_crit_edge, label %if.then4

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %module_type7 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 12
  %9 = ptrtoint ptr %module_type7 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %module_type7, align 4
  %conv = trunc i32 %10 to i8
  %11 = ptrtoint ptr %module_type to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %conv, ptr %module_type, align 1
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end.if.end8_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @hclge_check_port_speed(ptr nocapture noundef readonly %handle, i32 noundef %speed) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %speed_ability1 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 11
  %6 = ptrtoint ptr %speed_ability1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %speed_ability1, align 4
  %8 = zext i32 %speed to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.763)
  switch i32 %speed, label %hclge_get_vport.exit.cleanup_crit_edge [
    i32 10, label %hclge_get_vport.exit.if.end_crit_edge
    i32 100, label %if.then.fold.split.i
    i32 1000, label %if.then.fold.split13.i
    i32 10000, label %if.then.fold.split14.i
    i32 25000, label %if.then.fold.split15.i
    i32 40000, label %if.then.fold.split16.i
    i32 50000, label %if.then.fold.split17.i
    i32 100000, label %if.then.fold.split18.i
    i32 200000, label %if.then.fold.split19.i
  ]

hclge_get_vport.exit.if.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.fold.split.i:                             ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.fold.split13.i:                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.fold.split14.i:                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.fold.split15.i:                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.fold.split16.i:                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.fold.split17.i:                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.fold.split18.i:                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.fold.split19.i:                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end:                                           ; preds = %if.then.fold.split19.i, %if.then.fold.split18.i, %if.then.fold.split17.i, %if.then.fold.split16.i, %if.then.fold.split15.i, %if.then.fold.split14.i, %if.then.fold.split13.i, %if.then.fold.split.i, %hclge_get_vport.exit.if.end_crit_edge
  %conv.lcssa.i = phi i32 [ 0, %hclge_get_vport.exit.if.end_crit_edge ], [ 1, %if.then.fold.split.i ], [ 2, %if.then.fold.split13.i ], [ 3, %if.then.fold.split14.i ], [ 4, %if.then.fold.split15.i ], [ 5, %if.then.fold.split16.i ], [ 6, %if.then.fold.split17.i ], [ 7, %if.then.fold.split18.i ], [ 8, %if.then.fold.split19.i ]
  %speed_bit7.i = getelementptr [9 x %struct.hclge_speed_bit_map], ptr @speed_bit_map, i32 0, i32 %conv.lcssa.i, i32 1
  %9 = ptrtoint ptr %speed_bit7.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %speed_bit7.i, align 4
  %and = and i32 %10, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  %. = select i1 %tobool3.not, i32 -22, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %., %if.end ], [ -22, %hclge_get_vport.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @hclge_get_fec(ptr nocapture noundef readonly %handle, ptr noundef writeonly %fec_ability, ptr noundef writeonly %fec_mode) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %tobool.not = icmp eq ptr %fec_ability, null
  br i1 %tobool.not, label %hclge_get_vport.exit.if.end_crit_edge, label %if.then

hclge_get_vport.exit.if.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %fec_ability2 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 15
  %6 = ptrtoint ptr %fec_ability2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fec_ability2, align 4
  %conv = trunc i32 %7 to i8
  %8 = ptrtoint ptr %fec_ability to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv, ptr %fec_ability, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %hclge_get_vport.exit.if.end_crit_edge
  %tobool3.not = icmp eq ptr %fec_mode, null
  br i1 %tobool3.not, label %if.end.if.end7_crit_edge, label %if.then4

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %fec_mode5 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 13
  %9 = ptrtoint ptr %fec_mode5 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %fec_mode5, align 4
  %conv6 = trunc i32 %10 to i8
  %11 = ptrtoint ptr %fec_mode to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %conv6, ptr %fec_mode, align 1
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_fec(ptr nocapture noundef readonly %handle, i32 noundef %fec_mode) #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %fec_mode)
  %tobool.not = icmp eq i32 %fec_mode, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.if.end_crit_edge, label %land.lhs.true

hclge_get_vport.exit.if.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %hclge_get_vport.exit
  %fec_ability = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 15
  %6 = ptrtoint ptr %fec_ability to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fec_ability, align 4
  %and = and i32 %7, %fec_mode
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %do.end, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.565) #20
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %hclge_get_vport.exit.if.end_crit_edge
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %10 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %11 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 794, i1 noundef zeroext false) #16
  %and.i = and i32 %fec_mode, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i17 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i17, label %if.end.if.end.i_crit_edge, label %do.body.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

do.body.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %10, align 4
  %14 = or i8 %13, 1
  store i8 %14, ptr %10, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %do.body.i, %if.end.if.end.i_crit_edge
  %and7.i = and i32 %fec_mode, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %if.end.i.if.end21.i_crit_edge, label %do.body10.i

if.end.i.if.end21.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21.i

do.body10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %10, align 4
  %17 = and i8 %16, -15
  %18 = or i8 %17, 4
  store i8 %18, ptr %10, align 4
  br label %if.end21.i

if.end21.i:                                       ; preds = %do.body10.i, %if.end.i.if.end21.i_crit_edge
  %and22.i = and i32 %fec_mode, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i)
  %tobool23.not.i = icmp eq i32 %and22.i, 0
  br i1 %tobool23.not.i, label %if.end21.i.if.end36.i_crit_edge, label %do.body25.i

if.end21.i.if.end36.i_crit_edge:                  ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end36.i

do.body25.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %10, align 4
  %21 = and i8 %20, -15
  %22 = or i8 %21, 2
  store i8 %22, ptr %10, align 4
  br label %if.end36.i

if.end36.i:                                       ; preds = %do.body25.i, %if.end21.i.if.end36.i_crit_edge
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool37.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool37.not.i, label %if.end6, label %hclge_set_fec_hw.exit

hclge_set_fec_hw.exit:                            ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.298, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

if.end6:                                          ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %or = or i32 %fec_mode, 8
  %user_fec_mode = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 14
  %25 = ptrtoint ptr %user_fec_mode to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %or, ptr %user_fec_mode, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %hclge_set_fec_hw.exit, %do.end
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -22, %do.end ], [ %call.i.i, %hclge_set_fec_hw.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_loopback(ptr nocapture noundef readonly %handle, i32 noundef %loop_mode, i1 noundef zeroext %en) #0 align 64 {
entry:
  %desc.i.i55 = alloca %struct.hclge_desc, align 4
  %desc.i.i.i.i = alloca %struct.hclge_desc, align 4
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ae_dev, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %7, i32 0, i32 6
  %8 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %9)
  %cmp = icmp ugt i32 %9, 32
  br i1 %cmp, label %if.then, label %hclge_get_vport.exit.if.end4_crit_edge

hclge_get_vport.exit.if.end4_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then:                                          ; preds = %hclge_get_vport.exit
  %conv = select i1 %en, i8 0, i8 2
  %call1 = tail call fastcc i32 @hclge_config_switch_param(ptr noundef %5, i32 noundef 0, i8 noundef zeroext %conv, i8 noundef zeroext -3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.then.if.end4_crit_edge, label %if.then.cleanup29_crit_edge

if.then.cleanup29_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup29

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.end4:                                          ; preds = %if.then.if.end4_crit_edge, %hclge_get_vport.exit.if.end4_crit_edge
  %10 = zext i32 %loop_mode to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.764)
  switch i32 %loop_mode, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %if.end4.sw.bb7_crit_edge
    i32 2, label %if.end4.sw.bb7_crit_edge87
    i32 3, label %sw.bb10
  ]

if.end4.sw.bb7_crit_edge87:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb7

if.end4.sw.bb7_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb7

sw.bb:                                            ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = tail call fastcc i32 @hclge_set_app_loopback(ptr noundef %5, i1 noundef zeroext %en)
  br label %sw.epilog

sw.bb7:                                           ; preds = %if.end4.sw.bb7_crit_edge, %if.end4.sw.bb7_crit_edge87
  %call9 = tail call fastcc i32 @hclge_set_common_loopback(ptr noundef %5, i1 noundef zeroext %en, i32 noundef %loop_mode)
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.end4
  %phydev1.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 17
  %11 = ptrtoint ptr %phydev1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %phydev1.i, align 4
  %tobool.not.i53 = icmp eq ptr %12, null
  br i1 %tobool.not.i53, label %if.then.i, label %if.end6.i

if.then.i:                                        ; preds = %sw.bb10
  %13 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ae_dev, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %caps.i, align 4
  %17 = and i32 %16, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool2.not.i = icmp eq i32 %17, 0
  br i1 %tobool2.not.i, label %if.then.i.cleanup29_crit_edge, label %if.then3.i

if.then.i.cleanup29_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup29

if.then3.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %call5.i = tail call fastcc i32 @hclge_set_common_loopback(ptr noundef %5, i1 noundef zeroext %en, i32 noundef 3) #16
  br label %sw.epilog

if.end6.i:                                        ; preds = %sw.bb10
  br i1 %en, label %if.then8.i, label %if.else.i54

if.then8.i:                                       ; preds = %if.end6.i
  %suspended.i.i = getelementptr inbounds %struct.phy_device, ptr %12, i32 0, i32 4
  %18 = ptrtoint ptr %suspended.i.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %bf.load.i.i = load i16, ptr %suspended.i.i, align 8
  %19 = and i16 %bf.load.i.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool.not.i.i = icmp eq i16 %19, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then8.i.if.end3.i.i_crit_edge

if.then8.i.if.end3.i.i_crit_edge:                 ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3.i.i

if.then.i.i:                                      ; preds = %if.then8.i
  %call.i.i = tail call i32 @phy_suspend(ptr noundef nonnull %12) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i.i, label %if.then.i.i.if.end3.i.i_crit_edge, label %if.then.i.i.do.end.i_crit_edge

if.then.i.i.do.end.i_crit_edge:                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.then.i.i.if.end3.i.i_crit_edge:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %if.then.i.i.if.end3.i.i_crit_edge, %if.then8.i.if.end3.i.i_crit_edge
  %call4.i.i = tail call i32 @phy_resume(ptr noundef nonnull %12) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %if.end7.i.i, label %if.end3.i.i.do.end.i_crit_edge

if.end3.i.i.do.end.i_crit_edge:                   ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.end7.i.i:                                      ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call8.i.i = tail call i32 @phy_loopback(ptr noundef nonnull %12, i1 noundef zeroext true) #16
  br label %if.end11.i

if.else.i54:                                      ; preds = %if.end6.i
  %call.i44.i = tail call i32 @phy_loopback(ptr noundef nonnull %12, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i44.i)
  %tobool.not.i45.i = icmp eq i32 %call.i44.i, 0
  br i1 %tobool.not.i45.i, label %if.end.i.i, label %if.else.i54.do.end.i_crit_edge

if.else.i54.do.end.i_crit_edge:                   ; preds = %if.else.i54
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.end.i.i:                                       ; preds = %if.else.i54
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i.i = tail call i32 @phy_suspend(ptr noundef nonnull %12) #16
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.end.i.i, %if.end7.i.i
  %ret.0.i = phi i32 [ %call8.i.i, %if.end7.i.i ], [ %call1.i.i, %if.end.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool12.not.i = icmp eq i32 %ret.0.i, 0
  br i1 %tobool12.not.i, label %if.end14.i, label %if.end11.i.do.end.i_crit_edge

if.end11.i.do.end.i_crit_edge:                    ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

do.end.i:                                         ; preds = %if.end11.i.do.end.i_crit_edge, %if.else.i54.do.end.i_crit_edge, %if.end3.i.i.do.end.i_crit_edge, %if.then.i.i.do.end.i_crit_edge
  %ret.051.i = phi i32 [ %ret.0.i, %if.end11.i.do.end.i_crit_edge ], [ %call.i44.i, %if.else.i54.do.end.i_crit_edge ], [ %call4.i.i, %if.end3.i.i.do.end.i_crit_edge ], [ %call.i.i, %if.then.i.i.do.end.i_crit_edge ]
  %20 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.576, i32 noundef %ret.051.i) #20
  br label %cleanup29

if.end14.i:                                       ; preds = %if.end11.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %22 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %23 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 769, i1 noundef zeroext false) #16
  %spec.select.i.i = select i1 %en, i32 8263872, i32 0
  %24 = call i32 @llvm.bswap.i32(i32 %spec.select.i.i) #16
  %25 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %22, align 4
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool46.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool46.not.i.i, label %if.end14.i.hclge_cfg_mac_mode.exit.i_crit_edge, label %do.end50.i.i

if.end14.i.hclge_cfg_mac_mode.exit.i_crit_edge:   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_cfg_mac_mode.exit.i

do.end50.i.i:                                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %5, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.563, i32 noundef %call.i.i.i) #20
  br label %hclge_cfg_mac_mode.exit.i

hclge_cfg_mac_mode.exit.i:                        ; preds = %do.end50.i.i, %if.end14.i.hclge_cfg_mac_mode.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  %28 = ptrtoint ptr %phydev1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %phydev1.i, align 4
  %drv.i.i.i.i = getelementptr inbounds %struct.phy_device, ptr %29, i32 0, i32 1
  %link.i.i.i = getelementptr inbounds %struct.phy_device, ptr %29, i32 0, i32 4
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %if.end4.i.i.i.do.body.i.i.i_crit_edge, %hclge_cfg_mac_mode.exit.i
  %i.0.i.i.i = phi i32 [ 0, %hclge_cfg_mac_mode.exit.i ], [ %inc.i.i.i, %if.end4.i.i.i.do.body.i.i.i_crit_edge ]
  %30 = ptrtoint ptr %drv.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %drv.i.i.i.i, align 8
  %tobool.not.i.i.i.i = icmp eq ptr %31, null
  br i1 %tobool.not.i.i.i.i, label %do.body.i.i.i.do.end.i.i.i_crit_edge, label %if.end.i.i.i.i

do.body.i.i.i.do.end.i.i.i_crit_edge:             ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i.i.i

if.end.i.i.i.i:                                   ; preds = %do.body.i.i.i
  %read_status.i.i.i.i = getelementptr inbounds %struct.phy_driver, ptr %31, i32 0, i32 15
  %32 = ptrtoint ptr %read_status.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %read_status.i.i.i.i, align 4
  %tobool2.not.i.i.i.i = icmp eq ptr %33, null
  br i1 %tobool2.not.i.i.i.i, label %if.else.i.i.i.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i.i = call i32 %33(ptr noundef %29) #16
  br label %phy_read_status.exit.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call6.i.i.i.i = call i32 @genphy_read_status(ptr noundef %29) #16
  br label %phy_read_status.exit.i.i.i

phy_read_status.exit.i.i.i:                       ; preds = %if.else.i.i.i.i, %if.then3.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %call.i.i.i.i, %if.then3.i.i.i.i ], [ %call6.i.i.i.i, %if.else.i.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %retval.0.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %phy_read_status.exit.i.i.i.do.end.i.i.i_crit_edge

phy_read_status.exit.i.i.i.do.end.i.i.i_crit_edge: ; preds = %phy_read_status.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %phy_read_status.exit.i.i.i.do.end.i.i.i_crit_edge, %do.body.i.i.i.do.end.i.i.i_crit_edge
  %retval.0.i15.i.i.i = phi i32 [ %retval.0.i.i.i.i, %phy_read_status.exit.i.i.i.do.end.i.i.i_crit_edge ], [ -5, %do.body.i.i.i.do.end.i.i.i_crit_edge ]
  %34 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %5, align 8
  %dev.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i, ptr noundef nonnull @.str.574, i32 noundef %retval.0.i15.i.i.i) #20
  br label %if.end.i48.i

if.end.i.i.i:                                     ; preds = %phy_read_status.exit.i.i.i
  %36 = ptrtoint ptr %link.i.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %bf.load.i.i.i = load i16, ptr %link.i.i.i, align 8
  %37 = and i16 %bf.load.i.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %37)
  %38 = icmp eq i16 %37, 0
  %cmp.i.i.i = xor i1 %38, %en
  br i1 %cmp.i.i.i, label %if.end.i.i.i.if.end.i48.i_crit_edge, label %if.end4.i.i.i

if.end.i.i.i.if.end.i48.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i48.i

if.end4.i.i.i:                                    ; preds = %if.end.i.i.i
  call void @msleep(i32 noundef 10) #16
  %inc.i.i.i = add nuw nsw i32 %i.0.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, 200
  br i1 %exitcond.not.i.i.i, label %if.end4.i.i.i.if.end.i48.i_crit_edge, label %if.end4.i.i.i.do.body.i.i.i_crit_edge

if.end4.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.i.i

if.end4.i.i.i.if.end.i48.i_crit_edge:             ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i48.i

if.end.i48.i:                                     ; preds = %if.end4.i.i.i.if.end.i48.i_crit_edge, %if.end.i.i.i.if.end.i48.i_crit_edge, %do.end.i.i.i
  %39 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i.i.i, i32 0, i32 4
  br label %do.body.i7.i.i

do.body.i7.i.i:                                   ; preds = %if.end2.i.i.i.do.body.i7.i.i_crit_edge, %if.end.i48.i
  %i.0.i5.i.i = phi i32 [ 0, %if.end.i48.i ], [ %inc.i10.i.i, %if.end2.i.i.i.do.body.i7.i.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i.i.i) #16
  %40 = call ptr @memset(ptr %desc.i.i.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i.i.i, i32 noundef 775, i1 noundef zeroext true) #16
  %call.i.i.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i.i)
  %tobool.not.i.i6.i.i = icmp eq i32 %call.i.i.i.i.i, 0
  br i1 %tobool.not.i.i6.i.i, label %if.end.i9.i.i, label %hclge_get_mac_link_status.exit.i.i.i

hclge_get_mac_link_status.exit.i.i.i:             ; preds = %do.body.i7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %41 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %5, align 8
  %dev.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %42, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i.i, ptr noundef nonnull @.str.465, i32 noundef %call.i.i.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i.i.i) #16
  br label %do.end22.i

if.end.i9.i.i:                                    ; preds = %do.body.i7.i.i
  %43 = ptrtoint ptr %39 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %39, align 4
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i.i.i) #16
  %45 = and i8 %44, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %46 = icmp eq i8 %45, 0
  %cmp.i8.i.i = xor i1 %46, %en
  br i1 %cmp.i8.i.i, label %if.end.i9.i.i.if.end15_crit_edge, label %if.end2.i.i.i

if.end.i9.i.i.if.end15_crit_edge:                 ; preds = %if.end.i9.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.end2.i.i.i:                                    ; preds = %if.end.i9.i.i
  call void @msleep(i32 noundef 10) #16
  %inc.i10.i.i = add nuw nsw i32 %i.0.i5.i.i, 1
  %exitcond.not.i11.i.i = icmp eq i32 %inc.i10.i.i, 100
  br i1 %exitcond.not.i11.i.i, label %if.end2.i.i.i.do.end22.i_crit_edge, label %if.end2.i.i.i.do.body.i7.i.i_crit_edge

if.end2.i.i.i.do.body.i7.i.i_crit_edge:           ; preds = %if.end2.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i7.i.i

if.end2.i.i.i.do.end22.i_crit_edge:               ; preds = %if.end2.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end22.i

do.end22.i:                                       ; preds = %if.end2.i.i.i.do.end22.i_crit_edge, %hclge_get_mac_link_status.exit.i.i.i
  %retval.0.i.i.ph.i = phi i32 [ %call.i.i.i.i.i, %hclge_get_mac_link_status.exit.i.i.i ], [ -16, %if.end2.i.i.i.do.end22.i_crit_edge ]
  %47 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %5, align 8
  %dev24.i = getelementptr inbounds %struct.pci_dev, ptr %48, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24.i, ptr noundef nonnull @.str.579) #20
  br label %cleanup29

sw.default:                                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %49 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %50, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.567, i32 noundef %loop_mode) #20
  br label %cleanup29

sw.epilog:                                        ; preds = %if.then3.i, %sw.bb7, %sw.bb
  %ret.0 = phi i32 [ %call9, %sw.bb7 ], [ %call6, %sw.bb ], [ %call5.i, %if.then3.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool13.not = icmp eq i32 %ret.0, 0
  br i1 %tobool13.not, label %sw.epilog.if.end15_crit_edge, label %sw.epilog.cleanup29_crit_edge

sw.epilog.cleanup29_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup29

sw.epilog.if.end15_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.end15:                                         ; preds = %sw.epilog.if.end15_crit_edge, %if.end.i9.i.i.if.end15_crit_edge
  %51 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %handle, align 8
  %tobool.not.i.i56 = icmp eq ptr %52, null
  br i1 %tobool.not.i.i56, label %if.end15.hclge_get_vport.exit.i_crit_edge, label %if.else.i.i

if.end15.hclge_get_vport.exit.i_crit_edge:        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i

if.else.i.i:                                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.hnae3_client, ptr %52, i32 0, i32 2
  %53 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %54)
  %cmp.i.i = icmp eq i32 %54, 1
  %..i.i = select i1 %cmp.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i

hclge_get_vport.exit.i:                           ; preds = %if.else.i.i, %if.end15.hclge_get_vport.exit.i_crit_edge
  %.sink.i.i = phi i32 [ -560, %if.end15.hclge_get_vport.exit.i_crit_edge ], [ %..i.i, %if.else.i.i ]
  %num_tqps.i = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 5, i32 0, i32 8
  %55 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %num_tqps.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %56)
  %cmp12.not.i = icmp eq i16 %56, 0
  br i1 %cmp12.not.i, label %hclge_get_vport.exit.i.cleanup29_crit_edge, label %for.body.lr.ph.i

hclge_get_vport.exit.i.cleanup29_crit_edge:       ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup29

for.body.lr.ph.i:                                 ; preds = %hclge_get_vport.exit.i
  %add.ptr9.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 12
  %57 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %back.i, align 4
  %59 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i55, i32 0, i32 4
  %stream_id2.i.i = getelementptr inbounds %struct.hclge_cfg_com_tqp_queue_cmd, ptr %59, i32 0, i32 1
  %60 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i55, i32 0, i32 4, i32 1
  %hw.i.i57 = getelementptr inbounds %struct.hclge_dev, ptr %58, i32 0, i32 2
  br label %for.body.i

for.cond.i:                                       ; preds = %hclge_tqp_enable_cmd_send.exit.i
  %inc.i = add nuw i16 %i.013.i, 1
  %61 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %num_tqps.i, align 2
  %cmp.i58 = icmp ult i16 %inc.i, %62
  br i1 %cmp.i58, label %for.cond.i.for.body.i_crit_edge, label %for.cond.i.cleanup29_crit_edge

for.cond.i.cleanup29_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup29

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.013.i = phi i16 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.cond.i.for.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i55) #16
  %63 = call ptr @memset(ptr %desc.i.i55, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i55, i32 noundef 2848, i1 noundef zeroext false) #16
  %64 = call i16 @llvm.bswap.i16(i16 %i.013.i) #16
  %65 = ptrtoint ptr %59 to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %64, ptr %59, align 4
  %66 = ptrtoint ptr %stream_id2.i.i to i32
  call void @__asan_store2_noabort(i32 %66)
  store i16 0, ptr %stream_id2.i.i, align 2
  br i1 %en, label %if.then.i.i59, label %for.body.i.hclge_tqp_enable_cmd_send.exit.i_crit_edge

for.body.i.hclge_tqp_enable_cmd_send.exit.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_tqp_enable_cmd_send.exit.i

if.then.i.i59:                                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %67 = ptrtoint ptr %60 to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %60, align 4
  %69 = or i8 %68, 1
  store i8 %69, ptr %60, align 4
  br label %hclge_tqp_enable_cmd_send.exit.i

hclge_tqp_enable_cmd_send.exit.i:                 ; preds = %if.then.i.i59, %for.body.i.hclge_tqp_enable_cmd_send.exit.i_crit_edge
  %call.i.i.i60 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i57, ptr noundef nonnull %desc.i.i55, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i55) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i60)
  %tobool4.not.i = icmp eq i32 %call.i.i.i60, 0
  br i1 %tobool4.not.i, label %for.cond.i, label %do.end22

do.end22:                                         ; preds = %hclge_tqp_enable_cmd_send.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %70 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %5, align 8
  %dev24 = getelementptr inbounds %struct.pci_dev, ptr %71, i32 0, i32 44
  %cond27 = select i1 %en, ptr @.str.550, ptr @.str.551
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24, ptr noundef nonnull @.str.570, ptr noundef nonnull %cond27, i32 noundef %call.i.i.i60) #20
  br label %cleanup29

cleanup29:                                        ; preds = %do.end22, %for.cond.i.cleanup29_crit_edge, %hclge_get_vport.exit.i.cleanup29_crit_edge, %sw.epilog.cleanup29_crit_edge, %sw.default, %do.end22.i, %do.end.i, %if.then.i.cleanup29_crit_edge, %if.then.cleanup29_crit_edge
  %retval.1 = phi i32 [ %call1, %if.then.cleanup29_crit_edge ], [ %ret.0, %sw.epilog.cleanup29_crit_edge ], [ %call.i.i.i60, %do.end22 ], [ %retval.0.i.i.ph.i, %do.end22.i ], [ -524, %if.then.i.cleanup29_crit_edge ], [ %ret.051.i, %do.end.i ], [ -524, %sw.default ], [ 0, %hclge_get_vport.exit.i.cleanup29_crit_edge ], [ 0, %for.cond.i.cleanup29_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_promisc_mode(ptr nocapture noundef readonly %handle, i1 noundef zeroext %en_uc_pmc, i1 noundef zeroext %en_mc_pmc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ae_dev, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %7, i32 0, i32 6
  %8 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %9)
  %cmp = icmp ult i32 %9, 33
  br i1 %cmp, label %if.then, label %hclge_get_vport.exit.if.end_crit_edge

hclge_get_vport.exit.if.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %netdev_flags = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 8
  %10 = ptrtoint ptr %netdev_flags to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %netdev_flags, align 4
  %12 = and i8 %11, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool = icmp ne i8 %12, 0
  br label %if.end

if.end:                                           ; preds = %if.then, %hclge_get_vport.exit.if.end_crit_edge
  %en_bc_pmc.0.off0 = phi i1 [ %tobool, %if.then ], [ true, %hclge_get_vport.exit.if.end_crit_edge ]
  %vport_id.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 11
  %13 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vport_id.i, align 2
  %conv.i = trunc i16 %14 to i8
  %call.i = tail call fastcc i32 @hclge_cmd_set_promisc_mode(ptr noundef %5, i8 noundef zeroext %conv.i, i1 noundef zeroext %en_uc_pmc, i1 noundef zeroext %en_mc_pmc, i1 noundef zeroext %en_bc_pmc.0.off0) #16
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_request_update_promisc_mode(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %state = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_mtu(ptr nocapture noundef %handle, i32 noundef %new_mtu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %call1 = tail call i32 @hclge_set_vport_mtu(ptr noundef %add.ptr9.i, i32 noundef %new_mtu)
  ret i32 %call1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @hclge_get_pauseparam(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %auto_neg, ptr nocapture noundef writeonly %rx_en, ptr nocapture noundef writeonly %tx_en) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %hclge_get_vport.exit, label %hclge_get_vport.exit.thread

hclge_get_vport.exit:                             ; preds = %entry
  %back = getelementptr i8, ptr %handle, i32 -4
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 4
  %media_type1 = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 2, i32 1, i32 3
  %4 = ptrtoint ptr %media_type1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %media_type1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %5)
  %cmp = icmp eq i8 %5, 2
  br i1 %cmp, label %hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge, label %hclge_get_vport.exit.cond.end_crit_edge

hclge_get_vport.exit.cond.end_crit_edge:          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i

hclge_get_vport.exit.thread:                      ; preds = %entry
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  %add.ptr9.i43 = getelementptr i8, ptr %handle, i32 %..i
  %back44 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i43, i32 0, i32 12
  %8 = ptrtoint ptr %back44 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %back44, align 4
  %media_type145 = getelementptr inbounds %struct.hclge_dev, ptr %9, i32 0, i32 2, i32 1, i32 3
  %10 = ptrtoint ptr %media_type145 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %media_type145, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %11)
  %cmp46 = icmp eq i8 %11, 2
  br i1 %cmp46, label %if.else.i.i, label %hclge_get_vport.exit.thread.cond.end_crit_edge

hclge_get_vport.exit.thread.cond.end_crit_edge:   ; preds = %hclge_get_vport.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

if.else.i.i:                                      ; preds = %hclge_get_vport.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp.i.i = icmp eq i32 %13, 1
  %..i.i = select i1 %cmp.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i

hclge_get_vport.exit.i:                           ; preds = %if.else.i.i, %hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge
  %14 = phi ptr [ %9, %if.else.i.i ], [ %3, %hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge ]
  %.sink.i.i = phi i32 [ %..i.i, %if.else.i.i ], [ -560, %hclge_get_vport.exit.hclge_get_vport.exit.i_crit_edge ]
  %add.ptr9.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 12
  %15 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %back.i, align 4
  %phydev1.i = getelementptr inbounds %struct.hclge_dev, ptr %16, i32 0, i32 2, i32 1, i32 17
  %17 = ptrtoint ptr %phydev1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %phydev1.i, align 4
  %tobool.not.i41 = icmp eq ptr %18, null
  br i1 %tobool.not.i41, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %autoneg.i = getelementptr inbounds %struct.phy_device, ptr %18, i32 0, i32 4
  %19 = ptrtoint ptr %autoneg.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %bf.load.i = load i16, ptr %autoneg.i, align 8
  %bf.lshr.i = lshr i16 %bf.load.i, 3
  %bf.clear.i = and i16 %bf.lshr.i, 1
  %bf.cast.i = zext i16 %bf.clear.i to i32
  br label %cond.end

if.end.i:                                         ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %autoneg4.i = getelementptr inbounds %struct.hclge_dev, ptr %16, i32 0, i32 2, i32 1, i32 5
  %20 = ptrtoint ptr %autoneg4.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %autoneg4.i, align 2
  %conv.i = zext i8 %21 to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end.i, %if.then.i, %hclge_get_vport.exit.thread.cond.end_crit_edge, %hclge_get_vport.exit.cond.end_crit_edge
  %22 = phi ptr [ %3, %hclge_get_vport.exit.cond.end_crit_edge ], [ %9, %hclge_get_vport.exit.thread.cond.end_crit_edge ], [ %14, %if.then.i ], [ %14, %if.end.i ]
  %cond = phi i32 [ 0, %hclge_get_vport.exit.cond.end_crit_edge ], [ 0, %hclge_get_vport.exit.thread.cond.end_crit_edge ], [ %bf.cast.i, %if.then.i ], [ %conv.i, %if.end.i ]
  %23 = ptrtoint ptr %auto_neg to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %cond, ptr %auto_neg, align 4
  %fc_mode = getelementptr inbounds %struct.hclge_dev, ptr %22, i32 0, i32 37, i32 6
  %24 = ptrtoint ptr %fc_mode to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %fc_mode, align 8
  %26 = zext i32 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.765)
  switch i32 %25, label %if.else22 [
    i32 4, label %if.then
    i32 1, label %if.then10
    i32 2, label %if.then15
    i32 3, label %if.then21
  ]

if.then:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %rx_en to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %rx_en, align 4
  %28 = ptrtoint ptr %tx_en to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %tx_en, align 4
  br label %cleanup

if.then10:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %rx_en to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 1, ptr %rx_en, align 4
  %30 = ptrtoint ptr %tx_en to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %tx_en, align 4
  br label %cleanup

if.then15:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %31 = ptrtoint ptr %tx_en to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 1, ptr %tx_en, align 4
  %32 = ptrtoint ptr %rx_en to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %rx_en, align 4
  br label %cleanup

if.then21:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %33 = ptrtoint ptr %rx_en to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 1, ptr %rx_en, align 4
  %34 = ptrtoint ptr %tx_en to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 1, ptr %tx_en, align 4
  br label %cleanup

if.else22:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %35 = ptrtoint ptr %rx_en to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %rx_en, align 4
  %36 = ptrtoint ptr %tx_en to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %tx_en, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else22, %if.then21, %if.then15, %if.then10, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_pauseparam(ptr nocapture noundef readonly %handle, i32 noundef %auto_neg, i32 noundef %rx_en, i32 noundef %tx_en) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %phydev1 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 17
  %6 = ptrtoint ptr %phydev1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev1, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %lor.lhs.false, label %hclge_get_vport.exit.if.then_crit_edge

hclge_get_vport.exit.if.then_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false:                                    ; preds = %hclge_get_vport.exit
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %8 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %9, i32 0, i32 7
  %10 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %caps, align 4
  %12 = and i32 %11, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool3.not = icmp eq i32 %12, 0
  br i1 %tobool3.not, label %if.end6.thread, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %hclge_get_vport.exit.if.then_crit_edge
  br i1 %tobool.not.i, label %if.then.hclge_get_vport.exit.i_crit_edge, label %if.else.i.i

if.then.hclge_get_vport.exit.i_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i

if.else.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %13 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp.i.i = icmp eq i32 %14, 1
  %..i.i = select i1 %cmp.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i

hclge_get_vport.exit.i:                           ; preds = %if.else.i.i, %if.then.hclge_get_vport.exit.i_crit_edge
  %.sink.i.i = phi i32 [ -560, %if.then.hclge_get_vport.exit.i_crit_edge ], [ %..i.i, %if.else.i.i ]
  %add.ptr9.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 12
  %15 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %back.i, align 4
  %phydev1.i = getelementptr inbounds %struct.hclge_dev, ptr %16, i32 0, i32 2, i32 1, i32 17
  %17 = ptrtoint ptr %phydev1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %phydev1.i, align 4
  %tobool.not.i50 = icmp eq ptr %18, null
  br i1 %tobool.not.i50, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %autoneg.i = getelementptr inbounds %struct.phy_device, ptr %18, i32 0, i32 4
  %19 = ptrtoint ptr %autoneg.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %bf.load.i = load i16, ptr %autoneg.i, align 8
  %bf.lshr.i = lshr i16 %bf.load.i, 3
  %bf.clear.i = and i16 %bf.lshr.i, 1
  %bf.cast.i = zext i16 %bf.clear.i to i32
  br label %hclge_get_autoneg.exit

if.end.i:                                         ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %autoneg4.i = getelementptr inbounds %struct.hclge_dev, ptr %16, i32 0, i32 2, i32 1, i32 5
  %20 = ptrtoint ptr %autoneg4.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %autoneg4.i, align 2
  %conv.i = zext i8 %21 to i32
  br label %hclge_get_autoneg.exit

hclge_get_autoneg.exit:                           ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %bf.cast.i, %if.then.i ], [ %conv.i, %if.end.i ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %auto_neg)
  %cmp.not = icmp eq i32 %retval.0.i, %auto_neg
  br i1 %cmp.not, label %if.end6, label %do.end

do.end:                                           ; preds = %hclge_get_autoneg.exit
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.581) #20
  br label %cleanup

if.end6:                                          ; preds = %hclge_get_autoneg.exit
  %fc_mode = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 37, i32 6
  %24 = ptrtoint ptr %fc_mode to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %fc_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %25)
  %cmp7 = icmp eq i32 %25, 4
  br i1 %cmp7, label %if.end6.do.end11_crit_edge, label %if.end14

if.end6.do.end11_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end11

if.end6.thread:                                   ; preds = %lor.lhs.false
  %fc_mode61 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 37, i32 6
  %26 = ptrtoint ptr %fc_mode61 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %fc_mode61, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %27)
  %cmp762 = icmp eq i32 %27, 4
  br i1 %cmp762, label %if.end6.thread.do.end11_crit_edge, label %if.end6.thread.hclge_set_flowctrl_adv.exit_crit_edge

if.end6.thread.hclge_set_flowctrl_adv.exit_crit_edge: ; preds = %if.end6.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_flowctrl_adv.exit

if.end6.thread.do.end11_crit_edge:                ; preds = %if.end6.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end11

do.end11:                                         ; preds = %if.end6.thread.do.end11_crit_edge, %if.end6.do.end11_crit_edge
  %28 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %5, align 8
  %dev13 = getelementptr inbounds %struct.pci_dev, ptr %29, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev13, ptr noundef nonnull @.str.584) #20
  br label %cleanup

if.end14:                                         ; preds = %if.end6
  br i1 %tobool.not, label %if.end14.hclge_set_flowctrl_adv.exit_crit_edge, label %if.end.i53

if.end14.hclge_set_flowctrl_adv.exit_crit_edge:   ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_flowctrl_adv.exit

if.end.i53:                                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rx_en)
  %tobool2.i = icmp ne i32 %rx_en, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tx_en)
  %tobool3.i = icmp ne i32 %tx_en, 0
  tail call void @phy_set_asym_pause(ptr noundef nonnull %7, i1 noundef zeroext %tobool2.i, i1 noundef zeroext %tobool3.i) #16
  br label %hclge_set_flowctrl_adv.exit

hclge_set_flowctrl_adv.exit:                      ; preds = %if.end.i53, %if.end14.hclge_set_flowctrl_adv.exit_crit_edge, %if.end6.thread.hclge_set_flowctrl_adv.exit_crit_edge
  %fc_mode6365 = phi ptr [ %fc_mode, %if.end14.hclge_set_flowctrl_adv.exit_crit_edge ], [ %fc_mode, %if.end.i53 ], [ %fc_mode61, %if.end6.thread.hclge_set_flowctrl_adv.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rx_en)
  %tobool.not.i54 = icmp eq i32 %rx_en, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tx_en)
  %tobool1.not.i = icmp eq i32 %tx_en, 0
  %or.cond.i = or i1 %tobool.not.i54, %tobool1.not.i
  br i1 %or.cond.i, label %if.else.i56, label %if.then.i55

if.then.i55:                                      ; preds = %hclge_set_flowctrl_adv.exit
  call void @__sanitizer_cov_trace_pc() #18
  %fc_mode_last_time.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 30
  %30 = ptrtoint ptr %fc_mode_last_time.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 3, ptr %fc_mode_last_time.i, align 4
  br label %hclge_record_user_pauseparam.exit

if.else.i56:                                      ; preds = %hclge_set_flowctrl_adv.exit
  %tobool.not.not.i = xor i1 %tobool.not.i54, true
  %or.cond27.i = and i1 %tobool1.not.i, %tobool.not.not.i
  br i1 %or.cond27.i, label %if.then5.i, label %if.else7.i

if.then5.i:                                       ; preds = %if.else.i56
  call void @__sanitizer_cov_trace_pc() #18
  %fc_mode_last_time6.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 30
  %31 = ptrtoint ptr %fc_mode_last_time6.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 1, ptr %fc_mode_last_time6.i, align 4
  br label %hclge_record_user_pauseparam.exit

if.else7.i:                                       ; preds = %if.else.i56
  %or.cond29.i = or i1 %tobool1.not.i, %tobool.not.not.i
  %fc_mode_last_time14.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 30
  br i1 %or.cond29.i, label %if.else13.i, label %if.then11.i

if.then11.i:                                      ; preds = %if.else7.i
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %fc_mode_last_time14.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 2, ptr %fc_mode_last_time14.i, align 4
  br label %hclge_record_user_pauseparam.exit

if.else13.i:                                      ; preds = %if.else7.i
  call void @__sanitizer_cov_trace_pc() #18
  %33 = ptrtoint ptr %fc_mode_last_time14.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %fc_mode_last_time14.i, align 4
  br label %hclge_record_user_pauseparam.exit

hclge_record_user_pauseparam.exit:                ; preds = %if.else13.i, %if.then11.i, %if.then5.i, %if.then.i55
  %fc_mode_last_time17.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 30
  %34 = ptrtoint ptr %fc_mode_last_time17.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %fc_mode_last_time17.i, align 4
  %36 = ptrtoint ptr %fc_mode6365 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %fc_mode6365, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %auto_neg)
  %tobool15.not = icmp eq i32 %auto_neg, 0
  br i1 %tobool15.not, label %hclge_record_user_pauseparam.exit.if.then22_crit_edge, label %lor.lhs.false16

hclge_record_user_pauseparam.exit.if.then22_crit_edge: ; preds = %hclge_record_user_pauseparam.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then22

lor.lhs.false16:                                  ; preds = %hclge_record_user_pauseparam.exit
  %ae_dev17 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %37 = ptrtoint ptr %ae_dev17 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %ae_dev17, align 4
  %caps18 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %38, i32 0, i32 7
  %39 = ptrtoint ptr %caps18 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %caps18, align 4
  %41 = and i32 %40, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool21.not = icmp eq i32 %41, 0
  br i1 %tobool21.not, label %if.end24, label %lor.lhs.false16.if.then22_crit_edge

lor.lhs.false16.if.then22_crit_edge:              ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then22

if.then22:                                        ; preds = %lor.lhs.false16.if.then22_crit_edge, %hclge_record_user_pauseparam.exit.if.then22_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %35)
  %cmp.i58 = icmp eq i32 %35, 4
  br i1 %cmp.i58, label %if.then22.cleanup_crit_edge, label %if.end.i59

if.then22.cleanup_crit_edge:                      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i59:                                       ; preds = %if.then22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tx_en)
  %tobool.i = icmp ne i32 %tx_en, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rx_en)
  %tobool1.i = icmp ne i32 %rx_en, 0
  %call.i = tail call i32 @hclge_mac_pause_en_cfg(ptr noundef %5, i1 noundef zeroext %tobool.i, i1 noundef zeroext %tobool1.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool2.not.i, label %if.end.i59.cleanup_crit_edge, label %do.end.i

if.end.i59.cleanup_crit_edge:                     ; preds = %if.end.i59
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end.i:                                         ; preds = %if.end.i59
  call void @__sanitizer_cov_trace_pc() #18
  %42 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %43, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.157, i32 noundef %call.i) #20
  br label %cleanup

if.end24:                                         ; preds = %lor.lhs.false16
  br i1 %tobool.not, label %if.end24.cleanup_crit_edge, label %if.then26

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then26:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  %call27 = tail call i32 @phy_start_aneg(ptr noundef nonnull %7) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then26, %if.end24.cleanup_crit_edge, %do.end.i, %if.end.i59.cleanup_crit_edge, %if.then22.cleanup_crit_edge, %do.end11, %do.end
  %retval.0 = phi i32 [ -95, %do.end ], [ -95, %do.end11 ], [ %call27, %if.then26 ], [ -95, %if.end24.cleanup_crit_edge ], [ 0, %if.then22.cleanup_crit_edge ], [ %call.i, %do.end.i ], [ 0, %if.end.i59.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_autoneg(ptr nocapture noundef readonly %handle, i1 noundef zeroext %enable) #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %support_autoneg = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 7
  %6 = ptrtoint ptr %support_autoneg to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %support_autoneg, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %hclge_get_vport.exit
  br i1 %enable, label %do.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.586) #20
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %10 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %11 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 772, i1 noundef zeroext false) #16
  %spec.select.i = select i1 %enable, i32 16777216, i32 0
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %spec.select.i, ptr %10, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %if.end.hclge_set_autoneg_en.exit_crit_edge, label %do.end5.i

if.end.hclge_set_autoneg_en.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_autoneg_en.exit

do.end5.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.296, i32 noundef %call.i.i) #20
  br label %hclge_set_autoneg_en.exit

hclge_set_autoneg_en.exit:                        ; preds = %do.end5.i, %if.end.hclge_set_autoneg_en.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_set_autoneg_en.exit, %do.end, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i, %hclge_set_autoneg_en.exit ], [ -95, %do.end ], [ 0, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @hclge_get_autoneg(ptr nocapture noundef readonly %handle) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %phydev1 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 17
  %6 = ptrtoint ptr %phydev1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev1, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %autoneg = getelementptr inbounds %struct.phy_device, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %autoneg to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load = load i16, ptr %autoneg, align 8
  %bf.lshr = lshr i16 %bf.load, 3
  %bf.clear = and i16 %bf.lshr, 1
  %bf.cast = zext i16 %bf.clear to i32
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %autoneg4 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 5
  %9 = ptrtoint ptr %autoneg4 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %autoneg4, align 2
  %conv = zext i8 %10 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %bf.cast, %if.then ], [ %conv, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_restart_autoneg(ptr nocapture noundef readonly %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hclge_restart_autoneg.__UNIQUE_ID_ddebug533, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hclge_restart_autoneg, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !1454

if.then:                                          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @hclge_restart_autoneg.__UNIQUE_ID_ddebug533, ptr noundef %dev, ptr noundef nonnull @.str.589) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %hclge_get_vport.exit
  %vport.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 52
  %8 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vport.i, align 4
  %nic.i = getelementptr inbounds %struct.hclge_vport, ptr %9, i32 0, i32 13
  %nic_client.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 54
  %10 = ptrtoint ptr %nic_client.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nic_client.i, align 4
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  %12 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %state.i, align 4
  %14 = and i32 %13, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i14 = icmp eq i32 %14, 0
  %tobool1.not.i = icmp eq ptr %11, null
  %or.cond.i = select i1 %tobool.not.i14, i1 true, i1 %tobool1.not.i
  br i1 %or.cond.i, label %do.end.if.end7_crit_edge, label %if.end.i

do.end.if.end7_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.end.i:                                         ; preds = %do.end
  %ops.i = getelementptr inbounds %struct.hnae3_client, ptr %11, i32 0, i32 3
  %15 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops.i, align 4
  %reset_notify.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %reset_notify.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %reset_notify.i, align 4
  %tobool2.not.i = icmp eq ptr %18, null
  br i1 %tobool2.not.i, label %if.end.i.cleanup_crit_edge, label %if.end4.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i:                                        ; preds = %if.end.i
  %call7.i = tail call i32 %18(ptr noundef %nic.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end4.i.if.end7_crit_edge, label %do.end.i

if.end4.i.if.end7_crit_edge:                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

do.end.i:                                         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.23, i32 noundef 1, i32 noundef %call7.i) #20
  br label %cleanup

if.end7:                                          ; preds = %if.end4.i.if.end7_crit_edge, %do.end.if.end7_crit_edge
  %21 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vport.i, align 4
  %nic.i17 = getelementptr inbounds %struct.hclge_vport, ptr %22, i32 0, i32 13
  %23 = ptrtoint ptr %nic_client.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %nic_client.i, align 4
  %25 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %state.i, align 4
  %27 = and i32 %26, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i20 = icmp eq i32 %27, 0
  %tobool1.not.i21 = icmp eq ptr %24, null
  %or.cond.i22 = select i1 %tobool.not.i20, i1 true, i1 %tobool1.not.i21
  br i1 %or.cond.i22, label %if.end7.cleanup_crit_edge, label %if.end.i26

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i26:                                       ; preds = %if.end7
  %ops.i23 = getelementptr inbounds %struct.hnae3_client, ptr %24, i32 0, i32 3
  %28 = ptrtoint ptr %ops.i23 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ops.i23, align 4
  %reset_notify.i24 = getelementptr inbounds %struct.hnae3_client_ops, ptr %29, i32 0, i32 3
  %30 = ptrtoint ptr %reset_notify.i24 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %reset_notify.i24, align 4
  %tobool2.not.i25 = icmp eq ptr %31, null
  br i1 %tobool2.not.i25, label %if.end.i26.cleanup_crit_edge, label %if.end4.i29

if.end.i26.cleanup_crit_edge:                     ; preds = %if.end.i26
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i29:                                      ; preds = %if.end.i26
  %call7.i27 = tail call i32 %31(ptr noundef %nic.i17, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i27)
  %tobool8.not.i28 = icmp eq i32 %call7.i27, 0
  br i1 %tobool8.not.i28, label %if.end4.i29.cleanup_crit_edge, label %do.end.i31

if.end4.i29.cleanup_crit_edge:                    ; preds = %if.end4.i29
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end.i31:                                       ; preds = %if.end4.i29
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %5, align 8
  %dev.i30 = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i30, ptr noundef nonnull @.str.23, i32 noundef 0, i32 noundef %call7.i27) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end.i31, %if.end4.i29.cleanup_crit_edge, %if.end.i26.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %do.end.i, %if.end.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %if.end.i.cleanup_crit_edge ], [ %call7.i, %do.end.i ], [ 0, %if.end7.cleanup_crit_edge ], [ -95, %if.end.i26.cleanup_crit_edge ], [ %call7.i27, %do.end.i31 ], [ 0, %if.end4.i29.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_halt_autoneg(ptr nocapture noundef readonly %handle, i1 noundef zeroext %halt) #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %support_autoneg = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 7
  %6 = ptrtoint ptr %support_autoneg to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %support_autoneg, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %land.lhs.true

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true:                                    ; preds = %hclge_get_vport.exit
  %autoneg = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 5
  %8 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %autoneg, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool4.not = icmp eq i8 %9, 0
  br i1 %tobool4.not, label %land.lhs.true.cleanup_crit_edge, label %if.then

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %10 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %11 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 772, i1 noundef zeroext false) #16
  %spec.select.i = select i1 %halt, i32 0, i32 16777216
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %spec.select.i, ptr %10, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %if.then.hclge_set_autoneg_en.exit_crit_edge, label %do.end5.i

if.then.hclge_set_autoneg_en.exit_crit_edge:      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_autoneg_en.exit

do.end5.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.296, i32 noundef %call.i.i) #20
  br label %hclge_set_autoneg_en.exit

hclge_set_autoneg_en.exit:                        ; preds = %do.end5.i, %if.then.hclge_set_autoneg_en.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_set_autoneg_en.exit, %land.lhs.true.cleanup_crit_edge, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i, %hclge_set_autoneg_en.exit ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %hclge_get_vport.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @hclge_get_mac_addr(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %p) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %mac_addr = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 4
  %6 = ptrtoint ptr %mac_addr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mac_addr, align 4
  %8 = ptrtoint ptr %p to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %p, align 4
  %add.ptr.i = getelementptr %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 4, i32 4
  %9 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %add.ptr.i, align 2
  %add.ptr1.i = getelementptr i8, ptr %p, i32 4
  %11 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %add.ptr1.i, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_mac_addr(ptr noundef %handle, ptr noundef %p, i1 noundef zeroext %is_first) #0 align 64 {
entry:
  %format_mac_addr = alloca [18 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %format_mac_addr) #16
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = call ptr @memset(ptr %format_mac_addr, i32 255, i32 18)
  %5 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %back, align 4
  %7 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %p, align 4
  %add.ptr.i = getelementptr i8, ptr %p, i32 4
  %9 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %add.ptr.i, align 2
  %conv.i = zext i16 %10 to i32
  %or.i = or i32 %8, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i69 = icmp eq i32 %or.i, 0
  br i1 %cmp.i69, label %hclge_get_vport.exit.if.then_crit_edge, label %lor.lhs.false

hclge_get_vport.exit.if.then_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false:                                    ; preds = %hclge_get_vport.exit
  %11 = ptrtoint ptr %p to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %p, align 2
  %add.ptr1.i = getelementptr i8, ptr %p, i32 2
  %13 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %add.ptr1.i, align 2
  %and9.i = and i16 %12, %10
  %and510.i = and i16 %and9.i, %14
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i)
  %cmp.i70 = icmp eq i16 %and510.i, -1
  br i1 %cmp.i70, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false3

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %15 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %p, align 4
  %17 = and i32 %16, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i.not = icmp eq i32 %17, 0
  br i1 %tobool.i.not, label %if.end, label %lor.lhs.false3.if.then_crit_edge

lor.lhs.false3.if.then_crit_edge:                 ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false3.if.then_crit_edge, %lor.lhs.false.if.then_crit_edge, %hclge_get_vport.exit.if.then_crit_edge
  %18 = ptrtoint ptr %p to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %p, align 1
  %conv.i71 = zext i8 %19 to i32
  %20 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %add.ptr.i, align 1
  %conv2.i = zext i8 %21 to i32
  %arrayidx3.i = getelementptr i8, ptr %p, i32 5
  %22 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx3.i, align 1
  %conv4.i = zext i8 %23 to i32
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %format_mac_addr, i32 noundef 18, ptr noundef nonnull @.str.80, i32 noundef %conv.i71, i32 noundef %conv2.i, i32 noundef %conv4.i) #16
  %24 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %6, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.590, ptr noundef nonnull %format_mac_addr) #20
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false3
  %call6 = tail call i32 @hclge_pause_addr_cfg(ptr noundef %6, ptr noundef %p) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end13, label %do.end10

do.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %6, align 8
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.593, i32 noundef %call6) #20
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %mac_addr = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 2, i32 1, i32 4
  %spec.select = select i1 %is_first, ptr null, ptr %mac_addr
  %mac_list_lock = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 21
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_list_lock) #16
  %call18 = tail call i32 @hclge_update_mac_node_for_dev_addr(ptr noundef %add.ptr9.i, ptr noundef %spec.select, ptr noundef %p)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end33, label %if.then20

if.then20:                                        ; preds = %if.end13
  %28 = ptrtoint ptr %p to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %p, align 1
  %conv.i72 = zext i8 %29 to i32
  %30 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %add.ptr.i, align 1
  %conv2.i74 = zext i8 %31 to i32
  %arrayidx3.i75 = getelementptr i8, ptr %p, i32 5
  %32 = ptrtoint ptr %arrayidx3.i75 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx3.i75, align 1
  %conv4.i76 = zext i8 %33 to i32
  %call.i77 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %format_mac_addr, i32 noundef 18, ptr noundef nonnull @.str.80, i32 noundef %conv.i72, i32 noundef %conv2.i74, i32 noundef %conv4.i76) #16
  %34 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %6, align 8
  %dev26 = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev26, ptr noundef nonnull @.str.596, ptr noundef nonnull %format_mac_addr, i32 noundef %call18) #20
  call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  br i1 %is_first, label %if.then20.cleanup_crit_edge, label %if.then30

if.then20.cleanup_crit_edge:                      ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then30:                                        ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #18
  %call31 = call i32 @hclge_pause_addr_cfg(ptr noundef %6, ptr noundef %spec.select) #16
  br label %cleanup

if.end33:                                         ; preds = %if.end13
  %36 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %p, align 4
  %38 = ptrtoint ptr %mac_addr to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %mac_addr, align 4
  %39 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %add.ptr.i, align 2
  %add.ptr1.i79 = getelementptr %struct.hclge_dev, ptr %6, i32 0, i32 2, i32 1, i32 4, i32 4
  %41 = ptrtoint ptr %add.ptr1.i79 to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %40, ptr %add.ptr1.i79, align 2
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 5
  %42 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %state.i, align 4
  %44 = and i32 %43, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.not.i80 = icmp eq i32 %44, 0
  br i1 %tobool.not.i80, label %land.lhs.true.i, label %if.end33.cleanup_crit_edge

if.end33.cleanup_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end33
  %45 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %state.i, align 4
  %47 = and i32 %46, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool3.not.i = icmp eq i32 %47, 0
  br i1 %tobool3.not.i, label %if.then.i, label %land.lhs.true.i.cleanup_crit_edge

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %48 = load ptr, ptr @hclge_wq, align 4
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 48
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %48, ptr noundef %service_task.i, i32 noundef 0) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %land.lhs.true.i.cleanup_crit_edge, %if.end33.cleanup_crit_edge, %if.then30, %if.then20.cleanup_crit_edge, %do.end10, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ %call6, %do.end10 ], [ %call18, %if.then30 ], [ %call18, %if.then20.cleanup_crit_edge ], [ 0, %if.end33.cleanup_crit_edge ], [ 0, %land.lhs.true.i.cleanup_crit_edge ], [ 0, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %format_mac_addr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_do_ioctl(ptr nocapture noundef readonly %handle, ptr noundef %ifr, i32 noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %6 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.766)
  switch i32 %cmd, label %sw.default [
    i32 35249, label %sw.bb
    i32 35248, label %sw.bb2
  ]

sw.bb:                                            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call i32 @hclge_ptp_get_cfg(ptr noundef %5, ptr noundef %ifr) #16
  br label %cleanup

sw.bb2:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call i32 @hclge_ptp_set_cfg(ptr noundef %5, ptr noundef %ifr) #16
  br label %cleanup

sw.default:                                       ; preds = %hclge_get_vport.exit
  %phydev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 17
  %7 = ptrtoint ptr %phydev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %phydev, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %if.then, label %sw.epilog

if.then:                                          ; preds = %sw.default
  %ifr_ifru.i.i = getelementptr inbounds %struct.ifreq, ptr %ifr, i32 0, i32 1
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %9 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ae_dev.i, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %10, i32 0, i32 7
  %11 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %caps.i, align 4
  %13 = and i32 %12, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i19 = icmp eq i32 %13, 0
  br i1 %tobool.not.i19, label %if.then.cleanup_crit_edge, label %if.end.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.then
  %14 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.767)
  switch i32 %cmd, label %if.end.i.cleanup_crit_edge [
    i32 35143, label %sw.bb.i
    i32 35144, label %if.end.i.sw.bb2.i_crit_edge
    i32 35145, label %sw.bb4.i
  ]

if.end.i.sw.bb2.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %phy_addr.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 1
  %15 = ptrtoint ptr %phy_addr.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %phy_addr.i, align 1
  %conv.i = zext i8 %16 to i16
  %17 = ptrtoint ptr %ifr_ifru.i.i to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %conv.i, ptr %ifr_ifru.i.i, align 2
  br label %sw.bb2.i

sw.bb2.i:                                         ; preds = %sw.bb.i, %if.end.i.sw.bb2.i_crit_edge
  %reg_num.i = getelementptr inbounds %struct.mii_ioctl_data, ptr %ifr_ifru.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %reg_num.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %reg_num.i, align 2
  %call3.i = tail call zeroext i16 @hclge_read_phy_reg(ptr noundef %5, i16 noundef zeroext %19) #16
  %val_out.i = getelementptr inbounds %struct.mii_ioctl_data, ptr %ifr_ifru.i.i, i32 0, i32 3
  %20 = ptrtoint ptr %val_out.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %call3.i, ptr %val_out.i, align 2
  br label %cleanup

sw.bb4.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %reg_num5.i = getelementptr inbounds %struct.mii_ioctl_data, ptr %ifr_ifru.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %reg_num5.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %reg_num5.i, align 2
  %val_in.i = getelementptr inbounds %struct.ifreq, ptr %ifr, i32 0, i32 1, i32 0, i32 1
  %23 = ptrtoint ptr %val_in.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %val_in.i, align 2
  %call6.i = tail call i32 @hclge_write_phy_reg(ptr noundef %5, i16 noundef zeroext %22, i16 noundef zeroext %24) #16
  br label %cleanup

sw.epilog:                                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  %call8 = tail call i32 @phy_mii_ioctl(ptr noundef nonnull %8, ptr noundef %ifr, i32 noundef %cmd) #16
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb4.i, %sw.bb2.i, %if.end.i.cleanup_crit_edge, %if.then.cleanup_crit_edge, %sw.bb2, %sw.bb
  %retval.0 = phi i32 [ %call8, %sw.epilog ], [ %call3, %sw.bb2 ], [ %call1, %sw.bb ], [ %call6.i, %sw.bb4.i ], [ 0, %sw.bb2.i ], [ -95, %if.then.cleanup_crit_edge ], [ -95, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_add_uc_addr(ptr noundef %handle, ptr nocapture noundef readonly %addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %call1 = tail call i32 @hclge_update_mac_list(ptr noundef %add.ptr9.i, i32 noundef 0, i32 noundef 0, ptr noundef %addr)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_rm_uc_addr(ptr noundef %handle, ptr nocapture noundef readonly %addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %call1 = tail call i32 @hclge_update_mac_list(ptr noundef %add.ptr9.i, i32 noundef 1, i32 noundef 0, ptr noundef %addr)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_add_mc_addr(ptr noundef %handle, ptr nocapture noundef readonly %addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %call1 = tail call i32 @hclge_update_mac_list(ptr noundef %add.ptr9.i, i32 noundef 0, i32 noundef 1, ptr noundef %addr)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_rm_mc_addr(ptr noundef %handle, ptr nocapture noundef readonly %addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %call1 = tail call i32 @hclge_update_mac_list(ptr noundef %add.ptr9.i, i32 noundef 1, i32 noundef 1, ptr noundef %addr)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_update_stats(ptr noundef %handle, ptr nocapture noundef readnone %net_stats) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %state = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  %call1 = tail call i32 @_test_and_set_bit(i32 noundef 12, ptr noundef %state) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %hclge_get_vport.exit.cleanup_crit_edge

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %call2 = tail call i32 @hclge_mac_update_stats(ptr noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end.if.end5_crit_edge, label %do.end

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.483, i32 noundef %call2) #20
  br label %if.end5

if.end5:                                          ; preds = %do.end, %if.end.if.end5_crit_edge
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call7 = tail call i32 @hclge_comm_tqps_update_stats(ptr noundef %handle, ptr noundef %hw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end5.if.end15_crit_edge, label %do.end12

if.end5.if.end15_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

do.end12:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %dev14 = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev14, ptr noundef nonnull @.str.480, i32 noundef %call7) #20
  br label %if.end15

if.end15:                                         ; preds = %do.end12, %if.end5.if.end15_crit_edge
  tail call void @_clear_bit(i32 noundef 12, ptr noundef %state) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %hclge_get_vport.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_get_stats(ptr noundef %handle, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %mac_stats.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %hclge_get_vport.exit
  %i.02.i = phi i32 [ 0, %hclge_get_vport.exit ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %buf.01.i = phi ptr [ %data, %hclge_get_vport.exit ], [ %buf.1.i, %for.inc.i.for.body.i_crit_edge ]
  %stats_num.i = getelementptr %struct.hclge_comm_stats_str, ptr @g_mac_stats_string, i32 %i.02.i, i32 1
  %6 = ptrtoint ptr %stats_num.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %stats_num.i, align 4
  %8 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ae_dev.i, align 4
  %mac_stats_num.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %9, i32 0, i32 5, i32 12
  %10 = ptrtoint ptr %mac_stats_num.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mac_stats_num.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %11)
  %cmp1.i = icmp ugt i32 %7, %11
  br i1 %cmp1.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %offset.i = getelementptr %struct.hclge_comm_stats_str, ptr @g_mac_stats_string, i32 %i.02.i, i32 2
  %12 = ptrtoint ptr %offset.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %offset.i, align 4
  %add.ptr.i = getelementptr i8, ptr %mac_stats.i, i32 %13
  %14 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %add.ptr.i, align 8
  %16 = ptrtoint ptr %buf.01.i to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %buf.01.i, align 8
  %incdec.ptr.i = getelementptr i64, ptr %buf.01.i, i32 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i, %for.body.i.for.inc.i_crit_edge
  %buf.1.i = phi ptr [ %buf.01.i, %for.body.i.for.inc.i_crit_edge ], [ %incdec.ptr.i, %if.end.i ]
  %inc.i = add nuw nsw i32 %i.02.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 102
  br i1 %exitcond.not.i, label %hclge_comm_get_stats.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

hclge_comm_get_stats.exit:                        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = tail call ptr @hclge_comm_tqps_get_stats(ptr noundef %handle, ptr noundef %buf.1.i) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_get_mac_stat(ptr noundef %handle, ptr nocapture noundef writeonly %mac_stats) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  tail call void @hclge_update_stats(ptr noundef %handle, ptr noundef null)
  %mac_stats1 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %mac_stats1 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %mac_stats1, align 8
  %8 = ptrtoint ptr %mac_stats to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %7, ptr %mac_stats, align 8
  %mac_rx_mac_pause_num = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 4, i32 1
  %9 = ptrtoint ptr %mac_rx_mac_pause_num to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %mac_rx_mac_pause_num, align 8
  %rx_pause_cnt = getelementptr inbounds %struct.hns3_mac_stats, ptr %mac_stats, i32 0, i32 1
  %11 = ptrtoint ptr %rx_pause_cnt to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %rx_pause_cnt, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_get_strings(ptr noundef %handle, i32 noundef %stringset, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %4 = zext i32 %stringset to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.768)
  switch i32 %stringset, label %hclge_get_vport.exit.if.end25_crit_edge [
    i32 1, label %if.then
    i32 0, label %if.then4
  ]

hclge_get_vport.exit.if.end25_crit_edge:          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then:                                          ; preds = %hclge_get_vport.exit
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %5 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %back, align 4
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then
  %i.02.i = phi i32 [ 0, %if.then ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %buff.01.i = phi ptr [ %data, %if.then ], [ %buff.1.i, %for.inc.i.for.body.i_crit_edge ]
  %stats_num.i = getelementptr %struct.hclge_comm_stats_str, ptr @g_mac_stats_string, i32 %i.02.i, i32 1
  %7 = ptrtoint ptr %stats_num.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %stats_num.i, align 4
  %9 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ae_dev.i, align 4
  %mac_stats_num.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %10, i32 0, i32 5, i32 12
  %11 = ptrtoint ptr %mac_stats_num.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mac_stats_num.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %12)
  %cmp2.i = icmp ugt i32 %8, %12
  br i1 %cmp2.i, label %for.body.i.for.inc.i_crit_edge, label %if.end4.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end4.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.i = getelementptr %struct.hclge_comm_stats_str, ptr @g_mac_stats_string, i32 %i.02.i
  %call.i = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %buff.01.i, i32 noundef 32, ptr noundef nonnull @.str.161, ptr noundef %arrayidx.i) #16
  %add.ptr.i = getelementptr i8, ptr %buff.01.i, i32 32
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end4.i, %for.body.i.for.inc.i_crit_edge
  %buff.1.i = phi ptr [ %buff.01.i, %for.body.i.for.inc.i_crit_edge ], [ %add.ptr.i, %if.end4.i ]
  %inc.i = add nuw nsw i32 %i.02.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 102
  br i1 %exitcond.not.i, label %hclge_comm_get_strings.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

hclge_comm_get_strings.exit:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = tail call ptr @hclge_comm_tqps_get_strings(ptr noundef %handle, ptr noundef %buff.1.i) #16
  br label %if.end25

if.then4:                                         ; preds = %hclge_get_vport.exit
  %flags = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 4
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %flags, align 8
  %and = and i64 %14, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.then4.if.end_crit_edge, label %if.then5

if.then4.if.end_crit_edge:                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then5:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  %15 = call ptr @memcpy(ptr %data, ptr @hns3_nic_test_strs, i32 32)
  %add.ptr = getelementptr i8, ptr %data, i32 32
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then4.if.end_crit_edge
  %p.0 = phi ptr [ %add.ptr, %if.then5 ], [ %data, %if.then4.if.end_crit_edge ]
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %flags, align 8
  %and7 = and i64 %17, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and7)
  %tobool8.not = icmp eq i64 %and7, 0
  br i1 %tobool8.not, label %if.end.if.end11_crit_edge, label %if.then9

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %18 = call ptr @memcpy(ptr %p.0, ptr getelementptr inbounds ([4 x [32 x i8]], ptr @hns3_nic_test_strs, i32 0, i32 1), i32 32)
  %add.ptr10 = getelementptr i8, ptr %p.0, i32 32
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end.if.end11_crit_edge
  %p.1 = phi ptr [ %add.ptr10, %if.then9 ], [ %p.0, %if.end.if.end11_crit_edge ]
  %19 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %flags, align 8
  %and13 = and i64 %20, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13)
  %tobool14.not = icmp eq i64 %and13, 0
  br i1 %tobool14.not, label %if.end11.if.end17_crit_edge, label %if.then15

if.end11.if.end17_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then15:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %21 = call ptr @memcpy(ptr %p.1, ptr getelementptr inbounds ([4 x [32 x i8]], ptr @hns3_nic_test_strs, i32 0, i32 2), i32 32)
  %add.ptr16 = getelementptr i8, ptr %p.1, i32 32
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end11.if.end17_crit_edge
  %p.2 = phi ptr [ %add.ptr16, %if.then15 ], [ %p.1, %if.end11.if.end17_crit_edge ]
  %22 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %flags, align 8
  %and19 = and i64 %23, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and19)
  %tobool20.not = icmp eq i64 %and19, 0
  br i1 %tobool20.not, label %if.end17.if.end25_crit_edge, label %if.then21

if.end17.if.end25_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then21:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %24 = call ptr @memcpy(ptr %p.2, ptr getelementptr inbounds ([4 x [32 x i8]], ptr @hns3_nic_test_strs, i32 0, i32 3), i32 32)
  br label %if.end25

if.end25:                                         ; preds = %if.then21, %if.end17.if.end25_crit_edge, %hclge_comm_get_strings.exit, %hclge_get_vport.exit.if.end25_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_sset_count(ptr noundef %handle, i32 noundef %stringset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %6 = zext i32 %stringset to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.769)
  switch i32 %stringset, label %hclge_get_vport.exit.if.end48_crit_edge [
    i32 0, label %if.then
    i32 1, label %if.then43
  ]

hclge_get_vport.exit.if.end48_crit_edge:          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48

if.then:                                          ; preds = %hclge_get_vport.exit
  %flags = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 4
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %flags, align 8
  %and = and i64 %8, 4294967272
  store i64 %and, ptr %flags, align 8
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %9 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ae_dev, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %10, i32 0, i32 6
  %11 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %12)
  %cmp2 = icmp ugt i32 %12, 32
  br i1 %cmp2, label %if.then.if.then14_crit_edge, label %lor.lhs.false

if.then.if.then14_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then14

lor.lhs.false:                                    ; preds = %if.then
  %speed = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 9
  %13 = ptrtoint ptr %speed to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %speed, align 4
  %15 = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.770)
  switch i32 %14, label %lor.lhs.false.if.end_crit_edge [
    i32 10, label %lor.lhs.false.if.then14_crit_edge
    i32 100, label %lor.lhs.false.if.then14_crit_edge70
    i32 1000, label %lor.lhs.false.if.then14_crit_edge71
  ]

lor.lhs.false.if.then14_crit_edge71:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then14

lor.lhs.false.if.then14_crit_edge70:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then14

lor.lhs.false.if.then14_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then14

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then14:                                        ; preds = %lor.lhs.false.if.then14_crit_edge, %lor.lhs.false.if.then14_crit_edge70, %lor.lhs.false.if.then14_crit_edge71, %if.then.if.then14_crit_edge
  %or = or i64 %and, 1
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %or, ptr %flags, align 8
  br label %if.end

if.end:                                           ; preds = %if.then14, %lor.lhs.false.if.end_crit_edge
  %count.0 = phi i32 [ 3, %if.then14 ], [ 2, %lor.lhs.false.if.end_crit_edge ]
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %flags, align 8
  %or20 = or i64 %18, 20
  store i64 %or20, ptr %flags, align 8
  %phydev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 17
  %19 = ptrtoint ptr %phydev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %phydev, align 4
  %tobool.not = icmp eq ptr %20, null
  br i1 %tobool.not, label %if.end.lor.lhs.false33_crit_edge, label %land.lhs.true

if.end.lor.lhs.false33_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false33

land.lhs.true:                                    ; preds = %if.end
  %drv = getelementptr inbounds %struct.phy_device, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %drv to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %drv, align 8
  %tobool26.not = icmp eq ptr %22, null
  br i1 %tobool26.not, label %land.lhs.true.lor.lhs.false33_crit_edge, label %land.lhs.true27

land.lhs.true.lor.lhs.false33_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false33

land.lhs.true27:                                  ; preds = %land.lhs.true
  %set_loopback = getelementptr inbounds %struct.phy_driver, ptr %22, i32 0, i32 37
  %23 = ptrtoint ptr %set_loopback to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %set_loopback, align 4
  %tobool32.not = icmp eq ptr %24, null
  br i1 %tobool32.not, label %land.lhs.true27.lor.lhs.false33_crit_edge, label %land.lhs.true27.if.then37_crit_edge

land.lhs.true27.if.then37_crit_edge:              ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

land.lhs.true27.lor.lhs.false33_crit_edge:        ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %land.lhs.true27.lor.lhs.false33_crit_edge, %land.lhs.true.lor.lhs.false33_crit_edge, %if.end.lor.lhs.false33_crit_edge
  %25 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %26, i32 0, i32 7
  %27 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %caps, align 4
  %29 = and i32 %28, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool36.not = icmp eq i32 %29, 0
  br i1 %tobool36.not, label %lor.lhs.false33.if.end48_crit_edge, label %lor.lhs.false33.if.then37_crit_edge

lor.lhs.false33.if.then37_crit_edge:              ; preds = %lor.lhs.false33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

lor.lhs.false33.if.end48_crit_edge:               ; preds = %lor.lhs.false33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48

if.then37:                                        ; preds = %lor.lhs.false33.if.then37_crit_edge, %land.lhs.true27.if.then37_crit_edge
  %add38 = add nuw nsw i32 %count.0, 1
  %or40 = or i64 %18, 22
  %30 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %or40, ptr %flags, align 8
  br label %if.end48

if.then43:                                        ; preds = %hclge_get_vport.exit
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %31 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ae_dev.i, align 4
  %mac_stats_num.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 12
  %33 = ptrtoint ptr %mac_stats_num.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mac_stats_num.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then43
  %i.02.i = phi i32 [ 0, %if.then43 ], [ %inc2.i, %for.body.i.for.body.i_crit_edge ]
  %count.01.i = phi i32 [ 0, %if.then43 ], [ %spec.select.i, %for.body.i.for.body.i_crit_edge ]
  %stats_num.i = getelementptr %struct.hclge_comm_stats_str, ptr @g_mac_stats_string, i32 %i.02.i, i32 1
  %35 = ptrtoint ptr %stats_num.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %stats_num.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %36, i32 %34)
  %cmp1.not.i = icmp ule i32 %36, %34
  %inc.i = zext i1 %cmp1.not.i to i32
  %spec.select.i = add i32 %count.01.i, %inc.i
  %inc2.i = add nuw nsw i32 %i.02.i, 1
  %exitcond.not.i = icmp eq i32 %inc2.i, 102
  br i1 %exitcond.not.i, label %hclge_comm_get_count.exit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

hclge_comm_get_count.exit:                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %call45 = tail call i32 @hclge_comm_tqps_get_sset_count(ptr noundef %handle) #16
  %add46 = add i32 %call45, %spec.select.i
  br label %if.end48

if.end48:                                         ; preds = %hclge_comm_get_count.exit, %if.then37, %lor.lhs.false33.if.end48_crit_edge, %hclge_get_vport.exit.if.end48_crit_edge
  %count.1 = phi i32 [ %add38, %if.then37 ], [ %count.0, %lor.lhs.false33.if.end48_crit_edge ], [ %add46, %hclge_comm_get_count.exit ], [ 0, %hclge_get_vport.exit.if.end48_crit_edge ]
  ret i32 %count.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_get_regs(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %version, ptr nocapture noundef writeonly %data) #0 align 64 {
entry:
  %base.addr.i172.i = alloca ptr, align 4
  %base.addr.i169.i = alloca ptr, align 4
  %base.addr.i166.i = alloca ptr, align 4
  %base.addr.i.i = alloca ptr, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %fw_version = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 15
  %6 = ptrtoint ptr %fw_version to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fw_version, align 8
  %8 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %version, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %9 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 64, i1 noundef zeroext true) #16
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i82 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i82, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.612, i32 noundef %call.i.i) #20
  br label %do.end

if.end.i:                                         ; preds = %hclge_get_vport.exit
  %12 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 1
  %13 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %16 = call i32 @llvm.bswap.i32(i32 %15) #16
  %17 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %12, align 4
  %19 = call i32 @llvm.bswap.i32(i32 %18) #16
  %add.i = sub i32 0, %19
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %add.i)
  %tobool3.not.i = icmp eq i32 %16, %add.i
  br i1 %tobool3.not.i, label %if.end.i.do.end_crit_edge, label %if.end

if.end.i.do.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %if.end.i.do.end_crit_edge, %do.end.i
  %retval.0.i.ph = phi i32 [ %call.i.i, %do.end.i ], [ -22, %if.end.i.do.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %20 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.601, i32 noundef %retval.0.i.ph) #20
  br label %cleanup

if.end:                                           ; preds = %if.end.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end
  %reg.0176.i = phi ptr [ %data, %if.end ], [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ]
  %i.0175.i = phi i32 [ 0, %if.end ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %22 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw.i, align 8
  %arrayidx.i = getelementptr [14 x i32], ptr @cmdq_reg_addr_list, i32 0, i32 %i.0175.i
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i)
  %26 = ptrtoint ptr %base.addr.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %23, ptr %base.addr.i.i, align 4
  %base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i = load volatile ptr, ptr %base.addr.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i, i32 %25
  %27 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #16, !srcloc !1461
  %28 = call i32 @llvm.bswap.i32(i32 %27) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i)
  %incdec.ptr.i = getelementptr i32, ptr %reg.0176.i, i32 1
  %29 = ptrtoint ptr %reg.0176.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %reg.0176.i, align 4
  %inc.i = add nuw nsw i32 %i.0175.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 14
  br i1 %exitcond.not.i, label %for.body4.preheader.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body4.preheader.i:                            ; preds = %for.body.i
  %incdec.ptr5.i = getelementptr i32, ptr %reg.0176.i, i32 2
  %30 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 -33752070, ptr %incdec.ptr.i, align 4
  %incdec.ptr5.1.i = getelementptr i32, ptr %reg.0176.i, i32 3
  %31 = ptrtoint ptr %incdec.ptr5.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 -33752070, ptr %incdec.ptr5.i, align 4
  %32 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %34 = ptrtoint ptr %base.addr.i166.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %33, ptr %base.addr.i166.i, align 4
  %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.i = load volatile ptr, ptr %base.addr.i166.i, align 4
  %add.ptr.i168.i = getelementptr i8, ptr %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.i, i32 132096
  %35 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i168.i) #16, !srcloc !1461
  %36 = call i32 @llvm.bswap.i32(i32 %35) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %incdec.ptr19.i = getelementptr i32, ptr %reg.0176.i, i32 4
  %37 = ptrtoint ptr %incdec.ptr5.1.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %incdec.ptr5.1.i, align 4
  %38 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %40 = ptrtoint ptr %base.addr.i166.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %39, ptr %base.addr.i166.i, align 4
  %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.1.i = load volatile ptr, ptr %base.addr.i166.i, align 4
  %add.ptr.i168.1.i = getelementptr i8, ptr %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.1.i, i32 132608
  %41 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i168.1.i) #16, !srcloc !1461
  %42 = call i32 @llvm.bswap.i32(i32 %41) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %incdec.ptr19.1.i = getelementptr i32, ptr %reg.0176.i, i32 5
  %43 = ptrtoint ptr %incdec.ptr19.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %incdec.ptr19.i, align 4
  %44 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %46 = ptrtoint ptr %base.addr.i166.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %45, ptr %base.addr.i166.i, align 4
  %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.2.i = load volatile ptr, ptr %base.addr.i166.i, align 4
  %add.ptr.i168.2.i = getelementptr i8, ptr %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.2.i, i32 132864
  %47 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i168.2.i) #16, !srcloc !1461
  %48 = call i32 @llvm.bswap.i32(i32 %47) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %incdec.ptr19.2.i = getelementptr i32, ptr %reg.0176.i, i32 6
  %49 = ptrtoint ptr %incdec.ptr19.1.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %incdec.ptr19.1.i, align 4
  %50 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %52 = ptrtoint ptr %base.addr.i166.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %51, ptr %base.addr.i166.i, align 4
  %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.3.i = load volatile ptr, ptr %base.addr.i166.i, align 4
  %add.ptr.i168.3.i = getelementptr i8, ptr %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.3.i, i32 133120
  %53 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i168.3.i) #16, !srcloc !1461
  %54 = call i32 @llvm.bswap.i32(i32 %53) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %incdec.ptr19.3.i = getelementptr i32, ptr %reg.0176.i, i32 7
  %55 = ptrtoint ptr %incdec.ptr19.2.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %incdec.ptr19.2.i, align 4
  %56 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %58 = ptrtoint ptr %base.addr.i166.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %57, ptr %base.addr.i166.i, align 4
  %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.4.i = load volatile ptr, ptr %base.addr.i166.i, align 4
  %add.ptr.i168.4.i = getelementptr i8, ptr %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.4.i, i32 133632
  %59 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i168.4.i) #16, !srcloc !1461
  %60 = call i32 @llvm.bswap.i32(i32 %59) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %incdec.ptr19.4.i = getelementptr i32, ptr %reg.0176.i, i32 8
  %61 = ptrtoint ptr %incdec.ptr19.3.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %incdec.ptr19.3.i, align 4
  %62 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %64 = ptrtoint ptr %base.addr.i166.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %63, ptr %base.addr.i166.i, align 4
  %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.5.i = load volatile ptr, ptr %base.addr.i166.i, align 4
  %add.ptr.i168.5.i = getelementptr i8, ptr %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.5.i, i32 134144
  %65 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i168.5.i) #16, !srcloc !1461
  %66 = call i32 @llvm.bswap.i32(i32 %65) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %incdec.ptr19.5.i = getelementptr i32, ptr %reg.0176.i, i32 9
  %67 = ptrtoint ptr %incdec.ptr19.4.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %incdec.ptr19.4.i, align 4
  %68 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %70 = ptrtoint ptr %base.addr.i166.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %69, ptr %base.addr.i166.i, align 4
  %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.6.i = load volatile ptr, ptr %base.addr.i166.i, align 4
  %add.ptr.i168.6.i = getelementptr i8, ptr %base.addr.i166.i.0.base.addr.i166.i.0.base.addr.i166.0.base.addr.i166.0.base.addr.0.base.addr.0.base.addr.0..i167.6.i, i32 163840
  %71 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i168.6.i) #16, !srcloc !1461
  %72 = call i32 @llvm.bswap.i32(i32 %71) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i166.i)
  %incdec.ptr19.6.i = getelementptr i32, ptr %reg.0176.i, i32 10
  %73 = ptrtoint ptr %incdec.ptr19.5.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %72, ptr %incdec.ptr19.5.i, align 4
  %incdec.ptr26.i = getelementptr i32, ptr %reg.0176.i, i32 11
  %74 = ptrtoint ptr %incdec.ptr19.6.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 -33752070, ptr %incdec.ptr19.6.i, align 4
  %num_tqps.i = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 5, i32 0, i32 8
  %75 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %num_tqps.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %76)
  %cmp35187.not.i = icmp eq i16 %76, 0
  br i1 %cmp35187.not.i, label %for.body4.preheader.i.for.cond70.preheader.i_crit_edge, label %for.body4.preheader.i.for.cond38.preheader.i_crit_edge

for.body4.preheader.i.for.cond38.preheader.i_crit_edge: ; preds = %for.body4.preheader.i
  br label %for.cond38.preheader.i

for.body4.preheader.i.for.cond70.preheader.i_crit_edge: ; preds = %for.body4.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond70.preheader.i

for.cond38.preheader.i:                           ; preds = %for.body55.preheader.i.for.cond38.preheader.i_crit_edge, %for.body4.preheader.i.for.cond38.preheader.i_crit_edge
  %reg.4189.i = phi ptr [ %incdec.ptr56.1.i, %for.body55.preheader.i.for.cond38.preheader.i_crit_edge ], [ %incdec.ptr26.i, %for.body4.preheader.i.for.cond38.preheader.i_crit_edge ]
  %j.0188.i = phi i32 [ %inc61.i, %for.body55.preheader.i.for.cond38.preheader.i_crit_edge ], [ 0, %for.body4.preheader.i.for.cond38.preheader.i_crit_edge ]
  %mul.i = shl i32 %j.0188.i, 9
  br label %for.body41.i

for.cond70.preheader.loopexit.i:                  ; preds = %for.body55.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i.le = zext i16 %90 to i32
  %phi.bo.i = mul nuw nsw i32 %conv.i.le, 28
  %phi.bo207.i = add nuw nsw i32 %phi.bo.i, 24
  br label %for.cond70.preheader.i

for.cond70.preheader.i:                           ; preds = %for.cond70.preheader.loopexit.i, %for.body4.preheader.i.for.cond70.preheader.i_crit_edge
  %.lcssa.i = phi i32 [ 24, %for.body4.preheader.i.for.cond70.preheader.i_crit_edge ], [ %phi.bo207.i, %for.cond70.preheader.loopexit.i ]
  %reg.4.lcssa.i = phi ptr [ %incdec.ptr26.i, %for.body4.preheader.i.for.cond70.preheader.i_crit_edge ], [ %incdec.ptr56.1.i, %for.cond70.preheader.loopexit.i ]
  %num_msi_used.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 40
  %77 = ptrtoint ptr %num_msi_used.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %num_msi_used.i, align 4
  %conv71195.i = zext i16 %78 to i32
  %sub72196.i = add nsw i32 %conv71195.i, -1
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %78)
  %cmp73197.i = icmp ugt i16 %78, 1
  br i1 %cmp73197.i, label %for.cond70.preheader.i.for.cond76.preheader.i_crit_edge, label %for.cond70.preheader.i.hclge_fetch_pf_reg.exit_crit_edge

for.cond70.preheader.i.hclge_fetch_pf_reg.exit_crit_edge: ; preds = %for.cond70.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fetch_pf_reg.exit

for.cond70.preheader.i.for.cond76.preheader.i_crit_edge: ; preds = %for.cond70.preheader.i
  br label %for.cond76.preheader.i

for.body41.i:                                     ; preds = %for.body41.i.for.body41.i_crit_edge, %for.cond38.preheader.i
  %reg.5183.i = phi ptr [ %reg.4189.i, %for.cond38.preheader.i ], [ %incdec.ptr48.i, %for.body41.i.for.body41.i_crit_edge ]
  %i.4182.i = phi i32 [ 0, %for.cond38.preheader.i ], [ %inc50.i, %for.body41.i.for.body41.i_crit_edge ]
  %79 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %hw.i, align 8
  %arrayidx45.i = getelementptr [26 x i32], ptr @ring_reg_addr_list, i32 0, i32 %i.4182.i
  %81 = ptrtoint ptr %arrayidx45.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx45.i, align 4
  %add46.i = add i32 %82, %mul.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i169.i)
  %83 = ptrtoint ptr %base.addr.i169.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %80, ptr %base.addr.i169.i, align 4
  %base.addr.i169.i.0.base.addr.i169.i.0.base.addr.i169.0.base.addr.i169.0.base.addr.0.base.addr.0.base.addr.0..i170.i = load volatile ptr, ptr %base.addr.i169.i, align 4
  %add.ptr.i171.i = getelementptr i8, ptr %base.addr.i169.i.0.base.addr.i169.i.0.base.addr.i169.0.base.addr.i169.0.base.addr.0.base.addr.0.base.addr.0..i170.i, i32 %add46.i
  %84 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i171.i) #16, !srcloc !1461
  %85 = call i32 @llvm.bswap.i32(i32 %84) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i169.i)
  %incdec.ptr48.i = getelementptr i32, ptr %reg.5183.i, i32 1
  %86 = ptrtoint ptr %reg.5183.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %85, ptr %reg.5183.i, align 4
  %inc50.i = add nuw nsw i32 %i.4182.i, 1
  %exitcond204.not.i = icmp eq i32 %inc50.i, 26
  br i1 %exitcond204.not.i, label %for.body55.preheader.i, label %for.body41.i.for.body41.i_crit_edge

for.body41.i.for.body41.i_crit_edge:              ; preds = %for.body41.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body41.i

for.body55.preheader.i:                           ; preds = %for.body41.i
  %incdec.ptr56.i = getelementptr i32, ptr %reg.5183.i, i32 2
  %87 = ptrtoint ptr %incdec.ptr48.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 -33752070, ptr %incdec.ptr48.i, align 4
  %incdec.ptr56.1.i = getelementptr i32, ptr %reg.5183.i, i32 3
  %88 = ptrtoint ptr %incdec.ptr56.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 -33752070, ptr %incdec.ptr56.i, align 4
  %inc61.i = add nuw nsw i32 %j.0188.i, 1
  %89 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %num_tqps.i, align 2
  %conv.i = zext i16 %90 to i32
  %cmp35.i = icmp ult i32 %inc61.i, %conv.i
  br i1 %cmp35.i, label %for.body55.preheader.i.for.cond38.preheader.i_crit_edge, label %for.cond70.preheader.loopexit.i

for.body55.preheader.i.for.cond38.preheader.i_crit_edge: ; preds = %for.body55.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond38.preheader.i

for.cond76.preheader.i:                           ; preds = %for.cond76.preheader.i.for.cond76.preheader.i_crit_edge, %for.cond70.preheader.i.for.cond76.preheader.i_crit_edge
  %reg.7199.i = phi ptr [ %incdec.ptr95.2.i, %for.cond76.preheader.i.for.cond76.preheader.i_crit_edge ], [ %reg.4.lcssa.i, %for.cond70.preheader.i.for.cond76.preheader.i_crit_edge ]
  %j.1198.i = phi i32 [ %inc100.i, %for.cond76.preheader.i.for.cond76.preheader.i_crit_edge ], [ 0, %for.cond70.preheader.i.for.cond76.preheader.i_crit_edge ]
  %mul84.i = shl i32 %j.1198.i, 2
  %91 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %hw.i, align 8
  %add85.i = add nuw nsw i32 %mul84.i, 131072
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %93 = ptrtoint ptr %base.addr.i172.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %92, ptr %base.addr.i172.i, align 4
  %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.i = load volatile ptr, ptr %base.addr.i172.i, align 4
  %add.ptr.i174.i = getelementptr i8, ptr %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.i, i32 %add85.i
  %94 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i174.i) #16, !srcloc !1461
  %95 = call i32 @llvm.bswap.i32(i32 %94) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %incdec.ptr87.i = getelementptr i32, ptr %reg.7199.i, i32 1
  %96 = ptrtoint ptr %reg.7199.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %95, ptr %reg.7199.i, align 4
  %97 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %hw.i, align 8
  %add85.1.i = add nuw nsw i32 %mul84.i, 131328
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %99 = ptrtoint ptr %base.addr.i172.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr %98, ptr %base.addr.i172.i, align 4
  %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.1.i = load volatile ptr, ptr %base.addr.i172.i, align 4
  %add.ptr.i174.1.i = getelementptr i8, ptr %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.1.i, i32 %add85.1.i
  %100 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i174.1.i) #16, !srcloc !1461
  %101 = call i32 @llvm.bswap.i32(i32 %100) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %incdec.ptr87.1.i = getelementptr i32, ptr %reg.7199.i, i32 2
  %102 = ptrtoint ptr %incdec.ptr87.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %101, ptr %incdec.ptr87.i, align 4
  %103 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %hw.i, align 8
  %add85.2.i = add nuw nsw i32 %mul84.i, 131584
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %105 = ptrtoint ptr %base.addr.i172.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store ptr %104, ptr %base.addr.i172.i, align 4
  %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.2.i = load volatile ptr, ptr %base.addr.i172.i, align 4
  %add.ptr.i174.2.i = getelementptr i8, ptr %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.2.i, i32 %add85.2.i
  %106 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i174.2.i) #16, !srcloc !1461
  %107 = call i32 @llvm.bswap.i32(i32 %106) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %incdec.ptr87.2.i = getelementptr i32, ptr %reg.7199.i, i32 3
  %108 = ptrtoint ptr %incdec.ptr87.1.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %107, ptr %incdec.ptr87.1.i, align 4
  %109 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %hw.i, align 8
  %add85.3.i = add nuw nsw i32 %mul84.i, 131840
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %111 = ptrtoint ptr %base.addr.i172.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store ptr %110, ptr %base.addr.i172.i, align 4
  %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.3.i = load volatile ptr, ptr %base.addr.i172.i, align 4
  %add.ptr.i174.3.i = getelementptr i8, ptr %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.3.i, i32 %add85.3.i
  %112 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i174.3.i) #16, !srcloc !1461
  %113 = call i32 @llvm.bswap.i32(i32 %112) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %incdec.ptr87.3.i = getelementptr i32, ptr %reg.7199.i, i32 4
  %114 = ptrtoint ptr %incdec.ptr87.2.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 %113, ptr %incdec.ptr87.2.i, align 4
  %115 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %hw.i, align 8
  %add85.4.i = add nuw nsw i32 %mul84.i, 133376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %117 = ptrtoint ptr %base.addr.i172.i to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr %116, ptr %base.addr.i172.i, align 4
  %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.4.i = load volatile ptr, ptr %base.addr.i172.i, align 4
  %add.ptr.i174.4.i = getelementptr i8, ptr %base.addr.i172.i.0.base.addr.i172.i.0.base.addr.i172.0.base.addr.i172.0.base.addr.0.base.addr.0.base.addr.0..i173.4.i, i32 %add85.4.i
  %118 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i174.4.i) #16, !srcloc !1461
  %119 = call i32 @llvm.bswap.i32(i32 %118) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i172.i)
  %incdec.ptr87.4.i = getelementptr i32, ptr %reg.7199.i, i32 5
  %120 = ptrtoint ptr %incdec.ptr87.3.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 %119, ptr %incdec.ptr87.3.i, align 4
  %incdec.ptr95.i = getelementptr i32, ptr %reg.7199.i, i32 6
  %121 = ptrtoint ptr %incdec.ptr87.4.i to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 -33752070, ptr %incdec.ptr87.4.i, align 4
  %incdec.ptr95.1.i = getelementptr i32, ptr %reg.7199.i, i32 7
  %122 = ptrtoint ptr %incdec.ptr95.i to i32
  call void @__asan_store4_noabort(i32 %122)
  store i32 -33752070, ptr %incdec.ptr95.i, align 4
  %incdec.ptr95.2.i = getelementptr i32, ptr %reg.7199.i, i32 8
  %123 = ptrtoint ptr %incdec.ptr95.1.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store i32 -33752070, ptr %incdec.ptr95.1.i, align 4
  %inc100.i = add nuw nsw i32 %j.1198.i, 1
  %124 = ptrtoint ptr %num_msi_used.i to i32
  call void @__asan_load2_noabort(i32 %124)
  %125 = load i16, ptr %num_msi_used.i, align 4
  %conv71.i = zext i16 %125 to i32
  %sub72.i = add nsw i32 %conv71.i, -1
  %cmp73.i = icmp slt i32 %inc100.i, %sub72.i
  br i1 %cmp73.i, label %for.cond76.preheader.i.for.cond76.preheader.i_crit_edge, label %for.cond76.preheader.i.hclge_fetch_pf_reg.exit_crit_edge

for.cond76.preheader.i.hclge_fetch_pf_reg.exit_crit_edge: ; preds = %for.cond76.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fetch_pf_reg.exit

for.cond76.preheader.i.for.cond76.preheader.i_crit_edge: ; preds = %for.cond76.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond76.preheader.i

hclge_fetch_pf_reg.exit:                          ; preds = %for.cond76.preheader.i.hclge_fetch_pf_reg.exit_crit_edge, %for.cond70.preheader.i.hclge_fetch_pf_reg.exit_crit_edge
  %sub72.lcssa.i = phi i32 [ %sub72196.i, %for.cond70.preheader.i.hclge_fetch_pf_reg.exit_crit_edge ], [ %sub72.i, %for.cond76.preheader.i.hclge_fetch_pf_reg.exit_crit_edge ]
  %mul106.i = shl nsw i32 %sub72.lcssa.i, 3
  %add107.i = add nsw i32 %mul106.i, %.lcssa.i
  %add.ptr = getelementptr i32, ptr %data, i32 %add107.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp.i85 = icmp eq i32 %15, 0
  br i1 %cmp.i85, label %hclge_fetch_pf_reg.exit.for.body.preheader_crit_edge, label %if.end.i86

hclge_fetch_pf_reg.exit.for.body.preheader_crit_edge: ; preds = %hclge_fetch_pf_reg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.preheader

if.end.i86:                                       ; preds = %hclge_fetch_pf_reg.exit
  %sub.i = add i32 %16, 9
  %div55.i = lshr i32 %sub.i, 3
  %126 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %div55.i, i32 32) #16
  %127 = extractvalue { i32, i1 } %126, 1
  br i1 %127, label %if.end.i86.do.end8_crit_edge, label %if.end7.i.i.i, !prof !1452

if.end.i86.do.end8_crit_edge:                     ; preds = %if.end.i86
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end8

if.end7.i.i.i:                                    ; preds = %if.end.i86
  %128 = extractvalue { i32, i1 } %126, 0
  %call8.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %128, i32 noundef 3520) #19
  %tobool.not.i87 = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool.not.i87, label %if.end7.i.i.i.do.end8_crit_edge, label %if.end3.i

if.end7.i.i.i.do.end8_crit_edge:                  ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end8

if.end3.i:                                        ; preds = %if.end7.i.i.i
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %call8.i.i.i, i32 noundef 65, i1 noundef zeroext true) #16
  %call.i.i89 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %call8.i.i.i, i32 noundef %div55.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i89)
  %tobool5.not.i = icmp eq i32 %call.i.i89, 0
  br i1 %tobool5.not.i, label %for.cond.preheader.i, label %hclge_get_32_bit_regs.exit

for.cond.preheader.i:                             ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sub.i)
  %cmp866.not.i = icmp ult i32 %sub.i, 8
  br i1 %cmp866.not.i, label %for.cond.preheader.i.hclge_get_32_bit_regs.exit.thread206_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.hclge_get_32_bit_regs.exit.thread206_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_32_bit_regs.exit.thread206

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %data12.i = getelementptr inbounds %struct.hclge_desc, ptr %call8.i.i.i, i32 0, i32 4
  %smax.i = call i32 @llvm.smax.i32(i32 %div55.i, i32 1) #16
  br label %for.body.i92

for.body.i92:                                     ; preds = %for.inc24.i.for.body.i92_crit_edge, %for.body.lr.ph.i
  %i.069.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc25.i, %for.inc24.i.for.body.i92_crit_edge ]
  %reg_val.068.i = phi ptr [ %add.ptr, %for.body.lr.ph.i ], [ %incdec.ptr20.i, %for.inc24.i.for.body.i92_crit_edge ]
  %regs_num.addr.067.i = phi i32 [ %16, %for.body.lr.ph.i ], [ %dec.i, %for.inc24.i.for.body.i92_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.069.i)
  %cmp9.i = icmp eq i32 %i.069.i, 0
  %arrayidx15.i = getelementptr %struct.hclge_desc, ptr %call8.i.i.i, i32 %i.069.i
  %desc_data.0.i = select i1 %cmp9.i, ptr %data12.i, ptr %arrayidx15.i
  %n.0.i = select i1 %cmp9.i, i32 6, i32 8
  br label %for.body19.i

for.body19.i:                                     ; preds = %for.body19.i.for.body19.i_crit_edge, %for.body.i92
  %k.065.i = phi i32 [ 0, %for.body.i92 ], [ %inc.i94, %for.body19.i.for.body19.i_crit_edge ]
  %desc_data.164.i = phi ptr [ %desc_data.0.i, %for.body.i92 ], [ %incdec.ptr.i93, %for.body19.i.for.body19.i_crit_edge ]
  %reg_val.163.i = phi ptr [ %reg_val.068.i, %for.body.i92 ], [ %incdec.ptr20.i, %for.body19.i.for.body19.i_crit_edge ]
  %regs_num.addr.162.i = phi i32 [ %regs_num.addr.067.i, %for.body.i92 ], [ %dec.i, %for.body19.i.for.body19.i_crit_edge ]
  %129 = ptrtoint ptr %desc_data.164.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %desc_data.164.i, align 4
  %131 = call i32 @llvm.bswap.i32(i32 %130) #16
  %incdec.ptr20.i = getelementptr i32, ptr %reg_val.163.i, i32 1
  %132 = ptrtoint ptr %reg_val.163.i to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 %131, ptr %reg_val.163.i, align 4
  %dec.i = add i32 %regs_num.addr.162.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool21.not.i = icmp eq i32 %dec.i, 0
  %incdec.ptr.i93 = getelementptr i32, ptr %desc_data.164.i, i32 1
  %inc.i94 = add nuw nsw i32 %k.065.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i94, i32 %n.0.i)
  %exitcond.not.i95 = icmp eq i32 %inc.i94, %n.0.i
  %or.cond.i = select i1 %tobool21.not.i, i1 true, i1 %exitcond.not.i95
  br i1 %or.cond.i, label %for.inc24.i, label %for.body19.i.for.body19.i_crit_edge

for.body19.i.for.body19.i_crit_edge:              ; preds = %for.body19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body19.i

for.inc24.i:                                      ; preds = %for.body19.i
  %inc25.i = add nuw nsw i32 %i.069.i, 1
  %exitcond70.not.i = icmp eq i32 %inc25.i, %smax.i
  br i1 %exitcond70.not.i, label %for.inc24.i.hclge_get_32_bit_regs.exit.thread206_crit_edge, label %for.inc24.i.for.body.i92_crit_edge

for.inc24.i.for.body.i92_crit_edge:               ; preds = %for.inc24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i92

for.inc24.i.hclge_get_32_bit_regs.exit.thread206_crit_edge: ; preds = %for.inc24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_32_bit_regs.exit.thread206

hclge_get_32_bit_regs.exit.thread206:             ; preds = %for.inc24.i.hclge_get_32_bit_regs.exit.thread206_crit_edge, %for.cond.preheader.i.hclge_get_32_bit_regs.exit.thread206_crit_edge
  call void @kfree(ptr noundef nonnull %call8.i.i.i) #16
  br label %for.body.preheader

hclge_get_32_bit_regs.exit:                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  %133 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %5, align 8
  %dev.i90 = getelementptr inbounds %struct.pci_dev, ptr %134, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i90, ptr noundef nonnull @.str.614, i32 noundef %call.i.i89) #20
  call void @kfree(ptr noundef nonnull %call8.i.i.i) #16
  br label %do.end8

do.end8:                                          ; preds = %hclge_get_32_bit_regs.exit, %if.end7.i.i.i.do.end8_crit_edge, %if.end.i86.do.end8_crit_edge
  %retval.0.i96199 = phi i32 [ %call.i.i89, %hclge_get_32_bit_regs.exit ], [ -12, %if.end7.i.i.i.do.end8_crit_edge ], [ -12, %if.end.i86.do.end8_crit_edge ]
  %135 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %5, align 8
  %dev10 = getelementptr inbounds %struct.pci_dev, ptr %136, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev10, ptr noundef nonnull @.str.604, i32 noundef %retval.0.i96199) #20
  br label %cleanup

for.body.preheader:                               ; preds = %hclge_get_32_bit_regs.exit.thread206, %hclge_fetch_pf_reg.exit.for.body.preheader_crit_edge
  %regs_num_32_bit.0191204 = phi i32 [ %16, %hclge_get_32_bit_regs.exit.thread206 ], [ 0, %hclge_fetch_pf_reg.exit.for.body.preheader_crit_edge ]
  %and = and i32 %regs_num_32_bit.0191204, 3
  %add.ptr12 = getelementptr i32, ptr %add.ptr, i32 %regs_num_32_bit.0191204
  %incdec.ptr = getelementptr i32, ptr %add.ptr12, i32 1
  %137 = ptrtoint ptr %add.ptr12 to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 -33752070, ptr %add.ptr12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and)
  %exitcond.not = icmp eq i32 %and, 3
  br i1 %exitcond.not, label %for.body.preheader.for.end_crit_edge, label %for.body.1

for.body.preheader.for.end_crit_edge:             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.1:                                       ; preds = %for.body.preheader
  %incdec.ptr.1 = getelementptr i32, ptr %incdec.ptr, i32 1
  %138 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 -33752070, ptr %incdec.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and)
  %exitcond.not.1 = icmp eq i32 %and, 2
  br i1 %exitcond.not.1, label %for.body.1.for.end_crit_edge, label %for.body.2

for.body.1.for.end_crit_edge:                     ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.2:                                       ; preds = %for.body.1
  %incdec.ptr.2 = getelementptr i32, ptr %incdec.ptr.1, i32 1
  %139 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 -33752070, ptr %incdec.ptr.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and)
  %exitcond.not.2 = icmp eq i32 %and, 1
  br i1 %exitcond.not.2, label %for.body.2.for.end_crit_edge, label %for.body.3

for.body.2.for.end_crit_edge:                     ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.3:                                       ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.3 = getelementptr i32, ptr %incdec.ptr.2, i32 1
  %140 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 -33752070, ptr %incdec.ptr.2, align 4
  br label %for.end

for.end:                                          ; preds = %for.body.3, %for.body.2.for.end_crit_edge, %for.body.1.for.end_crit_edge, %for.body.preheader.for.end_crit_edge
  %incdec.ptr.lcssa = phi ptr [ %incdec.ptr, %for.body.preheader.for.end_crit_edge ], [ %incdec.ptr.1, %for.body.1.for.end_crit_edge ], [ %incdec.ptr.2, %for.body.2.for.end_crit_edge ], [ %incdec.ptr.3, %for.body.3 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i97 = icmp eq i32 %18, 0
  br i1 %cmp.i97, label %for.end.for.body27.preheader_crit_edge, label %if.end.i100

for.end.for.body27.preheader_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body27.preheader

if.end.i100:                                      ; preds = %for.end
  %sub.i98 = add i32 %19, 4
  %div55.i99 = lshr i32 %sub.i98, 2
  %141 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %div55.i99, i32 32) #16
  %142 = extractvalue { i32, i1 } %141, 1
  br i1 %142, label %if.end.i100.do.end18_crit_edge, label %if.end7.i.i.i131, !prof !1452

if.end.i100.do.end18_crit_edge:                   ; preds = %if.end.i100
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end18

if.end7.i.i.i131:                                 ; preds = %if.end.i100
  %143 = extractvalue { i32, i1 } %141, 0
  %call8.i.i.i130 = call noalias align 128 ptr @__kmalloc(i32 noundef %143, i32 noundef 3520) #19
  %tobool.not.i133 = icmp eq ptr %call8.i.i.i130, null
  br i1 %tobool.not.i133, label %if.end7.i.i.i131.do.end18_crit_edge, label %if.end3.i139

if.end7.i.i.i131.do.end18_crit_edge:              ; preds = %if.end7.i.i.i131
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end18

if.end3.i139:                                     ; preds = %if.end7.i.i.i131
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %call8.i.i.i130, i32 noundef 66, i1 noundef zeroext true) #16
  %call.i.i137 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %call8.i.i.i130, i32 noundef %div55.i99) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i137)
  %tobool5.not.i138 = icmp eq i32 %call.i.i137, 0
  br i1 %tobool5.not.i138, label %for.cond.preheader.i141, label %hclge_get_64_bit_regs.exit

for.cond.preheader.i141:                          ; preds = %if.end3.i139
  call void @__sanitizer_cov_trace_const_cmp4(i32 -5, i32 %19)
  %cmp866.not.i140 = icmp ugt i32 %19, -5
  br i1 %cmp866.not.i140, label %for.cond.preheader.i141.hclge_get_64_bit_regs.exit.thread220_crit_edge, label %for.body.lr.ph.i144

for.cond.preheader.i141.hclge_get_64_bit_regs.exit.thread220_crit_edge: ; preds = %for.cond.preheader.i141
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_64_bit_regs.exit.thread220

for.body.lr.ph.i144:                              ; preds = %for.cond.preheader.i141
  %data12.i142 = getelementptr inbounds %struct.hclge_desc, ptr %call8.i.i.i130, i32 0, i32 4
  %smax.i143 = call i32 @llvm.smax.i32(i32 %div55.i99, i32 1) #16
  br label %for.body.i154

for.body.i154:                                    ; preds = %for.inc24.i168.for.body.i154_crit_edge, %for.body.lr.ph.i144
  %i.069.i147 = phi i32 [ 0, %for.body.lr.ph.i144 ], [ %inc25.i166, %for.inc24.i168.for.body.i154_crit_edge ]
  %reg_val.068.i148 = phi ptr [ %incdec.ptr.lcssa, %for.body.lr.ph.i144 ], [ %incdec.ptr20.i159, %for.inc24.i168.for.body.i154_crit_edge ]
  %regs_num.addr.067.i149 = phi i32 [ %19, %for.body.lr.ph.i144 ], [ %dec.i160, %for.inc24.i168.for.body.i154_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.069.i147)
  %cmp9.i150 = icmp eq i32 %i.069.i147, 0
  %arrayidx15.i151 = getelementptr %struct.hclge_desc, ptr %call8.i.i.i130, i32 %i.069.i147
  %desc_data.0.i152 = select i1 %cmp9.i150, ptr %data12.i142, ptr %arrayidx15.i151
  %n.0.i153 = select i1 %cmp9.i150, i32 3, i32 4
  br label %for.body19.i162

for.body19.i162:                                  ; preds = %for.inc.i.for.body19.i162_crit_edge, %for.body.i154
  %k.065.i155 = phi i32 [ 0, %for.body.i154 ], [ %inc.i164, %for.inc.i.for.body19.i162_crit_edge ]
  %desc_data.164.i156 = phi ptr [ %desc_data.0.i152, %for.body.i154 ], [ %incdec.ptr.i163, %for.inc.i.for.body19.i162_crit_edge ]
  %reg_val.163.i157 = phi ptr [ %reg_val.068.i148, %for.body.i154 ], [ %incdec.ptr20.i159, %for.inc.i.for.body19.i162_crit_edge ]
  %regs_num.addr.162.i158 = phi i32 [ %regs_num.addr.067.i149, %for.body.i154 ], [ %dec.i160, %for.inc.i.for.body19.i162_crit_edge ]
  %144 = ptrtoint ptr %desc_data.164.i156 to i32
  call void @__asan_load8_noabort(i32 %144)
  %145 = load i64, ptr %desc_data.164.i156, align 8
  %146 = call i64 @llvm.bswap.i64(i64 %145) #16
  %incdec.ptr20.i159 = getelementptr i64, ptr %reg_val.163.i157, i32 1
  %147 = ptrtoint ptr %reg_val.163.i157 to i32
  call void @__asan_store8_noabort(i32 %147)
  store i64 %146, ptr %reg_val.163.i157, align 8
  %dec.i160 = add i32 %regs_num.addr.162.i158, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i160)
  %tobool21.not.i161 = icmp eq i32 %dec.i160, 0
  br i1 %tobool21.not.i161, label %for.body19.i162.for.inc24.i168_crit_edge, label %for.inc.i

for.body19.i162.for.inc24.i168_crit_edge:         ; preds = %for.body19.i162
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc24.i168

for.inc.i:                                        ; preds = %for.body19.i162
  %incdec.ptr.i163 = getelementptr i64, ptr %desc_data.164.i156, i32 1
  %inc.i164 = add nuw nsw i32 %k.065.i155, 1
  %exitcond.not.i165 = icmp eq i32 %inc.i164, %n.0.i153
  br i1 %exitcond.not.i165, label %for.inc.i.for.inc24.i168_crit_edge, label %for.inc.i.for.body19.i162_crit_edge

for.inc.i.for.body19.i162_crit_edge:              ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body19.i162

for.inc.i.for.inc24.i168_crit_edge:               ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc24.i168

for.inc24.i168:                                   ; preds = %for.inc.i.for.inc24.i168_crit_edge, %for.body19.i162.for.inc24.i168_crit_edge
  %inc25.i166 = add nuw nsw i32 %i.069.i147, 1
  %exitcond70.not.i167 = icmp eq i32 %inc25.i166, %smax.i143
  br i1 %exitcond70.not.i167, label %for.inc24.i168.hclge_get_64_bit_regs.exit.thread220_crit_edge, label %for.inc24.i168.for.body.i154_crit_edge

for.inc24.i168.for.body.i154_crit_edge:           ; preds = %for.inc24.i168
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i154

for.inc24.i168.hclge_get_64_bit_regs.exit.thread220_crit_edge: ; preds = %for.inc24.i168
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_64_bit_regs.exit.thread220

hclge_get_64_bit_regs.exit.thread220:             ; preds = %for.inc24.i168.hclge_get_64_bit_regs.exit.thread220_crit_edge, %for.cond.preheader.i141.hclge_get_64_bit_regs.exit.thread220_crit_edge
  call void @kfree(ptr noundef nonnull %call8.i.i.i130) #16
  %phi.bo = shl i32 %19, 1
  br label %for.body27.preheader

hclge_get_64_bit_regs.exit:                       ; preds = %if.end3.i139
  call void @__sanitizer_cov_trace_pc() #18
  %148 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %5, align 8
  %dev.i145 = getelementptr inbounds %struct.pci_dev, ptr %149, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i145, ptr noundef nonnull @.str.616, i32 noundef %call.i.i137) #20
  call void @kfree(ptr noundef nonnull %call8.i.i.i130) #16
  br label %do.end18

do.end18:                                         ; preds = %hclge_get_64_bit_regs.exit, %if.end7.i.i.i131.do.end18_crit_edge, %if.end.i100.do.end18_crit_edge
  %retval.0.i171213 = phi i32 [ %call.i.i137, %hclge_get_64_bit_regs.exit ], [ -12, %if.end7.i.i.i131.do.end18_crit_edge ], [ -12, %if.end.i100.do.end18_crit_edge ]
  %150 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %5, align 8
  %dev20 = getelementptr inbounds %struct.pci_dev, ptr %151, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev20, ptr noundef nonnull @.str.607, i32 noundef %retval.0.i171213) #20
  br label %cleanup

for.body27.preheader:                             ; preds = %hclge_get_64_bit_regs.exit.thread220, %for.end.for.body27.preheader_crit_edge
  %regs_num_64_bit.0193218 = phi i32 [ %phi.bo, %hclge_get_64_bit_regs.exit.thread220 ], [ 0, %for.end.for.body27.preheader_crit_edge ]
  %and23 = and i32 %regs_num_64_bit.0193218, 2
  %sub24 = sub nuw nsw i32 4, %and23
  %add.ptr22 = getelementptr i32, ptr %incdec.ptr.lcssa, i32 %regs_num_64_bit.0193218
  br label %for.body27

for.body27:                                       ; preds = %for.body27.for.body27_crit_edge, %for.body27.preheader
  %reg.1238 = phi ptr [ %incdec.ptr28, %for.body27.for.body27_crit_edge ], [ %add.ptr22, %for.body27.preheader ]
  %i.1237 = phi i32 [ %inc30, %for.body27.for.body27_crit_edge ], [ 0, %for.body27.preheader ]
  %incdec.ptr28 = getelementptr i32, ptr %reg.1238, i32 1
  %152 = ptrtoint ptr %reg.1238 to i32
  call void @__asan_store4_noabort(i32 %152)
  store i32 -33752070, ptr %reg.1238, align 4
  %inc30 = add nuw nsw i32 %i.1237, 1
  %exitcond243.not = icmp eq i32 %inc30, %sub24
  br i1 %exitcond243.not, label %for.end31, label %for.body27.for.body27_crit_edge

for.body27.for.body27_crit_edge:                  ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body27

for.end31:                                        ; preds = %for.body27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %153 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i.i172 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %153, i32 noundef 3520, i32 noundef 48) #21
  %tobool.not.i173 = icmp eq ptr %call7.i.i.i.i172, null
  br i1 %tobool.not.i173, label %for.end31.do.end37_crit_edge, label %if.end.i174

for.end31.do.end37_crit_edge:                     ; preds = %for.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end37

if.end.i174:                                      ; preds = %for.end31
  %call1.i = call fastcc i32 @hclge_get_dfx_reg_bd_num(ptr noundef %5, ptr noundef nonnull %call7.i.i.i.i172) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end8.i.i.i, label %do.end.i176

do.end.i176:                                      ; preds = %if.end.i174
  call void @__sanitizer_cov_trace_pc() #18
  %154 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %5, align 8
  %dev.i175 = getelementptr inbounds %struct.pci_dev, ptr %155, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i175, ptr noundef nonnull @.str.618, i32 noundef %call1.i) #20
  br label %hclge_get_dfx_reg.exit.thread227

if.end8.i.i.i:                                    ; preds = %if.end.i174
  %156 = ptrtoint ptr %call7.i.i.i.i172 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %call7.i.i.i.i172, align 8
  %arrayidx5.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 1
  %158 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %arrayidx5.i, align 4
  %160 = call i32 @llvm.smax.i32(i32 %157, i32 %159) #16
  %arrayidx5.1.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 2
  %161 = ptrtoint ptr %arrayidx5.1.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %arrayidx5.1.i, align 8
  %163 = call i32 @llvm.smax.i32(i32 %160, i32 %162) #16
  %arrayidx5.2.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 3
  %164 = ptrtoint ptr %arrayidx5.2.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %arrayidx5.2.i, align 4
  %166 = call i32 @llvm.smax.i32(i32 %163, i32 %165) #16
  %arrayidx5.3.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 4
  %167 = ptrtoint ptr %arrayidx5.3.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %arrayidx5.3.i, align 8
  %169 = call i32 @llvm.smax.i32(i32 %166, i32 %168) #16
  %arrayidx5.4.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 5
  %170 = ptrtoint ptr %arrayidx5.4.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %arrayidx5.4.i, align 4
  %172 = call i32 @llvm.smax.i32(i32 %169, i32 %171) #16
  %arrayidx5.5.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 6
  %173 = ptrtoint ptr %arrayidx5.5.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %arrayidx5.5.i, align 8
  %175 = call i32 @llvm.smax.i32(i32 %172, i32 %174) #16
  %arrayidx5.6.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 7
  %176 = ptrtoint ptr %arrayidx5.6.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %arrayidx5.6.i, align 4
  %178 = call i32 @llvm.smax.i32(i32 %175, i32 %177) #16
  %arrayidx5.7.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 8
  %179 = ptrtoint ptr %arrayidx5.7.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %arrayidx5.7.i, align 8
  %181 = call i32 @llvm.smax.i32(i32 %178, i32 %180) #16
  %arrayidx5.8.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 9
  %182 = ptrtoint ptr %arrayidx5.8.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %arrayidx5.8.i, align 4
  %184 = call i32 @llvm.smax.i32(i32 %181, i32 %183) #16
  %arrayidx5.9.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 10
  %185 = ptrtoint ptr %arrayidx5.9.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %arrayidx5.9.i, align 8
  %187 = call i32 @llvm.smax.i32(i32 %184, i32 %186) #16
  %arrayidx5.10.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 11
  %188 = ptrtoint ptr %arrayidx5.10.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %arrayidx5.10.i, align 4
  %190 = call i32 @llvm.smax.i32(i32 %187, i32 %189) #16
  %mul.i177 = shl i32 %190, 5
  %call9.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %mul.i177, i32 noundef 3520) #19
  %tobool8.not.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool8.not.i, label %if.end8.i.i.i.hclge_get_dfx_reg.exit.thread227_crit_edge, label %if.end8.i.i.i.for.body13.i_crit_edge

if.end8.i.i.i.for.body13.i_crit_edge:             ; preds = %if.end8.i.i.i
  br label %for.body13.i

if.end8.i.i.i.hclge_get_dfx_reg.exit.thread227_crit_edge: ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_dfx_reg.exit.thread227

for.body13.i:                                     ; preds = %hclge_dfx_reg_fetch_data.exit.i.for.body13.i_crit_edge, %if.end8.i.i.i.for.body13.i_crit_edge
  %reg.074.i = phi ptr [ %add.ptr.i, %hclge_dfx_reg_fetch_data.exit.i.for.body13.i_crit_edge ], [ %incdec.ptr28, %if.end8.i.i.i.for.body13.i_crit_edge ]
  %i.173.i = phi i32 [ %inc27.i, %hclge_dfx_reg_fetch_data.exit.i.for.body13.i_crit_edge ], [ 0, %if.end8.i.i.i.for.body13.i_crit_edge ]
  %arrayidx14.i = getelementptr i32, ptr %call7.i.i.i.i172, i32 %i.173.i
  %191 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %arrayidx14.i, align 4
  %arrayidx15.i181 = getelementptr [12 x i32], ptr @hclge_dfx_reg_opcode_list, i32 0, i32 %i.173.i
  %193 = ptrtoint ptr %arrayidx15.i181 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %arrayidx15.i181, align 4
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %call9.i.i.i, i32 noundef %194, i1 noundef zeroext true) #16
  %sub.i.i = add i32 %192, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp14.i.i = icmp sgt i32 %sub.i.i, 0
  br i1 %cmp14.i.i, label %for.body13.i.for.body.i.i_crit_edge, label %for.body13.i.for.end.i.i_crit_edge

for.body13.i.for.end.i.i_crit_edge:               ; preds = %for.body13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i

for.body13.i.for.body.i.i_crit_edge:              ; preds = %for.body13.i
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body13.i.for.body.i.i_crit_edge
  %i.016.i.i = phi i32 [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.body13.i.for.body.i.i_crit_edge ]
  %desc.015.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %call9.i.i.i, %for.body13.i.for.body.i.i_crit_edge ]
  %flag.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.015.i.i, i32 0, i32 1
  %195 = ptrtoint ptr %flag.i.i to i32
  call void @__asan_load2_noabort(i32 %195)
  %196 = load i16, ptr %flag.i.i, align 2
  %197 = or i16 %196, 1024
  store i16 %197, ptr %flag.i.i, align 2
  %incdec.ptr.i.i = getelementptr %struct.hclge_desc, ptr %desc.015.i.i, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %incdec.ptr.i.i, i32 noundef %194, i1 noundef zeroext true) #16
  %inc.i.i = add nuw nsw i32 %i.016.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %sub.i.i
  br i1 %exitcond.not.i.i, label %for.body.i.i.for.end.i.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body.i.i.for.end.i.i_crit_edge, %for.body13.i.for.end.i.i_crit_edge
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %call9.i.i.i, i32 noundef %192) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end24.i, label %do.end21.i

do.end21.i:                                       ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %198 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %5, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %199, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.625, i32 noundef %194, i32 noundef %call.i.i.i) #20
  %200 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %5, align 8
  %dev23.i = getelementptr inbounds %struct.pci_dev, ptr %201, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev23.i, ptr noundef nonnull @.str.621, i32 noundef %call.i.i.i) #20
  br label %hclge_get_dfx_reg.exit

if.end24.i:                                       ; preds = %for.end.i.i
  %mul.i.i = mul i32 %192, 6
  %and.i.i = and i32 %mul.i.i, 2
  %sub.i66.i = sub nuw nsw i32 4, %and.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul.i.i)
  %cmp21.i.i = icmp sgt i32 %mul.i.i, 0
  br i1 %cmp21.i.i, label %if.end24.i.for.body.i70.i_crit_edge, label %if.end24.i.for.body5.i.i.preheader_crit_edge

if.end24.i.for.body5.i.i.preheader_crit_edge:     ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body5.i.i.preheader

if.end24.i.for.body.i70.i_crit_edge:              ; preds = %if.end24.i
  br label %for.body.i70.i

for.body.i70.i:                                   ; preds = %for.body.i70.i.for.body.i70.i_crit_edge, %if.end24.i.for.body.i70.i_crit_edge
  %reg.023.i.i = phi ptr [ %incdec.ptr.i67.i, %for.body.i70.i.for.body.i70.i_crit_edge ], [ %reg.074.i, %if.end24.i.for.body.i70.i_crit_edge ]
  %i.022.i.i = phi i32 [ %inc.i68.i, %for.body.i70.i.for.body.i70.i_crit_edge ], [ 0, %if.end24.i.for.body.i70.i_crit_edge ]
  %i.022.i.i.frozen = freeze i32 %i.022.i.i
  %div.i.i = udiv i32 %i.022.i.i.frozen, 6
  %202 = mul i32 %div.i.i, 6
  %rem.i.i.decomposed = sub i32 %i.022.i.i.frozen, %202
  %arrayidx2.i.i = getelementptr %struct.hclge_desc, ptr %call9.i.i.i, i32 %div.i.i, i32 4, i32 %rem.i.i.decomposed
  %203 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %arrayidx2.i.i, align 4
  %205 = call i32 @llvm.bswap.i32(i32 %204) #16
  %incdec.ptr.i67.i = getelementptr i32, ptr %reg.023.i.i, i32 1
  %206 = ptrtoint ptr %reg.023.i.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 %205, ptr %reg.023.i.i, align 4
  %inc.i68.i = add nuw nsw i32 %i.022.i.i, 1
  %exitcond.not.i69.i = icmp eq i32 %inc.i68.i, %mul.i.i
  br i1 %exitcond.not.i69.i, label %for.body.i70.i.for.body5.i.i.preheader_crit_edge, label %for.body.i70.i.for.body.i70.i_crit_edge

for.body.i70.i.for.body.i70.i_crit_edge:          ; preds = %for.body.i70.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i70.i

for.body.i70.i.for.body5.i.i.preheader_crit_edge: ; preds = %for.body.i70.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body5.i.i.preheader

for.body5.i.i.preheader:                          ; preds = %for.body.i70.i.for.body5.i.i.preheader_crit_edge, %if.end24.i.for.body5.i.i.preheader_crit_edge
  %reg.126.i.i.ph = phi ptr [ %reg.074.i, %if.end24.i.for.body5.i.i.preheader_crit_edge ], [ %incdec.ptr.i67.i, %for.body.i70.i.for.body5.i.i.preheader_crit_edge ]
  br label %for.body5.i.i

for.body5.i.i:                                    ; preds = %for.body5.i.i.for.body5.i.i_crit_edge, %for.body5.i.i.preheader
  %reg.126.i.i = phi ptr [ %incdec.ptr6.i.i, %for.body5.i.i.for.body5.i.i_crit_edge ], [ %reg.126.i.i.ph, %for.body5.i.i.preheader ]
  %i.125.i.i = phi i32 [ %inc8.i.i, %for.body5.i.i.for.body5.i.i_crit_edge ], [ 0, %for.body5.i.i.preheader ]
  %incdec.ptr6.i.i = getelementptr i32, ptr %reg.126.i.i, i32 1
  %207 = ptrtoint ptr %reg.126.i.i to i32
  call void @__asan_store4_noabort(i32 %207)
  store i32 -33752070, ptr %reg.126.i.i, align 4
  %inc8.i.i = add nuw nsw i32 %i.125.i.i, 1
  %exitcond27.not.i.i = icmp eq i32 %inc8.i.i, %sub.i66.i
  br i1 %exitcond27.not.i.i, label %hclge_dfx_reg_fetch_data.exit.i, label %for.body5.i.i.for.body5.i.i_crit_edge

for.body5.i.i.for.body5.i.i_crit_edge:            ; preds = %for.body5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body5.i.i

hclge_dfx_reg_fetch_data.exit.i:                  ; preds = %for.body5.i.i
  %add.i.i = add i32 %sub.i66.i, %mul.i.i
  %add.ptr.i = getelementptr i32, ptr %reg.074.i, i32 %add.i.i
  %inc27.i = add nuw nsw i32 %i.173.i, 1
  %exitcond.not.i182 = icmp eq i32 %inc27.i, 12
  br i1 %exitcond.not.i182, label %hclge_dfx_reg_fetch_data.exit.i.hclge_get_dfx_reg.exit_crit_edge, label %hclge_dfx_reg_fetch_data.exit.i.for.body13.i_crit_edge

hclge_dfx_reg_fetch_data.exit.i.for.body13.i_crit_edge: ; preds = %hclge_dfx_reg_fetch_data.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body13.i

hclge_dfx_reg_fetch_data.exit.i.hclge_get_dfx_reg.exit_crit_edge: ; preds = %hclge_dfx_reg_fetch_data.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_dfx_reg.exit

hclge_get_dfx_reg.exit.thread227:                 ; preds = %if.end8.i.i.i.hclge_get_dfx_reg.exit.thread227_crit_edge, %do.end.i176
  %ret.2.i.ph = phi i32 [ -12, %if.end8.i.i.i.hclge_get_dfx_reg.exit.thread227_crit_edge ], [ %call1.i, %do.end.i176 ]
  call void @kfree(ptr noundef nonnull %call7.i.i.i.i172) #16
  br label %do.end37

hclge_get_dfx_reg.exit:                           ; preds = %hclge_dfx_reg_fetch_data.exit.i.hclge_get_dfx_reg.exit_crit_edge, %do.end21.i
  %ret.1.i = phi i32 [ %call.i.i.i, %do.end21.i ], [ 0, %hclge_dfx_reg_fetch_data.exit.i.hclge_get_dfx_reg.exit_crit_edge ]
  call void @kfree(ptr noundef nonnull %call9.i.i.i) #16
  call void @kfree(ptr noundef nonnull %call7.i.i.i.i172) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1.i)
  %tobool33.not = icmp eq i32 %ret.1.i, 0
  br i1 %tobool33.not, label %hclge_get_dfx_reg.exit.cleanup_crit_edge, label %hclge_get_dfx_reg.exit.do.end37_crit_edge

hclge_get_dfx_reg.exit.do.end37_crit_edge:        ; preds = %hclge_get_dfx_reg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end37

hclge_get_dfx_reg.exit.cleanup_crit_edge:         ; preds = %hclge_get_dfx_reg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end37:                                         ; preds = %hclge_get_dfx_reg.exit.do.end37_crit_edge, %hclge_get_dfx_reg.exit.thread227, %for.end31.do.end37_crit_edge
  %retval.0.i183226 = phi i32 [ %ret.1.i, %hclge_get_dfx_reg.exit.do.end37_crit_edge ], [ %ret.2.i.ph, %hclge_get_dfx_reg.exit.thread227 ], [ -12, %for.end31.do.end37_crit_edge ]
  %208 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %5, align 8
  %dev39 = getelementptr inbounds %struct.pci_dev, ptr %209, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev39, ptr noundef nonnull @.str.610, i32 noundef %retval.0.i183226) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end37, %hclge_get_dfx_reg.exit.cleanup_crit_edge, %do.end18, %do.end8, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_regs_len(ptr nocapture noundef readonly %handle) #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %6 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 64, i1 noundef zeroext true) #16
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i48 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i48, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.612, i32 noundef %call.i.i) #20
  br label %do.end

if.end.i:                                         ; preds = %hclge_get_vport.exit
  %9 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 1
  %10 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %13 = call i32 @llvm.bswap.i32(i32 %12) #16
  %14 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %9, align 4
  %16 = call i32 @llvm.bswap.i32(i32 %15) #16
  %add.i = sub i32 0, %16
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %add.i)
  %tobool3.not.i = icmp eq i32 %13, %add.i
  br i1 %tobool3.not.i, label %if.end.i.do.end_crit_edge, label %if.end

if.end.i.do.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %if.end.i.do.end_crit_edge, %do.end.i
  %retval.0.i.ph = phi i32 [ %call.i.i, %do.end.i ], [ -22, %if.end.i.do.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %17 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.601, i32 noundef %retval.0.i.ph) #20
  br label %cleanup

if.end:                                           ; preds = %if.end.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %19 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %19, i32 noundef 3520, i32 noundef 48) #21
  %tobool.not.i50 = icmp eq ptr %call7.i.i.i.i, null
  br i1 %tobool.not.i50, label %if.end.do.end7_crit_edge, label %if.end.i51

if.end.do.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

if.end.i51:                                       ; preds = %if.end
  %call1.i = call fastcc i32 @hclge_get_dfx_reg_bd_num(ptr noundef %5, ptr noundef nonnull %call7.i.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end10, label %hclge_get_dfx_reg_len.exit

hclge_get_dfx_reg_len.exit:                       ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %5, align 8
  %dev.i52 = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i52, ptr noundef nonnull @.str.618, i32 noundef %call1.i) #20
  call void @kfree(ptr noundef nonnull %call7.i.i.i.i) #16
  br label %do.end7

do.end7:                                          ; preds = %hclge_get_dfx_reg_len.exit, %if.end.do.end7_crit_edge
  %retval.0.i5464 = phi i32 [ %call1.i, %hclge_get_dfx_reg_len.exit ], [ -12, %if.end.do.end7_crit_edge ]
  %22 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %5, align 8
  %dev9 = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev9, ptr noundef nonnull @.str.629, i32 noundef %retval.0.i5464) #20
  br label %cleanup

if.end10:                                         ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %call7.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %call7.i.i.i.i, align 8
  %mul.i = mul i32 %25, 24
  %arrayidx.1.i = getelementptr i32, ptr %call7.i.i.i.i, i32 1
  %26 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.1.i, align 4
  %mul.1.i = mul i32 %27, 24
  %28 = add i32 %mul.1.i, 16
  %mul5.1.i = and i32 %28, -16
  %arrayidx.2.i = getelementptr i32, ptr %call7.i.i.i.i, i32 2
  %29 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx.2.i, align 8
  %mul.2.i = mul i32 %30, 24
  %31 = add i32 %mul.2.i, 16
  %mul5.2.i = and i32 %31, -16
  %arrayidx.3.i = getelementptr i32, ptr %call7.i.i.i.i, i32 3
  %32 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx.3.i, align 4
  %mul.3.i = mul i32 %33, 24
  %34 = add i32 %mul.3.i, 16
  %mul5.3.i = and i32 %34, -16
  %arrayidx.4.i = getelementptr i32, ptr %call7.i.i.i.i, i32 4
  %35 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.4.i, align 8
  %mul.4.i = mul i32 %36, 24
  %37 = add i32 %mul.4.i, 16
  %mul5.4.i = and i32 %37, -16
  %arrayidx.5.i = getelementptr i32, ptr %call7.i.i.i.i, i32 5
  %38 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx.5.i, align 4
  %mul.5.i = mul i32 %39, 24
  %40 = add i32 %mul.5.i, 16
  %mul5.5.i = and i32 %40, -16
  %arrayidx.6.i = getelementptr i32, ptr %call7.i.i.i.i, i32 6
  %41 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx.6.i, align 8
  %mul.6.i = mul i32 %42, 24
  %43 = add i32 %mul.6.i, 16
  %mul5.6.i = and i32 %43, -16
  %arrayidx.7.i = getelementptr i32, ptr %call7.i.i.i.i, i32 7
  %44 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx.7.i, align 4
  %mul.7.i = mul i32 %45, 24
  %46 = add i32 %mul.7.i, 16
  %mul5.7.i = and i32 %46, -16
  %arrayidx.8.i = getelementptr i32, ptr %call7.i.i.i.i, i32 8
  %47 = ptrtoint ptr %arrayidx.8.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx.8.i, align 8
  %mul.8.i = mul i32 %48, 24
  %49 = add i32 %mul.8.i, 16
  %mul5.8.i = and i32 %49, -16
  %arrayidx.9.i = getelementptr i32, ptr %call7.i.i.i.i, i32 9
  %50 = ptrtoint ptr %arrayidx.9.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx.9.i, align 4
  %mul.9.i = mul i32 %51, 24
  %52 = add i32 %mul.9.i, 16
  %mul5.9.i = and i32 %52, -16
  %arrayidx.10.i = getelementptr i32, ptr %call7.i.i.i.i, i32 10
  %53 = ptrtoint ptr %arrayidx.10.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx.10.i, align 8
  %mul.10.i = mul i32 %54, 24
  %55 = add i32 %mul.10.i, 16
  %mul5.10.i = and i32 %55, -16
  %arrayidx.11.i = getelementptr i32, ptr %call7.i.i.i.i, i32 11
  %56 = ptrtoint ptr %arrayidx.11.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx.11.i, align 4
  %mul.11.i = mul i32 %57, 24
  %58 = add i32 %mul.11.i, 16
  %mul5.11.i = and i32 %58, -16
  call void @kfree(ptr noundef nonnull %call7.i.i.i.i) #16
  %59 = lshr i32 %13, 2
  %60 = lshr i32 %16, 1
  %num_tqps = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 5, i32 0, i32 8
  %61 = ptrtoint ptr %num_tqps to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %num_tqps, align 2
  %conv = zext i16 %62 to i32
  %mul15 = mul nuw nsw i32 %conv, 7
  %num_msi_used = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 40
  %63 = ptrtoint ptr %num_msi_used to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %num_msi_used, align 4
  %conv17 = zext i16 %64 to i32
  %sub = shl nuw nsw i32 %conv17, 1
  %mul18 = add nuw i32 %60, %59
  %add = add nuw i32 %mul18, %mul15
  %add13 = add nuw i32 %add, %sub
  %add21 = shl i32 %add13, 4
  %65 = add i32 %mul.i, 112
  %mul22 = and i32 %65, -16
  %add6.1.i = add i32 %mul22, %mul5.1.i
  %add6.2.i = add i32 %add6.1.i, %mul5.2.i
  %add6.3.i = add i32 %add6.2.i, %mul5.3.i
  %add6.4.i = add i32 %add6.3.i, %mul5.4.i
  %add6.5.i = add i32 %add6.4.i, %mul5.5.i
  %add6.6.i = add i32 %add6.5.i, %mul5.6.i
  %add6.7.i = add i32 %add6.6.i, %mul5.7.i
  %add6.8.i = add i32 %add6.7.i, %mul5.8.i
  %add6.9.i = add i32 %add6.8.i, %mul5.9.i
  %add6.10.i = add i32 %add6.9.i, %mul5.10.i
  %add6.11.i = add i32 %add6.10.i, %mul5.11.i
  %add23 = add i32 %add6.11.i, %add21
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %do.end7, %do.end
  %retval.0 = phi i32 [ %retval.0.i.ph, %do.end ], [ %retval.0.i5464, %do.end7 ], [ %add23, %if.end10 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_get_rss_key_size(ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_rss(ptr nocapture noundef readonly %handle, ptr noundef %indir, ptr noundef %key, ptr noundef %hfunc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 1
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %8 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %back, align 4
  %rss_cfg2 = getelementptr inbounds %struct.hclge_dev, ptr %9, i32 0, i32 87
  tail call void @hclge_comm_get_rss_hash_info(ptr noundef %rss_cfg2, ptr noundef %key, ptr noundef %hfunc) #16
  %rss_ind_tbl_size = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 5, i32 3
  %10 = ptrtoint ptr %rss_ind_tbl_size to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %rss_ind_tbl_size, align 4
  tail call void @hclge_comm_get_rss_indir_tbl(ptr noundef %rss_cfg2, ptr noundef %indir, i16 noundef zeroext %11) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_rss(ptr nocapture noundef readonly %handle, ptr nocapture noundef readonly %indir, ptr noundef %key, i8 noundef zeroext %hfunc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 1
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %8 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %back, align 4
  %rss_cfg2 = getelementptr inbounds %struct.hclge_dev, ptr %9, i32 0, i32 87
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %9, i32 0, i32 2
  %call4 = tail call i32 @hclge_comm_set_rss_hash_key(ptr noundef %rss_cfg2, ptr noundef %hw, ptr noundef %key, i8 noundef zeroext %hfunc) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %for.cond.preheader, label %do.end

for.cond.preheader:                               ; preds = %hclge_get_vport.exit
  %rss_ind_tbl_size = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 5, i32 3
  %10 = ptrtoint ptr %rss_ind_tbl_size to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %rss_ind_tbl_size, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %cmp32.not = icmp eq i16 %11, 0
  br i1 %cmp32.not, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %rss_indirection_tbl = getelementptr inbounds %struct.hclge_dev, ptr %9, i32 0, i32 87, i32 1
  br label %for.body

do.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %9, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  %conv = zext i8 %hfunc to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.632, i32 noundef %conv) #20
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.033 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr i32, ptr %indir, i32 %i.033
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx, align 4
  %conv8 = trunc i32 %15 to i16
  %16 = ptrtoint ptr %rss_indirection_tbl to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rss_indirection_tbl, align 4
  %arrayidx9 = getelementptr i16, ptr %17, i32 %i.033
  %18 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %conv8, ptr %arrayidx9, align 2
  %inc = add nuw nsw i32 %i.033, 1
  %19 = ptrtoint ptr %rss_ind_tbl_size to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %rss_ind_tbl_size, align 4
  %conv6 = zext i16 %20 to i32
  %cmp = icmp ult i32 %inc, %conv6
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %rss_indirection_tbl12 = getelementptr inbounds %struct.hclge_dev, ptr %9, i32 0, i32 87, i32 1
  %21 = ptrtoint ptr %rss_indirection_tbl12 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %rss_indirection_tbl12, align 4
  %call13 = tail call i32 @hclge_comm_set_rss_indir_table(ptr noundef %3, ptr noundef %hw, ptr noundef %22) #16
  br label %cleanup

cleanup:                                          ; preds = %for.end, %do.end
  %retval.0 = phi i32 [ %call4, %do.end ], [ %call13, %for.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_rss_tuple(ptr noundef %handle, ptr noundef %nfc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ae_dev, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %rss_cfg = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 87
  %call2 = tail call i32 @hclge_comm_set_rss_tuple(ptr noundef %7, ptr noundef %hw, ptr noundef %rss_cfg, ptr noundef %nfc) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.634, i32 noundef %call2) #20
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 13
  %rss_tuple_sets = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 87, i32 3
  tail call void @hclge_comm_get_rss_type(ptr noundef %nic, ptr noundef %rss_tuple_sets) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_rss_tuple(ptr nocapture noundef readonly %handle, ptr nocapture noundef %nfc) #0 align 64 {
entry:
  %tuple_sets = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tuple_sets) #16
  %4 = ptrtoint ptr %tuple_sets to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 -1, ptr %tuple_sets, align 1, !annotation !1463
  %data = getelementptr inbounds %struct.ethtool_rxnfc, ptr %nfc, i32 0, i32 2
  %5 = ptrtoint ptr %data to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 0, ptr %data, align 8
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %6 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %back, align 4
  %rss_cfg = getelementptr inbounds %struct.hclge_dev, ptr %7, i32 0, i32 87
  %flow_type = getelementptr inbounds %struct.ethtool_rxnfc, ptr %nfc, i32 0, i32 1
  %8 = ptrtoint ptr %flow_type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flow_type, align 4
  %call1 = call i32 @hclge_comm_get_rss_tuple(ptr noundef %rss_cfg, i32 noundef %9, ptr noundef nonnull %tuple_sets) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %lor.lhs.false, label %hclge_get_vport.exit.cleanup_crit_edge

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %hclge_get_vport.exit
  %10 = ptrtoint ptr %tuple_sets to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %tuple_sets, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool2.not = icmp eq i8 %11, 0
  br i1 %tobool2.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = call i64 @hclge_comm_convert_rss_tuple(i8 noundef zeroext %11) #16
  %12 = ptrtoint ptr %data to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %call3, ptr %data, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %lor.lhs.false.cleanup_crit_edge, %hclge_get_vport.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tuple_sets) #16
  ret i32 %call1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @hclge_get_tc_size(ptr nocapture noundef readonly %handle) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %pf_rss_size_max = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 21
  %6 = ptrtoint ptr %pf_rss_size_max to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %pf_rss_size_max, align 2
  %conv = zext i16 %7 to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_vector(ptr nocapture noundef readonly %handle, i16 noundef zeroext %vector_num, ptr nocapture noundef %vector_info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %num_nic_msi = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 43
  %6 = ptrtoint ptr %num_nic_msi to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %num_nic_msi, align 8
  %sub = add i16 %7, -1
  %8 = tail call i16 @llvm.umin.i16(i16 %sub, i16 %vector_num)
  %num_msi_left = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 39
  %9 = ptrtoint ptr %num_msi_left to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %num_msi_left, align 2
  %11 = tail call i16 @llvm.umin.i16(i16 %10, i16 %8)
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %cmp2263.not = icmp eq i16 %11, 0
  br i1 %cmp2263.not, label %hclge_get_vport.exit.for.end_crit_edge, label %while.cond.preheader.lr.ph

hclge_get_vport.exit.for.end_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

while.cond.preheader.lr.ph:                       ; preds = %hclge_get_vport.exit
  %vector_status = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 41
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %vport.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 52
  %vector_irq.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 42
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.inc.while.cond.preheader_crit_edge, %while.cond.preheader.lr.ph
  %vector.067 = phi ptr [ %vector_info, %while.cond.preheader.lr.ph ], [ %vector.1, %for.inc.while.cond.preheader_crit_edge ]
  %j.066 = phi i16 [ 0, %while.cond.preheader.lr.ph ], [ %inc33, %for.inc.while.cond.preheader_crit_edge ]
  %i.065 = phi i16 [ 0, %while.cond.preheader.lr.ph ], [ %inc69, %for.inc.while.cond.preheader_crit_edge ]
  %alloc.064 = phi i32 [ 0, %while.cond.preheader.lr.ph ], [ %alloc.1, %for.inc.while.cond.preheader_crit_edge ]
  %12 = ptrtoint ptr %num_nic_msi to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %num_nic_msi, align 8
  %14 = add i16 %i.065, 1
  %umax = call i16 @llvm.umax.i16(i16 %13, i16 %14)
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %while.cond.preheader
  %i.1 = phi i16 [ %inc, %while.body.while.cond_crit_edge ], [ %i.065, %while.cond.preheader ]
  %inc = add i16 %i.1, 1
  call void @__sanitizer_cov_trace_cmp2(i16 %inc, i16 %13)
  %cmp27 = icmp ult i16 %inc, %13
  br i1 %cmp27, label %while.body, label %while.cond.for.inc_crit_edge

while.cond.for.inc_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

while.body:                                       ; preds = %while.cond
  %conv24 = zext i16 %inc to i32
  %15 = ptrtoint ptr %vector_status to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vector_status, align 8
  %arrayidx = getelementptr i16, ptr %16, i32 %conv24
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %arrayidx, align 2
  %cmp30 = icmp eq i16 %18, -1
  br i1 %cmp30, label %if.then, label %while.body.while.cond_crit_edge

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond

if.then:                                          ; preds = %while.body
  %19 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %5, align 8
  %call.i = tail call i32 @pci_irq_vector(ptr noundef %20, i32 noundef %conv24) #16
  %vector.i = getelementptr inbounds %struct.hnae3_vector_info, ptr %vector.067, i32 0, i32 1
  %21 = ptrtoint ptr %vector.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %call.i, ptr %vector.i, align 4
  %sub.i = add nsw i32 %conv24, -1
  call void @__sanitizer_cov_trace_const_cmp2(i16 65, i16 %inc)
  %cmp.i59 = icmp ult i16 %inc, 65
  %22 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw.i, align 8
  br i1 %cmp.i59, label %if.then.i, label %if.else.i60

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i = getelementptr i8, ptr %23, i32 131072
  br label %hclge_get_vector_info.exit

if.else.i60:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10.i = getelementptr i8, ptr %23, i32 196608
  %sub.i.frozen = freeze i32 %sub.i
  %div.i = sdiv i32 %sub.i.frozen, 64
  %mul13.i = shl nuw nsw i32 %div.i, 12
  %add.ptr14.i = getelementptr i8, ptr %add.ptr10.i, i32 %mul13.i
  %24 = mul i32 %div.i, 64
  %rem.i.decomposed = sub i32 %sub.i.frozen, %24
  br label %hclge_get_vector_info.exit

hclge_get_vector_info.exit:                       ; preds = %if.else.i60, %if.then.i
  %rem.sink.i = phi i32 [ %rem.i.decomposed, %if.else.i60 ], [ %sub.i, %if.then.i ]
  %add.ptr14.sink.i = phi ptr [ %add.ptr14.i, %if.else.i60 ], [ %add.ptr.i, %if.then.i ]
  %mul17.i = shl nsw i32 %rem.sink.i, 2
  %add.ptr18.i = getelementptr i8, ptr %add.ptr14.sink.i, i32 %mul17.i
  %25 = ptrtoint ptr %vector.067 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %add.ptr18.i, ptr %vector.067, align 4
  %26 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vport.i, align 4
  %vport_id.i = getelementptr inbounds %struct.hclge_vport, ptr %27, i32 0, i32 11
  %28 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %vport_id.i, align 2
  %30 = ptrtoint ptr %vector_status to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vector_status, align 8
  %arrayidx20.i = getelementptr i16, ptr %31, i32 %conv24
  %32 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %29, ptr %arrayidx20.i, align 2
  %33 = ptrtoint ptr %vector.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %vector.i, align 4
  %35 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %vector_irq.i, align 4
  %arrayidx23.i = getelementptr i32, ptr %36, i32 %conv24
  %37 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %34, ptr %arrayidx23.i, align 4
  %incdec.ptr = getelementptr %struct.hnae3_vector_info, ptr %vector.067, i32 1
  %inc32 = add i32 %alloc.064, 1
  br label %for.inc

for.inc:                                          ; preds = %hclge_get_vector_info.exit, %while.cond.for.inc_crit_edge
  %inc69 = phi i16 [ %inc, %hclge_get_vector_info.exit ], [ %umax, %while.cond.for.inc_crit_edge ]
  %alloc.1 = phi i32 [ %inc32, %hclge_get_vector_info.exit ], [ %alloc.064, %while.cond.for.inc_crit_edge ]
  %vector.1 = phi ptr [ %incdec.ptr, %hclge_get_vector_info.exit ], [ %vector.067, %while.cond.for.inc_crit_edge ]
  %inc33 = add nuw i16 %j.066, 1
  %cmp22 = icmp ult i16 %inc33, %11
  br i1 %cmp22, label %for.inc.while.cond.preheader_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.while.cond.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond.preheader

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %hclge_get_vport.exit.for.end_crit_edge
  %alloc.0.lcssa = phi i32 [ 0, %hclge_get_vport.exit.for.end_crit_edge ], [ %alloc.1, %for.inc.for.end_crit_edge ]
  %38 = ptrtoint ptr %num_msi_left to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %num_msi_left, align 2
  %40 = trunc i32 %alloc.0.lcssa to i16
  %conv37 = sub i16 %39, %40
  store i16 %conv37, ptr %num_msi_left, align 2
  %num_msi_used = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 40
  %41 = ptrtoint ptr %num_msi_used to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %num_msi_used, align 4
  %conv39 = add i16 %42, %40
  store i16 %conv39, ptr %num_msi_used, align 4
  ret i32 %alloc.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_put_vector(ptr nocapture noundef readonly %handle, i32 noundef %vector) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %num_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 38
  %6 = ptrtoint ptr %num_msi.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %num_msi.i, align 8
  %conv.i = zext i16 %7 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %cmp8.not.i = icmp eq i16 %7, 0
  br i1 %cmp8.not.i, label %hclge_get_vport.exit.do.end_crit_edge, label %for.body.lr.ph.i

hclge_get_vport.exit.do.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.body.lr.ph.i:                                 ; preds = %hclge_get_vport.exit
  %vector_irq.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 42
  %8 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vector_irq.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.09.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr i32, ptr %9, i32 %i.09.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %vector)
  %cmp2.i = icmp eq i32 %11, %vector
  br i1 %cmp2.i, label %if.end, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.09.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.do.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.do.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %for.inc.i.do.end_crit_edge, %hclge_get_vport.exit.do.end_crit_edge
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.636, i32 noundef %vector) #20
  br label %cleanup

if.end:                                           ; preds = %for.body.i
  %vector_status.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 41
  %14 = ptrtoint ptr %vector_status.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vector_status.i, align 8
  %arrayidx.i9 = getelementptr i16, ptr %15, i32 %i.09.i
  %16 = ptrtoint ptr %arrayidx.i9 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %arrayidx.i9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %17)
  %cmp.i10 = icmp eq i16 %17, -1
  br i1 %cmp.i10, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i, ptr noundef nonnull @.str.273, i32 noundef %i.09.i) #20
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %arrayidx.i9 to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 -1, ptr %arrayidx.i9, align 2
  %num_msi_left.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 39
  %21 = ptrtoint ptr %num_msi_left.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %num_msi_left.i, align 2
  %add.i = add i16 %22, 1
  store i16 %add.i, ptr %num_msi_left.i, align 2
  %num_msi_used.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 40
  %23 = ptrtoint ptr %num_msi_used.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %num_msi_used.i, align 4
  %sub.i = add i16 %24, -1
  store i16 %sub.i, ptr %num_msi_used.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %do.end.i, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %do.end.i ], [ 0, %if.end.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_map_ring_to_vector(ptr nocapture noundef readonly %handle, i32 noundef %vector, ptr noundef %ring_chain) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %num_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 38
  %6 = ptrtoint ptr %num_msi.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %num_msi.i, align 8
  %conv.i = zext i16 %7 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %cmp8.not.i = icmp eq i16 %7, 0
  br i1 %cmp8.not.i, label %hclge_get_vport.exit.do.end_crit_edge, label %for.body.lr.ph.i

hclge_get_vport.exit.do.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.body.lr.ph.i:                                 ; preds = %hclge_get_vport.exit
  %vector_irq.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 42
  %8 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vector_irq.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.09.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr i32, ptr %9, i32 %i.09.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %vector)
  %cmp2.i = icmp eq i32 %11, %vector
  br i1 %cmp2.i, label %if.end, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.09.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.do.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.do.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %for.inc.i.do.end_crit_edge, %hclge_get_vport.exit.do.end_crit_edge
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.638, i32 noundef %vector) #20
  br label %cleanup

if.end:                                           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = tail call i32 @hclge_bind_ring_with_vector(ptr noundef %add.ptr9.i, i32 noundef %i.09.i, i1 noundef zeroext true, ptr noundef %ring_chain)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_unmap_ring_frm_vector(ptr nocapture noundef readonly %handle, i32 noundef %vector, ptr noundef %ring_chain) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %state = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state, align 4
  %8 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %if.end, label %hclge_get_vport.exit.cleanup_crit_edge

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %num_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 38
  %9 = ptrtoint ptr %num_msi.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %num_msi.i, align 8
  %conv.i = zext i16 %10 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %cmp8.not.i = icmp eq i16 %10, 0
  br i1 %cmp8.not.i, label %if.end.do.end_crit_edge, label %for.body.lr.ph.i

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

for.body.lr.ph.i:                                 ; preds = %if.end
  %vector_irq.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 42
  %11 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vector_irq.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.09.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr i32, ptr %12, i32 %i.09.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %vector)
  %cmp2.i = icmp eq i32 %14, %vector
  br i1 %cmp2.i, label %if.end4, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.09.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.do.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.do.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %for.inc.i.do.end_crit_edge, %if.end.do.end_crit_edge
  %pdev = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 1
  %15 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.640, i32 noundef -22) #20
  br label %cleanup

if.end4:                                          ; preds = %for.body.i
  %call5 = tail call i32 @hclge_bind_ring_with_vector(ptr noundef %add.ptr9.i, i32 noundef %i.09.i, i1 noundef zeroext false, ptr noundef %ring_chain)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end4.cleanup_crit_edge, label %do.end10

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end10:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %pdev11 = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 1
  %17 = ptrtoint ptr %pdev11 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pdev11, align 4
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.643, i32 noundef %i.09.i, i32 noundef %call5) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end10, %if.end4.cleanup_crit_edge, %do.end, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %hclge_get_vport.exit.cleanup_crit_edge ], [ %call5, %do.end10 ], [ 0, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @hclge_get_fw_version(ptr nocapture noundef readonly %handle) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %fw_version = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 15
  %6 = ptrtoint ptr %fw_version to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fw_version, align 8
  ret i32 %7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_get_mdix_mode(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %tp_mdix_ctrl, ptr nocapture noundef writeonly %tp_mdix) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %phydev1 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 17
  %6 = ptrtoint ptr %phydev1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev1, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %tp_mdix_ctrl to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 0, ptr %tp_mdix_ctrl, align 1
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %bus.i = getelementptr inbounds %struct.mdio_device, ptr %7, i32 0, i32 1
  %9 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bus.i, align 8
  %addr.i = getelementptr inbounds %struct.mdio_device, ptr %7, i32 0, i32 6
  %11 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %addr.i, align 8
  %call.i = tail call i32 @mdiobus_write(ptr noundef %10, i32 noundef %12, i32 noundef 22, i16 noundef zeroext 0) #16
  %13 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %bus.i, align 8
  %15 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %addr.i, align 8
  %call.i40 = tail call i32 @mdiobus_read(ptr noundef %14, i32 noundef %16, i32 noundef 16) #16
  %17 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bus.i, align 8
  %19 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %addr.i, align 8
  %call.i43 = tail call i32 @mdiobus_read(ptr noundef %18, i32 noundef %20, i32 noundef 17) #16
  %21 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bus.i, align 8
  %23 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %addr.i, align 8
  %call.i46 = tail call i32 @mdiobus_write(ptr noundef %22, i32 noundef %24, i32 noundef 22, i16 noundef zeroext 0) #16
  %25 = lshr i32 %call.i40, 2
  %switch.shiftamt = and i32 %25, 24
  %switch.downshift = lshr i32 50332161, %switch.shiftamt
  %switch.masked = trunc i32 %switch.downshift to i8
  %26 = ptrtoint ptr %tp_mdix_ctrl to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %switch.masked, ptr %tp_mdix_ctrl, align 1
  %27 = and i32 %call.i43, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool12.not = icmp eq i32 %27, 0
  br i1 %tobool12.not, label %if.end.cleanup_crit_edge, label %if.else

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %28 = and i32 %call.i43, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool14.not = icmp eq i32 %28, 0
  %. = select i1 %tobool14.not, i8 1, i8 2
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.end.cleanup_crit_edge, %if.then
  %.sink47 = phi i8 [ 0, %if.then ], [ 0, %if.end.cleanup_crit_edge ], [ %., %if.else ]
  %29 = ptrtoint ptr %tp_mdix to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %.sink47, ptr %tp_mdix, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_enable_vlan_filter(ptr noundef %handle, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %call1 = tail call i32 @hclge_enable_vport_vlan_filter(ptr noundef %add.ptr9.i, i1 noundef zeroext %enable)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_vf_vlan_filter(ptr nocapture noundef readonly %handle, i32 noundef %vfid, i16 noundef zeroext %vlan, i8 noundef zeroext %qos, i16 noundef zeroext %proto) #0 align 64 {
entry:
  %vlan_info = alloca %struct.hclge_vlan_info, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 1
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %8 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %vlan_info) #16
  %10 = getelementptr inbounds %struct.hclge_vlan_info, ptr %vlan_info, i32 0, i32 1
  %11 = getelementptr inbounds %struct.hclge_vlan_info, ptr %vlan_info, i32 0, i32 2
  %ae_dev2 = getelementptr inbounds %struct.hclge_dev, ptr %9, i32 0, i32 1
  %12 = ptrtoint ptr %ae_dev2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ae_dev2, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %15)
  %cmp = icmp ult i32 %15, 33
  br i1 %cmp, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %call3 = tail call fastcc ptr @hclge_get_vf_vport(ptr noundef %9, i32 noundef %vfid)
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp2(i16 4095, i16 %vlan)
  %cmp6 = icmp ugt i16 %vlan, 4095
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %qos)
  %cmp9 = icmp ugt i8 %qos, 7
  %or.cond = or i1 %cmp6, %cmp9
  br i1 %or.cond, label %if.end5.cleanup_crit_edge, label %if.end12

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32512, i16 %proto)
  %cmp14.not = icmp eq i16 %proto, -32512
  br i1 %cmp14.not, label %if.end17, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end17:                                         ; preds = %if.end12
  %port_base_vlan_cfg = getelementptr inbounds %struct.hclge_vport, ptr %call3, i32 0, i32 7
  %16 = ptrtoint ptr %port_base_vlan_cfg to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %port_base_vlan_cfg, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %cmp.i69 = icmp eq i16 %17, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vlan)
  %tobool.not.i70 = icmp eq i16 %vlan, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %qos)
  %tobool1.not.i = icmp eq i8 %qos, 0
  %or.cond.i = and i1 %tobool.not.i70, %tobool1.not.i
  br i1 %cmp.i69, label %if.then.i, label %if.end3.i

if.then.i:                                        ; preds = %if.end17
  br i1 %or.cond.i, label %if.then.i.cleanup_crit_edge, label %if.then.i.if.end25_crit_edge

if.then.i.if.end25_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3.i:                                        ; preds = %if.end17
  br i1 %or.cond.i, label %if.end3.i.if.end25_crit_edge, label %if.end8.i

if.end3.i.if.end25_crit_edge:                     ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.end8.i:                                        ; preds = %if.end3.i
  %vlan_tag.i = getelementptr inbounds %struct.hclge_vport, ptr %call3, i32 0, i32 7, i32 1, i32 2
  %18 = ptrtoint ptr %vlan_tag.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vlan_tag.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %19, i16 %vlan)
  %cmp10.i = icmp eq i16 %19, %vlan
  br i1 %cmp10.i, label %land.lhs.true12.i, label %if.end8.i.if.end25_crit_edge

if.end8.i.if.end25_crit_edge:                     ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

land.lhs.true12.i:                                ; preds = %if.end8.i
  %qos15.i = getelementptr inbounds %struct.hclge_vport, ptr %call3, i32 0, i32 7, i32 1, i32 1
  %20 = ptrtoint ptr %qos15.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %qos15.i, align 2
  %22 = zext i8 %qos to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %21, i16 %22)
  %cmp18.i = icmp eq i16 %21, %22
  br i1 %cmp18.i, label %land.lhs.true12.i.cleanup_crit_edge, label %land.lhs.true12.i.if.end25_crit_edge

land.lhs.true12.i.if.end25_crit_edge:             ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

land.lhs.true12.i.cleanup_crit_edge:              ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end25:                                         ; preds = %land.lhs.true12.i.if.end25_crit_edge, %if.end8.i.if.end25_crit_edge, %if.end3.i.if.end25_crit_edge, %if.then.i.if.end25_crit_edge
  %retval.0.i.ph = phi i16 [ 1, %if.then.i.if.end25_crit_edge ], [ 0, %if.end3.i.if.end25_crit_edge ], [ 2, %land.lhs.true12.i.if.end25_crit_edge ], [ 2, %if.end8.i.if.end25_crit_edge ]
  %23 = ptrtoint ptr %11 to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %vlan, ptr %11, align 2
  %conv26 = zext i8 %qos to i16
  %24 = ptrtoint ptr %10 to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv26, ptr %10, align 2
  %25 = ptrtoint ptr %vlan_info to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 -32512, ptr %vlan_info, align 2
  %call28 = call i32 @hclge_update_port_base_vlan_cfg(ptr noundef nonnull %call3, i16 noundef zeroext %retval.0.i.ph, ptr noundef nonnull %vlan_info)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end32, label %do.end

do.end:                                           ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %9, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.645, i32 noundef %vfid, i32 noundef %call28) #20
  br label %cleanup

if.end32:                                         ; preds = %if.end25
  %dev_version33 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 6
  %28 = ptrtoint ptr %dev_version33 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %dev_version33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %29)
  %cmp34 = icmp ult i32 %29, 48
  br i1 %cmp34, label %land.lhs.true, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end32
  %state36 = getelementptr inbounds %struct.hclge_vport, ptr %call3, i32 0, i32 15
  %30 = ptrtoint ptr %state36 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %state36, align 4
  %and1.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool38.not = icmp eq i32 %and1.i, 0
  br i1 %tobool38.not, label %land.lhs.true.cleanup_crit_edge, label %if.then39

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then39:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %vport40 = getelementptr inbounds %struct.hclge_dev, ptr %9, i32 0, i32 52
  %32 = ptrtoint ptr %vport40 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %vport40, align 4
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %call3, i32 0, i32 11
  %34 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %vport_id, align 2
  %conv41 = trunc i16 %35 to i8
  %call42 = call i32 @hclge_push_vf_port_base_vlan_info(ptr noundef %33, i8 noundef zeroext %conv41, i16 noundef zeroext %retval.0.i.ph, ptr noundef nonnull %vlan_info) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then39, %land.lhs.true.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %do.end, %land.lhs.true12.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call28, %do.end ], [ -95, %hclge_get_vport.exit.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end5.cleanup_crit_edge ], [ -93, %if.end12.cleanup_crit_edge ], [ 0, %if.then39 ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.end32.cleanup_crit_edge ], [ 0, %land.lhs.true12.i.cleanup_crit_edge ], [ 0, %if.then.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %vlan_info) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_reset_event(ptr nocapture noundef readonly %pdev, ptr nocapture noundef readnone %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %last_reset_time = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 7
  %5 = ptrtoint ptr %last_reset_time to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %last_reset_time, align 8
  %add.neg = add i32 %4, -1000
  %sub = sub i32 %add.neg, %6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %reset_timer = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 47
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %7 = load volatile i32, ptr @jiffies, align 128
  %add1 = add i32 %7, 1000
  %call2 = tail call i32 @mod_timer(ptr noundef %reset_timer, i32 noundef %add1) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %default_reset_request = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 10
  %8 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %default_reset_request, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  %10 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %default_reset_request, align 4
  %12 = and i32 %11, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %default_reset_request) #16
  br label %if.end14.sink.split.sink.split.i

if.else.i:                                        ; preds = %if.then3
  %13 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %default_reset_request, align 4
  %15 = and i32 %14, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool2.not.i = icmp eq i32 %15, 0
  br i1 %tobool2.not.i, label %if.else4.i, label %if.else.i.if.end14.sink.split.sink.split.i_crit_edge

if.else.i.if.end14.sink.split.sink.split.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.sink.split.i

if.else4.i:                                       ; preds = %if.else.i
  %16 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %default_reset_request, align 4
  %18 = and i32 %17, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool6.not.i = icmp eq i32 %18, 0
  br i1 %tobool6.not.i, label %if.else8.i, label %if.else4.i.if.end14.sink.split.i_crit_edge

if.else4.i.if.end14.sink.split.i_crit_edge:       ; preds = %if.else4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i

if.else8.i:                                       ; preds = %if.else4.i
  %19 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %default_reset_request, align 4
  %21 = and i32 %20, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool10.not.i = icmp eq i32 %21, 0
  br i1 %tobool10.not.i, label %if.else8.i.hclge_get_reset_level.exit_crit_edge, label %if.else8.i.if.end14.sink.split.i_crit_edge

if.else8.i.if.end14.sink.split.i_crit_edge:       ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i

if.else8.i.hclge_get_reset_level.exit_crit_edge:  ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_reset_level.exit

if.end14.sink.split.sink.split.i:                 ; preds = %if.else.i.if.end14.sink.split.sink.split.i_crit_edge, %if.then.i
  %rst_level.0.ph.ph.i = phi i32 [ 7, %if.then.i ], [ 6, %if.else.i.if.end14.sink.split.sink.split.i_crit_edge ]
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %default_reset_request) #16
  br label %if.end14.sink.split.i

if.end14.sink.split.i:                            ; preds = %if.end14.sink.split.sink.split.i, %if.else8.i.if.end14.sink.split.i_crit_edge, %if.else4.i.if.end14.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 5, %if.else4.i.if.end14.sink.split.i_crit_edge ], [ 4, %if.else8.i.if.end14.sink.split.i_crit_edge ], [ 5, %if.end14.sink.split.sink.split.i ]
  %rst_level.0.ph.i = phi i32 [ 5, %if.else4.i.if.end14.sink.split.i_crit_edge ], [ 4, %if.else8.i.if.end14.sink.split.i_crit_edge ], [ %rst_level.0.ph.ph.i, %if.end14.sink.split.sink.split.i ]
  tail call void @_clear_bit(i32 noundef %.sink.i, ptr noundef %default_reset_request) #16
  br label %hclge_get_reset_level.exit

hclge_get_reset_level.exit:                       ; preds = %if.end14.sink.split.i, %if.else8.i.hclge_get_reset_level.exit_crit_edge
  %rst_level.0.i = phi i32 [ 8, %if.else8.i.hclge_get_reset_level.exit_crit_edge ], [ %rst_level.0.ph.i, %if.end14.sink.split.i ]
  %reset_type.i = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 8
  %22 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %reset_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %23)
  %cmp.not.i = icmp ne i32 %23, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %rst_level.0.i, i32 %23)
  %cmp16.i = icmp ult i32 %rst_level.0.i, %23
  %or.cond.i = and i1 %cmp.not.i, %cmp16.i
  %retval.0.i = select i1 %or.cond.i, i32 8, i32 %rst_level.0.i
  br label %do.end.sink.split

if.else:                                          ; preds = %if.end
  %add7 = add i32 %6, 2000
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %24 = load volatile i32, ptr @jiffies, align 128
  %sub8 = sub i32 %add7, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub8)
  %cmp9 = icmp slt i32 %sub8, 0
  br i1 %cmp9, label %if.else.do.end.sink.split_crit_edge, label %if.else.do.end_crit_edge

if.else.do.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

if.else.do.end.sink.split_crit_edge:              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.sink.split

do.end.sink.split:                                ; preds = %if.else.do.end.sink.split_crit_edge, %hclge_get_reset_level.exit
  %retval.0.i.sink = phi i32 [ %retval.0.i, %hclge_get_reset_level.exit ], [ 5, %if.else.do.end.sink.split_crit_edge ]
  %reset_level = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 9
  %25 = ptrtoint ptr %reset_level to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %retval.0.i.sink, ptr %reset_level, align 8
  br label %do.end

do.end:                                           ; preds = %do.end.sink.split, %if.else.do.end_crit_edge
  %26 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %3, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  %reset_level15 = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 9
  %28 = ptrtoint ptr %reset_level15 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %reset_level15, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.647, i32 noundef %29) #20
  %30 = ptrtoint ptr %reset_level15 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %reset_level15, align 8
  %reset_request = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 11
  tail call void @_set_bit(i32 noundef %31, ptr noundef %reset_request) #16
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 5
  %32 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %state.i, align 4
  %34 = and i32 %33, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.not.i37 = icmp eq i32 %34, 0
  br i1 %tobool.not.i37, label %land.lhs.true.i, label %do.end.hclge_reset_task_schedule.exit_crit_edge

do.end.hclge_reset_task_schedule.exit_crit_edge:  ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_task_schedule.exit

land.lhs.true.i:                                  ; preds = %do.end
  %35 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %state.i, align 4
  %37 = and i32 %36, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool3.not.i = icmp eq i32 %37, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.hclge_reset_task_schedule.exit_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.hclge_reset_task_schedule.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_task_schedule.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %call6.i = tail call i32 @_test_and_set_bit(i32 noundef 7, ptr noundef %state.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %if.then.i38, label %land.lhs.true4.i.hclge_reset_task_schedule.exit_crit_edge

land.lhs.true4.i.hclge_reset_task_schedule.exit_crit_edge: ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_task_schedule.exit

if.then.i38:                                      ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %38 = load volatile i32, ptr @jiffies, align 128
  %last_rst_scheduled.i = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 72
  %39 = ptrtoint ptr %last_rst_scheduled.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %last_rst_scheduled.i, align 8
  %40 = load ptr, ptr @hclge_wq, align 4
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 48
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %40, ptr noundef %service_task.i, i32 noundef 0) #16
  br label %hclge_reset_task_schedule.exit

hclge_reset_task_schedule.exit:                   ; preds = %if.then.i38, %land.lhs.true4.i.hclge_reset_task_schedule.exit_crit_edge, %land.lhs.true.i.hclge_reset_task_schedule.exit_crit_edge, %do.end.hclge_reset_task_schedule.exit_crit_edge
  %41 = ptrtoint ptr %reset_level15 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %reset_level15, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %42)
  %cmp18 = icmp ult i32 %42, 6
  br i1 %cmp18, label %if.then19, label %hclge_reset_task_schedule.exit.cleanup_crit_edge

hclge_reset_task_schedule.exit.cleanup_crit_edge: ; preds = %hclge_reset_task_schedule.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then19:                                        ; preds = %hclge_reset_task_schedule.exit
  call void @__sanitizer_cov_trace_pc() #18
  %inc = add nuw nsw i32 %42, 1
  %43 = ptrtoint ptr %reset_level15 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %inc, ptr %reset_level15, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then19, %hclge_reset_task_schedule.exit.cleanup_crit_edge, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_reset_level(ptr nocapture noundef readonly %ae_dev, ptr noundef %addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %addr, align 4
  %4 = and i32 %3, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %addr) #16
  br label %if.end14.sink.split.sink.split

if.else:                                          ; preds = %entry
  %5 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %addr, align 4
  %7 = and i32 %6, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool2.not = icmp eq i32 %7, 0
  br i1 %tobool2.not, label %if.else4, label %if.else.if.end14.sink.split.sink.split_crit_edge

if.else.if.end14.sink.split.sink.split_crit_edge: ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.sink.split

if.else4:                                         ; preds = %if.else
  %8 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %addr, align 4
  %10 = and i32 %9, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool6.not = icmp eq i32 %10, 0
  br i1 %tobool6.not, label %if.else8, label %if.else4.if.end14.sink.split_crit_edge

if.else4.if.end14.sink.split_crit_edge:           ; preds = %if.else4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split

if.else8:                                         ; preds = %if.else4
  %11 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %addr, align 4
  %13 = and i32 %12, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool10.not = icmp eq i32 %13, 0
  br i1 %tobool10.not, label %if.else8.if.end14_crit_edge, label %if.else8.if.end14.sink.split_crit_edge

if.else8.if.end14.sink.split_crit_edge:           ; preds = %if.else8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split

if.else8.if.end14_crit_edge:                      ; preds = %if.else8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.end14.sink.split.sink.split:                   ; preds = %if.else.if.end14.sink.split.sink.split_crit_edge, %if.then
  %rst_level.0.ph.ph = phi i32 [ 7, %if.then ], [ 6, %if.else.if.end14.sink.split.sink.split_crit_edge ]
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %addr) #16
  br label %if.end14.sink.split

if.end14.sink.split:                              ; preds = %if.end14.sink.split.sink.split, %if.else8.if.end14.sink.split_crit_edge, %if.else4.if.end14.sink.split_crit_edge
  %.sink = phi i32 [ 5, %if.else4.if.end14.sink.split_crit_edge ], [ 4, %if.else8.if.end14.sink.split_crit_edge ], [ 5, %if.end14.sink.split.sink.split ]
  %rst_level.0.ph = phi i32 [ 5, %if.else4.if.end14.sink.split_crit_edge ], [ 4, %if.else8.if.end14.sink.split_crit_edge ], [ %rst_level.0.ph.ph, %if.end14.sink.split.sink.split ]
  tail call void @_clear_bit(i32 noundef %.sink, ptr noundef %addr) #16
  br label %if.end14

if.end14:                                         ; preds = %if.end14.sink.split, %if.else8.if.end14_crit_edge
  %rst_level.0 = phi i32 [ 8, %if.else8.if.end14_crit_edge ], [ %rst_level.0.ph, %if.end14.sink.split ]
  %reset_type = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %reset_type to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %reset_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %15)
  %cmp.not = icmp ne i32 %15, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %rst_level.0, i32 %15)
  %cmp16 = icmp ult i32 %rst_level.0, %15
  %or.cond = and i1 %cmp.not, %cmp16
  %retval.0 = select i1 %or.cond, i32 8, i32 %rst_level.0
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_set_def_reset_request(ptr nocapture noundef readonly %ae_dev, i32 noundef %rst_type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %default_reset_request = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 10
  tail call void @_set_bit(i32 noundef %rst_type, ptr noundef %default_reset_request) #16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @hclge_get_channels(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %ch) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.i, label %entry.hclge_get_max_channels.exit_crit_edge, label %if.else.i.i

entry.hclge_get_max_channels.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_channels.exit

if.else.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i.i = icmp eq i32 %3, 1
  %..i.i = select i1 %cmp.i.i, i32 -792, i32 -560
  br label %hclge_get_max_channels.exit

hclge_get_max_channels.exit:                      ; preds = %if.else.i.i, %entry.hclge_get_max_channels.exit_crit_edge
  %.sink.i.i = phi i32 [ -560, %entry.hclge_get_max_channels.exit_crit_edge ], [ %..i.i, %if.else.i.i ]
  %add.ptr9.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 12
  %4 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back.i, align 4
  %pf_rss_size_max.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 21
  %6 = ptrtoint ptr %pf_rss_size_max.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %pf_rss_size_max.i, align 2
  %8 = ptrtoint ptr %add.ptr9.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %add.ptr9.i.i, align 8
  %10 = tail call i16 @llvm.umin.i16(i16 %7, i16 %9) #16
  %cond.i = zext i16 %10 to i32
  %max_combined = getelementptr inbounds %struct.ethtool_channels, ptr %ch, i32 0, i32 4
  %11 = ptrtoint ptr %max_combined to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %cond.i, ptr %max_combined, align 4
  %other_count = getelementptr inbounds %struct.ethtool_channels, ptr %ch, i32 0, i32 7
  %12 = ptrtoint ptr %other_count to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %other_count, align 4
  %max_other = getelementptr inbounds %struct.ethtool_channels, ptr %ch, i32 0, i32 3
  %13 = ptrtoint ptr %max_other to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1, ptr %max_other, align 4
  %rss_size = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 5, i32 0, i32 1
  %14 = ptrtoint ptr %rss_size to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %rss_size, align 4
  %conv = zext i16 %15 to i32
  %combined_count = getelementptr inbounds %struct.ethtool_channels, ptr %ch, i32 0, i32 8
  %16 = ptrtoint ptr %combined_count to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %conv, ptr %combined_count, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @hclge_get_tqps_and_rss_info(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %alloc_tqps, ptr nocapture noundef writeonly %max_rss_size) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %6 = ptrtoint ptr %add.ptr9.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %add.ptr9.i, align 8
  %8 = ptrtoint ptr %alloc_tqps to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %7, ptr %alloc_tqps, align 2
  %pf_rss_size_max = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 21
  %9 = ptrtoint ptr %pf_rss_size_max to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %pf_rss_size_max, align 2
  %11 = ptrtoint ptr %max_rss_size to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %max_rss_size, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_channels(ptr nocapture noundef %handle, i32 noundef %new_tqps_num, i1 noundef zeroext %rxfh_configured) #0 align 64 {
entry:
  %tc_offset.i = alloca [8 x i16], align 2
  %tc_size.i = alloca [8 x i16], align 2
  %tc_valid.i = alloca [8 x i16], align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.hnae3_handle, ptr %handle, i32 0, i32 1
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %8 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %back, align 4
  %rss_size = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 13, i32 5, i32 0, i32 1
  %10 = ptrtoint ptr %rss_size to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %rss_size, align 4
  %num_tqps = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 13, i32 5, i32 0, i32 8
  %12 = ptrtoint ptr %num_tqps to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %num_tqps, align 2
  %conv = trunc i32 %new_tqps_num to i16
  %req_rss_size = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 13, i32 5, i32 0, i32 2
  %14 = ptrtoint ptr %req_rss_size to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %conv, ptr %req_rss_size, align 2
  %call2 = tail call i32 @hclge_tm_vport_map_update(ptr noundef %9) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %9, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.649, i32 noundef %call2) #20
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %17 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %handle, align 8
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %if.end.hclge_get_vport.exit.i_crit_edge, label %if.else.i.i

if.end.hclge_get_vport.exit.i_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i

if.else.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.hnae3_client, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp.i.i = icmp eq i32 %20, 1
  %..i.i = select i1 %cmp.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i

hclge_get_vport.exit.i:                           ; preds = %if.else.i.i, %if.end.hclge_get_vport.exit.i_crit_edge
  %.sink.i.i = phi i32 [ -560, %if.end.hclge_get_vport.exit.i_crit_edge ], [ %..i.i, %if.else.i.i ]
  %add.ptr9.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tc_offset.i) #16
  %21 = call ptr @memset(ptr %tc_offset.i, i32 0, i32 16)
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 12
  %22 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %back.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tc_size.i) #16
  %24 = call ptr @memset(ptr %tc_size.i, i32 0, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tc_valid.i) #16
  %25 = getelementptr inbounds [8 x i16], ptr %tc_valid.i, i32 0, i32 1
  %26 = getelementptr inbounds [8 x i16], ptr %tc_valid.i, i32 0, i32 2
  %27 = getelementptr inbounds [8 x i16], ptr %tc_valid.i, i32 0, i32 3
  %28 = getelementptr inbounds [8 x i16], ptr %tc_valid.i, i32 0, i32 4
  %29 = getelementptr inbounds [8 x i16], ptr %tc_valid.i, i32 0, i32 5
  %30 = getelementptr inbounds [8 x i16], ptr %tc_valid.i, i32 0, i32 6
  %31 = getelementptr inbounds [8 x i16], ptr %tc_valid.i, i32 0, i32 7
  %rss_size.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 13, i32 5, i32 0, i32 1
  %32 = ptrtoint ptr %28 to i32
  call void @__asan_storeN_noabort(i32 %32, i32 8)
  store i64 -1, ptr %28, align 2
  %33 = ptrtoint ptr %rss_size.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %rss_size.i, align 4
  %conv36.i = zext i16 %34 to i32
  %sub.i93.i = add nsw i32 %conv36.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i93.i)
  %tobool.not.i.i.i.i = icmp eq i32 %sub.i93.i, 0
  %35 = tail call i32 @llvm.ctlz.i32(i32 %sub.i93.i, i1 true) #16, !range !1453
  %sub.i.i.i.i = sub nuw nsw i32 32, %35
  %sub.i.i.op.i.i = shl nuw i32 1, %sub.i.i.i.i
  %sub.i.i.op.i.i.op = and i32 %sub.i.i.op.i.i, 65535
  %conv53.i = select i1 %tobool.not.i.i.i.i, i32 1, i32 %sub.i.i.op.i.i.op
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv53.i)
  %tobool.not.i.i94.i = icmp eq i32 %conv53.i, 0
  %36 = tail call i32 @llvm.ctlz.i32(i32 %conv53.i, i1 true) #16, !range !1453
  %37 = trunc i32 %36 to i16
  %38 = xor i16 %37, 31
  %conv57.i = select i1 %tobool.not.i.i94.i, i16 -1, i16 %38
  %hw_tc_map.i = getelementptr inbounds %struct.hclge_dev, ptr %23, i32 0, i32 29
  %39 = ptrtoint ptr %tc_valid.i to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 0, ptr %tc_valid.i, align 2
  %40 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %hw_tc_map.i, align 2
  %42 = and i8 %41, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool.not.i83 = icmp eq i8 %42, 0
  br i1 %tobool.not.i83, label %hclge_get_vport.exit.i.for.inc.i_crit_edge, label %if.end.i

hclge_get_vport.exit.i.for.inc.i_crit_edge:       ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i:                                         ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %43 = ptrtoint ptr %tc_valid.i to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 1, ptr %tc_valid.i, align 2
  %44 = ptrtoint ptr %tc_size.i to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %conv57.i, ptr %tc_size.i, align 2
  %45 = ptrtoint ptr %tc_offset.i to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 0, ptr %tc_offset.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i, %hclge_get_vport.exit.i.for.inc.i_crit_edge
  %46 = ptrtoint ptr %25 to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 0, ptr %25, align 2
  %47 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %hw_tc_map.i, align 2
  %49 = and i8 %48, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool.not.1.i = icmp eq i8 %49, 0
  br i1 %tobool.not.1.i, label %for.inc.i.for.inc.1.i_crit_edge, label %if.end.1.i

for.inc.i.for.inc.1.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1.i

if.end.1.i:                                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  %50 = ptrtoint ptr %25 to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 1, ptr %25, align 2
  %arrayidx63.1.i = getelementptr inbounds [8 x i16], ptr %tc_size.i, i32 0, i32 1
  %51 = ptrtoint ptr %arrayidx63.1.i to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %conv57.i, ptr %arrayidx63.1.i, align 2
  %arrayidx68.1.i = getelementptr inbounds [8 x i16], ptr %tc_offset.i, i32 0, i32 1
  %52 = ptrtoint ptr %arrayidx68.1.i to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 %34, ptr %arrayidx68.1.i, align 2
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %if.end.1.i, %for.inc.i.for.inc.1.i_crit_edge
  %53 = ptrtoint ptr %26 to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 0, ptr %26, align 2
  %54 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %hw_tc_map.i, align 2
  %56 = and i8 %55, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool.not.2.i = icmp eq i8 %56, 0
  br i1 %tobool.not.2.i, label %for.inc.1.i.for.inc.2.i_crit_edge, label %if.end.2.i

for.inc.1.i.for.inc.2.i_crit_edge:                ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2.i

if.end.2.i:                                       ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #18
  %57 = ptrtoint ptr %26 to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 1, ptr %26, align 2
  %arrayidx63.2.i = getelementptr inbounds [8 x i16], ptr %tc_size.i, i32 0, i32 2
  %58 = ptrtoint ptr %arrayidx63.2.i to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %conv57.i, ptr %arrayidx63.2.i, align 2
  %conv67.2.i = shl i16 %34, 1
  %arrayidx68.2.i = getelementptr inbounds [8 x i16], ptr %tc_offset.i, i32 0, i32 2
  %59 = ptrtoint ptr %arrayidx68.2.i to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 %conv67.2.i, ptr %arrayidx68.2.i, align 2
  br label %for.inc.2.i

for.inc.2.i:                                      ; preds = %if.end.2.i, %for.inc.1.i.for.inc.2.i_crit_edge
  %60 = ptrtoint ptr %27 to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 0, ptr %27, align 2
  %61 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %hw_tc_map.i, align 2
  %63 = and i8 %62, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool.not.3.i = icmp eq i8 %63, 0
  br i1 %tobool.not.3.i, label %for.inc.2.i.for.inc.3.i_crit_edge, label %if.end.3.i

for.inc.2.i.for.inc.3.i_crit_edge:                ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3.i

if.end.3.i:                                       ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #18
  %64 = ptrtoint ptr %27 to i32
  call void @__asan_store2_noabort(i32 %64)
  store i16 1, ptr %27, align 2
  %arrayidx63.3.i = getelementptr inbounds [8 x i16], ptr %tc_size.i, i32 0, i32 3
  %65 = ptrtoint ptr %arrayidx63.3.i to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %conv57.i, ptr %arrayidx63.3.i, align 2
  %conv67.3.i = mul i16 %34, 3
  %arrayidx68.3.i = getelementptr inbounds [8 x i16], ptr %tc_offset.i, i32 0, i32 3
  %66 = ptrtoint ptr %arrayidx68.3.i to i32
  call void @__asan_store2_noabort(i32 %66)
  store i16 %conv67.3.i, ptr %arrayidx68.3.i, align 2
  br label %for.inc.3.i

for.inc.3.i:                                      ; preds = %if.end.3.i, %for.inc.2.i.for.inc.3.i_crit_edge
  %67 = ptrtoint ptr %28 to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 0, ptr %28, align 2
  %68 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %hw_tc_map.i, align 2
  %70 = and i8 %69, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool.not.4.i = icmp eq i8 %70, 0
  br i1 %tobool.not.4.i, label %for.inc.3.i.for.inc.4.i_crit_edge, label %if.end.4.i

for.inc.3.i.for.inc.4.i_crit_edge:                ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4.i

if.end.4.i:                                       ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #18
  %71 = ptrtoint ptr %28 to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 1, ptr %28, align 2
  %arrayidx63.4.i = getelementptr inbounds [8 x i16], ptr %tc_size.i, i32 0, i32 4
  %72 = ptrtoint ptr %arrayidx63.4.i to i32
  call void @__asan_store2_noabort(i32 %72)
  store i16 %conv57.i, ptr %arrayidx63.4.i, align 2
  %conv67.4.i = shl i16 %34, 2
  %arrayidx68.4.i = getelementptr inbounds [8 x i16], ptr %tc_offset.i, i32 0, i32 4
  %73 = ptrtoint ptr %arrayidx68.4.i to i32
  call void @__asan_store2_noabort(i32 %73)
  store i16 %conv67.4.i, ptr %arrayidx68.4.i, align 2
  br label %for.inc.4.i

for.inc.4.i:                                      ; preds = %if.end.4.i, %for.inc.3.i.for.inc.4.i_crit_edge
  %74 = ptrtoint ptr %29 to i32
  call void @__asan_store2_noabort(i32 %74)
  store i16 0, ptr %29, align 2
  %75 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %hw_tc_map.i, align 2
  %77 = and i8 %76, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool.not.5.i = icmp eq i8 %77, 0
  br i1 %tobool.not.5.i, label %for.inc.4.i.for.inc.5.i_crit_edge, label %if.end.5.i

for.inc.4.i.for.inc.5.i_crit_edge:                ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5.i

if.end.5.i:                                       ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #18
  %78 = ptrtoint ptr %29 to i32
  call void @__asan_store2_noabort(i32 %78)
  store i16 1, ptr %29, align 2
  %arrayidx63.5.i = getelementptr inbounds [8 x i16], ptr %tc_size.i, i32 0, i32 5
  %79 = ptrtoint ptr %arrayidx63.5.i to i32
  call void @__asan_store2_noabort(i32 %79)
  store i16 %conv57.i, ptr %arrayidx63.5.i, align 2
  %conv67.5.i = mul i16 %34, 5
  %arrayidx68.5.i = getelementptr inbounds [8 x i16], ptr %tc_offset.i, i32 0, i32 5
  %80 = ptrtoint ptr %arrayidx68.5.i to i32
  call void @__asan_store2_noabort(i32 %80)
  store i16 %conv67.5.i, ptr %arrayidx68.5.i, align 2
  %81 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %81)
  %.pr = load i8, ptr %hw_tc_map.i, align 2
  br label %for.inc.5.i

for.inc.5.i:                                      ; preds = %if.end.5.i, %for.inc.4.i.for.inc.5.i_crit_edge
  %82 = phi i8 [ %.pr, %if.end.5.i ], [ %76, %for.inc.4.i.for.inc.5.i_crit_edge ]
  %83 = ptrtoint ptr %30 to i32
  call void @__asan_store2_noabort(i32 %83)
  store i16 0, ptr %30, align 2
  %84 = and i8 %82, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %84)
  %tobool.not.6.i = icmp eq i8 %84, 0
  br i1 %tobool.not.6.i, label %for.inc.5.i.for.inc.6.i_crit_edge, label %if.end.6.i

for.inc.5.i.for.inc.6.i_crit_edge:                ; preds = %for.inc.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6.i

if.end.6.i:                                       ; preds = %for.inc.5.i
  call void @__sanitizer_cov_trace_pc() #18
  %85 = ptrtoint ptr %30 to i32
  call void @__asan_store2_noabort(i32 %85)
  store i16 1, ptr %30, align 2
  %arrayidx63.6.i = getelementptr inbounds [8 x i16], ptr %tc_size.i, i32 0, i32 6
  %86 = ptrtoint ptr %arrayidx63.6.i to i32
  call void @__asan_store2_noabort(i32 %86)
  store i16 %conv57.i, ptr %arrayidx63.6.i, align 2
  %conv67.6.i = mul i16 %34, 6
  %arrayidx68.6.i = getelementptr inbounds [8 x i16], ptr %tc_offset.i, i32 0, i32 6
  %87 = ptrtoint ptr %arrayidx68.6.i to i32
  call void @__asan_store2_noabort(i32 %87)
  store i16 %conv67.6.i, ptr %arrayidx68.6.i, align 2
  br label %for.inc.6.i

for.inc.6.i:                                      ; preds = %if.end.6.i, %for.inc.5.i.for.inc.6.i_crit_edge
  %88 = ptrtoint ptr %31 to i32
  call void @__asan_store2_noabort(i32 %88)
  store i16 0, ptr %31, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %82)
  %tobool.not.7.i = icmp sgt i8 %82, -1
  br i1 %tobool.not.7.i, label %for.inc.6.i.hclge_set_rss_tc_mode_cfg.exit_crit_edge, label %if.end.7.i

for.inc.6.i.hclge_set_rss_tc_mode_cfg.exit_crit_edge: ; preds = %for.inc.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_rss_tc_mode_cfg.exit

if.end.7.i:                                       ; preds = %for.inc.6.i
  call void @__sanitizer_cov_trace_pc() #18
  %89 = ptrtoint ptr %31 to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 1, ptr %31, align 2
  %arrayidx63.7.i = getelementptr inbounds [8 x i16], ptr %tc_size.i, i32 0, i32 7
  %90 = ptrtoint ptr %arrayidx63.7.i to i32
  call void @__asan_store2_noabort(i32 %90)
  store i16 %conv57.i, ptr %arrayidx63.7.i, align 2
  %conv67.7.i = mul i16 %34, 7
  %arrayidx68.7.i = getelementptr inbounds [8 x i16], ptr %tc_offset.i, i32 0, i32 7
  %91 = ptrtoint ptr %arrayidx68.7.i to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 %conv67.7.i, ptr %arrayidx68.7.i, align 2
  br label %hclge_set_rss_tc_mode_cfg.exit

hclge_set_rss_tc_mode_cfg.exit:                   ; preds = %if.end.7.i, %for.inc.6.i.hclge_set_rss_tc_mode_cfg.exit_crit_edge
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %23, i32 0, i32 2
  %call72.i = call i32 @hclge_comm_set_rss_tc_mode(ptr noundef %hw.i, ptr noundef nonnull %tc_offset.i, ptr noundef nonnull %tc_valid.i, ptr noundef nonnull %tc_size.i) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tc_valid.i) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tc_size.i) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tc_offset.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72.i)
  %tobool5.not = icmp eq i32 %call72.i, 0
  br i1 %tobool5.not, label %if.end7, label %hclge_set_rss_tc_mode_cfg.exit.cleanup_crit_edge

hclge_set_rss_tc_mode_cfg.exit.cleanup_crit_edge: ; preds = %hclge_set_rss_tc_mode_cfg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %hclge_set_rss_tc_mode_cfg.exit
  br i1 %rxfh_configured, label %if.end7.do.end35_crit_edge, label %if.end10

if.end7.do.end35_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end35

if.end10:                                         ; preds = %if.end7
  %rss_ind_tbl_size = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 5, i32 3
  %92 = ptrtoint ptr %rss_ind_tbl_size to i32
  call void @__asan_load2_noabort(i32 %92)
  %93 = load i16, ptr %rss_ind_tbl_size, align 4
  %conv11 = zext i16 %93 to i32
  %94 = shl nuw nsw i32 %conv11, 2
  %call8.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %94, i32 noundef 3520) #19
  %tobool13.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool13.not, label %if.end10.cleanup_crit_edge, label %for.cond.preheader

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end10
  %95 = ptrtoint ptr %rss_ind_tbl_size to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %rss_ind_tbl_size, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %96)
  %cmp110.not = icmp eq i16 %96, 0
  br i1 %cmp110.not, label %for.cond.preheader.for.end_crit_edge, label %for.body.preheader

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader
  %97 = ptrtoint ptr %rss_size to i32
  call void @__asan_load2_noabort(i32 %97)
  %98 = load i16, ptr %rss_size, align 4
  %conv21 = zext i16 %98 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.0111 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %rem = urem i32 %i.0111, %conv21
  %arrayidx = getelementptr i32, ptr %call8.i.i, i32 %i.0111
  %99 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 %rem, ptr %arrayidx, align 4
  %inc = add nuw nsw i32 %i.0111, 1
  %100 = ptrtoint ptr %rss_ind_tbl_size to i32
  call void @__asan_load2_noabort(i32 %100)
  %101 = load i16, ptr %rss_ind_tbl_size, align 4
  %conv18 = zext i16 %101 to i32
  %cmp = icmp ult i32 %inc, %conv18
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %102 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %pdev, align 4
  %driver_data.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %103, i32 0, i32 44, i32 8
  %104 = ptrtoint ptr %driver_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %driver_data.i.i.i, align 4
  %106 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %handle, align 8
  %tobool.not.i.i85 = icmp eq ptr %107, null
  br i1 %tobool.not.i.i85, label %for.end.hclge_get_vport.exit.i95_crit_edge, label %if.else.i.i89

for.end.hclge_get_vport.exit.i95_crit_edge:       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i95

if.else.i.i89:                                    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i86 = getelementptr inbounds %struct.hnae3_client, ptr %107, i32 0, i32 2
  %108 = ptrtoint ptr %type.i.i86 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %type.i.i86, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %109)
  %cmp.i.i87 = icmp eq i32 %109, 1
  %..i.i88 = select i1 %cmp.i.i87, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i95

hclge_get_vport.exit.i95:                         ; preds = %if.else.i.i89, %for.end.hclge_get_vport.exit.i95_crit_edge
  %.sink.i.i90 = phi i32 [ -560, %for.end.hclge_get_vport.exit.i95_crit_edge ], [ %..i.i88, %if.else.i.i89 ]
  %add.ptr9.i.i91 = getelementptr i8, ptr %handle, i32 %.sink.i.i90
  %back.i92 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i91, i32 0, i32 12
  %110 = ptrtoint ptr %back.i92 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %back.i92, align 4
  %rss_cfg2.i = getelementptr inbounds %struct.hclge_dev, ptr %111, i32 0, i32 87
  %hw.i93 = getelementptr inbounds %struct.hclge_dev, ptr %111, i32 0, i32 2
  %call4.i = call i32 @hclge_comm_set_rss_hash_key(ptr noundef %rss_cfg2.i, ptr noundef %hw.i93, ptr noundef null, i8 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not.i94 = icmp eq i32 %call4.i, 0
  br i1 %tobool.not.i94, label %for.cond.preheader.i, label %hclge_set_rss.exit.thread

for.cond.preheader.i:                             ; preds = %hclge_get_vport.exit.i95
  %rss_ind_tbl_size.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %105, i32 0, i32 5, i32 3
  %112 = ptrtoint ptr %rss_ind_tbl_size.i to i32
  call void @__asan_load2_noabort(i32 %112)
  %113 = load i16, ptr %rss_ind_tbl_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %113)
  %cmp32.not.i = icmp eq i16 %113, 0
  br i1 %cmp32.not.i, label %for.cond.preheader.i.hclge_set_rss.exit_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.hclge_set_rss.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_rss.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %rss_indirection_tbl.i = getelementptr inbounds %struct.hclge_dev, ptr %111, i32 0, i32 87, i32 1
  br label %for.body.i

hclge_set_rss.exit.thread:                        ; preds = %hclge_get_vport.exit.i95
  call void @__sanitizer_cov_trace_pc() #18
  %114 = ptrtoint ptr %111 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %111, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %115, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.632, i32 noundef 0) #20
  br label %out

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.033.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr i32, ptr %call8.i.i, i32 %i.033.i
  %116 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %arrayidx.i, align 4
  %conv8.i = trunc i32 %117 to i16
  %118 = ptrtoint ptr %rss_indirection_tbl.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %rss_indirection_tbl.i, align 4
  %arrayidx9.i = getelementptr i16, ptr %119, i32 %i.033.i
  %120 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_store2_noabort(i32 %120)
  store i16 %conv8.i, ptr %arrayidx9.i, align 2
  %inc.i = add nuw nsw i32 %i.033.i, 1
  %121 = ptrtoint ptr %rss_ind_tbl_size.i to i32
  call void @__asan_load2_noabort(i32 %121)
  %122 = load i16, ptr %rss_ind_tbl_size.i, align 4
  %conv6.i = zext i16 %122 to i32
  %cmp.i96 = icmp ult i32 %inc.i, %conv6.i
  br i1 %cmp.i96, label %for.body.i.for.body.i_crit_edge, label %for.body.i.hclge_set_rss.exit_crit_edge

for.body.i.hclge_set_rss.exit_crit_edge:          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_rss.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

hclge_set_rss.exit:                               ; preds = %for.body.i.hclge_set_rss.exit_crit_edge, %for.cond.preheader.i.hclge_set_rss.exit_crit_edge
  %rss_indirection_tbl12.i = getelementptr inbounds %struct.hclge_dev, ptr %111, i32 0, i32 87, i32 1
  %123 = ptrtoint ptr %rss_indirection_tbl12.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %rss_indirection_tbl12.i, align 4
  %call13.i = call i32 @hclge_comm_set_rss_indir_table(ptr noundef %105, ptr noundef %hw.i93, ptr noundef %124) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool23.not = icmp eq i32 %call13.i, 0
  br i1 %tobool23.not, label %out.thread106, label %hclge_set_rss.exit.out_crit_edge

hclge_set_rss.exit.out_crit_edge:                 ; preds = %hclge_set_rss.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

out.thread106:                                    ; preds = %hclge_set_rss.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void @kfree(ptr noundef nonnull %call8.i.i) #16
  br label %do.end35

out:                                              ; preds = %hclge_set_rss.exit.out_crit_edge, %hclge_set_rss.exit.thread
  %retval.0.i101 = phi i32 [ %call4.i, %hclge_set_rss.exit.thread ], [ %call13.i, %hclge_set_rss.exit.out_crit_edge ]
  %125 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %9, align 8
  %dev29 = getelementptr inbounds %struct.pci_dev, ptr %126, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev29, ptr noundef nonnull @.str.652, i32 noundef %retval.0.i101) #20
  call void @kfree(ptr noundef nonnull %call8.i.i) #16
  br label %cleanup

do.end35:                                         ; preds = %out.thread106, %if.end7.do.end35_crit_edge
  %127 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %9, align 8
  %dev37 = getelementptr inbounds %struct.pci_dev, ptr %128, i32 0, i32 44
  %conv38 = zext i16 %11 to i32
  %129 = ptrtoint ptr %rss_size to i32
  call void @__asan_load2_noabort(i32 %129)
  %130 = load i16, ptr %rss_size, align 4
  %conv40 = zext i16 %130 to i32
  %conv41 = zext i16 %13 to i32
  %num_tc = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 13, i32 5, i32 0, i32 7, i32 3
  %131 = ptrtoint ptr %num_tc to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %num_tc, align 4
  %conv44 = zext i8 %132 to i32
  %mul = mul nuw nsw i32 %conv44, %conv40
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev37, ptr noundef nonnull @.str.655, i32 noundef %conv38, i32 noundef %conv40, i32 noundef %conv41, i32 noundef %mul) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end35, %out, %if.end10.cleanup_crit_edge, %hclge_set_rss_tc_mode_cfg.exit.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ %call2, %do.end ], [ %call72.i, %hclge_set_rss_tc_mode_cfg.exit.cleanup_crit_edge ], [ -12, %if.end10.cleanup_crit_edge ], [ 0, %do.end35 ], [ %retval.0.i101, %out ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_led_id(ptr nocapture noundef readonly %handle, i32 noundef %status) #0 align 64 {
entry:
  %desc.i7 = alloca %struct.hclge_desc, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %6 = zext i32 %status to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.771)
  switch i32 %status, label %hclge_get_vport.exit.cleanup_crit_edge [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
  ]

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %hclge_get_vport.exit
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %7 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %8 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 45056, i1 noundef zeroext false) #16
  %locate_led_config.i = getelementptr inbounds %struct.hclge_set_led_state_cmd, ptr %7, i32 0, i32 1
  %9 = ptrtoint ptr %locate_led_config.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %locate_led_config.i, align 1
  %11 = and i8 %10, -4
  %or14.i = or i8 %11, 1
  store i8 %or14.i, ptr %locate_led_config.i, align 1
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i6 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i6, label %sw.bb.hclge_set_led_status.exit_crit_edge, label %do.end9.i

sw.bb.hclge_set_led_status.exit_crit_edge:        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_led_status.exit

do.end9.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.657, i32 noundef %call.i.i) #20
  br label %hclge_set_led_status.exit

hclge_set_led_status.exit:                        ; preds = %do.end9.i, %sw.bb.hclge_set_led_status.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

sw.bb2:                                           ; preds = %hclge_get_vport.exit
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i7) #16
  %14 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i7, i32 0, i32 4
  %15 = call ptr @memset(ptr %desc.i7, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i7, i32 noundef 45056, i1 noundef zeroext false) #16
  %locate_led_config.i8 = getelementptr inbounds %struct.hclge_set_led_state_cmd, ptr %14, i32 0, i32 1
  %16 = ptrtoint ptr %locate_led_config.i8 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %locate_led_config.i8, align 1
  %18 = and i8 %17, -4
  store i8 %18, ptr %locate_led_config.i8, align 1
  %hw.i9 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i10 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i9, ptr noundef nonnull %desc.i7, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i10)
  %tobool.not.i11 = icmp eq i32 %call.i.i10, 0
  br i1 %tobool.not.i11, label %sw.bb2.hclge_set_led_status.exit14_crit_edge, label %do.end9.i13

sw.bb2.hclge_set_led_status.exit14_crit_edge:     ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_led_status.exit14

do.end9.i13:                                      ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %5, align 8
  %dev.i12 = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i12, ptr noundef nonnull @.str.657, i32 noundef %call.i.i10) #20
  br label %hclge_set_led_status.exit14

hclge_set_led_status.exit14:                      ; preds = %do.end9.i13, %sw.bb2.hclge_set_led_status.exit14_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i7) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_set_led_status.exit14, %hclge_set_led_status.exit, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i10, %hclge_set_led_status.exit14 ], [ %call.i.i, %hclge_set_led_status.exit ], [ -22, %hclge_get_vport.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_get_link_mode(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %supported, ptr nocapture noundef writeonly %advertising) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %arrayidx = getelementptr %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 20, i32 0
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %8 = ptrtoint ptr %supported to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %supported, align 4
  %arrayidx6 = getelementptr %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 21, i32 0
  %9 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx6, align 4
  %11 = ptrtoint ptr %advertising to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %advertising, align 4
  %arrayidx.1 = getelementptr %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 20, i32 1
  %12 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.1, align 4
  %arrayidx2.1 = getelementptr i32, ptr %supported, i32 1
  %14 = ptrtoint ptr %arrayidx2.1 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %arrayidx2.1, align 4
  %arrayidx6.1 = getelementptr %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 21, i32 1
  %15 = ptrtoint ptr %arrayidx6.1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx6.1, align 4
  %arrayidx7.1 = getelementptr i32, ptr %advertising, i32 1
  %17 = ptrtoint ptr %arrayidx7.1 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %arrayidx7.1, align 4
  %arrayidx.2 = getelementptr %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 20, i32 2
  %18 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.2, align 4
  %arrayidx2.2 = getelementptr i32, ptr %supported, i32 2
  %20 = ptrtoint ptr %arrayidx2.2 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx2.2, align 4
  %arrayidx6.2 = getelementptr %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 21, i32 2
  %21 = ptrtoint ptr %arrayidx6.2 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx6.2, align 4
  %arrayidx7.2 = getelementptr i32, ptr %advertising, i32 2
  %23 = ptrtoint ptr %arrayidx7.2 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx7.2, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_add_fd_entry(ptr nocapture noundef readonly %handle, ptr noundef readonly %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %caps, align 4
  %and1.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.659) #20
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %fd_en = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 76
  %12 = ptrtoint ptr %fd_en to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %fd_en, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool2.not = icmp eq i8 %13, 0
  br i1 %tobool2.not, label %do.end6, label %if.end9

do.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %5, align 8
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev8, ptr noundef nonnull @.str.662) #20
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %fs10 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3
  %location.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 6
  %16 = ptrtoint ptr %location.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %location.i, align 8
  %fd_cfg.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 66
  %rule_num.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 66, i32 2
  %18 = ptrtoint ptr %rule_num.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rule_num.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp.not.i = icmp ult i32 %17, %19
  br i1 %cmp.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  %sub.i = add i32 %19, -1
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.664, i32 noundef %17, i32 noundef %sub.i) #20
  br label %cleanup

if.end.i:                                         ; preds = %if.end9
  %tuple_active1.i.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 66, i32 4, i32 0, i32 5
  %22 = ptrtoint ptr %tuple_active1.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %tuple_active1.i.i, align 8
  %24 = ptrtoint ptr %fs10 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %fs10, align 8
  %and.i.i = and i32 %25, 1073741823
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %tobool.not.i.i = icmp sgt i32 %25, -1
  br i1 %tobool.not.i.i, label %if.end.i.if.end6.i_crit_edge, label %lor.lhs.false.i.i

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

lor.lhs.false.i.i:                                ; preds = %if.end.i
  %data.i.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 4
  %arrayidx.i.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 4, i32 1
  %26 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.i.i.i, align 4
  %28 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %data.i.i.i, align 4
  %or.i.i.i = or i32 %29, %27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i.i)
  %cmp.i.i.i = icmp eq i32 %or.i.i.i, 0
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i.if.end6.i_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.if.end6.i_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %data5.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 4
  %arrayidx6.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 4, i32 1
  %30 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx6.i.i, align 4
  %conv.i.i = trunc i32 %31 to i16
  %conv11.i.i = trunc i32 %27 to i16
  %32 = ptrtoint ptr %data5.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %data5.i.i, align 4
  %conv16.i.i = trunc i32 %33 to i16
  %and22.i.i = and i32 %23, 606076928
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i.i)
  %tobool23.not.i.i = icmp eq i32 %and22.i.i, 0
  br i1 %tobool23.not.i.i, label %do.end.i.i, label %if.end25.i.i

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %34 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %5, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.675) #20
  br label %cleanup

if.end25.i.i:                                     ; preds = %if.end.i.i
  %conv26.i.i = and i32 %33, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 9000, i32 %conv26.i.i)
  %cmp.i.i = icmp ugt i32 %conv26.i.i, 9000
  br i1 %cmp.i.i, label %do.end31.i.i, label %if.end35.i.i

do.end31.i.i:                                     ; preds = %if.end25.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %5, align 8
  %dev33.i.i = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev33.i.i, ptr noundef nonnull @.str.678, i32 noundef %conv26.i.i, i32 noundef 9000) #20
  br label %cleanup

if.end35.i.i:                                     ; preds = %if.end25.i.i
  %conv36.i.i = and i32 %29, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %conv36.i.i)
  %cmp37.not.i.i = icmp eq i32 %conv36.i.i, 65535
  br i1 %cmp37.not.i.i, label %if.end45.i.i, label %do.end42.i.i

do.end42.i.i:                                     ; preds = %if.end35.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %38 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %5, align 8
  %dev44.i.i = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev44.i.i, ptr noundef nonnull @.str.681) #20
  br label %cleanup

if.end45.i.i:                                     ; preds = %if.end35.i.i
  %40 = zext i32 %and.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %40, ptr @__sancov_gen_cov_switch_values.772)
  switch i32 %and.i.i, label %do.end51.i.i [
    i32 18, label %if.end45.i.i.sw.bb18.i_crit_edge
    i32 13, label %if.end45.i.i.if.end6.i_crit_edge
    i32 14, label %if.end45.i.i.if.end6.i_crit_edge181
    i32 1, label %if.end45.i.i.sw.bb4.i.i.i_crit_edge
    i32 2, label %if.end45.i.i.sw.bb4.i.i.i_crit_edge182
    i32 5, label %if.end45.i.i.sw.bb4.i.i.i_crit_edge183
    i32 6, label %if.end45.i.i.sw.bb4.i.i.i_crit_edge184
  ]

if.end45.i.i.sw.bb4.i.i.i_crit_edge184:           ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb4.i.i.i

if.end45.i.i.sw.bb4.i.i.i_crit_edge183:           ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb4.i.i.i

if.end45.i.i.sw.bb4.i.i.i_crit_edge182:           ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb4.i.i.i

if.end45.i.i.sw.bb4.i.i.i_crit_edge:              ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb4.i.i.i

if.end45.i.i.if.end6.i_crit_edge181:              ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.end45.i.i.if.end6.i_crit_edge:                 ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.end45.i.i.sw.bb18.i_crit_edge:                 ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb18.i

sw.bb4.i.i.i:                                     ; preds = %if.end45.i.i.sw.bb4.i.i.i_crit_edge, %if.end45.i.i.sw.bb4.i.i.i_crit_edge182, %if.end45.i.i.sw.bb4.i.i.i_crit_edge183, %if.end45.i.i.sw.bb4.i.i.i_crit_edge184
  br label %if.end6.i

do.end51.i.i:                                     ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %41 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %5, align 8
  %dev53.i.i = getelementptr inbounds %struct.pci_dev, ptr %42, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev53.i.i, ptr noundef nonnull @.str.684, i32 noundef -95) #20
  br label %cleanup

if.end6.i:                                        ; preds = %sw.bb4.i.i.i, %if.end45.i.i.if.end6.i_crit_edge, %if.end45.i.i.if.end6.i_crit_edge181, %lor.lhs.false.i.i.if.end6.i_crit_edge, %if.end.i.if.end6.i_crit_edge
  %info.sroa.15.0 = phi i16 [ -1, %if.end.i.if.end6.i_crit_edge ], [ -1, %lor.lhs.false.i.i.if.end6.i_crit_edge ], [ %conv16.i.i, %sw.bb4.i.i.i ], [ %conv16.i.i, %if.end45.i.i.if.end6.i_crit_edge ], [ %conv16.i.i, %if.end45.i.i.if.end6.i_crit_edge181 ]
  %info.sroa.11.0 = phi i16 [ -1, %if.end.i.if.end6.i_crit_edge ], [ -1, %lor.lhs.false.i.i.if.end6.i_crit_edge ], [ %conv11.i.i, %sw.bb4.i.i.i ], [ %conv11.i.i, %if.end45.i.i.if.end6.i_crit_edge ], [ %conv11.i.i, %if.end45.i.i.if.end6.i_crit_edge181 ]
  %info.sroa.7.0 = phi i16 [ -1, %if.end.i.if.end6.i_crit_edge ], [ -1, %lor.lhs.false.i.i.if.end6.i_crit_edge ], [ %conv.i.i, %sw.bb4.i.i.i ], [ %conv.i.i, %if.end45.i.i.if.end6.i_crit_edge ], [ %conv.i.i, %if.end45.i.i.if.end6.i_crit_edge181 ]
  %info.sroa.0.0 = phi i32 [ 0, %if.end.i.if.end6.i_crit_edge ], [ 0, %lor.lhs.false.i.i.if.end6.i_crit_edge ], [ 3, %sw.bb4.i.i.i ], [ 2, %if.end45.i.i.if.end6.i_crit_edge ], [ 2, %if.end45.i.i.if.end6.i_crit_edge181 ]
  %unused.0 = phi i32 [ 606076928, %if.end.i.if.end6.i_crit_edge ], [ 606076928, %lor.lhs.false.i.i.if.end6.i_crit_edge ], [ 69206016, %sw.bb4.i.i.i ], [ 538968064, %if.end45.i.i.if.end6.i_crit_edge ], [ 538968064, %if.end45.i.i.if.end6.i_crit_edge181 ]
  %43 = zext i32 %and.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %43, ptr @__sancov_gen_cov_switch_values.773)
  switch i32 %and.i.i, label %do.end33.i [
    i32 3, label %if.end6.i.sw.bb.i_crit_edge
    i32 1, label %if.end6.i.sw.bb.i_crit_edge185
    i32 2, label %if.end6.i.sw.bb.i_crit_edge186
    i32 13, label %sw.bb9.i
    i32 7, label %if.end6.i.sw.bb12.i_crit_edge
    i32 5, label %if.end6.i.sw.bb12.i_crit_edge187
    i32 6, label %if.end6.i.sw.bb12.i_crit_edge188
    i32 14, label %sw.bb15.i
    i32 18, label %if.end6.i.sw.bb18.i_crit_edge
  ]

if.end6.i.sw.bb18.i_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb18.i

if.end6.i.sw.bb12.i_crit_edge188:                 ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb12.i

if.end6.i.sw.bb12.i_crit_edge187:                 ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb12.i

if.end6.i.sw.bb12.i_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb12.i

if.end6.i.sw.bb.i_crit_edge186:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

if.end6.i.sw.bb.i_crit_edge185:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

if.end6.i.sw.bb.i_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

sw.bb.i:                                          ; preds = %if.end6.i.sw.bb.i_crit_edge, %if.end6.i.sw.bb.i_crit_edge185, %if.end6.i.sw.bb.i_crit_edge186
  %h_u.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %44 = ptrtoint ptr %h_u.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %h_u.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool2.not.i.i = icmp eq i32 %45, 0
  %spec.select.v = select i1 %tobool2.not.i.i, i32 16973824, i32 196608
  %spec.select = or i32 %spec.select.v, %unused.0
  %ip4dst.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %46 = ptrtoint ptr %ip4dst.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ip4dst.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool6.not.i.i = icmp eq i32 %47, 0
  %or8.i.i = or i32 %spec.select, 33554432
  %unused.2 = select i1 %tobool6.not.i.i, i32 %or8.i.i, i32 %spec.select
  %psrc.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %48 = ptrtoint ptr %psrc.i.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %psrc.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %49)
  %tobool10.not.i.i = icmp eq i16 %49, 0
  %or12.i.i = or i32 %unused.2, 134217728
  %unused.3 = select i1 %tobool10.not.i.i, i32 %or12.i.i, i32 %unused.2
  %pdst.i.i = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %h_u.i, i32 0, i32 3
  %50 = ptrtoint ptr %pdst.i.i to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %pdst.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %51)
  %tobool14.not.i.i = icmp eq i16 %51, 0
  %or16.i.i = or i32 %unused.3, 268435456
  %unused.4 = select i1 %tobool14.not.i.i, i32 %or16.i.i, i32 %unused.3
  %tos.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %52 = ptrtoint ptr %tos.i.i to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %tos.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool18.not.i.i = icmp eq i8 %53, 0
  br i1 %tobool18.not.i.i, label %sw.bb.i.if.end43.sink.split.i_crit_edge, label %sw.bb.i.if.end43.i_crit_edge

sw.bb.i.if.end43.i_crit_edge:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43.i

sw.bb.i.if.end43.sink.split.i_crit_edge:          ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43.sink.split.i

sw.bb9.i:                                         ; preds = %if.end6.i
  %l4_4_bytes.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %54 = ptrtoint ptr %l4_4_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %l4_4_bytes.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool18.not.i101.i = icmp eq i32 %55, 0
  br i1 %tobool18.not.i101.i, label %if.end20.i.i, label %sw.bb9.i.do.end40.i_crit_edge

sw.bb9.i.do.end40.i_crit_edge:                    ; preds = %sw.bb9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end40.i

if.end20.i.i:                                     ; preds = %sw.bb9.i
  %h_u10.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %proto.i.i = getelementptr inbounds %struct.ethtool_usrip4_spec, ptr %h_u10.i, i32 0, i32 5
  %56 = ptrtoint ptr %proto.i.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %proto.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %57)
  %tobool14.not.i97.i = icmp eq i8 %57, 0
  %tos.i92.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %58 = ptrtoint ptr %tos.i92.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %tos.i92.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool10.not.i93.i = icmp eq i8 %59, 0
  %ip4dst.i87.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %60 = ptrtoint ptr %ip4dst.i87.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %ip4dst.i87.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool6.not.i88.i = icmp eq i32 %61, 0
  %62 = ptrtoint ptr %h_u10.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %h_u10.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool2.not.i83.i = icmp eq i32 %63, 0
  %spec.select157.v = select i1 %tobool2.not.i83.i, i32 419627008, i32 402849792
  %spec.select157 = or i32 %spec.select157.v, %unused.0
  %or8.i90.i = or i32 %spec.select157, 33554432
  %unused.6 = select i1 %tobool6.not.i88.i, i32 %or8.i90.i, i32 %spec.select157
  %or12.i95.i = or i32 %unused.6, 4194304
  %unused.7 = select i1 %tobool10.not.i93.i, i32 %or12.i95.i, i32 %unused.6
  %or16.i99.i = or i32 %unused.7, 8388608
  %unused.8 = select i1 %tobool14.not.i97.i, i32 %or16.i99.i, i32 %unused.7
  %ip_ver.i.i = getelementptr inbounds %struct.ethtool_usrip4_spec, ptr %h_u10.i, i32 0, i32 4
  %64 = ptrtoint ptr %ip_ver.i.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %ip_ver.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %65)
  %cmp.not.i.i = icmp eq i8 %65, 1
  br i1 %cmp.not.i.i, label %if.end20.i.i.if.end43.i_crit_edge, label %if.end20.i.i.do.end40.i_crit_edge

if.end20.i.i.do.end40.i_crit_edge:                ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end40.i

if.end20.i.i.if.end43.i_crit_edge:                ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43.i

sw.bb12.i:                                        ; preds = %if.end6.i.sw.bb12.i_crit_edge, %if.end6.i.sw.bb12.i_crit_edge187, %if.end6.i.sw.bb12.i_crit_edge188
  %h_u13.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %66 = ptrtoint ptr %h_u13.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %h_u13.i, align 4
  %arrayidx2.i.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %68 = ptrtoint ptr %arrayidx2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx2.i.i.i, align 4
  %or.i.i108.i = or i32 %69, %67
  %arrayidx4.i.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %70 = ptrtoint ptr %arrayidx4.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %arrayidx4.i.i.i, align 4
  %or5.i.i.i = or i32 %or.i.i108.i, %71
  %arrayidx7.i.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %72 = ptrtoint ptr %arrayidx7.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx7.i.i.i, align 4
  %or8.i.i.i = or i32 %or5.i.i.i, %73
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or8.i.i.i)
  %cmp.i.i109.i = icmp eq i32 %or8.i.i.i, 0
  %spec.select158.v = select i1 %cmp.i.i109.i, i32 16973824, i32 196608
  %spec.select158 = or i32 %spec.select158.v, %unused.0
  %ip6dst.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1
  %74 = ptrtoint ptr %ip6dst.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %ip6dst.i.i, align 4
  %arrayidx2.i33.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 1
  %76 = ptrtoint ptr %arrayidx2.i33.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %arrayidx2.i33.i.i, align 4
  %or.i34.i.i = or i32 %77, %75
  %arrayidx4.i35.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 2
  %78 = ptrtoint ptr %arrayidx4.i35.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx4.i35.i.i, align 4
  %or5.i36.i.i = or i32 %or.i34.i.i, %79
  %arrayidx7.i37.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 3
  %80 = ptrtoint ptr %arrayidx7.i37.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %arrayidx7.i37.i.i, align 4
  %or8.i38.i.i = or i32 %or5.i36.i.i, %81
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or8.i38.i.i)
  %cmp.i39.i.i = icmp eq i32 %or8.i38.i.i, 0
  %or8.i111.i = or i32 %spec.select158, 33554432
  %unused.10 = select i1 %cmp.i39.i.i, i32 %or8.i111.i, i32 %spec.select158
  %psrc.i113.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 2
  %82 = ptrtoint ptr %psrc.i113.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %psrc.i113.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %83)
  %tobool10.not.i114.i = icmp eq i16 %83, 0
  %or12.i116.i = or i32 %unused.10, 134217728
  %unused.11 = select i1 %tobool10.not.i114.i, i32 %or12.i116.i, i32 %unused.10
  %pdst.i118.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 3
  %84 = ptrtoint ptr %pdst.i118.i to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %pdst.i118.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %85)
  %tobool14.not.i119.i = icmp eq i16 %85, 0
  %or16.i121.i = or i32 %unused.11, 268435456
  %unused.12 = select i1 %tobool14.not.i119.i, i32 %or16.i121.i, i32 %unused.11
  %tclass.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 4
  %86 = ptrtoint ptr %tclass.i.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %tclass.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %87)
  %tobool18.not.i123.i = icmp eq i8 %87, 0
  br i1 %tobool18.not.i123.i, label %sw.bb12.i.if.end43.sink.split.i_crit_edge, label %sw.bb12.i.if.end43.i_crit_edge

sw.bb12.i.if.end43.i_crit_edge:                   ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43.i

sw.bb12.i.if.end43.sink.split.i_crit_edge:        ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43.sink.split.i

sw.bb15.i:                                        ; preds = %if.end6.i
  %h_u16.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %88 = ptrtoint ptr %h_u16.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %h_u16.i, align 4
  %arrayidx2.i.i132.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %90 = ptrtoint ptr %arrayidx2.i.i132.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %arrayidx2.i.i132.i, align 4
  %or.i.i133.i = or i32 %91, %89
  %arrayidx4.i.i134.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %92 = ptrtoint ptr %arrayidx4.i.i134.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %arrayidx4.i.i134.i, align 4
  %or5.i.i135.i = or i32 %or.i.i133.i, %93
  %arrayidx7.i.i136.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %94 = ptrtoint ptr %arrayidx7.i.i136.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %arrayidx7.i.i136.i, align 4
  %or8.i.i137.i = or i32 %or5.i.i135.i, %95
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or8.i.i137.i)
  %cmp.i.i138.i = icmp eq i32 %or8.i.i137.i, 0
  %spec.select159.v = select i1 %cmp.i.i138.i, i32 419627008, i32 402849792
  %spec.select159 = or i32 %spec.select159.v, %unused.0
  %ip6dst.i142.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1
  %96 = ptrtoint ptr %ip6dst.i142.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %ip6dst.i142.i, align 4
  %arrayidx2.i31.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 1
  %98 = ptrtoint ptr %arrayidx2.i31.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx2.i31.i.i, align 4
  %or.i32.i.i = or i32 %99, %97
  %arrayidx4.i33.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 2
  %100 = ptrtoint ptr %arrayidx4.i33.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx4.i33.i.i, align 4
  %or5.i34.i.i = or i32 %or.i32.i.i, %101
  %arrayidx7.i35.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 3
  %102 = ptrtoint ptr %arrayidx7.i35.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %arrayidx7.i35.i.i, align 4
  %or8.i36.i.i = or i32 %or5.i34.i.i, %103
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or8.i36.i.i)
  %cmp.i37.i.i = icmp eq i32 %or8.i36.i.i, 0
  %or8.i144.i = or i32 %spec.select159, 33554432
  %unused.14 = select i1 %cmp.i37.i.i, i32 %or8.i144.i, i32 %spec.select159
  %l4_proto.i.i = getelementptr inbounds %struct.ethtool_usrip6_spec, ptr %h_u16.i, i32 0, i32 4
  %104 = ptrtoint ptr %l4_proto.i.i to i32
  call void @__asan_load1_noabort(i32 %104)
  %105 = load i8, ptr %l4_proto.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %105)
  %tobool10.not.i146.i = icmp eq i8 %105, 0
  %or12.i148.i = or i32 %unused.14, 8388608
  %unused.15 = select i1 %tobool10.not.i146.i, i32 %or12.i148.i, i32 %unused.14
  %tclass.i150.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 4
  %106 = ptrtoint ptr %tclass.i150.i to i32
  call void @__asan_load1_noabort(i32 %106)
  %107 = load i8, ptr %tclass.i150.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %107)
  %tobool14.not.i151.i = icmp eq i8 %107, 0
  %or16.i153.i = or i32 %unused.15, 4194304
  %unused.16 = select i1 %tobool14.not.i151.i, i32 %or16.i153.i, i32 %unused.15
  %l4_4_bytes.i155.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 2
  %108 = ptrtoint ptr %l4_4_bytes.i155.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %l4_4_bytes.i155.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %109)
  %tobool18.not.i156.i = icmp eq i32 %109, 0
  br i1 %tobool18.not.i156.i, label %sw.bb15.i.if.end43.i_crit_edge, label %sw.bb15.i.do.end40.i_crit_edge

sw.bb15.i.do.end40.i_crit_edge:                   ; preds = %sw.bb15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end40.i

sw.bb15.i.if.end43.i_crit_edge:                   ; preds = %sw.bb15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43.i

sw.bb18.i:                                        ; preds = %if.end6.i.sw.bb18.i_crit_edge, %if.end45.i.i.sw.bb18.i_crit_edge
  %unused.0180 = phi i32 [ %unused.0, %if.end6.i.sw.bb18.i_crit_edge ], [ 603979776, %if.end45.i.i.sw.bb18.i_crit_edge ]
  %info.sroa.0.0179 = phi i32 [ %info.sroa.0.0, %if.end6.i.sw.bb18.i_crit_edge ], [ 1, %if.end45.i.i.sw.bb18.i_crit_edge ]
  %info.sroa.7.0175 = phi i16 [ %info.sroa.7.0, %if.end6.i.sw.bb18.i_crit_edge ], [ %conv.i.i, %if.end45.i.i.sw.bb18.i_crit_edge ]
  %info.sroa.11.0171 = phi i16 [ %info.sroa.11.0, %if.end6.i.sw.bb18.i_crit_edge ], [ %conv11.i.i, %if.end45.i.i.sw.bb18.i_crit_edge ]
  %info.sroa.15.0168 = phi i16 [ %info.sroa.15.0, %if.end6.i.sw.bb18.i_crit_edge ], [ %conv16.i.i, %if.end45.i.i.sw.bb18.i_crit_edge ]
  %110 = ptrtoint ptr %fd_cfg.i to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %fd_cfg.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %111)
  %cmp20.not.i = icmp eq i8 %111, 0
  br i1 %cmp20.not.i, label %if.end28.i, label %do.end25.i

do.end25.i:                                       ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #18
  %112 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %5, align 8
  %dev27.i = getelementptr inbounds %struct.pci_dev, ptr %113, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev27.i, ptr noundef nonnull @.str.667) #20
  br label %cleanup

if.end28.i:                                       ; preds = %sw.bb18.i
  %h_u29.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %h_source.i.i = getelementptr inbounds %struct.ethhdr, ptr %h_u29.i, i32 0, i32 1
  %114 = ptrtoint ptr %h_source.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %h_source.i.i, align 4
  %add.ptr.i.i.i = getelementptr %struct.ethhdr, ptr %h_u29.i, i32 0, i32 1, i32 4
  %116 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load2_noabort(i32 %116)
  %117 = load i16, ptr %add.ptr.i.i.i, align 2
  %conv.i.i.i = zext i16 %117 to i32
  %or.i.i164.i = or i32 %115, %conv.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i164.i)
  %cmp.i.i165.i = icmp eq i32 %or.i.i164.i, 0
  %spec.select160.v = select i1 %cmp.i.i165.i, i32 465698816, i32 465567744
  %spec.select160 = or i32 %spec.select160.v, %unused.0180
  %118 = ptrtoint ptr %h_u29.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %h_u29.i, align 4
  %add.ptr.i21.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %120 = ptrtoint ptr %add.ptr.i21.i.i to i32
  call void @__asan_load2_noabort(i32 %120)
  %121 = load i16, ptr %add.ptr.i21.i.i, align 2
  %conv.i22.i.i = zext i16 %121 to i32
  %or.i23.i.i = or i32 %119, %conv.i22.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i23.i.i)
  %cmp.i24.i.i = icmp eq i32 %or.i23.i.i, 0
  %or8.i170.i = or i32 %spec.select160, 65536
  %unused.18 = select i1 %cmp.i24.i.i, i32 %or8.i170.i, i32 %spec.select160
  %h_proto.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %122 = ptrtoint ptr %h_proto.i.i to i32
  call void @__asan_loadN_noabort(i32 %122, i32 2)
  %123 = load i16, ptr %h_proto.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %123)
  %tobool10.not.i172.i = icmp eq i16 %123, 0
  br i1 %tobool10.not.i172.i, label %if.end28.i.if.end43.sink.split.i_crit_edge, label %if.end28.i.if.end43.i_crit_edge

if.end28.i.if.end43.i_crit_edge:                  ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43.i

if.end28.i.if.end43.sink.split.i_crit_edge:       ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43.sink.split.i

do.end33.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %124 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %5, align 8
  %dev35.i = getelementptr inbounds %struct.pci_dev, ptr %125, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev35.i, ptr noundef nonnull @.str.670, i32 noundef %and.i.i) #20
  br label %cleanup

do.end40.i:                                       ; preds = %sw.bb15.i.do.end40.i_crit_edge, %if.end20.i.i.do.end40.i_crit_edge, %sw.bb9.i.do.end40.i_crit_edge
  %126 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %5, align 8
  %dev42.i = getelementptr inbounds %struct.pci_dev, ptr %127, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev42.i, ptr noundef nonnull @.str.673, i32 noundef -95) #20
  br label %cleanup

if.end43.sink.split.i:                            ; preds = %if.end28.i.if.end43.sink.split.i_crit_edge, %sw.bb12.i.if.end43.sink.split.i_crit_edge, %sw.bb.i.if.end43.sink.split.i_crit_edge
  %info.sroa.0.0178 = phi i32 [ %info.sroa.0.0179, %if.end28.i.if.end43.sink.split.i_crit_edge ], [ %info.sroa.0.0, %sw.bb12.i.if.end43.sink.split.i_crit_edge ], [ %info.sroa.0.0, %sw.bb.i.if.end43.sink.split.i_crit_edge ]
  %info.sroa.7.0174 = phi i16 [ %info.sroa.7.0175, %if.end28.i.if.end43.sink.split.i_crit_edge ], [ %info.sroa.7.0, %sw.bb12.i.if.end43.sink.split.i_crit_edge ], [ %info.sroa.7.0, %sw.bb.i.if.end43.sink.split.i_crit_edge ]
  %info.sroa.11.0170 = phi i16 [ %info.sroa.11.0171, %if.end28.i.if.end43.sink.split.i_crit_edge ], [ %info.sroa.11.0, %sw.bb12.i.if.end43.sink.split.i_crit_edge ], [ %info.sroa.11.0, %sw.bb.i.if.end43.sink.split.i_crit_edge ]
  %info.sroa.15.0167 = phi i16 [ %info.sroa.15.0168, %if.end28.i.if.end43.sink.split.i_crit_edge ], [ %info.sroa.15.0, %sw.bb12.i.if.end43.sink.split.i_crit_edge ], [ %info.sroa.15.0, %sw.bb.i.if.end43.sink.split.i_crit_edge ]
  %unused.20 = phi i32 [ %unused.18, %if.end28.i.if.end43.sink.split.i_crit_edge ], [ %unused.12, %sw.bb12.i.if.end43.sink.split.i_crit_edge ], [ %unused.4, %sw.bb.i.if.end43.sink.split.i_crit_edge ]
  %.sink195.i = phi i32 [ 1048576, %if.end28.i.if.end43.sink.split.i_crit_edge ], [ 4194304, %sw.bb12.i.if.end43.sink.split.i_crit_edge ], [ 4194304, %sw.bb.i.if.end43.sink.split.i_crit_edge ]
  %or20.i.i = or i32 %.sink195.i, %unused.20
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.end43.sink.split.i, %if.end28.i.if.end43.i_crit_edge, %sw.bb15.i.if.end43.i_crit_edge, %sw.bb12.i.if.end43.i_crit_edge, %if.end20.i.i.if.end43.i_crit_edge, %sw.bb.i.if.end43.i_crit_edge
  %info.sroa.0.0177 = phi i32 [ %info.sroa.0.0178, %if.end43.sink.split.i ], [ %info.sroa.0.0179, %if.end28.i.if.end43.i_crit_edge ], [ %info.sroa.0.0, %sw.bb15.i.if.end43.i_crit_edge ], [ %info.sroa.0.0, %sw.bb12.i.if.end43.i_crit_edge ], [ %info.sroa.0.0, %if.end20.i.i.if.end43.i_crit_edge ], [ %info.sroa.0.0, %sw.bb.i.if.end43.i_crit_edge ]
  %info.sroa.7.0173 = phi i16 [ %info.sroa.7.0174, %if.end43.sink.split.i ], [ %info.sroa.7.0175, %if.end28.i.if.end43.i_crit_edge ], [ %info.sroa.7.0, %sw.bb15.i.if.end43.i_crit_edge ], [ %info.sroa.7.0, %sw.bb12.i.if.end43.i_crit_edge ], [ %info.sroa.7.0, %if.end20.i.i.if.end43.i_crit_edge ], [ %info.sroa.7.0, %sw.bb.i.if.end43.i_crit_edge ]
  %info.sroa.11.0169 = phi i16 [ %info.sroa.11.0170, %if.end43.sink.split.i ], [ %info.sroa.11.0171, %if.end28.i.if.end43.i_crit_edge ], [ %info.sroa.11.0, %sw.bb15.i.if.end43.i_crit_edge ], [ %info.sroa.11.0, %sw.bb12.i.if.end43.i_crit_edge ], [ %info.sroa.11.0, %if.end20.i.i.if.end43.i_crit_edge ], [ %info.sroa.11.0, %sw.bb.i.if.end43.i_crit_edge ]
  %info.sroa.15.0166 = phi i16 [ %info.sroa.15.0167, %if.end43.sink.split.i ], [ %info.sroa.15.0168, %if.end28.i.if.end43.i_crit_edge ], [ %info.sroa.15.0, %sw.bb15.i.if.end43.i_crit_edge ], [ %info.sroa.15.0, %sw.bb12.i.if.end43.i_crit_edge ], [ %info.sroa.15.0, %if.end20.i.i.if.end43.i_crit_edge ], [ %info.sroa.15.0, %sw.bb.i.if.end43.i_crit_edge ]
  %unused.21 = phi i32 [ %or20.i.i, %if.end43.sink.split.i ], [ %unused.18, %if.end28.i.if.end43.i_crit_edge ], [ %unused.16, %sw.bb15.i.if.end43.i_crit_edge ], [ %unused.12, %sw.bb12.i.if.end43.i_crit_edge ], [ %unused.8, %if.end20.i.i.if.end43.i_crit_edge ], [ %unused.4, %sw.bb.i.if.end43.i_crit_edge ]
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end43.i
  %vlan_etype.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 2
  %128 = ptrtoint ptr %vlan_etype.i.i to i32
  call void @__asan_load2_noabort(i32 %128)
  %129 = load i16, ptr %vlan_etype.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %129)
  %tobool1.not.i178.i = icmp eq i16 %129, 0
  br i1 %tobool1.not.i178.i, label %if.end.i181.i, label %do.end.i180.i

do.end.i180.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %130 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %5, align 8
  %dev.i179.i = getelementptr inbounds %struct.pci_dev, ptr %131, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i179.i, ptr noundef nonnull @.str.686) #20
  br label %cleanup

if.end.i181.i:                                    ; preds = %if.then.i.i
  %vlan_tci.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 3
  %132 = ptrtoint ptr %vlan_tci.i.i to i32
  call void @__asan_load2_noabort(i32 %132)
  %133 = load i16, ptr %vlan_tci.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %133)
  %tobool4.not.i.i = icmp eq i16 %133, 0
  br i1 %tobool4.not.i.i, label %if.end6.i.i.thread, label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.end.i181.i
  %vlan_tci7.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 3
  %134 = ptrtoint ptr %vlan_tci7.i.i to i32
  call void @__asan_load2_noabort(i32 %134)
  %135 = load i16, ptr %vlan_tci7.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %135)
  %tobool8.not.i.i = icmp ne i16 %135, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 4095, i16 %133)
  %cmp.i183.i = icmp ugt i16 %133, 4095
  %or.cond = select i1 %tobool8.not.i.i, i1 %cmp.i183.i, i1 false
  br i1 %or.cond, label %do.end15.i.i, label %if.end6.i.i.if.end23.i.i_crit_edge

if.end6.i.i.if.end23.i.i_crit_edge:               ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

if.end6.i.i.thread:                               ; preds = %if.end.i181.i
  call void @__sanitizer_cov_trace_pc() #18
  %or.i182.i = or i32 %unused.21, 262144
  br label %if.end23.i.i

do.end15.i.i:                                     ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv11.i184.i = zext i16 %133 to i32
  %136 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %5, align 8
  %dev17.i.i = getelementptr inbounds %struct.pci_dev, ptr %137, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev17.i.i, ptr noundef nonnull @.str.689, i32 noundef %conv11.i184.i, i32 noundef 4095) #20
  br label %cleanup

if.else.i.i:                                      ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #18
  %or22.i.i = or i32 %unused.21, 262144
  br label %if.end23.i.i

if.end23.i.i:                                     ; preds = %if.else.i.i, %if.end6.i.i.thread, %if.end6.i.i.if.end23.i.i_crit_edge
  %unused.23 = phi i32 [ %or22.i.i, %if.else.i.i ], [ %unused.21, %if.end6.i.i.if.end23.i.i_crit_edge ], [ %or.i182.i, %if.end6.i.i.thread ]
  %and25.i.i = and i32 %25, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25.i.i)
  %tobool26.not.i.i = icmp eq i32 %and25.i.i, 0
  br i1 %tobool26.not.i.i, label %if.end23.i.i.if.end14_crit_edge, label %if.then27.i.i

if.end23.i.i.if.end14_crit_edge:                  ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then27.i.i:                                    ; preds = %if.end23.i.i
  %138 = ptrtoint ptr %fd_cfg.i to i32
  call void @__asan_load1_noabort(i32 %138)
  %139 = load i8, ptr %fd_cfg.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %139)
  %cmp29.not.i.i = icmp eq i8 %139, 0
  br i1 %cmp29.not.i.i, label %if.end36.i.i, label %do.end33.i.i

do.end33.i.i:                                     ; preds = %if.then27.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %140 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %5, align 8
  %dev35.i.i = getelementptr inbounds %struct.pci_dev, ptr %141, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev35.i.i, ptr noundef nonnull @.str.692) #20
  br label %cleanup

if.end36.i.i:                                     ; preds = %if.then27.i.i
  %h_dest.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 1
  %142 = ptrtoint ptr %h_dest.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %h_dest.i.i, align 4
  %add.ptr.i.i185.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 1, i32 4
  %144 = ptrtoint ptr %add.ptr.i.i185.i to i32
  call void @__asan_load2_noabort(i32 %144)
  %145 = load i16, ptr %add.ptr.i.i185.i, align 2
  %conv.i.i186.i = zext i16 %145 to i32
  %or.i.i187.i = or i32 %143, %conv.i.i186.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i187.i)
  %cmp.i.i188.i = icmp eq i32 %or.i.i187.i, 0
  br i1 %cmp.i.i188.i, label %if.then38.i.i, label %if.else40.i.i

if.then38.i.i:                                    ; preds = %if.end36.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %or39.i.i = or i32 %unused.23, 65536
  br label %if.end14

if.else40.i.i:                                    ; preds = %if.end36.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %and41.i.i = and i32 %unused.23, -65537
  br label %if.end14

if.end14:                                         ; preds = %if.else40.i.i, %if.then38.i.i, %if.end23.i.i.if.end14_crit_edge
  %unused.24 = phi i32 [ %unused.23, %if.end23.i.i.if.end14_crit_edge ], [ %or39.i.i, %if.then38.i.i ], [ %and41.i.i, %if.else40.i.i ]
  %ring_cookie = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 5
  %146 = ptrtoint ptr %ring_cookie to i32
  call void @__asan_load8_noabort(i32 %146)
  %147 = load i64, ptr %ring_cookie, align 8
  %vport1.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 52
  %148 = ptrtoint ptr %vport1.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %vport1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %147)
  %cmp.i72 = icmp eq i64 %147, -1
  br i1 %cmp.i72, label %if.end14.if.end18_crit_edge, label %if.else.i73

if.end14.if.end18_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

if.else.i73:                                      ; preds = %if.end14
  %conv.i = trunc i64 %147 to i32
  %and.i57.i = lshr i64 %147, 32
  %150 = trunc i64 %and.i57.i to i32
  %conv3.i = and i32 %150, 255
  %num_req_vfs.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 17
  %151 = ptrtoint ptr %num_req_vfs.i to i32
  call void @__asan_load2_noabort(i32 %151)
  %152 = load i16, ptr %num_req_vfs.i, align 2
  %conv5.i = zext i16 %152 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv3.i, i32 %conv5.i)
  %cmp6.i = icmp ugt i32 %conv3.i, %conv5.i
  br i1 %cmp6.i, label %do.end.i76, label %if.end.i77

do.end.i76:                                       ; preds = %if.else.i73
  call void @__sanitizer_cov_trace_pc() #18
  %153 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %5, align 8
  %dev.i74 = getelementptr inbounds %struct.pci_dev, ptr %154, i32 0, i32 44
  %sub.i75 = add nsw i32 %conv3.i, -1
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i74, ptr noundef nonnull @.str.694, i32 noundef %sub.i75, i32 noundef %conv5.i) #20
  br label %cleanup

if.end.i77:                                       ; preds = %if.else.i73
  %num_tqps.i = getelementptr %struct.hclge_vport, ptr %149, i32 %conv3.i, i32 13, i32 5, i32 0, i32 8
  %155 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_load2_noabort(i32 %155)
  %156 = load i16, ptr %num_tqps.i, align 2
  %conv22.i = zext i16 %156 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv22.i)
  %cmp23.not.i = icmp ult i32 %conv.i, %conv22.i
  br i1 %cmp23.not.i, label %if.end33.i, label %do.end28.i

do.end28.i:                                       ; preds = %if.end.i77
  call void @__sanitizer_cov_trace_pc() #18
  %157 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %5, align 8
  %dev30.i = getelementptr inbounds %struct.pci_dev, ptr %158, i32 0, i32 44
  %sub32.i = add nsw i32 %conv22.i, -1
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev30.i, ptr noundef nonnull @.str.697, i32 noundef %conv.i, i32 noundef %sub32.i) #20
  br label %cleanup

if.end33.i:                                       ; preds = %if.end.i77
  call void @__sanitizer_cov_trace_pc() #18
  %cond.in.in.i = getelementptr %struct.hclge_vport, ptr %149, i32 %conv3.i, i32 11
  %159 = ptrtoint ptr %cond.in.in.i to i32
  call void @__asan_load2_noabort(i32 %159)
  %cond.in56.i = load i16, ptr %cond.in.in.i, align 2
  %conv34.i = trunc i64 %147 to i16
  br label %if.end18

if.end18:                                         ; preds = %if.end33.i, %if.end14.if.end18_crit_edge
  %dst_vport_id.0.ph = phi i16 [ 0, %if.end14.if.end18_crit_edge ], [ %cond.in56.i, %if.end33.i ]
  %q_index.0.ph = phi i16 [ 0, %if.end14.if.end18_crit_edge ], [ %conv34.i, %if.end33.i ]
  %action.0.ph = phi i8 [ 1, %if.end14.if.end18_crit_edge ], [ 0, %if.end33.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %160 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %160, i32 noundef 3520, i32 noundef 176) #21
  %tobool20.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool20.not, label %if.end18.cleanup_crit_edge, label %if.end22

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end22:                                         ; preds = %if.end18
  %161 = ptrtoint ptr %fs10 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %fs10, align 8
  %and.i82 = and i32 %162, 1073741823
  %163 = zext i32 %and.i82 to i64
  call void @__sanitizer_cov_trace_switch(i64 %163, ptr @__sancov_gen_cov_switch_values.774)
  switch i32 %and.i82, label %if.then25 [
    i32 3, label %sw.bb.i88
    i32 1, label %sw.bb2.i
    i32 2, label %sw.bb3.i
    i32 13, label %sw.bb4.i
    i32 7, label %sw.bb5.i
    i32 5, label %sw.bb6.i
    i32 6, label %sw.bb7.i
    i32 14, label %sw.bb8.i
    i32 18, label %sw.bb9.i96
  ]

sw.bb.i88:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %h_u.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %164 = ptrtoint ptr %h_u.i.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %h_u.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %166 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 %165, ptr %arrayidx.i.i, align 8
  %m_u.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %167 = ptrtoint ptr %m_u.i.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %m_u.i.i, align 4
  %arrayidx3.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %169 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 %168, ptr %arrayidx3.i.i, align 8
  %ip4dst.i.i83 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %170 = ptrtoint ptr %ip4dst.i.i83 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %ip4dst.i.i83, align 4
  %arrayidx6.i.i84 = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %172 = ptrtoint ptr %arrayidx6.i.i84 to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %171, ptr %arrayidx6.i.i84, align 8
  %ip4dst8.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %173 = ptrtoint ptr %ip4dst8.i.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %ip4dst8.i.i, align 4
  %arrayidx11.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %175 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 %174, ptr %arrayidx11.i.i, align 8
  %psrc.i.i85 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %176 = ptrtoint ptr %psrc.i.i85 to i32
  call void @__asan_load2_noabort(i32 %176)
  %177 = load i16, ptr %psrc.i.i85, align 4
  %src_port.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 4
  %178 = ptrtoint ptr %src_port.i.i to i32
  call void @__asan_store2_noabort(i32 %178)
  store i16 %177, ptr %src_port.i.i, align 4
  %psrc15.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %179 = ptrtoint ptr %psrc15.i.i to i32
  call void @__asan_load2_noabort(i32 %179)
  %180 = load i16, ptr %psrc15.i.i, align 4
  %src_port17.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 4
  %181 = ptrtoint ptr %src_port17.i.i to i32
  call void @__asan_store2_noabort(i32 %181)
  store i16 %180, ptr %src_port17.i.i, align 4
  %pdst.i.i86 = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %h_u.i.i, i32 0, i32 3
  %182 = ptrtoint ptr %pdst.i.i86 to i32
  call void @__asan_load2_noabort(i32 %182)
  %183 = load i16, ptr %pdst.i.i86, align 2
  %dst_port.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 5
  %184 = ptrtoint ptr %dst_port.i.i to i32
  call void @__asan_store2_noabort(i32 %184)
  store i16 %183, ptr %dst_port.i.i, align 2
  %pdst21.i.i = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %m_u.i.i, i32 0, i32 3
  %185 = ptrtoint ptr %pdst21.i.i to i32
  call void @__asan_load2_noabort(i32 %185)
  %186 = load i16, ptr %pdst21.i.i, align 2
  %dst_port23.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 5
  %187 = ptrtoint ptr %dst_port23.i.i to i32
  call void @__asan_store2_noabort(i32 %187)
  store i16 %186, ptr %dst_port23.i.i, align 2
  %tos.i.i87 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %188 = ptrtoint ptr %tos.i.i87 to i32
  call void @__asan_load1_noabort(i32 %188)
  %189 = load i8, ptr %tos.i.i87, align 4
  %ip_tos.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 11
  %190 = ptrtoint ptr %ip_tos.i.i to i32
  call void @__asan_store1_noabort(i32 %190)
  store i8 %189, ptr %ip_tos.i.i, align 4
  %tos27.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %191 = ptrtoint ptr %tos27.i.i to i32
  call void @__asan_load1_noabort(i32 %191)
  %192 = load i8, ptr %tos27.i.i, align 4
  %ip_tos29.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 11
  %193 = ptrtoint ptr %ip_tos29.i.i to i32
  call void @__asan_store1_noabort(i32 %193)
  store i8 %192, ptr %ip_tos29.i.i, align 4
  %ether_proto.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %194 = ptrtoint ptr %ether_proto.i.i to i32
  call void @__asan_store2_noabort(i32 %194)
  store i16 2048, ptr %ether_proto.i.i, align 2
  %ether_proto32.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %195 = ptrtoint ptr %ether_proto32.i.i to i32
  call void @__asan_store2_noabort(i32 %195)
  store i16 -1, ptr %ether_proto32.i.i, align 2
  %ip_proto34.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %196 = ptrtoint ptr %ip_proto34.i.i to i32
  call void @__asan_store1_noabort(i32 %196)
  store i8 -124, ptr %ip_proto34.i.i, align 1
  %ip_proto36.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %197 = ptrtoint ptr %ip_proto36.i.i to i32
  call void @__asan_store1_noabort(i32 %197)
  store i8 -1, ptr %ip_proto36.i.i, align 1
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %h_u.i1.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %198 = ptrtoint ptr %h_u.i1.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %h_u.i1.i, align 4
  %arrayidx.i2.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %200 = ptrtoint ptr %arrayidx.i2.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %199, ptr %arrayidx.i2.i, align 8
  %m_u.i3.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %201 = ptrtoint ptr %m_u.i3.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %m_u.i3.i, align 4
  %arrayidx3.i4.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %203 = ptrtoint ptr %arrayidx3.i4.i to i32
  call void @__asan_store4_noabort(i32 %203)
  store i32 %202, ptr %arrayidx3.i4.i, align 8
  %ip4dst.i5.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %204 = ptrtoint ptr %ip4dst.i5.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %ip4dst.i5.i, align 4
  %arrayidx6.i6.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %206 = ptrtoint ptr %arrayidx6.i6.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 %205, ptr %arrayidx6.i6.i, align 8
  %ip4dst8.i7.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %207 = ptrtoint ptr %ip4dst8.i7.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %ip4dst8.i7.i, align 4
  %arrayidx11.i8.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %209 = ptrtoint ptr %arrayidx11.i8.i to i32
  call void @__asan_store4_noabort(i32 %209)
  store i32 %208, ptr %arrayidx11.i8.i, align 8
  %psrc.i9.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %210 = ptrtoint ptr %psrc.i9.i to i32
  call void @__asan_load2_noabort(i32 %210)
  %211 = load i16, ptr %psrc.i9.i, align 4
  %src_port.i10.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 4
  %212 = ptrtoint ptr %src_port.i10.i to i32
  call void @__asan_store2_noabort(i32 %212)
  store i16 %211, ptr %src_port.i10.i, align 4
  %psrc15.i11.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %213 = ptrtoint ptr %psrc15.i11.i to i32
  call void @__asan_load2_noabort(i32 %213)
  %214 = load i16, ptr %psrc15.i11.i, align 4
  %src_port17.i12.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 4
  %215 = ptrtoint ptr %src_port17.i12.i to i32
  call void @__asan_store2_noabort(i32 %215)
  store i16 %214, ptr %src_port17.i12.i, align 4
  %pdst.i13.i = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %h_u.i1.i, i32 0, i32 3
  %216 = ptrtoint ptr %pdst.i13.i to i32
  call void @__asan_load2_noabort(i32 %216)
  %217 = load i16, ptr %pdst.i13.i, align 2
  %dst_port.i14.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 5
  %218 = ptrtoint ptr %dst_port.i14.i to i32
  call void @__asan_store2_noabort(i32 %218)
  store i16 %217, ptr %dst_port.i14.i, align 2
  %pdst21.i15.i = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %m_u.i3.i, i32 0, i32 3
  %219 = ptrtoint ptr %pdst21.i15.i to i32
  call void @__asan_load2_noabort(i32 %219)
  %220 = load i16, ptr %pdst21.i15.i, align 2
  %dst_port23.i16.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 5
  %221 = ptrtoint ptr %dst_port23.i16.i to i32
  call void @__asan_store2_noabort(i32 %221)
  store i16 %220, ptr %dst_port23.i16.i, align 2
  %tos.i17.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %222 = ptrtoint ptr %tos.i17.i to i32
  call void @__asan_load1_noabort(i32 %222)
  %223 = load i8, ptr %tos.i17.i, align 4
  %ip_tos.i18.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 11
  %224 = ptrtoint ptr %ip_tos.i18.i to i32
  call void @__asan_store1_noabort(i32 %224)
  store i8 %223, ptr %ip_tos.i18.i, align 4
  %tos27.i19.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %225 = ptrtoint ptr %tos27.i19.i to i32
  call void @__asan_load1_noabort(i32 %225)
  %226 = load i8, ptr %tos27.i19.i, align 4
  %ip_tos29.i20.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 11
  %227 = ptrtoint ptr %ip_tos29.i20.i to i32
  call void @__asan_store1_noabort(i32 %227)
  store i8 %226, ptr %ip_tos29.i20.i, align 4
  %ether_proto.i21.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %228 = ptrtoint ptr %ether_proto.i21.i to i32
  call void @__asan_store2_noabort(i32 %228)
  store i16 2048, ptr %ether_proto.i21.i, align 2
  %ether_proto32.i22.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %229 = ptrtoint ptr %ether_proto32.i22.i to i32
  call void @__asan_store2_noabort(i32 %229)
  store i16 -1, ptr %ether_proto32.i22.i, align 2
  %ip_proto34.i23.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %230 = ptrtoint ptr %ip_proto34.i23.i to i32
  call void @__asan_store1_noabort(i32 %230)
  store i8 6, ptr %ip_proto34.i23.i, align 1
  %ip_proto36.i24.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %231 = ptrtoint ptr %ip_proto36.i24.i to i32
  call void @__asan_store1_noabort(i32 %231)
  store i8 -1, ptr %ip_proto36.i24.i, align 1
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %h_u.i25.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %232 = ptrtoint ptr %h_u.i25.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %h_u.i25.i, align 4
  %arrayidx.i26.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %234 = ptrtoint ptr %arrayidx.i26.i to i32
  call void @__asan_store4_noabort(i32 %234)
  store i32 %233, ptr %arrayidx.i26.i, align 8
  %m_u.i27.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %235 = ptrtoint ptr %m_u.i27.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %m_u.i27.i, align 4
  %arrayidx3.i28.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %237 = ptrtoint ptr %arrayidx3.i28.i to i32
  call void @__asan_store4_noabort(i32 %237)
  store i32 %236, ptr %arrayidx3.i28.i, align 8
  %ip4dst.i29.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %238 = ptrtoint ptr %ip4dst.i29.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %ip4dst.i29.i, align 4
  %arrayidx6.i30.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %240 = ptrtoint ptr %arrayidx6.i30.i to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 %239, ptr %arrayidx6.i30.i, align 8
  %ip4dst8.i31.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %241 = ptrtoint ptr %ip4dst8.i31.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %ip4dst8.i31.i, align 4
  %arrayidx11.i32.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %243 = ptrtoint ptr %arrayidx11.i32.i to i32
  call void @__asan_store4_noabort(i32 %243)
  store i32 %242, ptr %arrayidx11.i32.i, align 8
  %psrc.i33.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %244 = ptrtoint ptr %psrc.i33.i to i32
  call void @__asan_load2_noabort(i32 %244)
  %245 = load i16, ptr %psrc.i33.i, align 4
  %src_port.i34.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 4
  %246 = ptrtoint ptr %src_port.i34.i to i32
  call void @__asan_store2_noabort(i32 %246)
  store i16 %245, ptr %src_port.i34.i, align 4
  %psrc15.i35.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %247 = ptrtoint ptr %psrc15.i35.i to i32
  call void @__asan_load2_noabort(i32 %247)
  %248 = load i16, ptr %psrc15.i35.i, align 4
  %src_port17.i36.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 4
  %249 = ptrtoint ptr %src_port17.i36.i to i32
  call void @__asan_store2_noabort(i32 %249)
  store i16 %248, ptr %src_port17.i36.i, align 4
  %pdst.i37.i = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %h_u.i25.i, i32 0, i32 3
  %250 = ptrtoint ptr %pdst.i37.i to i32
  call void @__asan_load2_noabort(i32 %250)
  %251 = load i16, ptr %pdst.i37.i, align 2
  %dst_port.i38.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 5
  %252 = ptrtoint ptr %dst_port.i38.i to i32
  call void @__asan_store2_noabort(i32 %252)
  store i16 %251, ptr %dst_port.i38.i, align 2
  %pdst21.i39.i = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %m_u.i27.i, i32 0, i32 3
  %253 = ptrtoint ptr %pdst21.i39.i to i32
  call void @__asan_load2_noabort(i32 %253)
  %254 = load i16, ptr %pdst21.i39.i, align 2
  %dst_port23.i40.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 5
  %255 = ptrtoint ptr %dst_port23.i40.i to i32
  call void @__asan_store2_noabort(i32 %255)
  store i16 %254, ptr %dst_port23.i40.i, align 2
  %tos.i41.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %256 = ptrtoint ptr %tos.i41.i to i32
  call void @__asan_load1_noabort(i32 %256)
  %257 = load i8, ptr %tos.i41.i, align 4
  %ip_tos.i42.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 11
  %258 = ptrtoint ptr %ip_tos.i42.i to i32
  call void @__asan_store1_noabort(i32 %258)
  store i8 %257, ptr %ip_tos.i42.i, align 4
  %tos27.i43.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %259 = ptrtoint ptr %tos27.i43.i to i32
  call void @__asan_load1_noabort(i32 %259)
  %260 = load i8, ptr %tos27.i43.i, align 4
  %ip_tos29.i44.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 11
  %261 = ptrtoint ptr %ip_tos29.i44.i to i32
  call void @__asan_store1_noabort(i32 %261)
  store i8 %260, ptr %ip_tos29.i44.i, align 4
  %ether_proto.i45.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %262 = ptrtoint ptr %ether_proto.i45.i to i32
  call void @__asan_store2_noabort(i32 %262)
  store i16 2048, ptr %ether_proto.i45.i, align 2
  %ether_proto32.i46.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %263 = ptrtoint ptr %ether_proto32.i46.i to i32
  call void @__asan_store2_noabort(i32 %263)
  store i16 -1, ptr %ether_proto32.i46.i, align 2
  %ip_proto34.i47.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %264 = ptrtoint ptr %ip_proto34.i47.i to i32
  call void @__asan_store1_noabort(i32 %264)
  store i8 17, ptr %ip_proto34.i47.i, align 1
  %ip_proto36.i48.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %265 = ptrtoint ptr %ip_proto36.i48.i to i32
  call void @__asan_store1_noabort(i32 %265)
  store i8 -1, ptr %ip_proto36.i48.i, align 1
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %h_u.i49.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %266 = ptrtoint ptr %h_u.i49.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %h_u.i49.i, align 4
  %arrayidx.i50.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %268 = ptrtoint ptr %arrayidx.i50.i to i32
  call void @__asan_store4_noabort(i32 %268)
  store i32 %267, ptr %arrayidx.i50.i, align 8
  %m_u.i51.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %269 = ptrtoint ptr %m_u.i51.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load i32, ptr %m_u.i51.i, align 4
  %arrayidx3.i52.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %271 = ptrtoint ptr %arrayidx3.i52.i to i32
  call void @__asan_store4_noabort(i32 %271)
  store i32 %270, ptr %arrayidx3.i52.i, align 8
  %ip4dst.i53.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %272 = ptrtoint ptr %ip4dst.i53.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %ip4dst.i53.i, align 4
  %arrayidx6.i54.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %274 = ptrtoint ptr %arrayidx6.i54.i to i32
  call void @__asan_store4_noabort(i32 %274)
  store i32 %273, ptr %arrayidx6.i54.i, align 8
  %ip4dst8.i55.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %275 = ptrtoint ptr %ip4dst8.i55.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load i32, ptr %ip4dst8.i55.i, align 4
  %arrayidx11.i56.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %277 = ptrtoint ptr %arrayidx11.i56.i to i32
  call void @__asan_store4_noabort(i32 %277)
  store i32 %276, ptr %arrayidx11.i56.i, align 8
  %tos.i57.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %278 = ptrtoint ptr %tos.i57.i to i32
  call void @__asan_load1_noabort(i32 %278)
  %279 = load i8, ptr %tos.i57.i, align 4
  %ip_tos.i58.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 11
  %280 = ptrtoint ptr %ip_tos.i58.i to i32
  call void @__asan_store1_noabort(i32 %280)
  store i8 %279, ptr %ip_tos.i58.i, align 4
  %tos15.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %281 = ptrtoint ptr %tos15.i.i to i32
  call void @__asan_load1_noabort(i32 %281)
  %282 = load i8, ptr %tos15.i.i, align 4
  %ip_tos17.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 11
  %283 = ptrtoint ptr %ip_tos17.i.i to i32
  call void @__asan_store1_noabort(i32 %283)
  store i8 %282, ptr %ip_tos17.i.i, align 4
  %proto.i.i89 = getelementptr inbounds %struct.ethtool_usrip4_spec, ptr %h_u.i49.i, i32 0, i32 5
  %284 = ptrtoint ptr %proto.i.i89 to i32
  call void @__asan_load1_noabort(i32 %284)
  %285 = load i8, ptr %proto.i.i89, align 2
  %ip_proto.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %286 = ptrtoint ptr %ip_proto.i.i to i32
  call void @__asan_store1_noabort(i32 %286)
  store i8 %285, ptr %ip_proto.i.i, align 1
  %proto21.i.i = getelementptr inbounds %struct.ethtool_usrip4_spec, ptr %m_u.i51.i, i32 0, i32 5
  %287 = ptrtoint ptr %proto21.i.i to i32
  call void @__asan_load1_noabort(i32 %287)
  %288 = load i8, ptr %proto21.i.i, align 2
  %ip_proto23.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %289 = ptrtoint ptr %ip_proto23.i.i to i32
  call void @__asan_store1_noabort(i32 %289)
  store i8 %288, ptr %ip_proto23.i.i, align 1
  %ether_proto.i59.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %290 = ptrtoint ptr %ether_proto.i59.i to i32
  call void @__asan_store2_noabort(i32 %290)
  store i16 2048, ptr %ether_proto.i59.i, align 2
  %ether_proto26.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %291 = ptrtoint ptr %ether_proto26.i.i to i32
  call void @__asan_store2_noabort(i32 %291)
  store i16 -1, ptr %ether_proto26.i.i, align 2
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %src_ip.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2
  %h_u.i60.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %292 = ptrtoint ptr %h_u.i60.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %h_u.i60.i, align 4
  %294 = ptrtoint ptr %src_ip.i.i to i32
  call void @__asan_store4_noabort(i32 %294)
  store i32 %293, ptr %src_ip.i.i, align 4
  %arrayidx.1.i.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %295 = ptrtoint ptr %arrayidx.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load i32, ptr %arrayidx.1.i.i.i, align 4
  %arrayidx1.1.i.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 1
  %297 = ptrtoint ptr %arrayidx1.1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %297)
  store i32 %296, ptr %arrayidx1.1.i.i.i, align 8
  %arrayidx.2.i.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %298 = ptrtoint ptr %arrayidx.2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %arrayidx.2.i.i.i, align 4
  %arrayidx1.2.i.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 2
  %300 = ptrtoint ptr %arrayidx1.2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %300)
  store i32 %299, ptr %arrayidx1.2.i.i.i, align 4
  %arrayidx.3.i.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %301 = ptrtoint ptr %arrayidx.3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %arrayidx.3.i.i.i, align 4
  %arrayidx1.3.i.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %303 = ptrtoint ptr %arrayidx1.3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %303)
  store i32 %302, ptr %arrayidx1.3.i.i.i, align 8
  %src_ip2.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2
  %m_u.i61.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %304 = ptrtoint ptr %m_u.i61.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %m_u.i61.i, align 4
  %306 = ptrtoint ptr %src_ip2.i.i to i32
  call void @__asan_store4_noabort(i32 %306)
  store i32 %305, ptr %src_ip2.i.i, align 4
  %arrayidx.1.i1.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %307 = ptrtoint ptr %arrayidx.1.i1.i.i to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load i32, ptr %arrayidx.1.i1.i.i, align 4
  %arrayidx1.1.i2.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 1
  %309 = ptrtoint ptr %arrayidx1.1.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %309)
  store i32 %308, ptr %arrayidx1.1.i2.i.i, align 8
  %arrayidx.2.i3.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %310 = ptrtoint ptr %arrayidx.2.i3.i.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %arrayidx.2.i3.i.i, align 4
  %arrayidx1.2.i4.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 2
  %312 = ptrtoint ptr %arrayidx1.2.i4.i.i to i32
  call void @__asan_store4_noabort(i32 %312)
  store i32 %311, ptr %arrayidx1.2.i4.i.i, align 4
  %arrayidx.3.i5.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %313 = ptrtoint ptr %arrayidx.3.i5.i.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %arrayidx.3.i5.i.i, align 4
  %arrayidx1.3.i6.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %315 = ptrtoint ptr %arrayidx1.3.i6.i.i to i32
  call void @__asan_store4_noabort(i32 %315)
  store i32 %314, ptr %arrayidx1.3.i6.i.i, align 8
  %dst_ip.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3
  %ip6dst.i.i90 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1
  %316 = ptrtoint ptr %ip6dst.i.i90 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %ip6dst.i.i90, align 4
  %318 = ptrtoint ptr %dst_ip.i.i to i32
  call void @__asan_store4_noabort(i32 %318)
  store i32 %317, ptr %dst_ip.i.i, align 4
  %arrayidx.1.i7.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 1
  %319 = ptrtoint ptr %arrayidx.1.i7.i.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load i32, ptr %arrayidx.1.i7.i.i, align 4
  %arrayidx1.1.i8.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 1
  %321 = ptrtoint ptr %arrayidx1.1.i8.i.i to i32
  call void @__asan_store4_noabort(i32 %321)
  store i32 %320, ptr %arrayidx1.1.i8.i.i, align 8
  %arrayidx.2.i9.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 2
  %322 = ptrtoint ptr %arrayidx.2.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load i32, ptr %arrayidx.2.i9.i.i, align 4
  %arrayidx1.2.i10.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 2
  %324 = ptrtoint ptr %arrayidx1.2.i10.i.i to i32
  call void @__asan_store4_noabort(i32 %324)
  store i32 %323, ptr %arrayidx1.2.i10.i.i, align 4
  %arrayidx.3.i11.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 3
  %325 = ptrtoint ptr %arrayidx.3.i11.i.i to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load i32, ptr %arrayidx.3.i11.i.i, align 4
  %arrayidx1.3.i12.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %327 = ptrtoint ptr %arrayidx1.3.i12.i.i to i32
  call void @__asan_store4_noabort(i32 %327)
  store i32 %326, ptr %arrayidx1.3.i12.i.i, align 8
  %dst_ip11.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3
  %ip6dst14.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1
  %328 = ptrtoint ptr %ip6dst14.i.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load i32, ptr %ip6dst14.i.i, align 4
  %330 = ptrtoint ptr %dst_ip11.i.i to i32
  call void @__asan_store4_noabort(i32 %330)
  store i32 %329, ptr %dst_ip11.i.i, align 4
  %arrayidx.1.i13.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 1
  %331 = ptrtoint ptr %arrayidx.1.i13.i.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %arrayidx.1.i13.i.i, align 4
  %arrayidx1.1.i14.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 1
  %333 = ptrtoint ptr %arrayidx1.1.i14.i.i to i32
  call void @__asan_store4_noabort(i32 %333)
  store i32 %332, ptr %arrayidx1.1.i14.i.i, align 8
  %arrayidx.2.i15.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 2
  %334 = ptrtoint ptr %arrayidx.2.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load i32, ptr %arrayidx.2.i15.i.i, align 4
  %arrayidx1.2.i16.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 2
  %336 = ptrtoint ptr %arrayidx1.2.i16.i.i to i32
  call void @__asan_store4_noabort(i32 %336)
  store i32 %335, ptr %arrayidx1.2.i16.i.i, align 4
  %arrayidx.3.i17.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 3
  %337 = ptrtoint ptr %arrayidx.3.i17.i.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load i32, ptr %arrayidx.3.i17.i.i, align 4
  %arrayidx1.3.i18.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %339 = ptrtoint ptr %arrayidx1.3.i18.i.i to i32
  call void @__asan_store4_noabort(i32 %339)
  store i32 %338, ptr %arrayidx1.3.i18.i.i, align 8
  %psrc.i62.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 2
  %340 = ptrtoint ptr %psrc.i62.i to i32
  call void @__asan_load2_noabort(i32 %340)
  %341 = load i16, ptr %psrc.i62.i, align 4
  %src_port.i63.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 4
  %342 = ptrtoint ptr %src_port.i63.i to i32
  call void @__asan_store2_noabort(i32 %342)
  store i16 %341, ptr %src_port.i63.i, align 4
  %psrc19.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 2
  %343 = ptrtoint ptr %psrc19.i.i to i32
  call void @__asan_load2_noabort(i32 %343)
  %344 = load i16, ptr %psrc19.i.i, align 4
  %src_port21.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 4
  %345 = ptrtoint ptr %src_port21.i.i to i32
  call void @__asan_store2_noabort(i32 %345)
  store i16 %344, ptr %src_port21.i.i, align 4
  %pdst.i64.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 3
  %346 = ptrtoint ptr %pdst.i64.i to i32
  call void @__asan_load2_noabort(i32 %346)
  %347 = load i16, ptr %pdst.i64.i, align 2
  %dst_port.i65.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 5
  %348 = ptrtoint ptr %dst_port.i65.i to i32
  call void @__asan_store2_noabort(i32 %348)
  store i16 %347, ptr %dst_port.i65.i, align 2
  %pdst25.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 3
  %349 = ptrtoint ptr %pdst25.i.i to i32
  call void @__asan_load2_noabort(i32 %349)
  %350 = load i16, ptr %pdst25.i.i, align 2
  %dst_port27.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 5
  %351 = ptrtoint ptr %dst_port27.i.i to i32
  call void @__asan_store2_noabort(i32 %351)
  store i16 %350, ptr %dst_port27.i.i, align 2
  %ether_proto.i66.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %352 = ptrtoint ptr %ether_proto.i66.i to i32
  call void @__asan_store2_noabort(i32 %352)
  store i16 -31011, ptr %ether_proto.i66.i, align 2
  %ether_proto30.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %353 = ptrtoint ptr %ether_proto30.i.i to i32
  call void @__asan_store2_noabort(i32 %353)
  store i16 -1, ptr %ether_proto30.i.i, align 2
  %tclass.i.i91 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 4
  %354 = ptrtoint ptr %tclass.i.i91 to i32
  call void @__asan_load1_noabort(i32 %354)
  %355 = load i8, ptr %tclass.i.i91, align 4
  %ip_tos.i67.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 11
  %356 = ptrtoint ptr %ip_tos.i67.i to i32
  call void @__asan_store1_noabort(i32 %356)
  store i8 %355, ptr %ip_tos.i67.i, align 4
  %tclass34.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 4
  %357 = ptrtoint ptr %tclass34.i.i to i32
  call void @__asan_load1_noabort(i32 %357)
  %358 = load i8, ptr %tclass34.i.i, align 4
  %ip_tos36.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 11
  %359 = ptrtoint ptr %ip_tos36.i.i to i32
  call void @__asan_store1_noabort(i32 %359)
  store i8 %358, ptr %ip_tos36.i.i, align 4
  %ip_proto38.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %360 = ptrtoint ptr %ip_proto38.i.i to i32
  call void @__asan_store1_noabort(i32 %360)
  store i8 -124, ptr %ip_proto38.i.i, align 1
  %ip_proto40.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %361 = ptrtoint ptr %ip_proto40.i.i to i32
  call void @__asan_store1_noabort(i32 %361)
  store i8 -1, ptr %ip_proto40.i.i, align 1
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %src_ip.i68.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2
  %h_u.i69.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %362 = ptrtoint ptr %h_u.i69.i to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load i32, ptr %h_u.i69.i, align 4
  %364 = ptrtoint ptr %src_ip.i68.i to i32
  call void @__asan_store4_noabort(i32 %364)
  store i32 %363, ptr %src_ip.i68.i, align 4
  %arrayidx.1.i.i70.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %365 = ptrtoint ptr %arrayidx.1.i.i70.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load i32, ptr %arrayidx.1.i.i70.i, align 4
  %arrayidx1.1.i.i71.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 1
  %367 = ptrtoint ptr %arrayidx1.1.i.i71.i to i32
  call void @__asan_store4_noabort(i32 %367)
  store i32 %366, ptr %arrayidx1.1.i.i71.i, align 8
  %arrayidx.2.i.i72.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %368 = ptrtoint ptr %arrayidx.2.i.i72.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load i32, ptr %arrayidx.2.i.i72.i, align 4
  %arrayidx1.2.i.i73.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 2
  %370 = ptrtoint ptr %arrayidx1.2.i.i73.i to i32
  call void @__asan_store4_noabort(i32 %370)
  store i32 %369, ptr %arrayidx1.2.i.i73.i, align 4
  %arrayidx.3.i.i74.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %371 = ptrtoint ptr %arrayidx.3.i.i74.i to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load i32, ptr %arrayidx.3.i.i74.i, align 4
  %arrayidx1.3.i.i75.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %373 = ptrtoint ptr %arrayidx1.3.i.i75.i to i32
  call void @__asan_store4_noabort(i32 %373)
  store i32 %372, ptr %arrayidx1.3.i.i75.i, align 8
  %src_ip2.i76.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2
  %m_u.i77.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %374 = ptrtoint ptr %m_u.i77.i to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %m_u.i77.i, align 4
  %376 = ptrtoint ptr %src_ip2.i76.i to i32
  call void @__asan_store4_noabort(i32 %376)
  store i32 %375, ptr %src_ip2.i76.i, align 4
  %arrayidx.1.i1.i78.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %377 = ptrtoint ptr %arrayidx.1.i1.i78.i to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %arrayidx.1.i1.i78.i, align 4
  %arrayidx1.1.i2.i79.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 1
  %379 = ptrtoint ptr %arrayidx1.1.i2.i79.i to i32
  call void @__asan_store4_noabort(i32 %379)
  store i32 %378, ptr %arrayidx1.1.i2.i79.i, align 8
  %arrayidx.2.i3.i80.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %380 = ptrtoint ptr %arrayidx.2.i3.i80.i to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load i32, ptr %arrayidx.2.i3.i80.i, align 4
  %arrayidx1.2.i4.i81.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 2
  %382 = ptrtoint ptr %arrayidx1.2.i4.i81.i to i32
  call void @__asan_store4_noabort(i32 %382)
  store i32 %381, ptr %arrayidx1.2.i4.i81.i, align 4
  %arrayidx.3.i5.i82.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %383 = ptrtoint ptr %arrayidx.3.i5.i82.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load i32, ptr %arrayidx.3.i5.i82.i, align 4
  %arrayidx1.3.i6.i83.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %385 = ptrtoint ptr %arrayidx1.3.i6.i83.i to i32
  call void @__asan_store4_noabort(i32 %385)
  store i32 %384, ptr %arrayidx1.3.i6.i83.i, align 8
  %dst_ip.i84.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3
  %ip6dst.i85.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1
  %386 = ptrtoint ptr %ip6dst.i85.i to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load i32, ptr %ip6dst.i85.i, align 4
  %388 = ptrtoint ptr %dst_ip.i84.i to i32
  call void @__asan_store4_noabort(i32 %388)
  store i32 %387, ptr %dst_ip.i84.i, align 4
  %arrayidx.1.i7.i86.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 1
  %389 = ptrtoint ptr %arrayidx.1.i7.i86.i to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %arrayidx.1.i7.i86.i, align 4
  %arrayidx1.1.i8.i87.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 1
  %391 = ptrtoint ptr %arrayidx1.1.i8.i87.i to i32
  call void @__asan_store4_noabort(i32 %391)
  store i32 %390, ptr %arrayidx1.1.i8.i87.i, align 8
  %arrayidx.2.i9.i88.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 2
  %392 = ptrtoint ptr %arrayidx.2.i9.i88.i to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %arrayidx.2.i9.i88.i, align 4
  %arrayidx1.2.i10.i89.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 2
  %394 = ptrtoint ptr %arrayidx1.2.i10.i89.i to i32
  call void @__asan_store4_noabort(i32 %394)
  store i32 %393, ptr %arrayidx1.2.i10.i89.i, align 4
  %arrayidx.3.i11.i90.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 3
  %395 = ptrtoint ptr %arrayidx.3.i11.i90.i to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load i32, ptr %arrayidx.3.i11.i90.i, align 4
  %arrayidx1.3.i12.i91.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %397 = ptrtoint ptr %arrayidx1.3.i12.i91.i to i32
  call void @__asan_store4_noabort(i32 %397)
  store i32 %396, ptr %arrayidx1.3.i12.i91.i, align 8
  %dst_ip11.i92.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3
  %ip6dst14.i93.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1
  %398 = ptrtoint ptr %ip6dst14.i93.i to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load i32, ptr %ip6dst14.i93.i, align 4
  %400 = ptrtoint ptr %dst_ip11.i92.i to i32
  call void @__asan_store4_noabort(i32 %400)
  store i32 %399, ptr %dst_ip11.i92.i, align 4
  %arrayidx.1.i13.i94.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 1
  %401 = ptrtoint ptr %arrayidx.1.i13.i94.i to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load i32, ptr %arrayidx.1.i13.i94.i, align 4
  %arrayidx1.1.i14.i95.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 1
  %403 = ptrtoint ptr %arrayidx1.1.i14.i95.i to i32
  call void @__asan_store4_noabort(i32 %403)
  store i32 %402, ptr %arrayidx1.1.i14.i95.i, align 8
  %arrayidx.2.i15.i96.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 2
  %404 = ptrtoint ptr %arrayidx.2.i15.i96.i to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %arrayidx.2.i15.i96.i, align 4
  %arrayidx1.2.i16.i97.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 2
  %406 = ptrtoint ptr %arrayidx1.2.i16.i97.i to i32
  call void @__asan_store4_noabort(i32 %406)
  store i32 %405, ptr %arrayidx1.2.i16.i97.i, align 4
  %arrayidx.3.i17.i98.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 3
  %407 = ptrtoint ptr %arrayidx.3.i17.i98.i to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load i32, ptr %arrayidx.3.i17.i98.i, align 4
  %arrayidx1.3.i18.i99.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %409 = ptrtoint ptr %arrayidx1.3.i18.i99.i to i32
  call void @__asan_store4_noabort(i32 %409)
  store i32 %408, ptr %arrayidx1.3.i18.i99.i, align 8
  %psrc.i100.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 2
  %410 = ptrtoint ptr %psrc.i100.i to i32
  call void @__asan_load2_noabort(i32 %410)
  %411 = load i16, ptr %psrc.i100.i, align 4
  %src_port.i101.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 4
  %412 = ptrtoint ptr %src_port.i101.i to i32
  call void @__asan_store2_noabort(i32 %412)
  store i16 %411, ptr %src_port.i101.i, align 4
  %psrc19.i102.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 2
  %413 = ptrtoint ptr %psrc19.i102.i to i32
  call void @__asan_load2_noabort(i32 %413)
  %414 = load i16, ptr %psrc19.i102.i, align 4
  %src_port21.i103.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 4
  %415 = ptrtoint ptr %src_port21.i103.i to i32
  call void @__asan_store2_noabort(i32 %415)
  store i16 %414, ptr %src_port21.i103.i, align 4
  %pdst.i104.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 3
  %416 = ptrtoint ptr %pdst.i104.i to i32
  call void @__asan_load2_noabort(i32 %416)
  %417 = load i16, ptr %pdst.i104.i, align 2
  %dst_port.i105.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 5
  %418 = ptrtoint ptr %dst_port.i105.i to i32
  call void @__asan_store2_noabort(i32 %418)
  store i16 %417, ptr %dst_port.i105.i, align 2
  %pdst25.i106.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 3
  %419 = ptrtoint ptr %pdst25.i106.i to i32
  call void @__asan_load2_noabort(i32 %419)
  %420 = load i16, ptr %pdst25.i106.i, align 2
  %dst_port27.i107.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 5
  %421 = ptrtoint ptr %dst_port27.i107.i to i32
  call void @__asan_store2_noabort(i32 %421)
  store i16 %420, ptr %dst_port27.i107.i, align 2
  %ether_proto.i108.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %422 = ptrtoint ptr %ether_proto.i108.i to i32
  call void @__asan_store2_noabort(i32 %422)
  store i16 -31011, ptr %ether_proto.i108.i, align 2
  %ether_proto30.i109.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %423 = ptrtoint ptr %ether_proto30.i109.i to i32
  call void @__asan_store2_noabort(i32 %423)
  store i16 -1, ptr %ether_proto30.i109.i, align 2
  %tclass.i110.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 4
  %424 = ptrtoint ptr %tclass.i110.i to i32
  call void @__asan_load1_noabort(i32 %424)
  %425 = load i8, ptr %tclass.i110.i, align 4
  %ip_tos.i111.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 11
  %426 = ptrtoint ptr %ip_tos.i111.i to i32
  call void @__asan_store1_noabort(i32 %426)
  store i8 %425, ptr %ip_tos.i111.i, align 4
  %tclass34.i112.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 4
  %427 = ptrtoint ptr %tclass34.i112.i to i32
  call void @__asan_load1_noabort(i32 %427)
  %428 = load i8, ptr %tclass34.i112.i, align 4
  %ip_tos36.i113.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 11
  %429 = ptrtoint ptr %ip_tos36.i113.i to i32
  call void @__asan_store1_noabort(i32 %429)
  store i8 %428, ptr %ip_tos36.i113.i, align 4
  %ip_proto38.i114.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %430 = ptrtoint ptr %ip_proto38.i114.i to i32
  call void @__asan_store1_noabort(i32 %430)
  store i8 6, ptr %ip_proto38.i114.i, align 1
  %ip_proto40.i115.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %431 = ptrtoint ptr %ip_proto40.i115.i to i32
  call void @__asan_store1_noabort(i32 %431)
  store i8 -1, ptr %ip_proto40.i115.i, align 1
  br label %sw.epilog.i

sw.bb7.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %src_ip.i116.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2
  %h_u.i117.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %432 = ptrtoint ptr %h_u.i117.i to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load i32, ptr %h_u.i117.i, align 4
  %434 = ptrtoint ptr %src_ip.i116.i to i32
  call void @__asan_store4_noabort(i32 %434)
  store i32 %433, ptr %src_ip.i116.i, align 4
  %arrayidx.1.i.i118.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %435 = ptrtoint ptr %arrayidx.1.i.i118.i to i32
  call void @__asan_load4_noabort(i32 %435)
  %436 = load i32, ptr %arrayidx.1.i.i118.i, align 4
  %arrayidx1.1.i.i119.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 1
  %437 = ptrtoint ptr %arrayidx1.1.i.i119.i to i32
  call void @__asan_store4_noabort(i32 %437)
  store i32 %436, ptr %arrayidx1.1.i.i119.i, align 8
  %arrayidx.2.i.i120.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %438 = ptrtoint ptr %arrayidx.2.i.i120.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load i32, ptr %arrayidx.2.i.i120.i, align 4
  %arrayidx1.2.i.i121.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 2
  %440 = ptrtoint ptr %arrayidx1.2.i.i121.i to i32
  call void @__asan_store4_noabort(i32 %440)
  store i32 %439, ptr %arrayidx1.2.i.i121.i, align 4
  %arrayidx.3.i.i122.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %441 = ptrtoint ptr %arrayidx.3.i.i122.i to i32
  call void @__asan_load4_noabort(i32 %441)
  %442 = load i32, ptr %arrayidx.3.i.i122.i, align 4
  %arrayidx1.3.i.i123.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %443 = ptrtoint ptr %arrayidx1.3.i.i123.i to i32
  call void @__asan_store4_noabort(i32 %443)
  store i32 %442, ptr %arrayidx1.3.i.i123.i, align 8
  %src_ip2.i124.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2
  %m_u.i125.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %444 = ptrtoint ptr %m_u.i125.i to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load i32, ptr %m_u.i125.i, align 4
  %446 = ptrtoint ptr %src_ip2.i124.i to i32
  call void @__asan_store4_noabort(i32 %446)
  store i32 %445, ptr %src_ip2.i124.i, align 4
  %arrayidx.1.i1.i126.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %447 = ptrtoint ptr %arrayidx.1.i1.i126.i to i32
  call void @__asan_load4_noabort(i32 %447)
  %448 = load i32, ptr %arrayidx.1.i1.i126.i, align 4
  %arrayidx1.1.i2.i127.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 1
  %449 = ptrtoint ptr %arrayidx1.1.i2.i127.i to i32
  call void @__asan_store4_noabort(i32 %449)
  store i32 %448, ptr %arrayidx1.1.i2.i127.i, align 8
  %arrayidx.2.i3.i128.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %450 = ptrtoint ptr %arrayidx.2.i3.i128.i to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load i32, ptr %arrayidx.2.i3.i128.i, align 4
  %arrayidx1.2.i4.i129.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 2
  %452 = ptrtoint ptr %arrayidx1.2.i4.i129.i to i32
  call void @__asan_store4_noabort(i32 %452)
  store i32 %451, ptr %arrayidx1.2.i4.i129.i, align 4
  %arrayidx.3.i5.i130.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %453 = ptrtoint ptr %arrayidx.3.i5.i130.i to i32
  call void @__asan_load4_noabort(i32 %453)
  %454 = load i32, ptr %arrayidx.3.i5.i130.i, align 4
  %arrayidx1.3.i6.i131.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %455 = ptrtoint ptr %arrayidx1.3.i6.i131.i to i32
  call void @__asan_store4_noabort(i32 %455)
  store i32 %454, ptr %arrayidx1.3.i6.i131.i, align 8
  %dst_ip.i132.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3
  %ip6dst.i133.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1
  %456 = ptrtoint ptr %ip6dst.i133.i to i32
  call void @__asan_load4_noabort(i32 %456)
  %457 = load i32, ptr %ip6dst.i133.i, align 4
  %458 = ptrtoint ptr %dst_ip.i132.i to i32
  call void @__asan_store4_noabort(i32 %458)
  store i32 %457, ptr %dst_ip.i132.i, align 4
  %arrayidx.1.i7.i134.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 1
  %459 = ptrtoint ptr %arrayidx.1.i7.i134.i to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load i32, ptr %arrayidx.1.i7.i134.i, align 4
  %arrayidx1.1.i8.i135.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 1
  %461 = ptrtoint ptr %arrayidx1.1.i8.i135.i to i32
  call void @__asan_store4_noabort(i32 %461)
  store i32 %460, ptr %arrayidx1.1.i8.i135.i, align 8
  %arrayidx.2.i9.i136.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 2
  %462 = ptrtoint ptr %arrayidx.2.i9.i136.i to i32
  call void @__asan_load4_noabort(i32 %462)
  %463 = load i32, ptr %arrayidx.2.i9.i136.i, align 4
  %arrayidx1.2.i10.i137.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 2
  %464 = ptrtoint ptr %arrayidx1.2.i10.i137.i to i32
  call void @__asan_store4_noabort(i32 %464)
  store i32 %463, ptr %arrayidx1.2.i10.i137.i, align 4
  %arrayidx.3.i11.i138.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 3
  %465 = ptrtoint ptr %arrayidx.3.i11.i138.i to i32
  call void @__asan_load4_noabort(i32 %465)
  %466 = load i32, ptr %arrayidx.3.i11.i138.i, align 4
  %arrayidx1.3.i12.i139.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %467 = ptrtoint ptr %arrayidx1.3.i12.i139.i to i32
  call void @__asan_store4_noabort(i32 %467)
  store i32 %466, ptr %arrayidx1.3.i12.i139.i, align 8
  %dst_ip11.i140.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3
  %ip6dst14.i141.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1
  %468 = ptrtoint ptr %ip6dst14.i141.i to i32
  call void @__asan_load4_noabort(i32 %468)
  %469 = load i32, ptr %ip6dst14.i141.i, align 4
  %470 = ptrtoint ptr %dst_ip11.i140.i to i32
  call void @__asan_store4_noabort(i32 %470)
  store i32 %469, ptr %dst_ip11.i140.i, align 4
  %arrayidx.1.i13.i142.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 1
  %471 = ptrtoint ptr %arrayidx.1.i13.i142.i to i32
  call void @__asan_load4_noabort(i32 %471)
  %472 = load i32, ptr %arrayidx.1.i13.i142.i, align 4
  %arrayidx1.1.i14.i143.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 1
  %473 = ptrtoint ptr %arrayidx1.1.i14.i143.i to i32
  call void @__asan_store4_noabort(i32 %473)
  store i32 %472, ptr %arrayidx1.1.i14.i143.i, align 8
  %arrayidx.2.i15.i144.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 2
  %474 = ptrtoint ptr %arrayidx.2.i15.i144.i to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load i32, ptr %arrayidx.2.i15.i144.i, align 4
  %arrayidx1.2.i16.i145.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 2
  %476 = ptrtoint ptr %arrayidx1.2.i16.i145.i to i32
  call void @__asan_store4_noabort(i32 %476)
  store i32 %475, ptr %arrayidx1.2.i16.i145.i, align 4
  %arrayidx.3.i17.i146.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 3
  %477 = ptrtoint ptr %arrayidx.3.i17.i146.i to i32
  call void @__asan_load4_noabort(i32 %477)
  %478 = load i32, ptr %arrayidx.3.i17.i146.i, align 4
  %arrayidx1.3.i18.i147.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %479 = ptrtoint ptr %arrayidx1.3.i18.i147.i to i32
  call void @__asan_store4_noabort(i32 %479)
  store i32 %478, ptr %arrayidx1.3.i18.i147.i, align 8
  %psrc.i148.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 2
  %480 = ptrtoint ptr %psrc.i148.i to i32
  call void @__asan_load2_noabort(i32 %480)
  %481 = load i16, ptr %psrc.i148.i, align 4
  %src_port.i149.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 4
  %482 = ptrtoint ptr %src_port.i149.i to i32
  call void @__asan_store2_noabort(i32 %482)
  store i16 %481, ptr %src_port.i149.i, align 4
  %psrc19.i150.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 2
  %483 = ptrtoint ptr %psrc19.i150.i to i32
  call void @__asan_load2_noabort(i32 %483)
  %484 = load i16, ptr %psrc19.i150.i, align 4
  %src_port21.i151.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 4
  %485 = ptrtoint ptr %src_port21.i151.i to i32
  call void @__asan_store2_noabort(i32 %485)
  store i16 %484, ptr %src_port21.i151.i, align 4
  %pdst.i152.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 3
  %486 = ptrtoint ptr %pdst.i152.i to i32
  call void @__asan_load2_noabort(i32 %486)
  %487 = load i16, ptr %pdst.i152.i, align 2
  %dst_port.i153.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 5
  %488 = ptrtoint ptr %dst_port.i153.i to i32
  call void @__asan_store2_noabort(i32 %488)
  store i16 %487, ptr %dst_port.i153.i, align 2
  %pdst25.i154.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 3
  %489 = ptrtoint ptr %pdst25.i154.i to i32
  call void @__asan_load2_noabort(i32 %489)
  %490 = load i16, ptr %pdst25.i154.i, align 2
  %dst_port27.i155.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 5
  %491 = ptrtoint ptr %dst_port27.i155.i to i32
  call void @__asan_store2_noabort(i32 %491)
  store i16 %490, ptr %dst_port27.i155.i, align 2
  %ether_proto.i156.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %492 = ptrtoint ptr %ether_proto.i156.i to i32
  call void @__asan_store2_noabort(i32 %492)
  store i16 -31011, ptr %ether_proto.i156.i, align 2
  %ether_proto30.i157.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %493 = ptrtoint ptr %ether_proto30.i157.i to i32
  call void @__asan_store2_noabort(i32 %493)
  store i16 -1, ptr %ether_proto30.i157.i, align 2
  %tclass.i158.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 4
  %494 = ptrtoint ptr %tclass.i158.i to i32
  call void @__asan_load1_noabort(i32 %494)
  %495 = load i8, ptr %tclass.i158.i, align 4
  %ip_tos.i159.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 11
  %496 = ptrtoint ptr %ip_tos.i159.i to i32
  call void @__asan_store1_noabort(i32 %496)
  store i8 %495, ptr %ip_tos.i159.i, align 4
  %tclass34.i160.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 4
  %497 = ptrtoint ptr %tclass34.i160.i to i32
  call void @__asan_load1_noabort(i32 %497)
  %498 = load i8, ptr %tclass34.i160.i, align 4
  %ip_tos36.i161.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 11
  %499 = ptrtoint ptr %ip_tos36.i161.i to i32
  call void @__asan_store1_noabort(i32 %499)
  store i8 %498, ptr %ip_tos36.i161.i, align 4
  %ip_proto38.i162.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %500 = ptrtoint ptr %ip_proto38.i162.i to i32
  call void @__asan_store1_noabort(i32 %500)
  store i8 17, ptr %ip_proto38.i162.i, align 1
  %ip_proto40.i163.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %501 = ptrtoint ptr %ip_proto40.i163.i to i32
  call void @__asan_store1_noabort(i32 %501)
  store i8 -1, ptr %ip_proto40.i163.i, align 1
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %src_ip.i164.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2
  %h_u.i165.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %502 = ptrtoint ptr %h_u.i165.i to i32
  call void @__asan_load4_noabort(i32 %502)
  %503 = load i32, ptr %h_u.i165.i, align 4
  %504 = ptrtoint ptr %src_ip.i164.i to i32
  call void @__asan_store4_noabort(i32 %504)
  store i32 %503, ptr %src_ip.i164.i, align 4
  %arrayidx.1.i.i166.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %505 = ptrtoint ptr %arrayidx.1.i.i166.i to i32
  call void @__asan_load4_noabort(i32 %505)
  %506 = load i32, ptr %arrayidx.1.i.i166.i, align 4
  %arrayidx1.1.i.i167.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 1
  %507 = ptrtoint ptr %arrayidx1.1.i.i167.i to i32
  call void @__asan_store4_noabort(i32 %507)
  store i32 %506, ptr %arrayidx1.1.i.i167.i, align 8
  %arrayidx.2.i.i168.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %508 = ptrtoint ptr %arrayidx.2.i.i168.i to i32
  call void @__asan_load4_noabort(i32 %508)
  %509 = load i32, ptr %arrayidx.2.i.i168.i, align 4
  %arrayidx1.2.i.i169.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 2
  %510 = ptrtoint ptr %arrayidx1.2.i.i169.i to i32
  call void @__asan_store4_noabort(i32 %510)
  store i32 %509, ptr %arrayidx1.2.i.i169.i, align 4
  %arrayidx.3.i.i170.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %511 = ptrtoint ptr %arrayidx.3.i.i170.i to i32
  call void @__asan_load4_noabort(i32 %511)
  %512 = load i32, ptr %arrayidx.3.i.i170.i, align 4
  %arrayidx1.3.i.i171.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %513 = ptrtoint ptr %arrayidx1.3.i.i171.i to i32
  call void @__asan_store4_noabort(i32 %513)
  store i32 %512, ptr %arrayidx1.3.i.i171.i, align 8
  %src_ip2.i172.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2
  %m_u.i173.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %514 = ptrtoint ptr %m_u.i173.i to i32
  call void @__asan_load4_noabort(i32 %514)
  %515 = load i32, ptr %m_u.i173.i, align 4
  %516 = ptrtoint ptr %src_ip2.i172.i to i32
  call void @__asan_store4_noabort(i32 %516)
  store i32 %515, ptr %src_ip2.i172.i, align 4
  %arrayidx.1.i1.i174.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %517 = ptrtoint ptr %arrayidx.1.i1.i174.i to i32
  call void @__asan_load4_noabort(i32 %517)
  %518 = load i32, ptr %arrayidx.1.i1.i174.i, align 4
  %arrayidx1.1.i2.i175.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 1
  %519 = ptrtoint ptr %arrayidx1.1.i2.i175.i to i32
  call void @__asan_store4_noabort(i32 %519)
  store i32 %518, ptr %arrayidx1.1.i2.i175.i, align 8
  %arrayidx.2.i3.i176.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %520 = ptrtoint ptr %arrayidx.2.i3.i176.i to i32
  call void @__asan_load4_noabort(i32 %520)
  %521 = load i32, ptr %arrayidx.2.i3.i176.i, align 4
  %arrayidx1.2.i4.i177.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 2
  %522 = ptrtoint ptr %arrayidx1.2.i4.i177.i to i32
  call void @__asan_store4_noabort(i32 %522)
  store i32 %521, ptr %arrayidx1.2.i4.i177.i, align 4
  %arrayidx.3.i5.i178.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %523 = ptrtoint ptr %arrayidx.3.i5.i178.i to i32
  call void @__asan_load4_noabort(i32 %523)
  %524 = load i32, ptr %arrayidx.3.i5.i178.i, align 4
  %arrayidx1.3.i6.i179.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %525 = ptrtoint ptr %arrayidx1.3.i6.i179.i to i32
  call void @__asan_store4_noabort(i32 %525)
  store i32 %524, ptr %arrayidx1.3.i6.i179.i, align 8
  %dst_ip.i180.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3
  %ip6dst.i181.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1
  %526 = ptrtoint ptr %ip6dst.i181.i to i32
  call void @__asan_load4_noabort(i32 %526)
  %527 = load i32, ptr %ip6dst.i181.i, align 4
  %528 = ptrtoint ptr %dst_ip.i180.i to i32
  call void @__asan_store4_noabort(i32 %528)
  store i32 %527, ptr %dst_ip.i180.i, align 4
  %arrayidx.1.i7.i182.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 1
  %529 = ptrtoint ptr %arrayidx.1.i7.i182.i to i32
  call void @__asan_load4_noabort(i32 %529)
  %530 = load i32, ptr %arrayidx.1.i7.i182.i, align 4
  %arrayidx1.1.i8.i183.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 1
  %531 = ptrtoint ptr %arrayidx1.1.i8.i183.i to i32
  call void @__asan_store4_noabort(i32 %531)
  store i32 %530, ptr %arrayidx1.1.i8.i183.i, align 8
  %arrayidx.2.i9.i184.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 2
  %532 = ptrtoint ptr %arrayidx.2.i9.i184.i to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load i32, ptr %arrayidx.2.i9.i184.i, align 4
  %arrayidx1.2.i10.i185.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 2
  %534 = ptrtoint ptr %arrayidx1.2.i10.i185.i to i32
  call void @__asan_store4_noabort(i32 %534)
  store i32 %533, ptr %arrayidx1.2.i10.i185.i, align 4
  %arrayidx.3.i11.i186.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 3
  %535 = ptrtoint ptr %arrayidx.3.i11.i186.i to i32
  call void @__asan_load4_noabort(i32 %535)
  %536 = load i32, ptr %arrayidx.3.i11.i186.i, align 4
  %arrayidx1.3.i12.i187.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %537 = ptrtoint ptr %arrayidx1.3.i12.i187.i to i32
  call void @__asan_store4_noabort(i32 %537)
  store i32 %536, ptr %arrayidx1.3.i12.i187.i, align 8
  %dst_ip11.i188.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3
  %ip6dst14.i189.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1
  %538 = ptrtoint ptr %ip6dst14.i189.i to i32
  call void @__asan_load4_noabort(i32 %538)
  %539 = load i32, ptr %ip6dst14.i189.i, align 4
  %540 = ptrtoint ptr %dst_ip11.i188.i to i32
  call void @__asan_store4_noabort(i32 %540)
  store i32 %539, ptr %dst_ip11.i188.i, align 4
  %arrayidx.1.i13.i190.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 1
  %541 = ptrtoint ptr %arrayidx.1.i13.i190.i to i32
  call void @__asan_load4_noabort(i32 %541)
  %542 = load i32, ptr %arrayidx.1.i13.i190.i, align 4
  %arrayidx1.1.i14.i191.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 1
  %543 = ptrtoint ptr %arrayidx1.1.i14.i191.i to i32
  call void @__asan_store4_noabort(i32 %543)
  store i32 %542, ptr %arrayidx1.1.i14.i191.i, align 8
  %arrayidx.2.i15.i192.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 2
  %544 = ptrtoint ptr %arrayidx.2.i15.i192.i to i32
  call void @__asan_load4_noabort(i32 %544)
  %545 = load i32, ptr %arrayidx.2.i15.i192.i, align 4
  %arrayidx1.2.i16.i193.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 2
  %546 = ptrtoint ptr %arrayidx1.2.i16.i193.i to i32
  call void @__asan_store4_noabort(i32 %546)
  store i32 %545, ptr %arrayidx1.2.i16.i193.i, align 4
  %arrayidx.3.i17.i194.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 3
  %547 = ptrtoint ptr %arrayidx.3.i17.i194.i to i32
  call void @__asan_load4_noabort(i32 %547)
  %548 = load i32, ptr %arrayidx.3.i17.i194.i, align 4
  %arrayidx1.3.i18.i195.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %549 = ptrtoint ptr %arrayidx1.3.i18.i195.i to i32
  call void @__asan_store4_noabort(i32 %549)
  store i32 %548, ptr %arrayidx1.3.i18.i195.i, align 8
  %l4_proto.i.i92 = getelementptr inbounds %struct.ethtool_usrip6_spec, ptr %h_u.i165.i, i32 0, i32 4
  %550 = ptrtoint ptr %l4_proto.i.i92 to i32
  call void @__asan_load1_noabort(i32 %550)
  %551 = load i8, ptr %l4_proto.i.i92, align 1
  %ip_proto.i196.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %552 = ptrtoint ptr %ip_proto.i196.i to i32
  call void @__asan_store1_noabort(i32 %552)
  store i8 %551, ptr %ip_proto.i196.i, align 1
  %l4_proto19.i.i = getelementptr inbounds %struct.ethtool_usrip6_spec, ptr %m_u.i173.i, i32 0, i32 4
  %553 = ptrtoint ptr %l4_proto19.i.i to i32
  call void @__asan_load1_noabort(i32 %553)
  %554 = load i8, ptr %l4_proto19.i.i, align 1
  %ip_proto21.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %555 = ptrtoint ptr %ip_proto21.i.i to i32
  call void @__asan_store1_noabort(i32 %555)
  store i8 %554, ptr %ip_proto21.i.i, align 1
  %tclass.i197.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 4
  %556 = ptrtoint ptr %tclass.i197.i to i32
  call void @__asan_load1_noabort(i32 %556)
  %557 = load i8, ptr %tclass.i197.i, align 4
  %ip_tos.i198.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 11
  %558 = ptrtoint ptr %ip_tos.i198.i to i32
  call void @__asan_store1_noabort(i32 %558)
  store i8 %557, ptr %ip_tos.i198.i, align 4
  %tclass25.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 4
  %559 = ptrtoint ptr %tclass25.i.i to i32
  call void @__asan_load1_noabort(i32 %559)
  %560 = load i8, ptr %tclass25.i.i, align 4
  %ip_tos27.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 11
  %561 = ptrtoint ptr %ip_tos27.i.i to i32
  call void @__asan_store1_noabort(i32 %561)
  store i8 %560, ptr %ip_tos27.i.i, align 4
  %ether_proto.i199.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %562 = ptrtoint ptr %ether_proto.i199.i to i32
  call void @__asan_store2_noabort(i32 %562)
  store i16 -31011, ptr %ether_proto.i199.i, align 2
  %ether_proto30.i200.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %563 = ptrtoint ptr %ether_proto30.i200.i to i32
  call void @__asan_store2_noabort(i32 %563)
  store i16 -1, ptr %ether_proto30.i200.i, align 2
  br label %sw.epilog.i

sw.bb9.i96:                                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %tuples.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1
  %h_u.i201.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %h_source.i.i93 = getelementptr inbounds %struct.ethhdr, ptr %h_u.i201.i, i32 0, i32 1
  %564 = ptrtoint ptr %h_source.i.i93 to i32
  call void @__asan_load4_noabort(i32 %564)
  %565 = load i32, ptr %h_source.i.i93, align 4
  %566 = ptrtoint ptr %tuples.i.i to i32
  call void @__asan_store4_noabort(i32 %566)
  store i32 %565, ptr %tuples.i.i, align 8
  %add.ptr.i.i.i94 = getelementptr %struct.ethhdr, ptr %h_u.i201.i, i32 0, i32 1, i32 4
  %567 = ptrtoint ptr %add.ptr.i.i.i94 to i32
  call void @__asan_load2_noabort(i32 %567)
  %568 = load i16, ptr %add.ptr.i.i.i94, align 2
  %add.ptr1.i.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 0, i32 4
  %569 = ptrtoint ptr %add.ptr1.i.i.i to i32
  call void @__asan_store2_noabort(i32 %569)
  store i16 %568, ptr %add.ptr1.i.i.i, align 4
  %tuples_mask.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2
  %m_u.i202.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %h_source4.i.i = getelementptr inbounds %struct.ethhdr, ptr %m_u.i202.i, i32 0, i32 1
  %570 = ptrtoint ptr %h_source4.i.i to i32
  call void @__asan_load4_noabort(i32 %570)
  %571 = load i32, ptr %h_source4.i.i, align 4
  %572 = ptrtoint ptr %tuples_mask.i.i to i32
  call void @__asan_store4_noabort(i32 %572)
  store i32 %571, ptr %tuples_mask.i.i, align 8
  %add.ptr.i1.i.i = getelementptr %struct.ethhdr, ptr %m_u.i202.i, i32 0, i32 1, i32 4
  %573 = ptrtoint ptr %add.ptr.i1.i.i to i32
  call void @__asan_load2_noabort(i32 %573)
  %574 = load i16, ptr %add.ptr.i1.i.i, align 2
  %add.ptr1.i2.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 0, i32 4
  %575 = ptrtoint ptr %add.ptr1.i2.i.i to i32
  call void @__asan_store2_noabort(i32 %575)
  store i16 %574, ptr %add.ptr1.i2.i.i, align 4
  %dst_mac.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 1
  %576 = ptrtoint ptr %h_u.i201.i to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load i32, ptr %h_u.i201.i, align 4
  %578 = ptrtoint ptr %dst_mac.i.i to i32
  call void @__asan_store4_noabort(i32 %578)
  store i32 %577, ptr %dst_mac.i.i, align 4
  %add.ptr.i3.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %579 = ptrtoint ptr %add.ptr.i3.i.i to i32
  call void @__asan_load2_noabort(i32 %579)
  %580 = load i16, ptr %add.ptr.i3.i.i, align 2
  %add.ptr1.i4.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 4
  %581 = ptrtoint ptr %add.ptr1.i4.i.i to i32
  call void @__asan_store2_noabort(i32 %581)
  store i16 %580, ptr %add.ptr1.i4.i.i, align 2
  %dst_mac11.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 1
  %582 = ptrtoint ptr %m_u.i202.i to i32
  call void @__asan_load4_noabort(i32 %582)
  %583 = load i32, ptr %m_u.i202.i, align 4
  %584 = ptrtoint ptr %dst_mac11.i.i to i32
  call void @__asan_store4_noabort(i32 %584)
  store i32 %583, ptr %dst_mac11.i.i, align 4
  %add.ptr.i5.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %585 = ptrtoint ptr %add.ptr.i5.i.i to i32
  call void @__asan_load2_noabort(i32 %585)
  %586 = load i16, ptr %add.ptr.i5.i.i, align 2
  %add.ptr1.i6.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 1, i32 4
  %587 = ptrtoint ptr %add.ptr1.i6.i.i to i32
  call void @__asan_store2_noabort(i32 %587)
  store i16 %586, ptr %add.ptr1.i6.i.i, align 2
  %h_proto.i.i95 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %588 = ptrtoint ptr %h_proto.i.i95 to i32
  call void @__asan_load2_noabort(i32 %588)
  %589 = load i16, ptr %h_proto.i.i95, align 4
  %ether_proto.i203.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %590 = ptrtoint ptr %ether_proto.i203.i to i32
  call void @__asan_store2_noabort(i32 %590)
  store i16 %589, ptr %ether_proto.i203.i, align 2
  %h_proto19.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %591 = ptrtoint ptr %h_proto19.i.i to i32
  call void @__asan_load2_noabort(i32 %591)
  %592 = load i16, ptr %h_proto19.i.i, align 4
  %ether_proto21.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %593 = ptrtoint ptr %ether_proto21.i.i to i32
  call void @__asan_store2_noabort(i32 %593)
  store i16 %592, ptr %ether_proto21.i.i, align 2
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb9.i96, %sw.bb8.i, %sw.bb7.i, %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb.i88
  %594 = ptrtoint ptr %fs10 to i32
  call void @__asan_load4_noabort(i32 %594)
  %595 = load i32, ptr %fs10, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %595)
  %tobool.not.i97 = icmp sgt i32 %595, -1
  br i1 %tobool.not.i97, label %sw.epilog.i.if.end.i100_crit_edge, label %if.then.i98

sw.epilog.i.if.end.i100_crit_edge:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i100

if.then.i98:                                      ; preds = %sw.epilog.i
  %vlan_tci.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 3
  %596 = ptrtoint ptr %vlan_tci.i to i32
  call void @__asan_load2_noabort(i32 %596)
  %597 = load i16, ptr %vlan_tci.i, align 2
  %vlan_tag1.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 6
  %598 = ptrtoint ptr %vlan_tag1.i to i32
  call void @__asan_store2_noabort(i32 %598)
  store i16 %597, ptr %vlan_tag1.i, align 8
  %vlan_tci12.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 3
  %599 = ptrtoint ptr %vlan_tci12.i to i32
  call void @__asan_load2_noabort(i32 %599)
  %600 = load i16, ptr %vlan_tci12.i, align 2
  %vlan_tag113.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 6
  %601 = ptrtoint ptr %vlan_tag113.i to i32
  call void @__asan_store2_noabort(i32 %601)
  store i16 %600, ptr %vlan_tag113.i, align 8
  %602 = zext i32 %info.sroa.0.0177 to i64
  call void @__sanitizer_cov_trace_switch(i64 %602, ptr @__sancov_gen_cov_switch_values.775)
  switch i32 %info.sroa.0.0177, label %if.then.i98.hclge_fd_get_user_def_tuple.exit.i_crit_edge [
    i32 1, label %sw.bb.i.i
    i32 2, label %sw.bb2.i.i
    i32 3, label %sw.bb8.i.i
  ]

if.then.i98.hclge_fd_get_user_def_tuple.exit.i_crit_edge: ; preds = %if.then.i98
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_get_user_def_tuple.exit.i

sw.bb.i.i:                                        ; preds = %if.then.i98
  call void @__sanitizer_cov_trace_pc() #18
  %l2_user_def.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 8
  %603 = ptrtoint ptr %l2_user_def.i.i to i32
  call void @__asan_store2_noabort(i32 %603)
  store i16 %info.sroa.7.0173, ptr %l2_user_def.i.i, align 4
  %l2_user_def1.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 8
  %604 = ptrtoint ptr %l2_user_def1.i.i to i32
  call void @__asan_store2_noabort(i32 %604)
  store i16 %info.sroa.11.0169, ptr %l2_user_def1.i.i, align 4
  br label %hclge_fd_get_user_def_tuple.exit.i

sw.bb2.i.i:                                       ; preds = %if.then.i98
  call void @__sanitizer_cov_trace_pc() #18
  %l3_user_def.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 9
  %605 = ptrtoint ptr %l3_user_def.i.i to i32
  call void @__asan_store2_noabort(i32 %605)
  store i16 %info.sroa.7.0173, ptr %l3_user_def.i.i, align 2
  %l3_user_def7.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 9
  %606 = ptrtoint ptr %l3_user_def7.i.i to i32
  call void @__asan_store2_noabort(i32 %606)
  store i16 %info.sroa.11.0169, ptr %l3_user_def7.i.i, align 2
  br label %hclge_fd_get_user_def_tuple.exit.i

sw.bb8.i.i:                                       ; preds = %if.then.i98
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i.i99 = zext i16 %info.sroa.7.0173 to i32
  %shl.i.i = shl nuw i32 %conv.i.i99, 16
  %l4_user_def.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 10
  %607 = ptrtoint ptr %l4_user_def.i.i to i32
  call void @__asan_store4_noabort(i32 %607)
  store i32 %shl.i.i, ptr %l4_user_def.i.i, align 8
  %conv12.i.i = zext i16 %info.sroa.11.0169 to i32
  %shl13.i.i = shl nuw i32 %conv12.i.i, 16
  %l4_user_def15.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 10
  %608 = ptrtoint ptr %l4_user_def15.i.i to i32
  call void @__asan_store4_noabort(i32 %608)
  store i32 %shl13.i.i, ptr %l4_user_def15.i.i, align 8
  br label %hclge_fd_get_user_def_tuple.exit.i

hclge_fd_get_user_def_tuple.exit.i:               ; preds = %sw.bb8.i.i, %sw.bb2.i.i, %sw.bb.i.i, %if.then.i98.hclge_fd_get_user_def_tuple.exit.i_crit_edge
  %609 = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 5
  %610 = ptrtoint ptr %609 to i32
  call void @__asan_store4_noabort(i32 %610)
  store i32 %info.sroa.0.0177, ptr %609, align 8
  %info.sroa.7.0..sroa_idx = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 5, i32 0, i32 0, i32 1
  %611 = ptrtoint ptr %info.sroa.7.0..sroa_idx to i32
  call void @__asan_store2_noabort(i32 %611)
  store i16 %info.sroa.7.0173, ptr %info.sroa.7.0..sroa_idx, align 4
  %info.sroa.11.0..sroa_idx = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 5, i32 0, i32 0, i32 2
  %612 = ptrtoint ptr %info.sroa.11.0..sroa_idx to i32
  call void @__asan_store2_noabort(i32 %612)
  store i16 %info.sroa.11.0169, ptr %info.sroa.11.0..sroa_idx, align 2
  %info.sroa.15.0..sroa_idx = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 5, i32 0, i32 0, i32 3
  %613 = ptrtoint ptr %info.sroa.15.0..sroa_idx to i32
  call void @__asan_store2_noabort(i32 %613)
  store i16 %info.sroa.15.0166, ptr %info.sroa.15.0..sroa_idx, align 8
  %info.sroa.16.0..sroa_idx = getelementptr inbounds i8, ptr %609, i32 10
  %614 = ptrtoint ptr %info.sroa.16.0..sroa_idx to i32
  call void @__asan_store2_noabort(i32 %614)
  store i16 -1, ptr %info.sroa.16.0..sroa_idx, align 2
  br label %if.end.i100

if.end.i100:                                      ; preds = %hclge_fd_get_user_def_tuple.exit.i, %sw.epilog.i.if.end.i100_crit_edge
  %and15.i = and i32 %595, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i)
  %tobool16.not.i = icmp eq i32 %and15.i, 0
  br i1 %tobool16.not.i, label %if.end.i100.if.end26_crit_edge, label %if.then17.i

if.end.i100.if.end26_crit_edge:                   ; preds = %if.end.i100
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

if.then17.i:                                      ; preds = %if.end.i100
  call void @__sanitizer_cov_trace_pc() #18
  %dst_mac.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 1
  %h_dest.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 1
  %615 = ptrtoint ptr %h_dest.i to i32
  call void @__asan_load4_noabort(i32 %615)
  %616 = load i32, ptr %h_dest.i, align 4
  %617 = ptrtoint ptr %dst_mac.i to i32
  call void @__asan_store4_noabort(i32 %617)
  store i32 %616, ptr %dst_mac.i, align 4
  %add.ptr.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 1, i32 4
  %618 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %618)
  %619 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 4
  %620 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_store2_noabort(i32 %620)
  store i16 %619, ptr %add.ptr1.i.i, align 2
  %dst_mac22.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 1
  %h_dest25.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 1
  %621 = ptrtoint ptr %h_dest25.i to i32
  call void @__asan_load4_noabort(i32 %621)
  %622 = load i32, ptr %h_dest25.i, align 4
  %623 = ptrtoint ptr %dst_mac22.i to i32
  call void @__asan_store4_noabort(i32 %623)
  store i32 %622, ptr %dst_mac22.i, align 4
  %add.ptr.i204.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 1, i32 4
  %624 = ptrtoint ptr %add.ptr.i204.i to i32
  call void @__asan_load2_noabort(i32 %624)
  %625 = load i16, ptr %add.ptr.i204.i, align 2
  %add.ptr1.i205.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 1, i32 4
  %626 = ptrtoint ptr %add.ptr1.i205.i to i32
  call void @__asan_store2_noabort(i32 %626)
  store i16 %625, ptr %add.ptr1.i205.i, align 2
  br label %if.end26

if.then25:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %cleanup

if.end26:                                         ; preds = %if.then17.i, %if.end.i100.if.end26_crit_edge
  %627 = ptrtoint ptr %fs10 to i32
  call void @__asan_load4_noabort(i32 %627)
  %628 = load i32, ptr %fs10, align 8
  %flow_type27 = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 4
  %629 = ptrtoint ptr %flow_type27 to i32
  call void @__asan_store4_noabort(i32 %629)
  store i32 %628, ptr %flow_type27, align 4
  %630 = ptrtoint ptr %location.i to i32
  call void @__asan_load4_noabort(i32 %630)
  %631 = load i32, ptr %location.i, align 8
  %conv = trunc i32 %631 to i16
  %location28 = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 8
  %632 = ptrtoint ptr %location28 to i32
  call void @__asan_store2_noabort(i32 %632)
  store i16 %conv, ptr %location28, align 8
  %unused_tuple = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 3
  %633 = ptrtoint ptr %unused_tuple to i32
  call void @__asan_store4_noabort(i32 %633)
  store i32 %unused.24, ptr %unused_tuple, align 8
  %vf_id = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 7
  %634 = ptrtoint ptr %vf_id to i32
  call void @__asan_store2_noabort(i32 %634)
  store i16 %dst_vport_id.0.ph, ptr %vf_id, align 2
  %queue_id = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 6
  %635 = ptrtoint ptr %queue_id to i32
  call void @__asan_store2_noabort(i32 %635)
  store i16 %q_index.0.ph, ptr %queue_id, align 4
  %action29 = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 11
  %636 = ptrtoint ptr %action29 to i32
  call void @__asan_store1_noabort(i32 %636)
  store i8 %action.0.ph, ptr %action29, align 4
  %rule_type = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 9
  %637 = ptrtoint ptr %rule_type to i32
  call void @__asan_store4_noabort(i32 %637)
  store i32 2, ptr %rule_type, align 4
  %call30 = tail call fastcc i32 @hclge_add_fd_entry_common(ptr noundef %5, ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end26.cleanup_crit_edge, label %if.then32

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then32:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then32, %if.end26.cleanup_crit_edge, %if.then25, %if.end18.cleanup_crit_edge, %do.end28.i, %do.end.i76, %do.end33.i.i, %do.end15.i.i, %do.end.i180.i, %do.end40.i, %do.end33.i, %do.end25.i, %do.end51.i.i, %do.end42.i.i, %do.end31.i.i, %do.end.i.i, %do.end.i, %do.end6, %do.end
  %retval.0 = phi i32 [ -95, %if.then25 ], [ -95, %do.end6 ], [ -95, %do.end ], [ -12, %if.end18.cleanup_crit_edge ], [ %call30, %if.then32 ], [ 0, %if.end26.cleanup_crit_edge ], [ -22, %do.end28.i ], [ -22, %do.end.i76 ], [ -22, %do.end31.i.i ], [ -22, %do.end42.i.i ], [ -95, %do.end51.i.i ], [ -95, %do.end.i.i ], [ -95, %do.end33.i.i ], [ -22, %do.end15.i.i ], [ -95, %do.end.i180.i ], [ -95, %do.end40.i ], [ -95, %do.end25.i ], [ -95, %do.end33.i ], [ -22, %do.end.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_del_fd_entry(ptr nocapture noundef readonly %handle, ptr nocapture noundef readonly %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %caps, align 4
  %and1.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %location = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 6
  %10 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %location, align 8
  %rule_num = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 66, i32 2
  %12 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rule_num, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %13)
  %cmp.not = icmp ult i32 %11, %13
  br i1 %cmp.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock) #16
  %fd_active_type = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 75
  %14 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %fd_active_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %15)
  %cmp5 = icmp eq i32 %15, 3
  br i1 %cmp5, label %if.end4.do.end_crit_edge, label %lor.lhs.false

if.end4.do.end_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

lor.lhs.false:                                    ; preds = %if.end4
  %16 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %location, align 8
  %fd_bmap = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 74
  %div3.i = lshr i32 %17, 5
  %arrayidx.i = getelementptr i32, ptr %fd_bmap, i32 %div3.i
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %17, 31
  %20 = shl nuw i32 1, %and.i
  %21 = and i32 %20, %19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool9.not = icmp eq i32 %21, 0
  br i1 %tobool9.not, label %lor.lhs.false.do.end_crit_edge, label %if.end13

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %lor.lhs.false.do.end_crit_edge, %if.end4.do.end_crit_edge
  %22 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  %24 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %location, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.705, i32 noundef %25) #20
  br label %cleanup.sink.split

if.end13:                                         ; preds = %lor.lhs.false
  %call15 = tail call fastcc i32 @hclge_fd_tcam_config(ptr noundef %5, i1 noundef zeroext true, i32 noundef %17, ptr noundef null, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.end13.cleanup.sink.split_crit_edge

if.end13.cleanup.sink.split_crit_edge:            ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end18:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %location, align 8
  %conv = trunc i32 %27 to i16
  tail call fastcc void @hclge_update_fd_list(ptr noundef %5, i32 noundef 3, i16 noundef zeroext %conv, ptr noundef null)
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end18, %if.end13.cleanup.sink.split_crit_edge, %do.end
  %retval.0.ph = phi i32 [ -2, %do.end ], [ %call15, %if.end13.cleanup.sink.split_crit_edge ], [ %call15, %if.end18 ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %hclge_get_vport.exit.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @hclge_get_fd_rule_cnt(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %cmd) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %hclge_get_vport.exit, label %hclge_get_vport.exit.thread

hclge_get_vport.exit:                             ; preds = %entry
  %back = getelementptr i8, ptr %handle, i32 -4
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %5, i32 0, i32 7
  %6 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %caps, align 4
  %and1.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %hclge_get_vport.exit.hclge_is_cls_flower_active.exit_crit_edge

hclge_get_vport.exit.hclge_is_cls_flower_active.exit_crit_edge: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_is_cls_flower_active.exit

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

hclge_get_vport.exit.thread:                      ; preds = %entry
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.i = icmp eq i32 %9, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  %add.ptr9.i11 = getelementptr i8, ptr %handle, i32 %..i
  %back12 = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i11, i32 0, i32 12
  %10 = ptrtoint ptr %back12 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %back12, align 4
  %ae_dev13 = getelementptr inbounds %struct.hclge_dev, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %ae_dev13 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ae_dev13, align 4
  %caps14 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %13, i32 0, i32 7
  %14 = ptrtoint ptr %caps14 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %caps14, align 4
  %and1.i15 = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i15)
  %tobool.not16 = icmp eq i32 %and1.i15, 0
  br i1 %tobool.not16, label %hclge_get_vport.exit.thread.cleanup_crit_edge, label %if.else.i.i

hclge_get_vport.exit.thread.cleanup_crit_edge:    ; preds = %hclge_get_vport.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else.i.i:                                      ; preds = %hclge_get_vport.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %17)
  %cmp.i.i = icmp eq i32 %17, 1
  %..i.i = select i1 %cmp.i.i, i32 -792, i32 -560
  br label %hclge_is_cls_flower_active.exit

hclge_is_cls_flower_active.exit:                  ; preds = %if.else.i.i, %hclge_get_vport.exit.hclge_is_cls_flower_active.exit_crit_edge
  %18 = phi ptr [ %11, %if.else.i.i ], [ %3, %hclge_get_vport.exit.hclge_is_cls_flower_active.exit_crit_edge ]
  %.sink.i.i = phi i32 [ %..i.i, %if.else.i.i ], [ -560, %hclge_get_vport.exit.hclge_is_cls_flower_active.exit_crit_edge ]
  %add.ptr9.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 12
  %19 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %back.i, align 4
  %fd_active_type.i = getelementptr inbounds %struct.hclge_dev, ptr %20, i32 0, i32 75
  %21 = ptrtoint ptr %fd_active_type.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %fd_active_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %22)
  %cmp.i9 = icmp eq i32 %22, 3
  br i1 %cmp.i9, label %hclge_is_cls_flower_active.exit.cleanup_crit_edge, label %if.end

hclge_is_cls_flower_active.exit.cleanup_crit_edge: ; preds = %hclge_is_cls_flower_active.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_is_cls_flower_active.exit
  call void @__sanitizer_cov_trace_pc() #18
  %hclge_fd_rule_num = getelementptr inbounds %struct.hclge_dev, ptr %18, i32 0, i32 69
  %23 = ptrtoint ptr %hclge_fd_rule_num to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %hclge_fd_rule_num, align 4
  %conv = zext i16 %24 to i32
  %25 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 4
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %conv, ptr %25, align 8
  %rule_num = getelementptr inbounds %struct.hclge_dev, ptr %18, i32 0, i32 66, i32 2
  %27 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rule_num, align 4
  %conv3 = zext i32 %28 to i64
  %data = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 2
  %29 = ptrtoint ptr %data to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %conv3, ptr %data, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %hclge_is_cls_flower_active.exit.cleanup_crit_edge, %hclge_get_vport.exit.thread.cleanup_crit_edge, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -95, %hclge_is_cls_flower_active.exit.cleanup_crit_edge ], [ -95, %hclge_get_vport.exit.cleanup_crit_edge ], [ -95, %hclge_get_vport.exit.thread.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_fd_rule_info(ptr nocapture noundef readonly %handle, ptr nocapture noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %caps, align 4
  %and1.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %fs2 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock) #16
  %location = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 6
  %10 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %location, align 8
  %conv = trunc i32 %11 to i16
  %fd_rule_list.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 67
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.else.i52.for.cond.i_crit_edge, %if.end
  %rule.0.in.i = phi ptr [ %fd_rule_list.i, %if.end ], [ %rule.0.i, %if.else.i52.for.cond.i_crit_edge ]
  %12 = ptrtoint ptr %rule.0.in.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %rule.0.i = load ptr, ptr %rule.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %rule.0.i, null
  br i1 %tobool2.not.i, label %for.cond.i.cleanup.sink.split_crit_edge, label %land.rhs.i

for.cond.i.cleanup.sink.split_crit_edge:          ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

land.rhs.i:                                       ; preds = %for.cond.i
  %location5.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 8
  %13 = ptrtoint ptr %location5.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %location5.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %14, i16 %conv)
  %cmp.i51 = icmp eq i16 %14, %conv
  br i1 %cmp.i51, label %if.end7, label %if.else.i52

if.else.i52:                                      ; preds = %land.rhs.i
  %cmp11.i = icmp ugt i16 %14, %conv
  br i1 %cmp11.i, label %if.else.i52.cleanup.sink.split_crit_edge, label %if.else.i52.for.cond.i_crit_edge

if.else.i52.for.cond.i_crit_edge:                 ; preds = %if.else.i52
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

if.else.i52.cleanup.sink.split_crit_edge:         ; preds = %if.else.i52
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end7:                                          ; preds = %land.rhs.i
  %flow_type = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 4
  %15 = ptrtoint ptr %flow_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flow_type, align 4
  %17 = ptrtoint ptr %fs2 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %fs2, align 8
  %and = and i32 %16, 1073741823
  %18 = zext i32 %and to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.776)
  switch i32 %and, label %sw.default [
    i32 3, label %if.end7.sw.bb_crit_edge
    i32 1, label %if.end7.sw.bb_crit_edge186
    i32 2, label %if.end7.sw.bb_crit_edge187
    i32 13, label %sw.bb10
    i32 7, label %if.end7.sw.bb13_crit_edge
    i32 5, label %if.end7.sw.bb13_crit_edge188
    i32 6, label %if.end7.sw.bb13_crit_edge189
    i32 14, label %sw.bb16
  ]

if.end7.sw.bb13_crit_edge189:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb13

if.end7.sw.bb13_crit_edge188:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb13

if.end7.sw.bb13_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb13

if.end7.sw.bb_crit_edge187:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

if.end7.sw.bb_crit_edge186:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

if.end7.sw.bb_crit_edge:                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

sw.bb:                                            ; preds = %if.end7.sw.bb_crit_edge, %if.end7.sw.bb_crit_edge186, %if.end7.sw.bb_crit_edge187
  %h_u = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %m_u = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %arrayidx.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2, i32 3
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx.i, align 4
  %21 = ptrtoint ptr %h_u to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %h_u, align 4
  %unused_tuple.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 3
  %22 = ptrtoint ptr %unused_tuple.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %unused_tuple.i, align 4
  %and.i = and i32 %23, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i53 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i53, label %cond.false.i, label %sw.bb.cond.end.i_crit_edge

sw.bb.cond.end.i_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i

cond.false.i:                                     ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx2.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2, i32 3
  %24 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx2.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %sw.bb.cond.end.i_crit_edge
  %cond.i = phi i32 [ %25, %cond.false.i ], [ 0, %sw.bb.cond.end.i_crit_edge ]
  %26 = ptrtoint ptr %m_u to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %cond.i, ptr %m_u, align 4
  %arrayidx5.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3, i32 3
  %27 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx5.i, align 4
  %ip4dst.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %29 = ptrtoint ptr %ip4dst.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %ip4dst.i, align 4
  %30 = ptrtoint ptr %unused_tuple.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %unused_tuple.i, align 4
  %and7.i = and i32 %31, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %cond.false10.i, label %cond.end.i.cond.end14.i_crit_edge

cond.end.i.cond.end14.i_crit_edge:                ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end14.i

cond.false10.i:                                   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx13.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3, i32 3
  %32 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx13.i, align 4
  br label %cond.end14.i

cond.end14.i:                                     ; preds = %cond.false10.i, %cond.end.i.cond.end14.i_crit_edge
  %cond15.i = phi i32 [ %33, %cond.false10.i ], [ 0, %cond.end.i.cond.end14.i_crit_edge ]
  %ip4dst16.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %34 = ptrtoint ptr %ip4dst16.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %cond15.i, ptr %ip4dst16.i, align 4
  %src_port.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 4
  %35 = ptrtoint ptr %src_port.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %src_port.i, align 4
  %psrc.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %37 = ptrtoint ptr %psrc.i to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %36, ptr %psrc.i, align 4
  %38 = ptrtoint ptr %unused_tuple.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %unused_tuple.i, align 4
  %and19.i = and i32 %39, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i)
  %tobool20.not.i = icmp eq i32 %and19.i, 0
  br i1 %tobool20.not.i, label %cond.false22.i, label %cond.end14.i.cond.end25.i_crit_edge

cond.end14.i.cond.end25.i_crit_edge:              ; preds = %cond.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end25.i

cond.false22.i:                                   ; preds = %cond.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  %src_port24.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 4
  %40 = ptrtoint ptr %src_port24.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %src_port24.i, align 4
  br label %cond.end25.i

cond.end25.i:                                     ; preds = %cond.false22.i, %cond.end14.i.cond.end25.i_crit_edge
  %cond26.i = phi i16 [ %41, %cond.false22.i ], [ 0, %cond.end14.i.cond.end25.i_crit_edge ]
  %psrc28.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %42 = ptrtoint ptr %psrc28.i to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %cond26.i, ptr %psrc28.i, align 4
  %dst_port.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 5
  %43 = ptrtoint ptr %dst_port.i to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %dst_port.i, align 2
  %pdst.i = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %h_u, i32 0, i32 3
  %45 = ptrtoint ptr %pdst.i to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %44, ptr %pdst.i, align 2
  %46 = ptrtoint ptr %unused_tuple.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %unused_tuple.i, align 4
  %and31.i = and i32 %47, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31.i)
  %tobool32.not.i = icmp eq i32 %and31.i, 0
  br i1 %tobool32.not.i, label %cond.false34.i, label %cond.end25.i.cond.end38.i_crit_edge

cond.end25.i.cond.end38.i_crit_edge:              ; preds = %cond.end25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end38.i

cond.false34.i:                                   ; preds = %cond.end25.i
  call void @__sanitizer_cov_trace_pc() #18
  %dst_port36.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 5
  %48 = ptrtoint ptr %dst_port36.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %dst_port36.i, align 2
  br label %cond.end38.i

cond.end38.i:                                     ; preds = %cond.false34.i, %cond.end25.i.cond.end38.i_crit_edge
  %cond39.i = phi i16 [ %49, %cond.false34.i ], [ 0, %cond.end25.i.cond.end38.i_crit_edge ]
  %pdst41.i = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %m_u, i32 0, i32 3
  %50 = ptrtoint ptr %pdst41.i to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %cond39.i, ptr %pdst41.i, align 2
  %ip_tos.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 11
  %51 = ptrtoint ptr %ip_tos.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %ip_tos.i, align 4
  %tos.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %53 = ptrtoint ptr %tos.i to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %52, ptr %tos.i, align 4
  %54 = ptrtoint ptr %unused_tuple.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %unused_tuple.i, align 4
  %and44.i = and i32 %55, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44.i)
  %tobool45.not.i = icmp eq i32 %and44.i, 0
  br i1 %tobool45.not.i, label %cond.false47.i, label %cond.end38.i.hclge_fd_get_tcpip4_info.exit_crit_edge

cond.end38.i.hclge_fd_get_tcpip4_info.exit_crit_edge: ; preds = %cond.end38.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_get_tcpip4_info.exit

cond.false47.i:                                   ; preds = %cond.end38.i
  call void @__sanitizer_cov_trace_pc() #18
  %ip_tos49.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 11
  %56 = ptrtoint ptr %ip_tos49.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %ip_tos49.i, align 4
  br label %hclge_fd_get_tcpip4_info.exit

hclge_fd_get_tcpip4_info.exit:                    ; preds = %cond.false47.i, %cond.end38.i.hclge_fd_get_tcpip4_info.exit_crit_edge
  %cond52.i = phi i8 [ %57, %cond.false47.i ], [ 0, %cond.end38.i.hclge_fd_get_tcpip4_info.exit_crit_edge ]
  %tos54.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %58 = ptrtoint ptr %tos54.i to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %cond52.i, ptr %tos54.i, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.end7
  %h_u11 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %m_u12 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %arrayidx.i54 = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2, i32 3
  %59 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx.i54, align 4
  %61 = ptrtoint ptr %h_u11 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %h_u11, align 4
  %unused_tuple.i55 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 3
  %62 = ptrtoint ptr %unused_tuple.i55 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %unused_tuple.i55, align 4
  %and.i56 = and i32 %63, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i56)
  %tobool.not.i57 = icmp eq i32 %and.i56, 0
  br i1 %tobool.not.i57, label %cond.false.i59, label %sw.bb10.cond.end.i65_crit_edge

sw.bb10.cond.end.i65_crit_edge:                   ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i65

cond.false.i59:                                   ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx2.i58 = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2, i32 3
  %64 = ptrtoint ptr %arrayidx2.i58 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx2.i58, align 4
  br label %cond.end.i65

cond.end.i65:                                     ; preds = %cond.false.i59, %sw.bb10.cond.end.i65_crit_edge
  %cond.i60 = phi i32 [ %65, %cond.false.i59 ], [ 0, %sw.bb10.cond.end.i65_crit_edge ]
  %66 = ptrtoint ptr %m_u12 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %cond.i60, ptr %m_u12, align 4
  %arrayidx5.i61 = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3, i32 3
  %67 = ptrtoint ptr %arrayidx5.i61 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx5.i61, align 4
  %ip4dst.i62 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %69 = ptrtoint ptr %ip4dst.i62 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %ip4dst.i62, align 4
  %70 = ptrtoint ptr %unused_tuple.i55 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %unused_tuple.i55, align 4
  %and7.i63 = and i32 %71, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i63)
  %tobool8.not.i64 = icmp eq i32 %and7.i63, 0
  br i1 %tobool8.not.i64, label %cond.false10.i67, label %cond.end.i65.cond.end14.i74_crit_edge

cond.end.i65.cond.end14.i74_crit_edge:            ; preds = %cond.end.i65
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end14.i74

cond.false10.i67:                                 ; preds = %cond.end.i65
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx13.i66 = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3, i32 3
  %72 = ptrtoint ptr %arrayidx13.i66 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx13.i66, align 4
  br label %cond.end14.i74

cond.end14.i74:                                   ; preds = %cond.false10.i67, %cond.end.i65.cond.end14.i74_crit_edge
  %cond15.i68 = phi i32 [ %73, %cond.false10.i67 ], [ 0, %cond.end.i65.cond.end14.i74_crit_edge ]
  %ip4dst16.i69 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %74 = ptrtoint ptr %ip4dst16.i69 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %cond15.i68, ptr %ip4dst16.i69, align 4
  %ip_tos.i70 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 11
  %75 = ptrtoint ptr %ip_tos.i70 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %ip_tos.i70, align 4
  %tos.i71 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %77 = ptrtoint ptr %tos.i71 to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 %76, ptr %tos.i71, align 4
  %78 = ptrtoint ptr %unused_tuple.i55 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %unused_tuple.i55, align 4
  %and19.i72 = and i32 %79, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i72)
  %tobool20.not.i73 = icmp eq i32 %and19.i72, 0
  br i1 %tobool20.not.i73, label %cond.false22.i75, label %cond.end14.i74.cond.end25.i79_crit_edge

cond.end14.i74.cond.end25.i79_crit_edge:          ; preds = %cond.end14.i74
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end25.i79

cond.false22.i75:                                 ; preds = %cond.end14.i74
  call void @__sanitizer_cov_trace_pc() #18
  %ip_tos24.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 11
  %80 = ptrtoint ptr %ip_tos24.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %ip_tos24.i, align 4
  br label %cond.end25.i79

cond.end25.i79:                                   ; preds = %cond.false22.i75, %cond.end14.i74.cond.end25.i79_crit_edge
  %cond26.i76 = phi i8 [ %81, %cond.false22.i75 ], [ 0, %cond.end14.i74.cond.end25.i79_crit_edge ]
  %tos28.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %82 = ptrtoint ptr %tos28.i to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 %cond26.i76, ptr %tos28.i, align 4
  %ip_proto.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 12
  %83 = ptrtoint ptr %ip_proto.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %ip_proto.i, align 1
  %proto.i = getelementptr inbounds %struct.ethtool_usrip4_spec, ptr %h_u11, i32 0, i32 5
  %85 = ptrtoint ptr %proto.i to i32
  call void @__asan_store1_noabort(i32 %85)
  store i8 %84, ptr %proto.i, align 2
  %86 = ptrtoint ptr %unused_tuple.i55 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %unused_tuple.i55, align 4
  %and31.i77 = and i32 %87, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31.i77)
  %tobool32.not.i78 = icmp eq i32 %and31.i77, 0
  br i1 %tobool32.not.i78, label %cond.false34.i80, label %cond.end25.i79.hclge_fd_get_ip4_info.exit_crit_edge

cond.end25.i79.hclge_fd_get_ip4_info.exit_crit_edge: ; preds = %cond.end25.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_get_ip4_info.exit

cond.false34.i80:                                 ; preds = %cond.end25.i79
  call void @__sanitizer_cov_trace_pc() #18
  %ip_proto36.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 12
  %88 = ptrtoint ptr %ip_proto36.i to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %ip_proto36.i, align 1
  br label %hclge_fd_get_ip4_info.exit

hclge_fd_get_ip4_info.exit:                       ; preds = %cond.false34.i80, %cond.end25.i79.hclge_fd_get_ip4_info.exit_crit_edge
  %cond39.i81 = phi i8 [ %89, %cond.false34.i80 ], [ 0, %cond.end25.i79.hclge_fd_get_ip4_info.exit_crit_edge ]
  %proto41.i = getelementptr inbounds %struct.ethtool_usrip4_spec, ptr %m_u12, i32 0, i32 5
  %90 = ptrtoint ptr %proto41.i to i32
  call void @__asan_store1_noabort(i32 %90)
  store i8 %cond39.i81, ptr %proto41.i, align 2
  %ip_ver.i = getelementptr inbounds %struct.ethtool_usrip4_spec, ptr %h_u11, i32 0, i32 4
  %91 = ptrtoint ptr %ip_ver.i to i32
  call void @__asan_store1_noabort(i32 %91)
  store i8 1, ptr %ip_ver.i, align 1
  br label %sw.epilog

sw.bb13:                                          ; preds = %if.end7.sw.bb13_crit_edge, %if.end7.sw.bb13_crit_edge188, %if.end7.sw.bb13_crit_edge189
  %h_u14 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %m_u15 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %src_ip.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2
  %92 = ptrtoint ptr %src_ip.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %src_ip.i, align 4
  %94 = ptrtoint ptr %h_u14 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %93, ptr %h_u14, align 4
  %arrayidx.1.i.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2, i32 1
  %95 = ptrtoint ptr %arrayidx.1.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %arrayidx.1.i.i, align 4
  %arrayidx1.1.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %97 = ptrtoint ptr %arrayidx1.1.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %96, ptr %arrayidx1.1.i.i, align 4
  %arrayidx.2.i.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2, i32 2
  %98 = ptrtoint ptr %arrayidx.2.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx.2.i.i, align 4
  %arrayidx1.2.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %100 = ptrtoint ptr %arrayidx1.2.i.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %99, ptr %arrayidx1.2.i.i, align 4
  %arrayidx.3.i.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2, i32 3
  %101 = ptrtoint ptr %arrayidx.3.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %arrayidx.3.i.i, align 4
  %arrayidx1.3.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %103 = ptrtoint ptr %arrayidx1.3.i.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %102, ptr %arrayidx1.3.i.i, align 4
  %ip6dst.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1
  %dst_ip.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3
  %104 = ptrtoint ptr %dst_ip.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %dst_ip.i, align 4
  %106 = ptrtoint ptr %ip6dst.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %105, ptr %ip6dst.i, align 4
  %arrayidx.1.i82.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3, i32 1
  %107 = ptrtoint ptr %arrayidx.1.i82.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %arrayidx.1.i82.i, align 4
  %arrayidx1.1.i83.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 1
  %109 = ptrtoint ptr %arrayidx1.1.i83.i to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %108, ptr %arrayidx1.1.i83.i, align 4
  %arrayidx.2.i84.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3, i32 2
  %110 = ptrtoint ptr %arrayidx.2.i84.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %arrayidx.2.i84.i, align 4
  %arrayidx1.2.i85.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 2
  %112 = ptrtoint ptr %arrayidx1.2.i85.i to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 %111, ptr %arrayidx1.2.i85.i, align 4
  %arrayidx.3.i86.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3, i32 3
  %113 = ptrtoint ptr %arrayidx.3.i86.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %arrayidx.3.i86.i, align 4
  %arrayidx1.3.i87.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 3
  %115 = ptrtoint ptr %arrayidx1.3.i87.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 %114, ptr %arrayidx1.3.i87.i, align 4
  %unused_tuple.i83 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 3
  %116 = ptrtoint ptr %unused_tuple.i83 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %unused_tuple.i83, align 4
  %and.i84 = and i32 %117, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i84)
  %tobool.not.i85 = icmp eq i32 %and.i84, 0
  br i1 %tobool.not.i85, label %if.else.i86, label %if.then.i

if.then.i:                                        ; preds = %sw.bb13
  call void @__sanitizer_cov_trace_pc() #18
  %118 = call ptr @memset(ptr %m_u15, i32 0, i32 16)
  br label %if.end.i

if.else.i86:                                      ; preds = %sw.bb13
  call void @__sanitizer_cov_trace_pc() #18
  %src_ip9.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2
  %119 = ptrtoint ptr %src_ip9.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %src_ip9.i, align 4
  %121 = ptrtoint ptr %m_u15 to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 %120, ptr %m_u15, align 4
  %arrayidx.1.i88.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2, i32 1
  %122 = ptrtoint ptr %arrayidx.1.i88.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %arrayidx.1.i88.i, align 4
  %arrayidx1.1.i89.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %124 = ptrtoint ptr %arrayidx1.1.i89.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store i32 %123, ptr %arrayidx1.1.i89.i, align 4
  %arrayidx.2.i90.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2, i32 2
  %125 = ptrtoint ptr %arrayidx.2.i90.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %arrayidx.2.i90.i, align 4
  %arrayidx1.2.i91.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %127 = ptrtoint ptr %arrayidx1.2.i91.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %126, ptr %arrayidx1.2.i91.i, align 4
  %arrayidx.3.i92.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2, i32 3
  %128 = ptrtoint ptr %arrayidx.3.i92.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx.3.i92.i, align 4
  %arrayidx1.3.i93.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %130 = ptrtoint ptr %arrayidx1.3.i93.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 %129, ptr %arrayidx1.3.i93.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i86, %if.then.i
  %131 = ptrtoint ptr %unused_tuple.i83 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %unused_tuple.i83, align 4
  %and12.i = and i32 %132, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i)
  %tobool13.not.i = icmp eq i32 %and12.i, 0
  %ip6dst18.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1
  br i1 %tobool13.not.i, label %if.else17.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %133 = call ptr @memset(ptr %ip6dst18.i, i32 0, i32 16)
  br label %if.end23.i

if.else17.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %dst_ip21.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3
  %134 = ptrtoint ptr %dst_ip21.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %dst_ip21.i, align 4
  %136 = ptrtoint ptr %ip6dst18.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store i32 %135, ptr %ip6dst18.i, align 4
  %arrayidx.1.i94.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3, i32 1
  %137 = ptrtoint ptr %arrayidx.1.i94.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %arrayidx.1.i94.i, align 4
  %arrayidx1.1.i95.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 1
  %139 = ptrtoint ptr %arrayidx1.1.i95.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 %138, ptr %arrayidx1.1.i95.i, align 4
  %arrayidx.2.i96.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3, i32 2
  %140 = ptrtoint ptr %arrayidx.2.i96.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %arrayidx.2.i96.i, align 4
  %arrayidx1.2.i97.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 2
  %142 = ptrtoint ptr %arrayidx1.2.i97.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %141, ptr %arrayidx1.2.i97.i, align 4
  %arrayidx.3.i98.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3, i32 3
  %143 = ptrtoint ptr %arrayidx.3.i98.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %arrayidx.3.i98.i, align 4
  %arrayidx1.3.i99.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 3
  %145 = ptrtoint ptr %arrayidx1.3.i99.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 %144, ptr %arrayidx1.3.i99.i, align 4
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.else17.i, %if.then14.i
  %ip_tos.i87 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 11
  %146 = ptrtoint ptr %ip_tos.i87 to i32
  call void @__asan_load1_noabort(i32 %146)
  %147 = load i8, ptr %ip_tos.i87, align 4
  %tclass.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 4
  %148 = ptrtoint ptr %tclass.i to i32
  call void @__asan_store1_noabort(i32 %148)
  store i8 %147, ptr %tclass.i, align 4
  %149 = ptrtoint ptr %unused_tuple.i83 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %unused_tuple.i83, align 4
  %and26.i = and i32 %150, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i)
  %tobool27.not.i = icmp eq i32 %and26.i, 0
  br i1 %tobool27.not.i, label %cond.false.i88, label %if.end23.i.cond.end.i92_crit_edge

if.end23.i.cond.end.i92_crit_edge:                ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i92

cond.false.i88:                                   ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #18
  %ip_tos29.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 11
  %151 = ptrtoint ptr %ip_tos29.i to i32
  call void @__asan_load1_noabort(i32 %151)
  %152 = load i8, ptr %ip_tos29.i, align 4
  br label %cond.end.i92

cond.end.i92:                                     ; preds = %cond.false.i88, %if.end23.i.cond.end.i92_crit_edge
  %cond.i89 = phi i8 [ %152, %cond.false.i88 ], [ 0, %if.end23.i.cond.end.i92_crit_edge ]
  %tclass31.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 4
  %153 = ptrtoint ptr %tclass31.i to i32
  call void @__asan_store1_noabort(i32 %153)
  store i8 %cond.i89, ptr %tclass31.i, align 4
  %src_port.i90 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 4
  %154 = ptrtoint ptr %src_port.i90 to i32
  call void @__asan_load2_noabort(i32 %154)
  %155 = load i16, ptr %src_port.i90, align 4
  %psrc.i91 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 2
  %156 = ptrtoint ptr %psrc.i91 to i32
  call void @__asan_store2_noabort(i32 %156)
  store i16 %155, ptr %psrc.i91, align 4
  %157 = ptrtoint ptr %unused_tuple.i83 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %unused_tuple.i83, align 4
  %and34.i = and i32 %158, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34.i)
  %tobool35.not.i = icmp eq i32 %and34.i, 0
  br i1 %tobool35.not.i, label %cond.false37.i, label %cond.end.i92.cond.end41.i_crit_edge

cond.end.i92.cond.end41.i_crit_edge:              ; preds = %cond.end.i92
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end41.i

cond.false37.i:                                   ; preds = %cond.end.i92
  call void @__sanitizer_cov_trace_pc() #18
  %src_port39.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 4
  %159 = ptrtoint ptr %src_port39.i to i32
  call void @__asan_load2_noabort(i32 %159)
  %160 = load i16, ptr %src_port39.i, align 4
  br label %cond.end41.i

cond.end41.i:                                     ; preds = %cond.false37.i, %cond.end.i92.cond.end41.i_crit_edge
  %cond42.i = phi i16 [ %160, %cond.false37.i ], [ 0, %cond.end.i92.cond.end41.i_crit_edge ]
  %psrc44.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 2
  %161 = ptrtoint ptr %psrc44.i to i32
  call void @__asan_store2_noabort(i32 %161)
  store i16 %cond42.i, ptr %psrc44.i, align 4
  %dst_port.i93 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 5
  %162 = ptrtoint ptr %dst_port.i93 to i32
  call void @__asan_load2_noabort(i32 %162)
  %163 = load i16, ptr %dst_port.i93, align 2
  %pdst.i94 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 3
  %164 = ptrtoint ptr %pdst.i94 to i32
  call void @__asan_store2_noabort(i32 %164)
  store i16 %163, ptr %pdst.i94, align 2
  %165 = ptrtoint ptr %unused_tuple.i83 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %unused_tuple.i83, align 4
  %and47.i = and i32 %166, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47.i)
  %tobool48.not.i = icmp eq i32 %and47.i, 0
  br i1 %tobool48.not.i, label %cond.false50.i, label %cond.end41.i.hclge_fd_get_tcpip6_info.exit_crit_edge

cond.end41.i.hclge_fd_get_tcpip6_info.exit_crit_edge: ; preds = %cond.end41.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_get_tcpip6_info.exit

cond.false50.i:                                   ; preds = %cond.end41.i
  call void @__sanitizer_cov_trace_pc() #18
  %dst_port52.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 5
  %167 = ptrtoint ptr %dst_port52.i to i32
  call void @__asan_load2_noabort(i32 %167)
  %168 = load i16, ptr %dst_port52.i, align 2
  br label %hclge_fd_get_tcpip6_info.exit

hclge_fd_get_tcpip6_info.exit:                    ; preds = %cond.false50.i, %cond.end41.i.hclge_fd_get_tcpip6_info.exit_crit_edge
  %cond55.i = phi i16 [ %168, %cond.false50.i ], [ 0, %cond.end41.i.hclge_fd_get_tcpip6_info.exit_crit_edge ]
  %pdst57.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 3
  %169 = ptrtoint ptr %pdst57.i to i32
  call void @__asan_store2_noabort(i32 %169)
  store i16 %cond55.i, ptr %pdst57.i, align 2
  br label %sw.epilog

sw.bb16:                                          ; preds = %if.end7
  %h_u17 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %m_u18 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %src_ip.i95 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2
  %170 = ptrtoint ptr %src_ip.i95 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %src_ip.i95, align 4
  %172 = ptrtoint ptr %h_u17 to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %171, ptr %h_u17, align 4
  %arrayidx.1.i.i96 = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2, i32 1
  %173 = ptrtoint ptr %arrayidx.1.i.i96 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %arrayidx.1.i.i96, align 4
  %arrayidx1.1.i.i97 = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %175 = ptrtoint ptr %arrayidx1.1.i.i97 to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 %174, ptr %arrayidx1.1.i.i97, align 4
  %arrayidx.2.i.i98 = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2, i32 2
  %176 = ptrtoint ptr %arrayidx.2.i.i98 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %arrayidx.2.i.i98, align 4
  %arrayidx1.2.i.i99 = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %178 = ptrtoint ptr %arrayidx1.2.i.i99 to i32
  call void @__asan_store4_noabort(i32 %178)
  store i32 %177, ptr %arrayidx1.2.i.i99, align 4
  %arrayidx.3.i.i100 = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 2, i32 3
  %179 = ptrtoint ptr %arrayidx.3.i.i100 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %arrayidx.3.i.i100, align 4
  %arrayidx1.3.i.i101 = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %181 = ptrtoint ptr %arrayidx1.3.i.i101 to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 %180, ptr %arrayidx1.3.i.i101, align 4
  %ip6dst.i102 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1
  %dst_ip.i103 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3
  %182 = ptrtoint ptr %dst_ip.i103 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %dst_ip.i103, align 4
  %184 = ptrtoint ptr %ip6dst.i102 to i32
  call void @__asan_store4_noabort(i32 %184)
  store i32 %183, ptr %ip6dst.i102, align 4
  %arrayidx.1.i64.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3, i32 1
  %185 = ptrtoint ptr %arrayidx.1.i64.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %arrayidx.1.i64.i, align 4
  %arrayidx1.1.i65.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 1
  %187 = ptrtoint ptr %arrayidx1.1.i65.i to i32
  call void @__asan_store4_noabort(i32 %187)
  store i32 %186, ptr %arrayidx1.1.i65.i, align 4
  %arrayidx.2.i66.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3, i32 2
  %188 = ptrtoint ptr %arrayidx.2.i66.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %arrayidx.2.i66.i, align 4
  %arrayidx1.2.i67.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 2
  %190 = ptrtoint ptr %arrayidx1.2.i67.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 %189, ptr %arrayidx1.2.i67.i, align 4
  %arrayidx.3.i68.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 3, i32 3
  %191 = ptrtoint ptr %arrayidx.3.i68.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %arrayidx.3.i68.i, align 4
  %arrayidx1.3.i69.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 1, i32 3
  %193 = ptrtoint ptr %arrayidx1.3.i69.i to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %192, ptr %arrayidx1.3.i69.i, align 4
  %unused_tuple.i104 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 3
  %194 = ptrtoint ptr %unused_tuple.i104 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %unused_tuple.i104, align 4
  %and.i105 = and i32 %195, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i105)
  %tobool.not.i106 = icmp eq i32 %and.i105, 0
  br i1 %tobool.not.i106, label %if.else.i109, label %if.then.i107

if.then.i107:                                     ; preds = %sw.bb16
  call void @__sanitizer_cov_trace_pc() #18
  %196 = call ptr @memset(ptr %m_u18, i32 0, i32 16)
  br label %if.end.i113

if.else.i109:                                     ; preds = %sw.bb16
  call void @__sanitizer_cov_trace_pc() #18
  %src_ip9.i108 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2
  %197 = ptrtoint ptr %src_ip9.i108 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %src_ip9.i108, align 4
  %199 = ptrtoint ptr %m_u18 to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 %198, ptr %m_u18, align 4
  %arrayidx.1.i70.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2, i32 1
  %200 = ptrtoint ptr %arrayidx.1.i70.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %arrayidx.1.i70.i, align 4
  %arrayidx1.1.i71.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %202 = ptrtoint ptr %arrayidx1.1.i71.i to i32
  call void @__asan_store4_noabort(i32 %202)
  store i32 %201, ptr %arrayidx1.1.i71.i, align 4
  %arrayidx.2.i72.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2, i32 2
  %203 = ptrtoint ptr %arrayidx.2.i72.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %arrayidx.2.i72.i, align 4
  %arrayidx1.2.i73.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 2
  %205 = ptrtoint ptr %arrayidx1.2.i73.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %204, ptr %arrayidx1.2.i73.i, align 4
  %arrayidx.3.i74.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 2, i32 3
  %206 = ptrtoint ptr %arrayidx.3.i74.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %arrayidx.3.i74.i, align 4
  %arrayidx1.3.i75.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %208 = ptrtoint ptr %arrayidx1.3.i75.i to i32
  call void @__asan_store4_noabort(i32 %208)
  store i32 %207, ptr %arrayidx1.3.i75.i, align 4
  br label %if.end.i113

if.end.i113:                                      ; preds = %if.else.i109, %if.then.i107
  %209 = ptrtoint ptr %unused_tuple.i104 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %unused_tuple.i104, align 4
  %and12.i110 = and i32 %210, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i110)
  %tobool13.not.i111 = icmp eq i32 %and12.i110, 0
  %ip6dst18.i112 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1
  br i1 %tobool13.not.i111, label %if.else17.i116, label %if.then14.i114

if.then14.i114:                                   ; preds = %if.end.i113
  call void @__sanitizer_cov_trace_pc() #18
  %211 = call ptr @memset(ptr %ip6dst18.i112, i32 0, i32 16)
  br label %if.end23.i121

if.else17.i116:                                   ; preds = %if.end.i113
  call void @__sanitizer_cov_trace_pc() #18
  %dst_ip21.i115 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3
  %212 = ptrtoint ptr %dst_ip21.i115 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %dst_ip21.i115, align 4
  %214 = ptrtoint ptr %ip6dst18.i112 to i32
  call void @__asan_store4_noabort(i32 %214)
  store i32 %213, ptr %ip6dst18.i112, align 4
  %arrayidx.1.i76.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3, i32 1
  %215 = ptrtoint ptr %arrayidx.1.i76.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %arrayidx.1.i76.i, align 4
  %arrayidx1.1.i77.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 1
  %217 = ptrtoint ptr %arrayidx1.1.i77.i to i32
  call void @__asan_store4_noabort(i32 %217)
  store i32 %216, ptr %arrayidx1.1.i77.i, align 4
  %arrayidx.2.i78.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3, i32 2
  %218 = ptrtoint ptr %arrayidx.2.i78.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %arrayidx.2.i78.i, align 4
  %arrayidx1.2.i79.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 2
  %220 = ptrtoint ptr %arrayidx1.2.i79.i to i32
  call void @__asan_store4_noabort(i32 %220)
  store i32 %219, ptr %arrayidx1.2.i79.i, align 4
  %arrayidx.3.i80.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 3, i32 3
  %221 = ptrtoint ptr %arrayidx.3.i80.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %arrayidx.3.i80.i, align 4
  %arrayidx1.3.i81.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 1, i32 3
  %223 = ptrtoint ptr %arrayidx1.3.i81.i to i32
  call void @__asan_store4_noabort(i32 %223)
  store i32 %222, ptr %arrayidx1.3.i81.i, align 4
  br label %if.end23.i121

if.end23.i121:                                    ; preds = %if.else17.i116, %if.then14.i114
  %ip_tos.i117 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 11
  %224 = ptrtoint ptr %ip_tos.i117 to i32
  call void @__asan_load1_noabort(i32 %224)
  %225 = load i8, ptr %ip_tos.i117, align 4
  %tclass.i118 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 4
  %226 = ptrtoint ptr %tclass.i118 to i32
  call void @__asan_store1_noabort(i32 %226)
  store i8 %225, ptr %tclass.i118, align 4
  %227 = ptrtoint ptr %unused_tuple.i104 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %unused_tuple.i104, align 4
  %and26.i119 = and i32 %228, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i119)
  %tobool27.not.i120 = icmp eq i32 %and26.i119, 0
  br i1 %tobool27.not.i120, label %cond.false.i123, label %if.end23.i121.cond.end.i129_crit_edge

if.end23.i121.cond.end.i129_crit_edge:            ; preds = %if.end23.i121
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i129

cond.false.i123:                                  ; preds = %if.end23.i121
  call void @__sanitizer_cov_trace_pc() #18
  %ip_tos29.i122 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 11
  %229 = ptrtoint ptr %ip_tos29.i122 to i32
  call void @__asan_load1_noabort(i32 %229)
  %230 = load i8, ptr %ip_tos29.i122, align 4
  br label %cond.end.i129

cond.end.i129:                                    ; preds = %cond.false.i123, %if.end23.i121.cond.end.i129_crit_edge
  %cond.i124 = phi i8 [ %230, %cond.false.i123 ], [ 0, %if.end23.i121.cond.end.i129_crit_edge ]
  %tclass31.i125 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 4
  %231 = ptrtoint ptr %tclass31.i125 to i32
  call void @__asan_store1_noabort(i32 %231)
  store i8 %cond.i124, ptr %tclass31.i125, align 4
  %ip_proto.i126 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 12
  %232 = ptrtoint ptr %ip_proto.i126 to i32
  call void @__asan_load1_noabort(i32 %232)
  %233 = load i8, ptr %ip_proto.i126, align 1
  %l4_proto.i = getelementptr inbounds %struct.ethtool_usrip6_spec, ptr %h_u17, i32 0, i32 4
  %234 = ptrtoint ptr %l4_proto.i to i32
  call void @__asan_store1_noabort(i32 %234)
  store i8 %233, ptr %l4_proto.i, align 1
  %235 = ptrtoint ptr %unused_tuple.i104 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %unused_tuple.i104, align 4
  %and34.i127 = and i32 %236, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34.i127)
  %tobool35.not.i128 = icmp eq i32 %and34.i127, 0
  br i1 %tobool35.not.i128, label %cond.false37.i130, label %cond.end.i129.hclge_fd_get_ip6_info.exit_crit_edge

cond.end.i129.hclge_fd_get_ip6_info.exit_crit_edge: ; preds = %cond.end.i129
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_get_ip6_info.exit

cond.false37.i130:                                ; preds = %cond.end.i129
  call void @__sanitizer_cov_trace_pc() #18
  %ip_proto39.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 12
  %237 = ptrtoint ptr %ip_proto39.i to i32
  call void @__asan_load1_noabort(i32 %237)
  %238 = load i8, ptr %ip_proto39.i, align 1
  br label %hclge_fd_get_ip6_info.exit

hclge_fd_get_ip6_info.exit:                       ; preds = %cond.false37.i130, %cond.end.i129.hclge_fd_get_ip6_info.exit_crit_edge
  %cond42.i131 = phi i8 [ %238, %cond.false37.i130 ], [ 0, %cond.end.i129.hclge_fd_get_ip6_info.exit_crit_edge ]
  %l4_proto44.i = getelementptr inbounds %struct.ethtool_usrip6_spec, ptr %m_u18, i32 0, i32 4
  %239 = ptrtoint ptr %l4_proto44.i to i32
  call void @__asan_store1_noabort(i32 %239)
  store i8 %cond42.i131, ptr %l4_proto44.i, align 1
  br label %sw.epilog

sw.default:                                       ; preds = %if.end7
  %h_u19 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %m_u20 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  %h_source.i = getelementptr inbounds %struct.ethhdr, ptr %h_u19, i32 0, i32 1
  %tuples.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1
  %240 = ptrtoint ptr %tuples.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %tuples.i, align 4
  %242 = ptrtoint ptr %h_source.i to i32
  call void @__asan_store4_noabort(i32 %242)
  store i32 %241, ptr %h_source.i, align 4
  %add.ptr.i.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 0, i32 4
  %243 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %243)
  %244 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i.i = getelementptr %struct.ethhdr, ptr %h_u19, i32 0, i32 1, i32 4
  %245 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_store2_noabort(i32 %245)
  store i16 %244, ptr %add.ptr1.i.i, align 2
  %dst_mac.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 1
  %246 = ptrtoint ptr %dst_mac.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %dst_mac.i, align 4
  %248 = ptrtoint ptr %h_u19 to i32
  call void @__asan_store4_noabort(i32 %248)
  store i32 %247, ptr %h_u19, align 4
  %add.ptr.i46.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 1, i32 4
  %249 = ptrtoint ptr %add.ptr.i46.i to i32
  call void @__asan_load2_noabort(i32 %249)
  %250 = load i16, ptr %add.ptr.i46.i, align 2
  %add.ptr1.i47.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %251 = ptrtoint ptr %add.ptr1.i47.i to i32
  call void @__asan_store2_noabort(i32 %251)
  store i16 %250, ptr %add.ptr1.i47.i, align 2
  %unused_tuple.i133 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 3
  %252 = ptrtoint ptr %unused_tuple.i133 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %unused_tuple.i133, align 4
  %and.i134 = and i32 %253, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i134)
  %tobool.not.i135 = icmp eq i32 %and.i134, 0
  %h_source7.i = getelementptr inbounds %struct.ethhdr, ptr %m_u20, i32 0, i32 1
  br i1 %tobool.not.i135, label %if.else.i137, label %if.then.i136

if.then.i136:                                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  %254 = call ptr @memset(ptr %h_source7.i, i32 0, i32 6)
  br label %if.end.i140

if.else.i137:                                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  %tuples_mask.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2
  %255 = ptrtoint ptr %tuples_mask.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load i32, ptr %tuples_mask.i, align 4
  %257 = ptrtoint ptr %h_source7.i to i32
  call void @__asan_store4_noabort(i32 %257)
  store i32 %256, ptr %h_source7.i, align 4
  %add.ptr.i48.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 0, i32 4
  %258 = ptrtoint ptr %add.ptr.i48.i to i32
  call void @__asan_load2_noabort(i32 %258)
  %259 = load i16, ptr %add.ptr.i48.i, align 2
  %add.ptr1.i49.i = getelementptr %struct.ethhdr, ptr %m_u20, i32 0, i32 1, i32 4
  %260 = ptrtoint ptr %add.ptr1.i49.i to i32
  call void @__asan_store2_noabort(i32 %260)
  store i16 %259, ptr %add.ptr1.i49.i, align 2
  br label %if.end.i140

if.end.i140:                                      ; preds = %if.else.i137, %if.then.i136
  %261 = ptrtoint ptr %unused_tuple.i133 to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load i32, ptr %unused_tuple.i133, align 4
  %and12.i138 = and i32 %262, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i138)
  %tobool13.not.i139 = icmp eq i32 %and12.i138, 0
  br i1 %tobool13.not.i139, label %if.else17.i142, label %if.then14.i141

if.then14.i141:                                   ; preds = %if.end.i140
  call void @__sanitizer_cov_trace_pc() #18
  %263 = call ptr @memset(ptr %m_u20, i32 0, i32 6)
  br label %if.end23.i145

if.else17.i142:                                   ; preds = %if.end.i140
  call void @__sanitizer_cov_trace_pc() #18
  %dst_mac21.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 1
  %264 = ptrtoint ptr %dst_mac21.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %dst_mac21.i, align 4
  %266 = ptrtoint ptr %m_u20 to i32
  call void @__asan_store4_noabort(i32 %266)
  store i32 %265, ptr %m_u20, align 4
  %add.ptr.i50.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 1, i32 4
  %267 = ptrtoint ptr %add.ptr.i50.i to i32
  call void @__asan_load2_noabort(i32 %267)
  %268 = load i16, ptr %add.ptr.i50.i, align 2
  %add.ptr1.i51.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %269 = ptrtoint ptr %add.ptr1.i51.i to i32
  call void @__asan_store2_noabort(i32 %269)
  store i16 %268, ptr %add.ptr1.i51.i, align 2
  br label %if.end23.i145

if.end23.i145:                                    ; preds = %if.else17.i142, %if.then14.i141
  %ether_proto.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 7
  %270 = ptrtoint ptr %ether_proto.i to i32
  call void @__asan_load2_noabort(i32 %270)
  %271 = load i16, ptr %ether_proto.i, align 2
  %h_proto.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 3
  %272 = ptrtoint ptr %h_proto.i to i32
  call void @__asan_storeN_noabort(i32 %272, i32 2)
  store i16 %271, ptr %h_proto.i, align 1
  %273 = ptrtoint ptr %unused_tuple.i133 to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %unused_tuple.i133, align 4
  %and26.i143 = and i32 %274, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i143)
  %tobool27.not.i144 = icmp eq i32 %and26.i143, 0
  br i1 %tobool27.not.i144, label %cond.false.i146, label %if.end23.i145.hclge_fd_get_ether_info.exit_crit_edge

if.end23.i145.hclge_fd_get_ether_info.exit_crit_edge: ; preds = %if.end23.i145
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_get_ether_info.exit

cond.false.i146:                                  ; preds = %if.end23.i145
  call void @__sanitizer_cov_trace_pc() #18
  %ether_proto29.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 7
  %275 = ptrtoint ptr %ether_proto29.i to i32
  call void @__asan_load2_noabort(i32 %275)
  %276 = load i16, ptr %ether_proto29.i, align 2
  br label %hclge_fd_get_ether_info.exit

hclge_fd_get_ether_info.exit:                     ; preds = %cond.false.i146, %if.end23.i145.hclge_fd_get_ether_info.exit_crit_edge
  %cond.i147 = phi i16 [ %276, %cond.false.i146 ], [ 0, %if.end23.i145.hclge_fd_get_ether_info.exit_crit_edge ]
  %h_proto31.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 3
  %277 = ptrtoint ptr %h_proto31.i to i32
  call void @__asan_storeN_noabort(i32 %277, i32 2)
  store i16 %cond.i147, ptr %h_proto31.i, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %hclge_fd_get_ether_info.exit, %hclge_fd_get_ip6_info.exit, %hclge_fd_get_tcpip6_info.exit, %hclge_fd_get_ip4_info.exit, %hclge_fd_get_tcpip4_info.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %16)
  %tobool.not.i149 = icmp sgt i32 %16, -1
  br i1 %tobool.not.i149, label %sw.epilog.if.end.i159_crit_edge, label %if.then.i153

sw.epilog.if.end.i159_crit_edge:                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i159

if.then.i153:                                     ; preds = %sw.epilog
  %vlan_tag1.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 6
  %278 = ptrtoint ptr %vlan_tag1.i to i32
  call void @__asan_load2_noabort(i32 %278)
  %279 = load i16, ptr %vlan_tag1.i, align 4
  %vlan_tci.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 3
  %280 = ptrtoint ptr %vlan_tci.i to i32
  call void @__asan_store2_noabort(i32 %280)
  store i16 %279, ptr %vlan_tci.i, align 2
  %unused_tuple.i150 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 3
  %281 = ptrtoint ptr %unused_tuple.i150 to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load i32, ptr %unused_tuple.i150, align 4
  %and1.i151 = and i32 %282, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i151)
  %tobool2.not.i152 = icmp eq i32 %and1.i151, 0
  br i1 %tobool2.not.i152, label %cond.false.i154, label %if.then.i153.cond.end.i156_crit_edge

if.then.i153.cond.end.i156_crit_edge:             ; preds = %if.then.i153
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i156

cond.false.i154:                                  ; preds = %if.then.i153
  call void @__sanitizer_cov_trace_pc() #18
  %vlan_tag13.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 6
  %283 = ptrtoint ptr %vlan_tag13.i to i32
  call void @__asan_load2_noabort(i32 %283)
  %284 = load i16, ptr %vlan_tag13.i, align 4
  br label %cond.end.i156

cond.end.i156:                                    ; preds = %cond.false.i154, %if.then.i153.cond.end.i156_crit_edge
  %cond.i155 = phi i16 [ %284, %cond.false.i154 ], [ 0, %if.then.i153.cond.end.i156_crit_edge ]
  %vlan_tci5.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 3
  %285 = ptrtoint ptr %vlan_tci5.i to i32
  call void @__asan_store2_noabort(i32 %285)
  store i16 %cond.i155, ptr %vlan_tci5.i, align 2
  %286 = ptrtoint ptr %unused_tuple.i150 to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %unused_tuple.i150, align 4
  %and.i.i = and i32 %287, 606076928
  call void @__sanitizer_cov_trace_const_cmp4(i32 606076928, i32 %and.i.i)
  %cmp.i.i = icmp eq i32 %and.i.i, 606076928
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %cond.end.i156
  call void @__sanitizer_cov_trace_pc() #18
  %data.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 4
  %288 = ptrtoint ptr %data.i.i to i32
  call void @__asan_store4_noabort(i32 %288)
  store i32 0, ptr %data.i.i, align 4
  %arrayidx3.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 4, i32 1
  %289 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_store4_noabort(i32 %289)
  store i32 0, ptr %arrayidx3.i.i, align 4
  %data4.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 4
  %290 = ptrtoint ptr %data4.i.i to i32
  call void @__asan_store4_noabort(i32 %290)
  store i32 0, ptr %data4.i.i, align 4
  br label %hclge_fd_get_user_def_info.exit.i

if.else.i.i:                                      ; preds = %cond.end.i156
  call void @__sanitizer_cov_trace_pc() #18
  %offset.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 5, i32 0, i32 0, i32 3
  %291 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_load2_noabort(i32 %291)
  %292 = load i16, ptr %offset.i.i, align 4
  %conv.i.i = zext i16 %292 to i32
  %data10.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 4
  %293 = ptrtoint ptr %data10.i.i to i32
  call void @__asan_store4_noabort(i32 %293)
  store i32 %conv.i.i, ptr %data10.i.i, align 4
  %data13.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 5, i32 0, i32 0, i32 1
  %294 = ptrtoint ptr %data13.i.i to i32
  call void @__asan_load2_noabort(i32 %294)
  %295 = load i16, ptr %data13.i.i, align 4
  %conv14.i.i = zext i16 %295 to i32
  %arrayidx17.i.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 4, i32 1
  %296 = ptrtoint ptr %arrayidx17.i.i to i32
  call void @__asan_store4_noabort(i32 %296)
  store i32 %conv14.i.i, ptr %arrayidx17.i.i, align 4
  %data19.i.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 4
  %297 = ptrtoint ptr %data19.i.i to i32
  call void @__asan_store4_noabort(i32 %297)
  store i32 65535, ptr %data19.i.i, align 4
  %data_mask.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 5, i32 0, i32 0, i32 2
  %298 = ptrtoint ptr %data_mask.i.i to i32
  call void @__asan_load2_noabort(i32 %298)
  %299 = load i16, ptr %data_mask.i.i, align 2
  %conv22.i.i = zext i16 %299 to i32
  br label %hclge_fd_get_user_def_info.exit.i

hclge_fd_get_user_def_info.exit.i:                ; preds = %if.else.i.i, %if.then.i.i
  %conv22.sink.i.i = phi i32 [ 0, %if.then.i.i ], [ %conv22.i.i, %if.else.i.i ]
  %300 = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 4, i32 4, i32 1
  %301 = ptrtoint ptr %300 to i32
  call void @__asan_store4_noabort(i32 %301)
  store i32 %conv22.sink.i.i, ptr %300, align 4
  br label %if.end.i159

if.end.i159:                                      ; preds = %hclge_fd_get_user_def_info.exit.i, %sw.epilog.if.end.i159_crit_edge
  %and7.i157 = and i32 %16, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i157)
  %tobool8.not.i158 = icmp eq i32 %and7.i157, 0
  br i1 %tobool8.not.i158, label %if.end.i159.hclge_fd_get_ext_info.exit_crit_edge, label %if.then9.i

if.end.i159.hclge_fd_get_ext_info.exit_crit_edge: ; preds = %if.end.i159
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_get_ext_info.exit

if.then9.i:                                       ; preds = %if.end.i159
  %h_dest.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 1
  %dst_mac.i160 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 1
  %302 = ptrtoint ptr %dst_mac.i160 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %dst_mac.i160, align 4
  %304 = ptrtoint ptr %h_dest.i to i32
  call void @__asan_store4_noabort(i32 %304)
  store i32 %303, ptr %h_dest.i, align 4
  %add.ptr.i.i161 = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1, i32 1, i32 4
  %305 = ptrtoint ptr %add.ptr.i.i161 to i32
  call void @__asan_load2_noabort(i32 %305)
  %306 = load i16, ptr %add.ptr.i.i161, align 2
  %add.ptr1.i.i162 = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 2, i32 1, i32 4
  %307 = ptrtoint ptr %add.ptr1.i.i162 to i32
  call void @__asan_store2_noabort(i32 %307)
  store i16 %306, ptr %add.ptr1.i.i162, align 2
  %unused_tuple13.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 3
  %308 = ptrtoint ptr %unused_tuple13.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %unused_tuple13.i, align 4
  %and14.i = and i32 %309, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i)
  %tobool15.not.i = icmp eq i32 %and14.i, 0
  %m_u19.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3
  br i1 %tobool15.not.i, label %if.else.i163, label %if.then16.i

if.then16.i:                                      ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  %310 = call ptr @memset(ptr %m_u19.i, i32 0, i32 6)
  br label %hclge_fd_get_ext_info.exit

if.else.i163:                                     ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  %dst_mac23.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 1
  %311 = ptrtoint ptr %dst_mac23.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load i32, ptr %dst_mac23.i, align 4
  %313 = ptrtoint ptr %m_u19.i to i32
  call void @__asan_store4_noabort(i32 %313)
  store i32 %312, ptr %m_u19.i, align 4
  %add.ptr.i40.i = getelementptr %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 2, i32 1, i32 4
  %314 = ptrtoint ptr %add.ptr.i40.i to i32
  call void @__asan_load2_noabort(i32 %314)
  %315 = load i16, ptr %add.ptr.i40.i, align 2
  %add.ptr1.i41.i = getelementptr %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %316 = ptrtoint ptr %add.ptr1.i41.i to i32
  call void @__asan_store2_noabort(i32 %316)
  store i16 %315, ptr %add.ptr1.i41.i, align 2
  br label %hclge_fd_get_ext_info.exit

hclge_fd_get_ext_info.exit:                       ; preds = %if.else.i163, %if.then16.i, %if.end.i159.hclge_fd_get_ext_info.exit_crit_edge
  %action.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 11
  %317 = ptrtoint ptr %action.i to i32
  call void @__asan_load1_noabort(i32 %317)
  %318 = load i8, ptr %action.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %318)
  %cmp.i164 = icmp eq i8 %318, 1
  br i1 %cmp.i164, label %if.then.i165, label %if.else.i166

if.then.i165:                                     ; preds = %hclge_fd_get_ext_info.exit
  call void @__sanitizer_cov_trace_pc() #18
  %ring_cookie.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 5
  %319 = ptrtoint ptr %ring_cookie.i to i32
  call void @__asan_store8_noabort(i32 %319)
  store i64 -1, ptr %ring_cookie.i, align 8
  br label %cleanup.sink.split

if.else.i166:                                     ; preds = %hclge_fd_get_ext_info.exit
  call void @__sanitizer_cov_trace_pc() #18
  %queue_id.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 6
  %320 = ptrtoint ptr %queue_id.i to i32
  call void @__asan_load2_noabort(i32 %320)
  %321 = load i16, ptr %queue_id.i, align 4
  %conv2.i = zext i16 %321 to i64
  %ring_cookie3.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 5
  %322 = ptrtoint ptr %ring_cookie3.i to i32
  call void @__asan_store8_noabort(i32 %322)
  store i64 %conv2.i, ptr %ring_cookie3.i, align 8
  %vf_id4.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 7
  %323 = ptrtoint ptr %vf_id4.i to i32
  call void @__asan_load2_noabort(i32 %323)
  %324 = load i16, ptr %vf_id4.i, align 2
  %conv5.i = zext i16 %324 to i64
  %shl.i = shl nuw nsw i64 %conv5.i, 32
  %or.i = or i64 %shl.i, %conv2.i
  store i64 %or.i, ptr %ring_cookie3.i, align 8
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.else.i166, %if.then.i165, %if.else.i52.cleanup.sink.split_crit_edge, %for.cond.i.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ 0, %if.then.i165 ], [ 0, %if.else.i166 ], [ -2, %if.else.i52.cleanup.sink.split_crit_edge ], [ -2, %for.cond.i.cleanup.sink.split_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %hclge_get_vport.exit.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_all_rules(ptr nocapture noundef readonly %handle, ptr nocapture noundef %cmd, ptr nocapture noundef writeonly %rule_locs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %caps, align 4
  %and1.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %rule_num = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 66, i32 2
  %10 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rule_num, align 4
  %conv = zext i32 %11 to i64
  %data = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 2
  %12 = ptrtoint ptr %data to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %conv, ptr %data, align 8
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock) #16
  %fd_rule_list = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 67
  %13 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %fd_rule_list, align 4
  %tobool4.not50 = icmp eq ptr %14, null
  br i1 %tobool4.not50, label %if.end.for.end_crit_edge, label %land.rhs.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

land.rhs.lr.ph:                                   ; preds = %if.end
  %15 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 4
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %land.rhs.lr.ph
  %rule.052 = phi ptr [ %14, %land.rhs.lr.ph ], [ %17, %for.inc.land.rhs_crit_edge ]
  %cnt.051 = phi i32 [ 0, %land.rhs.lr.ph ], [ %cnt.1, %for.inc.land.rhs_crit_edge ]
  %16 = ptrtoint ptr %rule.052 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rule.052, align 4
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %15, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %cnt.051, i32 %19)
  %cmp = icmp eq i32 %cnt.051, %19
  br i1 %cmp, label %if.then8, label %if.end10

if.then8:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  br label %cleanup

if.end10:                                         ; preds = %land.rhs
  %state = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.052, i32 0, i32 10
  %20 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %21)
  %cmp11 = icmp eq i32 %21, 1
  br i1 %cmp11, label %if.end10.for.inc_crit_edge, label %if.end14

if.end10.for.inc_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end14:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  %location = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.052, i32 0, i32 8
  %22 = ptrtoint ptr %location to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %location, align 4
  %conv15 = zext i16 %23 to i32
  %arrayidx16 = getelementptr i32, ptr %rule_locs, i32 %cnt.051
  %24 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %conv15, ptr %arrayidx16, align 4
  %inc = add i32 %cnt.051, 1
  br label %for.inc

for.inc:                                          ; preds = %if.end14, %if.end10.for.inc_crit_edge
  %cnt.1 = phi i32 [ %cnt.051, %if.end10.for.inc_crit_edge ], [ %inc, %if.end14 ]
  %tobool4.not = icmp eq ptr %17, null
  br i1 %tobool4.not, label %for.inc.for.end_crit_edge, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %cnt.0.lcssa = phi i32 [ 0, %if.end.for.end_crit_edge ], [ %cnt.1, %for.inc.for.end_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  %25 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 4
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %cnt.0.lcssa, ptr %25, align 8
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then8, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -90, %if.then8 ], [ 0, %for.end ], [ -95, %hclge_get_vport.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_enable_fd(ptr nocapture noundef readonly %handle, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %enable to i8
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %fd_en = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 76
  %6 = ptrtoint ptr %fd_en to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %frombool, ptr %fd_en, align 4
  br i1 %enable, label %if.else, label %hclge_get_vport.exit.if.end.sink.split_crit_edge

hclge_get_vport.exit.if.end.sink.split_crit_edge: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.sink.split

if.else:                                          ; preds = %hclge_get_vport.exit
  %7 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %handle, align 8
  %tobool.not.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i, label %if.else.hclge_get_vport.exit.i_crit_edge, label %if.else.i.i

if.else.hclge_get_vport.exit.i_crit_edge:         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i

if.else.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.hnae3_client, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp.i.i = icmp eq i32 %10, 1
  %..i.i = select i1 %cmp.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i

hclge_get_vport.exit.i:                           ; preds = %if.else.i.i, %if.else.hclge_get_vport.exit.i_crit_edge
  %.sink.i.i = phi i32 [ -560, %if.else.hclge_get_vport.exit.i_crit_edge ], [ %..i.i, %if.else.i.i ]
  %add.ptr9.i.i = getelementptr i8, ptr %handle, i32 %.sink.i.i
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i, i32 0, i32 12
  %11 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %back.i, align 4
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ae_dev.i, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %caps.i, align 4
  %and1.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i7 = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i7, label %hclge_get_vport.exit.i.if.end_crit_edge, label %if.end.i

hclge_get_vport.exit.i.if.end_crit_edge:          ; preds = %hclge_get_vport.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i:                                         ; preds = %hclge_get_vport.exit.i
  %fd_en.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 76
  %17 = ptrtoint ptr %fd_en.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %fd_en.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool2.not.i = icmp eq i8 %18, 0
  br i1 %tobool2.not.i, label %if.end.i.if.end_crit_edge, label %if.end4.i

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end4.i:                                        ; preds = %if.end.i
  %fd_rule_lock.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock.i) #16
  %fd_rule_list.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 67
  %19 = ptrtoint ptr %fd_rule_list.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %fd_rule_list.i, align 4
  %tobool7.not2.i = icmp eq ptr %20, null
  br i1 %tobool7.not2.i, label %if.end4.i.for.end.i_crit_edge, label %if.end4.i.land.rhs.i_crit_edge

if.end4.i.land.rhs.i_crit_edge:                   ; preds = %if.end4.i
  br label %land.rhs.i

if.end4.i.for.end.i_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

land.rhs.i:                                       ; preds = %for.inc.i.land.rhs.i_crit_edge, %if.end4.i.land.rhs.i_crit_edge
  %rule.03.i = phi ptr [ %22, %for.inc.i.land.rhs.i_crit_edge ], [ %20, %if.end4.i.land.rhs.i_crit_edge ]
  %21 = ptrtoint ptr %rule.03.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %rule.03.i, align 4
  %state.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.03.i, i32 0, i32 10
  %23 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp.i8 = icmp eq i32 %24, 2
  br i1 %cmp.i8, label %if.then10.i, label %land.rhs.i.for.inc.i_crit_edge

land.rhs.i.for.inc.i_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then10.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %state.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then10.i, %land.rhs.i.for.inc.i_crit_edge
  %tobool7.not.i = icmp eq ptr %22, null
  br i1 %tobool7.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.land.rhs.i_crit_edge

for.inc.i.land.rhs.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end4.i.for.end.i_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock.i) #16
  br label %if.end.sink.split

if.end.sink.split:                                ; preds = %for.end.i, %hclge_get_vport.exit.if.end.sink.split_crit_edge
  %.sink12 = phi ptr [ %12, %for.end.i ], [ %5, %hclge_get_vport.exit.if.end.sink.split_crit_edge ]
  %.sink = phi i32 [ 15, %for.end.i ], [ 16, %hclge_get_vport.exit.if.end.sink.split_crit_edge ]
  %state24.i = getelementptr inbounds %struct.hclge_dev, ptr %.sink12, i32 0, i32 5
  tail call void @_set_bit(i32 noundef %.sink, ptr noundef %state24.i) #16
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %if.end.i.if.end_crit_edge, %hclge_get_vport.exit.i.if.end_crit_edge
  %state.i9 = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  %26 = ptrtoint ptr %state.i9 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %state.i9, align 4
  %28 = and i32 %27, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i10 = icmp eq i32 %28, 0
  br i1 %tobool.not.i10, label %land.lhs.true.i, label %if.end.hclge_task_schedule.exit_crit_edge

if.end.hclge_task_schedule.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_task_schedule.exit

land.lhs.true.i:                                  ; preds = %if.end
  %29 = ptrtoint ptr %state.i9 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %state.i9, align 4
  %31 = and i32 %30, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool3.not.i = icmp eq i32 %31, 0
  br i1 %tobool3.not.i, label %if.then.i, label %land.lhs.true.i.hclge_task_schedule.exit_crit_edge

land.lhs.true.i.hclge_task_schedule.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_task_schedule.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %32 = load ptr, ptr @hclge_wq, align 4
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 48
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %32, ptr noundef %service_task.i, i32 noundef 0) #16
  br label %hclge_task_schedule.exit

hclge_task_schedule.exit:                         ; preds = %if.then.i, %land.lhs.true.i.hclge_task_schedule.exit_crit_edge, %if.end.hclge_task_schedule.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_add_fd_entry_by_arfs(ptr nocapture noundef readonly %handle, i16 noundef zeroext %queue_id, i16 noundef zeroext %flow_id, ptr nocapture noundef readonly %fkeys) #0 align 64 {
entry:
  %new_tuples = alloca %struct.hclge_fd_rule_tuples, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %new_tuples) #16
  %4 = call ptr @memset(ptr %new_tuples, i32 0, i32 64)
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %5 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %back, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %8, i32 0, i32 7
  %9 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %caps, align 4
  %and1.i = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock) #16
  %fd_active_type = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 75
  %11 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %fd_active_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %12)
  %switch = icmp ult i32 %12, 2
  br i1 %switch, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %basic.i = getelementptr inbounds %struct.flow_keys, ptr %fkeys, i32 0, i32 1
  %13 = ptrtoint ptr %basic.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %basic.i, align 8
  %ether_proto.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 7
  %15 = ptrtoint ptr %ether_proto.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %14, ptr %ether_proto.i, align 2
  %ip_proto.i = getelementptr inbounds %struct.flow_keys, ptr %fkeys, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %ip_proto.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %ip_proto.i, align 2
  %ip_proto2.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 12
  %18 = ptrtoint ptr %ip_proto2.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %ip_proto2.i, align 1
  %ports.i = getelementptr inbounds %struct.flow_keys, ptr %fkeys, i32 0, i32 6
  %dst.i = getelementptr inbounds %struct.anon.162, ptr %ports.i, i32 0, i32 1
  %19 = ptrtoint ptr %dst.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %dst.i, align 2
  %dst_port.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 5
  %21 = ptrtoint ptr %dst_port.i to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %20, ptr %dst_port.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %14)
  %cmp.i74 = icmp eq i16 %14, 2048
  %addrs.i = getelementptr inbounds %struct.flow_keys, ptr %fkeys, i32 0, i32 8
  br i1 %cmp.i74, label %if.then.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %dst17.i = getelementptr inbounds %struct.flow_keys, ptr %fkeys, i32 0, i32 8, i32 0, i32 0, i32 1
  %22 = ptrtoint ptr %addrs.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %addrs.i, align 4
  %arrayidx15.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 2, i32 0
  %24 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx15.i, align 4
  %25 = ptrtoint ptr %dst17.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %dst17.i, align 4
  %arrayidx21.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 3, i32 0
  %27 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx21.i, align 4
  %arrayidx13.1.i = getelementptr %struct.flow_keys, ptr %fkeys, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = ptrtoint ptr %arrayidx13.1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx13.1.i, align 4
  %arrayidx15.1.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 2, i32 1
  %30 = ptrtoint ptr %arrayidx15.1.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %arrayidx15.1.i, align 4
  %arrayidx19.1.i = getelementptr %struct.flow_keys, ptr %fkeys, i32 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %31 = ptrtoint ptr %arrayidx19.1.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx19.1.i, align 4
  %arrayidx21.1.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 3, i32 1
  %33 = ptrtoint ptr %arrayidx21.1.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %arrayidx21.1.i, align 4
  %arrayidx13.2.i = getelementptr %struct.flow_keys, ptr %fkeys, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %34 = ptrtoint ptr %arrayidx13.2.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx13.2.i, align 4
  %arrayidx15.2.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 2, i32 2
  %36 = ptrtoint ptr %arrayidx15.2.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %arrayidx15.2.i, align 4
  %arrayidx19.2.i = getelementptr %struct.flow_keys, ptr %fkeys, i32 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %37 = ptrtoint ptr %arrayidx19.2.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx19.2.i, align 4
  %arrayidx21.2.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 3, i32 2
  %39 = ptrtoint ptr %arrayidx21.2.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %arrayidx21.2.i, align 4
  %arrayidx13.3.i = getelementptr %struct.flow_keys, ptr %fkeys, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %arrayidx19.3.i = getelementptr %struct.flow_keys, ptr %fkeys, i32 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3
  br label %hclge_fd_get_flow_tuples.exit

if.then.i:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %dst7.i = getelementptr inbounds %struct.flow_keys, ptr %fkeys, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %hclge_fd_get_flow_tuples.exit

hclge_fd_get_flow_tuples.exit:                    ; preds = %if.then.i, %for.cond.preheader.i
  %.sink.in = phi ptr [ %addrs.i, %if.then.i ], [ %arrayidx13.3.i, %for.cond.preheader.i ]
  %arrayidx19.3.sink.i = phi ptr [ %dst7.i, %if.then.i ], [ %arrayidx19.3.i, %for.cond.preheader.i ]
  %40 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %40)
  %.sink = load i32, ptr %.sink.in, align 4
  %41 = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 2, i32 3
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %.sink, ptr %41, align 4
  %43 = ptrtoint ptr %arrayidx19.3.sink.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx19.3.sink.i, align 4
  %arrayidx21.3.i = getelementptr inbounds %struct.hclge_fd_rule_tuples, ptr %new_tuples, i32 0, i32 3, i32 3
  %45 = ptrtoint ptr %arrayidx21.3.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %arrayidx21.3.i, align 4
  %fd_rule_list.i = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 67
  br label %for.cond.i

for.cond.i:                                       ; preds = %land.rhs.i.for.cond.i_crit_edge, %hclge_fd_get_flow_tuples.exit
  %rule.0.in.i = phi ptr [ %fd_rule_list.i, %hclge_fd_get_flow_tuples.exit ], [ %rule.0.i, %land.rhs.i.for.cond.i_crit_edge ]
  %46 = ptrtoint ptr %rule.0.in.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %rule.0.i = load ptr, ptr %rule.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %rule.0.i, null
  br i1 %tobool2.not.i, label %if.then9, label %land.rhs.i

land.rhs.i:                                       ; preds = %for.cond.i
  %tuples5.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 1
  %bcmp.i = call i32 @bcmp(ptr noundef nonnull dereferenceable(64) %new_tuples, ptr noundef dereferenceable(64) %tuples5.i, i32 64) #22
  %tobool6.not.i = icmp eq i32 %bcmp.i, 0
  br i1 %tobool6.not.i, label %if.else, label %land.rhs.i.for.cond.i_crit_edge

land.rhs.i.for.cond.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

if.then9:                                         ; preds = %for.cond.i
  %fd_bmap = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 74
  %call11 = tail call i32 @_find_first_zero_bit_be(ptr noundef %fd_bmap, i32 noundef 4096) #16
  %conv = trunc i32 %call11 to i16
  %conv12 = and i32 %call11, 65535
  %rule_num = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 66, i32 2
  %47 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rule_num, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %conv12, i32 %48)
  %cmp13.not = icmp ult i32 %conv12, %48
  br i1 %cmp13.not, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  br label %cleanup

if.end17:                                         ; preds = %if.then9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %49 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %49, i32 noundef 2848, i32 noundef 176) #21
  %tobool19.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool19.not, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  br label %cleanup

if.end22:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %location = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 8
  %50 = ptrtoint ptr %location to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %conv, ptr %location, align 8
  %51 = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 5
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 %flow_id, ptr %51, align 8
  %queue_id24 = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 6
  %53 = ptrtoint ptr %queue_id24 to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 %queue_id, ptr %queue_id24, align 4
  %unused_tuple.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 3
  %54 = ptrtoint ptr %unused_tuple.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 138870784, ptr %unused_tuple.i, align 8
  %action.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 11
  %55 = ptrtoint ptr %action.i to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 0, ptr %action.i, align 4
  %vf_id.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 7
  %56 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_store2_noabort(i32 %56)
  store i16 0, ptr %vf_id.i, align 2
  %rule_type.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 9
  %57 = ptrtoint ptr %rule_type.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 1, ptr %rule_type.i, align 4
  %state.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 10
  %58 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 0, ptr %state.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %17)
  %cmp3.i = icmp eq i8 %17, 6
  %flow_type.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 4
  %..i78 = select i1 %cmp3.i, i32 1, i32 2
  %.32.i = select i1 %cmp3.i, i32 5, i32 6
  %.sink.i79 = select i1 %cmp.i74, i32 %..i78, i32 %.32.i
  %59 = ptrtoint ptr %flow_type.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %.sink.i79, ptr %flow_type.i, align 4
  %tuples18.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1
  %60 = call ptr @memcpy(ptr %tuples18.i, ptr %new_tuples, i32 64)
  %tuples_mask.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2
  %61 = call ptr @memset(ptr %tuples_mask.i, i32 255, i32 64)
  tail call fastcc void @hclge_update_fd_list(ptr noundef %6, i32 noundef 0, i16 noundef zeroext %conv, ptr noundef nonnull %call7.i.i)
  %62 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 1, ptr %fd_active_type, align 8
  br label %if.end37

if.else:                                          ; preds = %land.rhs.i
  %queue_id27 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 6
  %63 = ptrtoint ptr %queue_id27 to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %queue_id27, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %64, i16 %queue_id)
  %cmp30.not = icmp eq i16 %64, %queue_id
  br i1 %cmp30.not, label %if.else.if.end37_crit_edge, label %if.then32

if.else.if.end37_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

if.then32:                                        ; preds = %if.else
  %65 = ptrtoint ptr %queue_id27 to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %queue_id, ptr %queue_id27, align 4
  %state34 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 10
  %66 = ptrtoint ptr %state34 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 0, ptr %state34, align 4
  %state35 = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 15, ptr noundef %state35) #16
  %67 = ptrtoint ptr %state35 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %state35, align 4
  %69 = and i32 %68, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool.not.i81 = icmp eq i32 %69, 0
  br i1 %tobool.not.i81, label %land.lhs.true.i, label %if.then32.if.end37_crit_edge

if.then32.if.end37_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

land.lhs.true.i:                                  ; preds = %if.then32
  %70 = ptrtoint ptr %state35 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %state35, align 4
  %72 = and i32 %71, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool3.not.i = icmp eq i32 %72, 0
  br i1 %tobool3.not.i, label %if.then.i82, label %land.lhs.true.i.if.end37_crit_edge

land.lhs.true.i.if.end37_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

if.then.i82:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %73 = load ptr, ptr @hclge_wq, align 4
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 48
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %73, ptr noundef %service_task.i, i32 noundef 0) #16
  br label %if.end37

if.end37:                                         ; preds = %if.then.i82, %land.lhs.true.i.if.end37_crit_edge, %if.then32.if.end37_crit_edge, %if.else.if.end37_crit_edge, %if.end22
  %rule.0 = phi ptr [ %rule.0.i, %if.else.if.end37_crit_edge ], [ %call7.i.i, %if.end22 ], [ %rule.0.i, %if.then32.if.end37_crit_edge ], [ %rule.0.i, %land.lhs.true.i.if.end37_crit_edge ], [ %rule.0.i, %if.then.i82 ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  %location39 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0, i32 0, i32 8
  %74 = ptrtoint ptr %location39 to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %location39, align 4
  %conv40 = zext i16 %75 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %if.then20, %if.then15, %if.then4, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %if.then4 ], [ %conv40, %if.end37 ], [ -28, %if.then15 ], [ -12, %if.then20 ], [ -95, %hclge_get_vport.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %new_tuples) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_dbg_read_cmd(ptr noundef, i32 noundef, ptr noundef, i32 noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_handle_hw_ras_error(ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @hclge_get_hw_reset_stat(ptr nocapture noundef readonly %handle) #0 align 64 {
entry:
  %base.addr.i9 = alloca ptr, align 4
  %base.addr.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i)
  %8 = ptrtoint ptr %base.addr.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %base.addr.i, align 4
  %base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i = load volatile ptr, ptr %base.addr.i, align 4
  %add.ptr.i = getelementptr i8, ptr %base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i, i32 133632
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %lor.rhs, label %hclge_get_vport.exit.lor.end_crit_edge

hclge_get_vport.exit.lor.end_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.end

lor.rhs:                                          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i9)
  %12 = ptrtoint ptr %base.addr.i9 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %base.addr.i9, align 4
  %base.addr.i9.0.base.addr.i9.0.base.addr.0.base.addr.0.base.addr.0..i10 = load volatile ptr, ptr %base.addr.i9, align 4
  %add.ptr.i11 = getelementptr i8, ptr %base.addr.i9.0.base.addr.i9.0.base.addr.0.base.addr.0.base.addr.0..i10, i32 134144
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i11) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool7 = icmp ne i32 %13, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %hclge_get_vport.exit.lor.end_crit_edge
  %14 = phi i1 [ true, %hclge_get_vport.exit.lor.end_crit_edge ], [ %tobool7, %lor.rhs ]
  ret i1 %14
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @hclge_ae_dev_resetting(ptr nocapture noundef readonly %handle) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %state = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state, align 4
  %8 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool = icmp ne i32 %8, 0
  ret i1 %tobool
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @hclge_ae_dev_reset_cnt(ptr nocapture noundef readonly %handle) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %hw_reset_done_cnt = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 13, i32 1
  %6 = ptrtoint ptr %hw_reset_done_cnt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hw_reset_done_cnt, align 4
  ret i32 %7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_gro_en(ptr nocapture noundef readonly %handle, i1 noundef zeroext %enable) #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %enable to i8
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %gro_en = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 77
  %6 = ptrtoint ptr %gro_en to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %gro_en, align 1, !range !1456
  store i8 %frombool, ptr %gro_en, align 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %8 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  %9 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ae_dev.i, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %10, i32 0, i32 7
  %11 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %caps.i, align 4
  %13 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i14 = icmp eq i32 %13, 0
  br i1 %tobool.not.i14, label %hclge_get_vport.exit.hclge_config_gro.exit.thread_crit_edge, label %if.end.i

hclge_get_vport.exit.hclge_config_gro.exit.thread_crit_edge: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_config_gro.exit.thread

if.end.i:                                         ; preds = %hclge_get_vport.exit
  %14 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 3088, i1 noundef zeroext false) #16
  %15 = ptrtoint ptr %gro_en to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %gro_en, align 1, !range !1456
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %14, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i, label %if.end.i.hclge_config_gro.exit.thread_crit_edge, label %if.then

if.end.i.hclge_config_gro.exit.thread_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_config_gro.exit.thread

hclge_config_gro.exit.thread:                     ; preds = %if.end.i.hclge_config_gro.exit.thread_crit_edge, %hclge_get_vport.exit.hclge_config_gro.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %if.end

if.then:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.318, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %20 = ptrtoint ptr %gro_en to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %7, ptr %gro_en, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %hclge_config_gro.exit.thread
  %retval.0.i17 = phi i32 [ 0, %hclge_config_gro.exit.thread ], [ %call.i.i, %if.then ]
  ret i32 %retval.0.i17
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_set_timer_task(ptr nocapture noundef readonly %handle, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  br i1 %enable, label %if.then, label %if.else

if.then:                                          ; preds = %hclge_get_vport.exit
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i, align 4
  %8 = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i6 = icmp eq i32 %8, 0
  br i1 %tobool.not.i6, label %land.lhs.true.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true.i:                                  ; preds = %if.then
  %9 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %state.i, align 4
  %11 = and i32 %10, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool3.not.i = icmp eq i32 %11, 0
  br i1 %tobool3.not.i, label %if.then.i, label %land.lhs.true.i.if.end_crit_edge

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %12 = load ptr, ptr @hclge_wq, align 4
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 48
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %12, ptr noundef %service_task.i, i32 noundef 0) #16
  br label %if.end

if.else:                                          ; preds = %hclge_get_vport.exit
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state.i) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !1464
  %serv_processed_cnt.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 70
  %13 = ptrtoint ptr %serv_processed_cnt.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %serv_processed_cnt.i, align 8
  %15 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %state.i, align 4
  %17 = and i32 %16, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not6.i = icmp eq i32 %17, 0
  br i1 %tobool.not6.i, label %if.else.if.end_crit_edge, label %if.else.land.lhs.true.i8_crit_edge

if.else.land.lhs.true.i8_crit_edge:               ; preds = %if.else
  br label %land.lhs.true.i8

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true.i8:                                 ; preds = %while.body.i.land.lhs.true.i8_crit_edge, %if.else.land.lhs.true.i8_crit_edge
  %i.07.i = phi i32 [ %inc.i, %while.body.i.land.lhs.true.i8_crit_edge ], [ 0, %if.else.land.lhs.true.i8_crit_edge ]
  %inc.i = add nuw nsw i32 %i.07.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 100000, i32 %i.07.i)
  %exitcond.not.i = icmp eq i32 %i.07.i, 100000
  br i1 %exitcond.not.i, label %land.lhs.true.i8.if.end_crit_edge, label %land.rhs.i

land.lhs.true.i8.if.end_crit_edge:                ; preds = %land.lhs.true.i8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.rhs.i:                                       ; preds = %land.lhs.true.i8
  %18 = ptrtoint ptr %serv_processed_cnt.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %serv_processed_cnt.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %19)
  %cmp2.i = icmp eq i32 %14, %19
  br i1 %cmp2.i, label %while.body.i, label %land.rhs.i.if.end_crit_edge

land.rhs.i.if.end_crit_edge:                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

while.body.i:                                     ; preds = %land.rhs.i
  tail call void @usleep_range_state(i32 noundef 1, i32 noundef 1, i32 noundef 2) #16
  %20 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %state.i, align 4
  %22 = and i32 %21, 8192
  %tobool.not.i9 = icmp eq i32 %22, 0
  br i1 %tobool.not.i9, label %while.body.i.if.end_crit_edge, label %while.body.i.land.lhs.true.i8_crit_edge

while.body.i.land.lhs.true.i8_crit_edge:          ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true.i8

while.body.i.if.end_crit_edge:                    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end:                                           ; preds = %while.body.i.if.end_crit_edge, %land.rhs.i.if.end_crit_edge, %land.lhs.true.i8.if.end_crit_edge, %if.else.if.end_crit_edge, %if.then.i, %land.lhs.true.i.if.end_crit_edge, %if.then.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_mac_connect_phy(ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_mac_disconnect_phy(ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_vf_config(ptr nocapture noundef readonly %handle, i32 noundef %vf, ptr nocapture noundef writeonly %ivf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %call1 = tail call fastcc ptr @hclge_get_vf_vport(ptr noundef %5, i32 noundef %vf)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %ivf to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %vf, ptr %ivf, align 4
  %vf_info = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18
  %7 = ptrtoint ptr %vf_info to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vf_info, align 4
  %linkstate = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 5
  %9 = ptrtoint ptr %linkstate to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %linkstate, align 4
  %spoofchk = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 2
  %10 = ptrtoint ptr %spoofchk to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %spoofchk, align 4
  %spoofchk4 = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 4
  %12 = ptrtoint ptr %spoofchk4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %spoofchk4, align 4
  %trusted = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 4
  %13 = ptrtoint ptr %trusted to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %trusted, align 4
  %trusted6 = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 9
  %15 = ptrtoint ptr %trusted6 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %trusted6, align 4
  %min_tx_rate = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 6
  %16 = ptrtoint ptr %min_tx_rate to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %min_tx_rate, align 4
  %max_tx_rate = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 3
  %17 = ptrtoint ptr %max_tx_rate to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %max_tx_rate, align 4
  %max_tx_rate8 = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 7
  %19 = ptrtoint ptr %max_tx_rate8 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %max_tx_rate8, align 4
  %vlan_info = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 7, i32 1
  %vlan_tag = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 7, i32 1, i32 2
  %20 = ptrtoint ptr %vlan_tag to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vlan_tag, align 2
  %conv = zext i16 %21 to i32
  %vlan = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 2
  %22 = ptrtoint ptr %vlan to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %conv, ptr %vlan, align 4
  %23 = ptrtoint ptr %vlan_info to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %vlan_info, align 2
  %vlan_proto11 = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 10
  %25 = ptrtoint ptr %vlan_proto11 to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 %24, ptr %vlan_proto11, align 4
  %qos = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 7, i32 1, i32 1
  %26 = ptrtoint ptr %qos to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %qos, align 2
  %conv14 = zext i16 %27 to i32
  %qos15 = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 3
  %28 = ptrtoint ptr %qos15 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %conv14, ptr %qos15, align 4
  %mac = getelementptr inbounds %struct.ifla_vf_info, ptr %ivf, i32 0, i32 1
  %mac17 = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 1
  %29 = ptrtoint ptr %mac17 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mac17, align 4
  %31 = ptrtoint ptr %mac to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %mac, align 4
  %add.ptr.i = getelementptr %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 1, i32 4
  %32 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %add.ptr.i, align 2
  %add.ptr1.i = getelementptr %struct.ifla_vf_info, ptr %ivf, i32 0, i32 1, i32 4
  %34 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %add.ptr1.i, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %hclge_get_vport.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_vf_link_state(ptr nocapture noundef readonly %handle, i32 noundef %vf, i32 noundef %link_state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %call1 = tail call fastcc ptr @hclge_get_vf_vport(ptr noundef %5, i32 noundef %vf)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %vf_info = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18
  %6 = ptrtoint ptr %vf_info to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vf_info, align 4
  store i32 %link_state, ptr %vf_info, align 4
  %call5 = tail call i32 @hclge_push_vf_link_status(ptr noundef nonnull %call1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end.cleanup_crit_edge, label %if.then7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %vf_info to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %vf_info, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.707, i32 noundef %vf, i32 noundef %call5) #20
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %if.end.cleanup_crit_edge, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %hclge_get_vport.exit.cleanup_crit_edge ], [ %call5, %if.then7 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_vf_spoofchk(ptr nocapture noundef readonly %handle, i32 noundef %vf, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %cond = zext i1 %enable to i32
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ae_dev, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %7, i32 0, i32 6
  %8 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %9)
  %cmp = icmp ult i32 %9, 33
  br i1 %cmp, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %call1 = tail call fastcc ptr @hclge_get_vf_vport(ptr noundef %5, i32 noundef %vf)
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %spoofchk = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 2
  %10 = ptrtoint ptr %spoofchk to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %spoofchk, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %cond)
  %cmp5 = icmp eq i32 %11, %cond
  br i1 %cmp5, label %if.end4.cleanup_crit_edge, label %if.end7

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  br i1 %enable, label %land.lhs.true, label %if.end7.if.end24_crit_edge

if.end7.if.end24_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

land.lhs.true:                                    ; preds = %if.end7
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 11
  %12 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vport_id, align 2
  %conv = zext i16 %13 to i32
  %vf_vlan_full = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 64
  %div3.i = lshr i32 %conv, 5
  %arrayidx.i = getelementptr i32, ptr %vf_vlan_full, i32 %div3.i
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %conv, 31
  %16 = shl nuw i32 1, %and.i
  %17 = and i32 %16, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool10.not = icmp eq i32 %17, 0
  br i1 %tobool10.not, label %land.lhs.true14.critedge, label %do.end

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.709, i32 noundef %vf) #20
  br label %if.end24

land.lhs.true14.critedge:                         ; preds = %land.lhs.true
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 12
  %20 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %back.i, align 4
  %vport_lock.i = getelementptr inbounds %struct.hclge_dev, ptr %21, i32 0, i32 61
  tail call void @mutex_lock_nested(ptr noundef %vport_lock.i, i32 noundef 0) #16
  %used_umv_num.i = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 10
  %22 = ptrtoint ptr %used_umv_num.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %used_umv_num.i, align 8
  %priv_umv_size.i = getelementptr inbounds %struct.hclge_dev, ptr %21, i32 0, i32 80
  %24 = ptrtoint ptr %priv_umv_size.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %priv_umv_size.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %23, i16 %25)
  %cmp.not.i = icmp ult i16 %23, %25
  br i1 %cmp.not.i, label %hclge_is_umv_space_full.exit.thread, label %hclge_is_umv_space_full.exit

hclge_is_umv_space_full.exit.thread:              ; preds = %land.lhs.true14.critedge
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_unlock(ptr noundef %vport_lock.i) #16
  br label %if.end24

hclge_is_umv_space_full.exit:                     ; preds = %land.lhs.true14.critedge
  %share_umv_size.i = getelementptr inbounds %struct.hclge_dev, ptr %21, i32 0, i32 81
  %26 = ptrtoint ptr %share_umv_size.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %share_umv_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %cmp4.i = icmp eq i16 %27, 0
  tail call void @mutex_unlock(ptr noundef %vport_lock.i) #16
  br i1 %cmp4.i, label %do.end20, label %hclge_is_umv_space_full.exit.if.end24_crit_edge

hclge_is_umv_space_full.exit.if.end24_crit_edge:  ; preds = %hclge_is_umv_space_full.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

do.end20:                                         ; preds = %hclge_is_umv_space_full.exit
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %5, align 8
  %dev22 = getelementptr inbounds %struct.pci_dev, ptr %29, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev22, ptr noundef nonnull @.str.712, i32 noundef %vf) #20
  br label %if.end24

if.end24:                                         ; preds = %do.end20, %hclge_is_umv_space_full.exit.if.end24_crit_edge, %hclge_is_umv_space_full.exit.thread, %do.end, %if.end7.if.end24_crit_edge
  %vport_id25 = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 11
  %30 = ptrtoint ptr %vport_id25 to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %vport_id25, align 2
  %conv26 = zext i16 %31 to i32
  %frombool.i.i = zext i1 %enable to i8
  %call.i.i = tail call fastcc i32 @hclge_config_switch_param(ptr noundef %5, i32 noundef %conv26, i8 noundef zeroext %frombool.i.i, i8 noundef zeroext -2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  %cond.i = select i1 %enable, ptr @.str.411, ptr @.str.412
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.409, i32 noundef %conv26, ptr noundef nonnull %cond.i, i32 noundef %call.i.i) #20
  br label %cleanup

if.end.i:                                         ; preds = %if.end24
  %conv.i.i = trunc i16 %31 to i8
  %call.i29.i = tail call fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %5, i8 noundef zeroext 0, i8 noundef zeroext 1, i1 noundef zeroext %enable, i8 noundef zeroext %conv.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i29.i)
  %tobool5.not.i = icmp eq i32 %call.i29.i, 0
  br i1 %tobool5.not.i, label %if.end31, label %do.end9.i

do.end9.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %34 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %5, align 8
  %dev11.i = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  %cond13.i = select i1 %enable, ptr @.str.411, ptr @.str.412
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev11.i, ptr noundef nonnull @.str.414, i32 noundef %conv26, ptr noundef nonnull %cond13.i, i32 noundef %call.i29.i) #20
  br label %cleanup

if.end31:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %spoofchk to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %cond, ptr %spoofchk, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end31, %do.end9.i, %do.end.i, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end31 ], [ -95, %hclge_get_vport.exit.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ], [ %call.i29.i, %do.end9.i ], [ %call.i.i, %do.end.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_vf_trust(ptr nocapture noundef readonly %handle, i32 noundef %vf, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %cond = zext i1 %enable to i32
  %call1 = tail call fastcc ptr @hclge_get_vf_vport(ptr noundef %5, i32 noundef %vf)
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %trusted = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 4
  %6 = ptrtoint ptr %trusted to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %trusted, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %cond)
  %cmp = icmp eq i32 %7, %cond
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %8 = ptrtoint ptr %trusted to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %cond, ptr %trusted, align 4
  %state = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state) #16
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 5
  %9 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %state.i, align 4
  %11 = and i32 %10, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i15 = icmp eq i32 %11, 0
  br i1 %tobool.not.i15, label %land.lhs.true.i, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end4
  %12 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %state.i, align 4
  %14 = and i32 %13, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool3.not.i = icmp eq i32 %14, 0
  br i1 %tobool3.not.i, label %if.then.i, label %land.lhs.true.i.cleanup_crit_edge

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %15 = load ptr, ptr @hclge_wq, align 4
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 48
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %15, ptr noundef %service_task.i, i32 noundef 0) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %land.lhs.true.i.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %hclge_get_vport.exit.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ], [ 0, %land.lhs.true.i.cleanup_crit_edge ], [ 0, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_vf_rate(ptr nocapture noundef readonly %handle, i32 noundef %vf, i32 noundef %min_tx_rate, i32 noundef %max_tx_rate, i1 noundef zeroext %force) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %min_tx_rate)
  %cmp.not.i = icmp ne i32 %min_tx_rate, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_tx_rate)
  %cmp1.i = icmp slt i32 %max_tx_rate, 0
  %or.cond.i = or i1 %cmp.not.i, %cmp1.i
  br i1 %or.cond.i, label %hclge_get_vport.exit.hclge_vf_rate_param_check.exit_crit_edge, label %lor.lhs.false2.i

hclge_get_vport.exit.hclge_vf_rate_param_check.exit_crit_edge: ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_vf_rate_param_check.exit

lor.lhs.false2.i:                                 ; preds = %hclge_get_vport.exit
  %max_speed.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 10
  %6 = ptrtoint ptr %max_speed.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max_speed.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %max_tx_rate)
  %cmp3.i = icmp ult i32 %7, %max_tx_rate
  br i1 %cmp3.i, label %lor.lhs.false2.i.hclge_vf_rate_param_check.exit_crit_edge, label %if.end

lor.lhs.false2.i.hclge_vf_rate_param_check.exit_crit_edge: ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_vf_rate_param_check.exit

hclge_vf_rate_param_check.exit:                   ; preds = %lor.lhs.false2.i.hclge_vf_rate_param_check.exit_crit_edge, %hclge_get_vport.exit.hclge_vf_rate_param_check.exit_crit_edge
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  %max_speed6.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 10
  %10 = ptrtoint ptr %max_speed6.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_speed6.i, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.714, i32 noundef %min_tx_rate, i32 noundef %max_tx_rate, i32 noundef %11) #20
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false2.i
  %call2 = tail call fastcc ptr @hclge_get_vf_vport(ptr noundef %5, i32 noundef %vf)
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  br i1 %force, label %if.end5.if.end9_crit_edge, label %land.lhs.true

if.end5.if.end9_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

land.lhs.true:                                    ; preds = %if.end5
  %max_tx_rate7 = getelementptr inbounds %struct.hclge_vport, ptr %call2, i32 0, i32 18, i32 3
  %12 = ptrtoint ptr %max_tx_rate7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %max_tx_rate7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %max_tx_rate)
  %cmp = icmp eq i32 %13, %max_tx_rate
  br i1 %cmp, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end9_crit_edge

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %land.lhs.true.if.end9_crit_edge, %if.end5.if.end9_crit_edge
  %call10 = tail call i32 @hclge_tm_qs_shaper_cfg(ptr noundef nonnull %call2, i32 noundef %max_tx_rate) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  %max_tx_rate15 = getelementptr inbounds %struct.hclge_vport, ptr %call2, i32 0, i32 18, i32 3
  %14 = ptrtoint ptr %max_tx_rate15 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %max_tx_rate, ptr %max_tx_rate15, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end9.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end.cleanup_crit_edge, %hclge_vf_rate_param_check.exit
  %retval.0 = phi i32 [ 0, %if.end13 ], [ -22, %hclge_vf_rate_param_check.exit ], [ -22, %if.end.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ %call10, %if.end9.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_vf_mac(ptr nocapture noundef readonly %handle, i32 noundef %vf, ptr nocapture noundef readonly %mac_addr) #0 align 64 {
entry:
  %format_mac_addr = alloca [18 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %format_mac_addr) #16
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = call ptr @memset(ptr %format_mac_addr, i32 255, i32 18)
  %5 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %back, align 4
  %call1 = tail call fastcc ptr @hclge_get_vf_vport(ptr noundef %6, i32 noundef %vf)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  %7 = ptrtoint ptr %mac_addr to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %mac_addr, align 1
  %conv.i = zext i8 %8 to i32
  %arrayidx1.i = getelementptr i8, ptr %mac_addr, i32 4
  %9 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx1.i, align 1
  %conv2.i = zext i8 %10 to i32
  %arrayidx3.i = getelementptr i8, ptr %mac_addr, i32 5
  %11 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx3.i, align 1
  %conv4.i = zext i8 %12 to i32
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %format_mac_addr, i32 noundef 18, ptr noundef nonnull @.str.80, i32 noundef %conv.i, i32 noundef %conv2.i, i32 noundef %conv4.i) #16
  %mac = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 1
  %13 = ptrtoint ptr %mac_addr to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mac_addr, align 4
  %15 = ptrtoint ptr %mac to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mac, align 4
  %xor.i = xor i32 %16, %14
  %17 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %arrayidx1.i, align 2
  %add.ptr1.i = getelementptr %struct.hclge_vport, ptr %call1, i32 0, i32 18, i32 1, i32 4
  %19 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %add.ptr1.i, align 2
  %xor37.i = xor i16 %20, %18
  %xor3.i = zext i16 %xor37.i to i32
  %or.i = or i32 %xor.i, %xor3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i41 = icmp eq i32 %or.i, 0
  br i1 %cmp.i41, label %do.end, label %if.end6

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %6, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.716, ptr noundef nonnull %format_mac_addr) #20
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %23 = ptrtoint ptr %mac to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %14, ptr %mac, align 4
  %24 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %arrayidx1.i, align 2
  %26 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %25, ptr %add.ptr1.i, align 2
  %state = getelementptr inbounds %struct.hclge_vport, ptr %call1, i32 0, i32 15
  %27 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %state, align 4
  %and1.i = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool11.not = icmp eq i32 %and1.i, 0
  %29 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %6, align 8
  %dev25 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  br i1 %tobool11.not, label %do.end23, label %do.end15

do.end15:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev25, ptr noundef nonnull @.str.719, i32 noundef %vf, ptr noundef nonnull %format_mac_addr) #20
  %call19 = call i32 @hclge_inform_reset_assert_to_vf(ptr noundef nonnull %call1) #16
  br label %cleanup

do.end23:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev25, ptr noundef nonnull @.str.722, i32 noundef %vf, ptr noundef nonnull %format_mac_addr) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end23, %do.end15, %do.end, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ %call19, %do.end15 ], [ 0, %do.end23 ], [ -22, %hclge_get_vport.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %format_mac_addr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_module_eeprom(ptr nocapture noundef readonly %handle, i32 noundef %offset, i32 noundef %len, ptr nocapture noundef writeonly %data) #0 align 64 {
entry:
  %desc.i25 = alloca [6 x %struct.hclge_desc], align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %media_type = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 1, i32 3
  %6 = ptrtoint ptr %media_type to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %media_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %7)
  %cmp.not = icmp eq i8 %7, 1
  br i1 %cmp.not, label %if.end, label %hclge_get_vport.exit.cleanup_crit_edge

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %8 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 28929, i1 noundef zeroext true) #16
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i23 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i23, label %hclge_module_existed.exit, label %hclge_module_existed.exit.thread

hclge_module_existed.exit.thread:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.724, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

hclge_module_existed.exit:                        ; preds = %if.end
  %11 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp.i24.not = icmp eq i32 %13, 0
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br i1 %cmp.i24.not, label %hclge_module_existed.exit.cleanup_crit_edge, label %while.cond.preheader

hclge_module_existed.exit.cleanup_crit_edge:      ; preds = %hclge_module_existed.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

while.cond.preheader:                             ; preds = %hclge_module_existed.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp535.not = icmp eq i32 %len, 0
  br i1 %cmp535.not, label %while.cond.preheader.cleanup_crit_edge, label %while.body.lr.ph

while.cond.preheader.cleanup_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %flag.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 0, i32 1
  %arrayidx.1.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 1
  %flag.1.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 1, i32 1
  %arrayidx.2.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 2
  %flag.2.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 2, i32 1
  %arrayidx.3.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 3
  %flag.3.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 3, i32 1
  %arrayidx.4.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 4
  %flag.4.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 4, i32 1
  %arrayidx.5.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 5
  %data5.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i25, i32 0, i32 4
  %read_len16.i = getelementptr inbounds %struct.hclge_sfp_info_bd0_cmd, ptr %data5.i, i32 0, i32 1
  %data33.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i25, i32 0, i32 4, i32 1
  %data61.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 1, i32 4
  %data61.1.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 2, i32 4
  %data61.2.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 3, i32 4
  %data61.3.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 4, i32 4
  %data61.4.i = getelementptr inbounds [6 x %struct.hclge_desc], ptr %desc.i25, i32 0, i32 5, i32 4
  br label %while.body

while.cond:                                       ; preds = %hclge_get_sfp_eeprom_info.exit
  %conv10 = zext i16 %retval.0.i31 to i32
  %add11 = add i32 %read_len.036, %conv10
  %cmp5 = icmp ult i32 %add11, %len
  br i1 %cmp5, label %while.cond.while.body_crit_edge, label %while.cond.cleanup_crit_edge

while.cond.cleanup_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

while.cond.while.body_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.body:                                       ; preds = %while.cond.while.body_crit_edge, %while.body.lr.ph
  %read_len.036 = phi i32 [ 0, %while.body.lr.ph ], [ %add11, %while.cond.while.body_crit_edge ]
  %add = add i32 %read_len.036, %offset
  %sub = sub i32 %len, %read_len.036
  %add.ptr = getelementptr i8, ptr %data, i32 %read_len.036
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %desc.i25) #16
  %14 = call ptr @memset(ptr %desc.i25, i32 255, i32 192)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i25, i32 noundef 28928, i1 noundef zeroext true) #16
  %15 = ptrtoint ptr %flag.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %flag.i, align 2
  %17 = or i16 %16, 1024
  store i16 %17, ptr %flag.i, align 2
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.1.i, i32 noundef 28928, i1 noundef zeroext true) #16
  %18 = ptrtoint ptr %flag.1.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %flag.1.i, align 2
  %20 = or i16 %19, 1024
  store i16 %20, ptr %flag.1.i, align 2
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.2.i, i32 noundef 28928, i1 noundef zeroext true) #16
  %21 = ptrtoint ptr %flag.2.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %flag.2.i, align 2
  %23 = or i16 %22, 1024
  store i16 %23, ptr %flag.2.i, align 2
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.3.i, i32 noundef 28928, i1 noundef zeroext true) #16
  %24 = ptrtoint ptr %flag.3.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %flag.3.i, align 2
  %26 = or i16 %25, 1024
  store i16 %26, ptr %flag.3.i, align 2
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.4.i, i32 noundef 28928, i1 noundef zeroext true) #16
  %27 = ptrtoint ptr %flag.4.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %flag.4.i, align 2
  %29 = or i16 %28, 1024
  store i16 %29, ptr %flag.4.i, align 2
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.5.i, i32 noundef 28928, i1 noundef zeroext true) #16
  %conv6.i = trunc i32 %add to i16
  %30 = call i16 @llvm.bswap.i16(i16 %conv6.i) #16
  %31 = ptrtoint ptr %data5.i to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %data5.i, align 4
  %conv9.i = and i32 %sub, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 140, i32 %conv9.i)
  %cmp11.i = icmp ult i32 %conv9.i, 140
  %phi.cast.i = trunc i32 %sub to i16
  %cond.i = select i1 %cmp11.i, i16 %phi.cast.i, i16 140
  %32 = call i16 @llvm.bswap.i16(i16 %cond.i) #16
  %33 = ptrtoint ptr %read_len16.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %32, ptr %read_len16.i, align 2
  %call.i.i27 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i25, i32 noundef 6) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i27)
  %tobool.not.i28 = icmp eq i32 %call.i.i27, 0
  br i1 %tobool.not.i28, label %if.end19.i, label %hclge_get_sfp_eeprom_info.exit.thread

hclge_get_sfp_eeprom_info.exit.thread:            ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  %34 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %5, align 8
  %dev.i29 = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i29, ptr noundef nonnull @.str.726, i32 noundef %call.i.i27) #20
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %desc.i25) #16
  br label %cleanup

if.end19.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %conv9.i)
  %cmp24.i = icmp ult i32 %conv9.i, 20
  %cond31.i = select i1 %cmp24.i, i16 %phi.cast.i, i16 20
  %conv35.i = zext i16 %cond31.i to i32
  %36 = call ptr @memcpy(ptr %add.ptr, ptr %data33.i, i32 %conv35.i)
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv35.i)
  %cmp41.not.i = icmp ugt i32 %sub, %conv35.i
  br i1 %cmp41.not.i, label %if.end44.i, label %if.end19.i.hclge_get_sfp_eeprom_info.exit_crit_edge

if.end19.i.hclge_get_sfp_eeprom_info.exit_crit_edge: ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_sfp_eeprom_info.exit

if.end44.i:                                       ; preds = %if.end19.i
  %conv46.i = sub i16 %phi.cast.i, %cond31.i
  %37 = call i16 @llvm.umin.i16(i16 %conv46.i, i16 24) #16
  %add.ptr.i = getelementptr i8, ptr %add.ptr, i32 %conv35.i
  %conv63.i = zext i16 %37 to i32
  %38 = call ptr @memcpy(ptr %add.ptr.i, ptr %data61.i, i32 %conv63.i)
  %add.i = add i16 %37, %cond31.i
  %conv40.1.i = zext i16 %add.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv40.1.i)
  %cmp41.not.1.i = icmp ugt i32 %sub, %conv40.1.i
  br i1 %cmp41.not.1.i, label %if.end44.1.i, label %if.end44.i.hclge_get_sfp_eeprom_info.exit_crit_edge

if.end44.i.hclge_get_sfp_eeprom_info.exit_crit_edge: ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_sfp_eeprom_info.exit

if.end44.1.i:                                     ; preds = %if.end44.i
  %conv46.1.i = sub i16 %phi.cast.i, %add.i
  %39 = call i16 @llvm.umin.i16(i16 %conv46.1.i, i16 24) #16
  %add.ptr.1.i = getelementptr i8, ptr %add.ptr, i32 %conv40.1.i
  %conv63.1.i = zext i16 %39 to i32
  %40 = call ptr @memcpy(ptr %add.ptr.1.i, ptr %data61.1.i, i32 %conv63.1.i)
  %add.1.i = add i16 %39, %add.i
  %conv40.2.i = zext i16 %add.1.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv40.2.i)
  %cmp41.not.2.i = icmp ugt i32 %sub, %conv40.2.i
  br i1 %cmp41.not.2.i, label %if.end44.2.i, label %if.end44.1.i.hclge_get_sfp_eeprom_info.exit_crit_edge

if.end44.1.i.hclge_get_sfp_eeprom_info.exit_crit_edge: ; preds = %if.end44.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_sfp_eeprom_info.exit

if.end44.2.i:                                     ; preds = %if.end44.1.i
  %conv46.2.i = sub i16 %phi.cast.i, %add.1.i
  %41 = call i16 @llvm.umin.i16(i16 %conv46.2.i, i16 24) #16
  %add.ptr.2.i = getelementptr i8, ptr %add.ptr, i32 %conv40.2.i
  %conv63.2.i = zext i16 %41 to i32
  %42 = call ptr @memcpy(ptr %add.ptr.2.i, ptr %data61.2.i, i32 %conv63.2.i)
  %add.2.i = add i16 %41, %add.1.i
  %conv40.3.i = zext i16 %add.2.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv40.3.i)
  %cmp41.not.3.i = icmp ugt i32 %sub, %conv40.3.i
  br i1 %cmp41.not.3.i, label %if.end44.3.i, label %if.end44.2.i.hclge_get_sfp_eeprom_info.exit_crit_edge

if.end44.2.i.hclge_get_sfp_eeprom_info.exit_crit_edge: ; preds = %if.end44.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_sfp_eeprom_info.exit

if.end44.3.i:                                     ; preds = %if.end44.2.i
  %conv46.3.i = sub i16 %phi.cast.i, %add.2.i
  %43 = call i16 @llvm.umin.i16(i16 %conv46.3.i, i16 24) #16
  %add.ptr.3.i = getelementptr i8, ptr %add.ptr, i32 %conv40.3.i
  %conv63.3.i = zext i16 %43 to i32
  %44 = call ptr @memcpy(ptr %add.ptr.3.i, ptr %data61.3.i, i32 %conv63.3.i)
  %add.3.i = add i16 %43, %add.2.i
  %conv40.4.i = zext i16 %add.3.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv40.4.i)
  %cmp41.not.4.i = icmp ugt i32 %sub, %conv40.4.i
  br i1 %cmp41.not.4.i, label %if.end44.4.i, label %if.end44.3.i.hclge_get_sfp_eeprom_info.exit_crit_edge

if.end44.3.i.hclge_get_sfp_eeprom_info.exit_crit_edge: ; preds = %if.end44.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_sfp_eeprom_info.exit

if.end44.4.i:                                     ; preds = %if.end44.3.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv46.4.i = sub i16 %phi.cast.i, %add.3.i
  %45 = call i16 @llvm.umin.i16(i16 %conv46.4.i, i16 24) #16
  %add.ptr.4.i = getelementptr i8, ptr %add.ptr, i32 %conv40.4.i
  %conv63.4.i = zext i16 %45 to i32
  %46 = call ptr @memcpy(ptr %add.ptr.4.i, ptr %data61.4.i, i32 %conv63.4.i)
  %add.4.i = add i16 %45, %add.3.i
  br label %hclge_get_sfp_eeprom_info.exit

hclge_get_sfp_eeprom_info.exit:                   ; preds = %if.end44.4.i, %if.end44.3.i.hclge_get_sfp_eeprom_info.exit_crit_edge, %if.end44.2.i.hclge_get_sfp_eeprom_info.exit_crit_edge, %if.end44.1.i.hclge_get_sfp_eeprom_info.exit_crit_edge, %if.end44.i.hclge_get_sfp_eeprom_info.exit_crit_edge, %if.end19.i.hclge_get_sfp_eeprom_info.exit_crit_edge
  %retval.0.i31 = phi i16 [ %cond31.i, %if.end19.i.hclge_get_sfp_eeprom_info.exit_crit_edge ], [ %add.i, %if.end44.i.hclge_get_sfp_eeprom_info.exit_crit_edge ], [ %add.1.i, %if.end44.1.i.hclge_get_sfp_eeprom_info.exit_crit_edge ], [ %add.2.i, %if.end44.2.i.hclge_get_sfp_eeprom_info.exit_crit_edge ], [ %add.3.i, %if.end44.3.i.hclge_get_sfp_eeprom_info.exit_crit_edge ], [ %add.4.i, %if.end44.4.i ]
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %desc.i25) #16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %retval.0.i31)
  %tobool.not = icmp eq i16 %retval.0.i31, 0
  br i1 %tobool.not, label %hclge_get_sfp_eeprom_info.exit.cleanup_crit_edge, label %while.cond

hclge_get_sfp_eeprom_info.exit.cleanup_crit_edge: ; preds = %hclge_get_sfp_eeprom_info.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %hclge_get_sfp_eeprom_info.exit.cleanup_crit_edge, %hclge_get_sfp_eeprom_info.exit.thread, %while.cond.cleanup_crit_edge, %while.cond.preheader.cleanup_crit_edge, %hclge_module_existed.exit.cleanup_crit_edge, %hclge_module_existed.exit.thread, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %hclge_get_vport.exit.cleanup_crit_edge ], [ -6, %hclge_module_existed.exit.cleanup_crit_edge ], [ -6, %hclge_module_existed.exit.thread ], [ -5, %hclge_get_sfp_eeprom_info.exit.thread ], [ 0, %while.cond.preheader.cleanup_crit_edge ], [ -5, %hclge_get_sfp_eeprom_info.exit.cleanup_crit_edge ], [ 0, %while.cond.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @hclge_get_cmdq_stat(ptr nocapture noundef readonly %handle) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %comm_state = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2, i32 0, i32 3
  %6 = ptrtoint ptr %comm_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %comm_state, align 4
  %and1.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool = icmp ne i32 %and1.i, 0
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_add_cls_flower(ptr nocapture noundef readonly %handle, ptr nocapture noundef readonly %cls_flower, i32 noundef %tc) #0 align 64 {
entry:
  %match.i30.i = alloca %struct.flow_match_ports, align 4
  %match.i26.i = alloca %struct.flow_match_control, align 4
  %match4.i.i = alloca %struct.flow_match_ipv4_addrs, align 4
  %match21.i.i = alloca %struct.flow_match_ipv6_addrs, align 4
  %match.i20.i = alloca %struct.flow_match_vlan, align 4
  %match.i14.i = alloca %struct.flow_match_eth_addrs, align 4
  %match.i.i = alloca %struct.flow_match_basic, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %prio1.i = getelementptr inbounds %struct.flow_cls_common_offload, ptr %cls_flower, i32 0, i32 2
  %6 = ptrtoint ptr %prio1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %prio1.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tc)
  %cmp.i43 = icmp slt i32 %tc, 0
  br i1 %cmp.i43, label %hclge_get_vport.exit.do.end.i_crit_edge, label %lor.lhs.false.i

hclge_get_vport.exit.do.end.i_crit_edge:          ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

lor.lhs.false.i:                                  ; preds = %hclge_get_vport.exit
  %tc_max.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 33
  %8 = ptrtoint ptr %tc_max.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %tc_max.i, align 2
  %conv.i = zext i8 %9 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %tc)
  %cmp2.i = icmp ult i32 %conv.i, %tc
  br i1 %cmp2.i, label %lor.lhs.false.i.do.end.i_crit_edge, label %if.end.i

lor.lhs.false.i.do.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

do.end.i:                                         ; preds = %lor.lhs.false.i.do.end.i_crit_edge, %hclge_get_vport.exit.do.end.i_crit_edge
  %10 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %5, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.730) #20
  br label %do.end

if.end.i:                                         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp4.i = icmp eq i32 %7, 0
  br i1 %cmp4.i, label %if.end.i.do.end12.i_crit_edge, label %lor.lhs.false6.i

if.end.i.do.end12.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end12.i

lor.lhs.false6.i:                                 ; preds = %if.end.i
  %rule_num.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 66, i32 2
  %12 = ptrtoint ptr %rule_num.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rule_num.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %13)
  %cmp7.i = icmp ugt i32 %7, %13
  br i1 %cmp7.i, label %lor.lhs.false6.i.do.end12.i_crit_edge, label %if.end18.i

lor.lhs.false6.i.do.end12.i_crit_edge:            ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end12.i

do.end12.i:                                       ; preds = %lor.lhs.false6.i.do.end12.i_crit_edge, %if.end.i.do.end12.i_crit_edge
  %14 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %5, align 8
  %dev14.i = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  %rule_num16.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 66, i32 2
  %16 = ptrtoint ptr %rule_num16.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %rule_num16.i, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev14.i, ptr noundef nonnull @.str.733, i32 noundef %7, i32 noundef %17) #20
  br label %do.end

if.end18.i:                                       ; preds = %lor.lhs.false6.i
  %sub.i = add i32 %7, -1
  %fd_bmap.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 74
  %div3.i.i = lshr i32 %sub.i, 5
  %arrayidx.i.i = getelementptr i32, ptr %fd_bmap.i, i32 %div3.i.i
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %sub.i, 31
  %20 = shl nuw i32 1, %and.i.i
  %21 = and i32 %19, %20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i44 = icmp eq i32 %21, 0
  br i1 %tobool.not.i44, label %if.end, label %do.end22.i

do.end22.i:                                       ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %5, align 8
  %dev24.i = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24.i, ptr noundef nonnull @.str.736, i32 noundef %7) #20
  br label %do.end

do.end:                                           ; preds = %do.end22.i, %do.end12.i, %do.end.i
  %24 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.728, i32 noundef -22) #20
  br label %cleanup

if.end:                                           ; preds = %if.end18.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %26 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %26, i32 noundef 3520, i32 noundef 176) #21
  %tobool3.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %rule.i.i = getelementptr inbounds %struct.flow_cls_offload, ptr %cls_flower, i32 0, i32 3
  %27 = ptrtoint ptr %rule.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rule.i.i, align 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %and.i = and i32 %32, -1184
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i45 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i45, label %if.end.i48, label %if.then8

if.end.i48:                                       ; preds = %if.end5
  %and.i.i.i.i = and i32 %32, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.i.i.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.i.i.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i48
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %match.i.i) #16
  %33 = ptrtoint ptr %match.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr inttoptr (i32 -1 to ptr), ptr %match.i.i, align 4, !annotation !1463
  %34 = getelementptr inbounds %struct.flow_match_basic, ptr %match.i.i, i32 0, i32 1
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr inttoptr (i32 -1 to ptr), ptr %34, align 4, !annotation !1463
  call void @flow_rule_match_basic(ptr noundef %28, ptr noundef nonnull %match.i.i) #16
  %36 = ptrtoint ptr %match.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %match.i.i, align 4
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %37, align 2
  %40 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %34, align 4
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %41, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %39)
  %cmp.i.i = icmp eq i16 %39, 3
  %spec.select.i.i = select i1 %cmp.i.i, i16 0, i16 %39
  %spec.select22.i.i = select i1 %cmp.i.i, i16 0, i16 %43
  %ether_proto.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 7
  %44 = ptrtoint ptr %ether_proto.i.i to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %spec.select.i.i, ptr %ether_proto.i.i, align 2
  %ether_proto4.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 7
  %45 = ptrtoint ptr %ether_proto4.i.i to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %spec.select22.i.i, ptr %ether_proto4.i.i, align 2
  %ip_proto.i.i = getelementptr inbounds %struct.flow_dissector_key_basic, ptr %37, i32 0, i32 1
  %46 = ptrtoint ptr %ip_proto.i.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %ip_proto.i.i, align 2
  %ip_proto7.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 12
  %48 = ptrtoint ptr %ip_proto7.i.i to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %47, ptr %ip_proto7.i.i, align 1
  %ip_proto9.i.i = getelementptr inbounds %struct.flow_dissector_key_basic, ptr %41, i32 0, i32 1
  %49 = ptrtoint ptr %ip_proto9.i.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %ip_proto9.i.i, align 2
  %ip_proto11.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 12
  %51 = ptrtoint ptr %ip_proto11.i.i to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %ip_proto11.i.i, align 1
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %match.i.i) #16
  br label %hclge_get_cls_key_basic.exit.i

if.else.i.i:                                      ; preds = %if.end.i48
  call void @__sanitizer_cov_trace_pc() #18
  %unused_tuple.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 3
  %52 = ptrtoint ptr %unused_tuple.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %unused_tuple.i.i, align 8
  %or13.i.i = or i32 %53, 9437184
  store i32 %or13.i.i, ptr %unused_tuple.i.i, align 8
  br label %hclge_get_cls_key_basic.exit.i

hclge_get_cls_key_basic.exit.i:                   ; preds = %if.else.i.i, %if.then.i.i
  %54 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %28, align 8
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  %and.i.i.i15.i = and i32 %57, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i15.i)
  %tobool.i.i.not.i16.i = icmp eq i32 %and.i.i.i15.i, 0
  br i1 %tobool.i.i.not.i16.i, label %if.else.i19.i, label %if.then.i17.i

if.then.i17.i:                                    ; preds = %hclge_get_cls_key_basic.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %match.i14.i) #16
  %58 = ptrtoint ptr %match.i14.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr inttoptr (i32 -1 to ptr), ptr %match.i14.i, align 4, !annotation !1463
  %59 = getelementptr inbounds %struct.flow_match_eth_addrs, ptr %match.i14.i, i32 0, i32 1
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr inttoptr (i32 -1 to ptr), ptr %59, align 4, !annotation !1463
  call void @flow_rule_match_eth_addrs(ptr noundef %28, ptr noundef nonnull %match.i14.i) #16
  %tuples.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1
  %dst_mac.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 1
  %61 = ptrtoint ptr %match.i14.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %match.i14.i, align 4
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %62, align 4
  %65 = ptrtoint ptr %dst_mac.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %dst_mac.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %62, i32 4
  %66 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %add.ptr.i.i.i, align 2
  %add.ptr1.i.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 1, i32 4
  %68 = ptrtoint ptr %add.ptr1.i.i.i to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %67, ptr %add.ptr1.i.i.i, align 2
  %tuples_mask.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2
  %dst_mac2.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 1
  %69 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %59, align 4
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %70, align 4
  %73 = ptrtoint ptr %dst_mac2.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %72, ptr %dst_mac2.i.i, align 4
  %add.ptr.i24.i.i = getelementptr i8, ptr %70, i32 4
  %74 = ptrtoint ptr %add.ptr.i24.i.i to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %add.ptr.i24.i.i, align 2
  %add.ptr1.i25.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 1, i32 4
  %76 = ptrtoint ptr %add.ptr1.i25.i.i to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 %75, ptr %add.ptr1.i25.i.i, align 2
  %src.i.i = getelementptr inbounds %struct.flow_dissector_key_eth_addrs, ptr %62, i32 0, i32 1
  %77 = ptrtoint ptr %src.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %src.i.i, align 4
  %79 = ptrtoint ptr %tuples.i.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %tuples.i.i, align 8
  %add.ptr.i26.i.i = getelementptr %struct.flow_dissector_key_eth_addrs, ptr %62, i32 0, i32 1, i32 4
  %80 = ptrtoint ptr %add.ptr.i26.i.i to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %add.ptr.i26.i.i, align 2
  %add.ptr1.i27.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 0, i32 4
  %82 = ptrtoint ptr %add.ptr1.i27.i.i to i32
  call void @__asan_store2_noabort(i32 %82)
  store i16 %81, ptr %add.ptr1.i27.i.i, align 4
  %src14.i.i = getelementptr inbounds %struct.flow_dissector_key_eth_addrs, ptr %70, i32 0, i32 1
  %83 = ptrtoint ptr %src14.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %src14.i.i, align 4
  %85 = ptrtoint ptr %tuples_mask.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %84, ptr %tuples_mask.i.i, align 8
  %add.ptr.i28.i.i = getelementptr %struct.flow_dissector_key_eth_addrs, ptr %70, i32 0, i32 1, i32 4
  %86 = ptrtoint ptr %add.ptr.i28.i.i to i32
  call void @__asan_load2_noabort(i32 %86)
  %87 = load i16, ptr %add.ptr.i28.i.i, align 2
  %add.ptr1.i29.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 0, i32 4
  %88 = ptrtoint ptr %add.ptr1.i29.i.i to i32
  call void @__asan_store2_noabort(i32 %88)
  store i16 %87, ptr %add.ptr1.i29.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %match.i14.i) #16
  br label %hclge_get_cls_key_mac.exit.i

if.else.i19.i:                                    ; preds = %hclge_get_cls_key_basic.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %unused_tuple.i18.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 3
  %89 = ptrtoint ptr %unused_tuple.i18.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %unused_tuple.i18.i, align 8
  %or17.i.i = or i32 %90, 196608
  store i32 %or17.i.i, ptr %unused_tuple.i18.i, align 8
  br label %hclge_get_cls_key_mac.exit.i

hclge_get_cls_key_mac.exit.i:                     ; preds = %if.else.i19.i, %if.then.i17.i
  %91 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %28, align 8
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %92, align 4
  %and.i.i.i21.i = and i32 %94, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i21.i)
  %tobool.i.i.not.i22.i = icmp eq i32 %and.i.i.i21.i, 0
  br i1 %tobool.i.i.not.i22.i, label %if.else.i25.i, label %if.then.i23.i

if.then.i23.i:                                    ; preds = %hclge_get_cls_key_mac.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %match.i20.i) #16
  %95 = ptrtoint ptr %match.i20.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr inttoptr (i32 -1 to ptr), ptr %match.i20.i, align 4, !annotation !1463
  %96 = getelementptr inbounds %struct.flow_match_vlan, ptr %match.i20.i, i32 0, i32 1
  %97 = ptrtoint ptr %96 to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr inttoptr (i32 -1 to ptr), ptr %96, align 4, !annotation !1463
  call void @flow_rule_match_vlan(ptr noundef %28, ptr noundef nonnull %match.i20.i) #16
  %98 = ptrtoint ptr %match.i20.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %match.i20.i, align 4
  %100 = ptrtoint ptr %99 to i32
  call void @__asan_load2_noabort(i32 %100)
  %bf.load.i.i = load i16, ptr %99, align 2
  %bf.lshr.i.i = lshr i16 %bf.load.i.i, 4
  %101 = shl i16 %bf.load.i.i, 13
  %or20.i.i = or i16 %bf.lshr.i.i, %101
  %vlan_tag1.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 6
  %102 = ptrtoint ptr %vlan_tag1.i.i to i32
  call void @__asan_store2_noabort(i32 %102)
  store i16 %or20.i.i, ptr %vlan_tag1.i.i, align 8
  %103 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %96, align 4
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_load2_noabort(i32 %105)
  %bf.load5.i.i = load i16, ptr %104, align 2
  %bf.lshr6.i.i = lshr i16 %bf.load5.i.i, 4
  %106 = shl i16 %bf.load5.i.i, 13
  %or1321.i.i = or i16 %bf.lshr6.i.i, %106
  %vlan_tag115.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 6
  %107 = ptrtoint ptr %vlan_tag115.i.i to i32
  call void @__asan_store2_noabort(i32 %107)
  store i16 %or1321.i.i, ptr %vlan_tag115.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %match.i20.i) #16
  br label %hclge_get_cls_key_vlan.exit.i

if.else.i25.i:                                    ; preds = %hclge_get_cls_key_mac.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %unused_tuple.i24.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 3
  %108 = ptrtoint ptr %unused_tuple.i24.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %unused_tuple.i24.i, align 8
  %or16.i.i = or i32 %109, 262144
  store i32 %or16.i.i, ptr %unused_tuple.i24.i, align 8
  br label %hclge_get_cls_key_vlan.exit.i

hclge_get_cls_key_vlan.exit.i:                    ; preds = %if.else.i25.i, %if.then.i23.i
  %110 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %28, align 8
  %112 = ptrtoint ptr %111 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %111, align 4
  %and.i.i.i27.i = and i32 %113, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i27.i)
  %tobool.i.i.not.i28.i = icmp eq i32 %and.i.i.i27.i, 0
  br i1 %tobool.i.i.not.i28.i, label %hclge_get_cls_key_vlan.exit.i.if.else48.i.i_crit_edge, label %if.end.i.i

hclge_get_cls_key_vlan.exit.i.if.else48.i.i_crit_edge: ; preds = %hclge_get_cls_key_vlan.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else48.i.i

if.end.i.i:                                       ; preds = %hclge_get_cls_key_vlan.exit.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %match.i26.i) #16
  %114 = ptrtoint ptr %match.i26.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr inttoptr (i32 -1 to ptr), ptr %match.i26.i, align 4, !annotation !1463
  %115 = getelementptr inbounds %struct.flow_match_control, ptr %match.i26.i, i32 0, i32 1
  %116 = ptrtoint ptr %115 to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr inttoptr (i32 -1 to ptr), ptr %115, align 4, !annotation !1463
  call void @flow_rule_match_control(ptr noundef %28, ptr noundef nonnull %match.i26.i) #16
  %117 = ptrtoint ptr %match.i26.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %match.i26.i, align 4
  %addr_type1.i.i = getelementptr inbounds %struct.flow_dissector_key_control, ptr %118, i32 0, i32 1
  %119 = ptrtoint ptr %addr_type1.i.i to i32
  call void @__asan_load2_noabort(i32 %119)
  %120 = load i16, ptr %addr_type1.i.i, align 2
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %match.i26.i) #16
  %121 = zext i16 %120 to i64
  call void @__sanitizer_cov_trace_switch(i64 %121, ptr @__sancov_gen_cov_switch_values.777)
  switch i16 %120, label %if.end.i.i.if.else48.i.i_crit_edge [
    i16 2, label %if.then3.i.i
    i16 3, label %if.then20.i.i
  ]

if.end.i.i.if.else48.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else48.i.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %match4.i.i) #16
  %122 = ptrtoint ptr %match4.i.i to i32
  call void @__asan_store4_noabort(i32 %122)
  store ptr inttoptr (i32 -1 to ptr), ptr %match4.i.i, align 4, !annotation !1463
  %123 = getelementptr inbounds %struct.flow_match_ipv4_addrs, ptr %match4.i.i, i32 0, i32 1
  %124 = ptrtoint ptr %123 to i32
  call void @__asan_store4_noabort(i32 %124)
  store ptr inttoptr (i32 -1 to ptr), ptr %123, align 4, !annotation !1463
  call void @flow_rule_match_ipv4_addrs(ptr noundef %28, ptr noundef nonnull %match4.i.i) #16
  %125 = ptrtoint ptr %match4.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %match4.i.i, align 4
  %127 = ptrtoint ptr %126 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %126, align 4
  %arrayidx.i.i49 = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %129 = ptrtoint ptr %arrayidx.i.i49 to i32
  call void @__asan_store4_noabort(i32 %129)
  store i32 %128, ptr %arrayidx.i.i49, align 8
  %130 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %123, align 4
  %132 = ptrtoint ptr %131 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %131, align 4
  %arrayidx8.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %134 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %133, ptr %arrayidx8.i.i, align 8
  %dst.i.i = getelementptr inbounds %struct.flow_dissector_key_ipv4_addrs, ptr %126, i32 0, i32 1
  %135 = ptrtoint ptr %dst.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %dst.i.i, align 4
  %arrayidx11.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %137 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 %136, ptr %arrayidx11.i.i, align 8
  %dst13.i.i = getelementptr inbounds %struct.flow_dissector_key_ipv4_addrs, ptr %131, i32 0, i32 1
  %138 = ptrtoint ptr %dst13.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %dst13.i.i, align 4
  %arrayidx16.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %140 = ptrtoint ptr %arrayidx16.i.i to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 %139, ptr %arrayidx16.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %match4.i.i) #16
  br label %hclge_get_cls_key_ip.exit.i

if.then20.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %match21.i.i) #16
  %141 = ptrtoint ptr %match21.i.i to i32
  call void @__asan_store4_noabort(i32 %141)
  store ptr inttoptr (i32 -1 to ptr), ptr %match21.i.i, align 4, !annotation !1463
  %142 = getelementptr inbounds %struct.flow_match_ipv6_addrs, ptr %match21.i.i, i32 0, i32 1
  %143 = ptrtoint ptr %142 to i32
  call void @__asan_store4_noabort(i32 %143)
  store ptr inttoptr (i32 -1 to ptr), ptr %142, align 4, !annotation !1463
  call void @flow_rule_match_ipv6_addrs(ptr noundef %28, ptr noundef nonnull %match21.i.i) #16
  %src_ip23.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2
  %144 = ptrtoint ptr %match21.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %match21.i.i, align 4
  %146 = ptrtoint ptr %145 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %145, align 4
  %148 = ptrtoint ptr %src_ip23.i.i to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 %147, ptr %src_ip23.i.i, align 4
  %arrayidx.1.i.i.i = getelementptr i32, ptr %145, i32 1
  %149 = ptrtoint ptr %arrayidx.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %arrayidx.1.i.i.i, align 4
  %arrayidx1.1.i.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 1
  %151 = ptrtoint ptr %arrayidx1.1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %150, ptr %arrayidx1.1.i.i.i, align 8
  %arrayidx.2.i.i.i = getelementptr i32, ptr %145, i32 2
  %152 = ptrtoint ptr %arrayidx.2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %arrayidx.2.i.i.i, align 4
  %arrayidx1.2.i.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 2
  %154 = ptrtoint ptr %arrayidx1.2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 %153, ptr %arrayidx1.2.i.i.i, align 4
  %arrayidx.3.i.i.i = getelementptr i32, ptr %145, i32 3
  %155 = ptrtoint ptr %arrayidx.3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %arrayidx.3.i.i.i, align 4
  %arrayidx1.3.i.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 2, i32 3
  %157 = ptrtoint ptr %arrayidx1.3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %156, ptr %arrayidx1.3.i.i.i, align 8
  %src_ip28.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2
  %158 = ptrtoint ptr %142 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %142, align 4
  %160 = ptrtoint ptr %159 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %159, align 4
  %162 = ptrtoint ptr %src_ip28.i.i to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 %161, ptr %src_ip28.i.i, align 4
  %arrayidx.1.i66.i.i = getelementptr i32, ptr %159, i32 1
  %163 = ptrtoint ptr %arrayidx.1.i66.i.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %arrayidx.1.i66.i.i, align 4
  %arrayidx1.1.i67.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 1
  %165 = ptrtoint ptr %arrayidx1.1.i67.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 %164, ptr %arrayidx1.1.i67.i.i, align 8
  %arrayidx.2.i68.i.i = getelementptr i32, ptr %159, i32 2
  %166 = ptrtoint ptr %arrayidx.2.i68.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %arrayidx.2.i68.i.i, align 4
  %arrayidx1.2.i69.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 2
  %168 = ptrtoint ptr %arrayidx1.2.i69.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store i32 %167, ptr %arrayidx1.2.i69.i.i, align 4
  %arrayidx.3.i70.i.i = getelementptr i32, ptr %159, i32 3
  %169 = ptrtoint ptr %arrayidx.3.i70.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %arrayidx.3.i70.i.i, align 4
  %arrayidx1.3.i71.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 2, i32 3
  %171 = ptrtoint ptr %arrayidx1.3.i71.i.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %170, ptr %arrayidx1.3.i71.i.i, align 8
  %dst_ip35.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3
  %dst38.i.i = getelementptr inbounds %struct.flow_dissector_key_ipv6_addrs, ptr %145, i32 0, i32 1
  %172 = ptrtoint ptr %dst38.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %dst38.i.i, align 4
  %174 = ptrtoint ptr %dst_ip35.i.i to i32
  call void @__asan_store4_noabort(i32 %174)
  store i32 %173, ptr %dst_ip35.i.i, align 4
  %arrayidx.1.i72.i.i = getelementptr %struct.flow_dissector_key_ipv6_addrs, ptr %145, i32 0, i32 1, i32 0, i32 0, i32 1
  %175 = ptrtoint ptr %arrayidx.1.i72.i.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %arrayidx.1.i72.i.i, align 4
  %arrayidx1.1.i73.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 1
  %177 = ptrtoint ptr %arrayidx1.1.i73.i.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 %176, ptr %arrayidx1.1.i73.i.i, align 8
  %arrayidx.2.i74.i.i = getelementptr %struct.flow_dissector_key_ipv6_addrs, ptr %145, i32 0, i32 1, i32 0, i32 0, i32 2
  %178 = ptrtoint ptr %arrayidx.2.i74.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %arrayidx.2.i74.i.i, align 4
  %arrayidx1.2.i75.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 2
  %180 = ptrtoint ptr %arrayidx1.2.i75.i.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store i32 %179, ptr %arrayidx1.2.i75.i.i, align 4
  %arrayidx.3.i76.i.i = getelementptr %struct.flow_dissector_key_ipv6_addrs, ptr %145, i32 0, i32 1, i32 0, i32 0, i32 3
  %181 = ptrtoint ptr %arrayidx.3.i76.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %arrayidx.3.i76.i.i, align 4
  %arrayidx1.3.i77.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 3, i32 3
  %183 = ptrtoint ptr %arrayidx1.3.i77.i.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 %182, ptr %arrayidx1.3.i77.i.i, align 8
  %dst_ip42.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3
  %dst45.i.i = getelementptr inbounds %struct.flow_dissector_key_ipv6_addrs, ptr %159, i32 0, i32 1
  %184 = ptrtoint ptr %dst45.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %dst45.i.i, align 4
  %186 = ptrtoint ptr %dst_ip42.i.i to i32
  call void @__asan_store4_noabort(i32 %186)
  store i32 %185, ptr %dst_ip42.i.i, align 4
  %arrayidx.1.i78.i.i = getelementptr %struct.flow_dissector_key_ipv6_addrs, ptr %159, i32 0, i32 1, i32 0, i32 0, i32 1
  %187 = ptrtoint ptr %arrayidx.1.i78.i.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %arrayidx.1.i78.i.i, align 4
  %arrayidx1.1.i79.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 1
  %189 = ptrtoint ptr %arrayidx1.1.i79.i.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 %188, ptr %arrayidx1.1.i79.i.i, align 8
  %arrayidx.2.i80.i.i = getelementptr %struct.flow_dissector_key_ipv6_addrs, ptr %159, i32 0, i32 1, i32 0, i32 0, i32 2
  %190 = ptrtoint ptr %arrayidx.2.i80.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %arrayidx.2.i80.i.i, align 4
  %arrayidx1.2.i81.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 2
  %192 = ptrtoint ptr %arrayidx1.2.i81.i.i to i32
  call void @__asan_store4_noabort(i32 %192)
  store i32 %191, ptr %arrayidx1.2.i81.i.i, align 4
  %arrayidx.3.i82.i.i = getelementptr %struct.flow_dissector_key_ipv6_addrs, ptr %159, i32 0, i32 1, i32 0, i32 0, i32 3
  %193 = ptrtoint ptr %arrayidx.3.i82.i.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %arrayidx.3.i82.i.i, align 4
  %arrayidx1.3.i83.i.i = getelementptr %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 3, i32 3
  %195 = ptrtoint ptr %arrayidx1.3.i83.i.i to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 %194, ptr %arrayidx1.3.i83.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %match21.i.i) #16
  br label %hclge_get_cls_key_ip.exit.i

if.else48.i.i:                                    ; preds = %if.end.i.i.if.else48.i.i_crit_edge, %hclge_get_cls_key_vlan.exit.i.if.else48.i.i_crit_edge
  %unused_tuple.i29.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 3
  %196 = ptrtoint ptr %unused_tuple.i29.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %unused_tuple.i29.i, align 8
  %or50.i.i = or i32 %197, 50331648
  store i32 %or50.i.i, ptr %unused_tuple.i29.i, align 8
  br label %hclge_get_cls_key_ip.exit.i

hclge_get_cls_key_ip.exit.i:                      ; preds = %if.else48.i.i, %if.then20.i.i, %if.then3.i.i
  %198 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %28, align 8
  %200 = ptrtoint ptr %199 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %199, align 4
  %and.i.i.i31.i = and i32 %201, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i31.i)
  %tobool.i.i.not.i32.i = icmp eq i32 %and.i.i.i31.i, 0
  br i1 %tobool.i.i.not.i32.i, label %if.else.i36.i, label %if.then.i34.i

if.then.i34.i:                                    ; preds = %hclge_get_cls_key_ip.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %match.i30.i) #16
  %202 = ptrtoint ptr %match.i30.i to i32
  call void @__asan_store4_noabort(i32 %202)
  store ptr inttoptr (i32 -1 to ptr), ptr %match.i30.i, align 4, !annotation !1463
  %203 = getelementptr inbounds %struct.flow_match_ports, ptr %match.i30.i, i32 0, i32 1
  %204 = ptrtoint ptr %203 to i32
  call void @__asan_store4_noabort(i32 %204)
  store ptr inttoptr (i32 -1 to ptr), ptr %203, align 4, !annotation !1463
  call void @flow_rule_match_ports(ptr noundef %28, ptr noundef nonnull %match.i30.i) #16
  %205 = ptrtoint ptr %match.i30.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %match.i30.i, align 4
  %207 = ptrtoint ptr %206 to i32
  call void @__asan_load2_noabort(i32 %207)
  %208 = load i16, ptr %206, align 4
  %src_port.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 4
  %209 = ptrtoint ptr %src_port.i.i to i32
  call void @__asan_store2_noabort(i32 %209)
  store i16 %208, ptr %src_port.i.i, align 4
  %210 = ptrtoint ptr %203 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %203, align 4
  %212 = ptrtoint ptr %211 to i32
  call void @__asan_load2_noabort(i32 %212)
  %213 = load i16, ptr %211, align 4
  %src_port2.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 4
  %214 = ptrtoint ptr %src_port2.i.i to i32
  call void @__asan_store2_noabort(i32 %214)
  store i16 %213, ptr %src_port2.i.i, align 4
  %dst.i33.i = getelementptr inbounds %struct.anon.162, ptr %206, i32 0, i32 1
  %215 = ptrtoint ptr %dst.i33.i to i32
  call void @__asan_load2_noabort(i32 %215)
  %216 = load i16, ptr %dst.i33.i, align 2
  %dst_port.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 1, i32 5
  %217 = ptrtoint ptr %dst_port.i.i to i32
  call void @__asan_store2_noabort(i32 %217)
  store i16 %216, ptr %dst_port.i.i, align 2
  %dst6.i.i = getelementptr inbounds %struct.anon.162, ptr %211, i32 0, i32 1
  %218 = ptrtoint ptr %dst6.i.i to i32
  call void @__asan_load2_noabort(i32 %218)
  %219 = load i16, ptr %dst6.i.i, align 2
  %dst_port8.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 2, i32 5
  %220 = ptrtoint ptr %dst_port8.i.i to i32
  call void @__asan_store2_noabort(i32 %220)
  store i16 %219, ptr %dst_port8.i.i, align 2
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %match.i30.i) #16
  br label %if.end9

if.else.i36.i:                                    ; preds = %hclge_get_cls_key_ip.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %unused_tuple.i35.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 3
  %221 = ptrtoint ptr %unused_tuple.i35.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %unused_tuple.i35.i, align 8
  %or10.i.i = or i32 %222, 402653184
  store i32 %or10.i.i, ptr %unused_tuple.i35.i, align 8
  br label %if.end9

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %223 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %5, align 8
  %dev.i46 = getelementptr inbounds %struct.pci_dev, ptr %224, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i46, ptr noundef nonnull @.str.738, i32 noundef %32) #20
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %cleanup

if.end9:                                          ; preds = %if.else.i36.i, %if.then.i34.i
  %action = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 11
  %225 = ptrtoint ptr %action to i32
  call void @__asan_store1_noabort(i32 %225)
  store i8 2, ptr %action, align 4
  %conv = trunc i32 %tc to i8
  %226 = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 5
  %tc10 = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 5, i32 0, i32 0, i32 1
  %227 = ptrtoint ptr %tc10 to i32
  call void @__asan_store1_noabort(i32 %227)
  store i8 %conv, ptr %tc10, align 4
  %228 = ptrtoint ptr %prio1.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %prio1.i, align 8
  %230 = trunc i32 %229 to i16
  %conv11 = add i16 %230, -1
  %location = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 8
  %231 = ptrtoint ptr %location to i32
  call void @__asan_store2_noabort(i32 %231)
  store i16 %conv11, ptr %location, align 8
  %vf_id = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 7
  %232 = ptrtoint ptr %vf_id to i32
  call void @__asan_store2_noabort(i32 %232)
  store i16 0, ptr %vf_id, align 2
  %cookie = getelementptr inbounds %struct.flow_cls_offload, ptr %cls_flower, i32 0, i32 2
  %233 = ptrtoint ptr %cookie to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %cookie, align 4
  %235 = ptrtoint ptr %226 to i32
  call void @__asan_store4_noabort(i32 %235)
  store i32 %234, ptr %226, align 8
  %rule_type = getelementptr inbounds %struct.hclge_fd_rule, ptr %call7.i.i, i32 0, i32 9
  %236 = ptrtoint ptr %rule_type to i32
  call void @__asan_store4_noabort(i32 %236)
  store i32 3, ptr %rule_type, align 4
  %call13 = call fastcc i32 @hclge_add_fd_entry_common(ptr noundef %5, ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end9.cleanup_crit_edge, label %if.then15

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then15:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then15, %if.end9.cleanup_crit_edge, %if.then8, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ -95, %if.then8 ], [ -12, %if.end.cleanup_crit_edge ], [ %call13, %if.then15 ], [ 0, %if.end9.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_del_cls_flower(ptr nocapture noundef readonly %handle, ptr nocapture noundef readonly %cls_flower) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock) #16
  %cookie = getelementptr inbounds %struct.flow_cls_offload, ptr %cls_flower, i32 0, i32 2
  %6 = ptrtoint ptr %cookie to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cookie, align 4
  %fd_rule_list.i = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 67
  br label %for.cond.i

for.cond.i:                                       ; preds = %land.rhs.i.for.cond.i_crit_edge, %hclge_get_vport.exit
  %rule.0.in.i = phi ptr [ %fd_rule_list.i, %hclge_get_vport.exit ], [ %rule.0.i, %land.rhs.i.for.cond.i_crit_edge ]
  %8 = ptrtoint ptr %rule.0.in.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %rule.0.i = load ptr, ptr %rule.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %rule.0.i, null
  br i1 %tobool2.not.i, label %for.cond.i.cleanup_crit_edge, label %land.rhs.i

for.cond.i.cleanup_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.rhs.i:                                       ; preds = %for.cond.i
  %9 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 5
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %cmp.i22 = icmp eq i32 %11, %7
  br i1 %cmp.i22, label %if.end, label %land.rhs.i.for.cond.i_crit_edge

land.rhs.i.for.cond.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

if.end:                                           ; preds = %land.rhs.i
  %location = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.0.i, i32 0, i32 8
  %12 = ptrtoint ptr %location to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %location, align 4
  %conv = zext i16 %13 to i32
  %call3 = tail call fastcc i32 @hclge_fd_tcam_config(ptr noundef %5, i1 noundef zeroext true, i32 noundef %conv, ptr noundef null, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %location to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %location, align 4
  tail call fastcc void @hclge_update_fd_list(ptr noundef %5, i32 noundef 3, i16 noundef zeroext %15, ptr noundef null)
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end.cleanup_crit_edge, %for.cond.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end7 ], [ %call3, %if.end.cleanup_crit_edge ], [ -22, %for.cond.i.cleanup_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @hclge_is_cls_flower_active(ptr nocapture noundef readonly %handle) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  %fd_active_type = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 75
  %6 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fd_active_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %7)
  %cmp = icmp eq i32 %7, 3
  ret i1 %cmp
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_phy_link_ksettings(ptr nocapture noundef readonly %handle, ptr noundef %cmd) #0 align 64 {
entry:
  %desc = alloca [2 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %desc) #16
  %0 = call ptr @memset(ptr %desc, i32 255, i32 64)
  %1 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp.i = icmp eq i32 %4, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %5 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %back, align 4
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 28709, i1 noundef zeroext true) #16
  %flag = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 1
  %7 = ptrtoint ptr %flag to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %flag, align 2
  %9 = or i16 %8, 1024
  store i16 %9, ptr %flag, align 2
  %arrayidx3 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc, i32 0, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx3, i32 noundef 28709, i1 noundef zeroext true) #16
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %6, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.740, i32 noundef %call.i) #20
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  %data = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %autoneg = getelementptr inbounds %struct.hclge_phy_link_ksetting_0_cmd, ptr %data, i32 0, i32 2
  %12 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %autoneg, align 1
  %autoneg7 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 5
  %14 = ptrtoint ptr %autoneg7 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %autoneg7, align 1
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %data, align 4
  %17 = call i32 @llvm.bswap.i32(i32 %16)
  %speed9 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 1
  %18 = ptrtoint ptr %speed9 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %speed9, align 4
  %duplex = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 1
  %19 = ptrtoint ptr %duplex to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %duplex, align 4
  %duplex11 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 2
  %21 = ptrtoint ptr %duplex11 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %20, ptr %duplex11, align 4
  %port = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 2
  %22 = ptrtoint ptr %port to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %port, align 4
  %port13 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 3
  %24 = ptrtoint ptr %port13 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %port13, align 1
  %transceiver = getelementptr inbounds %struct.hclge_phy_link_ksetting_0_cmd, ptr %data, i32 0, i32 6
  %25 = ptrtoint ptr %transceiver to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %transceiver, align 1
  %transceiver15 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 10
  %27 = ptrtoint ptr %transceiver15 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %transceiver15, align 4
  %phy_address = getelementptr inbounds %struct.hclge_phy_link_ksetting_0_cmd, ptr %data, i32 0, i32 7
  %28 = ptrtoint ptr %phy_address to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %phy_address, align 2
  %phy_address17 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 4
  %30 = ptrtoint ptr %phy_address17 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %phy_address17, align 2
  %eth_tp_mdix = getelementptr inbounds %struct.hclge_phy_link_ksetting_0_cmd, ptr %data, i32 0, i32 3
  %31 = ptrtoint ptr %eth_tp_mdix to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %eth_tp_mdix, align 2
  %eth_tp_mdix19 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 7
  %33 = ptrtoint ptr %eth_tp_mdix19 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %32, ptr %eth_tp_mdix19, align 1
  %eth_tp_mdix_ctrl = getelementptr inbounds %struct.hclge_phy_link_ksetting_0_cmd, ptr %data, i32 0, i32 4
  %34 = ptrtoint ptr %eth_tp_mdix_ctrl to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %eth_tp_mdix_ctrl, align 1
  %eth_tp_mdix_ctrl21 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 8
  %36 = ptrtoint ptr %eth_tp_mdix_ctrl21 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %35, ptr %eth_tp_mdix_ctrl21, align 2
  %supported22 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 3
  %37 = ptrtoint ptr %supported22 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %supported22, align 4
  %39 = call i32 @llvm.bswap.i32(i32 %38)
  %advertising23 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 4
  %40 = ptrtoint ptr %advertising23 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %advertising23, align 4
  %42 = call i32 @llvm.bswap.i32(i32 %41)
  %lp_advertising24 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 5
  %43 = ptrtoint ptr %lp_advertising24 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %lp_advertising24, align 4
  %45 = call i32 @llvm.bswap.i32(i32 %44)
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, ptr %cmd, i32 0, i32 1
  call void @ethtool_convert_legacy_u32_to_link_mode(ptr noundef %link_modes, i32 noundef %39) #16
  %advertising28 = getelementptr inbounds %struct.ethtool_link_ksettings, ptr %cmd, i32 0, i32 1, i32 1
  call void @ethtool_convert_legacy_u32_to_link_mode(ptr noundef %advertising28, i32 noundef %42) #16
  %lp_advertising31 = getelementptr inbounds %struct.ethtool_link_ksettings, ptr %cmd, i32 0, i32 1, i32 2
  call void @ethtool_convert_legacy_u32_to_link_mode(ptr noundef %lp_advertising31, i32 noundef %45) #16
  %data34 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4
  %46 = ptrtoint ptr %data34 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %data34, align 4
  %master_slave_cfg37 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 11
  %48 = ptrtoint ptr %master_slave_cfg37 to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %47, ptr %master_slave_cfg37, align 1
  %master_slave_state = getelementptr inbounds %struct.hclge_phy_link_ksetting_1_cmd, ptr %data34, i32 0, i32 1
  %49 = ptrtoint ptr %master_slave_state to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %master_slave_state, align 1
  %master_slave_state39 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 12
  %51 = ptrtoint ptr %master_slave_state39 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %master_slave_state39, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc) #16
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_set_phy_link_ksettings(ptr nocapture noundef readonly %handle, ptr noundef %cmd) #0 align 64 {
entry:
  %desc = alloca [2 x %struct.hclge_desc], align 4
  %advertising = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %desc) #16
  %0 = call ptr @memset(ptr %desc, i32 255, i32 64)
  %1 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp.i = icmp eq i32 %4, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %5 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %advertising) #16
  %7 = ptrtoint ptr %advertising to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %advertising, align 4, !annotation !1463
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 5
  %8 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %autoneg, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %cmp = icmp eq i8 %9, 0
  br i1 %cmp, label %land.lhs.true, label %hclge_get_vport.exit.if.end_crit_edge

hclge_get_vport.exit.if.end_crit_edge:            ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %hclge_get_vport.exit
  %speed = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 1
  %10 = ptrtoint ptr %speed to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %speed, align 4
  %12 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.778)
  switch i32 %11, label %land.lhs.true.cleanup_crit_edge [
    i32 100, label %land.lhs.true.lor.lhs.false_crit_edge
    i32 10, label %land.lhs.true.lor.lhs.false_crit_edge101
  ]

land.lhs.true.lor.lhs.false_crit_edge101:         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false

land.lhs.true.lor.lhs.false_crit_edge:            ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %land.lhs.true.lor.lhs.false_crit_edge, %land.lhs.true.lor.lhs.false_crit_edge101
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 2
  %13 = ptrtoint ptr %duplex to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %duplex, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %14)
  %switch = icmp ult i8 %14, 2
  br i1 %switch, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false.if.end_crit_edge, %hclge_get_vport.exit.if.end_crit_edge
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 28709, i1 noundef zeroext false) #16
  %flag = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 1
  %15 = ptrtoint ptr %flag to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %flag, align 2
  %17 = or i16 %16, 1024
  store i16 %17, ptr %flag, align 2
  %arrayidx23 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc, i32 0, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx23, i32 noundef 28709, i1 noundef zeroext false) #16
  %data = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %18 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %autoneg, align 1
  %autoneg27 = getelementptr inbounds %struct.hclge_phy_link_ksetting_0_cmd, ptr %data, i32 0, i32 2
  %20 = ptrtoint ptr %autoneg27 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %autoneg27, align 1
  %speed29 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 1
  %21 = ptrtoint ptr %speed29 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %speed29, align 4
  %23 = call i32 @llvm.bswap.i32(i32 %22)
  %24 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %data, align 4
  %duplex32 = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 2
  %25 = ptrtoint ptr %duplex32 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %duplex32, align 4
  %duplex33 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 1
  %27 = ptrtoint ptr %duplex33 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %duplex33, align 4
  %advertising34 = getelementptr inbounds %struct.ethtool_link_ksettings, ptr %cmd, i32 0, i32 1, i32 1
  %call36 = call zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(ptr noundef nonnull %advertising, ptr noundef %advertising34) #16
  %28 = ptrtoint ptr %advertising to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %advertising, align 4
  %30 = call i32 @llvm.bswap.i32(i32 %29)
  %advertising37 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 4
  %31 = ptrtoint ptr %advertising37 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %advertising37, align 4
  %eth_tp_mdix_ctrl = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 8
  %32 = ptrtoint ptr %eth_tp_mdix_ctrl to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %eth_tp_mdix_ctrl, align 2
  %eth_tp_mdix_ctrl39 = getelementptr inbounds %struct.hclge_phy_link_ksetting_0_cmd, ptr %data, i32 0, i32 4
  %34 = ptrtoint ptr %eth_tp_mdix_ctrl39 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %33, ptr %eth_tp_mdix_ctrl39, align 1
  %data41 = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4
  %master_slave_cfg = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd, i32 0, i32 11
  %35 = ptrtoint ptr %master_slave_cfg to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %master_slave_cfg, align 1
  %37 = ptrtoint ptr %data41 to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %36, ptr %data41, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end48, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %38 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %6, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.742, i32 noundef %call.i) #20
  br label %cleanup

if.end48:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %40 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %autoneg, align 1
  %autoneg52 = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 2, i32 1, i32 5
  %42 = ptrtoint ptr %autoneg52 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %41, ptr %autoneg52, align 2
  %43 = ptrtoint ptr %speed29 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %speed29, align 4
  %speed57 = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 2, i32 1, i32 9
  %45 = ptrtoint ptr %speed57 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %speed57, align 4
  %46 = ptrtoint ptr %duplex32 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %duplex32, align 4
  %duplex62 = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 2, i32 1, i32 6
  %48 = ptrtoint ptr %duplex62 to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %47, ptr %duplex62, align 1
  %advertising65 = getelementptr inbounds %struct.hclge_dev, ptr %6, i32 0, i32 2, i32 1, i32 21
  %49 = call ptr @memcpy(ptr %advertising65, ptr %advertising34, i32 12)
  br label %cleanup

cleanup:                                          ; preds = %if.end48, %do.end, %lor.lhs.false.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %do.end ], [ 0, %if.end48 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %advertising) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @hclge_ptp_set_tx_info(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_ptp_get_rx_hwts(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_ptp_get_ts_info(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_get_link_diagnosis_info(ptr nocapture noundef readonly %handle, ptr nocapture noundef writeonly %status_code) #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %handle, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.hclge_get_vport.exit_crit_edge, label %if.else.i

entry.hclge_get_vport.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i = getelementptr inbounds %struct.hnae3_client, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %..i = select i1 %cmp.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit

hclge_get_vport.exit:                             ; preds = %if.else.i, %entry.hclge_get_vport.exit_crit_edge
  %.sink.i = phi i32 [ -560, %entry.hclge_get_vport.exit_crit_edge ], [ %..i, %if.else.i ]
  %add.ptr9.i = getelementptr i8, ptr %handle, i32 %.sink.i
  %back = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i, i32 0, i32 12
  %4 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %6 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 1
  %7 = call ptr @memset(ptr %desc, i32 255, i32 32)
  %8 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ae_dev, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %9, i32 0, i32 6
  %10 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %11)
  %cmp = icmp ult i32 %11, 34
  br i1 %cmp, label %hclge_get_vport.exit.cleanup_crit_edge, label %if.end

hclge_get_vport.exit.cleanup_crit_edge:           ; preds = %hclge_get_vport.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_get_vport.exit
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 28714, i1 noundef zeroext true) #16
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %5, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end3, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.744, i32 noundef %call.i) #20
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %6, align 4
  %16 = call i32 @llvm.bswap.i32(i32 %15)
  %17 = ptrtoint ptr %status_code to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %status_code, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %do.end, %hclge_get_vport.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %do.end ], [ 0, %if.end3 ], [ -95, %hclge_get_vport.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_devlink_init(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_cmd_queue_init(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_cmd_init(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_clear_hw_resource(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %0 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 28683, i1 noundef zeroext false) #16
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  %1 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.779)
  switch i32 %call.i, label %do.end [
    i32 0, label %entry.cleanup_crit_edge
    i32 -95, label %entry.cleanup_crit_edge6
  ]

entry.cleanup_crit_edge6:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.231, i32 noundef %call.i) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %entry.cleanup_crit_edge, %entry.cleanup_crit_edge6
  %retval.0 = phi i32 [ %call.i, %do.end ], [ 0, %entry.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge6 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_get_cap(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i6 = alloca %struct.hclge_desc, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %1 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 4
  %2 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 34, i1 noundef zeroext true) #16
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.do.end.i_crit_edge

entry.do.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

do.end.i:                                         ; preds = %if.end4.4.i.do.end.i_crit_edge, %if.end4.3.i.do.end.i_crit_edge, %if.end4.2.i.do.end.i_crit_edge, %if.end4.1.i.do.end.i_crit_edge, %if.end4.i.do.end.i_crit_edge, %entry.do.end.i_crit_edge
  %call.i.lcssa.i = phi i32 [ %call.i.i, %entry.do.end.i_crit_edge ], [ %call.i.1.i, %if.end4.i.do.end.i_crit_edge ], [ %call.i.2.i, %if.end4.1.i.do.end.i_crit_edge ], [ %call.i.3.i, %if.end4.2.i.do.end.i_crit_edge ], [ %call.i.4.i, %if.end4.3.i.do.end.i_crit_edge ], [ %call.i.5.i, %if.end4.4.i.do.end.i_crit_edge ]
  %3 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %4, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.235, i32 noundef %call.i.lcssa.i) #20
  br label %do.end

if.end.i:                                         ; preds = %entry
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool2.not.i = icmp eq i8 %6, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i.do.end6.i_crit_edge

if.end.i.do.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6.i

if.end4.i:                                        ; preds = %if.end.i
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  %call.i.1.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1.i)
  %tobool.not.1.i = icmp eq i32 %call.i.1.i, 0
  br i1 %tobool.not.1.i, label %if.end.1.i, label %if.end4.i.do.end.i_crit_edge

if.end4.i.do.end.i_crit_edge:                     ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.end.1.i:                                       ; preds = %if.end4.i
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool2.not.1.i = icmp eq i8 %8, 0
  br i1 %tobool2.not.1.i, label %if.end4.1.i, label %if.end.1.i.do.end6.i_crit_edge

if.end.1.i.do.end6.i_crit_edge:                   ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6.i

if.end4.1.i:                                      ; preds = %if.end.1.i
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  %call.i.2.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.2.i)
  %tobool.not.2.i = icmp eq i32 %call.i.2.i, 0
  br i1 %tobool.not.2.i, label %if.end.2.i, label %if.end4.1.i.do.end.i_crit_edge

if.end4.1.i.do.end.i_crit_edge:                   ; preds = %if.end4.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.end.2.i:                                       ; preds = %if.end4.1.i
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool2.not.2.i = icmp eq i8 %10, 0
  br i1 %tobool2.not.2.i, label %if.end4.2.i, label %if.end.2.i.do.end6.i_crit_edge

if.end.2.i.do.end6.i_crit_edge:                   ; preds = %if.end.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6.i

if.end4.2.i:                                      ; preds = %if.end.2.i
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  %call.i.3.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.3.i)
  %tobool.not.3.i = icmp eq i32 %call.i.3.i, 0
  br i1 %tobool.not.3.i, label %if.end.3.i, label %if.end4.2.i.do.end.i_crit_edge

if.end4.2.i.do.end.i_crit_edge:                   ; preds = %if.end4.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.end.3.i:                                       ; preds = %if.end4.2.i
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool2.not.3.i = icmp eq i8 %12, 0
  br i1 %tobool2.not.3.i, label %if.end4.3.i, label %if.end.3.i.do.end6.i_crit_edge

if.end.3.i.do.end6.i_crit_edge:                   ; preds = %if.end.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6.i

if.end4.3.i:                                      ; preds = %if.end.3.i
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  %call.i.4.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.4.i)
  %tobool.not.4.i = icmp eq i32 %call.i.4.i, 0
  br i1 %tobool.not.4.i, label %if.end.4.i, label %if.end4.3.i.do.end.i_crit_edge

if.end4.3.i.do.end.i_crit_edge:                   ; preds = %if.end4.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.end.4.i:                                       ; preds = %if.end4.3.i
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool2.not.4.i = icmp eq i8 %14, 0
  br i1 %tobool2.not.4.i, label %if.end4.4.i, label %if.end.4.i.do.end6.i_crit_edge

if.end.4.i.do.end6.i_crit_edge:                   ; preds = %if.end.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6.i

if.end4.4.i:                                      ; preds = %if.end.4.i
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  %call.i.5.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.5.i)
  %tobool.not.5.i = icmp eq i32 %call.i.5.i, 0
  br i1 %tobool.not.5.i, label %if.end.5.i, label %if.end4.4.i.do.end.i_crit_edge

if.end4.4.i.do.end.i_crit_edge:                   ; preds = %if.end4.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.end.5.i:                                       ; preds = %if.end4.4.i
  %15 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool2.not.5.i = icmp eq i8 %16, 0
  br i1 %tobool2.not.5.i, label %if.end4.5.i, label %if.end.5.i.do.end6.i_crit_edge

if.end.5.i.do.end6.i_crit_edge:                   ; preds = %if.end.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6.i

if.end4.5.i:                                      ; preds = %if.end.5.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  br label %do.end6.i

do.end6.i:                                        ; preds = %if.end4.5.i, %if.end.5.i.do.end6.i_crit_edge, %if.end.4.i.do.end6.i_crit_edge, %if.end.3.i.do.end6.i_crit_edge, %if.end.2.i.do.end6.i_crit_edge, %if.end.1.i.do.end6.i_crit_edge, %if.end.i.do.end6.i_crit_edge
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %1, align 4
  %conv.i.i = zext i8 %18 to i32
  %and.i.i = and i32 %conv.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.end6.i.do.end_crit_edge, label %if.end

do.end6.i.do.end_crit_edge:                       ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %do.end6.i.do.end_crit_edge, %do.end.i
  %retval.0.i.ph = phi i32 [ -22, %do.end6.i.do.end_crit_edge ], [ %call.i.lcssa.i, %do.end.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %19 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.233, i32 noundef %retval.0.i.ph) #20
  br label %cleanup

if.end:                                           ; preds = %do.end6.i
  %flag6.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 56
  %21 = ptrtoint ptr %flag6.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flag6.i.i, align 4
  %and7.i.i = and i32 %22, -2
  %and3.i.i = lshr i32 %conv.i.i, 1
  %and3.lobit.i.i = and i32 %and3.i.i, 1
  %and7.sink.i.i = or i32 %and7.i.i, %and3.lobit.i.i
  store i32 %and7.sink.i.i, ptr %flag6.i.i, align 4
  %mac_id.i.i = getelementptr inbounds %struct.hclge_func_status_cmd, ptr %0, i32 0, i32 2
  %23 = ptrtoint ptr %mac_id.i.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %mac_id.i.i, align 1
  %25 = and i8 %24, 15
  %mac.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1
  %26 = ptrtoint ptr %mac.i.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %25, ptr %mac.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i6) #16
  %27 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i6, i32 0, i32 4, i32 2
  %28 = call ptr @memset(ptr %desc.i6, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i6, i32 noundef 35, i1 noundef zeroext true) #16
  %call.i.i8 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i6, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i8)
  %tobool.not.i9 = icmp eq i32 %call.i.i8, 0
  br i1 %tobool.not.i9, label %if.end.i12, label %do.end.i11

do.end.i11:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hdev, align 8
  %dev.i10 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i10, ptr noundef nonnull @.str.237, i32 noundef %call.i.i8) #20
  br label %hclge_query_pf_resource.exit

if.end.i12:                                       ; preds = %if.end
  %31 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i6, i32 0, i32 4, i32 4
  %32 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i6, i32 0, i32 4, i32 3
  %33 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i6, i32 0, i32 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %33, align 4
  %36 = call i16 @llvm.bswap.i16(i16 %35) #16
  %37 = ptrtoint ptr %31 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %31, align 4
  %39 = call i16 @llvm.bswap.i16(i16 %38) #16
  %add.i = add i16 %39, %36
  %num_tqps.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 16
  %40 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %add.i, ptr %num_tqps.i, align 4
  %buf_size.i = getelementptr inbounds %struct.hclge_pf_res_cmd, ptr %33, i32 0, i32 1
  %41 = ptrtoint ptr %buf_size.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %buf_size.i, align 2
  %43 = call i16 @llvm.bswap.i16(i16 %42) #16
  %conv3.i = zext i16 %43 to i32
  %shl.i = shl nuw nsw i32 %conv3.i, 7
  %pkt_buf_size.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 57
  %44 = ptrtoint ptr %pkt_buf_size.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %shl.i, ptr %pkt_buf_size.i, align 8
  %45 = ptrtoint ptr %32 to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %32, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %46)
  %tobool4.not.i = icmp eq i16 %46, 0
  %47 = call i16 @llvm.bswap.i16(i16 %46) #16
  %conv7.i = zext i16 %47 to i32
  %shl8.i = shl nuw nsw i32 %conv7.i, 7
  %phi.bo.i = add nuw nsw i32 %shl8.i, 255
  %phi.bo97.i = and i32 %phi.bo.i, 16776960
  %shl8.sink.i = select i1 %tobool4.not.i, i32 16384, i32 %phi.bo97.i
  %48 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 58
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %shl8.sink.i, ptr %48, align 4
  %dv_buf_size.i = getelementptr inbounds %struct.hclge_pf_res_cmd, ptr %33, i32 0, i32 7
  %50 = ptrtoint ptr %dv_buf_size.i to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %dv_buf_size.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %51)
  %tobool15.not.i = icmp eq i16 %51, 0
  %52 = call i16 @llvm.bswap.i16(i16 %51) #16
  %conv18.i = zext i16 %52 to i32
  %shl19.i = shl nuw nsw i32 %conv18.i, 7
  %phi.bo98.i = add nuw nsw i32 %shl19.i, 255
  %phi.bo99.i = and i32 %phi.bo98.i, 16776960
  %shl19.sink.i = select i1 %tobool15.not.i, i32 40960, i32 %phi.bo99.i
  %53 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 59
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %shl19.sink.i, ptr %53, align 8
  %msixcap_localid_number_nic.i = getelementptr inbounds %struct.hclge_pf_res_cmd, ptr %33, i32 0, i32 3
  %55 = ptrtoint ptr %msixcap_localid_number_nic.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %msixcap_localid_number_nic.i, align 2
  %57 = call i16 @llvm.bswap.i16(i16 %56) #16
  %num_nic_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 43
  %58 = ptrtoint ptr %num_nic_msi.i to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %num_nic_msi.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %57)
  %cmp.i = icmp ult i16 %57, 2
  br i1 %cmp.i, label %do.end38.i, label %if.end43.i

do.end38.i:                                       ; preds = %if.end.i12
  call void @__sanitizer_cov_trace_pc() #18
  %conv33.i = zext i16 %57 to i32
  %59 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hdev, align 8
  %dev40.i = getelementptr inbounds %struct.pci_dev, ptr %60, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev40.i, ptr noundef nonnull @.str.240, i32 noundef %conv33.i) #20
  br label %hclge_query_pf_resource.exit

if.end43.i:                                       ; preds = %if.end.i12
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %61 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ae_dev.i, align 4
  %flag.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %62, i32 0, i32 3
  %63 = ptrtoint ptr %flag.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %flag.i, align 4
  %65 = and i32 %64, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool44.not.i = icmp eq i32 %65, 0
  br i1 %tobool44.not.i, label %if.else52.i, label %if.then45.i

if.then45.i:                                      ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #18
  %66 = ptrtoint ptr %27 to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %27, align 4
  %68 = call i16 @llvm.bswap.i16(i16 %67) #16
  %num_roce_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 44
  %69 = ptrtoint ptr %num_roce_msi.i to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 %68, ptr %num_roce_msi.i, align 2
  %add50.i = add i16 %68, %57
  %num_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 38
  %70 = ptrtoint ptr %num_msi.i to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 %add50.i, ptr %num_msi.i, align 8
  br label %hclge_query_pf_resource.exit

if.else52.i:                                      ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #18
  %num_msi54.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 38
  %71 = ptrtoint ptr %num_msi54.i to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 %57, ptr %num_msi54.i, align 8
  br label %hclge_query_pf_resource.exit

hclge_query_pf_resource.exit:                     ; preds = %if.else52.i, %if.then45.i, %do.end38.i, %do.end.i11
  %retval.0.i13 = phi i32 [ %call.i.i8, %do.end.i11 ], [ -22, %do.end38.i ], [ 0, %if.else52.i ], [ 0, %if.then45.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i6) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_query_pf_resource.exit, %do.end
  %retval.0 = phi i32 [ %retval.0.i.ph, %do.end ], [ %retval.0.i13, %hclge_query_pf_resource.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_query_dev_specs(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i.i = alloca %struct.hclge_desc, align 4
  %desc = alloca [4 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %desc) #16
  %0 = call ptr @memset(ptr %desc, i32 255, i32 128)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %1 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %ae_dev.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %2 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  %3 = ptrtoint ptr %ae_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ae_dev.i.i, align 4
  %dev_version.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %4, i32 0, i32 6
  %5 = ptrtoint ptr %dev_version.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %dev_version.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %6)
  %cmp.i.i = icmp eq i32 %6, 33
  br i1 %cmp.i.i, label %entry.hclge_mac_query_reg_num.exit.thread.i_crit_edge, label %if.end.i.i

entry.hclge_mac_query_reg_num.exit.thread.i_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_mac_query_reg_num.exit.thread.i

if.end.i.i:                                       ; preds = %entry
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 51, i1 noundef zeroext true) #16
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end2.i.i, label %hclge_mac_query_reg_num.exit.i

if.end2.i.i:                                      ; preds = %if.end.i.i
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %1, align 4
  %9 = call i32 @llvm.bswap.i32(i32 %8) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp3.i.i = icmp eq i32 %8, 0
  br i1 %cmp3.i.i, label %hclge_mac_query_reg_num.exit.thread8.i, label %if.end2.i.i.hclge_mac_query_reg_num.exit.thread.i_crit_edge

if.end2.i.i.hclge_mac_query_reg_num.exit.thread.i_crit_edge: ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_mac_query_reg_num.exit.thread.i

hclge_mac_query_reg_num.exit.thread8.i:           ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hdev, align 8
  %dev9.i.i = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev9.i.i, ptr noundef nonnull @.str.245) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %cleanup

hclge_mac_query_reg_num.exit.thread.i:            ; preds = %if.end2.i.i.hclge_mac_query_reg_num.exit.thread.i_crit_edge, %entry.hclge_mac_query_reg_num.exit.thread.i_crit_edge
  %reg_num.0.ph.i = phi i32 [ 87, %entry.hclge_mac_query_reg_num.exit.thread.i_crit_edge ], [ %9, %if.end2.i.i.hclge_mac_query_reg_num.exit.thread.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %if.end

hclge_mac_query_reg_num.exit.i:                   ; preds = %if.end.i.i
  %12 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.242, i32 noundef %call.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -95, i32 %call.i.i.i)
  %cond.i = icmp eq i32 %call.i.i.i, -95
  br i1 %cond.i, label %hclge_mac_query_reg_num.exit.i.if.end_crit_edge, label %hclge_mac_query_reg_num.exit.i.cleanup_crit_edge

hclge_mac_query_reg_num.exit.i.cleanup_crit_edge: ; preds = %hclge_mac_query_reg_num.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

hclge_mac_query_reg_num.exit.i.if.end_crit_edge:  ; preds = %hclge_mac_query_reg_num.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end:                                           ; preds = %hclge_mac_query_reg_num.exit.i.if.end_crit_edge, %hclge_mac_query_reg_num.exit.thread.i
  %reg_num.07.i = phi i32 [ %reg_num.0.ph.i, %hclge_mac_query_reg_num.exit.thread.i ], [ 0, %hclge_mac_query_reg_num.exit.i.if.end_crit_edge ]
  %14 = ptrtoint ptr %ae_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ae_dev.i.i, align 4
  %mac_stats_num.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %15, i32 0, i32 5, i32 12
  %16 = ptrtoint ptr %mac_stats_num.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %reg_num.07.i, ptr %mac_stats_num.i, align 4
  %17 = load ptr, ptr %ae_dev.i.i, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %17, i32 0, i32 6
  %18 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %19)
  %cmp = icmp ult i32 %19, 48
  br i1 %cmp, label %if.then1, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 80, i1 noundef zeroext true) #16
  %flag = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 0, i32 1
  %20 = ptrtoint ptr %flag to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %flag, align 2
  %22 = or i16 %21, 1024
  store i16 %22, ptr %flag, align 2
  %arrayidx.1 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.1, i32 noundef 80, i1 noundef zeroext true) #16
  %flag.1 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 1
  %23 = ptrtoint ptr %flag.1 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %flag.1, align 2
  %25 = or i16 %24, 1024
  store i16 %25, ptr %flag.1, align 2
  %arrayidx.2 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 2
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.2, i32 noundef 80, i1 noundef zeroext true) #16
  %flag.2 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 2, i32 1
  %26 = ptrtoint ptr %flag.2 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %flag.2, align 2
  %28 = or i16 %27, 1024
  store i16 %28, ptr %flag.2, align 2
  %arrayidx6 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 3
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx6, i32 noundef 80, i1 noundef zeroext true) #16
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not = icmp eq i32 %call.i, 0
  br i1 %tobool8.not, label %if.end10, label %for.body.preheader.cleanup_crit_edge

for.body.preheader.cleanup_crit_edge:             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hdev, align 8
  %driver_data.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44, i32 8
  %31 = ptrtoint ptr %driver_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %driver_data.i.i.i, align 4
  %max_non_tso_bd_num.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 7
  %33 = ptrtoint ptr %max_non_tso_bd_num.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 8, ptr %max_non_tso_bd_num.i, align 4
  %rss_ind_tbl_size.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 3
  %34 = ptrtoint ptr %rss_ind_tbl_size.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 512, ptr %rss_ind_tbl_size.i, align 4
  %rss_key_size.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 4
  %35 = ptrtoint ptr %rss_key_size.i to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 40, ptr %rss_key_size.i, align 2
  %max_tm_rate.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 2
  %36 = ptrtoint ptr %max_tm_rate.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 100000, ptr %max_tm_rate.i, align 4
  %max_int_gl.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 6
  %37 = ptrtoint ptr %max_int_gl.i to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 8160, ptr %max_int_gl.i, align 2
  %max_frm_size.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 8
  %38 = ptrtoint ptr %max_frm_size.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 9728, ptr %max_frm_size.i, align 2
  %max_qset_num.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 9
  %39 = ptrtoint ptr %max_qset_num.i to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 1024, ptr %max_qset_num.i, align 4
  %umv_size.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %32, i32 0, i32 5, i32 10
  %40 = ptrtoint ptr %umv_size.i to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 384, ptr %umv_size.i, align 2
  br label %cleanup

if.end10:                                         ; preds = %for.body.preheader
  %41 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %hdev, align 8
  %driver_data.i.i.i26 = getelementptr inbounds %struct.pci_dev, ptr %42, i32 0, i32 44, i32 8
  %43 = ptrtoint ptr %driver_data.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %driver_data.i.i.i26, align 4
  %data.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %data2.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4
  %max_non_tso_bd_num.i27 = getelementptr inbounds %struct.hclge_dev_specs_0_cmd, ptr %data.i, i32 0, i32 6
  %45 = ptrtoint ptr %max_non_tso_bd_num.i27 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %max_non_tso_bd_num.i27, align 2
  %max_non_tso_bd_num4.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 7
  %47 = ptrtoint ptr %max_non_tso_bd_num4.i to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %46, ptr %max_non_tso_bd_num4.i, align 4
  %rss_ind_tbl_size.i28 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 3
  %48 = ptrtoint ptr %rss_ind_tbl_size.i28 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %rss_ind_tbl_size.i28, align 4
  %50 = call i16 @llvm.bswap.i16(i16 %49) #16
  %rss_ind_tbl_size6.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 3
  %51 = ptrtoint ptr %rss_ind_tbl_size6.i to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %50, ptr %rss_ind_tbl_size6.i, align 4
  %int_ql_max.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 4
  %52 = ptrtoint ptr %int_ql_max.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %int_ql_max.i, align 4
  %54 = call i16 @llvm.bswap.i16(i16 %53) #16
  %int_ql_max8.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 5
  %55 = ptrtoint ptr %int_ql_max8.i to i32
  call void @__asan_store2_noabort(i32 %55)
  store i16 %54, ptr %int_ql_max8.i, align 4
  %rss_key_size.i29 = getelementptr inbounds %struct.hclge_dev_specs_0_cmd, ptr %data.i, i32 0, i32 4
  %56 = ptrtoint ptr %rss_key_size.i29 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %rss_key_size.i29, align 2
  %58 = call i16 @llvm.bswap.i16(i16 %57) #16
  %rss_key_size10.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 4
  %59 = ptrtoint ptr %rss_key_size10.i to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 %58, ptr %rss_key_size10.i, align 2
  %max_tm_rate.i30 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 5
  %60 = ptrtoint ptr %max_tm_rate.i30 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %max_tm_rate.i30, align 4
  %62 = call i32 @llvm.bswap.i32(i32 %61) #16
  %max_tm_rate12.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 2
  %63 = ptrtoint ptr %max_tm_rate12.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %62, ptr %max_tm_rate12.i, align 4
  %max_qset_num.i31 = getelementptr inbounds %struct.hclge_dev_specs_1_cmd, ptr %data2.i, i32 0, i32 1
  %64 = ptrtoint ptr %max_qset_num.i31 to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %max_qset_num.i31, align 2
  %66 = call i16 @llvm.bswap.i16(i16 %65) #16
  %max_qset_num14.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 9
  %67 = ptrtoint ptr %max_qset_num14.i to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 %66, ptr %max_qset_num14.i, align 4
  %max_int_gl.i32 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 1
  %68 = ptrtoint ptr %max_int_gl.i32 to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %max_int_gl.i32, align 4
  %70 = call i16 @llvm.bswap.i16(i16 %69) #16
  %max_int_gl16.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 6
  %71 = ptrtoint ptr %max_int_gl16.i to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 %70, ptr %max_int_gl16.i, align 2
  %72 = ptrtoint ptr %data2.i to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %data2.i, align 4
  %74 = call i16 @llvm.bswap.i16(i16 %73) #16
  %max_frm_size18.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 8
  %75 = ptrtoint ptr %max_frm_size18.i to i32
  call void @__asan_store2_noabort(i32 %75)
  store i16 %74, ptr %max_frm_size18.i, align 2
  %umv_size.i33 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 4, i32 2
  %76 = ptrtoint ptr %umv_size.i33 to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %umv_size.i33, align 4
  %78 = call i16 @llvm.bswap.i16(i16 %77) #16
  %umv_size20.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 10
  %79 = ptrtoint ptr %umv_size20.i to i32
  call void @__asan_store2_noabort(i32 %79)
  store i16 %78, ptr %umv_size20.i, align 2
  %mc_mac_size.i = getelementptr inbounds %struct.hclge_dev_specs_1_cmd, ptr %data2.i, i32 0, i32 5
  %80 = ptrtoint ptr %mc_mac_size.i to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %mc_mac_size.i, align 2
  %82 = call i16 @llvm.bswap.i16(i16 %81) #16
  %mc_mac_size22.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %44, i32 0, i32 5, i32 11
  %83 = ptrtoint ptr %mc_mac_size22.i to i32
  call void @__asan_store2_noabort(i32 %83)
  store i16 %82, ptr %mc_mac_size22.i, align 4
  %84 = ptrtoint ptr %ae_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %ae_dev.i.i, align 4
  %max_non_tso_bd_num.i34 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 5, i32 7
  %86 = ptrtoint ptr %max_non_tso_bd_num.i34 to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %max_non_tso_bd_num.i34, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %87)
  %tobool.not.i = icmp eq i8 %87, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end10.if.end.i36_crit_edge

if.end10.if.end.i36_crit_edge:                    ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i36

if.then.i:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  %88 = ptrtoint ptr %max_non_tso_bd_num.i34 to i32
  call void @__asan_store1_noabort(i32 %88)
  store i8 8, ptr %max_non_tso_bd_num.i34, align 4
  br label %if.end.i36

if.end.i36:                                       ; preds = %if.then.i, %if.end10.if.end.i36_crit_edge
  %rss_ind_tbl_size.i35 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 5, i32 3
  %89 = ptrtoint ptr %rss_ind_tbl_size.i35 to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %rss_ind_tbl_size.i35, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %90)
  %tobool3.not.i = icmp eq i16 %90, 0
  br i1 %tobool3.not.i, label %if.then4.i, label %if.end.i36.if.end6.i_crit_edge

if.end.i36.if.end6.i_crit_edge:                   ; preds = %if.end.i36
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.then4.i:                                       ; preds = %if.end.i36
  call void @__sanitizer_cov_trace_pc() #18
  %91 = ptrtoint ptr %rss_ind_tbl_size.i35 to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 512, ptr %rss_ind_tbl_size.i35, align 4
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %if.end.i36.if.end6.i_crit_edge
  %rss_key_size.i37 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 5, i32 4
  %92 = ptrtoint ptr %rss_key_size.i37 to i32
  call void @__asan_load2_noabort(i32 %92)
  %93 = load i16, ptr %rss_key_size.i37, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %93)
  %tobool7.not.i = icmp eq i16 %93, 0
  br i1 %tobool7.not.i, label %if.then8.i, label %if.end6.i.if.end10.i_crit_edge

if.end6.i.if.end10.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i

if.then8.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %94 = ptrtoint ptr %rss_key_size.i37 to i32
  call void @__asan_store2_noabort(i32 %94)
  store i16 40, ptr %rss_key_size.i37, align 2
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %if.end6.i.if.end10.i_crit_edge
  %max_tm_rate.i38 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 5, i32 2
  %95 = ptrtoint ptr %max_tm_rate.i38 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %max_tm_rate.i38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool11.not.i = icmp eq i32 %96, 0
  br i1 %tobool11.not.i, label %if.then12.i, label %if.end10.i.if.end14.i_crit_edge

if.end10.i.if.end14.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.i

if.then12.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %97 = ptrtoint ptr %max_tm_rate.i38 to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 100000, ptr %max_tm_rate.i38, align 4
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then12.i, %if.end10.i.if.end14.i_crit_edge
  %max_qset_num.i39 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 5, i32 9
  %98 = ptrtoint ptr %max_qset_num.i39 to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %max_qset_num.i39, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %99)
  %tobool15.not.i = icmp eq i16 %99, 0
  br i1 %tobool15.not.i, label %if.then16.i, label %if.end14.i.if.end18.i_crit_edge

if.end14.i.if.end18.i_crit_edge:                  ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18.i

if.then16.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  %100 = ptrtoint ptr %max_qset_num.i39 to i32
  call void @__asan_store2_noabort(i32 %100)
  store i16 1024, ptr %max_qset_num.i39, align 4
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then16.i, %if.end14.i.if.end18.i_crit_edge
  %max_int_gl.i40 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 5, i32 6
  %101 = ptrtoint ptr %max_int_gl.i40 to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %max_int_gl.i40, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %102)
  %tobool19.not.i = icmp eq i16 %102, 0
  br i1 %tobool19.not.i, label %if.then20.i, label %if.end18.i.if.end22.i_crit_edge

if.end18.i.if.end22.i_crit_edge:                  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22.i

if.then20.i:                                      ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  %103 = ptrtoint ptr %max_int_gl.i40 to i32
  call void @__asan_store2_noabort(i32 %103)
  store i16 8160, ptr %max_int_gl.i40, align 2
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then20.i, %if.end18.i.if.end22.i_crit_edge
  %max_frm_size.i41 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 5, i32 8
  %104 = ptrtoint ptr %max_frm_size.i41 to i32
  call void @__asan_load2_noabort(i32 %104)
  %105 = load i16, ptr %max_frm_size.i41, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %105)
  %tobool23.not.i = icmp eq i16 %105, 0
  br i1 %tobool23.not.i, label %if.then24.i, label %if.end22.i.if.end26.i_crit_edge

if.end22.i.if.end26.i_crit_edge:                  ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26.i

if.then24.i:                                      ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #18
  %106 = ptrtoint ptr %max_frm_size.i41 to i32
  call void @__asan_store2_noabort(i32 %106)
  store i16 9728, ptr %max_frm_size.i41, align 2
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then24.i, %if.end22.i.if.end26.i_crit_edge
  %umv_size.i42 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 5, i32 10
  %107 = ptrtoint ptr %umv_size.i42 to i32
  call void @__asan_load2_noabort(i32 %107)
  %108 = load i16, ptr %umv_size.i42, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %108)
  %tobool27.not.i = icmp eq i16 %108, 0
  br i1 %tobool27.not.i, label %if.then28.i, label %if.end26.i.cleanup_crit_edge

if.end26.i.cleanup_crit_edge:                     ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then28.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #18
  %109 = ptrtoint ptr %umv_size.i42 to i32
  call void @__asan_store2_noabort(i32 %109)
  store i16 384, ptr %umv_size.i42, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.then28.i, %if.end26.i.cleanup_crit_edge, %if.then1, %for.body.preheader.cleanup_crit_edge, %hclge_mac_query_reg_num.exit.i.cleanup_crit_edge, %hclge_mac_query_reg_num.exit.thread8.i
  %retval.0 = phi i32 [ 0, %if.then1 ], [ %call.i, %for.body.preheader.cleanup_crit_edge ], [ 0, %if.end26.i.cleanup_crit_edge ], [ 0, %if.then28.i ], [ -61, %hclge_mac_query_reg_num.exit.thread8.i ], [ %call.i.i.i, %hclge_mac_query_reg_num.exit.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_configure(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca [2 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdev, align 8
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %desc.i) #16
  %4 = call ptr @memset(ptr %desc.i, i32 255, i32 64)
  %data.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i, i32 0, i32 0, i32 4
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 37, i1 noundef zeroext true) #16
  %5 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 4, ptr %data.i, align 4
  %arrayidx.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i, i32 0, i32 1
  %data.1.i = getelementptr inbounds [2 x %struct.hclge_desc], ptr %desc.i, i32 0, i32 1, i32 4
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.1.i, i32 noundef 37, i1 noundef zeroext true) #16
  %6 = ptrtoint ptr %data.1.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 268435460, ptr %data.1.i, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end, label %hclge_get_cfg.exit

hclge_get_cfg.exit:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.249, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc.i) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %param.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 2
  %9 = ptrtoint ptr %param.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %param.i.i, align 4
  %11 = lshr i32 %10, 16
  %conv.i.i = trunc i32 %11 to i8
  %12 = and i32 %10, 65535
  %13 = call i32 @llvm.bswap.i32(i32 %12) #16
  %shr5.i.i = lshr exact i32 %13, 16
  %conv6.i.i = trunc i32 %shr5.i.i to i16
  %arrayidx8.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 3
  %14 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx8.i.i, align 4
  %16 = lshr i32 %15, 24
  %conv11.i.i = trunc i32 %16 to i8
  %17 = lshr i32 %15, 16
  %conv16.i.i = trunc i32 %17 to i8
  %18 = and i32 %15, 65535
  %19 = call i32 @llvm.bswap.i32(i32 %18) #16
  %shr20.i.i = lshr exact i32 %19, 16
  %conv21.i.i = trunc i32 %shr20.i.i to i16
  %arrayidx23.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 4
  %20 = ptrtoint ptr %arrayidx23.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx23.i.i, align 4
  %22 = call i32 @llvm.bswap.i32(i32 %21) #16
  %arrayidx26.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 5
  %23 = ptrtoint ptr %arrayidx26.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx26.i.i, align 4
  %25 = call i32 @llvm.bswap.i32(i32 %24) #16
  %and33.i.i = lshr i32 %25, 16
  %conv35.i.i = trunc i32 %and33.i.i to i8
  %26 = trunc i32 %24 to i16
  %conv40.i.i = and i16 %26, 255
  %shr42.3.i.i = lshr i32 %22, 24
  %arrayidx52.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 1, i32 4, i32 3
  %27 = ptrtoint ptr %arrayidx52.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx52.i.i, align 4
  %29 = lshr i32 %28, 24
  %30 = lshr i32 %28, 10
  %shl62.i.i = and i32 %30, 16128
  %or65.i.i = or i32 %shl62.i.i, %29
  %conv66.i.i = trunc i32 %or65.i.i to i16
  %31 = and i32 %28, 65535
  %32 = call i32 @llvm.bswap.i32(i32 %31) #16
  %shr75.i.i = lshr exact i32 %32, 16
  %conv76.i.i = trunc i32 %shr75.i.i to i16
  %arrayidx78.i.i = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 1, i32 4, i32 4
  %33 = ptrtoint ptr %arrayidx78.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx78.i.i, align 4
  %35 = lshr i32 %34, 24
  %36 = trunc i32 %35 to i16
  %conv81.i.i = and i16 %36, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv81.i.i)
  %tobool.not.i.i = icmp eq i16 %conv81.i.i, 0
  %shl86.i.i = shl nuw i16 1, %conv81.i.i
  %spec.select.i = select i1 %tobool.not.i.i, i16 %conv40.i.i, i16 %shl86.i.i
  %37 = and i32 %34, -251723776
  %38 = call i32 @llvm.bswap.i32(i32 %37) #16
  %mul96.i.i = shl nuw nsw i32 %38, 8
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %desc.i) #16
  %base_tqp_pid = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 18
  %39 = ptrtoint ptr %base_tqp_pid to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 0, ptr %base_tqp_pid, align 8
  %vf_rss_size_max2 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 20
  %40 = ptrtoint ptr %vf_rss_size_max2 to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %conv40.i.i, ptr %vf_rss_size_max2, align 4
  %pf_rss_size_max3 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 21
  %41 = ptrtoint ptr %pf_rss_size_max3 to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %spec.select.i, ptr %pf_rss_size_max3, align 2
  %rx_buf_len4 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 26
  %42 = ptrtoint ptr %rx_buf_len4 to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %conv21.i.i, ptr %rx_buf_len4, align 4
  %mac_addr = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 4
  %43 = lshr i32 %22, 8
  %cfg.sroa.19.sroa.6.0.insert.shift = and i32 %43, 65280
  %44 = shl i32 %22, 8
  %cfg.sroa.19.sroa.5.0.insert.shift = and i32 %44, 16711680
  %cfg.sroa.19.sroa.0.0.insert.ext = shl i32 %22, 24
  %cfg.sroa.19.sroa.5.0.insert.insert = or i32 %cfg.sroa.19.sroa.0.0.insert.ext, %shr42.3.i.i
  %cfg.sroa.19.sroa.6.0.insert.insert = or i32 %cfg.sroa.19.sroa.5.0.insert.insert, %cfg.sroa.19.sroa.6.0.insert.shift
  %cfg.sroa.19.sroa.0.0.insert.insert = or i32 %cfg.sroa.19.sroa.6.0.insert.insert, %cfg.sroa.19.sroa.5.0.insert.shift
  %45 = ptrtoint ptr %mac_addr to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %cfg.sroa.19.sroa.0.0.insert.insert, ptr %mac_addr, align 4
  %46 = lshr i32 %24, 16
  %cfg.sroa.24.sroa.0.0.insert.insert = trunc i32 %46 to i16
  %add.ptr1.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 4, i32 4
  %47 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 %cfg.sroa.24.sroa.0.0.insert.insert, ptr %add.ptr1.i, align 2
  %media_type9 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 3
  %48 = ptrtoint ptr %media_type9 to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %conv16.i.i, ptr %media_type9, align 1
  %phy_addr12 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 1
  %49 = ptrtoint ptr %phy_addr12 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %conv11.i.i, ptr %phy_addr12, align 1
  %num_tx_desc = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 27
  %50 = ptrtoint ptr %num_tx_desc to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %conv6.i.i, ptr %num_tx_desc, align 2
  %num_rx_desc = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 28
  %51 = ptrtoint ptr %num_rx_desc to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %conv6.i.i, ptr %num_rx_desc, align 8
  %num_pg = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 37, i32 1
  %52 = ptrtoint ptr %num_pg to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 1, ptr %num_pg, align 1
  %tc_max = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 33
  %53 = ptrtoint ptr %tc_max to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %conv.i.i, ptr %tc_max, align 2
  %hw_pfc_map = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 37, i32 7
  %54 = ptrtoint ptr %hw_pfc_map to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 0, ptr %hw_pfc_map, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv76.i.i)
  %tobool15.not = icmp eq i16 %conv76.i.i, 0
  br i1 %tobool15.not, label %if.else, label %if.end.if.end20_crit_edge

if.end.if.end20_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %ae_dev18 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %55 = ptrtoint ptr %ae_dev18 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %ae_dev18, align 4
  %umv_size = getelementptr inbounds %struct.hnae3_ae_dev, ptr %56, i32 0, i32 5, i32 10
  %57 = ptrtoint ptr %umv_size to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %umv_size, align 2
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.end.if.end20_crit_edge
  %conv76.i.i.sink = phi i16 [ %58, %if.else ], [ %conv76.i.i, %if.end.if.end20_crit_edge ]
  %59 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 78
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 %conv76.i.i.sink, ptr %59, align 2
  %tx_spare_buf_size21 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 22
  %61 = ptrtoint ptr %tx_spare_buf_size21 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %mul96.i.i, ptr %tx_spare_buf_size21, align 8
  %gro_en = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 77
  %62 = ptrtoint ptr %gro_en to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 1, ptr %gro_en, align 1
  %63 = and i32 %28, 196608
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %63)
  %cmp = icmp eq i32 %63, 65536
  br i1 %cmp, label %if.then23, label %if.end20.if.end25_crit_edge

if.end20.if.end25_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then23:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 7
  call void @_set_bit(i32 noundef 19, ptr noundef %caps) #16
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end20.if.end25_crit_edge
  %ae_dev26 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %64 = ptrtoint ptr %ae_dev26 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %ae_dev26, align 4
  %caps27 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %65, i32 0, i32 7
  %66 = ptrtoint ptr %caps27 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %caps27, align 4
  %and1.i = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool30.not = icmp eq i32 %and1.i, 0
  br i1 %tobool30.not, label %if.end25.if.end32_crit_edge, label %if.then31

if.end25.if.end32_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end32

if.then31:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  %fd_en = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 76
  %68 = ptrtoint ptr %fd_en to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 1, ptr %fd_en, align 4
  %fd_active_type = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 75
  %69 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 0, ptr %fd_active_type, align 8
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end25.if.end32_crit_edge
  %speed = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  call void @__sanitizer_cov_trace_const_cmp1(i8 9, i8 %conv35.i.i)
  %70 = icmp ult i8 %conv35.i.i, 9
  br i1 %70, label %switch.lookup, label %do.end

do.end:                                           ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  %71 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %72, i32 0, i32 44
  %conv40 = and i32 %and33.i.i, 255
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.247, i32 noundef %conv40, i32 noundef -22) #20
  br label %cleanup

switch.lookup:                                    ; preds = %if.end32
  %sext = shl i32 %and33.i.i, 24
  %73 = ashr exact i32 %sext, 24
  %switch.gep = getelementptr inbounds [9 x i32], ptr @switch.table.hclge_configure, i32 0, i32 %73
  %74 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %74)
  %switch.load = load i32, ptr %switch.gep, align 4
  %75 = ptrtoint ptr %speed to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %switch.load, ptr %speed, align 4
  %76 = ptrtoint ptr %media_type9 to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %media_type9, align 1
  %78 = zext i8 %77 to i64
  call void @__sanitizer_cov_trace_switch(i64 %78, ptr @__sancov_gen_cov_switch_values.780)
  switch i8 %77, label %switch.lookup.hclge_parse_link_mode.exit_crit_edge [
    i8 1, label %if.then.i
    i8 2, label %if.then6.i
    i8 3, label %if.then11.i
  ]

switch.lookup.hclge_parse_link_mode.exit_crit_edge: ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_parse_link_mode.exit

if.then.i:                                        ; preds = %switch.lookup
  %79 = and i16 %conv66.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %79)
  %tobool.not.i.i92 = icmp eq i16 %79, 0
  br i1 %tobool.not.i.i92, label %if.then.i.if.end.i.i_crit_edge, label %if.then.i.i

if.then.i.if.end.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %80 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %or.i.i.i.i = or i32 %81, 512
  store i32 %or.i.i.i.i, ptr %add.ptr.i.i.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.then.i.if.end.i.i_crit_edge
  %supported2.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20
  %82 = and i32 %28, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %82)
  %tobool.not.i.i.i = icmp eq i32 %82, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.if.end.i.i.i_crit_edge, label %if.then.i.i.i

if.end.i.i.if.end.i.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %83 = ptrtoint ptr %add.ptr.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %add.ptr.i.i.i.i.i, align 4
  %or.i.i.i.i.i = or i32 %84, 2048
  store i32 %or.i.i.i.i.i, ptr %add.ptr.i.i.i.i.i, align 4
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %if.end.i.i.if.end.i.i.i_crit_edge
  %85 = and i32 %28, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool3.not.i.i.i = icmp eq i32 %85, 0
  br i1 %tobool3.not.i.i.i, label %if.end.i.i.i.if.end5.i.i.i_crit_edge, label %if.then4.i.i.i

if.end.i.i.i.if.end5.i.i.i_crit_edge:             ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i.i.i

if.then4.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i36.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %86 = ptrtoint ptr %add.ptr.i.i36.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %add.ptr.i.i36.i.i.i, align 4
  %or.i.i37.i.i.i = or i32 %87, 2
  store i32 %or.i.i37.i.i.i, ptr %add.ptr.i.i36.i.i.i, align 4
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then4.i.i.i, %if.end.i.i.i.if.end5.i.i.i_crit_edge
  %88 = and i32 %28, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %88)
  %tobool8.not.i.i.i = icmp eq i32 %88, 0
  br i1 %tobool8.not.i.i.i, label %if.end5.i.i.i.if.end10.i.i.i_crit_edge, label %if.then9.i.i.i

if.end5.i.i.i.if.end10.i.i.i_crit_edge:           ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i.i

if.then9.i.i.i:                                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %89 = ptrtoint ptr %supported2.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %supported2.i.i, align 4
  %or.i.i38.i.i.i = or i32 %90, 33554432
  store i32 %or.i.i38.i.i.i, ptr %supported2.i.i, align 4
  br label %if.end10.i.i.i

if.end10.i.i.i:                                   ; preds = %if.then9.i.i.i, %if.end5.i.i.i.if.end10.i.i.i_crit_edge
  %91 = and i32 %28, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %91)
  %tobool13.not.i.i.i = icmp eq i32 %91, 0
  br i1 %tobool13.not.i.i.i, label %if.end10.i.i.i.if.end15.i.i.i_crit_edge, label %if.then14.i.i.i

if.end10.i.i.i.if.end15.i.i.i_crit_edge:          ; preds = %if.end10.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i.i.i

if.then14.i.i.i:                                  ; preds = %if.end10.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i39.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %92 = ptrtoint ptr %add.ptr.i.i39.i.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %add.ptr.i.i39.i.i.i, align 4
  %or.i.i40.i.i.i = or i32 %93, 256
  store i32 %or.i.i40.i.i.i, ptr %add.ptr.i.i39.i.i.i, align 4
  br label %if.end15.i.i.i

if.end15.i.i.i:                                   ; preds = %if.then14.i.i.i, %if.end10.i.i.i.if.end15.i.i.i_crit_edge
  %94 = and i32 %28, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %tobool18.not.i.i.i = icmp eq i32 %94, 0
  br i1 %tobool18.not.i.i.i, label %if.end15.i.i.i.if.end20.i.i.i_crit_edge, label %if.then19.i.i.i

if.end15.i.i.i.if.end20.i.i.i_crit_edge:          ; preds = %if.end15.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i.i.i

if.then19.i.i.i:                                  ; preds = %if.end15.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i41.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %95 = ptrtoint ptr %add.ptr.i.i41.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %add.ptr.i.i41.i.i.i, align 4
  %or.i.i42.i.i.i = or i32 %96, 32
  store i32 %or.i.i42.i.i.i, ptr %add.ptr.i.i41.i.i.i, align 4
  br label %if.end20.i.i.i

if.end20.i.i.i:                                   ; preds = %if.then19.i.i.i, %if.end15.i.i.i.if.end20.i.i.i_crit_edge
  %97 = and i32 %28, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %tobool23.not.i.i.i = icmp eq i32 %97, 0
  br i1 %tobool23.not.i.i.i, label %if.end20.i.i.i.hclge_convert_setting_sr.exit.i.i_crit_edge, label %if.then24.i.i.i

if.end20.i.i.i.hclge_convert_setting_sr.exit.i.i_crit_edge: ; preds = %if.end20.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_convert_setting_sr.exit.i.i

if.then24.i.i.i:                                  ; preds = %if.end20.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i43.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %98 = ptrtoint ptr %add.ptr.i.i43.i.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %add.ptr.i.i43.i.i.i, align 4
  %or.i.i44.i.i.i = or i32 %99, -2147483648
  store i32 %or.i.i44.i.i.i, ptr %add.ptr.i.i43.i.i.i, align 4
  br label %hclge_convert_setting_sr.exit.i.i

hclge_convert_setting_sr.exit.i.i:                ; preds = %if.then24.i.i.i, %if.end20.i.i.i.hclge_convert_setting_sr.exit.i.i_crit_edge
  br i1 %tobool.not.i.i.i, label %hclge_convert_setting_sr.exit.i.i.if.end.i47.i.i_crit_edge, label %if.then.i44.i.i

hclge_convert_setting_sr.exit.i.i.if.end.i47.i.i_crit_edge: ; preds = %hclge_convert_setting_sr.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i47.i.i

if.then.i44.i.i:                                  ; preds = %hclge_convert_setting_sr.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i42.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %100 = ptrtoint ptr %add.ptr.i.i.i42.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %add.ptr.i.i.i42.i.i, align 4
  %or.i.i.i43.i.i = or i32 %101, 4096
  store i32 %or.i.i.i43.i.i, ptr %add.ptr.i.i.i42.i.i, align 4
  br label %if.end.i47.i.i

if.end.i47.i.i:                                   ; preds = %if.then.i44.i.i, %hclge_convert_setting_sr.exit.i.i.if.end.i47.i.i_crit_edge
  br i1 %tobool3.not.i.i.i, label %if.end.i47.i.i.if.end5.i53.i.i_crit_edge, label %if.then4.i50.i.i

if.end.i47.i.i.if.end5.i53.i.i_crit_edge:         ; preds = %if.end.i47.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i53.i.i

if.then4.i50.i.i:                                 ; preds = %if.end.i47.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i36.i48.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %102 = ptrtoint ptr %add.ptr.i.i36.i48.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %add.ptr.i.i36.i48.i.i, align 4
  %or.i.i37.i49.i.i = or i32 %103, 2
  store i32 %or.i.i37.i49.i.i, ptr %add.ptr.i.i36.i48.i.i, align 4
  br label %if.end5.i53.i.i

if.end5.i53.i.i:                                  ; preds = %if.then4.i50.i.i, %if.end.i47.i.i.if.end5.i53.i.i_crit_edge
  br i1 %tobool13.not.i.i.i, label %if.end5.i53.i.i.if.end10.i57.i.i_crit_edge, label %if.then9.i54.i.i

if.end5.i53.i.i.if.end10.i57.i.i_crit_edge:       ; preds = %if.end5.i53.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i57.i.i

if.then9.i54.i.i:                                 ; preds = %if.end5.i53.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i38.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %104 = ptrtoint ptr %add.ptr.i.i38.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %add.ptr.i.i38.i.i.i, align 4
  %or.i.i39.i.i.i = or i32 %105, 8388608
  store i32 %or.i.i39.i.i.i, ptr %add.ptr.i.i38.i.i.i, align 4
  br label %if.end10.i57.i.i

if.end10.i57.i.i:                                 ; preds = %if.then9.i54.i.i, %if.end5.i53.i.i.if.end10.i57.i.i_crit_edge
  br i1 %tobool8.not.i.i.i, label %if.end10.i57.i.i.if.end15.i62.i.i_crit_edge, label %if.then14.i59.i.i

if.end10.i57.i.i.if.end15.i62.i.i_crit_edge:      ; preds = %if.end10.i57.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i62.i.i

if.then14.i59.i.i:                                ; preds = %if.end10.i57.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %106 = ptrtoint ptr %supported2.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %supported2.i.i, align 4
  %or.i.i40.i58.i.i = or i32 %107, 67108864
  store i32 %or.i.i40.i58.i.i, ptr %supported2.i.i, align 4
  br label %if.end15.i62.i.i

if.end15.i62.i.i:                                 ; preds = %if.then14.i59.i.i, %if.end10.i57.i.i.if.end15.i62.i.i_crit_edge
  br i1 %tobool18.not.i.i.i, label %if.end15.i62.i.i.if.end20.i68.i.i_crit_edge, label %if.then19.i65.i.i

if.end15.i62.i.i.if.end20.i68.i.i_crit_edge:      ; preds = %if.end15.i62.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i68.i.i

if.then19.i65.i.i:                                ; preds = %if.end15.i62.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i41.i63.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %108 = ptrtoint ptr %add.ptr.i.i41.i63.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %add.ptr.i.i41.i63.i.i, align 4
  %or.i.i42.i64.i.i = or i32 %109, 128
  store i32 %or.i.i42.i64.i.i, ptr %add.ptr.i.i41.i63.i.i, align 4
  br label %if.end20.i68.i.i

if.end20.i68.i.i:                                 ; preds = %if.then19.i65.i.i, %if.end15.i62.i.i.if.end20.i68.i.i_crit_edge
  br i1 %tobool23.not.i.i.i, label %if.end20.i68.i.i.hclge_convert_setting_lr.exit.i.i_crit_edge, label %if.then24.i71.i.i

if.end20.i68.i.i.hclge_convert_setting_lr.exit.i.i_crit_edge: ; preds = %if.end20.i68.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_convert_setting_lr.exit.i.i

if.then24.i71.i.i:                                ; preds = %if.end20.i68.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i43.i69.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 2
  %110 = ptrtoint ptr %add.ptr.i.i43.i69.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %add.ptr.i.i43.i69.i.i, align 4
  %or.i.i44.i70.i.i = or i32 %111, 1
  store i32 %or.i.i44.i70.i.i, ptr %add.ptr.i.i43.i69.i.i, align 4
  br label %hclge_convert_setting_lr.exit.i.i

hclge_convert_setting_lr.exit.i.i:                ; preds = %if.then24.i71.i.i, %if.end20.i68.i.i.hclge_convert_setting_lr.exit.i.i_crit_edge
  br i1 %tobool.not.i.i.i, label %hclge_convert_setting_lr.exit.i.i.if.end.i80.i.i_crit_edge, label %if.then.i77.i.i

hclge_convert_setting_lr.exit.i.i.if.end.i80.i.i_crit_edge: ; preds = %hclge_convert_setting_lr.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i80.i.i

if.then.i77.i.i:                                  ; preds = %hclge_convert_setting_lr.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i75.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %112 = ptrtoint ptr %add.ptr.i.i.i75.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %add.ptr.i.i.i75.i.i, align 4
  %or.i.i.i76.i.i = or i32 %113, 1024
  store i32 %or.i.i.i76.i.i, ptr %add.ptr.i.i.i75.i.i, align 4
  br label %if.end.i80.i.i

if.end.i80.i.i:                                   ; preds = %if.then.i77.i.i, %hclge_convert_setting_lr.exit.i.i.if.end.i80.i.i_crit_edge
  br i1 %tobool3.not.i.i.i, label %if.end.i80.i.i.if.end5.i84.i.i_crit_edge, label %if.then4.i81.i.i

if.end.i80.i.i.if.end5.i84.i.i_crit_edge:         ; preds = %if.end.i80.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i84.i.i

if.then4.i81.i.i:                                 ; preds = %if.end.i80.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %114 = ptrtoint ptr %supported2.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %supported2.i.i, align 4
  %or.i.i36.i.i.i = or i32 %115, -2147483648
  store i32 %or.i.i36.i.i.i, ptr %supported2.i.i, align 4
  br label %if.end5.i84.i.i

if.end5.i84.i.i:                                  ; preds = %if.then4.i81.i.i, %if.end.i80.i.i.if.end5.i84.i.i_crit_edge
  br i1 %tobool8.not.i.i.i, label %if.end5.i84.i.i.if.end10.i89.i.i_crit_edge, label %if.then9.i86.i.i

if.end5.i84.i.i.if.end10.i89.i.i_crit_edge:       ; preds = %if.end5.i84.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i89.i.i

if.then9.i86.i.i:                                 ; preds = %if.end5.i84.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %116 = ptrtoint ptr %supported2.i.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %supported2.i.i, align 4
  %or.i.i37.i85.i.i = or i32 %117, 16777216
  store i32 %or.i.i37.i85.i.i, ptr %supported2.i.i, align 4
  br label %if.end10.i89.i.i

if.end10.i89.i.i:                                 ; preds = %if.then9.i86.i.i, %if.end5.i84.i.i.if.end10.i89.i.i_crit_edge
  br i1 %tobool13.not.i.i.i, label %if.end10.i89.i.i.if.end15.i95.i.i_crit_edge, label %if.then14.i92.i.i

if.end10.i89.i.i.if.end15.i95.i.i_crit_edge:      ; preds = %if.end10.i89.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i95.i.i

if.then14.i92.i.i:                                ; preds = %if.end10.i89.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i38.i90.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %118 = ptrtoint ptr %add.ptr.i.i38.i90.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %add.ptr.i.i38.i90.i.i, align 4
  %or.i.i39.i91.i.i = or i32 %119, 4
  store i32 %or.i.i39.i91.i.i, ptr %add.ptr.i.i38.i90.i.i, align 4
  br label %if.end15.i95.i.i

if.end15.i95.i.i:                                 ; preds = %if.then14.i92.i.i, %if.end10.i89.i.i.if.end15.i95.i.i_crit_edge
  br i1 %tobool18.not.i.i.i, label %if.end15.i95.i.i.if.end20.i99.i.i_crit_edge, label %if.then19.i96.i.i

if.end15.i95.i.i.if.end20.i99.i.i_crit_edge:      ; preds = %if.end15.i95.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i99.i.i

if.then19.i96.i.i:                                ; preds = %if.end15.i95.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i40.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %120 = ptrtoint ptr %add.ptr.i.i40.i.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %add.ptr.i.i40.i.i.i, align 4
  %or.i.i41.i.i.i = or i32 %121, 64
  store i32 %or.i.i41.i.i.i, ptr %add.ptr.i.i40.i.i.i, align 4
  br label %if.end20.i99.i.i

if.end20.i99.i.i:                                 ; preds = %if.then19.i96.i.i, %if.end15.i95.i.i.if.end20.i99.i.i_crit_edge
  br i1 %tobool23.not.i.i.i, label %if.end20.i99.i.i.hclge_convert_setting_cr.exit.i.i_crit_edge, label %if.then24.i100.i.i

if.end20.i99.i.i.hclge_convert_setting_cr.exit.i.i_crit_edge: ; preds = %if.end20.i99.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_convert_setting_cr.exit.i.i

if.then24.i100.i.i:                               ; preds = %if.end20.i99.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i42.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 2
  %122 = ptrtoint ptr %add.ptr.i.i42.i.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %add.ptr.i.i42.i.i.i, align 4
  %or.i.i43.i.i.i = or i32 %123, 4
  store i32 %or.i.i43.i.i.i, ptr %add.ptr.i.i42.i.i.i, align 4
  br label %hclge_convert_setting_cr.exit.i.i

hclge_convert_setting_cr.exit.i.i:                ; preds = %if.then24.i100.i.i, %if.end20.i99.i.i.hclge_convert_setting_cr.exit.i.i_crit_edge
  %124 = ptrtoint ptr %caps27 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %caps27, align 4
  %126 = and i32 %125, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %126)
  %tobool9.not.i.i = icmp eq i32 %126, 0
  br i1 %tobool9.not.i.i, label %hclge_convert_setting_cr.exit.i.i.if.end11.i.i_crit_edge, label %if.then10.i.i

hclge_convert_setting_cr.exit.i.i.if.end11.i.i_crit_edge: ; preds = %hclge_convert_setting_cr.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11.i.i

if.then10.i.i:                                    ; preds = %hclge_convert_setting_cr.exit.i.i
  %add.ptr.i.i.i101.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %127 = ptrtoint ptr %add.ptr.i.i.i101.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %add.ptr.i.i.i101.i.i, align 4
  %and.i.i24.i.i.i = and i32 %128, -786433
  store i32 %and.i.i24.i.i.i, ptr %add.ptr.i.i.i101.i.i, align 4
  %129 = ptrtoint ptr %speed to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %speed, align 4
  %131 = zext i32 %130 to i64
  call void @__sanitizer_cov_trace_switch(i64 %131, ptr @__sancov_gen_cov_switch_values.781)
  switch i32 %130, label %if.then10.i.i.hclge_convert_setting_fec.exit.i.i_crit_edge [
    i32 10000, label %if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge
    i32 40000, label %if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge147
    i32 25000, label %if.then10.i.i.sw.bb5.i.i.i_crit_edge
    i32 50000, label %if.then10.i.i.sw.bb5.i.i.i_crit_edge148
    i32 100000, label %if.then10.i.i.sw.bb9.i.i.i_crit_edge
    i32 200000, label %if.then10.i.i.sw.bb9.i.i.i_crit_edge149
  ]

if.then10.i.i.sw.bb9.i.i.i_crit_edge149:          ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb9.i.i.i

if.then10.i.i.sw.bb9.i.i.i_crit_edge:             ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb9.i.i.i

if.then10.i.i.sw.bb5.i.i.i_crit_edge148:          ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb5.i.i.i

if.then10.i.i.sw.bb5.i.i.i_crit_edge:             ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb5.i.i.i

if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge147: ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.sink.split.i.i.i

if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge: ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.sink.split.i.i.i

if.then10.i.i.hclge_convert_setting_fec.exit.i.i_crit_edge: ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_convert_setting_fec.exit.i.i

sw.bb5.i.i.i:                                     ; preds = %if.then10.i.i.sw.bb5.i.i.i_crit_edge, %if.then10.i.i.sw.bb5.i.i.i_crit_edge148
  br label %sw.epilog.sink.split.i.i.i

sw.bb9.i.i.i:                                     ; preds = %if.then10.i.i.sw.bb9.i.i.i_crit_edge, %if.then10.i.i.sw.bb9.i.i.i_crit_edge149
  br label %sw.epilog.sink.split.i.i.i

sw.epilog.sink.split.i.i.i:                       ; preds = %sw.bb9.i.i.i, %sw.bb5.i.i.i, %if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge, %if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge147
  %.sink30.i.i.i = phi i32 [ 262144, %sw.bb9.i.i.i ], [ 262144, %sw.bb5.i.i.i ], [ 524288, %if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge ], [ 524288, %if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge147 ]
  %.sink.ph.i.i.i = phi i32 [ 5, %sw.bb9.i.i.i ], [ 7, %sw.bb5.i.i.i ], [ 3, %if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge ], [ 3, %if.then10.i.i.sw.epilog.sink.split.i.i.i_crit_edge147 ]
  %or.i.i29.i.i.i = or i32 %.sink30.i.i.i, %and.i.i24.i.i.i
  %132 = ptrtoint ptr %add.ptr.i.i.i101.i.i to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 %or.i.i29.i.i.i, ptr %add.ptr.i.i.i101.i.i, align 4
  br label %hclge_convert_setting_fec.exit.i.i

hclge_convert_setting_fec.exit.i.i:               ; preds = %sw.epilog.sink.split.i.i.i, %if.then10.i.i.hclge_convert_setting_fec.exit.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 0, %if.then10.i.i.hclge_convert_setting_fec.exit.i.i_crit_edge ], [ %.sink.ph.i.i.i, %sw.epilog.sink.split.i.i.i ]
  %fec_ability13.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 15
  %133 = ptrtoint ptr %fec_ability13.i.i.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %.sink.i.i.i, ptr %fec_ability13.i.i.i, align 4
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %hclge_convert_setting_fec.exit.i.i, %hclge_convert_setting_cr.exit.i.i.if.end11.i.i_crit_edge
  %134 = ptrtoint ptr %caps27 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %caps27, align 4
  %136 = and i32 %135, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %136)
  %tobool16.not.i.i = icmp eq i32 %136, 0
  br i1 %tobool16.not.i.i, label %if.end11.i.i.hclge_parse_fiber_link_mode.exit.i_crit_edge, label %if.then17.i.i

if.end11.i.i.hclge_parse_fiber_link_mode.exit.i_crit_edge: ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_parse_fiber_link_mode.exit.i

if.then17.i.i:                                    ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %137 = ptrtoint ptr %supported2.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %supported2.i.i, align 4
  %or.i.i102.i.i = or i32 %138, 8192
  store i32 %or.i.i102.i.i, ptr %supported2.i.i, align 4
  br label %hclge_parse_fiber_link_mode.exit.i

hclge_parse_fiber_link_mode.exit.i:               ; preds = %if.then17.i.i, %if.end11.i.i.hclge_parse_fiber_link_mode.exit.i_crit_edge
  %139 = ptrtoint ptr %supported2.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %supported2.i.i, align 4
  %or.i.i103.i.i = or i32 %140, 1024
  store i32 %or.i.i103.i.i, ptr %supported2.i.i, align 4
  %add.ptr.i.i104.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  br label %if.end13.sink.split.i

if.then6.i:                                       ; preds = %switch.lookup
  %supported1.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv66.i.i)
  %tobool.not.i21.i = icmp eq i16 %conv66.i.i, 0
  %spec.store.select.i.i = select i1 %tobool.not.i21.i, i32 193, i32 %or65.i.i
  %and.i.i = and i32 %spec.store.select.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool2.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %if.then6.i.if.end4.i.i_crit_edge, label %if.then3.i.i

if.then6.i.if.end4.i.i_crit_edge:                 ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i.i

if.then3.i.i:                                     ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #18
  %141 = ptrtoint ptr %supported1.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %supported1.i.i, align 4
  %or.i.i.i22.i = or i32 %142, 32
  store i32 %or.i.i.i22.i, ptr %supported1.i.i, align 4
  br label %if.end4.i.i

if.end4.i.i:                                      ; preds = %if.then3.i.i, %if.then6.i.if.end4.i.i_crit_edge
  %and6.i.i = and i32 %spec.store.select.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i)
  %tobool7.not.i.i = icmp eq i32 %and6.i.i, 0
  br i1 %tobool7.not.i.i, label %if.end4.i.i.if.end9.i.i_crit_edge, label %if.then8.i.i

if.end4.i.i.if.end9.i.i_crit_edge:                ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9.i.i

if.then8.i.i:                                     ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %143 = ptrtoint ptr %supported1.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %supported1.i.i, align 4
  %or.i.i32.i.i = or i32 %144, 12
  store i32 %or.i.i32.i.i, ptr %supported1.i.i, align 4
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.then8.i.i, %if.end4.i.i.if.end9.i.i_crit_edge
  %and11.i.i = and i32 %spec.store.select.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i.i)
  %tobool12.not.i.i = icmp eq i32 %and11.i.i, 0
  br i1 %tobool12.not.i.i, label %if.end9.i.i.if.end14.i.i_crit_edge, label %if.then13.i.i

if.end9.i.i.if.end14.i.i_crit_edge:               ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.i.i

if.then13.i.i:                                    ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %145 = ptrtoint ptr %supported1.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %supported1.i.i, align 4
  %or.i.i34.i.i = or i32 %146, 3
  store i32 %or.i.i34.i.i, ptr %supported1.i.i, align 4
  br label %if.end14.i.i

if.end14.i.i:                                     ; preds = %if.then13.i.i, %if.end9.i.i.if.end14.i.i_crit_edge
  %147 = ptrtoint ptr %caps27 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile i32, ptr %caps27, align 4
  %149 = and i32 %148, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %149)
  %tobool16.not.i25.i = icmp eq i32 %149, 0
  br i1 %tobool16.not.i25.i, label %if.end14.i.i.if.end13.sink.split.i_crit_edge, label %if.then17.i26.i

if.end14.i.i.if.end13.sink.split.i_crit_edge:     ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.sink.split.i

if.then17.i26.i:                                  ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %150 = ptrtoint ptr %supported1.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %supported1.i.i, align 4
  %or.i.i36.i.i = or i32 %151, 24576
  store i32 %or.i.i36.i.i, ptr %supported1.i.i, align 4
  br label %if.end13.sink.split.i

if.then11.i:                                      ; preds = %switch.lookup
  %supported.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20
  %152 = and i32 %28, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %152)
  %tobool.not.i.i29.i = icmp eq i32 %152, 0
  br i1 %tobool.not.i.i29.i, label %if.then11.i.if.end.i.i34.i_crit_edge, label %if.then.i.i31.i

if.then11.i.if.end.i.i34.i_crit_edge:             ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i34.i

if.then.i.i31.i:                                  ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #18
  %153 = ptrtoint ptr %supported.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %supported.i.i, align 4
  %or.i.i.i.i30.i = or i32 %154, 131072
  store i32 %or.i.i.i.i30.i, ptr %supported.i.i, align 4
  br label %if.end.i.i34.i

if.end.i.i34.i:                                   ; preds = %if.then.i.i31.i, %if.then11.i.if.end.i.i34.i_crit_edge
  %155 = and i32 %28, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %155)
  %tobool3.not.i.i33.i = icmp eq i32 %155, 0
  br i1 %tobool3.not.i.i33.i, label %if.end.i.i34.i.if.end5.i.i39.i_crit_edge, label %if.then4.i.i36.i

if.end.i.i34.i.if.end5.i.i39.i_crit_edge:         ; preds = %if.end.i.i34.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i.i39.i

if.then4.i.i36.i:                                 ; preds = %if.end.i.i34.i
  call void @__sanitizer_cov_trace_pc() #18
  %156 = ptrtoint ptr %supported.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %supported.i.i, align 4
  %or.i.i43.i.i35.i = or i32 %157, 524288
  store i32 %or.i.i43.i.i35.i, ptr %supported.i.i, align 4
  br label %if.end5.i.i39.i

if.end5.i.i39.i:                                  ; preds = %if.then4.i.i36.i, %if.end.i.i34.i.if.end5.i.i39.i_crit_edge
  %158 = and i32 %28, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %158)
  %tobool8.not.i.i38.i = icmp eq i32 %158, 0
  br i1 %tobool8.not.i.i38.i, label %if.end5.i.i39.i.if.end10.i.i45.i_crit_edge, label %if.then9.i.i42.i

if.end5.i.i39.i.if.end10.i.i45.i_crit_edge:       ; preds = %if.end5.i.i39.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i45.i

if.then9.i.i42.i:                                 ; preds = %if.end5.i.i39.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i.i40.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %159 = ptrtoint ptr %add.ptr.i.i.i.i40.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %add.ptr.i.i.i.i40.i, align 4
  %or.i.i44.i.i41.i = or i32 %160, 1
  store i32 %or.i.i44.i.i41.i, ptr %add.ptr.i.i.i.i40.i, align 4
  br label %if.end10.i.i45.i

if.end10.i.i45.i:                                 ; preds = %if.then9.i.i42.i, %if.end5.i.i39.i.if.end10.i.i45.i_crit_edge
  %161 = and i32 %28, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %161)
  %tobool13.not.i.i44.i = icmp eq i32 %161, 0
  br i1 %tobool13.not.i.i44.i, label %if.end10.i.i45.i.if.end15.i.i49.i_crit_edge, label %if.then14.i.i46.i

if.end10.i.i45.i.if.end15.i.i49.i_crit_edge:      ; preds = %if.end10.i.i45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i.i49.i

if.then14.i.i46.i:                                ; preds = %if.end10.i.i45.i
  call void @__sanitizer_cov_trace_pc() #18
  %162 = ptrtoint ptr %supported.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %supported.i.i, align 4
  %or.i.i45.i.i.i = or i32 %163, 8388608
  store i32 %or.i.i45.i.i.i, ptr %supported.i.i, align 4
  br label %if.end15.i.i49.i

if.end15.i.i49.i:                                 ; preds = %if.then14.i.i46.i, %if.end10.i.i45.i.if.end15.i.i49.i_crit_edge
  %164 = and i32 %28, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %164)
  %tobool18.not.i.i48.i = icmp eq i32 %164, 0
  br i1 %tobool18.not.i.i48.i, label %if.end15.i.i49.i.if.end20.i.i53.i_crit_edge, label %if.then19.i.i50.i

if.end15.i.i49.i.if.end20.i.i53.i_crit_edge:      ; preds = %if.end15.i.i49.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i.i53.i

if.then19.i.i50.i:                                ; preds = %if.end15.i.i49.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i46.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %165 = ptrtoint ptr %add.ptr.i.i46.i.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %add.ptr.i.i46.i.i.i, align 4
  %or.i.i47.i.i.i = or i32 %166, 8
  store i32 %or.i.i47.i.i.i, ptr %add.ptr.i.i46.i.i.i, align 4
  br label %if.end20.i.i53.i

if.end20.i.i53.i:                                 ; preds = %if.then19.i.i50.i, %if.end15.i.i49.i.if.end20.i.i53.i_crit_edge
  %167 = and i32 %28, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %167)
  %tobool23.not.i.i52.i = icmp eq i32 %167, 0
  br i1 %tobool23.not.i.i52.i, label %if.end20.i.i53.i.if.end25.i.i.i_crit_edge, label %if.then24.i.i54.i

if.end20.i.i53.i.if.end25.i.i.i_crit_edge:        ; preds = %if.end20.i.i53.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25.i.i.i

if.then24.i.i54.i:                                ; preds = %if.end20.i.i53.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i48.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %168 = ptrtoint ptr %add.ptr.i.i48.i.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %add.ptr.i.i48.i.i.i, align 4
  %or.i.i49.i.i.i = or i32 %169, 16
  store i32 %or.i.i49.i.i.i, ptr %add.ptr.i.i48.i.i.i, align 4
  br label %if.end25.i.i.i

if.end25.i.i.i:                                   ; preds = %if.then24.i.i54.i, %if.end20.i.i53.i.if.end25.i.i.i_crit_edge
  %170 = and i32 %28, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %170)
  %tobool28.not.i.i.i = icmp eq i32 %170, 0
  br i1 %tobool28.not.i.i.i, label %if.end25.i.i.i.hclge_convert_setting_kr.exit.i.i_crit_edge, label %if.then29.i.i.i

if.end25.i.i.i.hclge_convert_setting_kr.exit.i.i_crit_edge: ; preds = %if.end25.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_convert_setting_kr.exit.i.i

if.then29.i.i.i:                                  ; preds = %if.end25.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i50.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %171 = ptrtoint ptr %add.ptr.i.i50.i.i.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %add.ptr.i.i50.i.i.i, align 4
  %or.i.i51.i.i.i = or i32 %172, 1073741824
  store i32 %or.i.i51.i.i.i, ptr %add.ptr.i.i50.i.i.i, align 4
  br label %hclge_convert_setting_kr.exit.i.i

hclge_convert_setting_kr.exit.i.i:                ; preds = %if.then29.i.i.i, %if.end25.i.i.i.hclge_convert_setting_kr.exit.i.i_crit_edge
  %173 = ptrtoint ptr %caps27 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile i32, ptr %caps27, align 4
  %175 = and i32 %174, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %175)
  %tobool.not.i57.i = icmp eq i32 %175, 0
  br i1 %tobool.not.i57.i, label %hclge_convert_setting_kr.exit.i.i.if.end.i71.i_crit_edge, label %if.then.i60.i

hclge_convert_setting_kr.exit.i.i.if.end.i71.i_crit_edge: ; preds = %hclge_convert_setting_kr.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i71.i

if.then.i60.i:                                    ; preds = %hclge_convert_setting_kr.exit.i.i
  %add.ptr.i.i.i24.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %176 = ptrtoint ptr %add.ptr.i.i.i24.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %add.ptr.i.i.i24.i.i, align 4
  %and.i.i24.i.i58.i = and i32 %177, -786433
  store i32 %and.i.i24.i.i58.i, ptr %add.ptr.i.i.i24.i.i, align 4
  %178 = ptrtoint ptr %speed to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %speed, align 4
  %180 = zext i32 %179 to i64
  call void @__sanitizer_cov_trace_switch(i64 %180, ptr @__sancov_gen_cov_switch_values.782)
  switch i32 %179, label %if.then.i60.i.hclge_convert_setting_fec.exit.i69.i_crit_edge [
    i32 10000, label %if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge
    i32 40000, label %if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge150
    i32 25000, label %if.then.i60.i.sw.bb5.i.i61.i_crit_edge
    i32 50000, label %if.then.i60.i.sw.bb5.i.i61.i_crit_edge151
    i32 100000, label %if.then.i60.i.sw.bb9.i.i62.i_crit_edge
    i32 200000, label %if.then.i60.i.sw.bb9.i.i62.i_crit_edge152
  ]

if.then.i60.i.sw.bb9.i.i62.i_crit_edge152:        ; preds = %if.then.i60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb9.i.i62.i

if.then.i60.i.sw.bb9.i.i62.i_crit_edge:           ; preds = %if.then.i60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb9.i.i62.i

if.then.i60.i.sw.bb5.i.i61.i_crit_edge151:        ; preds = %if.then.i60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb5.i.i61.i

if.then.i60.i.sw.bb5.i.i61.i_crit_edge:           ; preds = %if.then.i60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb5.i.i61.i

if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge150: ; preds = %if.then.i60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.sink.split.i.i66.i

if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge: ; preds = %if.then.i60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.sink.split.i.i66.i

if.then.i60.i.hclge_convert_setting_fec.exit.i69.i_crit_edge: ; preds = %if.then.i60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_convert_setting_fec.exit.i69.i

sw.bb5.i.i61.i:                                   ; preds = %if.then.i60.i.sw.bb5.i.i61.i_crit_edge, %if.then.i60.i.sw.bb5.i.i61.i_crit_edge151
  br label %sw.epilog.sink.split.i.i66.i

sw.bb9.i.i62.i:                                   ; preds = %if.then.i60.i.sw.bb9.i.i62.i_crit_edge, %if.then.i60.i.sw.bb9.i.i62.i_crit_edge152
  br label %sw.epilog.sink.split.i.i66.i

sw.epilog.sink.split.i.i66.i:                     ; preds = %sw.bb9.i.i62.i, %sw.bb5.i.i61.i, %if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge, %if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge150
  %.sink30.i.i63.i = phi i32 [ 262144, %sw.bb9.i.i62.i ], [ 262144, %sw.bb5.i.i61.i ], [ 524288, %if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge ], [ 524288, %if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge150 ]
  %.sink.ph.i.i64.i = phi i32 [ 5, %sw.bb9.i.i62.i ], [ 7, %sw.bb5.i.i61.i ], [ 3, %if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge ], [ 3, %if.then.i60.i.sw.epilog.sink.split.i.i66.i_crit_edge150 ]
  %or.i.i29.i.i65.i = or i32 %.sink30.i.i63.i, %and.i.i24.i.i58.i
  %181 = ptrtoint ptr %add.ptr.i.i.i24.i.i to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 %or.i.i29.i.i65.i, ptr %add.ptr.i.i.i24.i.i, align 4
  br label %hclge_convert_setting_fec.exit.i69.i

hclge_convert_setting_fec.exit.i69.i:             ; preds = %sw.epilog.sink.split.i.i66.i, %if.then.i60.i.hclge_convert_setting_fec.exit.i69.i_crit_edge
  %.sink.i.i67.i = phi i32 [ 0, %if.then.i60.i.hclge_convert_setting_fec.exit.i69.i_crit_edge ], [ %.sink.ph.i.i64.i, %sw.epilog.sink.split.i.i66.i ]
  %fec_ability13.i.i68.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 15
  %182 = ptrtoint ptr %fec_ability13.i.i68.i to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 %.sink.i.i67.i, ptr %fec_ability13.i.i68.i, align 4
  br label %if.end.i71.i

if.end.i71.i:                                     ; preds = %hclge_convert_setting_fec.exit.i69.i, %hclge_convert_setting_kr.exit.i.i.if.end.i71.i_crit_edge
  %183 = ptrtoint ptr %caps27 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load volatile i32, ptr %caps27, align 4
  %185 = and i32 %184, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %185)
  %tobool7.not.i70.i = icmp eq i32 %185, 0
  br i1 %tobool7.not.i70.i, label %if.end.i71.i.hclge_parse_backplane_link_mode.exit.i_crit_edge, label %if.then8.i73.i

if.end.i71.i.hclge_parse_backplane_link_mode.exit.i_crit_edge: ; preds = %if.end.i71.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_parse_backplane_link_mode.exit.i

if.then8.i73.i:                                   ; preds = %if.end.i71.i
  call void @__sanitizer_cov_trace_pc() #18
  %186 = ptrtoint ptr %supported.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %supported.i.i, align 4
  %or.i.i.i72.i = or i32 %187, 8192
  store i32 %or.i.i.i72.i, ptr %supported.i.i, align 4
  br label %hclge_parse_backplane_link_mode.exit.i

hclge_parse_backplane_link_mode.exit.i:           ; preds = %if.then8.i73.i, %if.end.i71.i.hclge_parse_backplane_link_mode.exit.i_crit_edge
  %188 = ptrtoint ptr %supported.i.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %supported.i.i, align 4
  %or.i.i25.i.i = or i32 %189, 65536
  store i32 %or.i.i25.i.i, ptr %supported.i.i, align 4
  %add.ptr.i.i.i74.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  br label %if.end13.sink.split.i

if.end13.sink.split.i:                            ; preds = %hclge_parse_backplane_link_mode.exit.i, %if.then17.i26.i, %if.end14.i.i.if.end13.sink.split.i_crit_edge, %hclge_parse_fiber_link_mode.exit.i
  %supported1.i.sink77.i = phi ptr [ %add.ptr.i.i.i74.i, %hclge_parse_backplane_link_mode.exit.i ], [ %add.ptr.i.i104.i.i, %hclge_parse_fiber_link_mode.exit.i ], [ %supported1.i.i, %if.end14.i.i.if.end13.sink.split.i_crit_edge ], [ %supported1.i.i, %if.then17.i26.i ]
  %.sink76.i = phi i32 [ 131072, %hclge_parse_backplane_link_mode.exit.i ], [ 131072, %hclge_parse_fiber_link_mode.exit.i ], [ 192, %if.end14.i.i.if.end13.sink.split.i_crit_edge ], [ 192, %if.then17.i26.i ]
  %190 = ptrtoint ptr %supported1.i.sink77.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %supported1.i.sink77.i, align 4
  %or.i.i38.i.i = or i32 %191, %.sink76.i
  store i32 %or.i.i38.i.i, ptr %supported1.i.sink77.i, align 4
  br label %hclge_parse_link_mode.exit

hclge_parse_link_mode.exit:                       ; preds = %if.end13.sink.split.i, %switch.lookup.hclge_parse_link_mode.exit_crit_edge
  %192 = and i32 %28, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %192)
  %tobool.not.i94 = icmp eq i32 %192, 0
  br i1 %tobool.not.i94, label %if.end.i95, label %hclge_parse_link_mode.exit.hclge_get_max_speed.exit_crit_edge

hclge_parse_link_mode.exit.hclge_get_max_speed.exit_crit_edge: ; preds = %hclge_parse_link_mode.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_speed.exit

if.end.i95:                                       ; preds = %hclge_parse_link_mode.exit
  %193 = and i32 %28, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %193)
  %tobool3.not.i = icmp eq i32 %193, 0
  br i1 %tobool3.not.i, label %if.end5.i, label %if.end.i95.hclge_get_max_speed.exit_crit_edge

if.end.i95.hclge_get_max_speed.exit_crit_edge:    ; preds = %if.end.i95
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_speed.exit

if.end5.i:                                        ; preds = %if.end.i95
  %194 = and i32 %28, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %194)
  %tobool8.not.i = icmp eq i32 %194, 0
  br i1 %tobool8.not.i, label %if.end10.i, label %if.end5.i.hclge_get_max_speed.exit_crit_edge

if.end5.i.hclge_get_max_speed.exit_crit_edge:     ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_speed.exit

if.end10.i:                                       ; preds = %if.end5.i
  %195 = and i32 %28, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %195)
  %tobool13.not.i = icmp eq i32 %195, 0
  br i1 %tobool13.not.i, label %if.end15.i, label %if.end10.i.hclge_get_max_speed.exit_crit_edge

if.end10.i.hclge_get_max_speed.exit_crit_edge:    ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_speed.exit

if.end15.i:                                       ; preds = %if.end10.i
  %196 = and i32 %28, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %196)
  %tobool18.not.i = icmp eq i32 %196, 0
  br i1 %tobool18.not.i, label %if.end20.i, label %if.end15.i.hclge_get_max_speed.exit_crit_edge

if.end15.i.hclge_get_max_speed.exit_crit_edge:    ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_speed.exit

if.end20.i:                                       ; preds = %if.end15.i
  %197 = and i32 %28, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %197)
  %tobool23.not.i = icmp eq i32 %197, 0
  br i1 %tobool23.not.i, label %if.end25.i, label %if.end20.i.hclge_get_max_speed.exit_crit_edge

if.end20.i.hclge_get_max_speed.exit_crit_edge:    ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_speed.exit

if.end25.i:                                       ; preds = %if.end20.i
  %198 = and i32 %28, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %198)
  %tobool28.not.i = icmp eq i32 %198, 0
  br i1 %tobool28.not.i, label %if.end30.i, label %if.end25.i.hclge_get_max_speed.exit_crit_edge

if.end25.i.hclge_get_max_speed.exit_crit_edge:    ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_speed.exit

if.end30.i:                                       ; preds = %if.end25.i
  %199 = and i32 %28, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %199)
  %tobool33.not.i = icmp eq i32 %199, 0
  br i1 %tobool33.not.i, label %if.end35.i, label %if.end30.i.hclge_get_max_speed.exit_crit_edge

if.end30.i.hclge_get_max_speed.exit_crit_edge:    ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_max_speed.exit

if.end35.i:                                       ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %28)
  %tobool38.not.i = icmp sgt i32 %28, -1
  %..i = select i1 %tobool38.not.i, i32 1000, i32 10
  br label %hclge_get_max_speed.exit

hclge_get_max_speed.exit:                         ; preds = %if.end35.i, %if.end30.i.hclge_get_max_speed.exit_crit_edge, %if.end25.i.hclge_get_max_speed.exit_crit_edge, %if.end20.i.hclge_get_max_speed.exit_crit_edge, %if.end15.i.hclge_get_max_speed.exit_crit_edge, %if.end10.i.hclge_get_max_speed.exit_crit_edge, %if.end5.i.hclge_get_max_speed.exit_crit_edge, %if.end.i95.hclge_get_max_speed.exit_crit_edge, %hclge_parse_link_mode.exit.hclge_get_max_speed.exit_crit_edge
  %retval.0.i96 = phi i32 [ 200000, %hclge_parse_link_mode.exit.hclge_get_max_speed.exit_crit_edge ], [ 100000, %if.end.i95.hclge_get_max_speed.exit_crit_edge ], [ 50000, %if.end5.i.hclge_get_max_speed.exit_crit_edge ], [ 40000, %if.end10.i.hclge_get_max_speed.exit_crit_edge ], [ 25000, %if.end15.i.hclge_get_max_speed.exit_crit_edge ], [ 10000, %if.end20.i.hclge_get_max_speed.exit_crit_edge ], [ 1000, %if.end25.i.hclge_get_max_speed.exit_crit_edge ], [ 100, %if.end30.i.hclge_get_max_speed.exit_crit_edge ], [ %..i, %if.end35.i ]
  %max_speed = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 10
  %200 = ptrtoint ptr %max_speed to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %retval.0.i96, ptr %max_speed, align 4
  %201 = ptrtoint ptr %tc_max to i32
  call void @__asan_load1_noabort(i32 %201)
  %202 = load i8, ptr %tc_max, align 2
  %203 = add i8 %202, -9
  call void @__sanitizer_cov_trace_const_cmp1(i8 -8, i8 %203)
  %204 = icmp ult i8 %203, -8
  br i1 %204, label %do.end.i, label %hclge_get_max_speed.exit.if.end.i99_crit_edge

hclge_get_max_speed.exit.if.end.i99_crit_edge:    ; preds = %hclge_get_max_speed.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i99

do.end.i:                                         ; preds = %hclge_get_max_speed.exit
  call void @__sanitizer_cov_trace_pc() #18
  %205 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %hdev, align 8
  %dev.i97 = getelementptr inbounds %struct.pci_dev, ptr %206, i32 0, i32 44
  %conv7.i = zext i8 %202 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i97, ptr noundef nonnull @.str.251, i32 noundef %conv7.i) #20
  %207 = ptrtoint ptr %tc_max to i32
  call void @__asan_store1_noabort(i32 %207)
  store i8 1, ptr %tc_max, align 2
  br label %if.end.i99

if.end.i99:                                       ; preds = %do.end.i, %hclge_get_max_speed.exit.if.end.i99_crit_edge
  %208 = ptrtoint ptr %ae_dev26 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %ae_dev26, align 4
  %flag.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %209, i32 0, i32 3
  %210 = ptrtoint ptr %flag.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %flag.i, align 4
  %212 = and i32 %211, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %212)
  %tobool.not.i98 = icmp eq i32 %212, 0
  br i1 %tobool.not.i98, label %if.then9.i, label %if.else.i

if.then9.i:                                       ; preds = %if.end.i99
  call void @__sanitizer_cov_trace_pc() #18
  %213 = ptrtoint ptr %tc_max to i32
  call void @__asan_store1_noabort(i32 %213)
  store i8 1, ptr %tc_max, align 2
  br label %hclge_init_tc_config.exit

if.else.i:                                        ; preds = %if.end.i99
  call void @__sanitizer_cov_trace_pc() #18
  %214 = ptrtoint ptr %tc_max to i32
  call void @__asan_load1_noabort(i32 %214)
  %215 = load i8, ptr %tc_max, align 2
  br label %hclge_init_tc_config.exit

hclge_init_tc_config.exit:                        ; preds = %if.else.i, %if.then9.i
  %.sink.i100 = phi i8 [ 0, %if.then9.i ], [ %215, %if.else.i ]
  %216 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 34
  %217 = ptrtoint ptr %216 to i32
  call void @__asan_store1_noabort(i32 %217)
  store i8 %.sink.i100, ptr %216, align 1
  %tm_info.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 37
  %218 = ptrtoint ptr %tm_info.i to i32
  call void @__asan_store1_noabort(i32 %218)
  store i8 1, ptr %tm_info.i, align 8
  %hw_tc_map.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 29
  %219 = ptrtoint ptr %hw_tc_map.i to i32
  call void @__asan_load1_noabort(i32 %219)
  %hw_tc_map.promoted.i = load i8, ptr %hw_tc_map.i, align 2
  %conv28.i = or i8 %hw_tc_map.promoted.i, 1
  store i8 %conv28.i, ptr %hw_tc_map.i, align 2
  %tx_sch_mode.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 32
  %220 = ptrtoint ptr %tx_sch_mode.i to i32
  call void @__asan_store1_noabort(i32 %220)
  store i8 1, ptr %tx_sch_mode.i, align 1
  call void @__asan_load8_noabort(i32 ptrtoint (ptr @elfcorehdr_addr to i32))
  %221 = load i64, ptr @elfcorehdr_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %221)
  %cmp.i.not.i = icmp eq i64 %221, -1
  br i1 %cmp.i.not.i, label %hclge_init_tc_config.exit.hclge_init_kdump_kernel_config.exit_crit_edge, label %do.end.i102

hclge_init_tc_config.exit.hclge_init_kdump_kernel_config.exit_crit_edge: ; preds = %hclge_init_tc_config.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_init_kdump_kernel_config.exit

do.end.i102:                                      ; preds = %hclge_init_tc_config.exit
  call void @__sanitizer_cov_trace_pc() #18
  %222 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %hdev, align 8
  %dev.i101 = getelementptr inbounds %struct.pci_dev, ptr %223, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i101, ptr noundef nonnull @.str.253) #20
  %num_req_vfs.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 17
  %224 = ptrtoint ptr %num_req_vfs.i to i32
  call void @__asan_load2_noabort(i32 %224)
  %225 = load i16, ptr %num_req_vfs.i, align 2
  %add.i = add i16 %225, 1
  %num_tqps.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 16
  %226 = ptrtoint ptr %num_tqps.i to i32
  call void @__asan_store2_noabort(i32 %226)
  store i16 %add.i, ptr %num_tqps.i, align 4
  %227 = ptrtoint ptr %num_tx_desc to i32
  call void @__asan_store2_noabort(i32 %227)
  store i16 64, ptr %num_tx_desc, align 2
  %228 = ptrtoint ptr %num_rx_desc to i32
  call void @__asan_store2_noabort(i32 %228)
  store i16 64, ptr %num_rx_desc, align 8
  br label %hclge_init_kdump_kernel_config.exit

hclge_init_kdump_kernel_config.exit:              ; preds = %do.end.i102, %hclge_init_tc_config.exit.hclge_init_kdump_kernel_config.exit_crit_edge
  %affinity_mask = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 84
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %229 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i = add i32 %229, 31
  %230 = lshr i32 %sub.i.i, 3
  %mul.i.i = and i32 %230, 536870908
  %231 = call ptr @memcpy(ptr %affinity_mask, ptr @__cpu_online_mask, i32 %mul.i.i)
  br label %cleanup

cleanup:                                          ; preds = %hclge_init_kdump_kernel_config.exit, %do.end, %hclge_get_cfg.exit
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %hclge_init_kdump_kernel_config.exit ], [ %call.i.i, %hclge_get_cfg.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_init_msi(ptr nocapture noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdev, align 8
  %num_msi = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 38
  %2 = ptrtoint ptr %num_msi to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %num_msi, align 8
  %conv = zext i16 %3 to i32
  %call.i = tail call i32 @pci_alloc_irq_vectors_affinity(ptr noundef %1, i32 noundef 2, i32 noundef %conv, i32 noundef 6, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.255, i32 noundef %call.i) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %num_msi to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %num_msi, align 8
  %conv4 = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %conv4)
  %cmp5 = icmp ult i32 %call.i, %conv4
  br i1 %cmp5, label %do.end10, label %if.end.if.end15_crit_edge

if.end.if.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

do.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hdev, align 8
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev12, ptr noundef nonnull @.str.258, i32 noundef %conv4, i32 noundef %call.i) #20
  br label %if.end15

if.end15:                                         ; preds = %do.end10, %if.end.if.end15_crit_edge
  %conv16 = trunc i32 %call.i to i16
  %8 = ptrtoint ptr %num_msi to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %conv16, ptr %num_msi, align 8
  %num_msi_left = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 39
  %9 = ptrtoint ptr %num_msi_left to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %conv16, ptr %num_msi_left, align 2
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44
  %conv21 = shl nuw i32 %call.i, 1
  %10 = and i32 %conv21, 131070
  %call5.i.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev19, i32 noundef %10, i32 noundef 3520) #16
  %vector_status = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 41
  %11 = ptrtoint ptr %vector_status to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call5.i.i, ptr %vector_status, align 8
  %tobool.not = icmp eq ptr %call5.i.i, null
  br i1 %tobool.not, label %if.then24, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end15
  %12 = ptrtoint ptr %num_msi to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %num_msi, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %cmp2879.not = icmp eq i16 %13, 0
  br i1 %cmp2879.not, label %for.cond.preheader.devm_kcalloc.exit71_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.devm_kcalloc.exit71_crit_edge: ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %devm_kcalloc.exit71

if.then24:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @pci_free_irq_vectors(ptr noundef %1) #16
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.080 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %14 = ptrtoint ptr %vector_status to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vector_status, align 8
  %arrayidx = getelementptr i16, ptr %15, i32 %i.080
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 -1, ptr %arrayidx, align 2
  %inc = add nuw nsw i32 %i.080, 1
  %17 = ptrtoint ptr %num_msi to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %num_msi, align 8
  %conv27 = zext i16 %18 to i32
  %cmp28 = icmp ult i32 %inc, %conv27
  br i1 %cmp28, label %for.body.for.body_crit_edge, label %devm_kcalloc.exit71.loopexit

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

devm_kcalloc.exit71.loopexit:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %phi.cast = zext i16 %18 to i32
  %phi.bo = shl nuw nsw i32 %phi.cast, 2
  br label %devm_kcalloc.exit71

devm_kcalloc.exit71:                              ; preds = %devm_kcalloc.exit71.loopexit, %for.cond.preheader.devm_kcalloc.exit71_crit_edge
  %.lcssa = phi i32 [ %phi.bo, %devm_kcalloc.exit71.loopexit ], [ 0, %for.cond.preheader.devm_kcalloc.exit71_crit_edge ]
  %call5.i.i68 = tail call noalias ptr @devm_kmalloc(ptr noundef %dev19, i32 noundef %.lcssa, i32 noundef 3520) #16
  %vector_irq = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 42
  %19 = ptrtoint ptr %vector_irq to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call5.i.i68, ptr %vector_irq, align 4
  %tobool36.not = icmp eq ptr %call5.i.i68, null
  br i1 %tobool36.not, label %if.then37, label %devm_kcalloc.exit71.cleanup_crit_edge

devm_kcalloc.exit71.cleanup_crit_edge:            ; preds = %devm_kcalloc.exit71
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then37:                                        ; preds = %devm_kcalloc.exit71
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @pci_free_irq_vectors(ptr noundef %1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then37, %devm_kcalloc.exit71.cleanup_crit_edge, %if.then24, %do.end
  %retval.0 = phi i32 [ %call.i, %do.end ], [ -12, %if.then37 ], [ -12, %if.then24 ], [ 0, %devm_kcalloc.exit71.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_misc_irq_init(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %misc_vector.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 3
  %0 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdev, align 8
  %call.i = tail call i32 @pci_irq_vector(ptr noundef %1, i32 noundef 0) #16
  %vector_irq.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 3, i32 1
  %2 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %call.i, ptr %vector_irq.i, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %3 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw.i, align 8
  %add.ptr.i = getelementptr i8, ptr %4, i32 132096
  %5 = ptrtoint ptr %misc_vector.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %add.ptr.i, ptr %misc_vector.i, align 4
  %vector_status.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 41
  %6 = ptrtoint ptr %vector_status.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vector_status.i, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 0, ptr %7, align 2
  %num_msi_left.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 39
  %9 = ptrtoint ptr %num_msi_left.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %num_msi_left.i, align 2
  %sub.i = add i16 %10, -1
  store i16 %sub.i, ptr %num_msi_left.i, align 2
  %num_msi_used.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 40
  %11 = ptrtoint ptr %num_msi_used.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %num_msi_used.i, align 4
  %add.i = add i16 %12, 1
  store i16 %add.i, ptr %num_msi_used.i, align 4
  %name = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 3, i32 2
  %13 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hdev, align 8
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44, i32 3
  %15 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %16, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %entry.pci_name.exit_crit_edge

entry.pci_name.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %pci_name.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44
  %17 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev.i, align 4
  br label %pci_name.exit

pci_name.exit:                                    ; preds = %if.end.i.i, %entry.pci_name.exit_crit_edge
  %retval.0.i.i = phi ptr [ %18, %if.end.i.i ], [ %16, %entry.pci_name.exit_crit_edge ]
  %call1 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %name, i32 noundef 32, ptr noundef nonnull @.str.260, ptr noundef nonnull @.str.38, ptr noundef %retval.0.i.i)
  %19 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %vector_irq.i, align 4
  %call.i19 = tail call i32 @request_threaded_irq(i32 noundef %20, ptr noundef nonnull @hclge_misc_irq_handle, ptr noundef null, i32 noundef 0, ptr noundef %name, ptr noundef %hdev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i19)
  %tobool.not = icmp eq i32 %call.i19, 0
  br i1 %tobool.not, label %pci_name.exit.if.end_crit_edge, label %if.then

pci_name.exit.if.end_crit_edge:                   ; preds = %pci_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %pci_name.exit
  %21 = ptrtoint ptr %vector_status.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vector_status.i, align 8
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %22, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %24)
  %cmp.i = icmp eq i16 %24, -1
  br i1 %cmp.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hdev, align 8
  %dev.i21 = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i21, ptr noundef nonnull @.str.273, i32 noundef 0) #20
  br label %hclge_free_vector.exit

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %22 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 -1, ptr %22, align 2
  %28 = ptrtoint ptr %num_msi_left.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %num_msi_left.i, align 2
  %add.i23 = add i16 %29, 1
  store i16 %add.i23, ptr %num_msi_left.i, align 2
  %30 = ptrtoint ptr %num_msi_used.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %num_msi_used.i, align 4
  %sub.i25 = add i16 %31, -1
  store i16 %sub.i25, ptr %num_msi_used.i, align 4
  br label %hclge_free_vector.exit

hclge_free_vector.exit:                           ; preds = %if.end.i, %do.end.i
  %32 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  %34 = ptrtoint ptr %vector_irq.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %vector_irq.i, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.261, i32 noundef %35) #20
  br label %if.end

if.end:                                           ; preds = %hclge_free_vector.exit, %pci_name.exit.if.end_crit_edge
  ret i32 %call.i19
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_alloc_tqps(ptr nocapture noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tqps = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 16
  %0 = ptrtoint ptr %num_tqps to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_tqps, align 4
  %conv = zext i16 %1 to i32
  %2 = mul nuw nsw i32 %conv, 56
  %3 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %4, i32 0, i32 44
  %call5.i.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev, i32 noundef %2, i32 noundef 3520) #16
  %htqp = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 51
  %5 = ptrtoint ptr %htqp to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call5.i.i, ptr %htqp, align 8
  %tobool.not = icmp eq ptr %call5.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %6 = ptrtoint ptr %num_tqps to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %num_tqps, align 4
  %conv4 = zext i16 %7 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %cmp59.not = icmp eq i16 %7, 0
  br i1 %cmp59.not, label %for.cond.preheader.cleanup_crit_edge, label %for.body.lr.ph

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %8 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hdev, align 8
  %dev7 = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  %rx_buf_len = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 26
  %10 = ptrtoint ptr %rx_buf_len to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %rx_buf_len, align 4
  %conv10 = zext i16 %11 to i32
  %num_tx_desc = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 27
  %12 = ptrtoint ptr %num_tx_desc to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %num_tx_desc, align 2
  %num_rx_desc = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 28
  %14 = ptrtoint ptr %num_rx_desc to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %num_rx_desc, align 8
  %hw21 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %16 = ptrtoint ptr %hw21 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw21, align 8
  %add.ptr25 = getelementptr i8, ptr %17, i32 524544
  %add.ptr = getelementptr i8, ptr %17, i32 524288
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.061 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %tqp.060 = phi ptr [ %call5.i.i, %for.body.lr.ph ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %18 = ptrtoint ptr %tqp.060 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %dev7, ptr %tqp.060, align 8
  %conv9 = trunc i32 %i.061 to i16
  %index = getelementptr inbounds %struct.hclge_comm_tqp, ptr %tqp.060, i32 0, i32 3
  %19 = ptrtoint ptr %index to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %conv9, ptr %index, align 8
  %q = getelementptr inbounds %struct.hclge_comm_tqp, ptr %tqp.060, i32 0, i32 1
  %ae_algo = getelementptr inbounds %struct.hclge_comm_tqp, ptr %tqp.060, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %ae_algo to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @ae_algo, ptr %ae_algo, align 4
  %buf_size = getelementptr inbounds %struct.hclge_comm_tqp, ptr %tqp.060, i32 0, i32 1, i32 4
  %21 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %conv10, ptr %buf_size, align 4
  %tx_desc_num = getelementptr inbounds %struct.hclge_comm_tqp, ptr %tqp.060, i32 0, i32 1, i32 5
  %22 = ptrtoint ptr %tx_desc_num to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %13, ptr %tx_desc_num, align 4
  %rx_desc_num = getelementptr inbounds %struct.hclge_comm_tqp, ptr %tqp.060, i32 0, i32 1, i32 6
  %23 = ptrtoint ptr %rx_desc_num to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %15, ptr %rx_desc_num, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %i.061)
  %cmp14 = icmp ult i32 %i.061, 1024
  %sub = shl i32 %i.061, 9
  %mul26 = add nsw i32 %sub, -524288
  %add.ptr27 = getelementptr i8, ptr %add.ptr25, i32 %mul26
  %mul = shl nuw nsw i32 %i.061, 9
  %add.ptr18 = getelementptr i8, ptr %add.ptr, i32 %mul
  %storemerge = select i1 %cmp14, ptr %add.ptr18, ptr %add.ptr27
  %24 = ptrtoint ptr %q to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %storemerge, ptr %q, align 4
  %incdec.ptr = getelementptr %struct.hclge_comm_tqp, ptr %tqp.060, i32 1
  %inc = add nuw nsw i32 %i.061, 1
  %exitcond.not = icmp eq i32 %inc, %conv4
  br i1 %exitcond.not, label %for.body.cleanup_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ 0, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_alloc_vport(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdev, align 8
  %num_req_vfs = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 17
  %2 = ptrtoint ptr %num_req_vfs to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %num_req_vfs, align 2
  %conv = zext i16 %3 to i32
  %add = add nuw nsw i32 %conv, 1
  %num_tqps = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 16
  %4 = ptrtoint ptr %num_tqps to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %num_tqps, align 4
  %conv2 = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %3, i16 %5)
  %cmp.not = icmp ult i16 %3, %5
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.275, i32 noundef %conv2, i32 noundef %add) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = mul nuw nsw i32 %add, 1136
  %call5.i.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev12, i32 noundef %6, i32 noundef 3520) #16
  %tobool.not = icmp eq ptr %call5.i.i, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end14

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14:                                         ; preds = %if.end
  %conv2.frozen = freeze i32 %conv2
  %add.frozen = freeze i32 %add
  %div = udiv i32 %conv2.frozen, %add.frozen
  %7 = mul i32 %div, %add.frozen
  %rem.decomposed = sub i32 %conv2.frozen, %7
  %vport15 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %8 = ptrtoint ptr %vport15 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call5.i.i, ptr %vport15, align 4
  %conv16 = trunc i32 %add to i16
  %num_alloc_vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 24
  %9 = ptrtoint ptr %num_alloc_vport to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %conv16, ptr %num_alloc_vport, align 2
  %10 = ptrtoint ptr %num_req_vfs to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %num_req_vfs, align 2
  %conv18 = zext i16 %11 to i32
  %num_alloc_vfs = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 50
  %12 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %conv18, ptr %num_alloc_vfs, align 4
  br label %for.body

for.body:                                         ; preds = %if.end40.for.body_crit_edge, %if.end14
  %i.094 = phi i32 [ 0, %if.end14 ], [ %inc, %if.end40.for.body_crit_edge ]
  %vport.092 = phi ptr [ %call5.i.i, %if.end14 ], [ %incdec.ptr, %if.end40.for.body_crit_edge ]
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 12
  %13 = ptrtoint ptr %back to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %hdev, ptr %back, align 4
  %conv21 = trunc i32 %i.094 to i16
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 11
  %14 = ptrtoint ptr %vport_id to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %conv21, ptr %vport_id, align 2
  %vf_info = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 18
  %15 = ptrtoint ptr %vf_info to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %vf_info, align 4
  %mps = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 17
  %16 = ptrtoint ptr %mps to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1526, ptr %mps, align 8
  %port_base_vlan_cfg = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 7
  %17 = ptrtoint ptr %port_base_vlan_cfg to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 0, ptr %port_base_vlan_cfg, align 4
  %rxvlan_cfg = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 9
  %18 = ptrtoint ptr %rxvlan_cfg to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 1, ptr %rxvlan_cfg, align 8
  %req_vlan_fltr_en = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 4
  %19 = ptrtoint ptr %req_vlan_fltr_en to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 1, ptr %req_vlan_fltr_en, align 1
  %vlan_list = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 24
  %20 = ptrtoint ptr %vlan_list to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %vlan_list, ptr %vlan_list, align 4
  %prev.i = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 24, i32 1
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %vlan_list, ptr %prev.i, align 4
  %uc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 22
  %22 = ptrtoint ptr %uc_mac_list to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %uc_mac_list, ptr %uc_mac_list, align 4
  %prev.i87 = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 22, i32 1
  %23 = ptrtoint ptr %prev.i87 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %uc_mac_list, ptr %prev.i87, align 4
  %mc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 23
  %24 = ptrtoint ptr %mc_mac_list to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %mc_mac_list, ptr %mc_mac_list, align 4
  %prev.i88 = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 23, i32 1
  %25 = ptrtoint ptr %prev.i88 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %mc_mac_list, ptr %prev.i88, align 4
  %mac_list_lock = getelementptr inbounds %struct.hclge_vport, ptr %vport.092, i32 0, i32 21
  tail call void @__raw_spin_lock_init(ptr noundef %mac_list_lock, ptr noundef nonnull @.str.277, ptr noundef nonnull @hclge_alloc_vport.__key, i16 noundef signext 3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.094)
  %cmp26 = icmp eq i32 %i.094, 0
  %add11 = select i1 %cmp26, i32 %rem.decomposed, i32 0
  %conv29.conv31.v = add nuw nsw i32 %div, %add11
  %conv29.conv31 = trunc i32 %conv29.conv31.v to i16
  %call32 = tail call fastcc i32 @hclge_vport_setup(ptr noundef %vport.092, i16 noundef zeroext %conv29.conv31)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool34.not = icmp eq i32 %call32, 0
  br i1 %tobool34.not, label %if.end40, label %do.end38

do.end38:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.279, i32 noundef %i.094, i32 noundef %call32) #20
  br label %cleanup

if.end40:                                         ; preds = %for.body
  %incdec.ptr = getelementptr %struct.hclge_vport, ptr %vport.092, i32 1
  %inc = add nuw nsw i32 %i.094, 1
  %exitcond = icmp eq i32 %i.094, %conv
  br i1 %exitcond, label %if.end40.cleanup_crit_edge, label %if.end40.for.body_crit_edge

if.end40.for.body_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

if.end40.cleanup_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %if.end40.cleanup_crit_edge, %do.end38, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call32, %do.end38 ], [ -12, %if.end.cleanup_crit_edge ], [ 0, %if.end40.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_map_tqp(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %num_req_vfs = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 17
  %0 = ptrtoint ptr %num_req_vfs to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_req_vfs, align 2
  %add = add i16 %1, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %add)
  %cmp22.not = icmp eq i16 %add, 0
  br i1 %cmp22.not, label %entry.cleanup6_crit_edge, label %for.body.lr.ph

entry.cleanup6_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup6

for.body.lr.ph:                                   ; preds = %entry
  %vport1 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %2 = ptrtoint ptr %vport1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vport1, align 4
  %4 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %5 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4, i32 1
  %tqp_vf.i.i = getelementptr inbounds %struct.hclge_tqp_map_cmd, ptr %4, i32 0, i32 1
  %tqp_flag.i.i = getelementptr inbounds %struct.hclge_tqp_map_cmd, ptr %4, i32 0, i32 2
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.024 = phi i16 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %vport.023 = phi ptr [ %3, %for.body.lr.ph ], [ %incdec.ptr16, %for.inc.for.body_crit_edge ]
  %6 = ptrtoint ptr %vport.023 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vport.023, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %cmp21.not.i = icmp eq i16 %7, 0
  br i1 %cmp21.not.i, label %for.body.for.inc_crit_edge, label %for.body.lr.ph.i

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.body.lr.ph.i:                                 ; preds = %for.body
  %tqp.i = getelementptr inbounds %struct.hclge_vport, ptr %vport.023, i32 0, i32 13, i32 5, i32 0, i32 9
  %vport_id.i = getelementptr inbounds %struct.hclge_vport, ptr %vport.023, i32 0, i32 11
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %indvars.iv.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i.for.body.i_crit_edge ]
  %8 = ptrtoint ptr %tqp.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tqp.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %9, i32 %indvars.iv.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx.i, align 4
  %12 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vport_id.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %tobool.not.i = icmp eq i16 %13, 0
  %index.i = getelementptr i8, ptr %11, i32 44
  %14 = ptrtoint ptr %index.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %index.i, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %16 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 2561, i1 noundef zeroext false) #16
  %17 = call i16 @llvm.bswap.i16(i16 %15) #16
  %18 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %17, ptr %4, align 4
  %conv.i.i = trunc i16 %13 to i8
  %19 = ptrtoint ptr %tqp_vf.i.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %conv.i.i, ptr %tqp_vf.i.i, align 2
  %spec.select.i.i = select i1 %tobool.not.i, i8 2, i8 3
  %20 = ptrtoint ptr %tqp_flag.i.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %spec.select.i.i, ptr %tqp_flag.i.i, align 1
  %21 = trunc i32 %indvars.iv.i to i16
  %22 = call i16 @llvm.bswap.i16(i16 %21) #16
  %23 = ptrtoint ptr %5 to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %22, ptr %5, align 4
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool5.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool5.not.i.i, label %for.inc.i, label %hclge_map_tqp_to_vport.exit

for.inc.i:                                        ; preds = %for.body.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  %indvars.iv.next.i = add nuw nsw i32 %indvars.iv.i, 1
  %24 = ptrtoint ptr %vport.023 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vport.023, align 8
  %26 = zext i16 %25 to i32
  %cmp.i = icmp ult i32 %indvars.iv.next.i, %26
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.inc_crit_edge

for.inc.i.for.inc_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

hclge_map_tqp_to_vport.exit:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %28, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.285, i32 noundef %call.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %cleanup6

for.inc:                                          ; preds = %for.inc.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %incdec.ptr16 = getelementptr %struct.hclge_vport, ptr %vport.023, i32 1
  %inc = add nuw i16 %i.024, 1
  %cmp = icmp ult i16 %inc, %add
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup6_crit_edge

for.inc.cleanup6_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup6

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

cleanup6:                                         ; preds = %for.inc.cleanup6_crit_edge, %hclge_map_tqp_to_vport.exit, %entry.cleanup6_crit_edge
  %retval.2 = phi i32 [ %call.i.i.i, %hclge_map_tqp_to_vport.exit ], [ 0, %entry.cleanup6_crit_edge ], [ 0, %for.inc.cleanup6_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_mac_mdio_config(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_init_umv_space(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %wanted_umv_size = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 78
  %0 = ptrtoint ptr %wanted_umv_size to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %wanted_umv_size, align 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 1
  %3 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 4100, i1 noundef zeroext false) #16
  %conv.i = zext i16 %1 to i32
  %4 = call i32 @llvm.bswap.i32(i32 %conv.i) #16
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %2, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end, label %hclge_set_umv_space.exit

hclge_set_umv_space.exit:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.289, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %2, align 4
  %10 = call i32 @llvm.bswap.i32(i32 %9) #16
  %conv3.i = trunc i32 %10 to i16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %11 = ptrtoint ptr %wanted_umv_size to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %wanted_umv_size, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %12, i16 %conv3.i)
  %cmp = icmp ugt i16 %12, %conv3.i
  br i1 %cmp, label %do.end, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %.pre = and i32 %10, 65535
  br label %if.end8

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %conv2 = zext i16 %12 to i32
  %conv = and i32 %10, 65535
  %13 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.287, i32 noundef %conv2, i32 noundef %conv) #20
  br label %if.end8

if.end8:                                          ; preds = %do.end, %if.end.if.end8_crit_edge
  %conv10.pre-phi = phi i32 [ %.pre, %if.end.if.end8_crit_edge ], [ %conv, %do.end ]
  %max_umv_size = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 79
  %15 = ptrtoint ptr %max_umv_size to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %conv3.i, ptr %max_umv_size, align 8
  %num_alloc_vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 24
  %16 = ptrtoint ptr %num_alloc_vport to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %num_alloc_vport, align 2
  %conv11 = zext i16 %17 to i32
  %add = add nuw nsw i32 %conv11, 1
  %conv10.pre-phi.frozen = freeze i32 %conv10.pre-phi
  %add.frozen = freeze i32 %add
  %div = udiv i32 %conv10.pre-phi.frozen, %add.frozen
  %conv12 = trunc i32 %div to i16
  %priv_umv_size = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 80
  %18 = ptrtoint ptr %priv_umv_size to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %conv12, ptr %priv_umv_size, align 2
  %19 = mul i32 %div, %add.frozen
  %rem.decomposed = sub i32 %conv10.pre-phi.frozen, %19
  %add20 = add nuw nsw i32 %rem.decomposed, %div
  %conv21 = trunc i32 %add20 to i16
  %share_umv_size = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 81
  %20 = ptrtoint ptr %share_umv_size to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %conv21, ptr %share_umv_size, align 4
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %21 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ae_dev, align 4
  %mc_mac_size = getelementptr inbounds %struct.hnae3_ae_dev, ptr %22, i32 0, i32 5, i32 11
  %23 = ptrtoint ptr %mc_mac_size to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %mc_mac_size, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %tobool22.not = icmp eq i16 %24, 0
  br i1 %tobool22.not, label %if.end8.cleanup_crit_edge, label %if.then23

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then23:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %22, i32 0, i32 7
  call void @_set_bit(i32 noundef 20, ptr noundef %caps) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then23, %if.end8.cleanup_crit_edge, %hclge_set_umv_space.exit
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_mac_init(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i81 = alloca %struct.hclge_desc, align 4
  %desc.i77 = alloca %struct.hclge_desc, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %support_sfp_query = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 31
  %0 = ptrtoint ptr %support_sfp_query to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 1, ptr %support_sfp_query, align 8
  %duplex = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 6
  %1 = ptrtoint ptr %duplex to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 1, ptr %duplex, align 1
  %speed = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %2 = ptrtoint ptr %speed to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %speed, align 4
  %call = tail call fastcc i32 @hclge_cfg_mac_speed_dup_hw(ptr noundef %hdev, i32 noundef %3, i8 noundef zeroext 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %support_autoneg = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 7
  %4 = ptrtoint ptr %support_autoneg to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %support_autoneg, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool11.not = icmp eq i8 %5, 0
  br i1 %tobool11.not, label %if.end.if.end20_crit_edge, label %if.then12

if.end.if.end20_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then12:                                        ; preds = %if.end
  %autoneg = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 5
  %6 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %autoneg, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool15.not = icmp eq i8 %7, 0
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %8 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %9 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 772, i1 noundef zeroext false) #16
  %spec.select.i = select i1 %tobool15.not, i32 0, i32 16777216
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %spec.select.i, ptr %8, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %hclge_set_autoneg_en.exit.thread, label %hclge_set_autoneg_en.exit

hclge_set_autoneg_en.exit.thread:                 ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %if.end20

hclge_set_autoneg_en.exit:                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %12, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.296, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

if.end20:                                         ; preds = %hclge_set_autoneg_en.exit.thread, %if.end.if.end20_crit_edge
  %link = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 16
  %13 = ptrtoint ptr %link to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %link, align 4
  %user_fec_mode = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 14
  %14 = ptrtoint ptr %user_fec_mode to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %user_fec_mode, align 4
  %and = and i32 %15, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool21.not = icmp eq i32 %and, 0
  br i1 %tobool21.not, label %if.end20.if.end28_crit_edge, label %if.then22

if.end20.if.end28_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

if.then22:                                        ; preds = %if.end20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i77) #16
  %16 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i77, i32 0, i32 4
  %17 = call ptr @memset(ptr %desc.i77, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i77, i32 noundef 794, i1 noundef zeroext false) #16
  %and.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then22.if.end.i_crit_edge, label %do.body.i

if.then22.if.end.i_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

do.body.i:                                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %16, align 4
  %20 = or i8 %19, 1
  store i8 %20, ptr %16, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %do.body.i, %if.then22.if.end.i_crit_edge
  %and7.i = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %if.end.i.if.end21.i_crit_edge, label %do.body10.i

if.end.i.if.end21.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21.i

do.body10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %16, align 4
  %23 = and i8 %22, -15
  %24 = or i8 %23, 4
  store i8 %24, ptr %16, align 4
  br label %if.end21.i

if.end21.i:                                       ; preds = %do.body10.i, %if.end.i.if.end21.i_crit_edge
  %and22.i = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i)
  %tobool23.not.i = icmp eq i32 %and22.i, 0
  br i1 %tobool23.not.i, label %if.end21.i.if.end36.i_crit_edge, label %do.body25.i

if.end21.i.if.end36.i_crit_edge:                  ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end36.i

do.body25.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %16, align 4
  %27 = and i8 %26, -15
  %28 = or i8 %27, 2
  store i8 %28, ptr %16, align 4
  br label %if.end36.i

if.end36.i:                                       ; preds = %do.body25.i, %if.end21.i.if.end36.i_crit_edge
  %hw.i78 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i79 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i78, ptr noundef nonnull %desc.i77, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i79)
  %tobool37.not.i = icmp eq i32 %call.i.i79, 0
  br i1 %tobool37.not.i, label %hclge_set_fec_hw.exit.thread, label %hclge_set_fec_hw.exit

hclge_set_fec_hw.exit.thread:                     ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i77) #16
  br label %if.end28

hclge_set_fec_hw.exit:                            ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hdev, align 8
  %dev.i80 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i80, ptr noundef nonnull @.str.298, i32 noundef %call.i.i79) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i77) #16
  br label %cleanup

if.end28:                                         ; preds = %hclge_set_fec_hw.exit.thread, %if.end20.if.end28_crit_edge
  %mps = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 60
  %31 = ptrtoint ptr %mps to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mps, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i81) #16
  %33 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i81, i32 0, i32 4
  %34 = call ptr @memset(ptr %desc.i81, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i81, i32 noundef 776, i1 noundef zeroext false) #16
  %conv.i = trunc i32 %32 to i16
  %35 = call i16 @llvm.bswap.i16(i16 %conv.i) #16
  %36 = ptrtoint ptr %33 to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 %35, ptr %33, align 4
  %min_frm_size.i = getelementptr inbounds %struct.hclge_config_max_frm_size_cmd, ptr %33, i32 0, i32 1
  %37 = ptrtoint ptr %min_frm_size.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 64, ptr %min_frm_size.i, align 2
  %hw.i82 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i83 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i82, ptr noundef nonnull %desc.i81, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i81) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i83)
  %tobool30.not = icmp eq i32 %call.i.i83, 0
  br i1 %tobool30.not, label %if.end32, label %do.end

do.end:                                           ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  %38 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.291, i32 noundef %call.i.i83) #20
  br label %cleanup

if.end32:                                         ; preds = %if.end28
  %call.i = call fastcc i32 @hclge_set_app_loopback(ptr noundef %hdev, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i84 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i84, label %if.end.i85, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i85:                                       ; preds = %if.end32
  %call1.i = call fastcc i32 @hclge_cfg_common_loopback(ptr noundef %hdev, i1 noundef zeroext false, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %hclge_set_default_loopback.exit, label %if.end.i85.cleanup_crit_edge

if.end.i85.cleanup_crit_edge:                     ; preds = %if.end.i85
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

hclge_set_default_loopback.exit:                  ; preds = %if.end.i85
  %call5.i = call fastcc i32 @hclge_cfg_common_loopback(ptr noundef %hdev, i1 noundef zeroext false, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool34.not = icmp eq i32 %call5.i, 0
  br i1 %tobool34.not, label %if.end36, label %hclge_set_default_loopback.exit.cleanup_crit_edge

hclge_set_default_loopback.exit.cleanup_crit_edge: ; preds = %hclge_set_default_loopback.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end36:                                         ; preds = %hclge_set_default_loopback.exit
  %call37 = call i32 @hclge_buffer_alloc(ptr noundef %hdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end36.cleanup_crit_edge, label %do.end42

if.end36.cleanup_crit_edge:                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end42:                                         ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  %40 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hdev, align 8
  %dev44 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev44, ptr noundef nonnull @.str.294, i32 noundef %call37) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end42, %if.end36.cleanup_crit_edge, %hclge_set_default_loopback.exit.cleanup_crit_edge, %if.end.i85.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %do.end, %hclge_set_fec_hw.exit, %hclge_set_autoneg_en.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i83, %do.end ], [ %call, %entry.cleanup_crit_edge ], [ %call.i.i, %hclge_set_autoneg_en.exit ], [ %call.i.i79, %hclge_set_fec_hw.exit ], [ %call5.i, %hclge_set_default_loopback.exit.cleanup_crit_edge ], [ %call37, %do.end42 ], [ 0, %if.end36.cleanup_crit_edge ], [ %call1.i, %if.end.i85.cleanup_crit_edge ], [ %call.i, %if.end32.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_config_tso(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %1 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 3073, i1 noundef zeroext false) #16
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 1, ptr %0, align 4
  %tso_mss_max2 = getelementptr inbounds %struct.hclge_cfg_tso_status_cmd, ptr %0, i32 0, i32 1
  %3 = ptrtoint ptr %tso_mss_max2 to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -15323, ptr %tso_mss_max2, align 2
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_config_gro(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %0 = call ptr @memset(ptr %desc, i32 255, i32 32)
  %1 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %caps, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 3088, i1 noundef zeroext false) #16
  %gro_en = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 77
  %7 = ptrtoint ptr %gro_en to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %gro_en, align 1, !range !1456
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %6, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool5.not = icmp eq i32 %call.i, 0
  br i1 %tobool5.not, label %if.end.cleanup_crit_edge, label %do.end

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.318, i32 noundef %call.i) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call.i, %do.end ], [ 0, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_init_vlan_config(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %0 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vport, align 4
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %1, i32 0, i32 13
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %2 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ae_dev.i, align 4
  %dev_version.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %dev_version.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %dev_version.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %5)
  %cmp.i = icmp ult i32 %5, 33
  br i1 %cmp.i, label %if.then.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %entry
  %num_alloc_vport.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 24
  %6 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %num_alloc_vport.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %cmp121.not.i = icmp eq i16 %7, 0
  br i1 %cmp121.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %hdev, i8 noundef zeroext 0, i8 noundef zeroext 1, i1 noundef zeroext true, i8 noundef zeroext 0) #16
  br label %hclge_init_vlan_filter.exit

for.body.i:                                       ; preds = %if.end7.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.022.i = phi i32 [ %inc.i, %if.end7.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %8 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vport, align 4
  %vport_id.i = getelementptr %struct.hclge_vport, ptr %9, i32 %i.022.i, i32 11
  %10 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %vport_id.i, align 2
  %conv4.i = trunc i16 %11 to i8
  %call5.i = tail call fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %hdev, i8 noundef zeroext 0, i8 noundef zeroext 10, i1 noundef zeroext true, i8 noundef zeroext %conv4.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool.not.i, label %if.end7.i, label %for.body.i.cleanup_crit_edge

for.body.i.cleanup_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7.i:                                        ; preds = %for.body.i
  %cur_vlan_fltr_en.i = getelementptr %struct.hclge_vport, ptr %9, i32 %i.022.i, i32 5
  %12 = ptrtoint ptr %cur_vlan_fltr_en.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %cur_vlan_fltr_en.i, align 2
  %inc.i = add nuw nsw i32 %i.022.i, 1
  %13 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %num_alloc_vport.i, align 2
  %conv.i = zext i16 %14 to i32
  %cmp1.i = icmp ult i32 %inc.i, %conv.i
  br i1 %cmp1.i, label %if.end7.i.for.body.i_crit_edge, label %if.end7.i.for.end.i_crit_edge

if.end7.i.for.end.i_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

if.end7.i.for.body.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.end.i:                                        ; preds = %if.end7.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %call8.i = tail call fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %hdev, i8 noundef zeroext 1, i8 noundef zeroext 5, i1 noundef zeroext true, i8 noundef zeroext 0) #16
  br label %hclge_init_vlan_filter.exit

hclge_init_vlan_filter.exit:                      ; preds = %for.end.i, %if.then.i
  %retval.0.i = phi i32 [ %call.i, %if.then.i ], [ %call8.i, %for.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %if.end, label %hclge_init_vlan_filter.exit.cleanup_crit_edge

hclge_init_vlan_filter.exit.cleanup_crit_edge:    ; preds = %hclge_init_vlan_filter.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %hclge_init_vlan_filter.exit
  %vlan_type_cfg.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 62
  %rx_in_fst_vlan_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 62, i32 2
  %15 = ptrtoint ptr %rx_in_fst_vlan_type.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 -32512, ptr %rx_in_fst_vlan_type.i, align 4
  %rx_in_sec_vlan_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 62, i32 3
  %16 = ptrtoint ptr %rx_in_sec_vlan_type.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 -32512, ptr %rx_in_sec_vlan_type.i, align 2
  %17 = ptrtoint ptr %vlan_type_cfg.i to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 -32512, ptr %vlan_type_cfg.i, align 4
  %rx_ot_sec_vlan_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 62, i32 1
  %18 = ptrtoint ptr %rx_ot_sec_vlan_type.i to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 -32512, ptr %rx_ot_sec_vlan_type.i, align 2
  %tx_ot_vlan_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 62, i32 4
  %19 = ptrtoint ptr %tx_ot_vlan_type.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 -32512, ptr %tx_ot_vlan_type.i, align 4
  %tx_in_vlan_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 62, i32 5
  %20 = ptrtoint ptr %tx_in_vlan_type.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 -32512, ptr %tx_in_vlan_type.i, align 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %21 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %22 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4, i32 1
  %23 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 4098, i1 noundef zeroext false) #16
  %24 = ptrtoint ptr %vlan_type_cfg.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vlan_type_cfg.i, align 4
  %26 = call i16 @llvm.bswap.i16(i16 %25) #16
  %27 = ptrtoint ptr %21 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %26, ptr %21, align 4
  %28 = ptrtoint ptr %rx_ot_sec_vlan_type.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %rx_ot_sec_vlan_type.i, align 2
  %30 = call i16 @llvm.bswap.i16(i16 %29) #16
  %ot_sec_vlan_type.i.i = getelementptr inbounds %struct.hclge_rx_vlan_type_cfg_cmd, ptr %21, i32 0, i32 1
  %31 = ptrtoint ptr %ot_sec_vlan_type.i.i to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %ot_sec_vlan_type.i.i, align 2
  %32 = ptrtoint ptr %rx_in_fst_vlan_type.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %rx_in_fst_vlan_type.i, align 4
  %34 = call i16 @llvm.bswap.i16(i16 %33) #16
  %35 = ptrtoint ptr %22 to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %22, align 4
  %36 = ptrtoint ptr %rx_in_sec_vlan_type.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %rx_in_sec_vlan_type.i, align 2
  %38 = call i16 @llvm.bswap.i16(i16 %37) #16
  %in_sec_vlan_type.i.i = getelementptr inbounds %struct.hclge_rx_vlan_type_cfg_cmd, ptr %21, i32 0, i32 3
  %39 = ptrtoint ptr %in_sec_vlan_type.i.i to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %38, ptr %in_sec_vlan_type.i.i, align 2
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.end.i.i

do.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %40 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.320, i32 noundef %call.i.i.i) #20
  br label %hclge_init_vlan_type.exit.thread

if.end.i.i:                                       ; preds = %if.end
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 4099, i1 noundef zeroext false) #16
  %42 = ptrtoint ptr %tx_ot_vlan_type.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %tx_ot_vlan_type.i, align 4
  %44 = call i16 @llvm.bswap.i16(i16 %43) #16
  %45 = ptrtoint ptr %21 to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %44, ptr %21, align 4
  %46 = ptrtoint ptr %tx_in_vlan_type.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %tx_in_vlan_type.i, align 2
  %48 = call i16 @llvm.bswap.i16(i16 %47) #16
  %49 = ptrtoint ptr %ot_sec_vlan_type.i.i to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %48, ptr %ot_sec_vlan_type.i.i, align 2
  %call.i39.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i39.i.i)
  %tobool10.not.i.i = icmp eq i32 %call.i39.i.i, 0
  br i1 %tobool10.not.i.i, label %if.end4, label %do.end14.i.i

do.end14.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %50 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hdev, align 8
  %dev16.i.i = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev16.i.i, ptr noundef nonnull @.str.323, i32 noundef %call.i39.i.i) #20
  br label %hclge_init_vlan_type.exit.thread

hclge_init_vlan_type.exit.thread:                 ; preds = %do.end14.i.i, %do.end.i.i
  %retval.0.i.i.ph = phi i32 [ %call.i39.i.i, %do.end14.i.i ], [ %call.i.i.i, %do.end.i.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %cleanup

if.end4:                                          ; preds = %if.end.i.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  %num_alloc_vport.i19 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 24
  %52 = ptrtoint ptr %num_alloc_vport.i19 to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %num_alloc_vport.i19, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %53)
  %cmp16.not.i = icmp eq i16 %53, 0
  br i1 %cmp16.not.i, label %if.end4.if.end8_crit_edge, label %if.end4.for.body.i26_crit_edge

if.end4.for.body.i26_crit_edge:                   ; preds = %if.end4
  br label %for.body.i26

if.end4.if.end8_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

for.cond.i:                                       ; preds = %for.body.i26
  %inc.i20 = add nuw nsw i32 %i.017.i, 1
  %54 = ptrtoint ptr %num_alloc_vport.i19 to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %num_alloc_vport.i19, align 2
  %conv.i21 = zext i16 %55 to i32
  %cmp.i22 = icmp ult i32 %inc.i20, %conv.i21
  br i1 %cmp.i22, label %for.cond.i.for.body.i26_crit_edge, label %for.cond.i.if.end8_crit_edge

for.cond.i.if.end8_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

for.cond.i.for.body.i26_crit_edge:                ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i26

for.body.i26:                                     ; preds = %for.cond.i.for.body.i26_crit_edge, %if.end4.for.body.i26_crit_edge
  %i.017.i = phi i32 [ %inc.i20, %for.cond.i.for.body.i26_crit_edge ], [ 0, %if.end4.for.body.i26_crit_edge ]
  %56 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %vport, align 4
  %arrayidx.i = getelementptr %struct.hclge_vport, ptr %57, i32 %i.017.i
  %port_base_vlan_cfg.i = getelementptr %struct.hclge_vport, ptr %57, i32 %i.017.i, i32 7
  %58 = ptrtoint ptr %port_base_vlan_cfg.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %port_base_vlan_cfg.i, align 2
  %vlan_tag.i = getelementptr %struct.hclge_vport, ptr %57, i32 %i.017.i, i32 7, i32 1, i32 2
  %60 = ptrtoint ptr %vlan_tag.i to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %vlan_tag.i, align 2
  %qos.i = getelementptr %struct.hclge_vport, ptr %57, i32 %i.017.i, i32 7, i32 1, i32 1
  %62 = ptrtoint ptr %qos.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %qos.i, align 2
  %conv4.i23 = trunc i16 %63 to i8
  %call.i24 = call fastcc i32 @hclge_vlan_offload_cfg(ptr noundef %arrayidx.i, i16 noundef zeroext %59, i16 noundef zeroext %61, i8 noundef zeroext %conv4.i23) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i24)
  %tobool.not.i25 = icmp eq i32 %call.i24, 0
  br i1 %tobool.not.i25, label %for.cond.i, label %for.body.i26.cleanup_crit_edge

for.body.i26.cleanup_crit_edge:                   ; preds = %for.body.i26
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %for.cond.i.if.end8_crit_edge, %if.end4.if.end8_crit_edge
  %call9 = call i32 @hclge_set_vlan_filter(ptr noundef %nic, i16 zeroext undef, i16 noundef zeroext 0, i1 noundef zeroext false)
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %for.body.i26.cleanup_crit_edge, %hclge_init_vlan_type.exit.thread, %hclge_init_vlan_filter.exit.cleanup_crit_edge, %for.body.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %if.end8 ], [ %retval.0.i, %hclge_init_vlan_filter.exit.cleanup_crit_edge ], [ %retval.0.i.i.ph, %hclge_init_vlan_type.exit.thread ], [ %call.i24, %for.body.i26.cleanup_crit_edge ], [ %call5.i, %for.body.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_tm_schd_init(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_rss_init_cfg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_mgr_tbl(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %1 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 4112, i1 noundef zeroext false) #16
  %2 = call ptr @memcpy(ptr %0, ptr @hclge_mgr_table, i32 24)
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %3 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %4, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.327, i32 noundef %call.i.i) #20
  br label %do.end

if.end.i:                                         ; preds = %entry
  %5 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 2
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %0, align 4
  %8 = lshr i32 %7, 16
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not.i.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.end.i.i

do.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %11 = call i16 @llvm.bswap.i16(i16 %10) #16
  %12 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  %conv.i.i = zext i16 %11 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.329, i32 noundef %conv.i.i) #20
  br label %do.end

if.end.i.i:                                       ; preds = %if.end.i
  %conv.i = trunc i32 %8 to i8
  %14 = zext i8 %conv.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.783)
  switch i8 %conv.i, label %do.end16.i.i [
    i8 0, label %if.end.i.i.hclge_add_mgr_tbl.exit_crit_edge
    i8 1, label %if.end.i.i.hclge_add_mgr_tbl.exit_crit_edge10
    i8 2, label %do.end5.i.i
    i8 3, label %do.end11.i.i
  ]

if.end.i.i.hclge_add_mgr_tbl.exit_crit_edge10:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_add_mgr_tbl.exit

if.end.i.i.hclge_add_mgr_tbl.exit_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_add_mgr_tbl.exit

do.end5.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hdev, align 8
  %dev7.i.i = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev7.i.i, ptr noundef nonnull @.str.332) #20
  br label %do.end

do.end11.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hdev, align 8
  %dev13.i.i = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev13.i.i, ptr noundef nonnull @.str.335) #20
  br label %do.end

do.end16.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv1.i.i = and i32 %8, 255
  %19 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hdev, align 8
  %dev18.i.i = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev18.i.i, ptr noundef nonnull @.str.338, i32 noundef %conv1.i.i) #20
  br label %do.end

hclge_add_mgr_tbl.exit:                           ; preds = %if.end.i.i.hclge_add_mgr_tbl.exit_crit_edge, %if.end.i.i.hclge_add_mgr_tbl.exit_crit_edge10
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

do.end:                                           ; preds = %do.end16.i.i, %do.end11.i.i, %do.end5.i.i, %do.end.i.i, %do.end.i
  %retval.0.i.ph = phi i32 [ -5, %do.end5.i.i ], [ -5, %do.end11.i.i ], [ -5, %do.end16.i.i ], [ -5, %do.end.i.i ], [ %call.i.i, %do.end.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %21 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.325, i32 noundef %retval.0.i.ph) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %hclge_add_mgr_tbl.exit
  %retval.0 = phi i32 [ %retval.0.i.ph, %do.end ], [ 0, %hclge_add_mgr_tbl.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_init_fd_config(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i80 = alloca %struct.hclge_desc, align 4
  %desc.i73 = alloca %struct.hclge_desc, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %0 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %caps, align 4
  %and1.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %4 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 4608, i1 noundef zeroext true) #16
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end4, label %hclge_get_fd_mode.exit

hclge_get_fd_mode.exit:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.342, i32 noundef %call.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %fd_cfg = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66
  %7 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 4
  %10 = ptrtoint ptr %fd_cfg to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %9, ptr %fd_cfg, align 1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %11 = zext i8 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.784)
  switch i8 %9, label %do.end [
    i8 0, label %if.end4.sw.epilog_crit_edge
    i8 2, label %sw.bb8
  ]

if.end4.sw.epilog_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

do.end:                                           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %conv = zext i8 %9 to i32
  %12 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.340, i32 noundef %conv) #20
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb8, %if.end4.sw.epilog_crit_edge
  %.sink = phi i16 [ 200, %sw.bb8 ], [ 400, %if.end4.sw.epilog_crit_edge ]
  %max_key_length10 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 1
  %14 = ptrtoint ptr %max_key_length10 to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %.sink, ptr %max_key_length10, align 2
  %key_cfg15 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4
  %15 = ptrtoint ptr %key_cfg15 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 1, ptr %key_cfg15, align 4
  %inner_sipv6_word_en = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4, i32 0, i32 1
  %16 = ptrtoint ptr %inner_sipv6_word_en to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 3, ptr %inner_sipv6_word_en, align 1
  %inner_dipv6_word_en = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4, i32 0, i32 2
  %17 = ptrtoint ptr %inner_dipv6_word_en to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 3, ptr %inner_dipv6_word_en, align 2
  %outer_sipv6_word_en = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4, i32 0, i32 3
  %18 = ptrtoint ptr %outer_sipv6_word_en to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %outer_sipv6_word_en, align 1
  %outer_dipv6_word_en = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4, i32 0, i32 4
  %19 = ptrtoint ptr %outer_dipv6_word_en to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 0, ptr %outer_dipv6_word_en, align 4
  %tuple_active = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4, i32 0, i32 5
  %20 = ptrtoint ptr %tuple_active to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 466878464, ptr %tuple_active, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %cmp = icmp eq i8 %9, 0
  br i1 %cmp, label %if.then20, label %sw.epilog.if.end29_crit_edge

sw.epilog.if.end29_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then20:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %tuple_active to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 467075072, ptr %tuple_active, align 4
  %22 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ae_dev, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %23, i32 0, i32 6
  %24 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 47, i32 %25)
  %cmp23 = icmp ugt i32 %25, 47
  %spec.store.select = select i1 %cmp23, i32 1073152000, i32 467075072
  %26 = ptrtoint ptr %tuple_active to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %spec.store.select, ptr %tuple_active, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then20, %sw.epilog.if.end29_crit_edge
  %meta_data_active = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4, i32 0, i32 6
  %27 = ptrtoint ptr %meta_data_active to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 68, ptr %meta_data_active, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i73) #16
  %28 = call ptr @memset(ptr %desc.i73, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i73, i32 noundef 4609, i1 noundef zeroext true) #16
  %call.i.i75 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i73, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i75)
  %tobool.not.i76 = icmp eq i32 %call.i.i75, 0
  br i1 %tobool.not.i76, label %if.end43, label %hclge_get_fd_allocation.exit

hclge_get_fd_allocation.exit:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hdev, align 8
  %dev.i77 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i77, ptr noundef nonnull @.str.344, i32 noundef %call.i.i75) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i73) #16
  br label %cleanup

if.end43:                                         ; preds = %if.end29
  %arrayidx39 = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 3, i32 1
  %cnt_num = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 3
  %arrayidx34 = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 2, i32 1
  %rule_num = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 2
  %31 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i73, i32 0, i32 4, i32 2
  %32 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i73, i32 0, i32 4, i32 1
  %33 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i73, i32 0, i32 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %36 = call i32 @llvm.bswap.i32(i32 %35) #16
  %37 = ptrtoint ptr %rule_num to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %rule_num, align 4
  %38 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %32, align 4
  %40 = call i32 @llvm.bswap.i32(i32 %39) #16
  %41 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %arrayidx34, align 4
  %42 = ptrtoint ptr %31 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %31, align 4
  %44 = call i16 @llvm.bswap.i16(i16 %43) #16
  %45 = ptrtoint ptr %cnt_num to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %44, ptr %cnt_num, align 2
  %stage2_counter_num4.i = getelementptr inbounds %struct.hclge_get_fd_allocation_cmd, ptr %33, i32 0, i32 3
  %46 = ptrtoint ptr %stage2_counter_num4.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %stage2_counter_num4.i, align 2
  %48 = call i16 @llvm.bswap.i16(i16 %47) #16
  %49 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %48, ptr %arrayidx39, align 2
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i73) #16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i80) #16
  %50 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i80, i32 0, i32 4
  %51 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i80, i32 0, i32 4, i32 1
  %52 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i80, i32 0, i32 4, i32 2
  %53 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i80, i32 0, i32 4, i32 3
  %54 = call ptr @memset(ptr %desc.i80, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i80, i32 noundef 4610, i1 noundef zeroext false) #16
  %55 = ptrtoint ptr %50 to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 0, ptr %50, align 4
  %56 = ptrtoint ptr %key_cfg15 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %key_cfg15, align 4
  %key_select.i = getelementptr inbounds %struct.hclge_set_fd_key_config_cmd, ptr %50, i32 0, i32 1
  %58 = ptrtoint ptr %key_select.i to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %57, ptr %key_select.i, align 1
  %59 = ptrtoint ptr %inner_sipv6_word_en to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %inner_sipv6_word_en, align 1
  %inner_sipv6_word_en2.i = getelementptr inbounds %struct.hclge_set_fd_key_config_cmd, ptr %50, i32 0, i32 2
  %61 = ptrtoint ptr %inner_sipv6_word_en2.i to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %60, ptr %inner_sipv6_word_en2.i, align 2
  %62 = ptrtoint ptr %inner_dipv6_word_en to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %inner_dipv6_word_en, align 2
  %inner_dipv6_word_en3.i = getelementptr inbounds %struct.hclge_set_fd_key_config_cmd, ptr %50, i32 0, i32 3
  %64 = ptrtoint ptr %inner_dipv6_word_en3.i to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %63, ptr %inner_dipv6_word_en3.i, align 1
  %65 = ptrtoint ptr %outer_sipv6_word_en to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %outer_sipv6_word_en, align 1
  %67 = ptrtoint ptr %51 to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 %66, ptr %51, align 4
  %68 = ptrtoint ptr %outer_dipv6_word_en to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %outer_dipv6_word_en, align 4
  %outer_dipv6_word_en5.i = getelementptr inbounds %struct.hclge_set_fd_key_config_cmd, ptr %50, i32 0, i32 5
  %70 = ptrtoint ptr %outer_dipv6_word_en5.i to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %69, ptr %outer_dipv6_word_en5.i, align 1
  %71 = ptrtoint ptr %tuple_active to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %tuple_active, align 4
  %neg.i = xor i32 %72, -1
  %73 = call i32 @llvm.bswap.i32(i32 %neg.i) #16
  %74 = ptrtoint ptr %52 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %52, align 4
  %75 = ptrtoint ptr %meta_data_active to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %meta_data_active, align 4
  %neg6.i = xor i32 %76, -1
  %77 = call i32 @llvm.bswap.i32(i32 %neg6.i) #16
  %78 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %77, ptr %53, align 4
  %call.i.i82 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i80, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i82)
  %tobool.not.i83 = icmp eq i32 %call.i.i82, 0
  br i1 %tobool.not.i83, label %if.end43.hclge_set_fd_key_config.exit_crit_edge, label %do.end.i85

if.end43.hclge_set_fd_key_config.exit_crit_edge:  ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_fd_key_config.exit

do.end.i85:                                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  %79 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %hdev, align 8
  %dev.i84 = getelementptr inbounds %struct.pci_dev, ptr %80, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i84, ptr noundef nonnull @.str.346, i32 noundef %call.i.i82) #20
  br label %hclge_set_fd_key_config.exit

hclge_set_fd_key_config.exit:                     ; preds = %do.end.i85, %if.end43.hclge_set_fd_key_config.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i80) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_set_fd_key_config.exit, %hclge_get_fd_allocation.exit, %do.end, %hclge_get_fd_mode.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %do.end ], [ %call.i.i82, %hclge_set_fd_key_config.exit ], [ 0, %entry.cleanup_crit_edge ], [ %call.i.i, %hclge_get_fd_mode.exit ], [ %call.i.i75, %hclge_get_fd_allocation.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_ptp_init(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_dcb_ops_set(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_reset_timer(ptr nocapture noundef readonly %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %default_reset_request = getelementptr i8, ptr %t, i32 -328
  %0 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %default_reset_request, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr = getelementptr i8, ptr %t, i32 -1508
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.348) #20
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr, align 8
  tail call void @hclge_reset_event(ptr noundef %5, ptr noundef null)
  br label %cleanup

cleanup:                                          ; preds = %do.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hclge_service_task(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -1556
  tail call fastcc void @hclge_errhand_service_task(ptr noundef %add.ptr)
  tail call fastcc void @hclge_reset_service_task(ptr noundef %add.ptr)
  %state.i = getelementptr i8, ptr %work, i32 -396
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %2 = and i32 %1, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.hclge_ptp_service_task.exit_crit_edge, label %lor.lhs.false.i

entry.hclge_ptp_service_task.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_ptp_service_task.exit

lor.lhs.false.i:                                  ; preds = %entry
  %3 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %state.i, align 4
  %5 = and i32 %4, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not.i = icmp eq i32 %5, 0
  br i1 %tobool3.not.i, label %lor.lhs.false.i.hclge_ptp_service_task.exit_crit_edge, label %lor.lhs.false4.i

lor.lhs.false.i.hclge_ptp_service_task.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_ptp_service_task.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %ptp.i = getelementptr i8, ptr %work, i32 132200
  %6 = ptrtoint ptr %ptp.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ptp.i, align 4
  %tx_start.i = getelementptr inbounds %struct.hclge_ptp, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %tx_start.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %tx_start.i, align 4
  %add.i = add i32 %9, 100
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %10 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %add.i, %10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %do.body5.i, label %lor.lhs.false4.i.hclge_ptp_service_task.exit_crit_edge

lor.lhs.false4.i.hclge_ptp_service_task.exit_crit_edge: ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_ptp_service_task.exit

do.body5.i:                                       ; preds = %lor.lhs.false4.i
  %lock.i = getelementptr inbounds %struct.hclge_ptp, ptr %7, i32 0, i32 7
  %call9.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #16
  %11 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %state.i, align 4
  %13 = and i32 %12, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool14.not.i = icmp eq i32 %13, 0
  br i1 %tobool14.not.i, label %do.body5.i.if.end16.i_crit_edge, label %if.then15.i

do.body5.i.if.end16.i_crit_edge:                  ; preds = %do.body5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

if.then15.i:                                      ; preds = %do.body5.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @hclge_ptp_clean_tx_hwts(ptr noundef %add.ptr) #16
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %do.body5.i.if.end16.i_crit_edge
  %14 = ptrtoint ptr %ptp.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ptp.i, align 4
  %lock18.i = getelementptr inbounds %struct.hclge_ptp, ptr %15, i32 0, i32 7
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock18.i, i32 noundef %call9.i) #16
  br label %hclge_ptp_service_task.exit

hclge_ptp_service_task.exit:                      ; preds = %if.end16.i, %lor.lhs.false4.i.hclge_ptp_service_task.exit_crit_edge, %lor.lhs.false.i.hclge_ptp_service_task.exit_crit_edge, %entry.hclge_ptp_service_task.exit_crit_edge
  tail call fastcc void @hclge_mailbox_service_task(ptr noundef %add.ptr)
  %call.i = tail call i32 @round_jiffies_relative(i32 noundef 100) #16
  %16 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %state.i, align 4
  %18 = and i32 %17, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i9 = icmp eq i32 %18, 0
  br i1 %tobool.not.i9, label %if.end.i, label %hclge_ptp_service_task.exit.hclge_periodic_service_task.exit_crit_edge

hclge_ptp_service_task.exit.hclge_periodic_service_task.exit_crit_edge: ; preds = %hclge_ptp_service_task.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_periodic_service_task.exit

if.end.i:                                         ; preds = %hclge_ptp_service_task.exit
  tail call fastcc void @hclge_update_link_status(ptr noundef %add.ptr) #16
  %num_alloc_vport.i.i = getelementptr i8, ptr %work, i32 -254
  %19 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %num_alloc_vport.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %20)
  %cmp10.not.i.i = icmp eq i16 %20, 0
  br i1 %cmp10.not.i.i, label %if.end.i.hclge_sync_mac_table.exit.i_crit_edge, label %for.body.lr.ph.i.i

if.end.i.hclge_sync_mac_table.exit.i_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_mac_table.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.end.i
  %vport2.i.i = getelementptr i8, ptr %work, i32 112
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %cleanup.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.011.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %cleanup.i.i.for.body.i.i_crit_edge ]
  %21 = ptrtoint ptr %vport2.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vport2.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.hclge_vport, ptr %22, i32 %i.011.i.i
  %back.i.i.i = getelementptr %struct.hclge_vport, ptr %22, i32 %i.011.i.i, i32 12
  %23 = ptrtoint ptr %back.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %back.i.i.i, align 4
  %vport_id.i.i.i = getelementptr %struct.hclge_vport, ptr %22, i32 %i.011.i.i, i32 11
  %25 = ptrtoint ptr %vport_id.i.i.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %vport_id.i.i.i, align 2
  %conv.i.i.i = zext i16 %26 to i32
  %vport_config_block.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %24, i32 0, i32 65
  %div3.i.i.i.i = lshr i32 %conv.i.i.i, 5
  %arrayidx.i.i.i.i = getelementptr i32, ptr %vport_config_block.i.i.i, i32 %div3.i.i.i.i
  %27 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %conv.i.i.i, 31
  %29 = shl nuw i32 1, %and.i.i.i.i
  %30 = and i32 %29, %28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not.i.i.i = icmp eq i32 %30, 0
  br i1 %tobool.not.i.i.i, label %hclge_need_sync_mac_table.exit.i.i, label %for.body.i.i.cleanup.i.i_crit_edge

for.body.i.i.cleanup.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i.i

hclge_need_sync_mac_table.exit.i.i:               ; preds = %for.body.i.i
  %state.i.i.i = getelementptr %struct.hclge_vport, ptr %22, i32 %i.011.i.i, i32 15
  %call1.i.i.i = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %state.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.not.i.i, label %hclge_need_sync_mac_table.exit.i.i.cleanup.i.i_crit_edge, label %if.end.i.i

hclge_need_sync_mac_table.exit.i.i.cleanup.i.i_crit_edge: ; preds = %hclge_need_sync_mac_table.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i.i

if.end.i.i:                                       ; preds = %hclge_need_sync_mac_table.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @hclge_sync_vport_mac_table(ptr noundef %arrayidx.i.i, i32 noundef 0) #16
  tail call fastcc void @hclge_sync_vport_mac_table(ptr noundef %arrayidx.i.i, i32 noundef 1) #16
  br label %cleanup.i.i

cleanup.i.i:                                      ; preds = %if.end.i.i, %hclge_need_sync_mac_table.exit.i.i.cleanup.i.i_crit_edge, %for.body.i.i.cleanup.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %i.011.i.i, 1
  %31 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %num_alloc_vport.i.i, align 2
  %conv.i.i = zext i16 %32 to i32
  %cmp.i.i = icmp ult i32 %inc.i.i, %conv.i.i
  br i1 %cmp.i.i, label %cleanup.i.i.for.body.i.i_crit_edge, label %cleanup.i.i.hclge_sync_mac_table.exit.i_crit_edge

cleanup.i.i.hclge_sync_mac_table.exit.i_crit_edge: ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_mac_table.exit.i

cleanup.i.i.for.body.i.i_crit_edge:               ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

hclge_sync_mac_table.exit.i:                      ; preds = %cleanup.i.i.hclge_sync_mac_table.exit.i_crit_edge, %if.end.i.hclge_sync_mac_table.exit.i_crit_edge
  %vport1.i.i = getelementptr i8, ptr %work, i32 112
  %33 = ptrtoint ptr %vport1.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %vport1.i.i, align 4
  %nic.i.i = getelementptr inbounds %struct.hclge_vport, ptr %34, i32 0, i32 13
  %last_promisc_flags.i.i = getelementptr inbounds %struct.hclge_vport, ptr %34, i32 0, i32 20
  %35 = ptrtoint ptr %last_promisc_flags.i.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %last_promisc_flags.i.i, align 1
  %overflow_promisc_flags.i.i = getelementptr inbounds %struct.hclge_vport, ptr %34, i32 0, i32 19
  %37 = ptrtoint ptr %overflow_promisc_flags.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %overflow_promisc_flags.i.i, align 8
  call void @__sanitizer_cov_trace_cmp1(i8 %36, i8 %38)
  %cmp.not.i.i = icmp eq i8 %36, %38
  br i1 %cmp.not.i.i, label %hclge_sync_mac_table.exit.i.if.end.i51.i_crit_edge, label %if.then.i.i

hclge_sync_mac_table.exit.i.if.end.i51.i_crit_edge: ; preds = %hclge_sync_mac_table.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i51.i

if.then.i.i:                                      ; preds = %hclge_sync_mac_table.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %state.i.i = getelementptr inbounds %struct.hclge_vport, ptr %34, i32 0, i32 15
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state.i.i) #16
  %39 = ptrtoint ptr %overflow_promisc_flags.i.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %overflow_promisc_flags.i.i, align 8
  %41 = ptrtoint ptr %last_promisc_flags.i.i to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %40, ptr %last_promisc_flags.i.i, align 1
  br label %if.end.i51.i

if.end.i51.i:                                     ; preds = %if.then.i.i, %hclge_sync_mac_table.exit.i.if.end.i51.i_crit_edge
  %state6.i.i = getelementptr inbounds %struct.hclge_vport, ptr %34, i32 0, i32 15
  %42 = ptrtoint ptr %state6.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %state6.i.i, align 4
  %44 = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.not.i.i = icmp eq i32 %44, 0
  br i1 %tobool.not.i.i, label %if.end.i51.i.if.end23.i.i_crit_edge, label %if.then7.i.i

if.end.i51.i.if.end23.i.i_crit_edge:              ; preds = %if.end.i51.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

if.then7.i.i:                                     ; preds = %if.end.i51.i
  %netdev_flags.i.i = getelementptr inbounds %struct.hclge_vport, ptr %34, i32 0, i32 13, i32 8
  %45 = ptrtoint ptr %netdev_flags.i.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %netdev_flags.i.i, align 4
  %47 = ptrtoint ptr %last_promisc_flags.i.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %last_promisc_flags.i.i, align 1
  %or107.i.i = or i8 %48, %46
  %conv12.i.i = zext i8 %or107.i.i to i32
  %and.i.i = and i32 %conv12.i.i, 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool13.i.i = icmp ne i32 %and.i.i, 0
  %and15.i.i = and i32 %conv12.i.i, 18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i.i)
  %tobool16.i.i = icmp ne i32 %and15.i.i, 0
  %49 = ptrtoint ptr %nic.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %nic.i.i, align 8
  %tobool.not.i.i.i.i = icmp eq ptr %50, null
  br i1 %tobool.not.i.i.i.i, label %if.then7.i.i.hclge_get_vport.exit.i.i.i_crit_edge, label %if.else.i.i.i.i

if.then7.i.i.hclge_get_vport.exit.i.i.i_crit_edge: ; preds = %if.then7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i.i.i = getelementptr inbounds %struct.hnae3_client, ptr %50, i32 0, i32 2
  %51 = ptrtoint ptr %type.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %type.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %cmp.i.i.i.i = icmp eq i32 %52, 1
  %..i.i.i.i = select i1 %cmp.i.i.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i.i.i

hclge_get_vport.exit.i.i.i:                       ; preds = %if.else.i.i.i.i, %if.then7.i.i.hclge_get_vport.exit.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ -560, %if.then7.i.i.hclge_get_vport.exit.i.i.i_crit_edge ], [ %..i.i.i.i, %if.else.i.i.i.i ]
  %add.ptr9.i.i.i.i = getelementptr i8, ptr %nic.i.i, i32 %.sink.i.i.i.i
  %back.i.i52.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i.i.i, i32 0, i32 12
  %53 = ptrtoint ptr %back.i.i52.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %back.i.i52.i, align 4
  %ae_dev.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %ae_dev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %ae_dev.i.i.i, align 4
  %dev_version.i.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %56, i32 0, i32 6
  %57 = ptrtoint ptr %dev_version.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %dev_version.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %58)
  %cmp.i.i.i = icmp ugt i32 %58, 32
  %59 = and i8 %46, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool.i.i.i = icmp ne i8 %59, 0
  %en_bc_pmc.0.off0.i.i.i = select i1 %cmp.i.i.i, i1 true, i1 %tobool.i.i.i
  %vport_id.i.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i.i.i, i32 0, i32 11
  %60 = ptrtoint ptr %vport_id.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %vport_id.i.i.i.i, align 2
  %conv.i.i.i.i = trunc i16 %61 to i8
  %call.i.i.i.i = tail call fastcc i32 @hclge_cmd_set_promisc_mode(ptr noundef %54, i8 noundef zeroext %conv.i.i.i.i, i1 noundef zeroext %tobool13.i.i, i1 noundef zeroext %tobool16.i.i, i1 noundef zeroext %en_bc_pmc.0.off0.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool18.not.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool18.not.i.i, label %if.then19.i.i, label %hclge_get_vport.exit.i.i.i.if.end23.i.i_crit_edge

hclge_get_vport.exit.i.i.i.if.end23.i.i_crit_edge: ; preds = %hclge_get_vport.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

if.then19.i.i:                                    ; preds = %hclge_get_vport.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %state6.i.i) #16
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state6.i.i) #16
  br label %if.end23.i.i

if.end23.i.i:                                     ; preds = %if.then19.i.i, %hclge_get_vport.exit.i.i.i.if.end23.i.i_crit_edge, %if.end.i51.i.if.end23.i.i_crit_edge
  %62 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %num_alloc_vport.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %63)
  %cmp26112.i.i = icmp ugt i16 %63, 1
  br i1 %cmp26112.i.i, label %if.end23.i.i.for.body.i54.i_crit_edge, label %if.end23.i.i.hclge_sync_promisc_mode.exit.i_crit_edge

if.end23.i.i.hclge_sync_promisc_mode.exit.i_crit_edge: ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_promisc_mode.exit.i

if.end23.i.i.for.body.i54.i_crit_edge:            ; preds = %if.end23.i.i
  br label %for.body.i54.i

for.body.i54.i:                                   ; preds = %for.inc.i.i.for.body.i54.i_crit_edge, %if.end23.i.i.for.body.i54.i_crit_edge
  %indvars.iv.i.i = phi i32 [ %indvars.iv.next.i.i, %for.inc.i.i.for.body.i54.i_crit_edge ], [ 1, %if.end23.i.i.for.body.i54.i_crit_edge ]
  %64 = ptrtoint ptr %vport1.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %vport1.i.i, align 4
  %state30.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 15
  %call31.i.i = tail call i32 @_test_and_clear_bit(i32 noundef 2, ptr noundef %state30.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31.i.i)
  %tobool32.not.i.i = icmp eq i32 %call31.i.i, 0
  br i1 %tobool32.not.i.i, label %for.body.i54.i.for.inc.i.i_crit_edge, label %if.end34.i.i

for.body.i54.i.for.inc.i.i_crit_edge:             ; preds = %for.body.i54.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.end34.i.i:                                     ; preds = %for.body.i54.i
  %trusted.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 18, i32 4
  %66 = ptrtoint ptr %trusted.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %trusted.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool35.not.i.i = icmp eq i32 %67, 0
  br i1 %tobool35.not.i.i, label %if.end34.i.i.if.end56.i.i_crit_edge, label %if.then36.i.i

if.end34.i.i.if.end56.i.i_crit_edge:              ; preds = %if.end34.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end56.i.i

if.then36.i.i:                                    ; preds = %if.end34.i.i
  %request_uc_en.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 18, i32 5
  %68 = ptrtoint ptr %request_uc_en.i.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %request_uc_en.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %cmp39.not.i.i = icmp eq i8 %69, 0
  br i1 %cmp39.not.i.i, label %lor.rhs.i.i, label %if.then36.i.i.lor.end.i.i_crit_edge

if.then36.i.i.lor.end.i.i_crit_edge:              ; preds = %if.then36.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.end.i.i

lor.rhs.i.i:                                      ; preds = %if.then36.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %overflow_promisc_flags41.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 19
  %70 = ptrtoint ptr %overflow_promisc_flags41.i.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %overflow_promisc_flags41.i.i, align 8
  %72 = and i8 %71, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %72)
  %tobool44.i.i = icmp ne i8 %72, 0
  br label %lor.end.i.i

lor.end.i.i:                                      ; preds = %lor.rhs.i.i, %if.then36.i.i.lor.end.i.i_crit_edge
  %73 = phi i1 [ true, %if.then36.i.i.lor.end.i.i_crit_edge ], [ %tobool44.i.i, %lor.rhs.i.i ]
  %request_mc_en.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 18, i32 6
  %74 = ptrtoint ptr %request_mc_en.i.i to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load i8, ptr %request_mc_en.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %75)
  %cmp47.not.i.i = icmp eq i8 %75, 0
  br i1 %cmp47.not.i.i, label %lor.rhs49.i.i, label %lor.end.i.i.if.end56.i.i_crit_edge

lor.end.i.i.if.end56.i.i_crit_edge:               ; preds = %lor.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end56.i.i

lor.rhs49.i.i:                                    ; preds = %lor.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %overflow_promisc_flags50.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 19
  %76 = ptrtoint ptr %overflow_promisc_flags50.i.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %overflow_promisc_flags50.i.i, align 8
  %78 = and i8 %77, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %78)
  %tobool53.i.i = icmp ne i8 %78, 0
  br label %if.end56.i.i

if.end56.i.i:                                     ; preds = %lor.rhs49.i.i, %lor.end.i.i.if.end56.i.i_crit_edge, %if.end34.i.i.if.end56.i.i_crit_edge
  %uc_en.0.off0.i.i = phi i1 [ false, %if.end34.i.i.if.end56.i.i_crit_edge ], [ %73, %lor.rhs49.i.i ], [ %73, %lor.end.i.i.if.end56.i.i_crit_edge ]
  %mc_en.0.off0.i.i = phi i1 [ false, %if.end34.i.i.if.end56.i.i_crit_edge ], [ %tobool53.i.i, %lor.rhs49.i.i ], [ true, %lor.end.i.i.if.end56.i.i_crit_edge ]
  %request_bc_en.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 18, i32 7
  %79 = ptrtoint ptr %request_bc_en.i.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %request_bc_en.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %80)
  %cmp59.i.i = icmp ne i8 %80, 0
  %vport_id.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 11
  %81 = ptrtoint ptr %vport_id.i.i to i32
  call void @__asan_load2_noabort(i32 %81)
  %82 = load i16, ptr %vport_id.i.i, align 2
  %conv62.i.i = trunc i16 %82 to i8
  %call66.i.i = tail call fastcc i32 @hclge_cmd_set_promisc_mode(ptr noundef %add.ptr, i8 noundef zeroext %conv62.i.i, i1 noundef zeroext %uc_en.0.off0.i.i, i1 noundef zeroext %mc_en.0.off0.i.i, i1 noundef zeroext %cmp59.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66.i.i)
  %tobool67.not.i.i = icmp eq i32 %call66.i.i, 0
  br i1 %tobool67.not.i.i, label %if.end70.i.i, label %cleanup.i56.i

if.end70.i.i:                                     ; preds = %if.end56.i.i
  %back.i108.i.i = getelementptr %struct.hclge_vport, ptr %65, i32 %indvars.iv.i.i, i32 12
  %83 = ptrtoint ptr %back.i108.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %back.i108.i.i, align 4
  %ae_dev.i109.i.i = getelementptr inbounds %struct.hclge_dev, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %ae_dev.i109.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %ae_dev.i109.i.i, align 4
  %caps.i.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %86, i32 0, i32 7
  %87 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %caps.i.i.i, align 4
  %89 = and i32 %88, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %89)
  %tobool.not.i.i55.i = icmp eq i32 %89, 0
  br i1 %tobool.not.i.i55.i, label %if.end70.i.i.for.inc.i.i_crit_edge, label %if.then.i110.i.i

if.end70.i.i.for.inc.i.i_crit_edge:               ; preds = %if.end70.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.then.i110.i.i:                                 ; preds = %if.end70.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state30.i.i) #16
  br label %for.inc.i.i

cleanup.i56.i:                                    ; preds = %if.end56.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state30.i.i) #16
  br label %hclge_sync_promisc_mode.exit.i

for.inc.i.i:                                      ; preds = %if.then.i110.i.i, %if.end70.i.i.for.inc.i.i_crit_edge, %for.body.i54.i.for.inc.i.i_crit_edge
  %indvars.iv.next.i.i = add nuw nsw i32 %indvars.iv.i.i, 1
  %90 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %90)
  %91 = load i16, ptr %num_alloc_vport.i.i, align 2
  %92 = zext i16 %91 to i32
  %cmp26.i.i = icmp ult i32 %indvars.iv.next.i.i, %92
  br i1 %cmp26.i.i, label %for.inc.i.i.for.body.i54.i_crit_edge, label %for.inc.i.i.hclge_sync_promisc_mode.exit.i_crit_edge

for.inc.i.i.hclge_sync_promisc_mode.exit.i_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_promisc_mode.exit.i

for.inc.i.i.for.body.i54.i_crit_edge:             ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i54.i

hclge_sync_promisc_mode.exit.i:                   ; preds = %for.inc.i.i.hclge_sync_promisc_mode.exit.i_crit_edge, %cleanup.i56.i, %if.end23.i.i.hclge_sync_promisc_mode.exit.i_crit_edge
  %call.i.i = tail call i32 @_test_and_clear_bit(i32 noundef 16, ptr noundef %state.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i58.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i58.i, label %hclge_sync_promisc_mode.exit.i.if.end.i62.i_crit_edge, label %if.then.i60.i

hclge_sync_promisc_mode.exit.i.if.end.i62.i_crit_edge: ; preds = %hclge_sync_promisc_mode.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i62.i

if.then.i60.i:                                    ; preds = %hclge_sync_promisc_mode.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %fd_active_type.i.i = getelementptr i8, ptr %work, i32 132028
  %93 = ptrtoint ptr %fd_active_type.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %fd_active_type.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %94)
  %cmp.i59.i = icmp eq i32 %94, 1
  tail call fastcc void @hclge_clear_fd_rules_in_list(ptr noundef %add.ptr, i1 noundef zeroext %cmp.i59.i) #16
  br label %if.end.i62.i

if.end.i62.i:                                     ; preds = %if.then.i60.i, %hclge_sync_promisc_mode.exit.i.if.end.i62.i_crit_edge
  %call.i.i.i = tail call i32 @_test_and_clear_bit(i32 noundef 17, ptr noundef %state.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i61.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i61.i, label %if.end.i62.i.hclge_sync_fd_user_def_cfg.exit.i.i_crit_edge, label %if.end.i.i.i

if.end.i62.i.hclge_sync_fd_user_def_cfg.exit.i.i_crit_edge: ; preds = %if.end.i62.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_fd_user_def_cfg.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end.i62.i
  %fd_rule_lock.i.i.i = getelementptr i8, ptr %work, i32 131452
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock.i.i.i) #16
  %user_def_cfg.i.i.i = getelementptr i8, ptr %work, i32 131436
  %call4.i.i.i = tail call fastcc i32 @hclge_fd_set_user_def_cmd(ptr noundef %add.ptr, ptr noundef %user_def_cfg.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %tobool5.not.i.i.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %if.end.i.i.i.if.end8.i.i.i_crit_edge, label %if.then6.i.i.i

if.end.i.i.i.if.end8.i.i.i_crit_edge:             ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8.i.i.i

if.then6.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 17, ptr noundef %state.i) #16
  br label %if.end8.i.i.i

if.end8.i.i.i:                                    ; preds = %if.then6.i.i.i, %if.end.i.i.i.if.end8.i.i.i_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock.i.i.i) #16
  br label %hclge_sync_fd_user_def_cfg.exit.i.i

hclge_sync_fd_user_def_cfg.exit.i.i:              ; preds = %if.end8.i.i.i, %if.end.i62.i.hclge_sync_fd_user_def_cfg.exit.i.i_crit_edge
  %fd_rule_list.i.i = getelementptr i8, ptr %work, i32 131448
  %call.i8.i.i = tail call i32 @_test_and_clear_bit(i32 noundef 15, ptr noundef %state.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i8.i.i)
  %tobool.not.i9.i.i = icmp eq i32 %call.i8.i.i, 0
  br i1 %tobool.not.i9.i.i, label %hclge_sync_fd_user_def_cfg.exit.i.i.hclge_sync_fd_table.exit.i_crit_edge, label %if.end.i11.i.i

hclge_sync_fd_user_def_cfg.exit.i.i.hclge_sync_fd_table.exit.i_crit_edge: ; preds = %hclge_sync_fd_user_def_cfg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_fd_table.exit.i

if.end.i11.i.i:                                   ; preds = %hclge_sync_fd_user_def_cfg.exit.i.i
  %fd_rule_lock.i10.i.i = getelementptr i8, ptr %work, i32 131452
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock.i10.i.i) #16
  %95 = ptrtoint ptr %fd_rule_list.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %fd_rule_list.i.i, align 4
  %tobool3.not57.i.i.i = icmp eq ptr %96, null
  br i1 %tobool3.not57.i.i.i, label %if.end.i11.i.i.if.end31.i.i.i_crit_edge, label %land.rhs.lr.ph.i.i.i

if.end.i11.i.i.if.end31.i.i.i_crit_edge:          ; preds = %if.end.i11.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31.i.i.i

land.rhs.lr.ph.i.i.i:                             ; preds = %if.end.i11.i.i
  %fd_bmap.i.i.i.i = getelementptr i8, ptr %work, i32 131516
  %hclge_fd_rule_num.i.i.i.i = getelementptr i8, ptr %work, i32 131496
  %fd_active_type.i.i.i.i.i = getelementptr i8, ptr %work, i32 132028
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %for.inc.i.i.i.land.rhs.i.i.i_crit_edge, %land.rhs.lr.ph.i.i.i
  %rule.058.i.i.i = phi ptr [ %96, %land.rhs.lr.ph.i.i.i ], [ %98, %for.inc.i.i.i.land.rhs.i.i.i_crit_edge ]
  %97 = ptrtoint ptr %rule.058.i.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %rule.058.i.i.i, align 4
  %state6.i.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.058.i.i.i, i32 0, i32 10
  %99 = ptrtoint ptr %state6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %state6.i.i.i, align 4
  %101 = zext i32 %100 to i64
  call void @__sanitizer_cov_trace_switch(i64 %101, ptr @__sancov_gen_cov_switch_values.785)
  switch i32 %100, label %land.rhs.i.i.i.for.inc.i.i.i_crit_edge [
    i32 0, label %sw.bb.i.i.i
    i32 1, label %sw.bb12.i.i.i
  ]

land.rhs.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

sw.bb.i.i.i:                                      ; preds = %land.rhs.i.i.i
  %call7.i.i.i = tail call fastcc i32 @hclge_fd_config_rule(ptr noundef %add.ptr, ptr noundef nonnull %rule.058.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i.i)
  %tobool8.not.i.i.i = icmp eq i32 %call7.i.i.i, 0
  br i1 %tobool8.not.i.i.i, label %if.end10.i.i.i, label %sw.bb.i.i.i.if.then29.i.i.i_crit_edge

sw.bb.i.i.i.if.then29.i.i.i_crit_edge:            ; preds = %sw.bb.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then29.i.i.i

if.end10.i.i.i:                                   ; preds = %sw.bb.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %102 = ptrtoint ptr %state6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 2, ptr %state6.i.i.i, align 4
  br label %for.inc.i.i.i

sw.bb12.i.i.i:                                    ; preds = %land.rhs.i.i.i
  %location.i.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.058.i.i.i, i32 0, i32 8
  %103 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_load2_noabort(i32 %103)
  %104 = load i16, ptr %location.i.i.i, align 4
  %conv.i.i63.i = zext i16 %104 to i32
  %call13.i.i.i = tail call fastcc i32 @hclge_fd_tcam_config(ptr noundef %add.ptr, i1 noundef zeroext true, i32 noundef %conv.i.i63.i, ptr noundef null, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i.i)
  %tobool14.not.i.i.i = icmp eq i32 %call13.i.i.i, 0
  br i1 %tobool14.not.i.i.i, label %if.end16.i.i.i, label %sw.bb12.i.i.i.if.then29.i.i.i_crit_edge

sw.bb12.i.i.i.if.then29.i.i.i_crit_edge:          ; preds = %sw.bb12.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then29.i.i.i

if.end16.i.i.i:                                   ; preds = %sw.bb12.i.i.i
  %105 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_load2_noabort(i32 %105)
  %106 = load i16, ptr %location.i.i.i, align 4
  %conv.i.i.i64.i = zext i16 %106 to i32
  %div3.i.i.i.i.i = lshr i32 %conv.i.i.i64.i, 5
  %arrayidx.i.i.i.i.i = getelementptr i32, ptr %fd_bmap.i.i.i.i, i32 %div3.i.i.i.i.i
  %107 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %arrayidx.i.i.i.i.i, align 4
  %and.i.i.i.i.i = and i32 %conv.i.i.i64.i, 31
  %109 = shl nuw i32 1, %and.i.i.i.i.i
  %110 = and i32 %109, %108
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %110)
  %tobool.not.i.i.i65.i = icmp eq i32 %110, 0
  br i1 %tobool.not.i.i.i65.i, label %if.end16.i.i.i.hclge_fd_dec_rule_cnt.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

if.end16.i.i.i.hclge_fd_dec_rule_cnt.exit.i.i.i_crit_edge: ; preds = %if.end16.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_dec_rule_cnt.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.end16.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef %conv.i.i.i64.i, ptr noundef %fd_bmap.i.i.i.i) #16
  %111 = ptrtoint ptr %hclge_fd_rule_num.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %hclge_fd_rule_num.i.i.i.i, align 4
  %dec.i.i.i.i = add i16 %112, -1
  store i16 %dec.i.i.i.i, ptr %hclge_fd_rule_num.i.i.i.i, align 4
  br label %hclge_fd_dec_rule_cnt.exit.i.i.i

hclge_fd_dec_rule_cnt.exit.i.i.i:                 ; preds = %if.then.i.i.i.i, %if.end16.i.i.i.hclge_fd_dec_rule_cnt.exit.i.i.i_crit_edge
  %113 = ptrtoint ptr %rule.058.i.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %rule.058.i.i.i, align 4
  %pprev2.i.i.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %rule.058.i.i.i, i32 0, i32 1
  %115 = ptrtoint ptr %pprev2.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %pprev2.i.i.i.i.i.i, align 4
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_store4_noabort(i32 %117)
  store volatile ptr %114, ptr %116, align 4
  %tobool.not.i.i.i.i.i.i = icmp eq ptr %114, null
  br i1 %tobool.not.i.i.i.i.i.i, label %hclge_fd_dec_rule_cnt.exit.i.i.i.hlist_del.exit.i.i.i.i_crit_edge, label %do.body13.i.i.i.i.i.i

hclge_fd_dec_rule_cnt.exit.i.i.i.hlist_del.exit.i.i.i.i_crit_edge: ; preds = %hclge_fd_dec_rule_cnt.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hlist_del.exit.i.i.i.i

do.body13.i.i.i.i.i.i:                            ; preds = %hclge_fd_dec_rule_cnt.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %pprev14.i.i.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %114, i32 0, i32 1
  %118 = ptrtoint ptr %pprev14.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store volatile ptr %116, ptr %pprev14.i.i.i.i.i.i, align 4
  br label %hlist_del.exit.i.i.i.i

hlist_del.exit.i.i.i.i:                           ; preds = %do.body13.i.i.i.i.i.i, %hclge_fd_dec_rule_cnt.exit.i.i.i.hlist_del.exit.i.i.i.i_crit_edge
  %119 = ptrtoint ptr %rule.058.i.i.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr inttoptr (i32 256 to ptr), ptr %rule.058.i.i.i, align 4
  %120 = ptrtoint ptr %pprev2.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i.i.i, align 4
  tail call void @kfree(ptr noundef nonnull %rule.058.i.i.i) #16
  %121 = ptrtoint ptr %fd_rule_list.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile ptr, ptr %fd_rule_list.i.i, align 4
  %tobool.not.i.not.i.i.i.i.i = icmp eq ptr %122, null
  br i1 %tobool.not.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %hlist_del.exit.i.i.i.i.for.inc.i.i.i_crit_edge

hlist_del.exit.i.i.i.i.for.inc.i.i.i_crit_edge:   ; preds = %hlist_del.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

if.then.i.i.i.i.i:                                ; preds = %hlist_del.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %123 = ptrtoint ptr %fd_active_type.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store i32 0, ptr %fd_active_type.i.i.i.i.i, align 8
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %if.then.i.i.i.i.i, %hlist_del.exit.i.i.i.i.for.inc.i.i.i_crit_edge, %if.end10.i.i.i, %land.rhs.i.i.i.for.inc.i.i.i_crit_edge
  %tobool3.not.i.i.i = icmp eq ptr %98, null
  br i1 %tobool3.not.i.i.i, label %for.inc.i.i.i.if.end31.i.i.i_crit_edge, label %for.inc.i.i.i.land.rhs.i.i.i_crit_edge

for.inc.i.i.i.land.rhs.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i.i

for.inc.i.i.i.if.end31.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31.i.i.i

if.then29.i.i.i:                                  ; preds = %sw.bb12.i.i.i.if.then29.i.i.i_crit_edge, %sw.bb.i.i.i.if.then29.i.i.i_crit_edge
  tail call void @_set_bit(i32 noundef 15, ptr noundef %state.i) #16
  br label %if.end31.i.i.i

if.end31.i.i.i:                                   ; preds = %if.then29.i.i.i, %for.inc.i.i.i.if.end31.i.i.i_crit_edge, %if.end.i11.i.i.if.end31.i.i.i_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock.i10.i.i) #16
  br label %hclge_sync_fd_table.exit.i

hclge_sync_fd_table.exit.i:                       ; preds = %if.end31.i.i.i, %hclge_sync_fd_user_def_cfg.exit.i.i.hclge_sync_fd_table.exit.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %124 = load volatile i32, ptr @jiffies, align 128
  %last_serv_processed.i = getelementptr i8, ptr %work, i32 131504
  %125 = ptrtoint ptr %last_serv_processed.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %last_serv_processed.i, align 4
  %add.neg.i = add i32 %124, -100
  %sub.i10 = sub i32 %add.neg.i, %126
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i10)
  %cmp.i11 = icmp slt i32 %sub.i10, 0
  br i1 %cmp.i11, label %if.then2.i, label %hclge_sync_fd_table.exit.i.if.end11.i_crit_edge

hclge_sync_fd_table.exit.i.if.end11.i_crit_edge:  ; preds = %hclge_sync_fd_table.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11.i

if.then2.i:                                       ; preds = %hclge_sync_fd_table.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %127 = load volatile i32, ptr @jiffies, align 128
  %sub4.i = sub i32 %127, %126
  %call5.i = tail call i32 @round_jiffies_relative(i32 noundef 100) #16
  call void @__sanitizer_cov_trace_cmp4(i32 %sub4.i, i32 %call5.i)
  %cmp6.i = icmp ult i32 %sub4.i, %call5.i
  br i1 %cmp6.i, label %if.then7.i, label %if.then2.i.if.end11.i_crit_edge

if.then2.i.if.end11.i_crit_edge:                  ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11.i

if.then7.i:                                       ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #18
  %call8.i = tail call i32 @round_jiffies_relative(i32 noundef 100) #16
  %sub9.i = sub i32 %call8.i, %sub4.i
  br label %out.i

if.end11.i:                                       ; preds = %if.then2.i.if.end11.i_crit_edge, %hclge_sync_fd_table.exit.i.if.end11.i_crit_edge
  %delta.0.i = phi i32 [ %sub4.i, %if.then2.i.if.end11.i_crit_edge ], [ %call.i, %hclge_sync_fd_table.exit.i.if.end11.i_crit_edge ]
  %serv_processed_cnt.i = getelementptr i8, ptr %work, i32 131500
  %128 = ptrtoint ptr %serv_processed_cnt.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %serv_processed_cnt.i, align 8
  %inc.i = add i32 %129, 1
  store i32 %inc.i, ptr %serv_processed_cnt.i, align 8
  %130 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %130)
  %131 = load i16, ptr %num_alloc_vport.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %131)
  %cmp15.i.i = icmp ugt i16 %131, 1
  br i1 %cmp15.i.i, label %if.end11.i.for.body.i69.i_crit_edge, label %if.end11.i.hclge_update_vport_alive.exit.i_crit_edge

if.end11.i.hclge_update_vport_alive.exit.i_crit_edge: ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_vport_alive.exit.i

if.end11.i.for.body.i69.i_crit_edge:              ; preds = %if.end11.i
  br label %for.body.i69.i

for.body.i69.i:                                   ; preds = %if.end7.i.i.for.body.i69.i_crit_edge, %if.end11.i.for.body.i69.i_crit_edge
  %i.016.i.i = phi i32 [ %inc.i74.i, %if.end7.i.i.for.body.i69.i_crit_edge ], [ 1, %if.end11.i.for.body.i69.i_crit_edge ]
  %132 = ptrtoint ptr %vport1.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %vport1.i.i, align 4
  %last_active_jiffies.i.i = getelementptr %struct.hclge_vport, ptr %133, i32 %i.016.i.i, i32 16
  %134 = ptrtoint ptr %last_active_jiffies.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %last_active_jiffies.i.i, align 4
  %add.i.i = add i32 %135, 800
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %136 = load volatile i32, ptr @jiffies, align 128
  %sub.i.i = sub i32 %add.i.i, %136
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp3.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp3.i.i, label %if.then.i71.i, label %for.body.i69.i.if.end.i73.i_crit_edge

for.body.i69.i.if.end.i73.i_crit_edge:            ; preds = %for.body.i69.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i73.i

if.then.i71.i:                                    ; preds = %for.body.i69.i
  call void @__sanitizer_cov_trace_pc() #18
  %state.i70.i = getelementptr %struct.hclge_vport, ptr %133, i32 %i.016.i.i, i32 15
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i70.i) #16
  br label %if.end.i73.i

if.end.i73.i:                                     ; preds = %if.then.i71.i, %for.body.i69.i.if.end.i73.i_crit_edge
  %state5.i.i = getelementptr %struct.hclge_vport, ptr %133, i32 %i.016.i.i, i32 15
  %137 = ptrtoint ptr %state5.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %state5.i.i, align 4
  %and1.i.i.i = and i32 %138, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i72.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i72.i, label %if.then6.i.i, label %if.end.i73.i.if.end7.i.i_crit_edge

if.end.i73.i.if.end7.i.i_crit_edge:               ; preds = %if.end.i73.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i.i

if.then6.i.i:                                     ; preds = %if.end.i73.i
  call void @__sanitizer_cov_trace_pc() #18
  %mps.i.i = getelementptr %struct.hclge_vport, ptr %133, i32 %i.016.i.i, i32 17
  %139 = ptrtoint ptr %mps.i.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 1526, ptr %mps.i.i, align 8
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.then6.i.i, %if.end.i73.i.if.end7.i.i_crit_edge
  %inc.i74.i = add nuw nsw i32 %i.016.i.i, 1
  %140 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %140)
  %141 = load i16, ptr %num_alloc_vport.i.i, align 2
  %conv.i75.i = zext i16 %141 to i32
  %cmp.i76.i = icmp ult i32 %inc.i74.i, %conv.i75.i
  br i1 %cmp.i76.i, label %if.end7.i.i.for.body.i69.i_crit_edge, label %if.end7.i.i.hclge_update_vport_alive.exit.i_crit_edge

if.end7.i.i.hclge_update_vport_alive.exit.i_crit_edge: ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_vport_alive.exit.i

if.end7.i.i.for.body.i69.i_crit_edge:             ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i69.i

hclge_update_vport_alive.exit.i:                  ; preds = %if.end7.i.i.hclge_update_vport_alive.exit.i_crit_edge, %if.end11.i.hclge_update_vport_alive.exit.i_crit_edge
  %142 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load volatile i32, ptr %state.i, align 4
  %144 = and i32 %143, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %144)
  %tobool14.not.i12 = icmp eq i32 %144, 0
  br i1 %tobool14.not.i12, label %if.end17.i, label %if.then15.i13

if.then15.i13:                                    ; preds = %hclge_update_vport_alive.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %145 = load volatile i32, ptr @jiffies, align 128
  %146 = ptrtoint ptr %last_serv_processed.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 %145, ptr %last_serv_processed.i, align 4
  br label %out.i

if.end17.i:                                       ; preds = %hclge_update_vport_alive.exit.i
  %147 = ptrtoint ptr %serv_processed_cnt.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %serv_processed_cnt.i, align 8
  %rem.i = urem i32 %148, 300
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %tobool19.not.i = icmp eq i32 %rem.i, 0
  br i1 %tobool19.not.i, label %if.then20.i, label %if.end17.i.if.end21.i_crit_edge

if.end17.i.if.end21.i_crit_edge:                  ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21.i

if.then20.i:                                      ; preds = %if.end17.i
  %149 = ptrtoint ptr %vport1.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %vport1.i.i, align 4
  %nic.i77.i = getelementptr inbounds %struct.hclge_vport, ptr %150, i32 0, i32 13
  %151 = ptrtoint ptr %nic.i77.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %nic.i77.i, align 8
  %tobool.not.i78.i = icmp eq ptr %152, null
  br i1 %tobool.not.i78.i, label %if.then20.i.if.end4.i.i_crit_edge, label %if.then.i80.i

if.then20.i.if.end4.i.i_crit_edge:                ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i.i

if.then.i80.i:                                    ; preds = %if.then20.i
  %hw.i.i = getelementptr i8, ptr %work, i32 -1548
  %call.i79.i = tail call i32 @hclge_comm_tqps_update_stats(ptr noundef %nic.i77.i, ptr noundef %hw.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i79.i)
  %tobool2.not.i.i = icmp eq i32 %call.i79.i, 0
  br i1 %tobool2.not.i.i, label %if.then.i80.i.if.end4.i.i_crit_edge, label %do.end.i.i

if.then.i80.i.if.end4.i.i_crit_edge:              ; preds = %if.then.i80.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i.i

do.end.i.i:                                       ; preds = %if.then.i80.i
  call void @__sanitizer_cov_trace_pc() #18
  %153 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %add.ptr, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %154, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.480, i32 noundef %call.i79.i) #20
  br label %if.end4.i.i

if.end4.i.i:                                      ; preds = %do.end.i.i, %if.then.i80.i.if.end4.i.i_crit_edge, %if.then20.i.if.end4.i.i_crit_edge
  %call5.i.i = tail call i32 @hclge_mac_update_stats(ptr noundef %add.ptr) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.end4.i.i.if.end21.i_crit_edge, label %do.end10.i.i

if.end4.i.i.if.end21.i_crit_edge:                 ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21.i

do.end10.i.i:                                     ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %155 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %add.ptr, align 8
  %dev12.i.i = getelementptr inbounds %struct.pci_dev, ptr %156, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12.i.i, ptr noundef nonnull @.str.483, i32 noundef %call5.i.i) #20
  br label %if.end21.i

if.end21.i:                                       ; preds = %do.end10.i.i, %if.end4.i.i.if.end21.i_crit_edge, %if.end17.i.if.end21.i_crit_edge
  tail call fastcc void @hclge_update_port_info(ptr noundef %add.ptr) #16
  %157 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %157)
  %158 = load i16, ptr %num_alloc_vport.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %158)
  %cmp76.not.i.i = icmp eq i16 %158, 0
  br i1 %cmp76.not.i.i, label %if.end21.i.hclge_sync_vlan_filter.exit.i_crit_edge, label %if.end21.i.for.body.i85.i_crit_edge

if.end21.i.for.body.i85.i_crit_edge:              ; preds = %if.end21.i
  br label %for.body.i85.i

if.end21.i.hclge_sync_vlan_filter.exit.i_crit_edge: ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_vlan_filter.exit.i

for.body.i85.i:                                   ; preds = %for.inc.i98.i.for.body.i85.i_crit_edge, %if.end21.i.for.body.i85.i_crit_edge
  %sync_cnt.080.i.i = phi i32 [ %sync_cnt.249.i.i, %for.inc.i98.i.for.body.i85.i_crit_edge ], [ 0, %if.end21.i.for.body.i85.i_crit_edge ]
  %i.077.i.i = phi i32 [ %inc21.i.i, %for.inc.i98.i.for.body.i85.i_crit_edge ], [ 0, %if.end21.i.for.body.i85.i_crit_edge ]
  %159 = ptrtoint ptr %vport1.i.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %vport1.i.i, align 4
  %vlan_del_fail_bmap.i.i = getelementptr %struct.hclge_vport, ptr %160, i32 %i.077.i.i, i32 6
  %call.i84.i = tail call i32 @_find_first_bit_be(ptr noundef %vlan_del_fail_bmap.i.i, i32 noundef 4096) #16
  %conv469.i.i = and i32 %call.i84.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %conv469.i.i)
  %cmp5.not70.i.i = icmp eq i32 %conv469.i.i, 4096
  br i1 %cmp5.not70.i.i, label %for.body.i85.i.for.inc.i98.i_crit_edge, label %while.body.lr.ph.i.i

for.body.i85.i.for.inc.i98.i_crit_edge:           ; preds = %for.body.i85.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i98.i

while.body.lr.ph.i.i:                             ; preds = %for.body.i85.i
  %vport_id.i86.i = getelementptr %struct.hclge_vport, ptr %160, i32 %i.077.i.i, i32 11
  %vlan_list.i.i.i = getelementptr %struct.hclge_vport, ptr %160, i32 %i.077.i.i, i32 24
  %back.i.i87.i = getelementptr %struct.hclge_vport, ptr %160, i32 %i.077.i.i, i32 12
  %state.i.i88.i = getelementptr %struct.hclge_vport, ptr %160, i32 %i.077.i.i, i32 15
  %161 = add i32 %sync_cnt.080.i.i, 1
  %smax.i.i = tail call i32 @llvm.smax.i32(i32 %161, i32 60) #16
  %162 = add nsw i32 %smax.i.i, -1
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.end16.i.i.while.body.i.i_crit_edge, %while.body.lr.ph.i.i
  %conv473.i.i = phi i32 [ %conv469.i.i, %while.body.lr.ph.i.i ], [ %conv4.i.i, %if.end16.i.i.while.body.i.i_crit_edge ]
  %vlan_id.072.in.i.i = phi i32 [ %call.i84.i, %while.body.lr.ph.i.i ], [ %call19.i.i, %if.end16.i.i.while.body.i.i_crit_edge ]
  %sync_cnt.171.i.i = phi i32 [ %sync_cnt.080.i.i, %while.body.lr.ph.i.i ], [ %inc.i95.i, %if.end16.i.i.while.body.i.i_crit_edge ]
  %vlan_id.072.i.i = trunc i32 %vlan_id.072.in.i.i to i16
  %163 = ptrtoint ptr %vport_id.i86.i to i32
  call void @__asan_load2_noabort(i32 %163)
  %164 = load i16, ptr %vport_id.i86.i, align 2
  %call7.i.i = tail call fastcc i32 @hclge_set_vlan_filter_hw(ptr noundef %add.ptr, i16 noundef zeroext %164, i16 noundef zeroext %vlan_id.072.i.i, i1 noundef zeroext true) #16
  %165 = zext i32 %call7.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %165, ptr @__sancov_gen_cov_switch_values.786)
  switch i32 %call7.i.i, label %while.body.i.i.hclge_sync_vlan_filter.exit.i_crit_edge [
    i32 0, label %while.body.i.i.if.end.i89.i_crit_edge
    i32 -22, label %while.body.i.i.if.end.i89.i_crit_edge59
  ]

while.body.i.i.if.end.i89.i_crit_edge59:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i89.i

while.body.i.i.if.end.i89.i_crit_edge:            ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i89.i

while.body.i.i.hclge_sync_vlan_filter.exit.i_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_vlan_filter.exit.i

if.end.i89.i:                                     ; preds = %while.body.i.i.if.end.i89.i_crit_edge, %while.body.i.i.if.end.i89.i_crit_edge59
  tail call void @_clear_bit(i32 noundef %conv473.i.i, ptr noundef %vlan_del_fail_bmap.i.i) #16
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.end.i89.i
  %vlan.0.in.i.i.i = phi ptr [ %vlan_list.i.i.i, %if.end.i89.i ], [ %vlan.0.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %166 = ptrtoint ptr %vlan.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %vlan.0.i.i.i = load ptr, ptr %vlan.0.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %vlan.0.i.i.i, %vlan_list.i.i.i
  br i1 %cmp.not.i.i.i, label %for.cond.i.i.i.hclge_rm_vport_vlan_table.exit.i.i_crit_edge, label %for.body.i.i.i

for.cond.i.i.i.hclge_rm_vport_vlan_table.exit.i.i_crit_edge: ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_rm_vport_vlan_table.exit.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %vlan_id8.i.i.i = getelementptr inbounds %struct.hclge_vport_vlan_cfg, ptr %vlan.0.i.i.i, i32 0, i32 2
  %167 = ptrtoint ptr %vlan_id8.i.i.i to i32
  call void @__asan_load2_noabort(i32 %167)
  %168 = load i16, ptr %vlan_id8.i.i.i, align 4
  %cmp10.i.i.i = icmp eq i16 %168, %vlan_id.072.i.i
  br i1 %cmp10.i.i.i, label %if.end.i.i90.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i.i

if.end.i.i90.i:                                   ; preds = %for.body.i.i.i
  %call.i.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %vlan.0.i.i.i) #16
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.end.i.i90.i.list_del.exit.i.i.i_crit_edge

if.end.i.i90.i.list_del.exit.i.i.i_crit_edge:     ; preds = %if.end.i.i90.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.end.i.i90.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %vlan.0.i.i.i, i32 0, i32 1
  %169 = ptrtoint ptr %prev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %prev.i.i.i.i.i, align 4
  %171 = ptrtoint ptr %vlan.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %vlan.0.i.i.i, align 4
  %prev1.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %172, i32 0, i32 1
  %173 = ptrtoint ptr %prev1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store ptr %170, ptr %prev1.i.i.i.i.i.i, align 4
  %174 = ptrtoint ptr %170 to i32
  call void @__asan_store4_noabort(i32 %174)
  store volatile ptr %172, ptr %170, align 4
  br label %list_del.exit.i.i.i

list_del.exit.i.i.i:                              ; preds = %if.end.i.i.i.i.i, %if.end.i.i90.i.list_del.exit.i.i.i_crit_edge
  %175 = ptrtoint ptr %vlan.0.i.i.i to i32
  call void @__asan_store4_noabort(i32 %175)
  store ptr inttoptr (i32 256 to ptr), ptr %vlan.0.i.i.i, align 4
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %vlan.0.i.i.i, i32 0, i32 1
  %176 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %176)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i.i, align 4
  tail call void @kfree(ptr noundef %vlan.0.i.i.i) #16
  br label %hclge_rm_vport_vlan_table.exit.i.i

hclge_rm_vport_vlan_table.exit.i.i:               ; preds = %list_del.exit.i.i.i, %for.cond.i.i.i.hclge_rm_vport_vlan_table.exit.i.i_crit_edge
  %177 = ptrtoint ptr %back.i.i87.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %back.i.i87.i, align 4
  %ae_dev.i.i91.i = getelementptr inbounds %struct.hclge_dev, ptr %178, i32 0, i32 1
  %179 = ptrtoint ptr %ae_dev.i.i91.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %ae_dev.i.i91.i, align 4
  %caps.i.i92.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %180, i32 0, i32 7
  %181 = ptrtoint ptr %caps.i.i92.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load volatile i32, ptr %caps.i.i92.i, align 4
  %183 = and i32 %182, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %183)
  %tobool.not.i.i93.i = icmp eq i32 %183, 0
  br i1 %tobool.not.i.i93.i, label %hclge_rm_vport_vlan_table.exit.i.i.hclge_set_vport_vlan_fltr_change.exit.i.i_crit_edge, label %if.then.i.i94.i

hclge_rm_vport_vlan_table.exit.i.i.hclge_set_vport_vlan_fltr_change.exit.i.i_crit_edge: ; preds = %hclge_rm_vport_vlan_table.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_vport_vlan_fltr_change.exit.i.i

if.then.i.i94.i:                                  ; preds = %hclge_rm_vport_vlan_table.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state.i.i88.i) #16
  br label %hclge_set_vport_vlan_fltr_change.exit.i.i

hclge_set_vport_vlan_fltr_change.exit.i.i:        ; preds = %if.then.i.i94.i, %hclge_rm_vport_vlan_table.exit.i.i.hclge_set_vport_vlan_fltr_change.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %sync_cnt.171.i.i, i32 %162)
  %exitcond.i.i = icmp eq i32 %sync_cnt.171.i.i, %162
  br i1 %exitcond.i.i, label %hclge_set_vport_vlan_fltr_change.exit.i.i.hclge_sync_vlan_filter.exit.i_crit_edge, label %if.end16.i.i

hclge_set_vport_vlan_fltr_change.exit.i.i.hclge_sync_vlan_filter.exit.i_crit_edge: ; preds = %hclge_set_vport_vlan_fltr_change.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_vlan_filter.exit.i

if.end16.i.i:                                     ; preds = %hclge_set_vport_vlan_fltr_change.exit.i.i
  %inc.i95.i = add i32 %sync_cnt.171.i.i, 1
  %call19.i.i = tail call i32 @_find_first_bit_be(ptr noundef %vlan_del_fail_bmap.i.i, i32 noundef 4096) #16
  %conv4.i.i = and i32 %call19.i.i, 65535
  %cmp5.not.i.i = icmp eq i32 %conv4.i.i, 4096
  br i1 %cmp5.not.i.i, label %if.end16.i.i.for.inc.i98.i_crit_edge, label %if.end16.i.i.while.body.i.i_crit_edge

if.end16.i.i.while.body.i.i_crit_edge:            ; preds = %if.end16.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i.i

if.end16.i.i.for.inc.i98.i_crit_edge:             ; preds = %if.end16.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i98.i

for.inc.i98.i:                                    ; preds = %if.end16.i.i.for.inc.i98.i_crit_edge, %for.body.i85.i.for.inc.i98.i_crit_edge
  %sync_cnt.249.i.i = phi i32 [ %sync_cnt.080.i.i, %for.body.i85.i.for.inc.i98.i_crit_edge ], [ %inc.i95.i, %if.end16.i.i.for.inc.i98.i_crit_edge ]
  %inc21.i.i = add nuw nsw i32 %i.077.i.i, 1
  %184 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %184)
  %185 = load i16, ptr %num_alloc_vport.i.i, align 2
  %conv.i96.i = zext i16 %185 to i32
  %cmp.i97.i = icmp ult i32 %inc21.i.i, %conv.i96.i
  br i1 %cmp.i97.i, label %for.inc.i98.i.for.body.i85.i_crit_edge, label %for.end.i.i

for.inc.i98.i.for.body.i85.i_crit_edge:           ; preds = %for.inc.i98.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i85.i

for.end.i.i:                                      ; preds = %for.inc.i98.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %185)
  %phi.cmp.i.i = icmp eq i16 %185, 0
  br i1 %phi.cmp.i.i, label %for.end.i.i.hclge_sync_vlan_filter.exit.i_crit_edge, label %for.end.i.i.for.body.i46.i.i_crit_edge

for.end.i.i.for.body.i46.i.i_crit_edge:           ; preds = %for.end.i.i
  br label %for.body.i46.i.i

for.end.i.i.hclge_sync_vlan_filter.exit.i_crit_edge: ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_vlan_filter.exit.i

for.body.i46.i.i:                                 ; preds = %for.inc.i.i102.i.for.body.i46.i.i_crit_edge, %for.end.i.i.for.body.i46.i.i_crit_edge
  %indvars.iv.i.i.i = phi i32 [ %indvars.iv.next.i.i.i, %for.inc.i.i102.i.for.body.i46.i.i_crit_edge ], [ 0, %for.end.i.i.for.body.i46.i.i_crit_edge ]
  %186 = ptrtoint ptr %vport1.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %vport1.i.i, align 4
  %state.i44.i.i = getelementptr %struct.hclge_vport, ptr %187, i32 %indvars.iv.i.i.i, i32 15
  %call.i.i99.i = tail call i32 @_test_and_clear_bit(i32 noundef 3, ptr noundef %state.i44.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i99.i)
  %tobool.not.i45.i.i = icmp eq i32 %call.i.i99.i, 0
  br i1 %tobool.not.i45.i.i, label %for.body.i46.i.i.for.inc.i.i102.i_crit_edge, label %if.end.i47.i.i

for.body.i46.i.i.for.inc.i.i102.i_crit_edge:      ; preds = %for.body.i46.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i102.i

if.end.i47.i.i:                                   ; preds = %for.body.i46.i.i
  %arrayidx.i.i.i = getelementptr %struct.hclge_vport, ptr %187, i32 %indvars.iv.i.i.i
  %req_vlan_fltr_en.i.i.i = getelementptr %struct.hclge_vport, ptr %187, i32 %indvars.iv.i.i.i, i32 4
  %188 = ptrtoint ptr %req_vlan_fltr_en.i.i.i to i32
  call void @__asan_load1_noabort(i32 %188)
  %189 = load i8, ptr %req_vlan_fltr_en.i.i.i, align 1, !range !1456
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %189)
  %tobool4.i.i.i = icmp ne i8 %189, 0
  %call5.i.i.i = tail call i32 @hclge_enable_vport_vlan_filter(ptr noundef %arrayidx.i.i.i, i1 noundef zeroext %tobool4.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i.i)
  %tobool6.not.i.i.i = icmp eq i32 %call5.i.i.i, 0
  br i1 %tobool6.not.i.i.i, label %if.end.i47.i.i.for.inc.i.i102.i_crit_edge, label %do.end.i.i.i

if.end.i47.i.i.for.inc.i.i102.i_crit_edge:        ; preds = %if.end.i47.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i102.i

do.end.i.i.i:                                     ; preds = %if.end.i47.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %190 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %add.ptr, align 8
  %dev.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %191, i32 0, i32 44
  %vport_id.i.i100.i = getelementptr %struct.hclge_vport, ptr %187, i32 %indvars.iv.i.i.i, i32 11
  %192 = ptrtoint ptr %vport_id.i.i100.i to i32
  call void @__asan_load2_noabort(i32 %192)
  %193 = load i16, ptr %vport_id.i.i100.i, align 2
  %conv8.i.i.i = zext i16 %193 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i, ptr noundef nonnull @.str.495, i32 noundef %conv8.i.i.i, i32 noundef %call5.i.i.i) #20
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state.i44.i.i) #16
  br label %hclge_sync_vlan_filter.exit.i

for.inc.i.i102.i:                                 ; preds = %if.end.i47.i.i.for.inc.i.i102.i_crit_edge, %for.body.i46.i.i.for.inc.i.i102.i_crit_edge
  %indvars.iv.next.i.i.i = add nuw nsw i32 %indvars.iv.i.i.i, 1
  %194 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %194)
  %195 = load i16, ptr %num_alloc_vport.i.i, align 2
  %196 = zext i16 %195 to i32
  %cmp.i.i101.i = icmp ult i32 %indvars.iv.next.i.i.i, %196
  br i1 %cmp.i.i101.i, label %for.inc.i.i102.i.for.body.i46.i.i_crit_edge, label %for.inc.i.i102.i.hclge_sync_vlan_filter.exit.i_crit_edge

for.inc.i.i102.i.hclge_sync_vlan_filter.exit.i_crit_edge: ; preds = %for.inc.i.i102.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_vlan_filter.exit.i

for.inc.i.i102.i.for.body.i46.i.i_crit_edge:      ; preds = %for.inc.i.i102.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i46.i.i

hclge_sync_vlan_filter.exit.i:                    ; preds = %for.inc.i.i102.i.hclge_sync_vlan_filter.exit.i_crit_edge, %do.end.i.i.i, %for.end.i.i.hclge_sync_vlan_filter.exit.i_crit_edge, %hclge_set_vport_vlan_fltr_change.exit.i.i.hclge_sync_vlan_filter.exit.i_crit_edge, %while.body.i.i.hclge_sync_vlan_filter.exit.i_crit_edge, %if.end21.i.hclge_sync_vlan_filter.exit.i_crit_edge
  %197 = ptrtoint ptr %serv_processed_cnt.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %serv_processed_cnt.i, align 8
  %rem24.i = urem i32 %198, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem24.i)
  %tobool25.not.i = icmp eq i32 %rem24.i, 0
  br i1 %tobool25.not.i, label %if.then26.i, label %hclge_sync_vlan_filter.exit.i.if.end27.i_crit_edge

hclge_sync_vlan_filter.exit.i.if.end27.i_crit_edge: ; preds = %hclge_sync_vlan_filter.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27.i

if.then26.i:                                      ; preds = %hclge_sync_vlan_filter.exit.i
  %199 = ptrtoint ptr %vport1.i.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %vport1.i.i, align 4
  %fd_rule_lock.i.i = getelementptr i8, ptr %work, i32 131452
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock.i.i) #16
  %fd_active_type.i104.i = getelementptr i8, ptr %work, i32 132028
  %201 = ptrtoint ptr %fd_active_type.i104.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %fd_active_type.i104.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %202)
  %cmp.not.i105.i = icmp eq i32 %202, 1
  br i1 %cmp.not.i105.i, label %if.end.i107.i, label %if.then26.i.hclge_rfs_filter_expire.exit.i_crit_edge

if.then26.i.hclge_rfs_filter_expire.exit.i_crit_edge: ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_rfs_filter_expire.exit.i

if.end.i107.i:                                    ; preds = %if.then26.i
  %203 = ptrtoint ptr %fd_rule_list.i.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %fd_rule_list.i.i, align 4
  %tobool3.not42.i.i = icmp eq ptr %204, null
  br i1 %tobool3.not42.i.i, label %if.end.i107.i.hclge_rfs_filter_expire.exit.i_crit_edge, label %land.rhs.lr.ph.i.i

if.end.i107.i.hclge_rfs_filter_expire.exit.i_crit_edge: ; preds = %if.end.i107.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_rfs_filter_expire.exit.i

land.rhs.lr.ph.i.i:                               ; preds = %if.end.i107.i
  %205 = getelementptr inbounds %struct.hclge_vport, ptr %200, i32 0, i32 13, i32 5
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %for.inc.i111.i.land.rhs.i.i_crit_edge, %land.rhs.lr.ph.i.i
  %rule.043.i.i = phi ptr [ %204, %land.rhs.lr.ph.i.i ], [ %207, %for.inc.i111.i.land.rhs.i.i_crit_edge ]
  %206 = ptrtoint ptr %rule.043.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %rule.043.i.i, align 4
  %state.i108.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.043.i.i, i32 0, i32 10
  %208 = ptrtoint ptr %state.i108.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %state.i108.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %209)
  %cmp6.not.i.i = icmp eq i32 %209, 2
  br i1 %cmp6.not.i.i, label %if.end8.i.i, label %land.rhs.i.i.for.inc.i111.i_crit_edge

land.rhs.i.i.for.inc.i111.i_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i111.i

if.end8.i.i:                                      ; preds = %land.rhs.i.i
  %210 = ptrtoint ptr %205 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %205, align 8
  %queue_id.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.043.i.i, i32 0, i32 6
  %212 = ptrtoint ptr %queue_id.i.i to i32
  call void @__asan_load2_noabort(i32 %212)
  %213 = load i16, ptr %queue_id.i.i, align 4
  %214 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.043.i.i, i32 0, i32 5
  %215 = ptrtoint ptr %214 to i32
  call void @__asan_load2_noabort(i32 %215)
  %216 = load i16, ptr %214, align 4
  %conv.i109.i = zext i16 %216 to i32
  %location.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.043.i.i, i32 0, i32 8
  %217 = ptrtoint ptr %location.i.i to i32
  call void @__asan_load2_noabort(i32 %217)
  %218 = load i16, ptr %location.i.i, align 4
  %call.i110.i = tail call zeroext i1 @rps_may_expire_flow(ptr noundef %211, i16 noundef zeroext %213, i32 noundef %conv.i109.i, i16 noundef zeroext %218) #16
  br i1 %call.i110.i, label %if.then9.i.i, label %if.end8.i.i.for.inc.i111.i_crit_edge

if.end8.i.i.for.inc.i111.i_crit_edge:             ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i111.i

if.then9.i.i:                                     ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %219 = ptrtoint ptr %state.i108.i to i32
  call void @__asan_store4_noabort(i32 %219)
  store i32 1, ptr %state.i108.i, align 4
  tail call void @_set_bit(i32 noundef 15, ptr noundef %state.i) #16
  br label %for.inc.i111.i

for.inc.i111.i:                                   ; preds = %if.then9.i.i, %if.end8.i.i.for.inc.i111.i_crit_edge, %land.rhs.i.i.for.inc.i111.i_crit_edge
  %tobool3.not.i.i = icmp eq ptr %207, null
  br i1 %tobool3.not.i.i, label %for.inc.i111.i.hclge_rfs_filter_expire.exit.i_crit_edge, label %for.inc.i111.i.land.rhs.i.i_crit_edge

for.inc.i111.i.land.rhs.i.i_crit_edge:            ; preds = %for.inc.i111.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i

for.inc.i111.i.hclge_rfs_filter_expire.exit.i_crit_edge: ; preds = %for.inc.i111.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_rfs_filter_expire.exit.i

hclge_rfs_filter_expire.exit.i:                   ; preds = %for.inc.i111.i.hclge_rfs_filter_expire.exit.i_crit_edge, %if.end.i107.i.hclge_rfs_filter_expire.exit.i_crit_edge, %if.then26.i.hclge_rfs_filter_expire.exit.i_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock.i.i) #16
  br label %if.end27.i

if.end27.i:                                       ; preds = %hclge_rfs_filter_expire.exit.i, %hclge_sync_vlan_filter.exit.i.if.end27.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %220 = load volatile i32, ptr @jiffies, align 128
  %221 = ptrtoint ptr %last_serv_processed.i to i32
  call void @__asan_store4_noabort(i32 %221)
  store i32 %220, ptr %last_serv_processed.i, align 4
  br label %out.i

out.i:                                            ; preds = %if.end27.i, %if.then15.i13, %if.then7.i
  %delta.1.i = phi i32 [ %sub9.i, %if.then7.i ], [ %delta.0.i, %if.then15.i13 ], [ %delta.0.i, %if.end27.i ]
  %222 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load volatile i32, ptr %state.i, align 4
  %224 = and i32 %223, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %224)
  %tobool.not.i114.i = icmp eq i32 %224, 0
  br i1 %tobool.not.i114.i, label %land.lhs.true.i.i, label %out.i.hclge_periodic_service_task.exit_crit_edge

out.i.hclge_periodic_service_task.exit_crit_edge: ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_periodic_service_task.exit

land.lhs.true.i.i:                                ; preds = %out.i
  %225 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load volatile i32, ptr %state.i, align 4
  %227 = and i32 %226, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %227)
  %tobool3.not.i115.i = icmp eq i32 %227, 0
  br i1 %tobool3.not.i115.i, label %if.then.i117.i, label %land.lhs.true.i.i.hclge_periodic_service_task.exit_crit_edge

land.lhs.true.i.i.hclge_periodic_service_task.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_periodic_service_task.exit

if.then.i117.i:                                   ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %228 = load ptr, ptr @hclge_wq, align 4
  %call.i.i116.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %228, ptr noundef %work, i32 noundef %delta.1.i) #16
  br label %hclge_periodic_service_task.exit

hclge_periodic_service_task.exit:                 ; preds = %if.then.i117.i, %land.lhs.true.i.i.hclge_periodic_service_task.exit_crit_edge, %out.i.hclge_periodic_service_task.exit_crit_edge, %hclge_ptp_service_task.exit.hclge_periodic_service_task.exit_crit_edge
  tail call fastcc void @hclge_errhand_service_task(ptr noundef %add.ptr)
  tail call fastcc void @hclge_reset_service_task(ptr noundef %add.ptr)
  tail call fastcc void @hclge_mailbox_service_task(ptr noundef %add.ptr)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_clear_all_event_cause(ptr nocapture noundef readonly %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 132864
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 -536870912) #16, !srcloc !1459
  %2 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i8.i = getelementptr i8, ptr %3, i32 160000
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i8.i, i32 0) #16, !srcloc !1459
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_clear_resetting_state(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %num_alloc_vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 24
  %0 = ptrtoint ptr %num_alloc_vport to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_alloc_vport, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %cmp14.not = icmp eq i16 %1, 0
  br i1 %cmp14.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %vport3 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv = phi i32 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end.for.body_crit_edge ]
  %3 = ptrtoint ptr %vport3 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %vport3, align 4
  %vport_id = getelementptr %struct.hclge_vport, ptr %4, i32 %indvars.iv, i32 11
  %5 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %vport_id, align 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %7 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 33, i1 noundef zeroext false) #16
  %conv.i = trunc i16 %6 to i8
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv.i, ptr %2, align 4
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %for.body.if.end_crit_edge, label %do.end

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  %11 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %vport_id, align 2
  %conv6 = zext i16 %12 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.497, i32 noundef %conv6, i32 noundef %call.i.i) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body.if.end_crit_edge
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  %13 = ptrtoint ptr %num_alloc_vport to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %num_alloc_vport, align 2
  %15 = zext i16 %14 to i32
  %cmp = icmp ult i32 %indvars.iv.next, %15
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_handle_occurred_error(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_handle_all_hns_hw_errors(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_init_rxd_adv_layout(ptr nocapture noundef readonly %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %0 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %caps, align 4
  %4 = and i32 %3, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %5 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hw, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i = getelementptr i8, ptr %6, i32 163848
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 16777216) #16, !srcloc !1459
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_state_init(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 6, ptr noundef %state) #16
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state) #16
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %state) #16
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #16
  tail call void @_clear_bit(i32 noundef 14, ptr noundef %state) #16
  tail call void @_clear_bit(i32 noundef 9, ptr noundef %state) #16
  tail call void @_clear_bit(i32 noundef 10, ptr noundef %state) #16
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @round_jiffies_relative(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mdiobus_unregister(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_misc_irq_uninit(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vector_irq = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 3, i32 1
  %0 = ptrtoint ptr %vector_irq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vector_irq, align 4
  %call = tail call ptr @free_irq(i32 noundef %1, ptr noundef %hdev) #16
  %vector_status.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 41
  %2 = ptrtoint ptr %vector_status.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vector_status.i, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %3, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %5)
  %cmp.i = icmp eq i16 %5, -1
  br i1 %cmp.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i, ptr noundef nonnull @.str.273, i32 noundef 0) #20
  br label %hclge_free_vector.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %3, align 2
  %num_msi_left.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 39
  %9 = ptrtoint ptr %num_msi_left.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %num_msi_left.i, align 2
  %add.i = add i16 %10, 1
  store i16 %add.i, ptr %num_msi_left.i, align 2
  %num_msi_used.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 40
  %11 = ptrtoint ptr %num_msi_used.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %num_msi_used.i, align 4
  %sub.i = add i16 %12, -1
  store i16 %sub.i, ptr %num_msi_used.i, align 4
  br label %hclge_free_vector.exit

hclge_free_vector.exit:                           ; preds = %if.end.i, %do.end.i
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_free_irq_vectors(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_comm_cmd_uninit(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_devlink_uninit(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @pcim_iounmap(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_clear_master(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_release_regions(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_device(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kmalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_request_regions(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_set_master(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pcim_iomap(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_sriov_get_totalvfs(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_mask(ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_coherent_mask(ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_select_bars(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_ioremap_wc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_alloc_irq_vectors_affinity(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hclge_misc_irq_handle(i32 noundef %irq, ptr noundef %data) #0 align 64 {
entry:
  %base.addr.i75.i = alloca ptr, align 4
  %base.addr.i72.i = alloca ptr, align 4
  %base.addr.i.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %misc_vector = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %0 = ptrtoint ptr %misc_vector to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %misc_vector, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %1, i32 0) #16, !srcloc !1459
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 2
  %2 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i)
  %4 = ptrtoint ptr %base.addr.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %base.addr.i.i, align 4
  %base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i = load volatile ptr, ptr %base.addr.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i, i32 160000
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #16, !srcloc !1461
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i)
  %7 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i72.i)
  %9 = ptrtoint ptr %base.addr.i72.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %base.addr.i72.i, align 4
  %base.addr.i72.i.0.base.addr.i72.i.0.base.addr.i72.0.base.addr.i72.0.base.addr.0.base.addr.0.base.addr.0..i73.i = load volatile ptr, ptr %base.addr.i72.i, align 4
  %add.ptr.i74.i = getelementptr i8, ptr %base.addr.i72.i.0.base.addr.i72.i.0.base.addr.i72.0.base.addr.i72.0.base.addr.0.base.addr.0.base.addr.0..i73.i, i32 133120
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i74.i) #16, !srcloc !1461
  %11 = tail call i32 @llvm.bswap.i32(i32 %10) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i72.i)
  %12 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i75.i)
  %14 = ptrtoint ptr %base.addr.i75.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %base.addr.i75.i, align 4
  %base.addr.i75.i.0.base.addr.i75.i.0.base.addr.i75.0.base.addr.i75.0.base.addr.0.base.addr.0.base.addr.0..i76.i = load volatile ptr, ptr %base.addr.i75.i, align 4
  %add.ptr.i77.i = getelementptr i8, ptr %base.addr.i75.i.0.base.addr.i75.i.0.base.addr.i75.0.base.addr.i75.0.base.addr.0.base.addr.0.base.addr.0..i76.i, i32 133888
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i77.i) #16, !srcloc !1461
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i75.i)
  %and.i = and i32 %11, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.265) #20
  %reset_pending.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 7, ptr noundef %reset_pending.i) #16
  %comm_state.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 2, i32 0, i32 3
  tail call void @_set_bit(i32 noundef 0, ptr noundef %comm_state.i) #16
  %imp_rst_cnt.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 13, i32 5
  %19 = ptrtoint ptr %imp_rst_cnt.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %imp_rst_cnt.i, align 4
  %inc.i = add i32 %20, 1
  store i32 %inc.i, ptr %imp_rst_cnt.i, align 4
  br label %sw.bb1

if.end.i:                                         ; preds = %entry
  %and12.i = and i32 %11, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i)
  %tobool13.not.i = icmp eq i32 %and12.i, 0
  br i1 %tobool13.not.i, label %if.end26.i, label %do.end17.i

do.end17.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %data, align 8
  %dev19.i = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev19.i, ptr noundef nonnull @.str.268) #20
  %comm_state22.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 2, i32 0, i32 3
  tail call void @_set_bit(i32 noundef 0, ptr noundef %comm_state22.i) #16
  %reset_pending23.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 6, ptr noundef %reset_pending23.i) #16
  %global_rst_cnt.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 13, i32 4
  %23 = ptrtoint ptr %global_rst_cnt.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %global_rst_cnt.i, align 8
  %inc25.i = add i32 %24, 1
  store i32 %inc25.i, ptr %global_rst_cnt.i, align 8
  br label %sw.bb1

if.end26.i:                                       ; preds = %if.end.i
  %and27.i = and i32 %11, 130816
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i)
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  %and29.i = and i32 %16, 50396928
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i)
  %tobool30.not.i = icmp eq i32 %and29.i, 0
  %or.cond.i = select i1 %tobool28.not.i, i1 %tobool30.not.i, i1 false
  br i1 %or.cond.i, label %if.end32.i, label %sw.bb

if.end32.i:                                       ; preds = %if.end26.i
  %and33.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33.i)
  %tobool34.not.i = icmp eq i32 %and33.i, 0
  br i1 %tobool34.not.i, label %if.end36.i, label %do.body3

if.end36.i:                                       ; preds = %if.end32.i
  %and37.i = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37.i)
  %tobool38.not.i = icmp eq i32 %and37.i, 0
  br i1 %tobool38.not.i, label %hclge_clear_event_cause.exit.thread91, label %sw.bb10

sw.bb:                                            ; preds = %if.end26.i
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 5
  %25 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %state.i, align 4
  %27 = and i32 %26, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i36 = icmp eq i32 %27, 0
  br i1 %tobool.not.i36, label %land.lhs.true.i, label %sw.bb.if.end_crit_edge

sw.bb.if.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true.i:                                  ; preds = %sw.bb
  %call2.i = tail call i32 @_test_and_set_bit(i32 noundef 11, ptr noundef %state.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %if.then.i, label %land.lhs.true.i.if.end_crit_edge

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %28 = load ptr, ptr @hclge_wq, align 4
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 48
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %28, ptr noundef %service_task.i, i32 noundef 0) #16
  br label %if.end

sw.bb1:                                           ; preds = %do.end17.i, %do.end.i
  %clearval.0.ph = phi i32 [ -2147483648, %do.end.i ], [ 536870912, %do.end17.i ]
  %state.i38 = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 5
  %29 = ptrtoint ptr %state.i38 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %state.i38, align 4
  %31 = and i32 %30, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i39 = icmp eq i32 %31, 0
  br i1 %tobool.not.i39, label %land.lhs.true.i41, label %if.end.critedge97

land.lhs.true.i41:                                ; preds = %sw.bb1
  %32 = ptrtoint ptr %state.i38 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %state.i38, align 4
  %34 = and i32 %33, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool3.not.i40 = icmp eq i32 %34, 0
  br i1 %tobool3.not.i40, label %if.end.critedge95, label %land.lhs.true4.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i41
  %call6.i = tail call i32 @_test_and_set_bit(i32 noundef 7, ptr noundef %state.i38) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %if.then.i44, label %if.end.critedge93

if.then.i44:                                      ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %35 = load volatile i32, ptr @jiffies, align 128
  %last_rst_scheduled.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 72
  %36 = ptrtoint ptr %last_rst_scheduled.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %last_rst_scheduled.i, align 8
  %37 = load ptr, ptr @hclge_wq, align 4
  %service_task.i42 = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 48
  %call.i.i43 = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %37, ptr noundef %service_task.i42, i32 noundef 0) #16
  %38 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i56.c = getelementptr i8, ptr %39, i32 132864
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i56.c, i32 %clearval.0.ph) #16, !srcloc !1459
  br label %if.end

do.body3:                                         ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #18
  %ptp = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 85
  %40 = ptrtoint ptr %ptp to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ptp, align 4
  %lock = getelementptr inbounds %struct.hclge_ptp, ptr %41, i32 0, i32 7
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #16
  tail call void @hclge_ptp_clean_tx_hwts(ptr noundef %data) #16
  %42 = ptrtoint ptr %ptp to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ptp, align 4
  %lock9 = getelementptr inbounds %struct.hclge_ptp, ptr %43, i32 0, i32 7
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock9, i32 noundef %call5) #16
  %44 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i56 = getelementptr i8, ptr %45, i32 132864
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i56, i32 %10) #16, !srcloc !1459
  br label %if.then

sw.bb10:                                          ; preds = %if.end36.i
  %and40.i = and i32 %6, -3
  %state.i46 = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 5
  %46 = ptrtoint ptr %state.i46 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %state.i46, align 4
  %48 = and i32 %47, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i47 = icmp eq i32 %48, 0
  br i1 %tobool.not.i47, label %land.lhs.true.i50, label %sw.bb10.hclge_clear_event_cause.exit.thread_crit_edge

sw.bb10.hclge_clear_event_cause.exit.thread_crit_edge: ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_clear_event_cause.exit.thread

land.lhs.true.i50:                                ; preds = %sw.bb10
  %call2.i48 = tail call i32 @_test_and_set_bit(i32 noundef 9, ptr noundef %state.i46) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i48)
  %tobool3.not.i49 = icmp eq i32 %call2.i48, 0
  br i1 %tobool3.not.i49, label %if.then.i53, label %land.lhs.true.i50.hclge_clear_event_cause.exit.thread_crit_edge

land.lhs.true.i50.hclge_clear_event_cause.exit.thread_crit_edge: ; preds = %land.lhs.true.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_clear_event_cause.exit.thread

if.then.i53:                                      ; preds = %land.lhs.true.i50
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %49 = load volatile i32, ptr @jiffies, align 128
  %last_mbx_scheduled.i = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 73
  %50 = ptrtoint ptr %last_mbx_scheduled.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %last_mbx_scheduled.i, align 4
  %51 = load ptr, ptr @hclge_wq, align 4
  %service_task.i51 = getelementptr inbounds %struct.hclge_dev, ptr %data, i32 0, i32 48
  %call.i.i52 = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %51, ptr noundef %service_task.i51, i32 noundef 0) #16
  br label %hclge_clear_event_cause.exit.thread

hclge_clear_event_cause.exit.thread91:            ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #18
  %52 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %data, align 8
  %dev46.i = getelementptr inbounds %struct.pci_dev, ptr %53, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev46.i, ptr noundef nonnull @.str.271, i32 noundef %6, i32 noundef %16, i32 noundef %11) #20
  %54 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %data, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %55, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.263) #20
  br label %if.then

hclge_clear_event_cause.exit.thread:              ; preds = %if.then.i53, %land.lhs.true.i50.hclge_clear_event_cause.exit.thread_crit_edge, %sw.bb10.hclge_clear_event_cause.exit.thread_crit_edge
  %56 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %58 = tail call i32 @llvm.bswap.i32(i32 %and40.i) #16
  %add.ptr.i8.i = getelementptr i8, ptr %57, i32 160000
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i8.i, i32 %58) #16, !srcloc !1459
  br label %if.then

if.then:                                          ; preds = %hclge_clear_event_cause.exit.thread, %hclge_clear_event_cause.exit.thread91, %do.body3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %59 = ptrtoint ptr %misc_vector to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %misc_vector, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %60, i32 16777216) #16, !srcloc !1459
  br label %if.end

if.end.critedge93:                                ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #18
  %61 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i56.c94 = getelementptr i8, ptr %62, i32 132864
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i56.c94, i32 %clearval.0.ph) #16, !srcloc !1459
  br label %if.end

if.end.critedge95:                                ; preds = %land.lhs.true.i41
  call void @__sanitizer_cov_trace_pc() #18
  %63 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i56.c96 = getelementptr i8, ptr %64, i32 132864
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i56.c96, i32 %clearval.0.ph) #16, !srcloc !1459
  br label %if.end

if.end.critedge97:                                ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #18
  %65 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %hw.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i56.c98 = getelementptr i8, ptr %66, i32 132864
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i56.c98, i32 %clearval.0.ph) #16, !srcloc !1459
  br label %if.end

if.end:                                           ; preds = %if.end.critedge97, %if.end.critedge95, %if.end.critedge93, %if.then, %if.then.i44, %if.then.i, %land.lhs.true.i.if.end_crit_edge, %sw.bb.if.end_crit_edge
  ret i32 1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_irq_vector(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_threaded_irq(i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_ptp_clean_tx_hwts(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_vport_setup(ptr noundef %vport, i16 noundef zeroext %num_tqps) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %pdev2 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 1
  %4 = ptrtoint ptr %pdev2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %pdev2, align 4
  %ae_algo = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 3
  %5 = ptrtoint ptr %ae_algo to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @ae_algo, ptr %ae_algo, align 4
  %numa_node_mask = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 25
  %6 = ptrtoint ptr %numa_node_mask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %numa_node_mask, align 8
  %numa_node_mask3 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 6
  %8 = ptrtoint ptr %numa_node_mask3 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %numa_node_mask3, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 2
  %9 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw, align 8
  %io_base5 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 5, i32 0, i32 13
  %11 = ptrtoint ptr %io_base5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %10, ptr %io_base5, align 8
  %num_tx_desc = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 27
  %12 = ptrtoint ptr %num_tx_desc to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %num_tx_desc, align 2
  %num_rx_desc = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 28
  %14 = ptrtoint ptr %num_rx_desc to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %num_rx_desc, align 8
  %num_tx_desc2.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 5, i32 0, i32 4
  %16 = ptrtoint ptr %num_tx_desc2.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %13, ptr %num_tx_desc2.i, align 2
  %num_rx_desc3.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 5, i32 0, i32 5
  %17 = ptrtoint ptr %num_rx_desc3.i to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %15, ptr %num_rx_desc3.i, align 4
  %rx_buf_len.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 26
  %18 = ptrtoint ptr %rx_buf_len.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %rx_buf_len.i, align 4
  %rx_buf_len4.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 5, i32 0, i32 3
  %20 = ptrtoint ptr %rx_buf_len4.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %19, ptr %rx_buf_len4.i, align 4
  %tx_spare_buf_size.i = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 22
  %21 = ptrtoint ptr %tx_spare_buf_size.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tx_spare_buf_size.i, align 8
  %tx_spare_buf_size5.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 5, i32 0, i32 6
  %23 = ptrtoint ptr %tx_spare_buf_size5.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %tx_spare_buf_size5.i, align 4
  %conv.i = zext i16 %num_tqps to i32
  %24 = shl nuw nsw i32 %conv.i, 2
  %25 = load ptr, ptr %1, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 44
  %call5.i.i.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev.i, i32 noundef %24, i32 noundef 3520) #16
  %tqp.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 5, i32 0, i32 9
  %26 = ptrtoint ptr %tqp.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %call5.i.i.i, ptr %tqp.i, align 4
  %tobool.not.i = icmp eq ptr %call5.i.i.i, null
  br i1 %tobool.not.i, label %do.end, label %if.end.i

if.end.i:                                         ; preds = %entry
  %nic.i.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13
  %27 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %back, align 4
  %num_tqps1.i.i = getelementptr inbounds %struct.hclge_dev, ptr %28, i32 0, i32 16
  %29 = ptrtoint ptr %num_tqps1.i.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %num_tqps1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %30)
  %cmp3.i.i = icmp ne i16 %30, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %num_tqps)
  %cmp44.i.i = icmp ne i16 %num_tqps, 0
  %or.cond5.i.i = and i1 %cmp44.i.i, %cmp3.i.i
  br i1 %or.cond5.i.i, label %for.body.lr.ph.i.i, label %if.end.i.hclge_knic_setup.exit.thread_crit_edge

if.end.i.hclge_knic_setup.exit.thread_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_knic_setup.exit.thread

for.body.lr.ph.i.i:                               ; preds = %if.end.i
  %htqp.i.i = getelementptr inbounds %struct.hclge_dev, ptr %28, i32 0, i32 51
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %alloced.08.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %alloced.1.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %i.06.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc26.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %31 = ptrtoint ptr %htqp.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %htqp.i.i, align 8
  %alloced6.i.i = getelementptr %struct.hclge_comm_tqp, ptr %32, i32 %i.06.i.i, i32 4
  %33 = ptrtoint ptr %alloced6.i.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %alloced6.i.i, align 2, !range !1456
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.i.i = icmp eq i8 %34, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %handle.i.i = getelementptr %struct.hclge_comm_tqp, ptr %32, i32 %i.06.i.i, i32 1, i32 2
  %35 = ptrtoint ptr %handle.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %nic.i.i, ptr %handle.i.i, align 4
  %36 = ptrtoint ptr %htqp.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %htqp.i.i, align 8
  %tqp_index.i.i = getelementptr %struct.hclge_comm_tqp, ptr %37, i32 %i.06.i.i, i32 1, i32 3
  %38 = ptrtoint ptr %tqp_index.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %alloced.08.i.i, ptr %tqp_index.i.i, align 4
  %39 = ptrtoint ptr %num_tx_desc2.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %num_tx_desc2.i, align 2
  %41 = load ptr, ptr %htqp.i.i, align 8
  %tx_desc_num.i.i = getelementptr %struct.hclge_comm_tqp, ptr %41, i32 %i.06.i.i, i32 1, i32 5
  %42 = ptrtoint ptr %tx_desc_num.i.i to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %40, ptr %tx_desc_num.i.i, align 4
  %43 = ptrtoint ptr %num_rx_desc3.i to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %num_rx_desc3.i, align 4
  %45 = load ptr, ptr %htqp.i.i, align 8
  %rx_desc_num.i.i = getelementptr %struct.hclge_comm_tqp, ptr %45, i32 %i.06.i.i, i32 1, i32 6
  %46 = ptrtoint ptr %rx_desc_num.i.i to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %44, ptr %rx_desc_num.i.i, align 2
  %47 = load ptr, ptr %htqp.i.i, align 8
  %q21.i.i = getelementptr %struct.hclge_comm_tqp, ptr %47, i32 %i.06.i.i, i32 1
  %48 = ptrtoint ptr %tqp.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %tqp.i, align 4
  %arrayidx22.i.i = getelementptr ptr, ptr %49, i32 %alloced.08.i.i
  %50 = ptrtoint ptr %arrayidx22.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %q21.i.i, ptr %arrayidx22.i.i, align 4
  %51 = load ptr, ptr %htqp.i.i, align 8
  %alloced25.i.i = getelementptr %struct.hclge_comm_tqp, ptr %51, i32 %i.06.i.i, i32 4
  %52 = ptrtoint ptr %alloced25.i.i to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 1, ptr %alloced25.i.i, align 2
  %inc.i.i = add nsw i32 %alloced.08.i.i, 1
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %alloced.1.i.i = phi i32 [ %alloced.08.i.i, %for.body.i.i.for.inc.i.i_crit_edge ], [ %inc.i.i, %if.then.i.i ]
  %inc26.i.i = add nuw nsw i32 %i.06.i.i, 1
  %53 = ptrtoint ptr %num_tqps1.i.i to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %num_tqps1.i.i, align 4
  %conv.i.i = zext i16 %54 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %inc26.i.i, i32 %conv.i.i)
  %cmp.i.i = icmp ult i32 %inc26.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %alloced.1.i.i, i32 %conv.i)
  %cmp4.i.i = icmp slt i32 %alloced.1.i.i, %conv.i
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp4.i.i, i1 false
  br i1 %or.cond.i.i, label %for.inc.i.i.for.body.i.i_crit_edge, label %for.inc.i.i.hclge_knic_setup.exit.thread_crit_edge

for.inc.i.i.hclge_knic_setup.exit.thread_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_knic_setup.exit.thread

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

hclge_knic_setup.exit.thread:                     ; preds = %for.inc.i.i.hclge_knic_setup.exit.thread_crit_edge, %if.end.i.hclge_knic_setup.exit.thread_crit_edge
  %alloced.0.lcssa.i.i = phi i32 [ 0, %if.end.i.hclge_knic_setup.exit.thread_crit_edge ], [ %alloced.1.i.i, %for.inc.i.i.hclge_knic_setup.exit.thread_crit_edge ]
  %conv27.i.i = trunc i32 %alloced.0.lcssa.i.i to i16
  %55 = ptrtoint ptr %vport to i32
  call void @__asan_store2_noabort(i32 %55)
  store i16 %conv27.i.i, ptr %vport, align 8
  %pf_rss_size_max.i.i = getelementptr inbounds %struct.hclge_dev, ptr %28, i32 0, i32 21
  %56 = ptrtoint ptr %pf_rss_size_max.i.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %pf_rss_size_max.i.i, align 2
  %tm_info.i.i = getelementptr inbounds %struct.hclge_dev, ptr %28, i32 0, i32 37
  %58 = ptrtoint ptr %tm_info.i.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %tm_info.i.i, align 8
  %div.rhs.trunc.i.i = zext i8 %59 to i16
  %div1.i.i = udiv i16 %conv27.i.i, %div.rhs.trunc.i.i
  %60 = tail call i16 @llvm.umin.i16(i16 %div1.i.i, i16 %57) #16
  %61 = zext i16 %60 to i32
  %rss_size.i.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 5, i32 0, i32 1
  %62 = ptrtoint ptr %rss_size.i.i to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %60, ptr %rss_size.i.i, align 4
  %num_nic_msi.i.i = getelementptr inbounds %struct.hclge_dev, ptr %28, i32 0, i32 43
  %63 = ptrtoint ptr %num_nic_msi.i.i to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %num_nic_msi.i.i, align 8
  %conv40.i.i = zext i16 %64 to i32
  %sub.i.i = add nsw i32 %conv40.i.i, -1
  %65 = ptrtoint ptr %tm_info.i.i to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %tm_info.i.i, align 8
  %conv43.i.i = zext i8 %66 to i32
  %div44.i.i = sdiv i32 %sub.i.i, %conv43.i.i
  %conv48.i.i = and i32 %div44.i.i, 65535
  %67 = tail call i32 @llvm.umin.i32(i32 %conv48.i.i, i32 %61) #16
  %conv57.i.i = trunc i32 %67 to i16
  %68 = ptrtoint ptr %rss_size.i.i to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %conv57.i.i, ptr %rss_size.i.i, align 4
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %69 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %70, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.281, i32 noundef -12) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %hclge_knic_setup.exit.thread
  %retval.0.i21 = phi i32 [ 0, %hclge_knic_setup.exit.thread ], [ -12, %do.end ]
  ret i32 %retval.0.i21
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_set_app_loopback(ptr noundef %hdev, i1 noundef zeroext %en) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %0 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 769, i1 noundef zeroext true) #16
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %1 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %2, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.300, i32 noundef %call.i) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %6 = and i32 %5, -8388609
  %7 = call i32 @llvm.bswap.i32(i32 %6)
  %shl = select i1 %en, i32 32768, i32 0
  %or = or i32 %7, %shl
  %8 = call i32 @llvm.bswap.i32(i32 %or)
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %3, align 4
  call void @hclge_comm_cmd_reuse_desc(ptr noundef nonnull %desc, i1 noundef zeroext false) #16
  %call.i31 = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i31)
  %tobool9.not = icmp eq i32 %call.i31, 0
  br i1 %tobool9.not, label %if.end.cleanup_crit_edge, label %do.end13

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end13:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hdev, align 8
  %dev15 = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev15, ptr noundef nonnull @.str.303, i32 noundef %call.i31) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end13, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ %call.i, %do.end ], [ %call.i31, %do.end13 ], [ 0, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_cfg_common_loopback(ptr noundef %hdev, i1 noundef zeroext %en, i32 noundef %loop_mode) unnamed_addr #0 align 64 {
entry:
  %desc.i5 = alloca %struct.hclge_desc, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %1 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 789, i1 noundef zeroext false) #16
  %switch.tableidx = add i32 %loop_mode, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %2 = icmp ult i32 %switch.tableidx, 3
  br i1 %2, label %switch.lookup, label %do.end.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %3 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %4, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.305, i32 noundef %loop_mode) #20
  br label %hclge_cfg_common_loopback_cmd_send.exit.thread

switch.lookup:                                    ; preds = %entry
  %switch.cast = trunc i32 %switch.tableidx to i24
  %switch.shiftamt = shl i24 %switch.cast, 3
  %switch.downshift = lshr i24 525313, %switch.shiftamt
  %switch.masked = trunc i24 %switch.downshift to i8
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %switch.masked, ptr %0, align 4
  br i1 %en, label %if.then.i, label %switch.lookup.if.end.i_crit_edge

switch.lookup.if.end.i_crit_edge:                 ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #18
  %enable.i = getelementptr inbounds %struct.hclge_common_lb_cmd, ptr %0, i32 0, i32 1
  %6 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %switch.masked, ptr %enable.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %switch.lookup.if.end.i_crit_edge
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool3.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool3.not.i, label %if.end, label %do.end7.i

do.end7.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hdev, align 8
  %dev9.i = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev9.i, ptr noundef nonnull @.str.308, i32 noundef %loop_mode, i32 noundef %call.i.i) #20
  br label %hclge_cfg_common_loopback_cmd_send.exit.thread

hclge_cfg_common_loopback_cmd_send.exit.thread:   ; preds = %do.end7.i, %do.end.i
  %retval.0.i.ph = phi i32 [ %call.i.i, %do.end7.i ], [ -524, %do.end.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

if.end:                                           ; preds = %if.end.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i5) #16
  %9 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i5, i32 0, i32 4
  %result.i = getelementptr inbounds %struct.hclge_common_lb_cmd, ptr %9, i32 0, i32 2
  %10 = call ptr @memset(ptr %desc.i5, i32 255, i32 32)
  br label %do.body.i

do.body.i:                                        ; preds = %land.rhs.i.do.body.i_crit_edge, %if.end
  %i.0.i = phi i32 [ 0, %if.end ], [ %inc.i, %land.rhs.i.do.body.i_crit_edge ]
  call void @msleep(i32 noundef 10) #16
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i5, i32 noundef 789, i1 noundef zeroext true) #16
  %call.i.i7 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i5, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i7)
  %tobool.not.i = icmp eq i32 %call.i.i7, 0
  br i1 %tobool.not.i, label %do.cond2.i, label %do.end.i9

do.end.i9:                                        ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hdev, align 8
  %dev.i8 = getelementptr inbounds %struct.pci_dev, ptr %12, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i8, ptr noundef nonnull @.str.310, i32 noundef %call.i.i7) #20
  br label %hclge_cfg_common_loopback_wait.exit

do.cond2.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 99, i32 %i.0.i)
  %exitcond.not.i = icmp eq i32 %i.0.i, 99
  br i1 %exitcond.not.i, label %do.cond2.i.do.end4.i_crit_edge, label %land.rhs.i

do.cond2.i.do.end4.i_crit_edge:                   ; preds = %do.cond2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end4.i

land.rhs.i:                                       ; preds = %do.cond2.i
  %inc.i = add nuw nsw i32 %i.0.i, 1
  %13 = ptrtoint ptr %result.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %result.i, align 2
  %15 = and i8 %14, 1
  %tobool3.not.i10 = icmp eq i8 %15, 0
  br i1 %tobool3.not.i10, label %land.rhs.i.do.body.i_crit_edge, label %land.rhs.i.do.end4.i_crit_edge

land.rhs.i.do.end4.i_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end4.i

land.rhs.i.do.body.i_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

do.end4.i:                                        ; preds = %land.rhs.i.do.end4.i_crit_edge, %do.cond2.i.do.end4.i_crit_edge
  %16 = ptrtoint ptr %result.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %result.i, align 2
  %conv6.i = zext i8 %17 to i32
  %and7.i = and i32 %conv6.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %do.end12.i, label %if.else.i

do.end12.i:                                       ; preds = %do.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hdev, align 8
  %dev14.i = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev14.i, ptr noundef nonnull @.str.313) #20
  br label %hclge_cfg_common_loopback_wait.exit

if.else.i:                                        ; preds = %do.end4.i
  %and17.i = and i32 %conv6.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  br i1 %tobool18.not.i, label %do.end22.i, label %if.else.i.hclge_cfg_common_loopback_wait.exit_crit_edge

if.else.i.hclge_cfg_common_loopback_wait.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_cfg_common_loopback_wait.exit

do.end22.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hdev, align 8
  %dev24.i = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24.i, ptr noundef nonnull @.str.316) #20
  br label %hclge_cfg_common_loopback_wait.exit

hclge_cfg_common_loopback_wait.exit:              ; preds = %do.end22.i, %if.else.i.hclge_cfg_common_loopback_wait.exit_crit_edge, %do.end12.i, %do.end.i9
  %retval.0.i11 = phi i32 [ %call.i.i7, %do.end.i9 ], [ -5, %do.end22.i ], [ -16, %do.end12.i ], [ 0, %if.else.i.hclge_cfg_common_loopback_wait.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i5) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_cfg_common_loopback_wait.exit, %hclge_cfg_common_loopback_cmd_send.exit.thread
  %retval.0 = phi i32 [ %retval.0.i11, %hclge_cfg_common_loopback_wait.exit ], [ %retval.0.i.ph, %hclge_cfg_common_loopback_cmd_send.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_errhand_service_task(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %base.addr.i.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %call = tail call i32 @_test_and_clear_bit(i32 noundef 11, ptr noundef %state) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end4_crit_edge, label %if.end

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.end:                                           ; preds = %entry
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %0 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %caps, align 4
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not = icmp eq i32 %4, 0
  %5 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hdev, align 8
  %driver_data.i.i.i8 = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44, i32 8
  %7 = ptrtoint ptr %driver_data.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %driver_data.i.i.i8, align 4
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  %hw_err_reset_req.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %8, i32 0, i32 4
  %9 = ptrtoint ptr %hw_err_reset_req.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %hw_err_reset_req.i, align 4
  %call1.i = tail call zeroext i1 @hclge_find_error_source(ptr noundef %hdev) #16
  br i1 %call1.i, label %if.then.i, label %if.then3.if.end4.sink.split_crit_edge

if.then3.if.end4.sink.split_crit_edge:            ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.sink.split

if.then.i:                                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  %call2.i = tail call i32 @hclge_handle_error_info_log(ptr noundef %8) #16
  %call3.i = tail call i32 @hclge_handle_mac_tnl(ptr noundef %hdev) #16
  br label %if.end4.sink.split

if.else:                                          ; preds = %if.end
  %dev2.i = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %10 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i)
  %12 = ptrtoint ptr %base.addr.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %base.addr.i.i, align 4
  %base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i = load volatile ptr, ptr %base.addr.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i, i32 133120
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #16, !srcloc !1461
  %14 = tail call i32 @llvm.bswap.i32(i32 %13) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i)
  %and.i = and i32 %14, 130816
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.else.hclge_misc_err_recovery.exit_crit_edge, label %if.then.i9

if.else.hclge_misc_err_recovery.exit_crit_edge:   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_misc_err_recovery.exit

if.then.i9:                                       ; preds = %if.else
  %default_reset_request.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 10
  %call5.i = tail call i32 @hclge_handle_hw_msix_error(ptr noundef %hdev, ptr noundef %default_reset_request.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.then.i9.hclge_misc_err_recovery.exit_crit_edge, label %do.end.i

if.then.i9.hclge_misc_err_recovery.exit_crit_edge: ; preds = %if.then.i9
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_misc_err_recovery.exit

do.end.i:                                         ; preds = %if.then.i9
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev2.i, ptr noundef nonnull @.str.350, i32 noundef %14) #20
  br label %hclge_misc_err_recovery.exit

hclge_misc_err_recovery.exit:                     ; preds = %do.end.i, %if.then.i9.hclge_misc_err_recovery.exit_crit_edge, %if.else.hclge_misc_err_recovery.exit_crit_edge
  %call9.i = tail call i32 @hclge_handle_hw_ras_error(ptr noundef %8) #16
  br label %if.end4.sink.split

if.end4.sink.split:                               ; preds = %hclge_misc_err_recovery.exit, %if.then.i, %if.then3.if.end4.sink.split_crit_edge
  tail call fastcc void @hclge_handle_err_reset_request(ptr noundef %hdev) #16
  br label %if.end4

if.end4:                                          ; preds = %if.end4.sink.split, %entry.if.end4_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_reset_service_task(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %base.addr.i83.i.i = alloca ptr, align 4
  %base.addr.i79.i.i = alloca ptr, align 4
  %base.addr.i76.i.i = alloca ptr, align 4
  %base.addr.i.i.i = alloca ptr, align 4
  %base.addr.i9.i.i.i = alloca ptr, align 4
  %base.addr.i.i.i44.i = alloca ptr, align 4
  %base.addr.i.i.i.i.i = alloca ptr, align 4
  %base.addr.i.i16.i.i = alloca ptr, align 4
  %base.addr.i29.i.i.i = alloca ptr, align 4
  %base.addr.i.i.i.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %call = tail call i32 @_test_and_clear_bit(i32 noundef 7, ptr noundef %state) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %last_rst_scheduled = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 72
  %0 = ptrtoint ptr %last_rst_scheduled to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %last_rst_scheduled, align 8
  %add = add i32 %1, 300
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add, %2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %do.end, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %3 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %4, i32 0, i32 44
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %5 = load volatile i32, ptr @jiffies, align 128
  %sub3 = sub i32 %5, %1
  %call4 = tail call i32 @jiffies_to_msecs(i32 noundef %sub3) #16
  %6 = tail call i32 @llvm.read_register.i32(metadata !1442) #16
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.352, i32 noundef %call4, i32 noundef %9) #20
  br label %if.end6

if.end6:                                          ; preds = %do.end, %if.end.if.end6_crit_edge
  %reset_sem = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 14
  tail call void @down(ptr noundef %reset_sem) #16
  tail call void @_set_bit(i32 noundef 8, ptr noundef %state) #16
  %10 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hdev, align 8
  %driver_data.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44, i32 8
  %12 = ptrtoint ptr %driver_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %driver_data.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %14 = load volatile i32, ptr @jiffies, align 128
  %last_reset_time.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 7
  %15 = ptrtoint ptr %last_reset_time.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %last_reset_time.i, align 8
  %reset_pending.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 12
  %priv.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %13, i32 0, i32 8
  %16 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %priv.i.i, align 4
  %18 = ptrtoint ptr %reset_pending.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %reset_pending.i, align 4
  %20 = and i32 %19, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %reset_pending.i) #16
  br label %if.end14.sink.split.sink.split.i.i

if.else.i.i:                                      ; preds = %if.end6
  %21 = ptrtoint ptr %reset_pending.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %reset_pending.i, align 4
  %23 = and i32 %22, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool2.not.i.i = icmp eq i32 %23, 0
  br i1 %tobool2.not.i.i, label %if.else4.i.i, label %if.else.i.i.if.end14.sink.split.sink.split.i.i_crit_edge

if.else.i.i.if.end14.sink.split.sink.split.i.i_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.sink.split.i.i

if.else4.i.i:                                     ; preds = %if.else.i.i
  %24 = ptrtoint ptr %reset_pending.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %reset_pending.i, align 4
  %26 = and i32 %25, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool6.not.i.i = icmp eq i32 %26, 0
  br i1 %tobool6.not.i.i, label %if.else8.i.i, label %if.else4.i.i.if.end14.sink.split.i.i_crit_edge

if.else4.i.i.if.end14.sink.split.i.i_crit_edge:   ; preds = %if.else4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i.i

if.else8.i.i:                                     ; preds = %if.else4.i.i
  %27 = ptrtoint ptr %reset_pending.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %reset_pending.i, align 4
  %29 = and i32 %28, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool10.not.i.i = icmp eq i32 %29, 0
  br i1 %tobool10.not.i.i, label %if.else8.i.i.hclge_get_reset_level.exit.i_crit_edge, label %if.else8.i.i.if.end14.sink.split.i.i_crit_edge

if.else8.i.i.if.end14.sink.split.i.i_crit_edge:   ; preds = %if.else8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i.i

if.else8.i.i.hclge_get_reset_level.exit.i_crit_edge: ; preds = %if.else8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_reset_level.exit.i

if.end14.sink.split.sink.split.i.i:               ; preds = %if.else.i.i.if.end14.sink.split.sink.split.i.i_crit_edge, %if.then.i.i
  %rst_level.0.ph.ph.i.i = phi i32 [ 7, %if.then.i.i ], [ 6, %if.else.i.i.if.end14.sink.split.sink.split.i.i_crit_edge ]
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %reset_pending.i) #16
  br label %if.end14.sink.split.i.i

if.end14.sink.split.i.i:                          ; preds = %if.end14.sink.split.sink.split.i.i, %if.else8.i.i.if.end14.sink.split.i.i_crit_edge, %if.else4.i.i.if.end14.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 5, %if.else4.i.i.if.end14.sink.split.i.i_crit_edge ], [ 4, %if.else8.i.i.if.end14.sink.split.i.i_crit_edge ], [ 5, %if.end14.sink.split.sink.split.i.i ]
  %rst_level.0.ph.i.i = phi i32 [ 5, %if.else4.i.i.if.end14.sink.split.i.i_crit_edge ], [ 4, %if.else8.i.i.if.end14.sink.split.i.i_crit_edge ], [ %rst_level.0.ph.ph.i.i, %if.end14.sink.split.sink.split.i.i ]
  tail call void @_clear_bit(i32 noundef %.sink.i.i, ptr noundef %reset_pending.i) #16
  br label %hclge_get_reset_level.exit.i

hclge_get_reset_level.exit.i:                     ; preds = %if.end14.sink.split.i.i, %if.else8.i.i.hclge_get_reset_level.exit.i_crit_edge
  %rst_level.0.i.i = phi i32 [ 8, %if.else8.i.i.hclge_get_reset_level.exit.i_crit_edge ], [ %rst_level.0.ph.i.i, %if.end14.sink.split.i.i ]
  %reset_type.i.i = getelementptr inbounds %struct.hclge_dev, ptr %17, i32 0, i32 8
  %30 = ptrtoint ptr %reset_type.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %reset_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %31)
  %cmp.not.i.i = icmp ne i32 %31, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %rst_level.0.i.i, i32 %31)
  %cmp16.i.i = icmp ult i32 %rst_level.0.i.i, %31
  %or.cond.i.i = and i1 %cmp.not.i.i, %cmp16.i.i
  %retval.0.i.i = select i1 %or.cond.i.i, i32 8, i32 %rst_level.0.i.i
  %reset_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 8
  %32 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %retval.0.i.i, ptr %reset_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %retval.0.i.i)
  %cmp.not.i = icmp eq i32 %retval.0.i.i, 8
  br i1 %cmp.not.i, label %hclge_get_reset_level.exit.i.if.end.i_crit_edge, label %if.then.i

hclge_get_reset_level.exit.i.if.end.i_crit_edge:  ; preds = %hclge_get_reset_level.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %hclge_get_reset_level.exit.i
  %call.i.i = tail call fastcc i32 @hclge_reset_prepare(ptr noundef %hdev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i21.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i21.i, label %if.end.i.i, label %if.then.i.err_reset.i.i_crit_edge

if.then.i.err_reset.i.i_crit_edge:                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_reset.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %33 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %reset_type.i, align 4
  %switch.tableidx = add i32 %34, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %35 = icmp ult i32 %switch.tableidx, 3
  br i1 %35, label %switch.lookup, label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hdev, align 8
  %dev.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i, ptr noundef nonnull @.str.371, i32 noundef %34) #20
  br label %err_reset.i.i

switch.lookup:                                    ; preds = %if.end.i.i
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.hclge_reset_service_task, i32 0, i32 %switch.tableidx
  %38 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %38)
  %switch.load = load i32, ptr %switch.gep, align 4
  %switch.gep18 = getelementptr inbounds [3 x i32], ptr @switch.table.hclge_reset_service_task.746, i32 0, i32 %switch.tableidx
  %39 = ptrtoint ptr %switch.gep18 to i32
  call void @__asan_load4_noabort(i32 %39)
  %switch.load19 = load i32, ptr %switch.gep18, align 4
  %hw.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %40 = ptrtoint ptr %hw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hw.i.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i.i.i)
  %42 = ptrtoint ptr %base.addr.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %41, ptr %base.addr.i.i.i.i, align 4
  %base.addr.i.i.i.i.0.base.addr.i.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i.i = load volatile ptr, ptr %base.addr.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %base.addr.i.i.i.i.0.base.addr.i.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i.i, i32 %switch.load
  %43 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.i) #16, !srcloc !1461
  %44 = lshr i32 %43, 24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i.i.i)
  %shl.i.i.i = shl nuw nsw i32 1, %switch.load19
  %and32.i.i.i = and i32 %44, %shl.i.i.i
  %shr33.i.i.i = lshr i32 %and32.i.i.i, %switch.load19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr33.i.i.i)
  %tobool.not34.not.i.i.i = icmp eq i32 %shr33.i.i.i, 0
  br i1 %tobool.not34.not.i.i.i, label %switch.lookup.if.end4.i.i_crit_edge, label %switch.lookup.while.body.i.i.i_crit_edge

switch.lookup.while.body.i.i.i_crit_edge:         ; preds = %switch.lookup
  br label %while.body.i.i.i

switch.lookup.if.end4.i.i_crit_edge:              ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i.i

while.body.i.i.i:                                 ; preds = %while.body.i.i.i.while.body.i.i.i_crit_edge, %switch.lookup.while.body.i.i.i_crit_edge
  %cnt.035.i.i.i = phi i32 [ %inc.i.i.i, %while.body.i.i.i.while.body.i.i.i_crit_edge ], [ 0, %switch.lookup.while.body.i.i.i_crit_edge ]
  tail call void @msleep(i32 noundef 100) #16
  %45 = ptrtoint ptr %hw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hw.i.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i29.i.i.i)
  %47 = ptrtoint ptr %base.addr.i29.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %46, ptr %base.addr.i29.i.i.i, align 4
  %base.addr.i29.i.i.i.0.base.addr.i29.i.i.i.0.base.addr.i29.i.i.0.base.addr.i29.i.i.0.base.addr.i29.i.0.base.addr.i29.i.0.base.addr.i29.0.base.addr.i29.0.base.addr.0.base.addr.0.base.addr.0..i30.i.i.i = load volatile ptr, ptr %base.addr.i29.i.i.i, align 4
  %add.ptr.i31.i.i.i = getelementptr i8, ptr %base.addr.i29.i.i.i.0.base.addr.i29.i.i.i.0.base.addr.i29.i.i.0.base.addr.i29.i.i.0.base.addr.i29.i.0.base.addr.i29.i.0.base.addr.i29.0.base.addr.i29.0.base.addr.0.base.addr.0.base.addr.0..i30.i.i.i, i32 %switch.load
  %48 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i31.i.i.i) #16, !srcloc !1461
  %49 = lshr i32 %48, 24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i29.i.i.i)
  %inc.i.i.i = add nuw nsw i32 %cnt.035.i.i.i, 1
  %and.i.i.i = and i32 %49, %shl.i.i.i
  %shr.i.i.i = lshr i32 %and.i.i.i, %switch.load19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr.i.i.i)
  %tobool.not.i.i.i = icmp ne i32 %shr.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 349, i32 %cnt.035.i.i.i)
  %cmp.i.i.i = icmp ult i32 %cnt.035.i.i.i, 349
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i, i1 %cmp.i.i.i, i1 false
  br i1 %or.cond.i.i.i, label %while.body.i.i.i.while.body.i.i.i_crit_edge, label %while.end.i.i.i

while.body.i.i.i.while.body.i.i.i_crit_edge:      ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i.i.i

while.end.i.i.i:                                  ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 348, i32 %cnt.035.i.i.i)
  %phi.cmp.i.i.i = icmp ugt i32 %cnt.035.i.i.i, 348
  br i1 %phi.cmp.i.i.i, label %do.end12.i.i.i, label %while.end.i.i.i.if.end4.i.i_crit_edge

while.end.i.i.i.if.end4.i.i_crit_edge:            ; preds = %while.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i.i

do.end12.i.i.i:                                   ; preds = %while.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %50 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hdev, align 8
  %dev14.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 44
  %52 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %reset_type.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev14.i.i.i, ptr noundef nonnull @.str.374, i32 noundef %53) #20
  br label %err_reset.i.i

if.end4.i.i:                                      ; preds = %while.end.i.i.i.if.end4.i.i_crit_edge, %switch.lookup.if.end4.i.i_crit_edge
  %call5.i.i = tail call fastcc i32 @hclge_reset_rebuild(ptr noundef %hdev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i22.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i22.i, label %if.end4.i.i.if.end.i_crit_edge, label %if.end4.i.i.err_reset.i.i_crit_edge

if.end4.i.i.err_reset.i.i_crit_edge:              ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_reset.i.i

if.end4.i.i.if.end.i_crit_edge:                   ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

err_reset.i.i:                                    ; preds = %if.end4.i.i.err_reset.i.i_crit_edge, %do.end12.i.i.i, %do.end.i.i.i, %if.then.i.err_reset.i.i_crit_edge
  %54 = ptrtoint ptr %reset_pending.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %reset_pending.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool.not.i17.i.i = icmp eq i32 %55, 0
  br i1 %tobool.not.i17.i.i, label %if.else.i.i.i, label %do.end.i19.i.i

do.end.i19.i.i:                                   ; preds = %err_reset.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %56 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hdev, align 8
  %dev.i18.i.i = getelementptr inbounds %struct.pci_dev, ptr %57, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i18.i.i, ptr noundef nonnull @.str.433, i32 noundef %55) #20
  br label %if.then10.i.i

if.else.i.i.i:                                    ; preds = %err_reset.i.i
  %hw.i20.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %58 = ptrtoint ptr %hw.i20.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %hw.i20.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i16.i.i)
  %60 = ptrtoint ptr %base.addr.i.i16.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %59, ptr %base.addr.i.i16.i.i, align 4
  %base.addr.i.i16.i.i.0.base.addr.i.i16.i.i.0.base.addr.i.i16.i.0.base.addr.i.i16.i.0.base.addr.i.i16.0.base.addr.i.i16.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i21.i.i = load volatile ptr, ptr %base.addr.i.i16.i.i, align 4
  %add.ptr.i.i22.i.i = getelementptr i8, ptr %base.addr.i.i16.i.i.0.base.addr.i.i16.i.i.0.base.addr.i.i16.i.0.base.addr.i.i16.i.0.base.addr.i.i16.0.base.addr.i.i16.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i21.i.i, i32 133120
  %61 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i22.i.i) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i16.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 536870912, i32 %61)
  %tobool3.not.i.i.i = icmp ult i32 %61, 536870912
  br i1 %tobool3.not.i.i.i, label %if.else9.i.i.i, label %do.end6.i.i.i

do.end6.i.i.i:                                    ; preds = %if.else.i.i.i
  %62 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %hdev, align 8
  %dev8.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %63, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev8.i.i.i, ptr noundef nonnull @.str.436) #20
  %64 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %reset_type.i, align 4
  %66 = zext i32 %65 to i64
  call void @__sanitizer_cov_trace_switch(i64 %66, ptr @__sancov_gen_cov_switch_values.787)
  switch i32 %65, label %do.end6.i.i.i.if.end.i_crit_edge [
    i32 7, label %do.end6.i.i.i.if.end.i.i.i.i_crit_edge
    i32 6, label %sw.bb1.i.i.i.i
  ]

do.end6.i.i.i.if.end.i.i.i.i_crit_edge:           ; preds = %do.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i.i

do.end6.i.i.i.if.end.i_crit_edge:                 ; preds = %do.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

sw.bb1.i.i.i.i:                                   ; preds = %do.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %sw.bb1.i.i.i.i, %do.end6.i.i.i.if.end.i.i.i.i_crit_edge
  %clearval.0.ph.i.i.i.i = phi i32 [ 536870912, %sw.bb1.i.i.i.i ], [ -2147483648, %do.end6.i.i.i.if.end.i.i.i.i_crit_edge ]
  %ae_dev.i.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %67 = ptrtoint ptr %ae_dev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ae_dev.i.i.i.i, align 4
  %dev_version.i.i.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %68, i32 0, i32 6
  %69 = ptrtoint ptr %dev_version.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %dev_version.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %70)
  %cmp.i.i.i.i = icmp ult i32 %70, 33
  br i1 %cmp.i.i.i.i, label %if.then2.i.i.i.i, label %if.end.i.i.i.i.if.end4.i.i.i.i_crit_edge

if.end.i.i.i.i.if.end4.i.i.i.i_crit_edge:         ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i.i.i.i

if.then2.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %71 = ptrtoint ptr %hw.i20.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %hw.i20.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %72, i32 132864
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i.i.i.i, i32 %clearval.0.ph.i.i.i.i) #16, !srcloc !1459
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %if.then2.i.i.i.i, %if.end.i.i.i.i.if.end4.i.i.i.i_crit_edge
  %misc_vector.i.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %73 = ptrtoint ptr %misc_vector.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %misc_vector.i.i.i.i, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %74, i32 16777216) #16, !srcloc !1459
  br label %if.end.i

if.else9.i.i.i:                                   ; preds = %if.else.i.i.i
  %reset_fail_cnt.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 13, i32 7
  %75 = ptrtoint ptr %reset_fail_cnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %reset_fail_cnt.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %76)
  %cmp.i23.i.i = icmp ult i32 %76, 5
  br i1 %cmp.i23.i.i, label %if.then10.i.i.i, label %if.end21.i.i.i

if.then10.i.i.i:                                  ; preds = %if.else9.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %inc.i24.i.i = add nuw nsw i32 %76, 1
  %77 = ptrtoint ptr %reset_fail_cnt.i.i.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %inc.i24.i.i, ptr %reset_fail_cnt.i.i.i, align 4
  %78 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %reset_type.i, align 4
  tail call void @_set_bit(i32 noundef %79, ptr noundef %reset_pending.i) #16
  %80 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %hdev, align 8
  %dev17.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  %82 = ptrtoint ptr %reset_fail_cnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %reset_fail_cnt.i.i.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev17.i.i.i, ptr noundef nonnull @.str.439, i32 noundef %83) #20
  br label %if.then10.i.i

if.end21.i.i.i:                                   ; preds = %if.else9.i.i.i
  %84 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %reset_type.i, align 4
  %86 = zext i32 %85 to i64
  call void @__sanitizer_cov_trace_switch(i64 %86, ptr @__sancov_gen_cov_switch_values.788)
  switch i32 %85, label %if.end21.i.i.i.hclge_clear_reset_cause.exit55.i.i.i_crit_edge [
    i32 7, label %if.end21.i.i.i.if.end.i49.i.i.i_crit_edge
    i32 6, label %sw.bb1.i44.i.i.i
  ]

if.end21.i.i.i.if.end.i49.i.i.i_crit_edge:        ; preds = %if.end21.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i49.i.i.i

if.end21.i.i.i.hclge_clear_reset_cause.exit55.i.i.i_crit_edge: ; preds = %if.end21.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_clear_reset_cause.exit55.i.i.i

sw.bb1.i44.i.i.i:                                 ; preds = %if.end21.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i49.i.i.i

if.end.i49.i.i.i:                                 ; preds = %sw.bb1.i44.i.i.i, %if.end21.i.i.i.if.end.i49.i.i.i_crit_edge
  %clearval.0.ph.i45.i.i.i = phi i32 [ 536870912, %sw.bb1.i44.i.i.i ], [ -2147483648, %if.end21.i.i.i.if.end.i49.i.i.i_crit_edge ]
  %ae_dev.i46.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %87 = ptrtoint ptr %ae_dev.i46.i.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %ae_dev.i46.i.i.i, align 4
  %dev_version.i47.i.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %88, i32 0, i32 6
  %89 = ptrtoint ptr %dev_version.i47.i.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %dev_version.i47.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %90)
  %cmp.i48.i.i.i = icmp ult i32 %90, 33
  br i1 %cmp.i48.i.i.i, label %if.then2.i52.i.i.i, label %if.end.i49.i.i.i.if.end4.i54.i.i.i_crit_edge

if.end.i49.i.i.i.if.end4.i54.i.i.i_crit_edge:     ; preds = %if.end.i49.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i54.i.i.i

if.then2.i52.i.i.i:                               ; preds = %if.end.i49.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %91 = ptrtoint ptr %hw.i20.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %hw.i20.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i.i51.i.i.i = getelementptr i8, ptr %92, i32 132864
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i51.i.i.i, i32 %clearval.0.ph.i45.i.i.i) #16, !srcloc !1459
  br label %if.end4.i54.i.i.i

if.end4.i54.i.i.i:                                ; preds = %if.then2.i52.i.i.i, %if.end.i49.i.i.i.if.end4.i54.i.i.i_crit_edge
  %misc_vector.i53.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %93 = ptrtoint ptr %misc_vector.i53.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %misc_vector.i53.i.i.i, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %94, i32 16777216) #16, !srcloc !1459
  br label %hclge_clear_reset_cause.exit55.i.i.i

hclge_clear_reset_cause.exit55.i.i.i:             ; preds = %if.end4.i54.i.i.i, %if.end21.i.i.i.hclge_clear_reset_cause.exit55.i.i.i_crit_edge
  %95 = ptrtoint ptr %hw.i20.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %hw.i20.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i.i.i.i)
  %97 = ptrtoint ptr %base.addr.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %96, ptr %base.addr.i.i.i.i.i, align 4
  %base.addr.i.i.i.i.i.0.base.addr.i.i.i.i.i.0.base.addr.i.i.i.i.0.base.addr.i.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i.i.i = load volatile ptr, ptr %base.addr.i.i.i.i.i, align 4
  %add.ptr.i.i57.i.i.i = getelementptr i8, ptr %base.addr.i.i.i.i.i.0.base.addr.i.i.i.i.i.0.base.addr.i.i.i.i.0.base.addr.i.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i.i.i, i32 159752
  %98 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i57.i.i.i) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i.i.i.i)
  %99 = or i32 %98, 256
  %100 = ptrtoint ptr %hw.i20.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %hw.i20.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i8.i.i.i.i = getelementptr i8, ptr %101, i32 159752
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i8.i.i.i.i, i32 %99) #16, !srcloc !1459
  %102 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %hdev, align 8
  %dev25.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %103, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev25.i.i.i, ptr noundef nonnull @.str.442) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %104 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %104, i32 noundef 3520, i32 noundef 1024) #21
  %tobool.not.i.i.i.i = icmp eq ptr %call7.i.i.i.i.i.i, null
  br i1 %tobool.not.i.i.i.i, label %hclge_clear_reset_cause.exit55.i.i.i.hclge_show_rst_info.exit.i.i.i_crit_edge, label %if.end.i58.i.i.i

hclge_clear_reset_cause.exit55.i.i.i.hclge_show_rst_info.exit.i.i.i_crit_edge: ; preds = %hclge_clear_reset_cause.exit55.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_show_rst_info.exit.i.i.i

if.end.i58.i.i.i:                                 ; preds = %hclge_clear_reset_cause.exit55.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i.i.i.i = tail call i32 @hclge_dbg_dump_rst_info(ptr noundef %hdev, ptr noundef nonnull %call7.i.i.i.i.i.i, i32 noundef 1024) #16
  %105 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %hdev, align 8
  %dev.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %106, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i.i.i, ptr noundef nonnull @.str.444, ptr noundef nonnull %call7.i.i.i.i.i.i) #20
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i.i.i.i) #16
  br label %hclge_show_rst_info.exit.i.i.i

hclge_show_rst_info.exit.i.i.i:                   ; preds = %if.end.i58.i.i.i, %hclge_clear_reset_cause.exit55.i.i.i.hclge_show_rst_info.exit.i.i.i_crit_edge
  tail call void @_set_bit(i32 noundef 14, ptr noundef %state) #16
  br label %if.end.i

if.then10.i.i:                                    ; preds = %if.then10.i.i.i, %do.end.i19.i.i
  %107 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %state, align 4
  %109 = and i32 %108, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %109)
  %tobool.not.i28.i.i = icmp eq i32 %109, 0
  br i1 %tobool.not.i28.i.i, label %land.lhs.true.i.i.i, label %if.then10.i.i.if.end.i_crit_edge

if.then10.i.i.if.end.i_crit_edge:                 ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i.i.i:                              ; preds = %if.then10.i.i
  %110 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %state, align 4
  %112 = and i32 %111, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %112)
  %tobool3.not.i29.i.i = icmp eq i32 %112, 0
  br i1 %tobool3.not.i29.i.i, label %land.lhs.true.i.i.i.if.end.i_crit_edge, label %land.lhs.true4.i.i.i

land.lhs.true.i.i.i.if.end.i_crit_edge:           ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true4.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %call6.i.i.i = tail call i32 @_test_and_set_bit(i32 noundef 7, ptr noundef %state) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %call6.i.i.i, 0
  br i1 %tobool7.not.i.i.i, label %if.then.i.i.i, label %land.lhs.true4.i.i.i.if.end.i_crit_edge

land.lhs.true4.i.i.i.if.end.i_crit_edge:          ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i.i.i:                                    ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %113 = load volatile i32, ptr @jiffies, align 128
  %114 = ptrtoint ptr %last_rst_scheduled to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 %113, ptr %last_rst_scheduled, align 8
  %115 = load ptr, ptr @hclge_wq, align 4
  %service_task.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 48
  %call.i.i.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %115, ptr noundef %service_task.i.i.i, i32 noundef 0) #16
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i.i.i, %land.lhs.true4.i.i.i.if.end.i_crit_edge, %land.lhs.true.i.i.i.if.end.i_crit_edge, %if.then10.i.i.if.end.i_crit_edge, %hclge_show_rst_info.exit.i.i.i, %if.end4.i.i.i.i, %do.end6.i.i.i.if.end.i_crit_edge, %if.end4.i.i.if.end.i_crit_edge, %hclge_get_reset_level.exit.i.if.end.i_crit_edge
  %reset_request.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 11
  %116 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %priv.i.i, align 4
  %118 = ptrtoint ptr %reset_request.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %reset_request.i, align 4
  %120 = and i32 %119, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %120)
  %tobool.not.i24.i = icmp eq i32 %120, 0
  br i1 %tobool.not.i24.i, label %if.else.i27.i, label %if.then.i25.i

if.then.i25.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %reset_request.i) #16
  br label %if.end14.sink.split.sink.split.i33.i

if.else.i27.i:                                    ; preds = %if.end.i
  %121 = ptrtoint ptr %reset_request.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile i32, ptr %reset_request.i, align 4
  %123 = and i32 %122, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %tobool2.not.i26.i = icmp eq i32 %123, 0
  br i1 %tobool2.not.i26.i, label %if.else4.i29.i, label %if.else.i27.i.if.end14.sink.split.sink.split.i33.i_crit_edge

if.else.i27.i.if.end14.sink.split.sink.split.i33.i_crit_edge: ; preds = %if.else.i27.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.sink.split.i33.i

if.else4.i29.i:                                   ; preds = %if.else.i27.i
  %124 = ptrtoint ptr %reset_request.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %reset_request.i, align 4
  %126 = and i32 %125, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %126)
  %tobool6.not.i28.i = icmp eq i32 %126, 0
  br i1 %tobool6.not.i28.i, label %if.else8.i31.i, label %if.else4.i29.i.if.end14.sink.split.i36.i_crit_edge

if.else4.i29.i.if.end14.sink.split.i36.i_crit_edge: ; preds = %if.else4.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i36.i

if.else8.i31.i:                                   ; preds = %if.else4.i29.i
  %127 = ptrtoint ptr %reset_request.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %reset_request.i, align 4
  %129 = and i32 %128, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %129)
  %tobool10.not.i30.i = icmp eq i32 %129, 0
  br i1 %tobool10.not.i30.i, label %if.else8.i31.i.hclge_get_reset_level.exit43.i_crit_edge, label %if.else8.i31.i.if.end14.sink.split.i36.i_crit_edge

if.else8.i31.i.if.end14.sink.split.i36.i_crit_edge: ; preds = %if.else8.i31.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i36.i

if.else8.i31.i.hclge_get_reset_level.exit43.i_crit_edge: ; preds = %if.else8.i31.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_reset_level.exit43.i

if.end14.sink.split.sink.split.i33.i:             ; preds = %if.else.i27.i.if.end14.sink.split.sink.split.i33.i_crit_edge, %if.then.i25.i
  %rst_level.0.ph.ph.i32.i = phi i32 [ 7, %if.then.i25.i ], [ 6, %if.else.i27.i.if.end14.sink.split.sink.split.i33.i_crit_edge ]
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %reset_request.i) #16
  br label %if.end14.sink.split.i36.i

if.end14.sink.split.i36.i:                        ; preds = %if.end14.sink.split.sink.split.i33.i, %if.else8.i31.i.if.end14.sink.split.i36.i_crit_edge, %if.else4.i29.i.if.end14.sink.split.i36.i_crit_edge
  %.sink.i34.i = phi i32 [ 5, %if.else4.i29.i.if.end14.sink.split.i36.i_crit_edge ], [ 4, %if.else8.i31.i.if.end14.sink.split.i36.i_crit_edge ], [ 5, %if.end14.sink.split.sink.split.i33.i ]
  %rst_level.0.ph.i35.i = phi i32 [ 5, %if.else4.i29.i.if.end14.sink.split.i36.i_crit_edge ], [ 4, %if.else8.i31.i.if.end14.sink.split.i36.i_crit_edge ], [ %rst_level.0.ph.ph.i32.i, %if.end14.sink.split.sink.split.i33.i ]
  tail call void @_clear_bit(i32 noundef %.sink.i34.i, ptr noundef %reset_request.i) #16
  br label %hclge_get_reset_level.exit43.i

hclge_get_reset_level.exit43.i:                   ; preds = %if.end14.sink.split.i36.i, %if.else8.i31.i.hclge_get_reset_level.exit43.i_crit_edge
  %rst_level.0.i37.i = phi i32 [ 8, %if.else8.i31.i.hclge_get_reset_level.exit43.i_crit_edge ], [ %rst_level.0.ph.i35.i, %if.end14.sink.split.i36.i ]
  %reset_type.i38.i = getelementptr inbounds %struct.hclge_dev, ptr %117, i32 0, i32 8
  %130 = ptrtoint ptr %reset_type.i38.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %reset_type.i38.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %131)
  %cmp.not.i39.i = icmp ne i32 %131, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %rst_level.0.i37.i, i32 %131)
  %cmp16.i40.i = icmp ult i32 %rst_level.0.i37.i, %131
  %or.cond.i41.i = and i1 %cmp.not.i39.i, %cmp16.i40.i
  %retval.0.i42.i = select i1 %or.cond.i41.i, i32 8, i32 %rst_level.0.i37.i
  %132 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 %retval.0.i42.i, ptr %reset_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %retval.0.i42.i)
  %cmp6.not.i = icmp eq i32 %retval.0.i42.i, 8
  br i1 %cmp6.not.i, label %hclge_get_reset_level.exit43.i.hclge_reset_subtask.exit_crit_edge, label %if.then7.i

hclge_get_reset_level.exit43.i.hclge_reset_subtask.exit_crit_edge: ; preds = %hclge_get_reset_level.exit43.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_subtask.exit

if.then7.i:                                       ; preds = %hclge_get_reset_level.exit43.i
  %vport.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %133 = ptrtoint ptr %vport.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %vport.i.i, align 4
  %nic.i.i = getelementptr inbounds %struct.hclge_vport, ptr %134, i32 0, i32 13
  %135 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %hdev, align 8
  %137 = ptrtoint ptr %nic.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %nic.i.i, align 8
  %tobool.not.i.i.i45.i = icmp eq ptr %138, null
  br i1 %tobool.not.i.i.i45.i, label %if.then7.i.hclge_get_vport.exit.i.i.i_crit_edge, label %if.else.i.i.i.i

if.then7.i.hclge_get_vport.exit.i.i.i_crit_edge:  ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i.i.i = getelementptr inbounds %struct.hnae3_client, ptr %138, i32 0, i32 2
  %139 = ptrtoint ptr %type.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %type.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %140)
  %cmp.i.i.i46.i = icmp eq i32 %140, 1
  %..i.i.i.i = select i1 %cmp.i.i.i46.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i.i.i

hclge_get_vport.exit.i.i.i:                       ; preds = %if.else.i.i.i.i, %if.then7.i.hclge_get_vport.exit.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ -560, %if.then7.i.hclge_get_vport.exit.i.i.i_crit_edge ], [ %..i.i.i.i, %if.else.i.i.i.i ]
  %add.ptr9.i.i.i.i = getelementptr i8, ptr %nic.i.i, i32 %.sink.i.i.i.i
  %back.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i.i.i, i32 0, i32 12
  %141 = ptrtoint ptr %back.i.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %back.i.i.i, align 4
  %hw.i.i47.i = getelementptr inbounds %struct.hclge_dev, ptr %142, i32 0, i32 2
  %143 = ptrtoint ptr %hw.i.i47.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %hw.i.i47.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i.i44.i)
  %145 = ptrtoint ptr %base.addr.i.i.i44.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store ptr %144, ptr %base.addr.i.i.i44.i, align 4
  %base.addr.i.i.i44.i.0.base.addr.i.i.i44.i.0.base.addr.i.i.i44.0.base.addr.i.i.i44.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i48.i = load volatile ptr, ptr %base.addr.i.i.i44.i, align 4
  %add.ptr.i.i.i49.i = getelementptr i8, ptr %base.addr.i.i.i44.i.0.base.addr.i.i.i44.i.0.base.addr.i.i.i44.0.base.addr.i.i.i44.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i48.i, i32 133632
  %146 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i49.i) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i.i44.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %146)
  %tobool.not.i.i50.i = icmp eq i32 %146, 0
  br i1 %tobool.not.i.i50.i, label %hclge_get_hw_reset_stat.exit.i.i, label %hclge_get_vport.exit.i.i.i.do.end.i.i_crit_edge

hclge_get_vport.exit.i.i.i.do.end.i.i_crit_edge:  ; preds = %hclge_get_vport.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i.i

hclge_get_hw_reset_stat.exit.i.i:                 ; preds = %hclge_get_vport.exit.i.i.i
  %147 = ptrtoint ptr %hw.i.i47.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %hw.i.i47.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i9.i.i.i)
  %149 = ptrtoint ptr %base.addr.i9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store ptr %148, ptr %base.addr.i9.i.i.i, align 4
  %base.addr.i9.i.i.i.0.base.addr.i9.i.i.i.0.base.addr.i9.i.i.0.base.addr.i9.i.i.0.base.addr.i9.i.0.base.addr.i9.i.0.base.addr.i9.0.base.addr.i9.0.base.addr.0.base.addr.0.base.addr.0..i10.i.i.i = load volatile ptr, ptr %base.addr.i9.i.i.i, align 4
  %add.ptr.i11.i.i.i = getelementptr i8, ptr %base.addr.i9.i.i.i.0.base.addr.i9.i.i.i.0.base.addr.i9.i.i.0.base.addr.i9.i.i.0.base.addr.i9.i.0.base.addr.i9.i.0.base.addr.i9.0.base.addr.i9.0.base.addr.0.base.addr.0.base.addr.0..i10.i.i.i, i32 134144
  %150 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i11.i.i.i) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i9.i.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %150)
  %tobool7.i.not.i.i = icmp eq i32 %150, 0
  br i1 %tobool7.i.not.i.i, label %if.end.i52.i, label %hclge_get_hw_reset_stat.exit.i.i.do.end.i.i_crit_edge

hclge_get_hw_reset_stat.exit.i.i.do.end.i.i_crit_edge: ; preds = %hclge_get_hw_reset_stat.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %hclge_get_hw_reset_stat.exit.i.i.do.end.i.i_crit_edge, %hclge_get_vport.exit.i.i.i.do.end.i.i_crit_edge
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %136, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.446) #20
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %151 = ptrtoint ptr %hw.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %hw.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i.i)
  %153 = ptrtoint ptr %base.addr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store ptr %152, ptr %base.addr.i.i.i, align 4
  %base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i = load volatile ptr, ptr %base.addr.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i, i32 134144
  %154 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #16, !srcloc !1461
  %155 = tail call i32 @llvm.bswap.i32(i32 %154) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i.i)
  %156 = ptrtoint ptr %hw.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %hw.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i76.i.i)
  %158 = ptrtoint ptr %base.addr.i76.i.i to i32
  call void @__asan_store4_noabort(i32 %158)
  store ptr %157, ptr %base.addr.i76.i.i, align 4
  %base.addr.i76.i.i.0.base.addr.i76.i.i.0.base.addr.i76.i.0.base.addr.i76.i.0.base.addr.i76.0.base.addr.i76.0.base.addr.0.base.addr.0.base.addr.0..i77.i.i = load volatile ptr, ptr %base.addr.i76.i.i, align 4
  %add.ptr.i78.i.i = getelementptr i8, ptr %base.addr.i76.i.i.0.base.addr.i76.i.i.0.base.addr.i76.i.0.base.addr.i76.i.0.base.addr.i76.0.base.addr.i76.0.base.addr.0.base.addr.0.base.addr.0..i77.i.i, i32 133632
  %159 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i78.i.i) #16, !srcloc !1461
  %160 = tail call i32 @llvm.bswap.i32(i32 %159) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i76.i.i)
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.449, i32 noundef %155, i32 noundef %160) #20
  br label %hclge_reset_subtask.exit

if.end.i52.i:                                     ; preds = %hclge_get_hw_reset_stat.exit.i.i
  %161 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %reset_type.i, align 4
  %163 = zext i32 %162 to i64
  call void @__sanitizer_cov_trace_switch(i64 %163, ptr @__sancov_gen_cov_switch_values.789)
  switch i32 %162, label %do.end50.i.i [
    i32 7, label %do.end14.i.i
    i32 6, label %do.end29.i.i
    i32 5, label %do.end46.i.i
  ]

do.end14.i.i:                                     ; preds = %if.end.i52.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev15.i.i = getelementptr inbounds %struct.pci_dev, ptr %136, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev15.i.i, ptr noundef nonnull @.str.452) #20
  %hw16.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %164 = ptrtoint ptr %hw16.i.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %hw16.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i79.i.i)
  %166 = ptrtoint ptr %base.addr.i79.i.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store ptr %165, ptr %base.addr.i79.i.i, align 4
  %base.addr.i79.i.i.0.base.addr.i79.i.i.0.base.addr.i79.i.0.base.addr.i79.i.0.base.addr.i79.0.base.addr.i79.0.base.addr.0.base.addr.0.base.addr.0..i80.i.i = load volatile ptr, ptr %base.addr.i79.i.i, align 4
  %add.ptr.i81.i.i = getelementptr i8, ptr %base.addr.i79.i.i.0.base.addr.i79.i.i.0.base.addr.i79.i.0.base.addr.i79.i.0.base.addr.i79.0.base.addr.i79.0.base.addr.0.base.addr.0.base.addr.0..i80.i.i, i32 132608
  %167 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i81.i.i) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i79.i.i)
  %168 = or i32 %167, -2147483648
  %169 = ptrtoint ptr %hw16.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %hw16.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i82.i.i = getelementptr i8, ptr %170, i32 132608
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i82.i.i, i32 %168) #16, !srcloc !1459
  br label %hclge_reset_subtask.exit

do.end29.i.i:                                     ; preds = %if.end.i52.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev30.i.i = getelementptr inbounds %struct.pci_dev, ptr %136, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev30.i.i, ptr noundef nonnull @.str.455) #20
  %hw31.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %171 = ptrtoint ptr %hw31.i.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %hw31.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i83.i.i)
  %173 = ptrtoint ptr %base.addr.i83.i.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store ptr %172, ptr %base.addr.i83.i.i, align 4
  %base.addr.i83.i.i.0.base.addr.i83.i.i.0.base.addr.i83.i.0.base.addr.i83.i.0.base.addr.i83.0.base.addr.i83.0.base.addr.0.base.addr.0.base.addr.0..i84.i.i = load volatile ptr, ptr %base.addr.i83.i.i, align 4
  %add.ptr.i85.i.i = getelementptr i8, ptr %base.addr.i83.i.i.0.base.addr.i83.i.i.0.base.addr.i83.i.0.base.addr.i83.i.0.base.addr.i83.0.base.addr.i83.0.base.addr.0.base.addr.0.base.addr.0..i84.i.i, i32 133632
  %174 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i85.i.i) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i83.i.i)
  %175 = or i32 %174, 16777216
  %176 = ptrtoint ptr %hw31.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %hw31.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i86.i.i = getelementptr i8, ptr %177, i32 133632
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i86.i.i, i32 %175) #16, !srcloc !1459
  br label %hclge_reset_subtask.exit

do.end46.i.i:                                     ; preds = %if.end.i52.i
  %dev47.i.i = getelementptr inbounds %struct.pci_dev, ptr %136, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev47.i.i, ptr noundef nonnull @.str.458) #20
  tail call void @_set_bit(i32 noundef 5, ptr noundef %reset_pending.i) #16
  %178 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load volatile i32, ptr %state, align 4
  %180 = and i32 %179, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %180)
  %tobool.not.i87.i.i = icmp eq i32 %180, 0
  br i1 %tobool.not.i87.i.i, label %land.lhs.true.i.i55.i, label %do.end46.i.i.hclge_reset_subtask.exit_crit_edge

do.end46.i.i.hclge_reset_subtask.exit_crit_edge:  ; preds = %do.end46.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_subtask.exit

land.lhs.true.i.i55.i:                            ; preds = %do.end46.i.i
  %181 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load volatile i32, ptr %state, align 4
  %183 = and i32 %182, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %183)
  %tobool3.not.i.i54.i = icmp eq i32 %183, 0
  br i1 %tobool3.not.i.i54.i, label %land.lhs.true.i.i55.i.hclge_reset_subtask.exit_crit_edge, label %land.lhs.true4.i.i58.i

land.lhs.true.i.i55.i.hclge_reset_subtask.exit_crit_edge: ; preds = %land.lhs.true.i.i55.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_subtask.exit

land.lhs.true4.i.i58.i:                           ; preds = %land.lhs.true.i.i55.i
  %call6.i.i56.i = tail call i32 @_test_and_set_bit(i32 noundef 7, ptr noundef %state) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i56.i)
  %tobool7.not.i.i57.i = icmp eq i32 %call6.i.i56.i, 0
  br i1 %tobool7.not.i.i57.i, label %if.then.i.i62.i, label %land.lhs.true4.i.i58.i.hclge_reset_subtask.exit_crit_edge

land.lhs.true4.i.i58.i.hclge_reset_subtask.exit_crit_edge: ; preds = %land.lhs.true4.i.i58.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_subtask.exit

if.then.i.i62.i:                                  ; preds = %land.lhs.true4.i.i58.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %184 = load volatile i32, ptr @jiffies, align 128
  %185 = ptrtoint ptr %last_rst_scheduled to i32
  call void @__asan_store4_noabort(i32 %185)
  store i32 %184, ptr %last_rst_scheduled, align 8
  %186 = load ptr, ptr @hclge_wq, align 4
  %service_task.i.i60.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 48
  %call.i.i.i61.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %186, ptr noundef %service_task.i.i60.i, i32 noundef 0) #16
  br label %hclge_reset_subtask.exit

do.end50.i.i:                                     ; preds = %if.end.i52.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev51.i.i = getelementptr inbounds %struct.pci_dev, ptr %136, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev51.i.i, ptr noundef nonnull @.str.461, i32 noundef %162) #20
  br label %hclge_reset_subtask.exit

hclge_reset_subtask.exit:                         ; preds = %do.end50.i.i, %if.then.i.i62.i, %land.lhs.true4.i.i58.i.hclge_reset_subtask.exit_crit_edge, %land.lhs.true.i.i55.i.hclge_reset_subtask.exit_crit_edge, %do.end46.i.i.hclge_reset_subtask.exit_crit_edge, %do.end29.i.i, %do.end14.i.i, %do.end.i.i, %hclge_get_reset_level.exit43.i.hclge_reset_subtask.exit_crit_edge
  %187 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_store4_noabort(i32 %187)
  store i32 8, ptr %reset_type.i, align 4
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #16
  tail call void @up(ptr noundef %reset_sem) #16
  br label %return

return:                                           ; preds = %hclge_reset_subtask.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_mailbox_service_task(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %call = tail call i32 @_test_and_clear_bit(i32 noundef 9, ptr noundef %state) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %comm_state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 0, i32 3
  %0 = ptrtoint ptr %comm_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %comm_state, align 4
  %and1.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool3.not = icmp eq i32 %and1.i, 0
  br i1 %tobool3.not, label %lor.lhs.false4, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %call6 = tail call i32 @_test_and_set_bit(i32 noundef 10, ptr noundef %state) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end, label %lor.lhs.false4.return_crit_edge

lor.lhs.false4.return_crit_edge:                  ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %lor.lhs.false4
  %last_mbx_scheduled = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 73
  %2 = ptrtoint ptr %last_mbx_scheduled to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %last_mbx_scheduled, align 4
  %add = add i32 %3, 50
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %do.end, label %if.end.if.end13_crit_edge

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %7 = load volatile i32, ptr @jiffies, align 128
  %sub10 = sub i32 %7, %3
  %call11 = tail call i32 @jiffies_to_msecs(i32 noundef %sub10) #16
  %8 = tail call i32 @llvm.read_register.i32(metadata !1442) #16
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.463, i32 noundef %call11, i32 noundef %11) #20
  br label %if.end13

if.end13:                                         ; preds = %do.end, %if.end.if.end13_crit_edge
  tail call void @hclge_mbx_handler(ptr noundef %hdev) #16
  tail call void @_clear_bit(i32 noundef 10, ptr noundef %state) #16
  br label %return

return:                                           ; preds = %if.end13, %lor.lhs.false4.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @hclge_find_error_source(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_handle_error_info_log(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_handle_mac_tnl(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_handle_err_reset_request(ptr nocapture noundef readonly %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdev, align 8
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %hw_err_reset_req = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %hw_err_reset_req to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %hw_err_reset_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %priv.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 8
  %6 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i, align 4
  %8 = ptrtoint ptr %hw_err_reset_req to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %hw_err_reset_req, align 4
  %10 = and i32 %9, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %hw_err_reset_req) #16
  br label %if.end14.sink.split.sink.split.i

if.else.i:                                        ; preds = %if.then
  %11 = ptrtoint ptr %hw_err_reset_req to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %hw_err_reset_req, align 4
  %13 = and i32 %12, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool2.not.i = icmp eq i32 %13, 0
  br i1 %tobool2.not.i, label %if.else4.i, label %if.else.i.if.end14.sink.split.sink.split.i_crit_edge

if.else.i.if.end14.sink.split.sink.split.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.sink.split.i

if.else4.i:                                       ; preds = %if.else.i
  %14 = ptrtoint ptr %hw_err_reset_req to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %hw_err_reset_req, align 4
  %16 = and i32 %15, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool6.not.i = icmp eq i32 %16, 0
  br i1 %tobool6.not.i, label %if.else8.i, label %if.else4.i.if.end14.sink.split.i_crit_edge

if.else4.i.if.end14.sink.split.i_crit_edge:       ; preds = %if.else4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i

if.else8.i:                                       ; preds = %if.else4.i
  %17 = ptrtoint ptr %hw_err_reset_req to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %hw_err_reset_req, align 4
  %19 = and i32 %18, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool10.not.i = icmp eq i32 %19, 0
  br i1 %tobool10.not.i, label %if.else8.i.hclge_get_reset_level.exit_crit_edge, label %if.else8.i.if.end14.sink.split.i_crit_edge

if.else8.i.if.end14.sink.split.i_crit_edge:       ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i

if.else8.i.hclge_get_reset_level.exit_crit_edge:  ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_reset_level.exit

if.end14.sink.split.sink.split.i:                 ; preds = %if.else.i.if.end14.sink.split.sink.split.i_crit_edge, %if.then.i
  %rst_level.0.ph.ph.i = phi i32 [ 7, %if.then.i ], [ 6, %if.else.i.if.end14.sink.split.sink.split.i_crit_edge ]
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %hw_err_reset_req) #16
  br label %if.end14.sink.split.i

if.end14.sink.split.i:                            ; preds = %if.end14.sink.split.sink.split.i, %if.else8.i.if.end14.sink.split.i_crit_edge, %if.else4.i.if.end14.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 5, %if.else4.i.if.end14.sink.split.i_crit_edge ], [ 4, %if.else8.i.if.end14.sink.split.i_crit_edge ], [ 5, %if.end14.sink.split.sink.split.i ]
  %rst_level.0.ph.i = phi i32 [ 5, %if.else4.i.if.end14.sink.split.i_crit_edge ], [ 4, %if.else8.i.if.end14.sink.split.i_crit_edge ], [ %rst_level.0.ph.ph.i, %if.end14.sink.split.sink.split.i ]
  tail call void @_clear_bit(i32 noundef %.sink.i, ptr noundef %hw_err_reset_req) #16
  br label %hclge_get_reset_level.exit

hclge_get_reset_level.exit:                       ; preds = %if.end14.sink.split.i, %if.else8.i.hclge_get_reset_level.exit_crit_edge
  %rst_level.0.i = phi i32 [ 8, %if.else8.i.hclge_get_reset_level.exit_crit_edge ], [ %rst_level.0.ph.i, %if.end14.sink.split.i ]
  %reset_type.i = getelementptr inbounds %struct.hclge_dev, ptr %7, i32 0, i32 8
  %20 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %reset_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %21)
  %cmp.not.i = icmp ne i32 %21, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %rst_level.0.i, i32 %21)
  %cmp16.i = icmp ult i32 %rst_level.0.i, %21
  %or.cond.i = and i1 %cmp.not.i, %cmp16.i
  %retval.0.i = select i1 %or.cond.i, i32 8, i32 %rst_level.0.i
  %22 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %priv.i, align 4
  %default_reset_request.i = getelementptr inbounds %struct.hclge_dev, ptr %23, i32 0, i32 10
  tail call void @_set_bit(i32 noundef %retval.0.i, ptr noundef %default_reset_request.i) #16
  br label %if.end

if.end:                                           ; preds = %hclge_get_reset_level.exit, %entry.if.end_crit_edge
  %default_reset_request = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 10
  %24 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %default_reset_request, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool3.not = icmp eq i32 %25, 0
  br i1 %tobool3.not, label %if.end.if.end9_crit_edge, label %land.lhs.true

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

land.lhs.true:                                    ; preds = %if.end
  %ops = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 1
  %26 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ops, align 4
  %reset_event = getelementptr inbounds %struct.hnae3_ae_ops, ptr %27, i32 0, i32 66
  %28 = ptrtoint ptr %reset_event to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %reset_event, align 4
  %tobool4.not = icmp eq ptr %29, null
  br i1 %tobool4.not, label %land.lhs.true.if.end9_crit_edge, label %if.then5

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.then5:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %30 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hdev, align 8
  tail call void %29(ptr noundef %31, ptr noundef null) #16
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %land.lhs.true.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %misc_vector = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  tail call void @arm_heavy_mb() #16
  %32 = ptrtoint ptr %misc_vector to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %misc_vector, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %33, i32 16777216) #16, !srcloc !1459
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_handle_hw_msix_error(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jiffies_to_msecs(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @down(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @up(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_reset_prepare(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %base.addr.i.i45.i = alloca ptr, align 4
  %base.addr.i.i = alloca ptr, align 4
  %base.addr.i.i.i = alloca ptr, align 4
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %reset_cnt = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 13, i32 6
  %0 = ptrtoint ptr %reset_cnt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %reset_cnt, align 8
  %inc = add i32 %1, 1
  store i32 %inc, ptr %reset_cnt, align 8
  %vport.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %2 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vport.i, align 4
  %roce.i = getelementptr inbounds %struct.hclge_vport, ptr %3, i32 0, i32 14
  %roce_client.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 55
  %4 = ptrtoint ptr %roce_client.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %roce_client.i, align 8
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i, align 4
  %8 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  %tobool1.not.i = icmp eq ptr %5, null
  %or.cond.i = select i1 %tobool.not.i, i1 true, i1 %tobool1.not.i
  br i1 %or.cond.i, label %entry.if.end_crit_edge, label %if.end.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i:                                         ; preds = %entry
  %ops.i = getelementptr inbounds %struct.hnae3_client, ptr %5, i32 0, i32 3
  %9 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ops.i, align 4
  %reset_notify.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %reset_notify.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %reset_notify.i, align 4
  %tobool2.not.i = icmp eq ptr %12, null
  br i1 %tobool2.not.i, label %if.end.i.cleanup_crit_edge, label %if.end4.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i:                                        ; preds = %if.end.i
  %call7.i = tail call i32 %12(ptr noundef %roce.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end4.i.if.end_crit_edge, label %do.end.i

if.end4.i.if.end_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end.i:                                         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.354, i32 noundef 1, i32 noundef %call7.i) #20
  br label %cleanup

if.end:                                           ; preds = %if.end4.i.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @rtnl_lock() #16
  %15 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vport.i, align 4
  %nic.i = getelementptr inbounds %struct.hclge_vport, ptr %16, i32 0, i32 13
  %nic_client.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 54
  %17 = ptrtoint ptr %nic_client.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %nic_client.i, align 4
  %19 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %state.i, align 4
  %21 = and i32 %20, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i14 = icmp eq i32 %21, 0
  %tobool1.not.i15 = icmp eq ptr %18, null
  %or.cond.i16 = select i1 %tobool.not.i14, i1 true, i1 %tobool1.not.i15
  br i1 %or.cond.i16, label %if.end.if.end4_crit_edge, label %if.end.i20

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.end.i20:                                       ; preds = %if.end
  %ops.i17 = getelementptr inbounds %struct.hnae3_client, ptr %18, i32 0, i32 3
  %22 = ptrtoint ptr %ops.i17 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops.i17, align 4
  %reset_notify.i18 = getelementptr inbounds %struct.hnae3_client_ops, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %reset_notify.i18 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %reset_notify.i18, align 4
  %tobool2.not.i19 = icmp eq ptr %25, null
  br i1 %tobool2.not.i19, label %if.end.i20.hclge_notify_client.exit_crit_edge, label %if.end4.i23

if.end.i20.hclge_notify_client.exit_crit_edge:    ; preds = %if.end.i20
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_notify_client.exit

if.end4.i23:                                      ; preds = %if.end.i20
  %call7.i21 = tail call i32 %25(ptr noundef %nic.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i21)
  %tobool8.not.i22 = icmp eq i32 %call7.i21, 0
  br i1 %tobool8.not.i22, label %if.end4.i23.if.end4_crit_edge, label %do.end.i25

if.end4.i23.if.end4_crit_edge:                    ; preds = %if.end4.i23
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

do.end.i25:                                       ; preds = %if.end4.i23
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hdev, align 8
  %dev.i24 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i24, ptr noundef nonnull @.str.23, i32 noundef 1, i32 noundef %call7.i21) #20
  br label %hclge_notify_client.exit

hclge_notify_client.exit:                         ; preds = %do.end.i25, %if.end.i20.hclge_notify_client.exit_crit_edge
  %retval.0.i26 = phi i32 [ -95, %if.end.i20.hclge_notify_client.exit_crit_edge ], [ %call7.i21, %do.end.i25 ]
  tail call void @rtnl_unlock() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end4.i23.if.end4_crit_edge, %if.end.if.end4_crit_edge
  tail call void @rtnl_unlock() #16
  %reset_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 8
  %28 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %reset_type.i, align 4
  %30 = zext i32 %29 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.790)
  switch i32 %29, label %if.end4.sw.epilog.i_crit_edge [
    i32 5, label %sw.bb.i
    i32 4, label %sw.bb6.i
    i32 7, label %sw.bb11.i
  ]

if.end4.sw.epilog.i_crit_edge:                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %if.end4
  %call.i = tail call fastcc i32 @hclge_func_reset_notify_vf(ptr noundef %hdev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i27 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i27, label %if.end.i28, label %sw.bb.i.cleanup_crit_edge

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i28:                                       ; preds = %sw.bb.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %31 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %32 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 32, i1 noundef zeroext false) #16
  %33 = ptrtoint ptr %31 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %31, align 4
  %35 = or i8 %34, -128
  store i8 %35, ptr %31, align 4
  %fun_reset_vfid.i.i = getelementptr inbounds %struct.hclge_reset_cmd, ptr %31, i32 0, i32 1
  %36 = ptrtoint ptr %fun_reset_vfid.i.i to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 0, ptr %fun_reset_vfid.i.i, align 1
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end4.i31, label %do.end.i30

do.end.i30:                                       ; preds = %if.end.i28
  call void @__sanitizer_cov_trace_pc() #18
  %37 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %38, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.25, i32 noundef %call.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  %39 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hdev, align 8
  %dev.i29 = getelementptr inbounds %struct.pci_dev, ptr %40, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i29, ptr noundef nonnull @.str.356, i32 noundef %call.i.i.i) #20
  br label %cleanup

if.end4.i31:                                      ; preds = %if.end.i28
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  %comm_state.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 0, i32 3
  call void @_set_bit(i32 noundef 0, ptr noundef %comm_state.i) #16
  %pf_rst_cnt.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 13, i32 2
  %41 = ptrtoint ptr %pf_rst_cnt.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %pf_rst_cnt.i, align 8
  %inc.i = add i32 %42, 1
  store i32 %inc.i, ptr %pf_rst_cnt.i, align 8
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.end4
  %call7.i32 = tail call fastcc i32 @hclge_func_reset_notify_vf(ptr noundef %hdev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i32)
  %tobool8.not.i33 = icmp eq i32 %call7.i32, 0
  br i1 %tobool8.not.i33, label %sw.bb6.i.sw.epilog.i_crit_edge, label %sw.bb6.i.cleanup_crit_edge

sw.bb6.i.cleanup_crit_edge:                       ; preds = %sw.bb6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb6.i.sw.epilog.i_crit_edge:                   ; preds = %sw.bb6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

sw.bb11.i:                                        ; preds = %if.end4
  %hw.i42.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %43 = ptrtoint ptr %hw.i42.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hw.i42.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i.i)
  %45 = ptrtoint ptr %base.addr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %44, ptr %base.addr.i.i.i, align 4
  %base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i = load volatile ptr, ptr %base.addr.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i, i32 132608
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #16, !srcloc !1461
  %47 = tail call i32 @llvm.bswap.i32(i32 %46) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i.i)
  %and.i.i = and i32 %47, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i43.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i43.i, label %sw.bb11.i.if.end.i.i_crit_edge, label %if.then.i.i

sw.bb11.i.if.end.i.i_crit_edge:                   ; preds = %sw.bb11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %sw.bb11.i
  %48 = ptrtoint ptr %nic_client.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %nic_client.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %49, null
  br i1 %tobool.not.i.i.i, label %if.then.i.i.hclge_report_hw_error.exit.i.i_crit_edge, label %lor.lhs.false.i.i.i

if.then.i.i.hclge_report_hw_error.exit.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_report_hw_error.exit.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.then.i.i
  %ops.i.i.i = getelementptr inbounds %struct.hnae3_client, ptr %49, i32 0, i32 3
  %50 = ptrtoint ptr %ops.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ops.i.i.i, align 4
  %process_hw_error.i.i.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %process_hw_error.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %process_hw_error.i.i.i, align 4
  %tobool1.not.i.i.i = icmp eq ptr %53, null
  br i1 %tobool1.not.i.i.i, label %lor.lhs.false.i.i.i.hclge_report_hw_error.exit.i.i_crit_edge, label %lor.lhs.false2.i.i.i

lor.lhs.false.i.i.i.hclge_report_hw_error.exit.i.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_report_hw_error.exit.i.i

lor.lhs.false2.i.i.i:                             ; preds = %lor.lhs.false.i.i.i
  %54 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %state.i, align 4
  %56 = and i32 %55, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool3.not.i.i.i = icmp eq i32 %56, 0
  br i1 %tobool3.not.i.i.i, label %lor.lhs.false2.i.i.i.hclge_report_hw_error.exit.i.i_crit_edge, label %if.end.i.i.i

lor.lhs.false2.i.i.i.hclge_report_hw_error.exit.i.i_crit_edge: ; preds = %lor.lhs.false2.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_report_hw_error.exit.i.i

if.end.i.i.i:                                     ; preds = %lor.lhs.false2.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %57 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %vport.i, align 4
  %nic.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %58, i32 0, i32 13
  tail call void %53(ptr noundef %nic.i.i.i, i32 noundef 2) #16
  br label %hclge_report_hw_error.exit.i.i

hclge_report_hw_error.exit.i.i:                   ; preds = %if.end.i.i.i, %lor.lhs.false2.i.i.i.hclge_report_hw_error.exit.i.i_crit_edge, %lor.lhs.false.i.i.i.hclge_report_hw_error.exit.i.i_crit_edge, %if.then.i.i.hclge_report_hw_error.exit.i.i_crit_edge
  %and2.i.i = and i32 %47, -33
  %59 = ptrtoint ptr %hw.i42.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hw.i42.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %61 = tail call i32 @llvm.bswap.i32(i32 %and2.i.i) #16
  %add.ptr.i23.i.i = getelementptr i8, ptr %60, i32 132608
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i23.i.i, i32 %61) #16, !srcloc !1459
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %hclge_report_hw_error.exit.i.i, %sw.bb11.i.if.end.i.i_crit_edge
  %reg_val.0.i.i = phi i32 [ %and2.i.i, %hclge_report_hw_error.exit.i.i ], [ %47, %sw.bb11.i.if.end.i.i_crit_edge ]
  %and6.i.i = and i32 %reg_val.0.i.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i)
  %tobool7.not.i.i = icmp eq i32 %and6.i.i, 0
  br i1 %tobool7.not.i.i, label %if.end.i.i.hclge_handle_imp_error.exit.i_crit_edge, label %if.then8.i.i

if.end.i.i.hclge_handle_imp_error.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_handle_imp_error.exit.i

if.then8.i.i:                                     ; preds = %if.end.i.i
  %62 = ptrtoint ptr %nic_client.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %nic_client.i, align 4
  %tobool.not.i25.i.i = icmp eq ptr %63, null
  br i1 %tobool.not.i25.i.i, label %if.then8.i.i.hclge_report_hw_error.exit36.i.i_crit_edge, label %lor.lhs.false.i29.i.i

if.then8.i.i.hclge_report_hw_error.exit36.i.i_crit_edge: ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_report_hw_error.exit36.i.i

lor.lhs.false.i29.i.i:                            ; preds = %if.then8.i.i
  %ops.i26.i.i = getelementptr inbounds %struct.hnae3_client, ptr %63, i32 0, i32 3
  %64 = ptrtoint ptr %ops.i26.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %ops.i26.i.i, align 4
  %process_hw_error.i27.i.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %65, i32 0, i32 4
  %66 = ptrtoint ptr %process_hw_error.i27.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %process_hw_error.i27.i.i, align 4
  %tobool1.not.i28.i.i = icmp eq ptr %67, null
  br i1 %tobool1.not.i28.i.i, label %lor.lhs.false.i29.i.i.hclge_report_hw_error.exit36.i.i_crit_edge, label %lor.lhs.false2.i32.i.i

lor.lhs.false.i29.i.i.hclge_report_hw_error.exit36.i.i_crit_edge: ; preds = %lor.lhs.false.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_report_hw_error.exit36.i.i

lor.lhs.false2.i32.i.i:                           ; preds = %lor.lhs.false.i29.i.i
  %68 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %state.i, align 4
  %70 = and i32 %69, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool3.not.i31.i.i = icmp eq i32 %70, 0
  br i1 %tobool3.not.i31.i.i, label %lor.lhs.false2.i32.i.i.hclge_report_hw_error.exit36.i.i_crit_edge, label %if.end.i35.i.i

lor.lhs.false2.i32.i.i.hclge_report_hw_error.exit36.i.i_crit_edge: ; preds = %lor.lhs.false2.i32.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_report_hw_error.exit36.i.i

if.end.i35.i.i:                                   ; preds = %lor.lhs.false2.i32.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %71 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %vport.i, align 4
  %nic.i34.i.i = getelementptr inbounds %struct.hclge_vport, ptr %72, i32 0, i32 13
  tail call void %67(ptr noundef %nic.i34.i.i, i32 noundef 1) #16
  br label %hclge_report_hw_error.exit36.i.i

hclge_report_hw_error.exit36.i.i:                 ; preds = %if.end.i35.i.i, %lor.lhs.false2.i32.i.i.hclge_report_hw_error.exit36.i.i_crit_edge, %lor.lhs.false.i29.i.i.hclge_report_hw_error.exit36.i.i_crit_edge, %if.then8.i.i.hclge_report_hw_error.exit36.i.i_crit_edge
  %and9.i.i = and i32 %reg_val.0.i.i, -17
  %73 = ptrtoint ptr %hw.i42.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %hw.i42.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %75 = tail call i32 @llvm.bswap.i32(i32 %and9.i.i) #16
  %add.ptr.i37.i.i = getelementptr i8, ptr %74, i32 132608
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i37.i.i, i32 %75) #16, !srcloc !1459
  br label %hclge_handle_imp_error.exit.i

hclge_handle_imp_error.exit.i:                    ; preds = %hclge_report_hw_error.exit36.i.i, %if.end.i.i.hclge_handle_imp_error.exit.i_crit_edge
  %76 = ptrtoint ptr %hw.i42.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %hw.i42.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i)
  %78 = ptrtoint ptr %base.addr.i.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %77, ptr %base.addr.i.i, align 4
  %base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i = load volatile ptr, ptr %base.addr.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i, i32 132608
  %79 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #16, !srcloc !1461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i)
  %80 = ptrtoint ptr %hw.i42.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %hw.i42.i, align 8
  %82 = or i32 %79, 33554432
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  tail call void @arm_heavy_mb() #16
  %add.ptr.i44.i = getelementptr i8, ptr %81, i32 132608
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i44.i, i32 %82) #16, !srcloc !1459
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %hclge_handle_imp_error.exit.i, %sw.bb6.i.sw.epilog.i_crit_edge, %if.end4.i31, %if.end4.sw.epilog.i_crit_edge
  call void @msleep(i32 noundef 100) #16
  %hw.i46.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %83 = ptrtoint ptr %hw.i46.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %hw.i46.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i45.i)
  %85 = ptrtoint ptr %base.addr.i.i45.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %84, ptr %base.addr.i.i45.i, align 4
  %base.addr.i.i45.i.0.base.addr.i.i45.i.0.base.addr.i.i45.0.base.addr.i.i45.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i47.i = load volatile ptr, ptr %base.addr.i.i45.i, align 4
  %add.ptr.i.i48.i = getelementptr i8, ptr %base.addr.i.i45.i.0.base.addr.i.i45.i.0.base.addr.i.i45.0.base.addr.i.i45.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i47.i, i32 159752
  %86 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i48.i) #16, !srcloc !1461
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i45.i)
  %87 = or i32 %86, 256
  %88 = ptrtoint ptr %hw.i46.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %hw.i46.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  call void @arm_heavy_mb() #16
  %add.ptr.i8.i.i = getelementptr i8, ptr %89, i32 159752
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i8.i.i, i32 %87) #16, !srcloc !1459
  %90 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %hdev, align 8
  %dev22.i = getelementptr inbounds %struct.pci_dev, ptr %91, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev22.i, ptr noundef nonnull @.str.359) #20
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog.i, %sw.bb6.i.cleanup_crit_edge, %do.end.i30, %sw.bb.i.cleanup_crit_edge, %hclge_notify_client.exit, %do.end.i, %if.end.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i26, %hclge_notify_client.exit ], [ -95, %if.end.i.cleanup_crit_edge ], [ %call7.i, %do.end.i ], [ 0, %sw.epilog.i ], [ %call.i.i.i, %do.end.i30 ], [ %call.i, %sw.bb.i.cleanup_crit_edge ], [ %call7.i32, %sw.bb6.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_reset_rebuild(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %base.addr.i.i.i = alloca ptr, align 4
  %desc.i.i = alloca %struct.hclge_desc, align 4
  %desc.i.i.i74 = alloca %struct.hclge_desc, align 4
  %desc.i218.i.i = alloca %struct.hclge_desc, align 4
  %desc.i.i.i = alloca %struct.hclge_desc, align 4
  %cmd.i.i.i = alloca %struct.ethtool_link_ksettings, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %rst_stats = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 13
  %hw_reset_done_cnt = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 13, i32 1
  %0 = ptrtoint ptr %hw_reset_done_cnt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %hw_reset_done_cnt, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %hw_reset_done_cnt, align 4
  %vport.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %2 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vport.i, align 4
  %roce.i = getelementptr inbounds %struct.hclge_vport, ptr %3, i32 0, i32 14
  %roce_client.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 55
  %4 = ptrtoint ptr %roce_client.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %roce_client.i, align 8
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i, align 4
  %8 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  %tobool1.not.i = icmp eq ptr %5, null
  %or.cond.i = select i1 %tobool.not.i, i1 true, i1 %tobool1.not.i
  br i1 %or.cond.i, label %entry.if.end_crit_edge, label %if.end.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i:                                         ; preds = %entry
  %ops.i = getelementptr inbounds %struct.hnae3_client, ptr %5, i32 0, i32 3
  %9 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ops.i, align 4
  %reset_notify.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %reset_notify.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %reset_notify.i, align 4
  %tobool2.not.i = icmp eq ptr %12, null
  br i1 %tobool2.not.i, label %if.end.i.cleanup_crit_edge, label %if.end4.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i:                                        ; preds = %if.end.i
  %call7.i = tail call i32 %12(ptr noundef %roce.i, i32 noundef 3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end4.i.if.end_crit_edge, label %do.end.i

if.end4.i.if.end_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end.i:                                         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.354, i32 noundef 3, i32 noundef %call7.i) #20
  br label %cleanup

if.end:                                           ; preds = %if.end4.i.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @rtnl_lock() #16
  %15 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vport.i, align 4
  %nic.i.i = getelementptr inbounds %struct.hclge_vport, ptr %16, i32 0, i32 13
  %nic_client.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 54
  %17 = ptrtoint ptr %nic_client.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %nic_client.i.i, align 4
  %19 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %state.i, align 4
  %21 = and i32 %20, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i.i = icmp eq i32 %21, 0
  %tobool1.not.i.i = icmp eq ptr %18, null
  %or.cond.i.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool1.not.i.i
  br i1 %or.cond.i.i, label %if.end.if.end.i50_crit_edge, label %if.end.i.i

if.end.if.end.i50_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i50

if.end.i.i:                                       ; preds = %if.end
  %ops.i.i = getelementptr inbounds %struct.hnae3_client, ptr %18, i32 0, i32 3
  %22 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops.i.i, align 4
  %reset_notify.i.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %reset_notify.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %reset_notify.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %25, null
  br i1 %tobool2.not.i.i, label %if.end.i.i.hclge_reset_stack.exit.thread_crit_edge, label %if.end4.i.i

if.end.i.i.hclge_reset_stack.exit.thread_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_stack.exit.thread

if.end4.i.i:                                      ; preds = %if.end.i.i
  %call7.i.i = tail call i32 %25(ptr noundef %nic.i.i, i32 noundef 3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end4.i.i.if.end.i50_crit_edge, label %do.end.i.i

if.end4.i.i.if.end.i50_crit_edge:                 ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i50

do.end.i.i:                                       ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.23, i32 noundef 3, i32 noundef %call7.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end.i50:                                       ; preds = %if.end4.i.i.if.end.i50_crit_edge, %if.end.if.end.i50_crit_edge
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %28 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ae_dev.i, align 4
  %priv.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %29, i32 0, i32 8
  %30 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %priv.i.i, align 4
  %32 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %29, align 4
  %state.i11.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state.i11.i) #16
  %mac_stats.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 4
  %34 = call ptr @memset(ptr %mac_stats.i.i.i, i32 0, i32 840)
  %reset_type.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 8
  %35 = ptrtoint ptr %reset_type.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %reset_type.i.i, align 4
  %37 = and i32 %36, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %37)
  %switch.i.i = icmp eq i32 %37, 6
  br i1 %switch.i.i, label %if.then.i.i, label %if.end.i50.if.end.i13.i_crit_edge

if.end.i50.if.end.i13.i_crit_edge:                ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i13.i

if.then.i.i:                                      ; preds = %if.end.i50
  %vlan_table.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 63
  %vport_config_block.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 65
  %num_alloc_vport.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 24
  %38 = call ptr @memset(ptr %vlan_table.i.i, i32 0, i32 131104)
  %39 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %num_alloc_vport.i.i, align 2
  %conv.i.i = zext i16 %40 to i32
  tail call void @__bitmap_set(ptr noundef %vport_config_block.i.i, i32 noundef 0, i32 noundef %conv.i.i) #16
  %41 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %num_alloc_vport.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %42)
  %cmp21.not.i.i.i = icmp eq i16 %42, 0
  br i1 %cmp21.not.i.i.i, label %if.then.i.i.hclge_reset_umv_space.exit.i.i_crit_edge, label %for.body.lr.ph.i.i.i

if.then.i.i.hclge_reset_umv_space.exit.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_umv_space.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %if.then.i.i
  %vport2.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 52
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %for.body.lr.ph.i.i.i
  %i.022.i.i.i = phi i32 [ 0, %for.body.lr.ph.i.i.i ], [ %inc.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ]
  %43 = ptrtoint ptr %vport2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %vport2.i.i.i, align 4
  %used_umv_num.i.i.i = getelementptr %struct.hclge_vport, ptr %44, i32 %i.022.i.i.i, i32 10
  %45 = ptrtoint ptr %used_umv_num.i.i.i to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 0, ptr %used_umv_num.i.i.i, align 8
  %inc.i.i.i = add nuw nsw i32 %i.022.i.i.i, 1
  %46 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %num_alloc_vport.i.i, align 2
  %conv.i.i.i = zext i16 %47 to i32
  %cmp.i217.i.i = icmp ult i32 %inc.i.i.i, %conv.i.i.i
  br i1 %cmp.i217.i.i, label %for.body.i.i.i.for.body.i.i.i_crit_edge, label %for.body.i.i.i.hclge_reset_umv_space.exit.i.i_crit_edge

for.body.i.i.i.hclge_reset_umv_space.exit.i.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_umv_space.exit.i.i

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.i

hclge_reset_umv_space.exit.i.i:                   ; preds = %for.body.i.i.i.hclge_reset_umv_space.exit.i.i_crit_edge, %if.then.i.i.hclge_reset_umv_space.exit.i.i_crit_edge
  %vport_lock.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 61
  tail call void @mutex_lock_nested(ptr noundef %vport_lock.i.i.i, i32 noundef 0) #16
  %priv_umv_size.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 80
  %48 = ptrtoint ptr %priv_umv_size.i.i.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %priv_umv_size.i.i.i, align 2
  %max_umv_size.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 79
  %50 = ptrtoint ptr %max_umv_size.i.i.i to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %max_umv_size.i.i.i, align 8
  %conv4.i.i.i = zext i16 %51 to i32
  %52 = ptrtoint ptr %num_alloc_vport.i.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %num_alloc_vport.i.i, align 2
  %conv6.i.i.i = zext i16 %53 to i32
  %add.i.i.i = add nuw nsw i32 %conv6.i.i.i, 1
  %rem.i.i.i = urem i32 %conv4.i.i.i, %add.i.i.i
  %54 = trunc i32 %rem.i.i.i to i16
  %conv8.i.i.i = add i16 %49, %54
  %share_umv_size.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 81
  %55 = ptrtoint ptr %share_umv_size.i.i.i to i32
  call void @__asan_store2_noabort(i32 %55)
  store i16 %conv8.i.i.i, ptr %share_umv_size.i.i.i, align 4
  tail call void @mutex_unlock(ptr noundef %vport_lock.i.i.i) #16
  %used_mc_mac_num.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 82
  %56 = ptrtoint ptr %used_mc_mac_num.i.i.i to i32
  call void @__asan_store2_noabort(i32 %56)
  store i16 0, ptr %used_mc_mac_num.i.i.i, align 2
  br label %if.end.i13.i

if.end.i13.i:                                     ; preds = %hclge_reset_umv_space.exit.i.i, %if.end.i50.if.end.i13.i_crit_edge
  %ae_dev6.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 1
  %57 = ptrtoint ptr %ae_dev6.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %ae_dev6.i.i, align 4
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 2
  %fw_version.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 15
  %reset_pending.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 12
  %59 = ptrtoint ptr %reset_pending.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %reset_pending.i.i, align 4
  %call.i.i = tail call i32 @hclge_comm_cmd_init(ptr noundef %58, ptr noundef %hw.i.i, ptr noundef %fw_version.i.i, i1 noundef zeroext true, i32 noundef %60) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i12.i, label %if.end9.i.i, label %do.end.i15.i

do.end.i15.i:                                     ; preds = %if.end.i13.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i14.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i14.i, ptr noundef nonnull @.str.376) #20
  br label %hclge_reset_stack.exit.thread

if.end9.i.i:                                      ; preds = %if.end.i13.i
  %call10.i.i = tail call fastcc i32 @hclge_map_tqp(ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool11.not.i.i = icmp eq i32 %call10.i.i, 0
  br i1 %tobool11.not.i.i, label %if.end17.i.i, label %do.end15.i.i

do.end15.i.i:                                     ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev16.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev16.i.i, ptr noundef nonnull @.str.379, i32 noundef %call10.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end17.i.i:                                     ; preds = %if.end9.i.i
  %call18.i.i = tail call fastcc i32 @hclge_mac_init(ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i.i)
  %tobool19.not.i.i = icmp eq i32 %call18.i.i, 0
  br i1 %tobool19.not.i.i, label %if.end25.i.i, label %do.end23.i.i

do.end23.i.i:                                     ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev24.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24.i.i, ptr noundef nonnull @.str.180, i32 noundef %call18.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end25.i.i:                                     ; preds = %if.end17.i.i
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %cmd.i.i.i) #16
  %61 = call ptr @memset(ptr %cmd.i.i.i, i32 255, i32 88)
  %62 = ptrtoint ptr %ae_dev6.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %ae_dev6.i.i, align 4
  %caps.i.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %63, i32 0, i32 7
  %64 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %caps.i.i.i, align 4
  %66 = and i32 %65, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool.not.i.i.i = icmp eq i32 %66, 0
  br i1 %tobool.not.i.i.i, label %hclge_tp_port_init.exit.thread.i.i, label %hclge_tp_port_init.exit.i.i

hclge_tp_port_init.exit.thread.i.i:               ; preds = %if.end25.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %cmd.i.i.i) #16
  br label %if.end33.i.i

hclge_tp_port_init.exit.i.i:                      ; preds = %if.end25.i.i
  %autoneg.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 2, i32 1, i32 5
  %67 = ptrtoint ptr %autoneg.i.i.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %autoneg.i.i.i, align 2
  %autoneg1.i.i.i = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd.i.i.i, i32 0, i32 5
  %69 = ptrtoint ptr %autoneg1.i.i.i to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 %68, ptr %autoneg1.i.i.i, align 1
  %speed.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 2, i32 1, i32 9
  %70 = ptrtoint ptr %speed.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %speed.i.i.i, align 4
  %speed5.i.i.i = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd.i.i.i, i32 0, i32 1
  %72 = ptrtoint ptr %speed5.i.i.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %71, ptr %speed5.i.i.i, align 4
  %duplex.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 2, i32 1, i32 6
  %73 = ptrtoint ptr %duplex.i.i.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %duplex.i.i.i, align 1
  %duplex9.i.i.i = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd.i.i.i, i32 0, i32 2
  %75 = ptrtoint ptr %duplex9.i.i.i to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 %74, ptr %duplex9.i.i.i, align 4
  %advertising.i.i.i = getelementptr inbounds %struct.ethtool_link_ksettings, ptr %cmd.i.i.i, i32 0, i32 1, i32 1
  %advertising13.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 2, i32 1, i32 21
  %76 = call ptr @memcpy(ptr %advertising.i.i.i, ptr %advertising13.i.i.i, i32 12)
  %vport.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 52
  %77 = ptrtoint ptr %vport.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %vport.i.i.i, align 4
  %nic.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %78, i32 0, i32 13
  %call15.i.i.i = call i32 @hclge_set_phy_link_ksettings(ptr noundef %nic.i.i.i, ptr noundef nonnull %cmd.i.i.i) #16
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %cmd.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i.i.i)
  %tobool27.not.i.i = icmp eq i32 %call15.i.i.i, 0
  br i1 %tobool27.not.i.i, label %hclge_tp_port_init.exit.i.i.if.end33.i.i_crit_edge, label %do.end31.i.i

hclge_tp_port_init.exit.i.i.if.end33.i.i_crit_edge: ; preds = %hclge_tp_port_init.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33.i.i

do.end31.i.i:                                     ; preds = %hclge_tp_port_init.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev32.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev32.i.i, ptr noundef nonnull @.str.384, i32 noundef %call15.i.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end33.i.i:                                     ; preds = %hclge_tp_port_init.exit.i.i.if.end33.i.i_crit_edge, %hclge_tp_port_init.exit.thread.i.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i.i) #16
  %79 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i.i, i32 0, i32 4
  %80 = call ptr @memset(ptr %desc.i.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i.i, i32 noundef 3073, i1 noundef zeroext false) #16
  %81 = ptrtoint ptr %79 to i32
  call void @__asan_store2_noabort(i32 %81)
  store i16 1, ptr %79, align 4
  %tso_mss_max2.i.i.i = getelementptr inbounds %struct.hclge_cfg_tso_status_cmd, ptr %79, i32 0, i32 1
  %82 = ptrtoint ptr %tso_mss_max2.i.i.i to i32
  call void @__asan_store2_noabort(i32 %82)
  store i16 -15323, ptr %tso_mss_max2.i.i.i, align 2
  %call.i.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i.i, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool35.not.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool35.not.i.i, label %if.end41.i.i, label %do.end39.i.i

do.end39.i.i:                                     ; preds = %if.end33.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev40.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev40.i.i, ptr noundef nonnull @.str.183, i32 noundef %call.i.i.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end41.i.i:                                     ; preds = %if.end33.i.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i218.i.i) #16
  %83 = call ptr @memset(ptr %desc.i218.i.i, i32 255, i32 32)
  %84 = ptrtoint ptr %ae_dev6.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %ae_dev6.i.i, align 4
  %caps.i220.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %85, i32 0, i32 7
  %86 = ptrtoint ptr %caps.i220.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %caps.i220.i.i, align 4
  %88 = and i32 %87, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %88)
  %tobool.not.i221.i.i = icmp eq i32 %88, 0
  br i1 %tobool.not.i221.i.i, label %if.end41.i.i.if.end45.i.i_crit_edge, label %if.end.i224.i.i

if.end41.i.i.if.end45.i.i_crit_edge:              ; preds = %if.end41.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45.i.i

if.end.i224.i.i:                                  ; preds = %if.end41.i.i
  %89 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i218.i.i, i32 0, i32 4
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i218.i.i, i32 noundef 3088, i1 noundef zeroext false) #16
  %gro_en.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 77
  %90 = ptrtoint ptr %gro_en.i.i.i to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %gro_en.i.i.i, align 1, !range !1456
  %92 = ptrtoint ptr %89 to i32
  call void @__asan_store1_noabort(i32 %92)
  store i8 %91, ptr %89, align 4
  %call.i.i223.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i218.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i223.i.i)
  %tobool5.not.i.i.i = icmp eq i32 %call.i.i223.i.i, 0
  br i1 %tobool5.not.i.i.i, label %if.end.i224.i.i.if.end45.i.i_crit_edge, label %hclge_config_gro.exit.i.i

if.end.i224.i.i.if.end45.i.i_crit_edge:           ; preds = %if.end.i224.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45.i.i

hclge_config_gro.exit.i.i:                        ; preds = %if.end.i224.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %93 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %31, align 8
  %dev.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %94, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i, ptr noundef nonnull @.str.318, i32 noundef %call.i.i223.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i218.i.i) #16
  br label %hclge_reset_stack.exit.thread

if.end45.i.i:                                     ; preds = %if.end.i224.i.i.if.end45.i.i_crit_edge, %if.end41.i.i.if.end45.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i218.i.i) #16
  %call46.i.i = call fastcc i32 @hclge_init_vlan_config(ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46.i.i)
  %tobool47.not.i.i = icmp eq i32 %call46.i.i, 0
  br i1 %tobool47.not.i.i, label %if.end53.i.i, label %do.end51.i.i

do.end51.i.i:                                     ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev52.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev52.i.i, ptr noundef nonnull @.str.186, i32 noundef %call46.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end53.i.i:                                     ; preds = %if.end45.i.i
  %call54.i.i = call i32 @hclge_tm_init_hw(ptr noundef %31, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54.i.i)
  %tobool55.not.i.i = icmp eq i32 %call54.i.i, 0
  br i1 %tobool55.not.i.i, label %if.end61.i.i, label %do.end59.i.i

do.end59.i.i:                                     ; preds = %if.end53.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev60.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev60.i.i, ptr noundef nonnull @.str.391, i32 noundef %call54.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end61.i.i:                                     ; preds = %if.end53.i.i
  %call62.i.i = call i32 @hclge_rss_init_hw(ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62.i.i)
  %tobool63.not.i.i = icmp eq i32 %call62.i.i, 0
  br i1 %tobool63.not.i.i, label %if.end69.i.i, label %do.end67.i.i

do.end67.i.i:                                     ; preds = %if.end61.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev68.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev68.i.i, ptr noundef nonnull @.str.195, i32 noundef %call62.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end69.i.i:                                     ; preds = %if.end61.i.i
  %call70.i.i = call fastcc i32 @init_mgr_tbl(ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70.i.i)
  %tobool71.not.i.i = icmp eq i32 %call70.i.i, 0
  br i1 %tobool71.not.i.i, label %if.end77.i.i, label %do.end75.i.i

do.end75.i.i:                                     ; preds = %if.end69.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev76.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev76.i.i, ptr noundef nonnull @.str.396, i32 noundef %call70.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end77.i.i:                                     ; preds = %if.end69.i.i
  %call78.i.i = call fastcc i32 @hclge_init_fd_config(ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78.i.i)
  %tobool79.not.i.i = icmp eq i32 %call78.i.i, 0
  br i1 %tobool79.not.i.i, label %if.end85.i.i, label %do.end83.i.i

do.end83.i.i:                                     ; preds = %if.end77.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev84.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev84.i.i, ptr noundef nonnull @.str.201, i32 noundef %call78.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end85.i.i:                                     ; preds = %if.end77.i.i
  %call86.i.i = call i32 @hclge_ptp_init(ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86.i.i)
  %tobool87.not.i.i = icmp eq i32 %call86.i.i, 0
  br i1 %tobool87.not.i.i, label %if.end89.i.i, label %if.end85.i.i.hclge_reset_stack.exit.thread_crit_edge

if.end85.i.i.hclge_reset_stack.exit.thread_crit_edge: ; preds = %if.end85.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_stack.exit.thread

if.end89.i.i:                                     ; preds = %if.end85.i.i
  %95 = ptrtoint ptr %ae_dev6.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %ae_dev6.i.i, align 4
  %caps.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %96, i32 0, i32 7
  %97 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %caps.i.i, align 4
  %99 = and i32 %98, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %tobool93.not.i.i = icmp eq i32 %99, 0
  br i1 %tobool93.not.i.i, label %if.else.i.i, label %if.then94.i.i

if.then94.i.i:                                    ; preds = %if.end89.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @hclge_handle_occurred_error(ptr noundef %31) #16
  br label %if.end95.i.i

if.else.i.i:                                      ; preds = %if.end89.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @hclge_handle_all_hns_hw_errors(ptr noundef %29) #16
  br label %if.end95.i.i

if.end95.i.i:                                     ; preds = %if.else.i.i, %if.then94.i.i
  %call96.i.i = call i32 @hclge_config_nic_hw_error(ptr noundef %31, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call96.i.i)
  %tobool97.not.i.i = icmp eq i32 %call96.i.i, 0
  br i1 %tobool97.not.i.i, label %if.end103.i.i, label %do.end101.i.i

do.end101.i.i:                                    ; preds = %if.end95.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev102.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev102.i.i, ptr noundef nonnull @.str.401, i32 noundef %call96.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end103.i.i:                                    ; preds = %if.end95.i.i
  %roce_client.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 55
  %100 = ptrtoint ptr %roce_client.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %roce_client.i.i, align 8
  %tobool104.not.i.i = icmp eq ptr %101, null
  br i1 %tobool104.not.i.i, label %if.end103.i.i.if.end114.i.i_crit_edge, label %if.then105.i.i

if.end103.i.i.if.end114.i.i_crit_edge:            ; preds = %if.end103.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end114.i.i

if.then105.i.i:                                   ; preds = %if.end103.i.i
  %call106.i.i = call i32 @hclge_config_rocee_ras_interrupt(ptr noundef %31, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106.i.i)
  %tobool107.not.i.i = icmp eq i32 %call106.i.i, 0
  br i1 %tobool107.not.i.i, label %if.then105.i.i.if.end114.i.i_crit_edge, label %do.end111.i.i

if.then105.i.i.if.end114.i.i_crit_edge:           ; preds = %if.then105.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end114.i.i

do.end111.i.i:                                    ; preds = %if.then105.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev112.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev112.i.i, ptr noundef nonnull @.str.404, i32 noundef %call106.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end114.i.i:                                    ; preds = %if.then105.i.i.if.end114.i.i_crit_edge, %if.end103.i.i.if.end114.i.i_crit_edge
  %num_alloc_vport.i226.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 24
  %102 = ptrtoint ptr %num_alloc_vport.i226.i.i to i32
  call void @__asan_load2_noabort(i32 %102)
  %103 = load i16, ptr %num_alloc_vport.i226.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %103)
  %cmp7.not.i.i.i = icmp eq i16 %103, 0
  br i1 %cmp7.not.i.i.i, label %if.end114.i.i.hclge_reset_vport_state.exit.i.i_crit_edge, label %for.body.preheader.i.i.i

if.end114.i.i.hclge_reset_vport_state.exit.i.i_crit_edge: ; preds = %if.end114.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_vport_state.exit.i.i

for.body.preheader.i.i.i:                         ; preds = %if.end114.i.i
  %vport1.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 52
  %104 = ptrtoint ptr %vport1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %vport1.i.i.i, align 4
  br label %for.body.i230.i.i

for.body.i230.i.i:                                ; preds = %for.body.i230.i.i.for.body.i230.i.i_crit_edge, %for.body.preheader.i.i.i
  %i.09.i.i.i = phi i32 [ %inc.i227.i.i, %for.body.i230.i.i.for.body.i230.i.i_crit_edge ], [ 0, %for.body.preheader.i.i.i ]
  %vport.08.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %for.body.i230.i.i.for.body.i230.i.i_crit_edge ], [ %105, %for.body.preheader.i.i.i ]
  %state.i.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %vport.08.i.i.i, i32 0, i32 15
  call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i.i.i) #16
  %incdec.ptr.i.i.i = getelementptr %struct.hclge_vport, ptr %vport.08.i.i.i, i32 1
  %inc.i227.i.i = add nuw nsw i32 %i.09.i.i.i, 1
  %106 = ptrtoint ptr %num_alloc_vport.i226.i.i to i32
  call void @__asan_load2_noabort(i32 %106)
  %107 = load i16, ptr %num_alloc_vport.i226.i.i, align 2
  %conv.i228.i.i = zext i16 %107 to i32
  %cmp.i229.i.i = icmp ult i32 %inc.i227.i.i, %conv.i228.i.i
  br i1 %cmp.i229.i.i, label %for.body.i230.i.i.for.body.i230.i.i_crit_edge, label %for.body.i230.i.i.hclge_reset_vport_state.exit.i.i_crit_edge

for.body.i230.i.i.hclge_reset_vport_state.exit.i.i_crit_edge: ; preds = %for.body.i230.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_vport_state.exit.i.i

for.body.i230.i.i.for.body.i230.i.i_crit_edge:    ; preds = %for.body.i230.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i230.i.i

hclge_reset_vport_state.exit.i.i:                 ; preds = %for.body.i230.i.i.hclge_reset_vport_state.exit.i.i_crit_edge, %if.end114.i.i.hclge_reset_vport_state.exit.i.i_crit_edge
  %108 = ptrtoint ptr %ae_dev6.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %ae_dev6.i.i, align 4
  %dev_version.i.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %109, i32 0, i32 6
  %110 = ptrtoint ptr %dev_version.i.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %dev_version.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %111)
  %cmp.i232.i.i = icmp ult i32 %111, 33
  br i1 %cmp.i232.i.i, label %hclge_reset_vport_state.exit.i.i.if.end118.i.i_crit_edge, label %if.end.i234.i.i

hclge_reset_vport_state.exit.i.i.if.end118.i.i_crit_edge: ; preds = %hclge_reset_vport_state.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end118.i.i

if.end.i234.i.i:                                  ; preds = %hclge_reset_vport_state.exit.i.i
  %112 = ptrtoint ptr %num_alloc_vport.i226.i.i to i32
  call void @__asan_load2_noabort(i32 %112)
  %113 = load i16, ptr %num_alloc_vport.i226.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %113)
  %cmp225.not.i.i.i = icmp eq i16 %113, 0
  br i1 %cmp225.not.i.i.i, label %if.end.i234.i.i.if.end118.i.i_crit_edge, label %for.body.preheader.i236.i.i

if.end.i234.i.i.if.end118.i.i_crit_edge:          ; preds = %if.end.i234.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end118.i.i

for.body.preheader.i236.i.i:                      ; preds = %if.end.i234.i.i
  %vport1.i235.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 52
  %114 = ptrtoint ptr %vport1.i235.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %vport1.i235.i.i, align 4
  br label %for.body.i238.i.i

for.body.i238.i.i:                                ; preds = %if.end7.i.i.i.for.body.i238.i.i_crit_edge, %for.body.preheader.i236.i.i
  %i.027.i.i.i = phi i32 [ %inc.i240.i.i, %if.end7.i.i.i.for.body.i238.i.i_crit_edge ], [ 0, %for.body.preheader.i236.i.i ]
  %vport.026.i.i.i = phi ptr [ %incdec.ptr.i239.i.i, %if.end7.i.i.i.for.body.i238.i.i_crit_edge ], [ %115, %for.body.preheader.i236.i.i ]
  %vport_id.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %vport.026.i.i.i, i32 0, i32 11
  %116 = ptrtoint ptr %vport_id.i.i.i to i32
  call void @__asan_load2_noabort(i32 %116)
  %117 = load i16, ptr %vport_id.i.i.i, align 2
  %conv4.i237.i.i = zext i16 %117 to i32
  %spoofchk.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %vport.026.i.i.i, i32 0, i32 18, i32 2
  %118 = ptrtoint ptr %spoofchk.i.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %spoofchk.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %119)
  %tobool.i.i.i = icmp ne i32 %119, 0
  %frombool.i.i.i.i.i = zext i1 %tobool.i.i.i to i8
  %call.i.i.i.i.i = call fastcc i32 @hclge_config_switch_param(ptr noundef %31, i32 noundef %conv4.i237.i.i, i8 noundef zeroext %frombool.i.i.i.i.i, i8 noundef zeroext -2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %call.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.i.i.i.i, label %do.end.i.i.i.i

do.end.i.i.i.i:                                   ; preds = %for.body.i238.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv4.i237.i.i.le175 = zext i16 %117 to i32
  %120 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %31, align 8
  %dev.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %121, i32 0, i32 44
  %cond.i.i.i.i = select i1 %tobool.i.i.i, ptr @.str.411, ptr @.str.412
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i.i, ptr noundef nonnull @.str.409, i32 noundef %conv4.i237.i.i.le175, ptr noundef nonnull %cond.i.i.i.i, i32 noundef %call.i.i.i.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end.i.i.i.i:                                   ; preds = %for.body.i238.i.i
  %conv.i.i.i.i.i = trunc i16 %117 to i8
  %call.i29.i.i.i.i = call fastcc i32 @hclge_set_vlan_filter_ctrl(ptr noundef %31, i8 noundef zeroext 0, i8 noundef zeroext 1, i1 noundef zeroext %tobool.i.i.i, i8 noundef zeroext %conv.i.i.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i29.i.i.i.i)
  %tobool5.not.i.i.i.i = icmp eq i32 %call.i29.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i.i, label %if.end7.i.i.i, label %do.end9.i.i.i.i

do.end9.i.i.i.i:                                  ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv4.i237.i.i.le = zext i16 %117 to i32
  %122 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %31, align 8
  %dev11.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %123, i32 0, i32 44
  %cond13.i.i.i.i = select i1 %tobool.i.i.i, ptr @.str.411, ptr @.str.412
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev11.i.i.i.i, ptr noundef nonnull @.str.414, i32 noundef %conv4.i237.i.i.le, ptr noundef nonnull %cond13.i.i.i.i, i32 noundef %call.i29.i.i.i.i) #20
  br label %hclge_reset_stack.exit.thread

if.end7.i.i.i:                                    ; preds = %if.end.i.i.i.i
  %incdec.ptr.i239.i.i = getelementptr %struct.hclge_vport, ptr %vport.026.i.i.i, i32 1
  %inc.i240.i.i = add nuw nsw i32 %i.027.i.i.i, 1
  %124 = ptrtoint ptr %num_alloc_vport.i226.i.i to i32
  call void @__asan_load2_noabort(i32 %124)
  %125 = load i16, ptr %num_alloc_vport.i226.i.i, align 2
  %conv.i241.i.i = zext i16 %125 to i32
  %cmp2.i.i.i = icmp ult i32 %inc.i240.i.i, %conv.i241.i.i
  br i1 %cmp2.i.i.i, label %if.end7.i.i.i.for.body.i238.i.i_crit_edge, label %if.end7.i.i.i.if.end118.i.i_crit_edge

if.end7.i.i.i.if.end118.i.i_crit_edge:            ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end118.i.i

if.end7.i.i.i.for.body.i238.i.i_crit_edge:        ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i238.i.i

if.end118.i.i:                                    ; preds = %if.end7.i.i.i.if.end118.i.i_crit_edge, %if.end.i234.i.i.if.end118.i.i_crit_edge, %hclge_reset_vport_state.exit.i.i.if.end118.i.i_crit_edge
  %vport.i243.i.i = getelementptr inbounds %struct.hclge_dev, ptr %31, i32 0, i32 52
  %126 = ptrtoint ptr %vport.i243.i.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %vport.i243.i.i, align 4
  %nic.i244.i.i = getelementptr inbounds %struct.hclge_vport, ptr %127, i32 0, i32 13
  %128 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %31, align 8
  %call43.i.i.i = call i32 @pci_num_vf(ptr noundef %129) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43.i.i.i)
  %cmp44.i.i.i = icmp sgt i32 %call43.i.i.i, 0
  br i1 %cmp44.i.i.i, label %if.end118.i.i.for.body.i246.i.i_crit_edge, label %if.end118.i.i.if.end4.i51_crit_edge

if.end118.i.i.if.end4.i51_crit_edge:              ; preds = %if.end118.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i51

if.end118.i.i.for.body.i246.i.i_crit_edge:        ; preds = %if.end118.i.i
  br label %for.body.i246.i.i

for.body.i246.i.i:                                ; preds = %for.inc.i.i.i.for.body.i246.i.i_crit_edge, %if.end118.i.i.for.body.i246.i.i_crit_edge
  %vf.045.i.i.i = phi i32 [ %inc.i251.i.i, %for.inc.i.i.i.for.body.i246.i.i_crit_edge ], [ 0, %if.end118.i.i.for.body.i246.i.i_crit_edge ]
  %call2.i.i.i = call fastcc ptr @hclge_get_vf_vport(ptr noundef %31, i32 noundef %vf.045.i.i.i) #16
  %tobool.not.i245.i.i = icmp eq ptr %call2.i.i.i, null
  br i1 %tobool.not.i245.i.i, label %for.body.i246.i.i.hclge_reset_stack.exit.thread_crit_edge, label %if.end.i247.i.i

for.body.i246.i.i.hclge_reset_stack.exit.thread_crit_edge: ; preds = %for.body.i246.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_stack.exit.thread

if.end.i247.i.i:                                  ; preds = %for.body.i246.i.i
  %max_tx_rate.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %call2.i.i.i, i32 0, i32 18, i32 3
  %130 = ptrtoint ptr %max_tx_rate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %max_tx_rate.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %tobool3.not.i.i.i = icmp eq i32 %131, 0
  br i1 %tobool3.not.i.i.i, label %if.end.i247.i.i.for.inc.i.i.i_crit_edge, label %if.end5.i.i.i

if.end.i247.i.i.for.inc.i.i.i_crit_edge:          ; preds = %if.end.i247.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

if.end5.i.i.i:                                    ; preds = %if.end.i247.i.i
  %132 = ptrtoint ptr %nic.i244.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %nic.i244.i.i, align 8
  %tobool.not.i.i.i.i.i = icmp eq ptr %133, null
  br i1 %tobool.not.i.i.i.i.i, label %if.end5.i.i.i.hclge_get_vport.exit.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i

if.end5.i.i.i.hclge_get_vport.exit.i.i.i.i_crit_edge: ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_vport.exit.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i.i.i.i = getelementptr inbounds %struct.hnae3_client, ptr %133, i32 0, i32 2
  %134 = ptrtoint ptr %type.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %type.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %135)
  %cmp.i.i.i.i.i = icmp eq i32 %135, 1
  %..i.i.i.i.i = select i1 %cmp.i.i.i.i.i, i32 -792, i32 -560
  br label %hclge_get_vport.exit.i.i.i.i

hclge_get_vport.exit.i.i.i.i:                     ; preds = %if.else.i.i.i.i.i, %if.end5.i.i.i.hclge_get_vport.exit.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ -560, %if.end5.i.i.i.hclge_get_vport.exit.i.i.i.i_crit_edge ], [ %..i.i.i.i.i, %if.else.i.i.i.i.i ]
  %add.ptr9.i.i.i.i.i = getelementptr i8, ptr %nic.i244.i.i, i32 %.sink.i.i.i.i.i
  %back.i.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %add.ptr9.i.i.i.i.i, i32 0, i32 12
  %136 = ptrtoint ptr %back.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %back.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %cmp1.i.i.i.i.i = icmp slt i32 %131, 0
  br i1 %cmp1.i.i.i.i.i, label %hclge_get_vport.exit.i.i.i.i.hclge_vf_rate_param_check.exit.i.i.i.i_crit_edge, label %lor.lhs.false2.i.i.i.i.i

hclge_get_vport.exit.i.i.i.i.hclge_vf_rate_param_check.exit.i.i.i.i_crit_edge: ; preds = %hclge_get_vport.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_vf_rate_param_check.exit.i.i.i.i

lor.lhs.false2.i.i.i.i.i:                         ; preds = %hclge_get_vport.exit.i.i.i.i
  %max_speed.i.i.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %137, i32 0, i32 2, i32 1, i32 10
  %138 = ptrtoint ptr %max_speed.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %max_speed.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %139, i32 %131)
  %cmp3.i.i.i.i.i = icmp ult i32 %139, %131
  br i1 %cmp3.i.i.i.i.i, label %lor.lhs.false2.i.i.i.i.i.hclge_vf_rate_param_check.exit.i.i.i.i_crit_edge, label %if.end.i.i248.i.i

lor.lhs.false2.i.i.i.i.i.hclge_vf_rate_param_check.exit.i.i.i.i_crit_edge: ; preds = %lor.lhs.false2.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_vf_rate_param_check.exit.i.i.i.i

hclge_vf_rate_param_check.exit.i.i.i.i:           ; preds = %lor.lhs.false2.i.i.i.i.i.hclge_vf_rate_param_check.exit.i.i.i.i_crit_edge, %hclge_get_vport.exit.i.i.i.i.hclge_vf_rate_param_check.exit.i.i.i.i_crit_edge
  %140 = ptrtoint ptr %137 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %137, align 8
  %dev.i.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %141, i32 0, i32 44
  %max_speed6.i.i.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %137, i32 0, i32 2, i32 1, i32 10
  %142 = ptrtoint ptr %max_speed6.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %max_speed6.i.i.i.i.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i.i.i, ptr noundef nonnull @.str.714, i32 noundef 0, i32 noundef %131, i32 noundef %143) #20
  br label %do.end.i250.i.i

if.end.i.i248.i.i:                                ; preds = %lor.lhs.false2.i.i.i.i.i
  %call2.i.i.i.i = call fastcc ptr @hclge_get_vf_vport(ptr noundef %137, i32 noundef %vf.045.i.i.i) #16
  %tobool3.not.i.i.i.i = icmp eq ptr %call2.i.i.i.i, null
  br i1 %tobool3.not.i.i.i.i, label %if.end.i.i248.i.i.do.end.i250.i.i_crit_edge, label %if.end5.i.i.i.i

if.end.i.i248.i.i.do.end.i250.i.i_crit_edge:      ; preds = %if.end.i.i248.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i250.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end.i.i248.i.i
  %call10.i.i.i.i = call i32 @hclge_tm_qs_shaper_cfg(ptr noundef nonnull %call2.i.i.i.i, i32 noundef %131) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i.i.i)
  %tobool11.not.i.i.i.i = icmp eq i32 %call10.i.i.i.i, 0
  br i1 %tobool11.not.i.i.i.i, label %hclge_set_vf_rate.exit.i.i.i, label %if.end5.i.i.i.i.do.end.i250.i.i_crit_edge

if.end5.i.i.i.i.do.end.i250.i.i_crit_edge:        ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i250.i.i

hclge_set_vf_rate.exit.i.i.i:                     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %max_tx_rate15.i.i.i.i = getelementptr inbounds %struct.hclge_vport, ptr %call2.i.i.i.i, i32 0, i32 18, i32 3
  %144 = ptrtoint ptr %max_tx_rate15.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %131, ptr %max_tx_rate15.i.i.i.i, align 4
  br label %for.inc.i.i.i

do.end.i250.i.i:                                  ; preds = %if.end5.i.i.i.i.do.end.i250.i.i_crit_edge, %if.end.i.i248.i.i.do.end.i250.i.i_crit_edge, %hclge_vf_rate_param_check.exit.i.i.i.i
  %retval.0.i.ph.i.i.i = phi i32 [ -22, %hclge_vf_rate_param_check.exit.i.i.i.i ], [ -22, %if.end.i.i248.i.i.do.end.i250.i.i_crit_edge ], [ %call10.i.i.i.i, %if.end5.i.i.i.i.do.end.i250.i.i_crit_edge ]
  %max_tx_rate.i.i.i166 = getelementptr inbounds %struct.hclge_vport, ptr %call2.i.i.i, i32 0, i32 18, i32 3
  %145 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %31, align 8
  %dev.i249.i.i = getelementptr inbounds %struct.pci_dev, ptr %146, i32 0, i32 44
  %147 = ptrtoint ptr %max_tx_rate.i.i.i166 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %max_tx_rate.i.i.i166, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i249.i.i, ptr noundef nonnull @.str.421, i32 noundef %vf.045.i.i.i, i32 noundef %148, i32 noundef %retval.0.i.ph.i.i.i) #20
  br label %hclge_reset_stack.exit.thread

for.inc.i.i.i:                                    ; preds = %hclge_set_vf_rate.exit.i.i.i, %if.end.i247.i.i.for.inc.i.i.i_crit_edge
  %inc.i251.i.i = add nuw nsw i32 %vf.045.i.i.i, 1
  %149 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %31, align 8
  %call.i.i.i = call i32 @pci_num_vf(ptr noundef %150) #16
  %cmp.i252.i.i = icmp slt i32 %inc.i251.i.i, %call.i.i.i
  br i1 %cmp.i252.i.i, label %for.inc.i.i.i.for.body.i246.i.i_crit_edge, label %for.inc.i.i.i.if.end4.i51_crit_edge

for.inc.i.i.i.if.end4.i51_crit_edge:              ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i51

for.inc.i.i.i.for.body.i246.i.i_crit_edge:        ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i246.i.i

if.end4.i51:                                      ; preds = %for.inc.i.i.i.if.end4.i51_crit_edge, %if.end118.i.i.if.end4.i51_crit_edge
  call fastcc void @hclge_init_rxd_adv_layout(ptr noundef %31) #16
  %dev126.i.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev126.i.i, ptr noundef nonnull @.str.407, ptr noundef nonnull @.str.38) #20
  %151 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %vport.i, align 4
  %nic.i18.i = getelementptr inbounds %struct.hclge_vport, ptr %152, i32 0, i32 13
  %153 = ptrtoint ptr %nic_client.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %nic_client.i.i, align 4
  %155 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load volatile i32, ptr %state.i, align 4
  %157 = and i32 %156, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %157)
  %tobool.not.i21.i = icmp eq i32 %157, 0
  %tobool1.not.i22.i = icmp eq ptr %154, null
  %or.cond.i23.i = select i1 %tobool.not.i21.i, i1 true, i1 %tobool1.not.i22.i
  br i1 %or.cond.i23.i, label %if.end4.i51.if.end4_crit_edge, label %if.end.i27.i

if.end4.i51.if.end4_crit_edge:                    ; preds = %if.end4.i51
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.end.i27.i:                                     ; preds = %if.end4.i51
  %ops.i24.i = getelementptr inbounds %struct.hnae3_client, ptr %154, i32 0, i32 3
  %158 = ptrtoint ptr %ops.i24.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %ops.i24.i, align 4
  %reset_notify.i25.i = getelementptr inbounds %struct.hnae3_client_ops, ptr %159, i32 0, i32 3
  %160 = ptrtoint ptr %reset_notify.i25.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %reset_notify.i25.i, align 4
  %tobool2.not.i26.i = icmp eq ptr %161, null
  br i1 %tobool2.not.i26.i, label %if.end.i27.i.hclge_reset_stack.exit.thread_crit_edge, label %if.end4.i30.i

if.end.i27.i.hclge_reset_stack.exit.thread_crit_edge: ; preds = %if.end.i27.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_stack.exit.thread

if.end4.i30.i:                                    ; preds = %if.end.i27.i
  %call7.i28.i = call i32 %161(ptr noundef %nic.i18.i, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i28.i)
  %tobool8.not.i29.i = icmp eq i32 %call7.i28.i, 0
  br i1 %tobool8.not.i29.i, label %if.end4.i30.i.if.end4_crit_edge, label %do.end.i32.i

if.end4.i30.i.if.end4_crit_edge:                  ; preds = %if.end4.i30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

do.end.i32.i:                                     ; preds = %if.end4.i30.i
  call void @__sanitizer_cov_trace_pc() #18
  %162 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %hdev, align 8
  %dev.i31.i = getelementptr inbounds %struct.pci_dev, ptr %163, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i31.i, ptr noundef nonnull @.str.23, i32 noundef 2, i32 noundef %call7.i28.i) #20
  br label %hclge_reset_stack.exit.thread

hclge_reset_stack.exit.thread:                    ; preds = %do.end.i32.i, %if.end.i27.i.hclge_reset_stack.exit.thread_crit_edge, %do.end.i250.i.i, %for.body.i246.i.i.hclge_reset_stack.exit.thread_crit_edge, %do.end9.i.i.i.i, %do.end.i.i.i.i, %do.end111.i.i, %do.end101.i.i, %if.end85.i.i.hclge_reset_stack.exit.thread_crit_edge, %do.end83.i.i, %do.end75.i.i, %do.end67.i.i, %do.end59.i.i, %do.end51.i.i, %hclge_config_gro.exit.i.i, %do.end39.i.i, %do.end31.i.i, %do.end23.i.i, %do.end15.i.i, %do.end.i15.i, %do.end.i.i, %if.end.i.i.hclge_reset_stack.exit.thread_crit_edge
  %retval.0.i52.ph = phi i32 [ %call.i.i, %do.end.i15.i ], [ %call10.i.i, %do.end15.i.i ], [ %call18.i.i, %do.end23.i.i ], [ %call15.i.i.i, %do.end31.i.i ], [ %call.i.i.i.i, %do.end39.i.i ], [ %call46.i.i, %do.end51.i.i ], [ %call54.i.i, %do.end59.i.i ], [ %call62.i.i, %do.end67.i.i ], [ %call70.i.i, %do.end75.i.i ], [ %call78.i.i, %do.end83.i.i ], [ %call96.i.i, %do.end101.i.i ], [ %call106.i.i, %do.end111.i.i ], [ %call.i.i223.i.i, %hclge_config_gro.exit.i.i ], [ %call86.i.i, %if.end85.i.i.hclge_reset_stack.exit.thread_crit_edge ], [ %call.i29.i.i.i.i, %do.end9.i.i.i.i ], [ %call.i.i.i.i.i, %do.end.i.i.i.i ], [ %retval.0.i.ph.i.i.i, %do.end.i250.i.i ], [ %call7.i28.i, %do.end.i32.i ], [ -95, %if.end.i27.i.hclge_reset_stack.exit.thread_crit_edge ], [ %call7.i.i, %do.end.i.i ], [ -95, %if.end.i.i.hclge_reset_stack.exit.thread_crit_edge ], [ -22, %for.body.i246.i.i.hclge_reset_stack.exit.thread_crit_edge ]
  call void @rtnl_unlock() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end4.i30.i.if.end4_crit_edge, %if.end4.i51.if.end4_crit_edge
  call void @rtnl_unlock() #16
  %reset_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 8
  %164 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %reset_type.i, align 4
  %166 = zext i32 %165 to i64
  call void @__sanitizer_cov_trace_switch(i64 %166, ptr @__sancov_gen_cov_switch_values.791)
  switch i32 %165, label %if.end4.hclge_clear_reset_cause.exit_crit_edge [
    i32 7, label %if.end4.if.end.i54_crit_edge
    i32 6, label %sw.bb1.i
  ]

if.end4.if.end.i54_crit_edge:                     ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i54

if.end4.hclge_clear_reset_cause.exit_crit_edge:   ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_clear_reset_cause.exit

sw.bb1.i:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i54

if.end.i54:                                       ; preds = %sw.bb1.i, %if.end4.if.end.i54_crit_edge
  %clearval.0.ph.i = phi i32 [ 536870912, %sw.bb1.i ], [ -2147483648, %if.end4.if.end.i54_crit_edge ]
  %167 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %ae_dev.i, align 4
  %dev_version.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %168, i32 0, i32 6
  %169 = ptrtoint ptr %dev_version.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %dev_version.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %170)
  %cmp.i = icmp ult i32 %170, 33
  br i1 %cmp.i, label %if.then2.i, label %if.end.i54.if.end4.i55_crit_edge

if.end.i54.if.end4.i55_crit_edge:                 ; preds = %if.end.i54
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i55

if.then2.i:                                       ; preds = %if.end.i54
  call void @__sanitizer_cov_trace_pc() #18
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %171 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %hw.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  call void @arm_heavy_mb() #16
  %add.ptr.i.i = getelementptr i8, ptr %172, i32 132864
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %clearval.0.ph.i) #16, !srcloc !1459
  br label %if.end4.i55

if.end4.i55:                                      ; preds = %if.then2.i, %if.end.i54.if.end4.i55_crit_edge
  %misc_vector.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 3
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1458
  call void @arm_heavy_mb() #16
  %173 = ptrtoint ptr %misc_vector.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %misc_vector.i, align 4
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %174, i32 16777216) #16, !srcloc !1459
  br label %hclge_clear_reset_cause.exit

hclge_clear_reset_cause.exit:                     ; preds = %if.end4.i55, %if.end4.hclge_clear_reset_cause.exit_crit_edge
  %175 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %vport.i, align 4
  %roce.i57 = getelementptr inbounds %struct.hclge_vport, ptr %176, i32 0, i32 14
  %177 = ptrtoint ptr %roce_client.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %roce_client.i, align 8
  %179 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load volatile i32, ptr %state.i, align 4
  %181 = and i32 %180, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %181)
  %tobool.not.i60 = icmp eq i32 %181, 0
  %tobool1.not.i61 = icmp eq ptr %178, null
  %or.cond.i62 = select i1 %tobool.not.i60, i1 true, i1 %tobool1.not.i61
  br i1 %or.cond.i62, label %hclge_clear_reset_cause.exit.if.end9_crit_edge, label %if.end.i66

hclge_clear_reset_cause.exit.if.end9_crit_edge:   ; preds = %hclge_clear_reset_cause.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.end.i66:                                       ; preds = %hclge_clear_reset_cause.exit
  %ops.i63 = getelementptr inbounds %struct.hnae3_client, ptr %178, i32 0, i32 3
  %182 = ptrtoint ptr %ops.i63 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %ops.i63, align 4
  %reset_notify.i64 = getelementptr inbounds %struct.hnae3_client_ops, ptr %183, i32 0, i32 3
  %184 = ptrtoint ptr %reset_notify.i64 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %reset_notify.i64, align 4
  %tobool2.not.i65 = icmp eq ptr %185, null
  br i1 %tobool2.not.i65, label %if.end.i66.land.lhs.true_crit_edge, label %if.end4.i69

if.end.i66.land.lhs.true_crit_edge:               ; preds = %if.end.i66
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

if.end4.i69:                                      ; preds = %if.end.i66
  %call7.i67 = call i32 %185(ptr noundef %roce.i57, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i67)
  %tobool8.not.i68 = icmp eq i32 %call7.i67, 0
  br i1 %tobool8.not.i68, label %if.end4.i69.if.end9_crit_edge, label %do.end.i71

if.end4.i69.if.end9_crit_edge:                    ; preds = %if.end4.i69
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

do.end.i71:                                       ; preds = %if.end4.i69
  call void @__sanitizer_cov_trace_pc() #18
  %186 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %hdev, align 8
  %dev.i70 = getelementptr inbounds %struct.pci_dev, ptr %187, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i70, ptr noundef nonnull @.str.354, i32 noundef 2, i32 noundef %call7.i67) #20
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %do.end.i71, %if.end.i66.land.lhs.true_crit_edge
  %retval.0.i72 = phi i32 [ -95, %if.end.i66.land.lhs.true_crit_edge ], [ %call7.i67, %do.end.i71 ]
  %reset_fail_cnt = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 13, i32 7
  %188 = ptrtoint ptr %reset_fail_cnt to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %reset_fail_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %189)
  %cmp = icmp ult i32 %189, 4
  br i1 %cmp, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end9_crit_edge

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %land.lhs.true.if.end9_crit_edge, %if.end4.i69.if.end9_crit_edge, %hclge_clear_reset_cause.exit.if.end9_crit_edge
  %190 = ptrtoint ptr %reset_type.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %reset_type.i, align 4
  %192 = zext i32 %191 to i64
  call void @__sanitizer_cov_trace_switch(i64 %192, ptr @__sancov_gen_cov_switch_values.792)
  switch i32 %191, label %if.end9.hclge_reset_prepare_up.exit_crit_edge [
    i32 5, label %if.end9.sw.bb.i_crit_edge
    i32 4, label %if.end9.sw.bb.i_crit_edge245
    i32 6, label %if.end9.sw.bb1.i82_crit_edge
    i32 7, label %if.end9.sw.bb1.i82_crit_edge246
  ]

if.end9.sw.bb1.i82_crit_edge246:                  ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i82

if.end9.sw.bb1.i82_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i82

if.end9.sw.bb.i_crit_edge245:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

if.end9.sw.bb.i_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

if.end9.hclge_reset_prepare_up.exit_crit_edge:    ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_prepare_up.exit

sw.bb.i:                                          ; preds = %if.end9.sw.bb.i_crit_edge, %if.end9.sw.bb.i_crit_edge245
  %num_alloc_vport.i.i76 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 24
  %193 = ptrtoint ptr %num_alloc_vport.i.i76 to i32
  call void @__asan_load2_noabort(i32 %193)
  %194 = load i16, ptr %num_alloc_vport.i.i76, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %194)
  %cmp49.i.i = icmp ugt i16 %194, 1
  br i1 %cmp49.i.i, label %for.body.lr.ph.i.i, label %sw.bb.i.hclge_reset_prepare_up.exit_crit_edge

sw.bb.i.hclge_reset_prepare_up.exit_crit_edge:    ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_prepare_up.exit

for.body.lr.ph.i.i:                               ; preds = %sw.bb.i
  %195 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i.i74, i32 0, i32 4
  %hw.i41.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.050.i.i = phi i32 [ 1, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %196 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %vport.i, align 4
  %vport_id.i.i = getelementptr %struct.hclge_vport, ptr %197, i32 %i.050.i.i, i32 11
  %198 = ptrtoint ptr %vport_id.i.i to i32
  call void @__asan_load2_noabort(i32 %198)
  %199 = load i16, ptr %vport_id.i.i, align 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i.i74) #16
  %200 = call ptr @memset(ptr %desc.i.i.i74, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i.i74, i32 noundef 33, i1 noundef zeroext false) #16
  %conv.i.i.i77 = trunc i16 %199 to i8
  %201 = ptrtoint ptr %195 to i32
  call void @__asan_store1_noabort(i32 %201)
  store i8 %conv.i.i.i77, ptr %195, align 4
  %call.i.i42.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i41.i.i, ptr noundef nonnull %desc.i.i.i74, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i.i74) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i42.i.i)
  %tobool4.not43.i.i = icmp eq i32 %call.i.i42.i.i, 0
  br i1 %tobool4.not43.i.i, label %for.inc.i.i, label %cleanup.i.i

cleanup.i.i:                                      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %202 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %hdev, align 8
  %dev.i.i78 = getelementptr inbounds %struct.pci_dev, ptr %203, i32 0, i32 44
  %204 = ptrtoint ptr %vport_id.i.i to i32
  call void @__asan_load2_noabort(i32 %204)
  %205 = load i16, ptr %vport_id.i.i, align 2
  %conv6.i.i = zext i16 %205 to i32
  %sub.i.i = add nsw i32 %conv6.i.i, -1
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i78, ptr noundef nonnull @.str.361, i32 noundef %sub.i.i, i32 noundef %call.i.i42.i.i) #20
  br label %hclge_reset_prepare_up.exit

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.050.i.i, 1
  %206 = ptrtoint ptr %num_alloc_vport.i.i76 to i32
  call void @__asan_load2_noabort(i32 %206)
  %207 = load i16, ptr %num_alloc_vport.i.i76, align 2
  %conv.i.i79 = zext i16 %207 to i32
  %cmp.i.i = icmp ult i32 %inc.i.i, %conv.i.i79
  br i1 %cmp.i.i, label %for.inc.i.i.for.body.i.i_crit_edge, label %for.inc.i.i.hclge_reset_prepare_up.exit_crit_edge

for.inc.i.i.hclge_reset_prepare_up.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_reset_prepare_up.exit

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

sw.bb1.i82:                                       ; preds = %if.end9.sw.bb1.i82_crit_edge, %if.end9.sw.bb1.i82_crit_edge246
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %208 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %209 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 38, i1 noundef zeroext false) #16
  %210 = ptrtoint ptr %208 to i32
  call void @__asan_load1_noabort(i32 %210)
  %211 = load i8, ptr %208, align 4
  %212 = or i8 %211, 1
  store i8 %212, ptr %208, align 4
  %hw.i.i80 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i.i81 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i80, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  %213 = zext i32 %call.i.i.i81 to i64
  call void @__sanitizer_cov_trace_switch(i64 %213, ptr @__sancov_gen_cov_switch_values.793)
  switch i32 %call.i.i.i81, label %do.end6.i.i [
    i32 -95, label %do.end.i.i83
    i32 0, label %sw.bb1.i82.hclge_set_rst_done.exit.i_crit_edge
  ]

sw.bb1.i82.hclge_set_rst_done.exit.i_crit_edge:   ; preds = %sw.bb1.i82
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_set_rst_done.exit.i

do.end.i.i83:                                     ; preds = %sw.bb1.i82
  call void @__sanitizer_cov_trace_pc() #18
  %214 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %hdev, align 8
  %dev.i6.i = getelementptr inbounds %struct.pci_dev, ptr %215, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i6.i, ptr noundef nonnull @.str.428, i32 noundef 38) #20
  br label %hclge_set_rst_done.exit.i

do.end6.i.i:                                      ; preds = %sw.bb1.i82
  call void @__sanitizer_cov_trace_pc() #18
  %216 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %hdev, align 8
  %dev8.i.i = getelementptr inbounds %struct.pci_dev, ptr %217, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev8.i.i, ptr noundef nonnull @.str.431, i32 noundef %call.i.i.i81) #20
  br label %hclge_set_rst_done.exit.i

hclge_set_rst_done.exit.i:                        ; preds = %do.end6.i.i, %do.end.i.i83, %sw.bb1.i82.hclge_set_rst_done.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ 0, %do.end.i.i83 ], [ %call.i.i.i81, %sw.bb1.i82.hclge_set_rst_done.exit.i_crit_edge ], [ %call.i.i.i81, %do.end6.i.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %hclge_reset_prepare_up.exit

hclge_reset_prepare_up.exit:                      ; preds = %hclge_set_rst_done.exit.i, %for.inc.i.i.hclge_reset_prepare_up.exit_crit_edge, %cleanup.i.i, %sw.bb.i.hclge_reset_prepare_up.exit_crit_edge, %if.end9.hclge_reset_prepare_up.exit_crit_edge
  %ret.0.i = phi i32 [ 0, %if.end9.hclge_reset_prepare_up.exit_crit_edge ], [ %retval.0.i.i, %hclge_set_rst_done.exit.i ], [ %call.i.i42.i.i, %cleanup.i.i ], [ 0, %sw.bb.i.hclge_reset_prepare_up.exit_crit_edge ], [ 0, %for.inc.i.i.hclge_reset_prepare_up.exit_crit_edge ]
  %hw.i8.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %218 = ptrtoint ptr %hw.i8.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %hw.i8.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.addr.i.i.i)
  %220 = ptrtoint ptr %base.addr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %220)
  store ptr %219, ptr %base.addr.i.i.i, align 4
  %base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i = load volatile ptr, ptr %base.addr.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %base.addr.i.i.i.0.base.addr.i.i.i.0.base.addr.i.i.0.base.addr.i.i.0.base.addr.i.0.base.addr.i.0.base.addr.0.base.addr.0.base.addr.0..i.i.i, i32 159752
  %221 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #16, !srcloc !1461
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1462
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.addr.i.i.i)
  %222 = and i32 %221, -257
  %223 = ptrtoint ptr %hw.i8.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %hw.i8.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !1460
  call void @arm_heavy_mb() #16
  %add.ptr.i8.i.i = getelementptr i8, ptr %224, i32 159752
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i8.i.i, i32 %222) #16, !srcloc !1459
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool11.not = icmp eq i32 %ret.0.i, 0
  br i1 %tobool11.not, label %if.end13, label %hclge_reset_prepare_up.exit.cleanup_crit_edge

hclge_reset_prepare_up.exit.cleanup_crit_edge:    ; preds = %hclge_reset_prepare_up.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %hclge_reset_prepare_up.exit
  call void @rtnl_lock() #16
  %225 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %vport.i, align 4
  %nic.i = getelementptr inbounds %struct.hclge_vport, ptr %226, i32 0, i32 13
  %227 = ptrtoint ptr %nic_client.i.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %nic_client.i.i, align 4
  %229 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load volatile i32, ptr %state.i, align 4
  %231 = and i32 %230, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %231)
  %tobool.not.i86 = icmp eq i32 %231, 0
  %tobool1.not.i87 = icmp eq ptr %228, null
  %or.cond.i88 = select i1 %tobool.not.i86, i1 true, i1 %tobool1.not.i87
  br i1 %or.cond.i88, label %if.end13.if.end17_crit_edge, label %if.end.i92

if.end13.if.end17_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.end.i92:                                       ; preds = %if.end13
  %ops.i89 = getelementptr inbounds %struct.hnae3_client, ptr %228, i32 0, i32 3
  %232 = ptrtoint ptr %ops.i89 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %ops.i89, align 4
  %reset_notify.i90 = getelementptr inbounds %struct.hnae3_client_ops, ptr %233, i32 0, i32 3
  %234 = ptrtoint ptr %reset_notify.i90 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %reset_notify.i90, align 4
  %tobool2.not.i91 = icmp eq ptr %235, null
  br i1 %tobool2.not.i91, label %if.end.i92.hclge_notify_client.exit_crit_edge, label %if.end4.i95

if.end.i92.hclge_notify_client.exit_crit_edge:    ; preds = %if.end.i92
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_notify_client.exit

if.end4.i95:                                      ; preds = %if.end.i92
  %call7.i93 = call i32 %235(ptr noundef %nic.i, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i93)
  %tobool8.not.i94 = icmp eq i32 %call7.i93, 0
  br i1 %tobool8.not.i94, label %if.end4.i95.if.end17_crit_edge, label %do.end.i97

if.end4.i95.if.end17_crit_edge:                   ; preds = %if.end4.i95
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

do.end.i97:                                       ; preds = %if.end4.i95
  call void @__sanitizer_cov_trace_pc() #18
  %236 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %hdev, align 8
  %dev.i96 = getelementptr inbounds %struct.pci_dev, ptr %237, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i96, ptr noundef nonnull @.str.23, i32 noundef 0, i32 noundef %call7.i93) #20
  br label %hclge_notify_client.exit

hclge_notify_client.exit:                         ; preds = %do.end.i97, %if.end.i92.hclge_notify_client.exit_crit_edge
  %retval.0.i98 = phi i32 [ -95, %if.end.i92.hclge_notify_client.exit_crit_edge ], [ %call7.i93, %do.end.i97 ]
  call void @rtnl_unlock() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end4.i95.if.end17_crit_edge, %if.end13.if.end17_crit_edge
  call void @rtnl_unlock() #16
  %call18 = call fastcc i32 @hclge_notify_roce_client(ptr noundef %hdev, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end21, label %if.end17.cleanup_crit_edge

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end21:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %238 = load volatile i32, ptr @jiffies, align 128
  %last_reset_time = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 7
  %239 = ptrtoint ptr %last_reset_time to i32
  call void @__asan_store4_noabort(i32 %239)
  store i32 %238, ptr %last_reset_time, align 8
  %reset_fail_cnt23 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 13, i32 7
  %240 = ptrtoint ptr %reset_fail_cnt23 to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 0, ptr %reset_fail_cnt23, align 4
  %241 = ptrtoint ptr %rst_stats to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %rst_stats, align 8
  %inc25 = add i32 %242, 1
  store i32 %inc25, ptr %rst_stats, align 8
  call void @_clear_bit(i32 noundef 14, ptr noundef %state.i) #16
  call fastcc void @hclge_update_reset_level(ptr noundef %hdev)
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %if.end17.cleanup_crit_edge, %hclge_notify_client.exit, %hclge_reset_prepare_up.exit.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %hclge_reset_stack.exit.thread, %do.end.i, %if.end.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end21 ], [ %retval.0.i72, %land.lhs.true.cleanup_crit_edge ], [ %ret.0.i, %hclge_reset_prepare_up.exit.cleanup_crit_edge ], [ %retval.0.i98, %hclge_notify_client.exit ], [ %call18, %if.end17.cleanup_crit_edge ], [ -95, %if.end.i.cleanup_crit_edge ], [ %call7.i, %do.end.i ], [ %retval.0.i52.ph, %hclge_reset_stack.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_notify_roce_client(ptr noundef %hdev, i32 noundef %type) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %0 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vport, align 4
  %roce = getelementptr inbounds %struct.hclge_vport, ptr %1, i32 0, i32 14
  %roce_client = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 55
  %2 = ptrtoint ptr %roce_client to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %roce_client, align 8
  %state = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state, align 4
  %6 = and i32 %5, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  %tobool1.not = icmp eq ptr %3, null
  %or.cond = select i1 %tobool.not, i1 true, i1 %tobool1.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %ops = getelementptr inbounds %struct.hnae3_client, ptr %3, i32 0, i32 3
  %7 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops, align 4
  %reset_notify = getelementptr inbounds %struct.hnae3_client_ops, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %reset_notify to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %reset_notify, align 4
  %tobool2.not = icmp eq ptr %10, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call7 = tail call i32 %10(ptr noundef %roce, i32 noundef %type) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end4.cleanup_crit_edge, label %do.end

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %12, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.354, i32 noundef %type, i32 noundef %call7) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ], [ %call7, %do.end ], [ 0, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_func_reset_notify_vf(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.hclge_desc, align 4
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %num_alloc_vport.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 24
  %0 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_alloc_vport.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %1)
  %cmp49.i = icmp ugt i16 %1, 1
  br i1 %cmp49.i, label %for.body.lr.ph.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.lr.ph.i:                                 ; preds = %entry
  %vport2.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %hw.i41.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %vf_rst.i.i = getelementptr inbounds %struct.hclge_vf_rst_cmd, ptr %2, i32 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.050.i = phi i32 [ 1, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %3 = ptrtoint ptr %vport2.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %vport2.i, align 4
  %arrayidx.i = getelementptr %struct.hclge_vport, ptr %4, i32 %i.050.i
  %vport_id.i = getelementptr %struct.hclge_vport, ptr %4, i32 %i.050.i, i32 11
  %5 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %vport_id.i, align 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %7 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 33, i1 noundef zeroext false) #16
  %conv.i.i = trunc i16 %6 to i8
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv.i.i, ptr %2, align 4
  %9 = ptrtoint ptr %vf_rst.i.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 1, ptr %vf_rst.i.i, align 1
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i41.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool4.not.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool4.not.i, label %lor.lhs.false.i, label %hclge_set_all_vf_rst.exit

lor.lhs.false.i:                                  ; preds = %for.body.i
  %state.i = getelementptr %struct.hclge_vport, ptr %4, i32 %i.050.i, i32 15
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool9.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool9.not.i, label %lor.lhs.false.i.for.inc.i_crit_edge, label %if.end11.i

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end11.i:                                       ; preds = %lor.lhs.false.i
  %call12.i = call i32 @hclge_inform_reset_assert_to_vf(ptr noundef %arrayidx.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %if.end11.i.for.inc.i_crit_edge, label %do.end17.i

if.end11.i.for.inc.i_crit_edge:                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

do.end17.i:                                       ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hdev, align 8
  %dev19.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  %14 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vport_id.i, align 2
  %conv21.i = zext i16 %15 to i32
  %sub22.i = add nsw i32 %conv21.i, -1
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev19.i, ptr noundef nonnull @.str.364, i32 noundef %sub22.i, i32 noundef %call12.i) #20
  br label %for.inc.i

for.inc.i:                                        ; preds = %do.end17.i, %if.end11.i.for.inc.i_crit_edge, %lor.lhs.false.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.050.i, 1
  %16 = ptrtoint ptr %num_alloc_vport.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %num_alloc_vport.i, align 2
  %conv.i = zext i16 %17 to i32
  %cmp.i = icmp ult i32 %inc.i, %conv.i
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.if.end_crit_edge

for.inc.i.if.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

hclge_set_all_vf_rst.exit:                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  %20 = ptrtoint ptr %vport_id.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vport_id.i, align 2
  %conv6.i = zext i16 %21 to i32
  %sub.i = add nsw i32 %conv6.i, -1
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.361, i32 noundef %sub.i, i32 noundef %call.i.i.i) #20
  br label %cleanup

if.end:                                           ; preds = %for.inc.i.if.end_crit_edge, %entry.if.end_crit_edge
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %22 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %23 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 39, i1 noundef zeroext true) #16
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  br label %do.body.i

do.body.i:                                        ; preds = %if.end7.i.do.body.i_crit_edge, %if.end
  %cnt.0.i = phi i32 [ 0, %if.end ], [ %inc.i5, %if.end7.i.do.body.i_crit_edge ]
  call fastcc void @hclge_mailbox_service_task(ptr noundef %hdev) #16
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  %24 = zext i32 %call.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.794)
  switch i32 %call.i.i, label %do.end.i [
    i32 -95, label %if.then.i
    i32 0, label %if.else3.i
  ]

if.then.i:                                        ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @msleep(i32 noundef 100) #16
  br label %hclge_func_reset_sync_vf.exit

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hdev, align 8
  %dev.i3 = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i3, ptr noundef nonnull @.str.366, i32 noundef %call.i.i) #20
  br label %hclge_func_reset_sync_vf.exit

if.else3.i:                                       ; preds = %do.body.i
  %27 = ptrtoint ptr %22 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %22, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool4.not.i4 = icmp eq i8 %28, 0
  br i1 %tobool4.not.i4, label %if.end7.i, label %if.else3.i.hclge_func_reset_sync_vf.exit_crit_edge

if.else3.i.hclge_func_reset_sync_vf.exit_crit_edge: ; preds = %if.else3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_func_reset_sync_vf.exit

if.end7.i:                                        ; preds = %if.else3.i
  call void @msleep(i32 noundef 20) #16
  call void @hclge_comm_cmd_reuse_desc(ptr noundef nonnull %desc.i, i1 noundef zeroext true) #16
  %inc.i5 = add nuw nsw i32 %cnt.0.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i5, 1501
  br i1 %exitcond.not.i, label %do.end13.i, label %if.end7.i.do.body.i_crit_edge

if.end7.i.do.body.i_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

do.end13.i:                                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hdev, align 8
  %dev15.i = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev15.i, ptr noundef nonnull @.str.369) #20
  br label %hclge_func_reset_sync_vf.exit

hclge_func_reset_sync_vf.exit:                    ; preds = %do.end13.i, %if.else3.i.hclge_func_reset_sync_vf.exit_crit_edge, %do.end.i, %if.then.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_func_reset_sync_vf.exit, %hclge_set_all_vf_rst.exit
  %retval.0 = phi i32 [ 0, %hclge_func_reset_sync_vf.exit ], [ %call.i.i.i, %hclge_set_all_vf_rst.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_inform_reset_assert_to_vf(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_update_reset_level(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdev, align 8
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %reset_request = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 11
  %priv.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %reset_request to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %reset_request, align 4
  %6 = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %reset_request) #16
  br label %if.end14.sink.split.sink.split.i

if.else.i:                                        ; preds = %entry
  %7 = ptrtoint ptr %reset_request to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %reset_request, align 4
  %9 = and i32 %8, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool2.not.i = icmp eq i32 %9, 0
  br i1 %tobool2.not.i, label %if.else4.i, label %if.else.i.if.end14.sink.split.sink.split.i_crit_edge

if.else.i.if.end14.sink.split.sink.split.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.sink.split.i

if.else4.i:                                       ; preds = %if.else.i
  %10 = ptrtoint ptr %reset_request to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %reset_request, align 4
  %12 = and i32 %11, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool6.not.i = icmp eq i32 %12, 0
  br i1 %tobool6.not.i, label %if.else8.i, label %if.else4.i.if.end14.sink.split.i_crit_edge

if.else4.i.if.end14.sink.split.i_crit_edge:       ; preds = %if.else4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i

if.else8.i:                                       ; preds = %if.else4.i
  %13 = ptrtoint ptr %reset_request to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %reset_request, align 4
  %15 = and i32 %14, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool10.not.i = icmp eq i32 %15, 0
  br i1 %tobool10.not.i, label %if.else8.i.hclge_get_reset_level.exit_crit_edge, label %if.else8.i.if.end14.sink.split.i_crit_edge

if.else8.i.if.end14.sink.split.i_crit_edge:       ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.i

if.else8.i.hclge_get_reset_level.exit_crit_edge:  ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_reset_level.exit

if.end14.sink.split.sink.split.i:                 ; preds = %if.else.i.if.end14.sink.split.sink.split.i_crit_edge, %if.then.i
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %reset_request) #16
  br label %if.end14.sink.split.i

if.end14.sink.split.i:                            ; preds = %if.end14.sink.split.sink.split.i, %if.else8.i.if.end14.sink.split.i_crit_edge, %if.else4.i.if.end14.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 5, %if.else4.i.if.end14.sink.split.i_crit_edge ], [ 4, %if.else8.i.if.end14.sink.split.i_crit_edge ], [ 5, %if.end14.sink.split.sink.split.i ]
  tail call void @_clear_bit(i32 noundef %.sink.i, ptr noundef %reset_request) #16
  br label %hclge_get_reset_level.exit

hclge_get_reset_level.exit:                       ; preds = %if.end14.sink.split.i, %if.else8.i.hclge_get_reset_level.exit_crit_edge
  %default_reset_request = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 10
  %16 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %priv.i, align 4
  %18 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %default_reset_request, align 4
  %20 = and i32 %19, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i10 = icmp eq i32 %20, 0
  br i1 %tobool.not.i10, label %if.else.i13, label %if.then.i11

if.then.i11:                                      ; preds = %hclge_get_reset_level.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %default_reset_request) #16
  br label %if.end14.sink.split.sink.split.i19

if.else.i13:                                      ; preds = %hclge_get_reset_level.exit
  %21 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %default_reset_request, align 4
  %23 = and i32 %22, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool2.not.i12 = icmp eq i32 %23, 0
  br i1 %tobool2.not.i12, label %if.else4.i15, label %if.else.i13.if.end14.sink.split.sink.split.i19_crit_edge

if.else.i13.if.end14.sink.split.sink.split.i19_crit_edge: ; preds = %if.else.i13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14.sink.split.sink.split.i19

if.else4.i15:                                     ; preds = %if.else.i13
  %24 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %default_reset_request, align 4
  %26 = and i32 %25, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool6.not.i14 = icmp eq i32 %26, 0
  br i1 %tobool6.not.i14, label %if.else8.i17, label %if.else4.i15.hclge_get_reset_level.exit29_crit_edge

if.else4.i15.hclge_get_reset_level.exit29_crit_edge: ; preds = %if.else4.i15
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_reset_level.exit29

if.else8.i17:                                     ; preds = %if.else4.i15
  %27 = ptrtoint ptr %default_reset_request to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %default_reset_request, align 4
  %29 = and i32 %28, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool10.not.i16 = icmp eq i32 %29, 0
  br i1 %tobool10.not.i16, label %if.else8.i17.if.end_crit_edge, label %if.else8.i17.hclge_get_reset_level.exit29_crit_edge

if.else8.i17.hclge_get_reset_level.exit29_crit_edge: ; preds = %if.else8.i17
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_reset_level.exit29

if.else8.i17.if.end_crit_edge:                    ; preds = %if.else8.i17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end14.sink.split.sink.split.i19:               ; preds = %if.else.i13.if.end14.sink.split.sink.split.i19_crit_edge, %if.then.i11
  %rst_level.0.ph.ph.i18 = phi i32 [ 7, %if.then.i11 ], [ 6, %if.else.i13.if.end14.sink.split.sink.split.i19_crit_edge ]
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %default_reset_request) #16
  br label %hclge_get_reset_level.exit29

hclge_get_reset_level.exit29:                     ; preds = %if.end14.sink.split.sink.split.i19, %if.else8.i17.hclge_get_reset_level.exit29_crit_edge, %if.else4.i15.hclge_get_reset_level.exit29_crit_edge
  %.sink.i20 = phi i32 [ 5, %if.else4.i15.hclge_get_reset_level.exit29_crit_edge ], [ 4, %if.else8.i17.hclge_get_reset_level.exit29_crit_edge ], [ 5, %if.end14.sink.split.sink.split.i19 ]
  %rst_level.0.ph.i21 = phi i32 [ 5, %if.else4.i15.hclge_get_reset_level.exit29_crit_edge ], [ 4, %if.else8.i17.hclge_get_reset_level.exit29_crit_edge ], [ %rst_level.0.ph.ph.i18, %if.end14.sink.split.sink.split.i19 ]
  tail call void @_clear_bit(i32 noundef %.sink.i20, ptr noundef %default_reset_request) #16
  %reset_type.i24 = getelementptr inbounds %struct.hclge_dev, ptr %17, i32 0, i32 8
  %30 = ptrtoint ptr %reset_type.i24 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %reset_type.i24, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %31)
  %cmp.not.i25 = icmp ne i32 %31, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %rst_level.0.ph.i21, i32 %31)
  %cmp16.i26 = icmp ult i32 %rst_level.0.ph.i21, %31
  %or.cond.i27 = and i1 %cmp.not.i25, %cmp16.i26
  br i1 %or.cond.i27, label %hclge_get_reset_level.exit29.if.end_crit_edge, label %if.then

hclge_get_reset_level.exit29.if.end_crit_edge:    ; preds = %hclge_get_reset_level.exit29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %hclge_get_reset_level.exit29
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef %rst_level.0.ph.i21, ptr noundef %reset_request) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %hclge_get_reset_level.exit29.if.end_crit_edge, %if.else8.i17.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_tm_init_hw(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_config_nic_hw_error(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_config_rocee_ras_interrupt(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__bitmap_set(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_config_switch_param(ptr noundef %hdev, i32 noundef %vfid, i8 noundef zeroext %switch_param, i8 noundef zeroext %param_mask) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %1 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 1
  %conv4.i = shl i32 %vfid, 3
  %shl5.i = and i32 %conv4.i, 2040
  %2 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 4147, i1 noundef zeroext true) #16
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %0, align 4
  %4 = call i32 @llvm.bswap.i32(i32 %shl5.i)
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %1, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.416, i32 noundef %call.i) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 3
  %9 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 2
  call void @hclge_comm_cmd_reuse_desc(ptr noundef nonnull %desc, i1 noundef zeroext false) #16
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %9, align 4
  %and36 = and i8 %11, %param_mask
  %or37 = or i8 %and36, %switch_param
  store i8 %or37, ptr %9, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %param_mask, ptr %8, align 4
  %call.i38 = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i38)
  %tobool12.not = icmp eq i32 %call.i38, 0
  br i1 %tobool12.not, label %if.end.cleanup_crit_edge, label %do.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hdev, align 8
  %dev18 = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev18, ptr noundef nonnull @.str.419, i32 noundef %call.i38) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end16, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ %call.i, %do.end ], [ %call.i38, %do.end16 ], [ 0, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_num_vf(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @hclge_get_vf_vport(ptr nocapture noundef readonly %hdev, i32 noundef %vf) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdev, align 8
  %call = tail call i32 @pci_num_vf(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.423, i32 noundef %vf) #20
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %vf)
  %cmp = icmp slt i32 %vf, 0
  br i1 %cmp, label %if.end.do.end7_crit_edge, label %lor.lhs.false

if.end.do.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

lor.lhs.false:                                    ; preds = %if.end
  %4 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hdev, align 8
  %call3 = tail call i32 @pci_num_vf(ptr noundef %5) #16
  call void @__sanitizer_cov_trace_cmp4(i32 %call3, i32 %vf)
  %cmp4.not = icmp sgt i32 %call3, %vf
  br i1 %cmp4.not, label %if.end12, label %lor.lhs.false.do.end7_crit_edge

lor.lhs.false.do.end7_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

do.end7:                                          ; preds = %lor.lhs.false.do.end7_crit_edge, %if.end.do.end7_crit_edge
  %6 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hdev, align 8
  %dev9 = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  %call11 = tail call i32 @pci_num_vf(ptr noundef %7) #16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev9, ptr noundef nonnull @.str.426, i32 noundef %vf, i32 noundef %call11) #20
  br label %return

if.end12:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  %add = add nuw nsw i32 %vf, 1
  %vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %8 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vport, align 4
  %arrayidx = getelementptr %struct.hclge_vport, ptr %9, i32 %add
  br label %return

return:                                           ; preds = %if.end12, %do.end7, %do.end
  %retval.0 = phi ptr [ null, %do.end7 ], [ %arrayidx, %if.end12 ], [ null, %do.end ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_dbg_dump_rst_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_mbx_handler(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_update_link_status(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vport = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %0 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vport, align 4
  %roce = getelementptr inbounds %struct.hclge_vport, ptr %1, i32 0, i32 14
  %nic = getelementptr inbounds %struct.hclge_vport, ptr %1, i32 0, i32 13
  %roce_client = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 55
  %2 = ptrtoint ptr %roce_client to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %roce_client, align 8
  %nic_client = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 54
  %4 = ptrtoint ptr %nic_client to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nic_client, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %state3 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %call = tail call i32 @_test_and_set_bit(i32 noundef 13, ptr noundef %state3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %phydev1.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 17
  %6 = ptrtoint ptr %phydev1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev1.i, align 4
  %8 = ptrtoint ptr %state3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state3, align 4
  %10 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end6.if.end11_crit_edge

if.end6.if.end11_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.end.i:                                         ; preds = %if.end6
  %tobool2.not.i = icmp eq ptr %7, null
  br i1 %tobool2.not.i, label %if.end.i.if.end6.i_crit_edge, label %land.lhs.true.i

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %state3.i = getelementptr inbounds %struct.phy_device, ptr %7, i32 0, i32 5
  %11 = ptrtoint ptr %state3.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %state3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %12)
  %cmp.not.i = icmp eq i32 %12, 4
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %land.lhs.true.i.if.end11_crit_edge

land.lhs.true.i.if.end11_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %link.i = getelementptr inbounds %struct.phy_device, ptr %7, i32 0, i32 4
  %13 = ptrtoint ptr %link.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %bf.load.i = load i16, ptr %link.i, align 8
  %14 = and i16 %bf.load.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool4.not.i = icmp eq i16 %14, 0
  br i1 %tobool4.not.i, label %lor.lhs.false.i.if.end11_crit_edge, label %lor.lhs.false.i.if.end6.i_crit_edge

lor.lhs.false.i.if.end6.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

lor.lhs.false.i.if.end11_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.end6.i:                                        ; preds = %lor.lhs.false.i.if.end6.i_crit_edge, %if.end.i.if.end6.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %15 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 775, i1 noundef zeroext true) #16
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %hclge_get_mac_phy_link.exit.thread63, label %if.then9

hclge_get_mac_phy_link.exit.thread63:             ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %16 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %16, align 4
  %19 = and i8 %18, 1
  %20 = zext i8 %19 to i32
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %if.end11

if.then9:                                         ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.465, i32 noundef %call.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %cleanup.sink.split

if.end11:                                         ; preds = %hclge_get_mac_phy_link.exit.thread63, %lor.lhs.false.i.if.end11_crit_edge, %land.lhs.true.i.if.end11_crit_edge, %if.end6.if.end11_crit_edge
  %state.162 = phi i32 [ %20, %hclge_get_mac_phy_link.exit.thread63 ], [ 0, %if.end6.if.end11_crit_edge ], [ 0, %lor.lhs.false.i.if.end11_crit_edge ], [ 0, %land.lhs.true.i.if.end11_crit_edge ]
  %link = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 16
  %23 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %link, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %state.162, i32 %24)
  %cmp.not = icmp eq i32 %state.162, %24
  br i1 %cmp.not, label %if.end11.cleanup.sink.split_crit_edge, label %if.then12

if.end11.cleanup.sink.split_crit_edge:            ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then12:                                        ; preds = %if.end11
  %25 = ptrtoint ptr %link to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %state.162, ptr %link, align 4
  %ops = getelementptr inbounds %struct.hnae3_client, ptr %5, i32 0, i32 3
  %26 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ops, align 4
  %link_status_change = getelementptr inbounds %struct.hnae3_client_ops, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %link_status_change to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %link_status_change, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state.162)
  %tobool16 = icmp ne i32 %state.162, 0
  call void %29(ptr noundef %nic, i1 noundef zeroext %tobool16) #16
  %call18 = call i32 @hclge_config_mac_tnl_int(ptr noundef %hdev, i1 noundef zeroext %tobool16) #16
  %tobool19.not = icmp eq ptr %3, null
  br i1 %tobool19.not, label %if.then12.if.end27_crit_edge, label %land.lhs.true

if.then12.if.end27_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

land.lhs.true:                                    ; preds = %if.then12
  %ops20 = getelementptr inbounds %struct.hnae3_client, ptr %3, i32 0, i32 3
  %30 = ptrtoint ptr %ops20 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ops20, align 4
  %link_status_change21 = getelementptr inbounds %struct.hnae3_client_ops, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %link_status_change21 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %link_status_change21, align 4
  %tobool22.not = icmp eq ptr %33, null
  br i1 %tobool22.not, label %land.lhs.true.if.end27_crit_edge, label %if.then23

land.lhs.true.if.end27_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

if.then23:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  call void %33(ptr noundef %roce, i1 noundef zeroext %tobool16) #16
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %land.lhs.true.if.end27_crit_edge, %if.then12.if.end27_crit_edge
  %34 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hdev, align 8
  %call21.i = call i32 @pci_num_vf(ptr noundef %35) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %cmp22.i = icmp sgt i32 %call21.i, 0
  br i1 %cmp22.i, label %if.end27.for.body.i_crit_edge, label %if.end27.cleanup.sink.split_crit_edge

if.end27.cleanup.sink.split_crit_edge:            ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end27.for.body.i_crit_edge:                    ; preds = %if.end27
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end27.for.body.i_crit_edge
  %conv24.i = phi i32 [ %conv.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end27.for.body.i_crit_edge ]
  %i.023.i = phi i16 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end27.for.body.i_crit_edge ]
  %36 = ptrtoint ptr %vport to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vport, align 4
  %add.i = add nuw nsw i32 %conv24.i, 1
  %arrayidx.i = getelementptr %struct.hclge_vport, ptr %37, i32 %add.i
  %state.i52 = getelementptr %struct.hclge_vport, ptr %37, i32 %add.i, i32 15
  %38 = ptrtoint ptr %state.i52 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %state.i52, align 4
  %and1.i.i = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i53 = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i53, label %for.body.i.for.inc.i_crit_edge, label %lor.lhs.false.i54

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

lor.lhs.false.i54:                                ; preds = %for.body.i
  %vf_info.i = getelementptr %struct.hclge_vport, ptr %37, i32 %add.i, i32 18
  %40 = ptrtoint ptr %vf_info.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %vf_info.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %cmp5.not.i = icmp eq i32 %41, 0
  br i1 %cmp5.not.i, label %if.end.i55, label %lor.lhs.false.i54.for.inc.i_crit_edge

lor.lhs.false.i54.for.inc.i_crit_edge:            ; preds = %lor.lhs.false.i54
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i55:                                       ; preds = %lor.lhs.false.i54
  %call7.i = call i32 @hclge_push_vf_link_status(ptr noundef %arrayidx.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end.i55.for.inc.i_crit_edge, label %do.end.i

if.end.i55.for.inc.i_crit_edge:                   ; preds = %if.end.i55
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

do.end.i:                                         ; preds = %if.end.i55
  call void @__sanitizer_cov_trace_pc() #18
  %42 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %43, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.467, i32 noundef %conv24.i, i32 noundef %call7.i) #20
  br label %for.inc.i

for.inc.i:                                        ; preds = %do.end.i, %if.end.i55.for.inc.i_crit_edge, %lor.lhs.false.i54.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add i16 %i.023.i, 1
  %conv.i = zext i16 %inc.i to i32
  %44 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %hdev, align 8
  %call.i = call i32 @pci_num_vf(ptr noundef %45) #16
  %cmp.i = icmp sgt i32 %call.i, %conv.i
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.cleanup.sink.split_crit_edge

for.inc.i.cleanup.sink.split_crit_edge:           ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

cleanup.sink.split:                               ; preds = %for.inc.i.cleanup.sink.split_crit_edge, %if.end27.cleanup.sink.split_crit_edge, %if.end11.cleanup.sink.split_crit_edge, %if.then9
  call void @_clear_bit(i32 noundef 13, ptr noundef %state3) #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_update_port_info(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  %desc.i2 = alloca %struct.hclge_desc, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  %cmd.i = alloca %struct.ethtool_link_ksettings, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %media_type = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 3
  %0 = ptrtoint ptr %media_type to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %media_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %1)
  %cmp = icmp eq i8 %1, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %cmd.i) #16
  %2 = call ptr @memset(ptr %cmd.i, i32 255, i32 88)
  %ae_dev.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %3 = ptrtoint ptr %ae_dev.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ae_dev.i, align 4
  %caps.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %4, i32 0, i32 7
  %5 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %caps.i, align 4
  %7 = and i32 %6, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %if.then.hclge_update_tp_port_info.exit_crit_edge, label %if.end.i

if.then.hclge_update_tp_port_info.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_tp_port_info.exit

if.end.i:                                         ; preds = %if.then
  %vport.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %8 = ptrtoint ptr %vport.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vport.i, align 4
  %nic.i = getelementptr inbounds %struct.hclge_vport, ptr %9, i32 0, i32 13
  %call1.i = call i32 @hclge_get_phy_link_ksettings(ptr noundef %nic.i, ptr noundef nonnull %cmd.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i.hclge_update_tp_port_info.exit_crit_edge

if.end.i.hclge_update_tp_port_info.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_tp_port_info.exit

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %autoneg.i = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd.i, i32 0, i32 5
  %10 = ptrtoint ptr %autoneg.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %autoneg.i, align 1
  %autoneg5.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 5
  %12 = ptrtoint ptr %autoneg5.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %autoneg5.i, align 2
  %speed.i = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd.i, i32 0, i32 1
  %13 = ptrtoint ptr %speed.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %speed.i, align 4
  %speed9.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %15 = ptrtoint ptr %speed9.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %speed9.i, align 4
  %duplex.i = getelementptr inbounds %struct.ethtool_link_settings, ptr %cmd.i, i32 0, i32 2
  %16 = ptrtoint ptr %duplex.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %duplex.i, align 4
  %duplex13.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 6
  %18 = ptrtoint ptr %duplex13.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %duplex13.i, align 1
  br label %hclge_update_tp_port_info.exit

hclge_update_tp_port_info.exit:                   ; preds = %if.end4.i, %if.end.i.hclge_update_tp_port_info.exit_crit_edge, %if.then.hclge_update_tp_port_info.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %cmd.i) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %support_sfp_query = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 31
  %19 = ptrtoint ptr %support_sfp_query to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %support_sfp_query, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not = icmp eq i8 %20, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %21 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ae_dev, align 4
  %dev_version = getelementptr inbounds %struct.hnae3_ae_dev, ptr %22, i32 0, i32 6
  %23 = ptrtoint ptr %dev_version to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %dev_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %24)
  %cmp5 = icmp ugt i32 %24, 32
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %25 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %26 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 1
  %27 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 2
  %28 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4, i32 3
  %29 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 28932, i1 noundef zeroext true) #16
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 1, ptr %26, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  %31 = zext i32 %call.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.795)
  switch i32 %call.i.i, label %do.end4.i [
    i32 -95, label %do.end.i
    i32 0, label %if.end7.i
  ]

do.end.i:                                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i, ptr noundef nonnull @.str.485, i32 noundef -95) #20
  br label %hclge_get_sfp_info.exit

do.end4.i:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  %34 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hdev, align 8
  %dev6.i = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev6.i, ptr noundef nonnull @.str.488, i32 noundef %call.i.i) #20
  br label %hclge_get_sfp_info.exit

if.end7.i:                                        ; preds = %if.then7
  %36 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %25, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool8.not.i = icmp eq i32 %37, 0
  br i1 %tobool8.not.i, label %if.end7.i.hclge_get_sfp_info.exit_crit_edge, label %if.end10.i

if.end7.i.hclge_get_sfp_info.exit_crit_edge:      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_get_sfp_info.exit

if.end10.i:                                       ; preds = %if.end7.i
  %38 = call i32 @llvm.bswap.i32(i32 %37) #16
  %speed12.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %39 = ptrtoint ptr %speed12.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %speed12.i, align 4
  %40 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool13.not.i = icmp eq i32 %41, 0
  br i1 %tobool13.not.i, label %if.else25.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %42 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %28, align 4
  %44 = call i32 @llvm.bswap.i32(i32 %43) #16
  %module_type15.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 12
  %45 = ptrtoint ptr %module_type15.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %module_type15.i, align 4
  %46 = call i32 @llvm.bswap.i32(i32 %41) #16
  %speed_ability17.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 11
  %47 = ptrtoint ptr %speed_ability17.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %speed_ability17.i, align 4
  %autoneg.i1 = getelementptr inbounds %struct.hclge_sfp_info_cmd, ptr %25, i32 0, i32 3
  %48 = ptrtoint ptr %autoneg.i1 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %autoneg.i1, align 2
  %autoneg18.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 5
  %50 = ptrtoint ptr %autoneg18.i to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %49, ptr %autoneg18.i, align 2
  %autoneg_ability.i = getelementptr inbounds %struct.hclge_sfp_info_cmd, ptr %25, i32 0, i32 4
  %51 = ptrtoint ptr %autoneg_ability.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %autoneg_ability.i, align 1
  %support_autoneg.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 7
  %53 = ptrtoint ptr %support_autoneg.i to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %52, ptr %support_autoneg.i, align 4
  %speed_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 8
  %54 = ptrtoint ptr %speed_type.i to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 1, ptr %speed_type.i, align 1
  %active_fec.i = getelementptr inbounds %struct.hclge_sfp_info_cmd, ptr %25, i32 0, i32 2
  %55 = ptrtoint ptr %active_fec.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %active_fec.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool19.not.i = icmp eq i8 %56, 0
  br i1 %tobool19.not.i, label %if.then20.i, label %if.else21.i

if.then20.i:                                      ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #18
  %fec_mode.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 13
  %57 = ptrtoint ptr %fec_mode.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %fec_mode.i, align 4
  br label %hclge_get_sfp_info.exit

if.else21.i:                                      ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i = zext i8 %56 to i32
  %shl.i = shl nuw i32 1, %conv.i
  %fec_mode23.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 13
  %58 = ptrtoint ptr %fec_mode23.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %shl.i, ptr %fec_mode23.i, align 4
  br label %hclge_get_sfp_info.exit

if.else25.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %speed_type26.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 8
  %59 = ptrtoint ptr %speed_type26.i to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 0, ptr %speed_type26.i, align 1
  br label %hclge_get_sfp_info.exit

hclge_get_sfp_info.exit:                          ; preds = %if.else25.i, %if.else21.i, %if.then20.i, %if.end7.i.hclge_get_sfp_info.exit_crit_edge, %do.end4.i, %do.end.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  br label %if.end10

if.else:                                          ; preds = %if.end4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i2) #16
  %60 = call ptr @memset(ptr %desc.i2, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i2, i32 noundef 28932, i1 noundef zeroext true) #16
  %hw.i3 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i4 = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i3, ptr noundef nonnull %desc.i2, i32 noundef 1) #16
  %61 = zext i32 %call.i.i4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %61, ptr @__sancov_gen_cov_switch_values.796)
  switch i32 %call.i.i4, label %do.end4.i8 [
    i32 -95, label %do.end.i6
    i32 0, label %if.end7.i9
  ]

do.end.i6:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %62 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %hdev, align 8
  %dev.i5 = getelementptr inbounds %struct.pci_dev, ptr %63, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i5, ptr noundef nonnull @.str.490, i32 noundef -95) #20
  br label %hclge_get_sfp_speed.exit

do.end4.i8:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %64 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %hdev, align 8
  %dev6.i7 = getelementptr inbounds %struct.pci_dev, ptr %65, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev6.i7, ptr noundef nonnull @.str.493, i32 noundef %call.i.i4) #20
  br label %hclge_get_sfp_speed.exit

if.end7.i9:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %66 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i2, i32 0, i32 4
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %66, align 4
  %69 = call i32 @llvm.bswap.i32(i32 %68) #16
  br label %hclge_get_sfp_speed.exit

hclge_get_sfp_speed.exit:                         ; preds = %if.end7.i9, %do.end4.i8, %do.end.i6
  %speed.0 = phi i32 [ 0, %do.end4.i8 ], [ %69, %if.end7.i9 ], [ 0, %do.end.i6 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i2) #16
  br label %if.end10

if.end10:                                         ; preds = %hclge_get_sfp_speed.exit, %hclge_get_sfp_info.exit
  %speed.1 = phi i32 [ 0, %hclge_get_sfp_info.exit ], [ %speed.0, %hclge_get_sfp_speed.exit ]
  %ret.0 = phi i32 [ %call.i.i, %hclge_get_sfp_info.exit ], [ %call.i.i4, %hclge_get_sfp_speed.exit ]
  %70 = zext i32 %ret.0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %70, ptr @__sancov_gen_cov_switch_values.797)
  switch i32 %ret.0, label %if.end10.cleanup_crit_edge [
    i32 -95, label %if.then13
    i32 0, label %if.end19
  ]

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then13:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  %71 = ptrtoint ptr %support_sfp_query to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 0, ptr %support_sfp_query, align 8
  br label %cleanup

if.end19:                                         ; preds = %if.end10
  %72 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %ae_dev, align 4
  %dev_version21 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %73, i32 0, i32 6
  %74 = ptrtoint ptr %dev_version21 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %dev_version21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %75)
  %cmp22 = icmp ugt i32 %75, 32
  br i1 %cmp22, label %if.then24, label %if.else32

if.then24:                                        ; preds = %if.end19
  %speed_type = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 8
  %76 = ptrtoint ptr %speed_type to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %speed_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %77)
  %cmp26 = icmp eq i8 %77, 1
  br i1 %cmp26, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.then24
  %caps.i11 = getelementptr inbounds %struct.hnae3_ae_dev, ptr %73, i32 0, i32 7
  %78 = ptrtoint ptr %caps.i11 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %caps.i11, align 4
  %80 = and i32 %79, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.not.i12 = icmp eq i32 %80, 0
  br i1 %tobool.not.i12, label %if.then28.if.end.i13_crit_edge, label %if.then.i

if.then28.if.end.i13_crit_edge:                   ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i13

if.then.i:                                        ; preds = %if.then28
  %add.ptr.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20, i32 1
  %81 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %and.i.i24.i.i = and i32 %82, -786433
  store i32 %and.i.i24.i.i, ptr %add.ptr.i.i.i.i, align 4
  %speed.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %83 = ptrtoint ptr %speed.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %speed.i.i, align 4
  %85 = zext i32 %84 to i64
  call void @__sanitizer_cov_trace_switch(i64 %85, ptr @__sancov_gen_cov_switch_values.798)
  switch i32 %84, label %if.then.i.hclge_convert_setting_fec.exit.i_crit_edge [
    i32 10000, label %if.then.i.sw.epilog.sink.split.i.i_crit_edge
    i32 40000, label %if.then.i.sw.epilog.sink.split.i.i_crit_edge38
    i32 25000, label %if.then.i.sw.bb5.i.i_crit_edge
    i32 50000, label %if.then.i.sw.bb5.i.i_crit_edge39
    i32 100000, label %if.then.i.sw.bb9.i.i_crit_edge
    i32 200000, label %if.then.i.sw.bb9.i.i_crit_edge40
  ]

if.then.i.sw.bb9.i.i_crit_edge40:                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb9.i.i

if.then.i.sw.bb9.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb9.i.i

if.then.i.sw.bb5.i.i_crit_edge39:                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb5.i.i

if.then.i.sw.bb5.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb5.i.i

if.then.i.sw.epilog.sink.split.i.i_crit_edge38:   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.sink.split.i.i

if.then.i.sw.epilog.sink.split.i.i_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.sink.split.i.i

if.then.i.hclge_convert_setting_fec.exit.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_convert_setting_fec.exit.i

sw.bb5.i.i:                                       ; preds = %if.then.i.sw.bb5.i.i_crit_edge, %if.then.i.sw.bb5.i.i_crit_edge39
  br label %sw.epilog.sink.split.i.i

sw.bb9.i.i:                                       ; preds = %if.then.i.sw.bb9.i.i_crit_edge, %if.then.i.sw.bb9.i.i_crit_edge40
  br label %sw.epilog.sink.split.i.i

sw.epilog.sink.split.i.i:                         ; preds = %sw.bb9.i.i, %sw.bb5.i.i, %if.then.i.sw.epilog.sink.split.i.i_crit_edge, %if.then.i.sw.epilog.sink.split.i.i_crit_edge38
  %.sink30.i.i = phi i32 [ 262144, %sw.bb9.i.i ], [ 262144, %sw.bb5.i.i ], [ 524288, %if.then.i.sw.epilog.sink.split.i.i_crit_edge ], [ 524288, %if.then.i.sw.epilog.sink.split.i.i_crit_edge38 ]
  %.sink.ph.i.i = phi i32 [ 5, %sw.bb9.i.i ], [ 7, %sw.bb5.i.i ], [ 3, %if.then.i.sw.epilog.sink.split.i.i_crit_edge ], [ 3, %if.then.i.sw.epilog.sink.split.i.i_crit_edge38 ]
  %or.i.i29.i.i = or i32 %.sink30.i.i, %and.i.i24.i.i
  %86 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %or.i.i29.i.i, ptr %add.ptr.i.i.i.i, align 4
  br label %hclge_convert_setting_fec.exit.i

hclge_convert_setting_fec.exit.i:                 ; preds = %sw.epilog.sink.split.i.i, %if.then.i.hclge_convert_setting_fec.exit.i_crit_edge
  %.sink.i.i = phi i32 [ 0, %if.then.i.hclge_convert_setting_fec.exit.i_crit_edge ], [ %.sink.ph.i.i, %sw.epilog.sink.split.i.i ]
  %fec_ability13.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 15
  %87 = ptrtoint ptr %fec_ability13.i.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %.sink.i.i, ptr %fec_ability13.i.i, align 4
  br label %if.end.i13

if.end.i13:                                       ; preds = %hclge_convert_setting_fec.exit.i, %if.then28.if.end.i13_crit_edge
  %88 = ptrtoint ptr %media_type to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %media_type, align 1
  %90 = zext i8 %89 to i64
  call void @__sanitizer_cov_trace_switch(i64 %90, ptr @__sancov_gen_cov_switch_values.799)
  switch i8 %89, label %if.end.i13.if.end13.i_crit_edge [
    i8 3, label %land.lhs.true.i
    i8 2, label %if.then10.i
  ]

if.end.i13.if.end13.i_crit_edge:                  ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

land.lhs.true.i:                                  ; preds = %if.end.i13
  %module_type.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 12
  %91 = ptrtoint ptr %module_type.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %module_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %cmp2.i = icmp eq i32 %92, 0
  br i1 %cmp2.i, label %if.then4.i, label %land.lhs.true.i.if.end13.i_crit_edge

land.lhs.true.i.if.end13.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.then4.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %93 = ptrtoint ptr %module_type.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 5, ptr %module_type.i, align 4
  br label %if.end13.i

if.then10.i:                                      ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #18
  %module_type11.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 12
  %94 = ptrtoint ptr %module_type11.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 6, ptr %module_type11.i, align 4
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then10.i, %if.then4.i, %land.lhs.true.i.if.end13.i_crit_edge, %if.end.i13.if.end13.i_crit_edge
  %support_autoneg.i14 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 7
  %95 = ptrtoint ptr %support_autoneg.i14 to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %support_autoneg.i14, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %96)
  %tobool14.not.i = icmp eq i8 %96, 0
  %supported21.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 20
  %97 = ptrtoint ptr %supported21.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %supported21.i, align 4
  br i1 %tobool14.not.i, label %if.else20.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  %or.i.i.i = or i32 %98, 64
  %99 = ptrtoint ptr %supported21.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 %or.i.i.i, ptr %supported21.i, align 4
  %advertising.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21
  %100 = call ptr @memcpy(ptr %advertising.i, ptr %supported21.i, i32 12)
  br label %cleanup

if.else20.i:                                      ; preds = %if.end13.i
  %and.i.i.i = and i32 %98, -65
  %101 = ptrtoint ptr %supported21.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %and.i.i.i, ptr %supported21.i, align 4
  %advertising.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21
  %102 = call ptr @memset(ptr %advertising.i.i, i32 0, i32 12)
  %speed.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %103 = ptrtoint ptr %speed.i.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %speed.i.i.i, align 4
  %105 = zext i32 %104 to i64
  call void @__sanitizer_cov_trace_switch(i64 %105, ptr @__sancov_gen_cov_switch_values.800)
  switch i32 %104, label %if.else20.i.hclge_update_speed_advertising.exit.i.i_crit_edge [
    i32 10, label %if.else20.i.if.end.i.i.i_crit_edge
    i32 100, label %if.else20.i.if.end.i.i.i_crit_edge41
    i32 1000, label %if.then.fold.split13.i.i.i.i
    i32 10000, label %if.then.fold.split14.i.i.i.i
    i32 25000, label %if.then.fold.split15.i.i.i.i
    i32 40000, label %if.then.fold.split16.i.i.i.i
    i32 50000, label %if.then.fold.split17.i.i.i.i
    i32 100000, label %if.then.fold.split18.i.i.i.i
    i32 200000, label %if.then.fold.split19.i.i.i.i
  ]

if.else20.i.if.end.i.i.i_crit_edge41:             ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.else20.i.if.end.i.i.i_crit_edge:               ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.else20.i.hclge_update_speed_advertising.exit.i.i_crit_edge: ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_speed_advertising.exit.i.i

if.then.fold.split13.i.i.i.i:                     ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.fold.split14.i.i.i.i:                     ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.fold.split15.i.i.i.i:                     ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.fold.split16.i.i.i.i:                     ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.fold.split17.i.i.i.i:                     ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.fold.split18.i.i.i.i:                     ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.fold.split19.i.i.i.i:                     ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.fold.split19.i.i.i.i, %if.then.fold.split18.i.i.i.i, %if.then.fold.split17.i.i.i.i, %if.then.fold.split16.i.i.i.i, %if.then.fold.split15.i.i.i.i, %if.then.fold.split14.i.i.i.i, %if.then.fold.split13.i.i.i.i, %if.else20.i.if.end.i.i.i_crit_edge, %if.else20.i.if.end.i.i.i_crit_edge41
  %tobool.not.i83.not.i.i.i = phi i1 [ false, %if.else20.i.if.end.i.i.i_crit_edge ], [ true, %if.then.fold.split13.i.i.i.i ], [ false, %if.then.fold.split14.i.i.i.i ], [ false, %if.then.fold.split15.i.i.i.i ], [ false, %if.then.fold.split16.i.i.i.i ], [ false, %if.then.fold.split17.i.i.i.i ], [ false, %if.then.fold.split18.i.i.i.i ], [ false, %if.then.fold.split19.i.i.i.i ], [ false, %if.else20.i.if.end.i.i.i_crit_edge41 ]
  %tobool3.not.i87.not.i.i.i = phi i1 [ false, %if.else20.i.if.end.i.i.i_crit_edge ], [ false, %if.then.fold.split13.i.i.i.i ], [ true, %if.then.fold.split14.i.i.i.i ], [ false, %if.then.fold.split15.i.i.i.i ], [ false, %if.then.fold.split16.i.i.i.i ], [ false, %if.then.fold.split17.i.i.i.i ], [ false, %if.then.fold.split18.i.i.i.i ], [ false, %if.then.fold.split19.i.i.i.i ], [ false, %if.else20.i.if.end.i.i.i_crit_edge41 ]
  %tobool8.not.i92.not.i.i.i = phi i1 [ false, %if.else20.i.if.end.i.i.i_crit_edge ], [ false, %if.then.fold.split13.i.i.i.i ], [ false, %if.then.fold.split14.i.i.i.i ], [ true, %if.then.fold.split15.i.i.i.i ], [ false, %if.then.fold.split16.i.i.i.i ], [ false, %if.then.fold.split17.i.i.i.i ], [ false, %if.then.fold.split18.i.i.i.i ], [ false, %if.then.fold.split19.i.i.i.i ], [ false, %if.else20.i.if.end.i.i.i_crit_edge41 ]
  %tobool13.not.i98.not.i.i.i = phi i1 [ false, %if.else20.i.if.end.i.i.i_crit_edge ], [ false, %if.then.fold.split13.i.i.i.i ], [ false, %if.then.fold.split14.i.i.i.i ], [ false, %if.then.fold.split15.i.i.i.i ], [ true, %if.then.fold.split16.i.i.i.i ], [ false, %if.then.fold.split17.i.i.i.i ], [ false, %if.then.fold.split18.i.i.i.i ], [ false, %if.then.fold.split19.i.i.i.i ], [ false, %if.else20.i.if.end.i.i.i_crit_edge41 ]
  %tobool18.not.i102.not.i.i.i = phi i1 [ false, %if.else20.i.if.end.i.i.i_crit_edge ], [ false, %if.then.fold.split13.i.i.i.i ], [ false, %if.then.fold.split14.i.i.i.i ], [ false, %if.then.fold.split15.i.i.i.i ], [ false, %if.then.fold.split16.i.i.i.i ], [ true, %if.then.fold.split17.i.i.i.i ], [ false, %if.then.fold.split18.i.i.i.i ], [ false, %if.then.fold.split19.i.i.i.i ], [ false, %if.else20.i.if.end.i.i.i_crit_edge41 ]
  %tobool23.not.i106.not.i.i.i = phi i1 [ false, %if.else20.i.if.end.i.i.i_crit_edge ], [ false, %if.then.fold.split13.i.i.i.i ], [ false, %if.then.fold.split14.i.i.i.i ], [ false, %if.then.fold.split15.i.i.i.i ], [ false, %if.then.fold.split16.i.i.i.i ], [ false, %if.then.fold.split17.i.i.i.i ], [ true, %if.then.fold.split18.i.i.i.i ], [ false, %if.then.fold.split19.i.i.i.i ], [ false, %if.else20.i.if.end.i.i.i_crit_edge41 ]
  %tobool28.not.i.not.i.i.i = phi i1 [ false, %if.else20.i.if.end.i.i.i_crit_edge ], [ false, %if.then.fold.split13.i.i.i.i ], [ false, %if.then.fold.split14.i.i.i.i ], [ false, %if.then.fold.split15.i.i.i.i ], [ false, %if.then.fold.split16.i.i.i.i ], [ false, %if.then.fold.split17.i.i.i.i ], [ false, %if.then.fold.split18.i.i.i.i ], [ true, %if.then.fold.split19.i.i.i.i ], [ false, %if.else20.i.if.end.i.i.i_crit_edge41 ]
  %module_type.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 12
  %106 = ptrtoint ptr %module_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %module_type.i.i.i, align 4
  %108 = zext i32 %107 to i64
  call void @__sanitizer_cov_trace_switch(i64 %108, ptr @__sancov_gen_cov_switch_values.801)
  switch i32 %107, label %if.end.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge [
    i32 1, label %sw.bb.i.i.i
    i32 2, label %if.end.i.i.i.sw.bb1.i.i.i_crit_edge
    i32 3, label %if.end.i.i.i.sw.bb1.i.i.i_crit_edge42
    i32 4, label %sw.bb5.i.i.i
    i32 5, label %sw.bb9.i.i.i
  ]

if.end.i.i.i.sw.bb1.i.i.i_crit_edge42:            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i.i.i

if.end.i.i.i.sw.bb1.i.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i.i.i

if.end.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_speed_advertising.exit.i.i

sw.bb.i.i.i:                                      ; preds = %if.end.i.i.i
  br i1 %tobool3.not.i87.not.i.i.i, label %if.then.i18.i.i.i, label %sw.bb.i.i.i.if.end.i.i.i.i_crit_edge

sw.bb.i.i.i.if.end.i.i.i.i_crit_edge:             ; preds = %sw.bb.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i.i

if.then.i18.i.i.i:                                ; preds = %sw.bb.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %109 = ptrtoint ptr %add.ptr.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %add.ptr.i.i.i.i.i.i, align 4
  %or.i.i.i.i.i.i = or i32 %110, 4096
  store i32 %or.i.i.i.i.i.i, ptr %add.ptr.i.i.i.i.i.i, align 4
  br label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then.i18.i.i.i, %sw.bb.i.i.i.if.end.i.i.i.i_crit_edge
  br i1 %tobool8.not.i92.not.i.i.i, label %if.then4.i.i.i.i, label %if.end.i.i.i.i.if.end5.i.i.i.i_crit_edge

if.end.i.i.i.i.if.end5.i.i.i.i_crit_edge:         ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i36.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %111 = ptrtoint ptr %add.ptr.i.i36.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %add.ptr.i.i36.i.i.i.i, align 4
  %or.i.i37.i.i.i.i = or i32 %112, 2
  store i32 %or.i.i37.i.i.i.i, ptr %add.ptr.i.i36.i.i.i.i, align 4
  br label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.i.i.i.i.if.end5.i.i.i.i_crit_edge
  br i1 %tobool18.not.i102.not.i.i.i, label %if.then9.i.i.i.i, label %if.end5.i.i.i.i.if.end10.i.i.i.i_crit_edge

if.end5.i.i.i.i.if.end10.i.i.i.i_crit_edge:       ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i.i.i

if.then9.i.i.i.i:                                 ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i38.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %113 = ptrtoint ptr %add.ptr.i.i38.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %add.ptr.i.i38.i.i.i.i, align 4
  %or.i.i39.i.i.i.i = or i32 %114, 8388608
  store i32 %or.i.i39.i.i.i.i, ptr %add.ptr.i.i38.i.i.i.i, align 4
  br label %if.end10.i.i.i.i

if.end10.i.i.i.i:                                 ; preds = %if.then9.i.i.i.i, %if.end5.i.i.i.i.if.end10.i.i.i.i_crit_edge
  br i1 %tobool13.not.i98.not.i.i.i, label %if.then14.i.i.i.i, label %if.end10.i.i.i.i.if.end15.i.i.i.i_crit_edge

if.end10.i.i.i.i.if.end15.i.i.i.i_crit_edge:      ; preds = %if.end10.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i.i.i.i

if.then14.i.i.i.i:                                ; preds = %if.end10.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %115 = ptrtoint ptr %advertising.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %advertising.i.i, align 4
  %or.i.i40.i.i.i.i = or i32 %116, 67108864
  store i32 %or.i.i40.i.i.i.i, ptr %advertising.i.i, align 4
  br label %if.end15.i.i.i.i

if.end15.i.i.i.i:                                 ; preds = %if.then14.i.i.i.i, %if.end10.i.i.i.i.if.end15.i.i.i.i_crit_edge
  br i1 %tobool23.not.i106.not.i.i.i, label %if.then19.i.i.i.i, label %if.end15.i.i.i.i.if.end20.i.i.i.i_crit_edge

if.end15.i.i.i.i.if.end20.i.i.i.i_crit_edge:      ; preds = %if.end15.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i.i.i.i

if.then19.i.i.i.i:                                ; preds = %if.end15.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i41.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %117 = ptrtoint ptr %add.ptr.i.i41.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %add.ptr.i.i41.i.i.i.i, align 4
  %or.i.i42.i.i.i.i = or i32 %118, 128
  store i32 %or.i.i42.i.i.i.i, ptr %add.ptr.i.i41.i.i.i.i, align 4
  br label %if.end20.i.i.i.i

if.end20.i.i.i.i:                                 ; preds = %if.then19.i.i.i.i, %if.end15.i.i.i.i.if.end20.i.i.i.i_crit_edge
  br i1 %tobool28.not.i.not.i.i.i, label %if.then24.i.i.i.i, label %if.end20.i.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge

if.end20.i.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge: ; preds = %if.end20.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_speed_advertising.exit.i.i

if.then24.i.i.i.i:                                ; preds = %if.end20.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i43.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 2
  br label %cleanup.sink.split.i.i.i

sw.bb1.i.i.i:                                     ; preds = %if.end.i.i.i.sw.bb1.i.i.i_crit_edge, %if.end.i.i.i.sw.bb1.i.i.i_crit_edge42
  br i1 %tobool3.not.i87.not.i.i.i, label %if.then.i24.i.i.i, label %sw.bb1.i.i.i.if.end.i27.i.i.i_crit_edge

sw.bb1.i.i.i.if.end.i27.i.i.i_crit_edge:          ; preds = %sw.bb1.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i27.i.i.i

if.then.i24.i.i.i:                                ; preds = %sw.bb1.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i22.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %119 = ptrtoint ptr %add.ptr.i.i.i22.i.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %add.ptr.i.i.i22.i.i.i, align 4
  %or.i.i.i23.i.i.i = or i32 %120, 2048
  store i32 %or.i.i.i23.i.i.i, ptr %add.ptr.i.i.i22.i.i.i, align 4
  br label %if.end.i27.i.i.i

if.end.i27.i.i.i:                                 ; preds = %if.then.i24.i.i.i, %sw.bb1.i.i.i.if.end.i27.i.i.i_crit_edge
  br i1 %tobool8.not.i92.not.i.i.i, label %if.then4.i30.i.i.i, label %if.end.i27.i.i.i.if.end5.i33.i.i.i_crit_edge

if.end.i27.i.i.i.if.end5.i33.i.i.i_crit_edge:     ; preds = %if.end.i27.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i33.i.i.i

if.then4.i30.i.i.i:                               ; preds = %if.end.i27.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i36.i28.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %121 = ptrtoint ptr %add.ptr.i.i36.i28.i.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %add.ptr.i.i36.i28.i.i.i, align 4
  %or.i.i37.i29.i.i.i = or i32 %122, 2
  store i32 %or.i.i37.i29.i.i.i, ptr %add.ptr.i.i36.i28.i.i.i, align 4
  br label %if.end5.i33.i.i.i

if.end5.i33.i.i.i:                                ; preds = %if.then4.i30.i.i.i, %if.end.i27.i.i.i.if.end5.i33.i.i.i_crit_edge
  br i1 %tobool13.not.i98.not.i.i.i, label %if.then9.i34.i.i.i, label %if.end5.i33.i.i.i.if.end10.i37.i.i.i_crit_edge

if.end5.i33.i.i.i.if.end10.i37.i.i.i_crit_edge:   ; preds = %if.end5.i33.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i37.i.i.i

if.then9.i34.i.i.i:                               ; preds = %if.end5.i33.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %123 = ptrtoint ptr %advertising.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %advertising.i.i, align 4
  %or.i.i38.i.i.i.i = or i32 %124, 33554432
  store i32 %or.i.i38.i.i.i.i, ptr %advertising.i.i, align 4
  br label %if.end10.i37.i.i.i

if.end10.i37.i.i.i:                               ; preds = %if.then9.i34.i.i.i, %if.end5.i33.i.i.i.if.end10.i37.i.i.i_crit_edge
  br i1 %tobool18.not.i102.not.i.i.i, label %if.then14.i39.i.i.i, label %if.end10.i37.i.i.i.if.end15.i42.i.i.i_crit_edge

if.end10.i37.i.i.i.if.end15.i42.i.i.i_crit_edge:  ; preds = %if.end10.i37.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i42.i.i.i

if.then14.i39.i.i.i:                              ; preds = %if.end10.i37.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i39.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %125 = ptrtoint ptr %add.ptr.i.i39.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %add.ptr.i.i39.i.i.i.i, align 4
  %or.i.i40.i38.i.i.i = or i32 %126, 256
  store i32 %or.i.i40.i38.i.i.i, ptr %add.ptr.i.i39.i.i.i.i, align 4
  br label %if.end15.i42.i.i.i

if.end15.i42.i.i.i:                               ; preds = %if.then14.i39.i.i.i, %if.end10.i37.i.i.i.if.end15.i42.i.i.i_crit_edge
  br i1 %tobool23.not.i106.not.i.i.i, label %if.then19.i45.i.i.i, label %if.end15.i42.i.i.i.if.end20.i48.i.i.i_crit_edge

if.end15.i42.i.i.i.if.end20.i48.i.i.i_crit_edge:  ; preds = %if.end15.i42.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i48.i.i.i

if.then19.i45.i.i.i:                              ; preds = %if.end15.i42.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i41.i43.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %127 = ptrtoint ptr %add.ptr.i.i41.i43.i.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %add.ptr.i.i41.i43.i.i.i, align 4
  %or.i.i42.i44.i.i.i = or i32 %128, 32
  store i32 %or.i.i42.i44.i.i.i, ptr %add.ptr.i.i41.i43.i.i.i, align 4
  br label %if.end20.i48.i.i.i

if.end20.i48.i.i.i:                               ; preds = %if.then19.i45.i.i.i, %if.end15.i42.i.i.i.if.end20.i48.i.i.i_crit_edge
  br i1 %tobool28.not.i.not.i.i.i, label %if.then24.i51.i.i.i, label %if.end20.i48.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge

if.end20.i48.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge: ; preds = %if.end20.i48.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_speed_advertising.exit.i.i

if.then24.i51.i.i.i:                              ; preds = %if.end20.i48.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i43.i49.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  br label %cleanup.sink.split.i.i.i

sw.bb5.i.i.i:                                     ; preds = %if.end.i.i.i
  br i1 %tobool3.not.i87.not.i.i.i, label %if.then.i57.i.i.i, label %sw.bb5.i.i.i.if.end.i60.i.i.i_crit_edge

sw.bb5.i.i.i.if.end.i60.i.i.i_crit_edge:          ; preds = %sw.bb5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i60.i.i.i

if.then.i57.i.i.i:                                ; preds = %sw.bb5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i55.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %129 = ptrtoint ptr %add.ptr.i.i.i55.i.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %add.ptr.i.i.i55.i.i.i, align 4
  %or.i.i.i56.i.i.i = or i32 %130, 1024
  store i32 %or.i.i.i56.i.i.i, ptr %add.ptr.i.i.i55.i.i.i, align 4
  br label %if.end.i60.i.i.i

if.end.i60.i.i.i:                                 ; preds = %if.then.i57.i.i.i, %sw.bb5.i.i.i.if.end.i60.i.i.i_crit_edge
  br i1 %tobool8.not.i92.not.i.i.i, label %if.then4.i61.i.i.i, label %if.end.i60.i.i.i.if.end5.i64.i.i.i_crit_edge

if.end.i60.i.i.i.if.end5.i64.i.i.i_crit_edge:     ; preds = %if.end.i60.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i64.i.i.i

if.then4.i61.i.i.i:                               ; preds = %if.end.i60.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %131 = ptrtoint ptr %advertising.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %advertising.i.i, align 4
  %or.i.i36.i.i.i.i = or i32 %132, -2147483648
  store i32 %or.i.i36.i.i.i.i, ptr %advertising.i.i, align 4
  br label %if.end5.i64.i.i.i

if.end5.i64.i.i.i:                                ; preds = %if.then4.i61.i.i.i, %if.end.i60.i.i.i.if.end5.i64.i.i.i_crit_edge
  br i1 %tobool13.not.i98.not.i.i.i, label %if.then9.i66.i.i.i, label %if.end5.i64.i.i.i.if.end10.i69.i.i.i_crit_edge

if.end5.i64.i.i.i.if.end10.i69.i.i.i_crit_edge:   ; preds = %if.end5.i64.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i69.i.i.i

if.then9.i66.i.i.i:                               ; preds = %if.end5.i64.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %133 = ptrtoint ptr %advertising.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %advertising.i.i, align 4
  %or.i.i37.i65.i.i.i = or i32 %134, 16777216
  store i32 %or.i.i37.i65.i.i.i, ptr %advertising.i.i, align 4
  br label %if.end10.i69.i.i.i

if.end10.i69.i.i.i:                               ; preds = %if.then9.i66.i.i.i, %if.end5.i64.i.i.i.if.end10.i69.i.i.i_crit_edge
  br i1 %tobool18.not.i102.not.i.i.i, label %if.then14.i72.i.i.i, label %if.end10.i69.i.i.i.if.end15.i75.i.i.i_crit_edge

if.end10.i69.i.i.i.if.end15.i75.i.i.i_crit_edge:  ; preds = %if.end10.i69.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i75.i.i.i

if.then14.i72.i.i.i:                              ; preds = %if.end10.i69.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i38.i70.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %135 = ptrtoint ptr %add.ptr.i.i38.i70.i.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %add.ptr.i.i38.i70.i.i.i, align 4
  %or.i.i39.i71.i.i.i = or i32 %136, 4
  store i32 %or.i.i39.i71.i.i.i, ptr %add.ptr.i.i38.i70.i.i.i, align 4
  br label %if.end15.i75.i.i.i

if.end15.i75.i.i.i:                               ; preds = %if.then14.i72.i.i.i, %if.end10.i69.i.i.i.if.end15.i75.i.i.i_crit_edge
  br i1 %tobool23.not.i106.not.i.i.i, label %if.then19.i76.i.i.i, label %if.end15.i75.i.i.i.if.end20.i79.i.i.i_crit_edge

if.end15.i75.i.i.i.if.end20.i79.i.i.i_crit_edge:  ; preds = %if.end15.i75.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i79.i.i.i

if.then19.i76.i.i.i:                              ; preds = %if.end15.i75.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i40.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %137 = ptrtoint ptr %add.ptr.i.i40.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %add.ptr.i.i40.i.i.i.i, align 4
  %or.i.i41.i.i.i.i = or i32 %138, 64
  store i32 %or.i.i41.i.i.i.i, ptr %add.ptr.i.i40.i.i.i.i, align 4
  br label %if.end20.i79.i.i.i

if.end20.i79.i.i.i:                               ; preds = %if.then19.i76.i.i.i, %if.end15.i75.i.i.i.if.end20.i79.i.i.i_crit_edge
  br i1 %tobool28.not.i.not.i.i.i, label %if.then24.i80.i.i.i, label %if.end20.i79.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge

if.end20.i79.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge: ; preds = %if.end20.i79.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_speed_advertising.exit.i.i

if.then24.i80.i.i.i:                              ; preds = %if.end20.i79.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i42.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 2
  br label %cleanup.sink.split.i.i.i

sw.bb9.i.i.i:                                     ; preds = %if.end.i.i.i
  br i1 %tobool.not.i83.not.i.i.i, label %if.then.i85.i.i.i, label %sw.bb9.i.i.i.if.end.i88.i.i.i_crit_edge

sw.bb9.i.i.i.if.end.i88.i.i.i_crit_edge:          ; preds = %sw.bb9.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i88.i.i.i

if.then.i85.i.i.i:                                ; preds = %sw.bb9.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %139 = ptrtoint ptr %advertising.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %advertising.i.i, align 4
  %or.i.i.i84.i.i.i = or i32 %140, 131072
  store i32 %or.i.i.i84.i.i.i, ptr %advertising.i.i, align 4
  br label %if.end.i88.i.i.i

if.end.i88.i.i.i:                                 ; preds = %if.then.i85.i.i.i, %sw.bb9.i.i.i.if.end.i88.i.i.i_crit_edge
  br i1 %tobool3.not.i87.not.i.i.i, label %if.then4.i90.i.i.i, label %if.end.i88.i.i.i.if.end5.i93.i.i.i_crit_edge

if.end.i88.i.i.i.if.end5.i93.i.i.i_crit_edge:     ; preds = %if.end.i88.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i93.i.i.i

if.then4.i90.i.i.i:                               ; preds = %if.end.i88.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %141 = ptrtoint ptr %advertising.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %advertising.i.i, align 4
  %or.i.i43.i89.i.i.i = or i32 %142, 524288
  store i32 %or.i.i43.i89.i.i.i, ptr %advertising.i.i, align 4
  br label %if.end5.i93.i.i.i

if.end5.i93.i.i.i:                                ; preds = %if.then4.i90.i.i.i, %if.end.i88.i.i.i.if.end5.i93.i.i.i_crit_edge
  br i1 %tobool8.not.i92.not.i.i.i, label %if.then9.i96.i.i.i, label %if.end5.i93.i.i.i.if.end10.i99.i.i.i_crit_edge

if.end5.i93.i.i.i.if.end10.i99.i.i.i_crit_edge:   ; preds = %if.end5.i93.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i99.i.i.i

if.then9.i96.i.i.i:                               ; preds = %if.end5.i93.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i94.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %143 = ptrtoint ptr %add.ptr.i.i.i94.i.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %add.ptr.i.i.i94.i.i.i, align 4
  %or.i.i44.i95.i.i.i = or i32 %144, 1
  store i32 %or.i.i44.i95.i.i.i, ptr %add.ptr.i.i.i94.i.i.i, align 4
  br label %if.end10.i99.i.i.i

if.end10.i99.i.i.i:                               ; preds = %if.then9.i96.i.i.i, %if.end5.i93.i.i.i.if.end10.i99.i.i.i_crit_edge
  br i1 %tobool13.not.i98.not.i.i.i, label %if.then14.i100.i.i.i, label %if.end10.i99.i.i.i.if.end15.i103.i.i.i_crit_edge

if.end10.i99.i.i.i.if.end15.i103.i.i.i_crit_edge: ; preds = %if.end10.i99.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i103.i.i.i

if.then14.i100.i.i.i:                             ; preds = %if.end10.i99.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %145 = ptrtoint ptr %advertising.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %advertising.i.i, align 4
  %or.i.i45.i.i.i.i = or i32 %146, 8388608
  store i32 %or.i.i45.i.i.i.i, ptr %advertising.i.i, align 4
  br label %if.end15.i103.i.i.i

if.end15.i103.i.i.i:                              ; preds = %if.then14.i100.i.i.i, %if.end10.i99.i.i.i.if.end15.i103.i.i.i_crit_edge
  br i1 %tobool18.not.i102.not.i.i.i, label %if.then19.i104.i.i.i, label %if.end15.i103.i.i.i.if.end20.i107.i.i.i_crit_edge

if.end15.i103.i.i.i.if.end20.i107.i.i.i_crit_edge: ; preds = %if.end15.i103.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i107.i.i.i

if.then19.i104.i.i.i:                             ; preds = %if.end15.i103.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i46.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %147 = ptrtoint ptr %add.ptr.i.i46.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %add.ptr.i.i46.i.i.i.i, align 4
  %or.i.i47.i.i.i.i = or i32 %148, 8
  store i32 %or.i.i47.i.i.i.i, ptr %add.ptr.i.i46.i.i.i.i, align 4
  br label %if.end20.i107.i.i.i

if.end20.i107.i.i.i:                              ; preds = %if.then19.i104.i.i.i, %if.end15.i103.i.i.i.if.end20.i107.i.i.i_crit_edge
  br i1 %tobool23.not.i106.not.i.i.i, label %if.then24.i108.i.i.i, label %if.end20.i107.i.i.i.if.end25.i.i.i.i_crit_edge

if.end20.i107.i.i.i.if.end25.i.i.i.i_crit_edge:   ; preds = %if.end20.i107.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25.i.i.i.i

if.then24.i108.i.i.i:                             ; preds = %if.end20.i107.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i48.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %149 = ptrtoint ptr %add.ptr.i.i48.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %add.ptr.i.i48.i.i.i.i, align 4
  %or.i.i49.i.i.i.i = or i32 %150, 16
  store i32 %or.i.i49.i.i.i.i, ptr %add.ptr.i.i48.i.i.i.i, align 4
  br label %if.end25.i.i.i.i

if.end25.i.i.i.i:                                 ; preds = %if.then24.i108.i.i.i, %if.end20.i107.i.i.i.if.end25.i.i.i.i_crit_edge
  br i1 %tobool28.not.i.not.i.i.i, label %if.then29.i.i.i.i, label %if.end25.i.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge

if.end25.i.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge: ; preds = %if.end25.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_speed_advertising.exit.i.i

if.then29.i.i.i.i:                                ; preds = %if.end25.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i50.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  br label %cleanup.sink.split.i.i.i

cleanup.sink.split.i.i.i:                         ; preds = %if.then29.i.i.i.i, %if.then24.i80.i.i.i, %if.then24.i51.i.i.i, %if.then24.i.i.i.i
  %add.ptr.i.i50.i.sink117.i.i.i = phi ptr [ %add.ptr.i.i50.i.i.i.i, %if.then29.i.i.i.i ], [ %add.ptr.i.i42.i.i.i.i, %if.then24.i80.i.i.i ], [ %add.ptr.i.i43.i49.i.i.i, %if.then24.i51.i.i.i ], [ %add.ptr.i.i43.i.i.i.i, %if.then24.i.i.i.i ]
  %.sink116.i.i.i = phi i32 [ 1073741824, %if.then29.i.i.i.i ], [ 4, %if.then24.i80.i.i.i ], [ -2147483648, %if.then24.i51.i.i.i ], [ 1, %if.then24.i.i.i.i ]
  %151 = ptrtoint ptr %add.ptr.i.i50.i.sink117.i.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %add.ptr.i.i50.i.sink117.i.i.i, align 4
  %or.i.i51.i.i.i.i = or i32 %152, %.sink116.i.i.i
  store i32 %or.i.i51.i.i.i.i, ptr %add.ptr.i.i50.i.sink117.i.i.i, align 4
  br label %hclge_update_speed_advertising.exit.i.i

hclge_update_speed_advertising.exit.i.i:          ; preds = %cleanup.sink.split.i.i.i, %if.end25.i.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge, %if.end20.i79.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge, %if.end20.i48.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge, %if.end20.i.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge, %if.end.i.i.i.hclge_update_speed_advertising.exit.i.i_crit_edge, %if.else20.i.hclge_update_speed_advertising.exit.i.i_crit_edge
  %fec_mode.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 13
  %153 = ptrtoint ptr %fec_mode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %fec_mode.i.i.i, align 4
  %and.i.i35.i = and i32 %154, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i35.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i35.i, 0
  br i1 %tobool.not.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %hclge_update_speed_advertising.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i.i.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %155 = ptrtoint ptr %add.ptr.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %add.ptr.i.i.i.i.i, align 4
  %or.i.i.i.i.i = or i32 %156, 262144
  store i32 %or.i.i.i.i.i, ptr %add.ptr.i.i.i.i.i, align 4
  br label %hclge_update_fec_advertising.exit.i.i

if.else.i.i.i:                                    ; preds = %hclge_update_speed_advertising.exit.i.i
  %and2.i.i.i = and i32 %154, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i.i)
  %tobool3.not.i.i.i = icmp eq i32 %and2.i.i.i, 0
  %add.ptr.i.i17.i.i.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 21, i32 1
  %157 = ptrtoint ptr %add.ptr.i.i17.i.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %add.ptr.i.i17.i.i.i, align 4
  br i1 %tobool3.not.i.i.i, label %if.else7.i.i.i, label %if.then4.i.i.i

if.then4.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %or.i.i16.i.i.i = or i32 %158, 524288
  %159 = ptrtoint ptr %add.ptr.i.i17.i.i.i to i32
  call void @__asan_store4_noabort(i32 %159)
  store i32 %or.i.i16.i.i.i, ptr %add.ptr.i.i17.i.i.i, align 4
  br label %hclge_update_fec_advertising.exit.i.i

if.else7.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %or.i.i18.i.i.i = or i32 %158, 131072
  %160 = ptrtoint ptr %add.ptr.i.i17.i.i.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 %or.i.i18.i.i.i, ptr %add.ptr.i.i17.i.i.i, align 4
  br label %hclge_update_fec_advertising.exit.i.i

hclge_update_fec_advertising.exit.i.i:            ; preds = %if.else7.i.i.i, %if.then4.i.i.i, %if.then.i.i.i
  %fc_mode_last_time.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 30
  %161 = ptrtoint ptr %fc_mode_last_time.i.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %fc_mode_last_time.i.i.i, align 4
  %switch.tableidx = add i32 %162, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %163 = icmp ult i32 %switch.tableidx, 3
  br i1 %163, label %switch.lookup, label %hclge_update_fec_advertising.exit.i.i.hclge_update_advertising.exit.i_crit_edge

hclge_update_fec_advertising.exit.i.i.hclge_update_advertising.exit.i_crit_edge: ; preds = %hclge_update_fec_advertising.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_advertising.exit.i

switch.lookup:                                    ; preds = %hclge_update_fec_advertising.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %164 = and i32 %switch.tableidx, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %164)
  %switch.idx.cast.not = icmp eq i32 %164, 0
  %switch.cast = trunc i32 %switch.tableidx to i3
  %switch.downshift = lshr i3 -2, %switch.cast
  %165 = and i3 %switch.downshift, 1
  %166 = sext i3 %165 to i8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %166)
  %switch.masked = icmp ne i3 %165, 0
  br label %hclge_update_advertising.exit.i

hclge_update_advertising.exit.i:                  ; preds = %switch.lookup, %hclge_update_fec_advertising.exit.i.i.hclge_update_advertising.exit.i_crit_edge
  %rx_en.0.off0.i.i.i = phi i1 [ %switch.idx.cast.not, %switch.lookup ], [ false, %hclge_update_fec_advertising.exit.i.i.hclge_update_advertising.exit.i_crit_edge ]
  %tx_en.0.off0.i.i.i = phi i1 [ %switch.masked, %switch.lookup ], [ false, %hclge_update_fec_advertising.exit.i.i.hclge_update_advertising.exit.i_crit_edge ]
  call void @linkmode_set_pause(ptr noundef %advertising.i.i, i1 noundef zeroext %tx_en.0.off0.i.i.i, i1 noundef zeroext %rx_en.0.off0.i.i.i) #16
  br label %cleanup

if.end29:                                         ; preds = %if.then24
  %speed30 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %167 = ptrtoint ptr %speed30 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %speed30, align 4
  %support_autoneg.i15 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 7
  %169 = ptrtoint ptr %support_autoneg.i15 to i32
  call void @__asan_load1_noabort(i32 %169)
  %170 = load i8, ptr %support_autoneg.i15, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %170)
  %tobool.not.i16 = icmp eq i8 %170, 0
  br i1 %tobool.not.i16, label %land.lhs.true3.i, label %if.end29.if.end.i18_crit_edge

if.end29.if.end.i18_crit_edge:                    ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i18

land.lhs.true3.i:                                 ; preds = %if.end29
  %duplex4.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 6
  %171 = ptrtoint ptr %duplex4.i to i32
  call void @__asan_load1_noabort(i32 %171)
  %172 = load i8, ptr %duplex4.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %172)
  %cmp6.i = icmp eq i8 %172, 1
  br i1 %cmp6.i, label %land.lhs.true3.i.cleanup_crit_edge, label %land.lhs.true3.i.if.end.i18_crit_edge

land.lhs.true3.i.if.end.i18_crit_edge:            ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i18

land.lhs.true3.i.cleanup_crit_edge:               ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i18:                                       ; preds = %land.lhs.true3.i.if.end.i18_crit_edge, %if.end29.if.end.i18_crit_edge
  %call8.i = call fastcc i32 @hclge_cfg_mac_speed_dup_hw(ptr noundef %hdev, i32 noundef %168, i8 noundef zeroext 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.end11.i, label %if.end.i18.cleanup_crit_edge

if.end.i18.cleanup_crit_edge:                     ; preds = %if.end.i18
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11.i:                                       ; preds = %if.end.i18
  call void @__sanitizer_cov_trace_pc() #18
  %173 = ptrtoint ptr %speed30 to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 %168, ptr %speed30, align 4
  %duplex17.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 6
  %174 = ptrtoint ptr %duplex17.i to i32
  call void @__asan_store1_noabort(i32 %174)
  store i8 1, ptr %duplex17.i, align 1
  br label %cleanup

if.else32:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %speed.1)
  %cmp33 = icmp eq i32 %speed.1, 0
  br i1 %cmp33, label %if.else32.cleanup_crit_edge, label %hclge_check_speed_dup.exit.i23

if.else32.cleanup_crit_edge:                      ; preds = %if.else32
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

hclge_check_speed_dup.exit.i23:                   ; preds = %if.else32
  %support_autoneg.i21 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 7
  %175 = ptrtoint ptr %support_autoneg.i21 to i32
  call void @__asan_load1_noabort(i32 %175)
  %176 = load i8, ptr %support_autoneg.i21, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %176)
  %tobool.not.i22 = icmp eq i8 %176, 0
  br i1 %tobool.not.i22, label %land.lhs.true.i26, label %hclge_check_speed_dup.exit.i23.if.end.i32_crit_edge

hclge_check_speed_dup.exit.i23.if.end.i32_crit_edge: ; preds = %hclge_check_speed_dup.exit.i23
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i32

land.lhs.true.i26:                                ; preds = %hclge_check_speed_dup.exit.i23
  %speed2.i24 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %177 = ptrtoint ptr %speed2.i24 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %speed2.i24, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %178, i32 %speed.1)
  %cmp.i25 = icmp eq i32 %178, %speed.1
  br i1 %cmp.i25, label %land.lhs.true3.i29, label %land.lhs.true.i26.if.end.i32_crit_edge

land.lhs.true.i26.if.end.i32_crit_edge:           ; preds = %land.lhs.true.i26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i32

land.lhs.true3.i29:                               ; preds = %land.lhs.true.i26
  %duplex4.i27 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 6
  %179 = ptrtoint ptr %duplex4.i27 to i32
  call void @__asan_load1_noabort(i32 %179)
  %180 = load i8, ptr %duplex4.i27, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %180)
  %cmp6.i28 = icmp eq i8 %180, 1
  br i1 %cmp6.i28, label %land.lhs.true3.i29.cleanup_crit_edge, label %land.lhs.true3.i29.if.end.i32_crit_edge

land.lhs.true3.i29.if.end.i32_crit_edge:          ; preds = %land.lhs.true3.i29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i32

land.lhs.true3.i29.cleanup_crit_edge:             ; preds = %land.lhs.true3.i29
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i32:                                       ; preds = %land.lhs.true3.i29.if.end.i32_crit_edge, %land.lhs.true.i26.if.end.i32_crit_edge, %hclge_check_speed_dup.exit.i23.if.end.i32_crit_edge
  %call8.i30 = call fastcc i32 @hclge_cfg_mac_speed_dup_hw(ptr noundef %hdev, i32 noundef %speed.1, i8 noundef zeroext 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i30)
  %tobool9.not.i31 = icmp eq i32 %call8.i30, 0
  br i1 %tobool9.not.i31, label %if.end11.i35, label %if.end.i32.cleanup_crit_edge

if.end.i32.cleanup_crit_edge:                     ; preds = %if.end.i32
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11.i35:                                     ; preds = %if.end.i32
  call void @__sanitizer_cov_trace_pc() #18
  %speed14.i33 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 9
  %181 = ptrtoint ptr %speed14.i33 to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 %speed.1, ptr %speed14.i33, align 4
  %duplex17.i34 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2, i32 1, i32 6
  %182 = ptrtoint ptr %duplex17.i34 to i32
  call void @__asan_store1_noabort(i32 %182)
  store i8 1, ptr %duplex17.i34, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11.i35, %if.end.i32.cleanup_crit_edge, %land.lhs.true3.i29.cleanup_crit_edge, %if.else32.cleanup_crit_edge, %if.end11.i, %if.end.i18.cleanup_crit_edge, %land.lhs.true3.i.cleanup_crit_edge, %hclge_update_advertising.exit.i, %if.then15.i, %if.then13, %if.end10.cleanup_crit_edge, %if.end.cleanup_crit_edge, %hclge_update_tp_port_info.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_config_mac_tnl_int(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_push_vf_link_status(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_sync_vport_mac_table(ptr noundef %vport, i32 noundef %mac_type) unnamed_addr #0 align 64 {
entry:
  %tmp_add_list = alloca %struct.list_head, align 4
  %tmp_del_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_add_list) #16
  %0 = getelementptr inbounds %struct.list_head, ptr %tmp_add_list, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_del_list) #16
  %1 = getelementptr inbounds %struct.list_head, ptr %tmp_del_list, i32 0, i32 1
  %2 = ptrtoint ptr %tmp_add_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %tmp_add_list, ptr %tmp_add_list, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %tmp_add_list, ptr %0, align 4
  %4 = ptrtoint ptr %tmp_del_list to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %tmp_del_list, ptr %tmp_del_list, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %tmp_del_list, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mac_type)
  %cmp = icmp eq i32 %mac_type, 0
  %uc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 22
  %mc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 23
  %cond = select i1 %cmp, ptr %uc_mac_list, ptr %mc_mac_list
  %mac_list_lock = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 21
  call void @_raw_spin_lock_bh(ptr noundef %mac_list_lock) #16
  %6 = ptrtoint ptr %cond to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cond, align 4
  %cmp7.not95 = icmp eq ptr %7, %cond
  br i1 %cmp7.not95, label %entry.stop_traverse_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.stop_traverse_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %stop_traverse

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %mac_node.096 = phi ptr [ %tmp.098, %for.inc.for.body_crit_edge ], [ %7, %entry.for.body_crit_edge ]
  %8 = ptrtoint ptr %mac_node.096 to i32
  call void @__asan_load4_noabort(i32 %8)
  %tmp.098 = load ptr, ptr %mac_node.096, align 4
  %state = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.096, i32 0, i32 1
  %9 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %state, align 4
  %11 = zext i32 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.802)
  switch i32 %10, label %for.body.for.inc_crit_edge [
    i32 1, label %sw.bb
    i32 0, label %sw.bb9
  ]

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

sw.bb:                                            ; preds = %for.body
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.096) #16
  br i1 %call.i.i, label %if.end.i.i, label %sw.bb.__list_del_entry.exit.i_crit_edge

sw.bb.__list_del_entry.exit.i_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.096, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i, align 4
  %14 = ptrtoint ptr %mac_node.096 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mac_node.096, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %sw.bb.__list_del_entry.exit.i_crit_edge
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %mac_node.096, ptr noundef %19, ptr noundef nonnull %tmp_del_list) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.for.inc_crit_edge

__list_del_entry.exit.i.for.inc_crit_edge:        ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %mac_node.096, ptr %1, align 4
  %21 = ptrtoint ptr %mac_node.096 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %tmp_del_list, ptr %mac_node.096, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.096, i32 0, i32 1
  %22 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %19, ptr %prev3.i.i.i, align 4
  %23 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %mac_node.096, ptr %19, align 4
  br label %for.inc

sw.bb9:                                           ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %24 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %24, i32 noundef 2848, i32 noundef 20) #21
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %sw.bb9.stop_traverse_crit_edge, label %if.end

sw.bb9.stop_traverse_crit_edge:                   ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #18
  br label %stop_traverse

if.end:                                           ; preds = %sw.bb9
  %mac_addr = getelementptr inbounds %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 2
  %mac_addr10 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.096, i32 0, i32 2
  %25 = ptrtoint ptr %mac_addr10 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mac_addr10, align 4
  %27 = ptrtoint ptr %mac_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %mac_addr, align 4
  %add.ptr.i = getelementptr %struct.hclge_mac_node, ptr %mac_node.096, i32 0, i32 2, i32 4
  %28 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %add.ptr.i, align 2
  %add.ptr1.i = getelementptr %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 2, i32 4
  %30 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %29, ptr %add.ptr1.i, align 8
  %31 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %state, align 4
  %state13 = getelementptr inbounds %struct.hclge_mac_node, ptr %call7.i.i, i32 0, i32 1
  %33 = ptrtoint ptr %state13 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %state13, align 8
  %34 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %0, align 4
  %call.i.i52 = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %35, ptr noundef nonnull %tmp_add_list) #16
  br i1 %call.i.i52, label %if.end.i.i53, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end.i.i53:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %call7.i.i, ptr %0, align 4
  %37 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %tmp_add_list, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %38 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev3.i.i, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %call7.i.i, ptr %35, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i53, %if.end.for.inc_crit_edge, %if.end.i.i.i, %__list_del_entry.exit.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp7.not = icmp eq ptr %tmp.098, %cond
  br i1 %cmp7.not, label %for.inc.stop_traverse_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.stop_traverse_crit_edge:                  ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %stop_traverse

stop_traverse:                                    ; preds = %for.inc.stop_traverse_crit_edge, %sw.bb9.stop_traverse_crit_edge, %entry.stop_traverse_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  %hclge_rm_uc_addr_common.hclge_rm_mc_addr_common.i = select i1 %cmp, ptr @hclge_rm_uc_addr_common, ptr @hclge_rm_mc_addr_common
  %40 = ptrtoint ptr %tmp_del_list to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %tmp_del_list, align 4
  %cmp7.not27.i = icmp eq ptr %41, %tmp_del_list
  br i1 %cmp7.not27.i, label %stop_traverse.hclge_unsync_vport_mac_list.exit_crit_edge, label %stop_traverse.for.body.i_crit_edge

stop_traverse.for.body.i_crit_edge:               ; preds = %stop_traverse
  br label %for.body.i

stop_traverse.hclge_unsync_vport_mac_list.exit_crit_edge: ; preds = %stop_traverse
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_unsync_vport_mac_list.exit

for.body.i:                                       ; preds = %list_del.exit.i.for.body.i_crit_edge, %stop_traverse.for.body.i_crit_edge
  %mac_node.028.i = phi ptr [ %tmp.030.i, %list_del.exit.i.for.body.i_crit_edge ], [ %41, %stop_traverse.for.body.i_crit_edge ]
  %42 = ptrtoint ptr %mac_node.028.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %tmp.030.i = load ptr, ptr %mac_node.028.i, align 4
  %mac_addr.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.028.i, i32 0, i32 2
  %call.i = call i32 %hclge_rm_uc_addr_common.hclge_rm_mc_addr_common.i(ptr noundef %vport, ptr noundef %mac_addr.i) #16, !callees !1455
  %43 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %43, ptr @__sancov_gen_cov_switch_values.803)
  switch i32 %call.i, label %if.else11.i [
    i32 0, label %for.body.i.if.then9.i_crit_edge
    i32 -2, label %for.body.i.if.then9.i_crit_edge105
  ]

for.body.i.if.then9.i_crit_edge105:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then9.i

for.body.i.if.then9.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then9.i

if.then9.i:                                       ; preds = %for.body.i.if.then9.i_crit_edge, %for.body.i.if.then9.i_crit_edge105
  %call.i.i.i54 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.028.i) #16
  br i1 %call.i.i.i54, label %if.end.i.i.i55, label %if.then9.i.list_del.exit.i_crit_edge

if.then9.i.list_del.exit.i_crit_edge:             ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i55:                                   ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.028.i, i32 0, i32 1
  %44 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %prev.i.i.i, align 4
  %46 = ptrtoint ptr %mac_node.028.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mac_node.028.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %45, ptr %prev1.i.i.i.i, align 4
  %49 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %47, ptr %45, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i55, %if.then9.i.list_del.exit.i_crit_edge
  %50 = ptrtoint ptr %mac_node.028.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.028.i, align 4
  %prev.i.i56 = getelementptr inbounds %struct.list_head, ptr %mac_node.028.i, i32 0, i32 1
  %51 = ptrtoint ptr %prev.i.i56 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i56, align 4
  call void @kfree(ptr noundef %mac_node.028.i) #16
  %cmp7.not.i = icmp eq ptr %tmp.030.i, %tmp_del_list
  br i1 %cmp7.not.i, label %list_del.exit.i.hclge_unsync_vport_mac_list.exit_crit_edge, label %list_del.exit.i.for.body.i_crit_edge

list_del.exit.i.for.body.i_crit_edge:             ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

list_del.exit.i.hclge_unsync_vport_mac_list.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_unsync_vport_mac_list.exit

if.else11.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %state.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  call void @_set_bit(i32 noundef 1, ptr noundef %state.i) #16
  br label %hclge_unsync_vport_mac_list.exit

hclge_unsync_vport_mac_list.exit:                 ; preds = %if.else11.i, %list_del.exit.i.hclge_unsync_vport_mac_list.exit_crit_edge, %stop_traverse.hclge_unsync_vport_mac_list.exit_crit_edge
  %hclge_add_uc_addr_common.hclge_add_mc_addr_common.i = select i1 %cmp, ptr @hclge_add_uc_addr_common, ptr @hclge_add_mc_addr_common
  %52 = ptrtoint ptr %tmp_add_list to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %tmp_add_list, align 4
  %cmp7.not36.i = icmp eq ptr %53, %tmp_add_list
  br i1 %cmp7.not36.i, label %hclge_unsync_vport_mac_list.exit.hclge_sync_vport_mac_list.exit_crit_edge, label %for.body.lr.ph.i

hclge_unsync_vport_mac_list.exit.hclge_sync_vport_mac_list.exit_crit_edge: ; preds = %hclge_unsync_vport_mac_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_vport_mac_list.exit

for.body.lr.ph.i:                                 ; preds = %hclge_unsync_vport_mac_list.exit
  %state10.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  %cmp.not.i = xor i1 %cmp, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mac_type)
  %cmp13.i = icmp ne i32 %mac_type, 1
  br label %for.body.i60

for.body.i60:                                     ; preds = %for.body.i60.backedge, %for.body.lr.ph.i
  %mac_node.037.i = phi ptr [ %53, %for.body.lr.ph.i ], [ %tmp.038.i, %for.body.i60.backedge ]
  %54 = ptrtoint ptr %mac_node.037.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %tmp.038.i = load ptr, ptr %mac_node.037.i, align 4
  %mac_addr.i58 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.037.i, i32 0, i32 2
  %call.i59 = call i32 %hclge_add_uc_addr_common.hclge_add_mc_addr_common.i(ptr noundef %vport, ptr noundef %mac_addr.i58) #16, !callees !1465
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i59)
  %tobool.not.i = icmp eq i32 %call.i59, 0
  br i1 %tobool.not.i, label %if.then8.i, label %if.else9.i

if.then8.i:                                       ; preds = %for.body.i60
  %state.i61 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.037.i, i32 0, i32 1
  %55 = ptrtoint ptr %state.i61 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 2, ptr %state.i61, align 4
  %cmp7.not.old.i = icmp eq ptr %tmp.038.i, %tmp_add_list
  br i1 %cmp7.not.old.i, label %if.then8.i.hclge_sync_vport_mac_list.exit_crit_edge, label %if.then8.i.for.body.i60.backedge_crit_edge

if.then8.i.for.body.i60.backedge_crit_edge:       ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i60.backedge

if.then8.i.hclge_sync_vport_mac_list.exit_crit_edge: ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_vport_mac_list.exit

for.body.i60.backedge:                            ; preds = %if.else9.i.for.body.i60.backedge_crit_edge, %if.then8.i.for.body.i60.backedge_crit_edge
  br label %for.body.i60

if.else9.i:                                       ; preds = %for.body.i60
  call void @_set_bit(i32 noundef 1, ptr noundef %state10.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call.i59)
  %cmp12.not.i = icmp eq i32 %call.i59, -17
  %or.cond.i = select i1 %cmp.not.i, i1 true, i1 %cmp12.not.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -28, i32 %call.i59)
  %cmp15.not.i = icmp eq i32 %call.i59, -28
  %or.cond34.i = select i1 %cmp13.i, i1 true, i1 %cmp15.not.i
  %or.cond39.i = select i1 %or.cond.i, i1 %or.cond34.i, i1 false
  %or.cond39.not.i = xor i1 %or.cond39.i, true
  %cmp7.not.i62 = icmp eq ptr %tmp.038.i, %tmp_add_list
  %or.cond40.i = select i1 %or.cond39.not.i, i1 true, i1 %cmp7.not.i62
  br i1 %or.cond40.i, label %if.else9.i.hclge_sync_vport_mac_list.exit_crit_edge, label %if.else9.i.for.body.i60.backedge_crit_edge

if.else9.i.for.body.i60.backedge_crit_edge:       ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i60.backedge

if.else9.i.hclge_sync_vport_mac_list.exit_crit_edge: ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_vport_mac_list.exit

hclge_sync_vport_mac_list.exit:                   ; preds = %if.else9.i.hclge_sync_vport_mac_list.exit_crit_edge, %if.then8.i.hclge_sync_vport_mac_list.exit_crit_edge, %hclge_unsync_vport_mac_list.exit.hclge_sync_vport_mac_list.exit_crit_edge
  call void @_raw_spin_lock_bh(ptr noundef %mac_list_lock) #16
  call fastcc void @hclge_sync_from_del_list(ptr noundef nonnull %tmp_del_list, ptr noundef %cond)
  %56 = ptrtoint ptr %tmp_add_list to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %tmp_add_list, align 4
  %cmp.not60.i = icmp eq ptr %57, %tmp_add_list
  br i1 %cmp.not60.i, label %hclge_sync_from_add_list.exit.thread, label %for.body.lr.ph.i63

for.body.lr.ph.i63:                               ; preds = %hclge_sync_vport_mac_list.exit
  %prev.i2.i.i = getelementptr inbounds %struct.list_head, ptr %cond, i32 0, i32 1
  br label %for.body.i66

for.body.i66:                                     ; preds = %for.inc.i.for.body.i66_crit_edge, %for.body.lr.ph.i63
  %mac_node.062.i = phi ptr [ %57, %for.body.lr.ph.i63 ], [ %tmp.066.i, %for.inc.i.for.body.i66_crit_edge ]
  %all_added.0.off061.i = phi i1 [ true, %for.body.lr.ph.i63 ], [ %spec.select.i, %for.inc.i.for.body.i66_crit_edge ]
  %58 = ptrtoint ptr %mac_node.062.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %tmp.066.i = load ptr, ptr %mac_node.062.i, align 4
  %state.i64 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.062.i, i32 0, i32 1
  %59 = ptrtoint ptr %state.i64 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %state.i64, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %cmp7.i = icmp ne i32 %60, 0
  %spec.select.i = select i1 %cmp7.i, i1 %all_added.0.off061.i, i1 false
  %mac_addr.i65 = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.062.i, i32 0, i32 2
  %add.ptr.i.i.i = getelementptr %struct.hclge_mac_node, ptr %mac_node.062.i, i32 0, i32 2, i32 4
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %for.body.i66
  %mac_node.0.in.i.i = phi ptr [ %cond, %for.body.i66 ], [ %mac_node.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %61 = ptrtoint ptr %mac_node.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %mac_node.0.i.i = load ptr, ptr %mac_node.0.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %mac_node.0.i.i, %cond
  br i1 %cmp.not.i.i, label %for.cond.i.i.if.else.i_crit_edge, label %for.body.i.i

for.cond.i.i.if.else.i_crit_edge:                 ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %mac_addr7.i.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i.i, i32 0, i32 2
  %62 = ptrtoint ptr %mac_addr.i65 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %mac_addr.i65, align 4
  %64 = ptrtoint ptr %mac_addr7.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %mac_addr7.i.i, align 4
  %xor.i.i.i = xor i32 %65, %63
  %66 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %add.ptr.i.i.i, align 2
  %add.ptr1.i.i.i = getelementptr %struct.hclge_mac_node, ptr %mac_node.0.i.i, i32 0, i32 2, i32 4
  %68 = ptrtoint ptr %add.ptr1.i.i.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %add.ptr1.i.i.i, align 2
  %xor37.i.i.i = xor i16 %69, %67
  %xor3.i.i.i = zext i16 %xor37.i.i.i to i32
  %or.i.i.i = or i32 %xor.i.i.i, %xor3.i.i.i
  %cmp.i.i.i = icmp eq i32 %or.i.i.i, 0
  br i1 %cmp.i.i.i, label %hclge_find_mac_node.exit.i, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i

hclge_find_mac_node.exit.i:                       ; preds = %for.body.i.i
  %tobool.not.i67 = icmp eq ptr %mac_node.0.i.i, null
  br i1 %tobool.not.i67, label %hclge_find_mac_node.exit.i.if.else.i_crit_edge, label %if.then8.i68

hclge_find_mac_node.exit.i.if.else.i_crit_edge:   ; preds = %hclge_find_mac_node.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then8.i68:                                     ; preds = %hclge_find_mac_node.exit.i
  %70 = zext i32 %60 to i64
  call void @__sanitizer_cov_trace_switch(i64 %70, ptr @__sancov_gen_cov_switch_values.804)
  switch i32 %60, label %if.then8.i68.hclge_update_mac_node.exit.i_crit_edge [
    i32 0, label %sw.bb.i.i
    i32 1, label %sw.bb3.i.i
    i32 2, label %sw.bb9.i.i
  ]

if.then8.i68.hclge_update_mac_node.exit.i_crit_edge: ; preds = %if.then8.i68
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_mac_node.exit.i

sw.bb.i.i:                                        ; preds = %if.then8.i68
  %state1.i.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i.i, i32 0, i32 1
  %71 = ptrtoint ptr %state1.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %state1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %72)
  %cmp.i.i = icmp eq i32 %72, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %sw.bb.i.i.hclge_update_mac_node.exit.i_crit_edge

sw.bb.i.i.hclge_update_mac_node.exit.i_crit_edge: ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_mac_node.exit.i

if.then.i.i:                                      ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %73 = ptrtoint ptr %state1.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 2, ptr %state1.i.i, align 4
  br label %hclge_update_mac_node.exit.i

sw.bb3.i.i:                                       ; preds = %if.then8.i68
  %state4.i.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i.i, i32 0, i32 1
  %74 = ptrtoint ptr %state4.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %state4.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %cmp5.i.i = icmp eq i32 %75, 0
  br i1 %cmp5.i.i, label %if.then6.i.i, label %if.else.i.i

if.then6.i.i:                                     ; preds = %sw.bb3.i.i
  %call.i.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %mac_node.0.i.i) #16
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.then6.i.i.list_del.exit.i.i_crit_edge

if.then6.i.i.list_del.exit.i.i_crit_edge:         ; preds = %if.then6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.then6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.0.i.i, i32 0, i32 1
  %76 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %prev.i.i.i.i, align 4
  %78 = ptrtoint ptr %mac_node.0.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %mac_node.0.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %77, ptr %prev1.i.i.i.i.i, align 4
  %81 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %81)
  store volatile ptr %79, ptr %77, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i.i, %if.then6.i.i.list_del.exit.i.i_crit_edge
  %82 = ptrtoint ptr %mac_node.0.i.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.0.i.i, align 4
  %prev.i.i.i69 = getelementptr inbounds %struct.list_head, ptr %mac_node.0.i.i, i32 0, i32 1
  %83 = ptrtoint ptr %prev.i.i.i69 to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i69, align 4
  call void @kfree(ptr noundef nonnull %mac_node.0.i.i) #16
  br label %hclge_update_mac_node.exit.i

if.else.i.i:                                      ; preds = %sw.bb3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %84 = ptrtoint ptr %state4.i.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 1, ptr %state4.i.i, align 4
  br label %hclge_update_mac_node.exit.i

sw.bb9.i.i:                                       ; preds = %if.then8.i68
  %state10.i.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.0.i.i, i32 0, i32 1
  %85 = ptrtoint ptr %state10.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %state10.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %cmp11.i.i = icmp eq i32 %86, 0
  br i1 %cmp11.i.i, label %if.then12.i.i, label %sw.bb9.i.i.hclge_update_mac_node.exit.i_crit_edge

sw.bb9.i.i.hclge_update_mac_node.exit.i_crit_edge: ; preds = %sw.bb9.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_update_mac_node.exit.i

if.then12.i.i:                                    ; preds = %sw.bb9.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %87 = ptrtoint ptr %state10.i.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 2, ptr %state10.i.i, align 4
  br label %hclge_update_mac_node.exit.i

hclge_update_mac_node.exit.i:                     ; preds = %if.then12.i.i, %sw.bb9.i.i.hclge_update_mac_node.exit.i_crit_edge, %if.else.i.i, %list_del.exit.i.i, %if.then.i.i, %sw.bb.i.i.hclge_update_mac_node.exit.i_crit_edge, %if.then8.i68.hclge_update_mac_node.exit.i_crit_edge
  %call.i.i.i70 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.062.i) #16
  br i1 %call.i.i.i70, label %if.end.i.i.i72, label %hclge_update_mac_node.exit.i.list_del.exit.i74_crit_edge

hclge_update_mac_node.exit.i.list_del.exit.i74_crit_edge: ; preds = %hclge_update_mac_node.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i74

if.end.i.i.i72:                                   ; preds = %hclge_update_mac_node.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i42.i = getelementptr inbounds %struct.list_head, ptr %mac_node.062.i, i32 0, i32 1
  %88 = ptrtoint ptr %prev.i.i42.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %prev.i.i42.i, align 4
  %90 = ptrtoint ptr %mac_node.062.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %mac_node.062.i, align 4
  %prev1.i.i.i.i71 = getelementptr inbounds %struct.list_head, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %prev1.i.i.i.i71 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %89, ptr %prev1.i.i.i.i71, align 4
  %93 = ptrtoint ptr %89 to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile ptr %91, ptr %89, align 4
  br label %list_del.exit.i74

list_del.exit.i74:                                ; preds = %if.end.i.i.i72, %hclge_update_mac_node.exit.i.list_del.exit.i74_crit_edge
  %94 = ptrtoint ptr %mac_node.062.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.062.i, align 4
  %prev.i.i73 = getelementptr inbounds %struct.list_head, ptr %mac_node.062.i, i32 0, i32 1
  %95 = ptrtoint ptr %prev.i.i73 to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i73, align 4
  call void @kfree(ptr noundef %mac_node.062.i) #16
  br label %for.inc.i

if.else.i:                                        ; preds = %hclge_find_mac_node.exit.i.if.else.i_crit_edge, %for.cond.i.i.if.else.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %60)
  %cmp12.i = icmp eq i32 %60, 2
  br i1 %cmp12.i, label %if.then13.i, label %if.else16.i

if.then13.i:                                      ; preds = %if.else.i
  %96 = ptrtoint ptr %state.i64 to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 1, ptr %state.i64, align 4
  %call.i.i43.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.062.i) #16
  br i1 %call.i.i43.i, label %if.end.i.i46.i, label %if.then13.i.__list_del_entry.exit.i.i_crit_edge

if.then13.i.__list_del_entry.exit.i.i_crit_edge:  ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i.i

if.end.i.i46.i:                                   ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i44.i = getelementptr inbounds %struct.list_head, ptr %mac_node.062.i, i32 0, i32 1
  %97 = ptrtoint ptr %prev.i.i44.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %prev.i.i44.i, align 4
  %99 = ptrtoint ptr %mac_node.062.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %mac_node.062.i, align 4
  %prev1.i.i.i45.i = getelementptr inbounds %struct.list_head, ptr %100, i32 0, i32 1
  %101 = ptrtoint ptr %prev1.i.i.i45.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %98, ptr %prev1.i.i.i45.i, align 4
  %102 = ptrtoint ptr %98 to i32
  call void @__asan_store4_noabort(i32 %102)
  store volatile ptr %100, ptr %98, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i46.i, %if.then13.i.__list_del_entry.exit.i.i_crit_edge
  %103 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %prev.i2.i.i, align 4
  %call.i.i.i47.i = call zeroext i1 @__list_add_valid(ptr noundef %mac_node.062.i, ptr noundef %104, ptr noundef %cond) #16
  br i1 %call.i.i.i47.i, label %if.end.i.i.i48.i, label %__list_del_entry.exit.i.i.for.inc.i_crit_edge

__list_del_entry.exit.i.i.for.inc.i_crit_edge:    ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i.i.i48.i:                                 ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %105 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store ptr %mac_node.062.i, ptr %prev.i2.i.i, align 4
  %106 = ptrtoint ptr %mac_node.062.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store ptr %cond, ptr %mac_node.062.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.062.i, i32 0, i32 1
  %107 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %104, ptr %prev3.i.i.i.i, align 4
  %108 = ptrtoint ptr %104 to i32
  call void @__asan_store4_noabort(i32 %108)
  store volatile ptr %mac_node.062.i, ptr %104, align 4
  br label %for.inc.i

if.else16.i:                                      ; preds = %if.else.i
  %call.i.i49.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.062.i) #16
  br i1 %call.i.i49.i, label %if.end.i.i52.i, label %if.else16.i.list_del.exit55.i_crit_edge

if.else16.i.list_del.exit55.i_crit_edge:          ; preds = %if.else16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit55.i

if.end.i.i52.i:                                   ; preds = %if.else16.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i50.i = getelementptr inbounds %struct.list_head, ptr %mac_node.062.i, i32 0, i32 1
  %109 = ptrtoint ptr %prev.i.i50.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %prev.i.i50.i, align 4
  %111 = ptrtoint ptr %mac_node.062.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %mac_node.062.i, align 4
  %prev1.i.i.i51.i = getelementptr inbounds %struct.list_head, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %prev1.i.i.i51.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %110, ptr %prev1.i.i.i51.i, align 4
  %114 = ptrtoint ptr %110 to i32
  call void @__asan_store4_noabort(i32 %114)
  store volatile ptr %112, ptr %110, align 4
  br label %list_del.exit55.i

list_del.exit55.i:                                ; preds = %if.end.i.i52.i, %if.else16.i.list_del.exit55.i_crit_edge
  %115 = ptrtoint ptr %mac_node.062.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.062.i, align 4
  %prev.i53.i = getelementptr inbounds %struct.list_head, ptr %mac_node.062.i, i32 0, i32 1
  %116 = ptrtoint ptr %prev.i53.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i53.i, align 4
  call void @kfree(ptr noundef %mac_node.062.i) #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %list_del.exit55.i, %if.end.i.i.i48.i, %__list_del_entry.exit.i.i.for.inc.i_crit_edge, %list_del.exit.i74
  %cmp.not.i75 = icmp eq ptr %tmp.066.i, %tmp_add_list
  br i1 %cmp.not.i75, label %hclge_sync_from_add_list.exit, label %for.inc.i.for.body.i66_crit_edge

for.inc.i.for.body.i66_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i66

hclge_sync_from_add_list.exit:                    ; preds = %for.inc.i
  call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  %overflow_promisc_flags.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 19
  %117 = ptrtoint ptr %overflow_promisc_flags.i to i32
  call void @__asan_load1_noabort(i32 %117)
  %118 = load i8, ptr %overflow_promisc_flags.i, align 8
  br i1 %cmp, label %if.then.i, label %if.else6.i

hclge_sync_from_add_list.exit.thread:             ; preds = %hclge_sync_vport_mac_list.exit
  call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  %overflow_promisc_flags.i80 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 19
  %119 = ptrtoint ptr %overflow_promisc_flags.i80 to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %overflow_promisc_flags.i80, align 8
  br i1 %cmp, label %hclge_sync_from_add_list.exit.thread.if.then1.i_crit_edge, label %hclge_sync_from_add_list.exit.thread.if.then8.i78_crit_edge

hclge_sync_from_add_list.exit.thread.if.then8.i78_crit_edge: ; preds = %hclge_sync_from_add_list.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then8.i78

hclge_sync_from_add_list.exit.thread.if.then1.i_crit_edge: ; preds = %hclge_sync_from_add_list.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then1.i

if.then.i:                                        ; preds = %hclge_sync_from_add_list.exit
  br i1 %spec.select.i, label %if.then.i.if.then1.i_crit_edge, label %if.else.i77

if.then.i.if.then1.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then1.i

if.then1.i:                                       ; preds = %if.then.i.if.then1.i_crit_edge, %hclge_sync_from_add_list.exit.thread.if.then1.i_crit_edge
  %overflow_promisc_flags.i8588 = phi ptr [ %overflow_promisc_flags.i, %if.then.i.if.then1.i_crit_edge ], [ %overflow_promisc_flags.i80, %hclge_sync_from_add_list.exit.thread.if.then1.i_crit_edge ]
  %121 = phi i8 [ %118, %if.then.i.if.then1.i_crit_edge ], [ %120, %hclge_sync_from_add_list.exit.thread.if.then1.i_crit_edge ]
  %122 = and i8 %121, -9
  br label %hclge_update_overflow_flags.exit

if.else.i77:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %123 = or i8 %118, 8
  br label %hclge_update_overflow_flags.exit

if.else6.i:                                       ; preds = %hclge_sync_from_add_list.exit
  br i1 %spec.select.i, label %if.else6.i.if.then8.i78_crit_edge, label %if.else13.i

if.else6.i.if.then8.i78_crit_edge:                ; preds = %if.else6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then8.i78

if.then8.i78:                                     ; preds = %if.else6.i.if.then8.i78_crit_edge, %hclge_sync_from_add_list.exit.thread.if.then8.i78_crit_edge
  %overflow_promisc_flags.i8491 = phi ptr [ %overflow_promisc_flags.i, %if.else6.i.if.then8.i78_crit_edge ], [ %overflow_promisc_flags.i80, %hclge_sync_from_add_list.exit.thread.if.then8.i78_crit_edge ]
  %124 = phi i8 [ %118, %if.else6.i.if.then8.i78_crit_edge ], [ %120, %hclge_sync_from_add_list.exit.thread.if.then8.i78_crit_edge ]
  %125 = and i8 %124, -17
  br label %hclge_update_overflow_flags.exit

if.else13.i:                                      ; preds = %if.else6.i
  call void @__sanitizer_cov_trace_pc() #18
  %126 = or i8 %118, 16
  br label %hclge_update_overflow_flags.exit

hclge_update_overflow_flags.exit:                 ; preds = %if.else13.i, %if.then8.i78, %if.else.i77, %if.then1.i
  %overflow_promisc_flags.i83 = phi ptr [ %overflow_promisc_flags.i8491, %if.then8.i78 ], [ %overflow_promisc_flags.i, %if.else13.i ], [ %overflow_promisc_flags.i8588, %if.then1.i ], [ %overflow_promisc_flags.i, %if.else.i77 ]
  %.sink.i = phi i8 [ %125, %if.then8.i78 ], [ %126, %if.else13.i ], [ %122, %if.then1.i ], [ %123, %if.else.i77 ]
  %127 = ptrtoint ptr %overflow_promisc_flags.i83 to i32
  call void @__asan_store1_noabort(i32 %127)
  store i8 %.sink.i, ptr %overflow_promisc_flags.i83, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_del_list) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_add_list) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_clear_fd_rules_in_list(ptr noundef %hdev, i1 noundef zeroext %clear_list) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ae_dev = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 1
  %0 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ae_dev, align 4
  %caps = getelementptr inbounds %struct.hnae3_ae_dev, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %caps, align 4
  %and1.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock) #16
  %fd_bmap = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 74
  %rule_num = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 2
  %4 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rule_num, align 4
  %call2 = tail call i32 @_find_next_bit_be(ptr noundef %fd_bmap, i32 noundef %5, i32 noundef 0) #16
  %conv370 = and i32 %call2, 65535
  %6 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rule_num, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %conv370, i32 %7)
  %cmp71 = icmp ult i32 %conv370, %7
  br i1 %cmp71, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %conv372 = phi i32 [ %conv3, %for.body.for.body_crit_edge ], [ %conv370, %if.end.for.body_crit_edge ]
  %8 = tail call fastcc i32 @hclge_fd_tcam_config(ptr noundef %hdev, i1 noundef zeroext true, i32 noundef %conv372, ptr noundef null, i1 noundef zeroext false)
  %9 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rule_num, align 4
  %add = add nuw nsw i32 %conv372, 1
  %call16 = tail call i32 @_find_next_bit_be(ptr noundef %fd_bmap, i32 noundef %10, i32 noundef %add) #16
  %conv3 = and i32 %call16, 65535
  %11 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rule_num, align 4
  %cmp = icmp ult i32 %conv3, %12
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  br i1 %clear_list, label %if.then19, label %for.end.if.end45_crit_edge

for.end.if.end45_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

if.then19:                                        ; preds = %for.end
  %fd_rule_list = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 67
  %13 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %fd_rule_list, align 4
  %tobool23.not73 = icmp eq ptr %14, null
  br i1 %tobool23.not73, label %if.then19.for.end39_crit_edge, label %land.rhs.preheader

if.then19.for.end39_crit_edge:                    ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end39

land.rhs.preheader:                               ; preds = %if.then19
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %pprev2.i.i75 = getelementptr inbounds %struct.hlist_node, ptr %14, i32 0, i32 1
  %17 = ptrtoint ptr %pprev2.i.i75 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pprev2.i.i75, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %16, ptr %18, align 4
  %tobool.not.i.i76 = icmp eq ptr %16, null
  br i1 %tobool.not.i.i76, label %land.rhs.preheader.for.end39.loopexit_crit_edge, label %land.rhs.preheader.hlist_del.exit_crit_edge

land.rhs.preheader.hlist_del.exit_crit_edge:      ; preds = %land.rhs.preheader
  br label %hlist_del.exit

land.rhs.preheader.for.end39.loopexit_crit_edge:  ; preds = %land.rhs.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end39.loopexit

hlist_del.exit:                                   ; preds = %hlist_del.exit.hlist_del.exit_crit_edge, %land.rhs.preheader.hlist_del.exit_crit_edge
  %20 = phi ptr [ %28, %hlist_del.exit.hlist_del.exit_crit_edge ], [ %18, %land.rhs.preheader.hlist_del.exit_crit_edge ]
  %pprev2.i.i78 = phi ptr [ %pprev2.i.i, %hlist_del.exit.hlist_del.exit_crit_edge ], [ %pprev2.i.i75, %land.rhs.preheader.hlist_del.exit_crit_edge ]
  %21 = phi ptr [ %26, %hlist_del.exit.hlist_del.exit_crit_edge ], [ %16, %land.rhs.preheader.hlist_del.exit_crit_edge ]
  %rule.07477 = phi ptr [ %21, %hlist_del.exit.hlist_del.exit_crit_edge ], [ %14, %land.rhs.preheader.hlist_del.exit_crit_edge ]
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %20, ptr %pprev14.i.i, align 4
  %23 = ptrtoint ptr %rule.07477 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 256 to ptr), ptr %rule.07477, align 4
  %24 = ptrtoint ptr %pprev2.i.i78 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i78, align 4
  tail call void @kfree(ptr noundef nonnull %rule.07477) #16
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %21, align 4
  %pprev2.i.i = getelementptr inbounds %struct.hlist_node, ptr %21, i32 0, i32 1
  %27 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pprev2.i.i, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %26, ptr %28, align 4
  %tobool.not.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i, label %hlist_del.exit.for.end39.loopexit_crit_edge, label %hlist_del.exit.hlist_del.exit_crit_edge

hlist_del.exit.hlist_del.exit_crit_edge:          ; preds = %hlist_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hlist_del.exit

hlist_del.exit.for.end39.loopexit_crit_edge:      ; preds = %hlist_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end39.loopexit

for.end39.loopexit:                               ; preds = %hlist_del.exit.for.end39.loopexit_crit_edge, %land.rhs.preheader.for.end39.loopexit_crit_edge
  %rule.074.lcssa = phi ptr [ %14, %land.rhs.preheader.for.end39.loopexit_crit_edge ], [ %21, %hlist_del.exit.for.end39.loopexit_crit_edge ]
  %pprev2.i.i.lcssa = phi ptr [ %pprev2.i.i75, %land.rhs.preheader.for.end39.loopexit_crit_edge ], [ %pprev2.i.i, %hlist_del.exit.for.end39.loopexit_crit_edge ]
  %30 = ptrtoint ptr %rule.074.lcssa to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 256 to ptr), ptr %rule.074.lcssa, align 4
  %31 = ptrtoint ptr %pprev2.i.i.lcssa to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.lcssa, align 4
  tail call void @kfree(ptr noundef nonnull %rule.074.lcssa) #16
  br label %for.end39

for.end39:                                        ; preds = %for.end39.loopexit, %if.then19.for.end39_crit_edge
  %fd_active_type = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 75
  %32 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %fd_active_type, align 8
  %hclge_fd_rule_num = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 69
  %33 = ptrtoint ptr %hclge_fd_rule_num to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 0, ptr %hclge_fd_rule_num, align 4
  %34 = ptrtoint ptr %rule_num to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rule_num, align 4
  %sub.i = add i32 %35, 31
  %36 = lshr i32 %sub.i, 3
  %mul.i = and i32 %36, 536870908
  %37 = call ptr @memset(ptr %fd_bmap, i32 0, i32 %mul.i)
  br label %if.end45

if.end45:                                         ; preds = %for.end39, %for.end.if.end45_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end45, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_fd_tcam_config(ptr noundef %hdev, i1 noundef zeroext %sel_x, i32 noundef %loc, ptr noundef readonly %key, i1 noundef zeroext %is_add) unnamed_addr #0 align 64 {
entry:
  %desc = alloca [3 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %desc) #16
  %0 = call ptr @memset(ptr %desc, i32 255, i32 96)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 4611, i1 noundef zeroext false) #16
  %flag = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 1
  %1 = ptrtoint ptr %flag to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %flag, align 2
  %3 = or i16 %2, 1024
  store i16 %3, ptr %flag, align 2
  %arrayidx4 = getelementptr inbounds [3 x %struct.hclge_desc], ptr %desc, i32 0, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx4, i32 noundef 4611, i1 noundef zeroext false) #16
  %flag6 = getelementptr inbounds [3 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 1
  %4 = ptrtoint ptr %flag6 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %flag6, align 2
  %6 = or i16 %5, 1024
  store i16 %6, ptr %flag6, align 2
  %arrayidx10 = getelementptr inbounds [3 x %struct.hclge_desc], ptr %desc, i32 0, i32 2
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx10, i32 noundef 4611, i1 noundef zeroext false) #16
  %data = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %7 = ptrtoint ptr %data to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %data, align 4
  %conv20 = zext i1 %sel_x to i8
  %xy_sel = getelementptr inbounds %struct.hclge_fd_tcam_config_1_cmd, ptr %data, i32 0, i32 1
  %8 = ptrtoint ptr %xy_sel to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv20, ptr %xy_sel, align 1
  %port_info = getelementptr inbounds %struct.hclge_fd_tcam_config_1_cmd, ptr %data, i32 0, i32 2
  %9 = ptrtoint ptr %port_info to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %port_info, align 2
  %11 = and i8 %10, -2
  store i8 %11, ptr %port_info, align 2
  %12 = call i32 @llvm.bswap.i32(i32 %loc)
  %index = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 1
  %13 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %index, align 4
  %narrow = and i1 %sel_x, %is_add
  %spec.select = zext i1 %narrow to i8
  %entry_vld = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 2
  %14 = ptrtoint ptr %entry_vld to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %spec.select, ptr %entry_vld, align 4
  %tobool33.not = icmp eq ptr %key, null
  br i1 %tobool33.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %data16 = getelementptr inbounds [3 x %struct.hclge_desc], ptr %desc, i32 0, i32 2, i32 4
  %data13 = getelementptr inbounds [3 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4
  %tcam_data = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 4
  %15 = ptrtoint ptr %key to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %16 = load i64, ptr %key, align 1
  %17 = ptrtoint ptr %tcam_data to i32
  call void @__asan_storeN_noabort(i32 %17, i32 8)
  store i64 %16, ptr %tcam_data, align 4
  %arrayidx38 = getelementptr i8, ptr %key, i32 8
  %18 = call ptr @memcpy(ptr %data13, ptr %arrayidx38, i32 24)
  %arrayidx41 = getelementptr i8, ptr %key, i32 32
  %19 = call ptr @memcpy(ptr %data16, ptr %arrayidx41, i32 20)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool43.not = icmp eq i32 %call.i, 0
  br i1 %tobool43.not, label %if.end.if.end48_crit_edge, label %do.end47

if.end.if.end48_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48

do.end47:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.469, i32 noundef %call.i) #20
  br label %if.end48

if.end48:                                         ; preds = %do.end47, %if.end.if.end48_crit_edge
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %desc) #16
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_fd_set_user_def_cmd(ptr noundef %hdev, ptr nocapture noundef readonly %cfg) unnamed_addr #0 align 64 {
entry:
  %desc = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4
  %1 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 1
  %2 = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 4, i32 2
  %3 = call ptr @memset(ptr %desc, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 4615, i1 noundef zeroext false) #16
  %4 = ptrtoint ptr %cfg to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %cfg, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %cmp.not = icmp eq i16 %5, 0
  %conv11 = select i1 %cmp.not, i16 0, i16 -32768
  %offset = getelementptr inbounds %struct.hclge_fd_user_def_cfg, ptr %cfg, i32 0, i32 1
  %6 = ptrtoint ptr %offset to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %offset, align 2
  %8 = and i16 %7, 32767
  %or17 = or i16 %conv11, %8
  %9 = call i16 @llvm.bswap.i16(i16 %or17)
  %10 = ptrtoint ptr %0 to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %0, align 4
  %arrayidx25 = getelementptr %struct.hclge_fd_user_def_cfg, ptr %cfg, i32 1
  %11 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %arrayidx25, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %cmp28.not = icmp eq i16 %12, 0
  %conv40 = select i1 %cmp28.not, i16 0, i16 -32768
  %offset42 = getelementptr %struct.hclge_fd_user_def_cfg, ptr %cfg, i32 1, i32 1
  %13 = ptrtoint ptr %offset42 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %offset42, align 2
  %15 = and i16 %14, 32767
  %or47 = or i16 %conv40, %15
  %16 = call i16 @llvm.bswap.i16(i16 %or47)
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %16, ptr %1, align 4
  %arrayidx55 = getelementptr %struct.hclge_fd_user_def_cfg, ptr %cfg, i32 2
  %18 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %arrayidx55, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %cmp58.not = icmp eq i16 %19, 0
  %conv70 = select i1 %cmp58.not, i16 0, i16 -32768
  %offset72 = getelementptr %struct.hclge_fd_user_def_cfg, ptr %cfg, i32 2, i32 1
  %20 = ptrtoint ptr %offset72 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %offset72, align 2
  %22 = and i16 %21, 32767
  %or77 = or i16 %conv70, %22
  %23 = call i16 @llvm.bswap.i16(i16 %or77)
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %23, ptr %2, align 4
  %hw = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw, ptr noundef nonnull %desc, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end83

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end83:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.471, i32 noundef %call.i) #20
  br label %if.end

if.end:                                           ; preds = %do.end83, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc) #16
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_fd_config_rule(ptr noundef %hdev, ptr noundef readonly %rule) unnamed_addr #0 align 64 {
entry:
  %key_x.i = alloca [52 x i8], align 1
  %key_y.i = alloca [52 x i8], align 1
  %desc.i.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %location.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 8
  %0 = ptrtoint ptr %location.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %location.i, align 4
  %action.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 11
  %2 = ptrtoint ptr %action.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %action.i, align 4
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.805)
  switch i8 %3, label %if.else37.i [
    i8 1, label %entry.if.end40.i_crit_edge
    i8 2, label %if.then7.i
  ]

entry.if.end40.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end40.i

if.then7.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %vport1.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 52
  %5 = ptrtoint ptr %vport1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %vport1.i, align 4
  %tc.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 5, i32 0, i32 0, i32 1
  %7 = ptrtoint ptr %tc.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %tc.i, align 4
  %idxprom.i = zext i8 %8 to i32
  %arrayidx.i = getelementptr %struct.hclge_vport, ptr %6, i32 0, i32 13, i32 5, i32 0, i32 7, i32 2, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %arrayidx.i, align 2
  br label %if.end40.i

if.else37.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %queue_id38.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 6
  %11 = ptrtoint ptr %queue_id38.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %queue_id38.i, align 4
  br label %if.end40.i

if.end40.i:                                       ; preds = %if.else37.i, %if.then7.i, %entry.if.end40.i_crit_edge
  %ad_data.sroa.8.0.i = phi i32 [ 2, %if.else37.i ], [ 0, %entry.if.end40.i_crit_edge ], [ 0, %if.then7.i ]
  %ad_data.sroa.10.0.i = phi i16 [ %12, %if.else37.i ], [ 0, %entry.if.end40.i_crit_edge ], [ %10, %if.then7.i ]
  %ad_data.sroa.6.0.i = phi i8 [ 0, %if.else37.i ], [ %3, %entry.if.end40.i_crit_edge ], [ 0, %if.then7.i ]
  %cnt_num.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 3
  %13 = ptrtoint ptr %cnt_num.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %cnt_num.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool.not.i = icmp eq i16 %14, 0
  br i1 %tobool.not.i, label %if.end40.i.if.end52.i_crit_edge, label %if.then42.i

if.end40.i.if.end52.i_crit_edge:                  ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end52.i

if.then42.i:                                      ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #18
  %vf_id.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 7
  %15 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %vf_id.i, align 2
  %17 = urem i16 %16, %14
  %18 = and i16 %17, 255
  %phi.cast.i = zext i16 %18 to i32
  br label %if.end52.i

if.end52.i:                                       ; preds = %if.then42.i, %if.end40.i.if.end52.i_crit_edge
  %ad_data.sroa.13.0.i = phi i32 [ 4096, %if.then42.i ], [ 0, %if.end40.i.if.end52.i_crit_edge ]
  %ad_data.sroa.16.0.i = phi i32 [ %phi.cast.i, %if.then42.i ], [ 0, %if.end40.i.if.end52.i_crit_edge ]
  %conv55.i = zext i16 %1 to i32
  %19 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hdev, align 8
  %driver_data.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44, i32 8
  %21 = ptrtoint ptr %driver_data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %driver_data.i.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i) #16
  %23 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4
  %24 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4, i32 1
  %25 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i, i32 0, i32 4, i32 2
  %26 = call ptr @memset(ptr %desc.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i, i32 noundef 4612, i1 noundef zeroext false) #16
  %27 = call i32 @llvm.bswap.i32(i32 %conv55.i) #16
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %24, align 4
  %29 = ptrtoint ptr %23 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 0, ptr %23, align 8
  %caps.i.i = getelementptr inbounds %struct.hnae3_ae_dev, ptr %22, i32 0, i32 7
  %30 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %caps.i.i, align 4
  %32 = zext i8 %ad_data.sroa.6.0.i to i64
  %.masked.i.i = zext i32 %ad_data.sroa.8.0.i to i64
  %and53.i.i = or i64 %32, %.masked.i.i
  %conv54.i.i = zext i16 %ad_data.sroa.10.0.i to i32
  %shl55.i.i = shl nuw nsw i32 %conv54.i.i, 2
  %and56.i.i = and i32 %shl55.i.i, 4092
  %conv57.i.i = zext i32 %and56.i.i to i64
  %or58.i.i = or i64 %and53.i.i, %conv57.i.i
  %.masked1.i.i = zext i32 %ad_data.sroa.13.0.i to i64
  %and71.i.i = or i64 %or58.i.i, %.masked1.i.i
  %shl73.i.i = shl nuw nsw i32 %ad_data.sroa.16.0.i, 13
  %33 = and i32 %shl73.i.i, 1040384
  %conv75.masked.i.i = zext i32 %33 to i64
  %and80.i.i = or i64 %and71.i.i, %conv75.masked.i.i
  %shl92.i.i = shl nuw nsw i32 %ad_data.sroa.16.0.i, 21
  %and93.i.i = and i32 %shl92.i.i, 65011712
  %conv94.i.i = zext i32 %and93.i.i to i64
  %and89.i.i = or i64 %and80.i.i, %conv94.i.i
  %34 = call i64 @llvm.bswap.i64(i64 %and89.i.i) #16
  %35 = ptrtoint ptr %25 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %25, align 8
  %hw.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i.i, ptr noundef nonnull %desc.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool100.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool100.not.i.i, label %if.end, label %hclge_config_action.exit

hclge_config_action.exit:                         ; preds = %if.end52.i
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hdev, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.473, i32 noundef %call.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  br label %cleanup

if.end:                                           ; preds = %if.end52.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i) #16
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %key_x.i) #16
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %key_y.i) #16
  %38 = call ptr @memset(ptr %key_x.i, i32 0, i32 52)
  %39 = call ptr @memset(ptr %key_y.i, i32 0, i32 52)
  %tuple_active.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4, i32 0, i32 5
  %unused_tuple.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %if.end
  %i.020.i = phi i32 [ 0, %if.end ], [ %inc.i, %cleanup.i.for.body.i_crit_edge ]
  %cur_key_y.018.i = phi ptr [ %key_y.i, %if.end ], [ %cur_key_y.2.i, %cleanup.i.for.body.i_crit_edge ]
  %cur_key_x.016.i = phi ptr [ %key_x.i, %if.end ], [ %cur_key_x.2.i, %cleanup.i.for.body.i_crit_edge ]
  %key_length.i = getelementptr [30 x %struct.key_info], ptr @tuple_key_info, i32 0, i32 %i.020.i, i32 1
  %40 = ptrtoint ptr %key_length.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %key_length.i, align 1
  %42 = lshr i8 %41, 3
  %43 = ptrtoint ptr %tuple_active.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %tuple_active.i, align 4
  %shl.i = shl nuw nsw i32 1, %i.020.i
  %and.i = and i32 %44, %shl.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i5 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i5, label %for.body.i.cleanup.i_crit_edge, label %if.end.i

for.body.i.cleanup.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i

if.end.i:                                         ; preds = %for.body.i
  %45 = ptrtoint ptr %unused_tuple.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %unused_tuple.i.i, align 4
  %and.i.i = and i32 %46, %shl.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.end.i._crit_edge

if.end.i._crit_edge:                              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %134

if.end.i.i:                                       ; preds = %if.end.i
  %key_opt1.i.i = getelementptr [30 x %struct.key_info], ptr @tuple_key_info, i32 0, i32 %i.020.i, i32 2
  %47 = ptrtoint ptr %key_opt1.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %key_opt1.i.i, align 4
  %offset3.i.i = getelementptr [30 x %struct.key_info], ptr @tuple_key_info, i32 0, i32 %i.020.i, i32 3
  %49 = ptrtoint ptr %offset3.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %offset3.i.i, align 4
  %moffset5.i.i = getelementptr [30 x %struct.key_info], ptr @tuple_key_info, i32 0, i32 %i.020.i, i32 4
  %51 = ptrtoint ptr %moffset5.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %moffset5.i.i, align 4
  %53 = zext i32 %48 to i64
  call void @__sanitizer_cov_trace_switch(i64 %53, ptr @__sancov_gen_cov_switch_values.806)
  switch i32 %48, label %if.end.i.i.cleanup.i_crit_edge [
    i32 0, label %sw.bb.i.i
    i32 1, label %sw.bb19.i.i
    i32 2, label %sw.bb41.i.i
    i32 3, label %for.body.preheader.i.i
    i32 4, label %sw.bb85.i.i
  ]

if.end.i.i.cleanup.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i

for.body.preheader.i.i:                           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx58.i.i = getelementptr i8, ptr %rule, i32 %50
  %54 = ptrtoint ptr %arrayidx58.i.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %arrayidx58.i.i, align 1
  %neg60.i.i = xor i8 %55, -1
  %arrayidx62.i.i = getelementptr i8, ptr %rule, i32 %52
  %56 = ptrtoint ptr %arrayidx62.i.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %arrayidx62.i.i, align 1
  %and64.i.i = and i8 %57, %neg60.i.i
  %arrayidx66.i.i = getelementptr i8, ptr %cur_key_x.016.i, i32 5
  %58 = ptrtoint ptr %arrayidx66.i.i to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %and64.i.i, ptr %arrayidx66.i.i, align 1
  %59 = load i8, ptr %arrayidx58.i.i, align 1
  %60 = load i8, ptr %arrayidx62.i.i, align 1
  %and79.i.i = and i8 %60, %59
  %arrayidx82.i.i = getelementptr i8, ptr %cur_key_y.018.i, i32 5
  %61 = ptrtoint ptr %arrayidx82.i.i to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %and79.i.i, ptr %arrayidx82.i.i, align 1
  %add.1.i.i = add i32 %50, 1
  %arrayidx58.1.i.i = getelementptr i8, ptr %rule, i32 %add.1.i.i
  %62 = ptrtoint ptr %arrayidx58.1.i.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %arrayidx58.1.i.i, align 1
  %neg60.1.i.i = xor i8 %63, -1
  %add61.1.i.i = add i32 %52, 1
  %arrayidx62.1.i.i = getelementptr i8, ptr %rule, i32 %add61.1.i.i
  %64 = ptrtoint ptr %arrayidx62.1.i.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %arrayidx62.1.i.i, align 1
  %and64.1.i.i = and i8 %65, %neg60.1.i.i
  %arrayidx66.1.i.i = getelementptr i8, ptr %cur_key_x.016.i, i32 4
  %66 = ptrtoint ptr %arrayidx66.1.i.i to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 %and64.1.i.i, ptr %arrayidx66.1.i.i, align 1
  %67 = load i8, ptr %arrayidx58.1.i.i, align 1
  %68 = load i8, ptr %arrayidx62.1.i.i, align 1
  %and79.1.i.i = and i8 %68, %67
  %arrayidx82.1.i.i = getelementptr i8, ptr %cur_key_y.018.i, i32 4
  %69 = ptrtoint ptr %arrayidx82.1.i.i to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 %and79.1.i.i, ptr %arrayidx82.1.i.i, align 1
  %add.2.i.i = add i32 %50, 2
  %arrayidx58.2.i.i = getelementptr i8, ptr %rule, i32 %add.2.i.i
  %70 = ptrtoint ptr %arrayidx58.2.i.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %arrayidx58.2.i.i, align 1
  %neg60.2.i.i = xor i8 %71, -1
  %add61.2.i.i = add i32 %52, 2
  %arrayidx62.2.i.i = getelementptr i8, ptr %rule, i32 %add61.2.i.i
  %72 = ptrtoint ptr %arrayidx62.2.i.i to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %arrayidx62.2.i.i, align 1
  %and64.2.i.i = and i8 %73, %neg60.2.i.i
  %arrayidx66.2.i.i = getelementptr i8, ptr %cur_key_x.016.i, i32 3
  %74 = ptrtoint ptr %arrayidx66.2.i.i to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 %and64.2.i.i, ptr %arrayidx66.2.i.i, align 1
  %75 = load i8, ptr %arrayidx58.2.i.i, align 1
  %76 = load i8, ptr %arrayidx62.2.i.i, align 1
  %and79.2.i.i = and i8 %76, %75
  %arrayidx82.2.i.i = getelementptr i8, ptr %cur_key_y.018.i, i32 3
  %77 = ptrtoint ptr %arrayidx82.2.i.i to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 %and79.2.i.i, ptr %arrayidx82.2.i.i, align 1
  %add.3.i.i = add i32 %50, 3
  %arrayidx58.3.i.i = getelementptr i8, ptr %rule, i32 %add.3.i.i
  %78 = ptrtoint ptr %arrayidx58.3.i.i to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %arrayidx58.3.i.i, align 1
  %neg60.3.i.i = xor i8 %79, -1
  %add61.3.i.i = add i32 %52, 3
  %arrayidx62.3.i.i = getelementptr i8, ptr %rule, i32 %add61.3.i.i
  %80 = ptrtoint ptr %arrayidx62.3.i.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %arrayidx62.3.i.i, align 1
  %and64.3.i.i = and i8 %81, %neg60.3.i.i
  %arrayidx66.3.i.i = getelementptr i8, ptr %cur_key_x.016.i, i32 2
  %82 = ptrtoint ptr %arrayidx66.3.i.i to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 %and64.3.i.i, ptr %arrayidx66.3.i.i, align 1
  %83 = load i8, ptr %arrayidx58.3.i.i, align 1
  %84 = load i8, ptr %arrayidx62.3.i.i, align 1
  %and79.3.i.i = and i8 %84, %83
  %arrayidx82.3.i.i = getelementptr i8, ptr %cur_key_y.018.i, i32 2
  %85 = ptrtoint ptr %arrayidx82.3.i.i to i32
  call void @__asan_store1_noabort(i32 %85)
  store i8 %and79.3.i.i, ptr %arrayidx82.3.i.i, align 1
  %add.4.i.i = add i32 %50, 4
  %arrayidx58.4.i.i = getelementptr i8, ptr %rule, i32 %add.4.i.i
  %86 = ptrtoint ptr %arrayidx58.4.i.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %arrayidx58.4.i.i, align 1
  %neg60.4.i.i = xor i8 %87, -1
  %add61.4.i.i = add i32 %52, 4
  %arrayidx62.4.i.i = getelementptr i8, ptr %rule, i32 %add61.4.i.i
  %88 = ptrtoint ptr %arrayidx62.4.i.i to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %arrayidx62.4.i.i, align 1
  %and64.4.i.i = and i8 %89, %neg60.4.i.i
  %arrayidx66.4.i.i = getelementptr i8, ptr %cur_key_x.016.i, i32 1
  %90 = ptrtoint ptr %arrayidx66.4.i.i to i32
  call void @__asan_store1_noabort(i32 %90)
  store i8 %and64.4.i.i, ptr %arrayidx66.4.i.i, align 1
  %91 = load i8, ptr %arrayidx58.4.i.i, align 1
  %92 = load i8, ptr %arrayidx62.4.i.i, align 1
  %and79.4.i.i = and i8 %92, %91
  %arrayidx82.4.i.i = getelementptr i8, ptr %cur_key_y.018.i, i32 1
  %93 = ptrtoint ptr %arrayidx82.4.i.i to i32
  call void @__asan_store1_noabort(i32 %93)
  store i8 %and79.4.i.i, ptr %arrayidx82.4.i.i, align 1
  %add.5.i.i = add i32 %50, 5
  %arrayidx58.5.i.i = getelementptr i8, ptr %rule, i32 %add.5.i.i
  %94 = ptrtoint ptr %arrayidx58.5.i.i to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %arrayidx58.5.i.i, align 1
  %neg60.5.i.i = xor i8 %95, -1
  %add61.5.i.i = add i32 %52, 5
  %arrayidx62.5.i.i = getelementptr i8, ptr %rule, i32 %add61.5.i.i
  %96 = ptrtoint ptr %arrayidx62.5.i.i to i32
  call void @__asan_load1_noabort(i32 %96)
  %97 = load i8, ptr %arrayidx62.5.i.i, align 1
  %and64.5.i.i = and i8 %97, %neg60.5.i.i
  %98 = ptrtoint ptr %cur_key_x.016.i to i32
  call void @__asan_store1_noabort(i32 %98)
  store i8 %and64.5.i.i, ptr %cur_key_x.016.i, align 1
  %99 = load i8, ptr %arrayidx58.5.i.i, align 1
  %100 = load i8, ptr %arrayidx62.5.i.i, align 1
  %and79.5.i.i = and i8 %100, %99
  %101 = ptrtoint ptr %cur_key_y.018.i to i32
  call void @__asan_store1_noabort(i32 %101)
  store i8 %and79.5.i.i, ptr %cur_key_y.018.i, align 1
  br label %134

sw.bb.i.i:                                        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx6.i.i = getelementptr i8, ptr %rule, i32 %50
  %102 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %arrayidx6.i.i, align 1
  %neg.i.i = xor i8 %103, -1
  %arrayidx7.i.i = getelementptr i8, ptr %rule, i32 %52
  %104 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %104)
  %105 = load i8, ptr %arrayidx7.i.i, align 1
  %and9.i.i = and i8 %105, %neg.i.i
  %106 = ptrtoint ptr %cur_key_x.016.i to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 %and9.i.i, ptr %cur_key_x.016.i, align 1
  %107 = load i8, ptr %arrayidx6.i.i, align 1
  %108 = load i8, ptr %arrayidx7.i.i, align 1
  %and17.i.i = and i8 %108, %107
  %109 = ptrtoint ptr %cur_key_y.018.i to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 %and17.i.i, ptr %cur_key_y.018.i, align 1
  br label %134

sw.bb19.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx20.i.i = getelementptr i8, ptr %rule, i32 %50
  %110 = ptrtoint ptr %arrayidx20.i.i to i32
  call void @__asan_load2_noabort(i32 %110)
  %111 = load i16, ptr %arrayidx20.i.i, align 2
  %neg22.i.i = xor i16 %111, -1
  %arrayidx23.i.i = getelementptr i8, ptr %rule, i32 %52
  %112 = ptrtoint ptr %arrayidx23.i.i to i32
  call void @__asan_load2_noabort(i32 %112)
  %113 = load i16, ptr %arrayidx23.i.i, align 2
  %and25.i.i = and i16 %113, %neg22.i.i
  %and37.i.i = and i16 %113, %111
  %114 = call i16 @llvm.bswap.i16(i16 %and25.i.i) #16
  %115 = ptrtoint ptr %cur_key_x.016.i to i32
  call void @__asan_store2_noabort(i32 %115)
  store i16 %114, ptr %cur_key_x.016.i, align 2
  %116 = call i16 @llvm.bswap.i16(i16 %and37.i.i) #16
  %117 = ptrtoint ptr %cur_key_y.018.i to i32
  call void @__asan_store2_noabort(i32 %117)
  store i16 %116, ptr %cur_key_y.018.i, align 2
  br label %134

sw.bb41.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx42.i.i = getelementptr i8, ptr %rule, i32 %50
  %118 = ptrtoint ptr %arrayidx42.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx42.i.i, align 4
  %neg43.i.i = xor i32 %119, -1
  %arrayidx44.i.i = getelementptr i8, ptr %rule, i32 %52
  %120 = ptrtoint ptr %arrayidx44.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %arrayidx44.i.i, align 4
  %and45.i.i = and i32 %121, %neg43.i.i
  %and53.i.i6 = and i32 %121, %119
  %122 = call i32 @llvm.bswap.i32(i32 %and45.i.i) #16
  %123 = ptrtoint ptr %cur_key_x.016.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store i32 %122, ptr %cur_key_x.016.i, align 4
  %124 = call i32 @llvm.bswap.i32(i32 %and53.i.i6) #16
  %125 = ptrtoint ptr %cur_key_y.018.i to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 %124, ptr %cur_key_y.018.i, align 4
  br label %134

sw.bb85.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %add86.i.i = add i32 %50, 12
  %arrayidx87.i.i = getelementptr i8, ptr %rule, i32 %add86.i.i
  %126 = ptrtoint ptr %arrayidx87.i.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %arrayidx87.i.i, align 4
  %neg88.i.i = xor i32 %127, -1
  %add89.i.i = add i32 %52, 12
  %arrayidx90.i.i = getelementptr i8, ptr %rule, i32 %add89.i.i
  %128 = ptrtoint ptr %arrayidx90.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx90.i.i, align 4
  %and91.i.i = and i32 %129, %neg88.i.i
  %and101.i.i = and i32 %129, %127
  %130 = call i32 @llvm.bswap.i32(i32 %and91.i.i) #16
  %131 = ptrtoint ptr %cur_key_x.016.i to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 %130, ptr %cur_key_x.016.i, align 4
  %132 = call i32 @llvm.bswap.i32(i32 %and101.i.i) #16
  %133 = ptrtoint ptr %cur_key_y.018.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %132, ptr %cur_key_y.018.i, align 4
  br label %134

134:                                              ; preds = %sw.bb85.i.i, %sw.bb41.i.i, %sw.bb19.i.i, %sw.bb.i.i, %for.body.preheader.i.i, %if.end.i._crit_edge
  %conv95.i = zext i8 %42 to i32
  %add.ptr6.i = getelementptr i8, ptr %cur_key_x.016.i, i32 %conv95.i
  %add.ptr117.i = getelementptr i8, ptr %cur_key_y.018.i, i32 %conv95.i
  br label %cleanup.i

cleanup.i:                                        ; preds = %134, %if.end.i.i.cleanup.i_crit_edge, %for.body.i.cleanup.i_crit_edge
  %cur_key_x.2.i = phi ptr [ %cur_key_x.016.i, %for.body.i.cleanup.i_crit_edge ], [ %add.ptr6.i, %134 ], [ %cur_key_x.016.i, %if.end.i.i.cleanup.i_crit_edge ]
  %cur_key_y.2.i = phi ptr [ %cur_key_y.018.i, %for.body.i.cleanup.i_crit_edge ], [ %add.ptr117.i, %134 ], [ %cur_key_y.018.i, %if.end.i.i.cleanup.i_crit_edge ]
  %inc.i = add nuw nsw i32 %i.020.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 30
  br i1 %exitcond.not.i, label %for.end.i, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.end.i:                                        ; preds = %cleanup.i
  %max_key_length.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 1
  %135 = ptrtoint ptr %max_key_length.i to i32
  call void @__asan_load2_noabort(i32 %135)
  %136 = load i16, ptr %max_key_length.i, align 2
  %137 = lshr i16 %136, 3
  %narrow.i = add nuw nsw i16 %137, 252
  %138 = and i16 %narrow.i, 255
  %conv18.i = zext i16 %138 to i32
  %meta_data_active.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 4, i32 0, i32 6
  %139 = ptrtoint ptr %meta_data_active.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %meta_data_active.i.i, align 4
  %vf_id.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 7
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.end.i
  %meta_data.084.i.i = phi i32 [ 0, %for.end.i ], [ %meta_data.1.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %i.083.i.i = phi i32 [ 0, %for.end.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %cur_pos.082.i.i = phi i8 [ 0, %for.end.i ], [ %cur_pos.1.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %key_length.i.i = getelementptr [8 x %struct.key_info], ptr @meta_data_key_info, i32 0, i32 %i.083.i.i, i32 1
  %141 = ptrtoint ptr %key_length.i.i to i32
  call void @__asan_load1_noabort(i32 %141)
  %142 = load i8, ptr %key_length.i.i, align 1
  %shl.i1.i = shl nuw nsw i32 1, %i.083.i.i
  %and.i2.i = and i32 %shl.i1.i, %140
  %143 = zext i32 %and.i2.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %143, ptr @__sancov_gen_cov_switch_values.807)
  switch i32 %and.i2.i, label %for.body.i.i.for.inc.i.i_crit_edge [
    i32 4, label %do.body.i.i
    i32 64, label %sw.bb11.i.i
  ]

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

do.body.i.i:                                      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i.i = zext i8 %cur_pos.082.i.i to i32
  %shl1.i.i = shl nuw i32 1, %conv.i.i
  %neg.i3.i = xor i32 %shl1.i.i, -1
  %and2.i.i = and i32 %meta_data.084.i.i, %neg.i3.i
  %add.i.i = add i8 %142, %cur_pos.082.i.i
  br label %for.inc.i.i

sw.bb11.i.i:                                      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %144 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %144)
  %145 = load i16, ptr %vf_id.i.i, align 2
  %146 = shl i16 %145, 3
  %147 = and i16 %146, 2040
  %shl5.i.i.i = zext i16 %147 to i32
  %conv14.i.i = zext i8 %cur_pos.082.i.i to i32
  %shl15.neg.i.i = shl nsw i32 -1, %conv14.i.i
  %conv18.i.i = zext i8 %142 to i32
  %add19.i.i = add nuw nsw i32 %conv18.i.i, %conv14.i.i
  %sub20.i.i = sub nsw i32 31, %add19.i.i
  %shr.i.i = lshr i32 -1, %sub20.i.i
  %and21.i.i = and i32 %shr.i.i, %shl15.neg.i.i
  %neg23.i.i = xor i32 %and21.i.i, -1
  %and24.i.i = and i32 %meta_data.084.i.i, %neg23.i.i
  %shl26.i.i = shl i32 %shl5.i.i.i, %conv14.i.i
  %and38.i.i = and i32 %shl26.i.i, %and21.i.i
  %or39.i.i = or i32 %and38.i.i, %and24.i.i
  %conv45.i.i = trunc i32 %add19.i.i to i8
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %sw.bb11.i.i, %do.body.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %cur_pos.1.i.i = phi i8 [ %cur_pos.082.i.i, %for.body.i.i.for.inc.i.i_crit_edge ], [ %conv45.i.i, %sw.bb11.i.i ], [ %add.i.i, %do.body.i.i ]
  %meta_data.1.i.i = phi i32 [ %meta_data.084.i.i, %for.body.i.i.for.inc.i.i_crit_edge ], [ %or39.i.i, %sw.bb11.i.i ], [ %and2.i.i, %do.body.i.i ]
  %inc.i.i = add nuw nsw i32 %i.083.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 8
  br i1 %exitcond.not.i.i, label %hclge_fd_convert_meta_data.exit.i, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

hclge_fd_convert_meta_data.exit.i:                ; preds = %for.inc.i.i
  %add.ptr19.i = getelementptr i8, ptr %key_x.i, i32 %conv18.i
  %add.ptr22.i = getelementptr i8, ptr %key_y.i, i32 %conv18.i
  %neg46.i.i = xor i32 %meta_data.1.i.i, -1
  %sub53.i.i = sub i8 32, %cur_pos.1.i.i
  %conv55.i.i = zext i8 %sub53.i.i to i32
  %shl56.i.i = shl i32 %neg46.i.i, %conv55.i.i
  %148 = call i32 @llvm.bswap.i32(i32 %shl56.i.i) #16
  %149 = ptrtoint ptr %add.ptr19.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 %148, ptr %add.ptr19.i, align 4
  %shl58.i.i = shl i32 %meta_data.1.i.i, %conv55.i.i
  %150 = call i32 @llvm.bswap.i32(i32 %shl58.i.i) #16
  %151 = ptrtoint ptr %add.ptr22.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %150, ptr %add.ptr22.i, align 4
  %152 = ptrtoint ptr %location.i to i32
  call void @__asan_load2_noabort(i32 %152)
  %153 = load i16, ptr %location.i, align 4
  %conv23.i = zext i16 %153 to i32
  %call25.i = call fastcc i32 @hclge_fd_tcam_config(ptr noundef %hdev, i1 noundef zeroext false, i32 noundef %conv23.i, ptr noundef nonnull %key_y.i, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool26.not.i = icmp eq i32 %call25.i, 0
  br i1 %tobool26.not.i, label %if.end29.i, label %do.end.i

do.end.i:                                         ; preds = %hclge_fd_convert_meta_data.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %154 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %155, i32 0, i32 44
  %queue_id.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 6
  %156 = ptrtoint ptr %queue_id.i to i32
  call void @__asan_load2_noabort(i32 %156)
  %157 = load i16, ptr %queue_id.i, align 4
  %conv28.i = zext i16 %157 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.475, i32 noundef %conv28.i, i32 noundef %call25.i) #20
  br label %hclge_config_key.exit

if.end29.i:                                       ; preds = %hclge_fd_convert_meta_data.exit.i
  %158 = ptrtoint ptr %location.i to i32
  call void @__asan_load2_noabort(i32 %158)
  %159 = load i16, ptr %location.i, align 4
  %conv31.i = zext i16 %159 to i32
  %call33.i = call fastcc i32 @hclge_fd_tcam_config(ptr noundef %hdev, i1 noundef zeroext true, i32 noundef %conv31.i, ptr noundef nonnull %key_x.i, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i)
  %tobool34.not.i = icmp eq i32 %call33.i, 0
  br i1 %tobool34.not.i, label %if.end29.i.hclge_config_key.exit_crit_edge, label %do.end38.i

if.end29.i.hclge_config_key.exit_crit_edge:       ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_config_key.exit

do.end38.i:                                       ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #18
  %160 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %hdev, align 8
  %dev40.i = getelementptr inbounds %struct.pci_dev, ptr %161, i32 0, i32 44
  %queue_id41.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 6
  %162 = ptrtoint ptr %queue_id41.i to i32
  call void @__asan_load2_noabort(i32 %162)
  %163 = load i16, ptr %queue_id41.i, align 4
  %conv42.i = zext i16 %163 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev40.i, ptr noundef nonnull @.str.478, i32 noundef %conv42.i, i32 noundef %call33.i) #20
  br label %hclge_config_key.exit

hclge_config_key.exit:                            ; preds = %do.end38.i, %if.end29.i.hclge_config_key.exit_crit_edge, %do.end.i
  %retval.0.i = phi i32 [ %call25.i, %do.end.i ], [ %call33.i, %do.end38.i ], [ 0, %if.end29.i.hclge_config_key.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %key_y.i) #16
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %key_x.i) #16
  br label %cleanup

cleanup:                                          ; preds = %hclge_config_key.exit, %hclge_config_action.exit
  %retval.0 = phi i32 [ %retval.0.i, %hclge_config_key.exit ], [ %call.i.i.i, %hclge_config_action.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_tqps_update_stats(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkmode_set_pause(ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rps_may_expire_flow(ptr noundef, i16 noundef zeroext, i32 noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__irq_apply_affinity_hint(i32 noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_ptp_uninit(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_irq(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_tm_qs_shaper_cfg(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_uninit_vport_mac_list(ptr noundef %vport, i32 noundef %mac_type) unnamed_addr #0 align 64 {
entry:
  %tmp_del_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_del_list) #16
  %2 = getelementptr inbounds %struct.list_head, ptr %tmp_del_list, i32 0, i32 1
  %3 = ptrtoint ptr %tmp_del_list to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %tmp_del_list, ptr %tmp_del_list, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %tmp_del_list, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mac_type)
  %cmp = icmp eq i32 %mac_type, 0
  %uc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 22
  %mc_mac_list = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 23
  %cond = select i1 %cmp, ptr %uc_mac_list, ptr %mc_mac_list
  %mac_list_lock = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 21
  call void @_raw_spin_lock_bh(ptr noundef %mac_list_lock) #16
  %5 = ptrtoint ptr %cond to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cond, align 4
  %cmp7.not81 = icmp eq ptr %6, %cond
  br i1 %cmp7.not81, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %mac_node.082 = phi ptr [ %tmp.085, %for.inc.for.body_crit_edge ], [ %6, %entry.for.body_crit_edge ]
  %7 = ptrtoint ptr %mac_node.082 to i32
  call void @__asan_load4_noabort(i32 %7)
  %tmp.085 = load ptr, ptr %mac_node.082, align 4
  %state = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.082, i32 0, i32 1
  %8 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %state, align 4
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.808)
  switch i32 %9, label %for.body.for.inc_crit_edge [
    i32 1, label %for.body.sw.bb_crit_edge
    i32 2, label %for.body.sw.bb_crit_edge89
    i32 0, label %sw.bb9
  ]

for.body.sw.bb_crit_edge89:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

for.body.sw.bb_crit_edge:                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

sw.bb:                                            ; preds = %for.body.sw.bb_crit_edge, %for.body.sw.bb_crit_edge89
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.082) #16
  br i1 %call.i.i, label %if.end.i.i, label %sw.bb.__list_del_entry.exit.i_crit_edge

sw.bb.__list_del_entry.exit.i_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.082, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev.i.i, align 4
  %13 = ptrtoint ptr %mac_node.082 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mac_node.082, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev1.i.i.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %14, ptr %12, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %sw.bb.__list_del_entry.exit.i_crit_edge
  %17 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %2, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %mac_node.082, ptr noundef %18, ptr noundef nonnull %tmp_del_list) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.for.inc_crit_edge

__list_del_entry.exit.i.for.inc_crit_edge:        ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %mac_node.082, ptr %2, align 4
  %20 = ptrtoint ptr %mac_node.082 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %tmp_del_list, ptr %mac_node.082, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.082, i32 0, i32 1
  %21 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %18, ptr %prev3.i.i.i, align 4
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %mac_node.082, ptr %18, align 4
  br label %for.inc

sw.bb9:                                           ; preds = %for.body
  %call.i.i63 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.082) #16
  br i1 %call.i.i63, label %if.end.i.i66, label %sw.bb9.list_del.exit_crit_edge

sw.bb9.list_del.exit_crit_edge:                   ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i66:                                     ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i64 = getelementptr inbounds %struct.list_head, ptr %mac_node.082, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i.i64 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i.i64, align 4
  %25 = ptrtoint ptr %mac_node.082 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mac_node.082, align 4
  %prev1.i.i.i65 = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i.i65 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %prev1.i.i.i65, align 4
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %26, ptr %24, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i66, %sw.bb9.list_del.exit_crit_edge
  %29 = ptrtoint ptr %mac_node.082 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.082, align 4
  %prev.i67 = getelementptr inbounds %struct.list_head, ptr %mac_node.082, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i67 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i67, align 4
  call void @kfree(ptr noundef %mac_node.082) #16
  br label %for.inc

for.inc:                                          ; preds = %list_del.exit, %if.end.i.i.i, %__list_del_entry.exit.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp7.not = icmp eq ptr %tmp.085, %cond
  br i1 %cmp7.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %mac_list_lock) #16
  %hclge_rm_uc_addr_common.hclge_rm_mc_addr_common.i = select i1 %cmp, ptr @hclge_rm_uc_addr_common, ptr @hclge_rm_mc_addr_common
  %31 = ptrtoint ptr %tmp_del_list to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %tmp_del_list, align 4
  %cmp7.not27.i = icmp eq ptr %32, %tmp_del_list
  br i1 %cmp7.not27.i, label %for.end.hclge_unsync_vport_mac_list.exit_crit_edge, label %for.end.for.body.i_crit_edge

for.end.for.body.i_crit_edge:                     ; preds = %for.end
  br label %for.body.i

for.end.hclge_unsync_vport_mac_list.exit_crit_edge: ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_unsync_vport_mac_list.exit

for.body.i:                                       ; preds = %list_del.exit.i.for.body.i_crit_edge, %for.end.for.body.i_crit_edge
  %mac_node.028.i = phi ptr [ %tmp.030.i, %list_del.exit.i.for.body.i_crit_edge ], [ %32, %for.end.for.body.i_crit_edge ]
  %33 = ptrtoint ptr %mac_node.028.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %tmp.030.i = load ptr, ptr %mac_node.028.i, align 4
  %mac_addr.i = getelementptr inbounds %struct.hclge_mac_node, ptr %mac_node.028.i, i32 0, i32 2
  %call.i = call i32 %hclge_rm_uc_addr_common.hclge_rm_mc_addr_common.i(ptr noundef %vport, ptr noundef %mac_addr.i) #16, !callees !1455
  %34 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.809)
  switch i32 %call.i, label %if.else11.i [
    i32 0, label %for.body.i.if.then9.i_crit_edge
    i32 -2, label %for.body.i.if.then9.i_crit_edge90
  ]

for.body.i.if.then9.i_crit_edge90:                ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then9.i

for.body.i.if.then9.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then9.i

if.then9.i:                                       ; preds = %for.body.i.if.then9.i_crit_edge, %for.body.i.if.then9.i_crit_edge90
  %call.i.i.i69 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.028.i) #16
  br i1 %call.i.i.i69, label %if.end.i.i.i70, label %if.then9.i.list_del.exit.i_crit_edge

if.then9.i.list_del.exit.i_crit_edge:             ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i70:                                   ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %mac_node.028.i, i32 0, i32 1
  %35 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %prev.i.i.i, align 4
  %37 = ptrtoint ptr %mac_node.028.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mac_node.028.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %36, ptr %prev1.i.i.i.i, align 4
  %40 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %38, ptr %36, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i70, %if.then9.i.list_del.exit.i_crit_edge
  %41 = ptrtoint ptr %mac_node.028.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.028.i, align 4
  %prev.i.i71 = getelementptr inbounds %struct.list_head, ptr %mac_node.028.i, i32 0, i32 1
  %42 = ptrtoint ptr %prev.i.i71 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i71, align 4
  call void @kfree(ptr noundef %mac_node.028.i) #16
  %cmp7.not.i = icmp eq ptr %tmp.030.i, %tmp_del_list
  br i1 %cmp7.not.i, label %list_del.exit.i.hclge_unsync_vport_mac_list.exit_crit_edge, label %list_del.exit.i.for.body.i_crit_edge

list_del.exit.i.for.body.i_crit_edge:             ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

list_del.exit.i.hclge_unsync_vport_mac_list.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_unsync_vport_mac_list.exit

if.else11.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %state.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 15
  call void @_set_bit(i32 noundef 1, ptr noundef %state.i) #16
  br label %hclge_unsync_vport_mac_list.exit

hclge_unsync_vport_mac_list.exit:                 ; preds = %if.else11.i, %list_del.exit.i.hclge_unsync_vport_mac_list.exit_crit_edge, %for.end.hclge_unsync_vport_mac_list.exit_crit_edge
  %43 = ptrtoint ptr %tmp_del_list to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %tmp_del_list, align 4
  %cmp.i72.not = icmp eq ptr %44, %tmp_del_list
  br i1 %cmp.i72.not, label %hclge_unsync_vport_mac_list.exit.if.end_crit_edge, label %do.end

hclge_unsync_vport_mac_list.exit.if.end_crit_edge: ; preds = %hclge_unsync_vport_mac_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %hclge_unsync_vport_mac_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  %45 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %46, i32 0, i32 44
  %cond18 = select i1 %cmp, ptr @.str.505, ptr @.str.506
  %vport_id = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 11
  %47 = ptrtoint ptr %vport_id to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %vport_id, align 2
  %conv = zext i16 %48 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.503, ptr noundef nonnull %cond18, i32 noundef %conv) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %hclge_unsync_vport_mac_list.exit.if.end_crit_edge
  %49 = ptrtoint ptr %tmp_del_list to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %tmp_del_list, align 4
  %cmp30.not86 = icmp eq ptr %50, %tmp_del_list
  br i1 %cmp30.not86, label %if.end.for.end41_crit_edge, label %if.end.for.body33_crit_edge

if.end.for.body33_crit_edge:                      ; preds = %if.end
  br label %for.body33

if.end.for.end41_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end41

for.body33:                                       ; preds = %list_del.exit79.for.body33_crit_edge, %if.end.for.body33_crit_edge
  %mac_node.187 = phi ptr [ %tmp.1, %list_del.exit79.for.body33_crit_edge ], [ %50, %if.end.for.body33_crit_edge ]
  %51 = ptrtoint ptr %mac_node.187 to i32
  call void @__asan_load4_noabort(i32 %51)
  %tmp.1 = load ptr, ptr %mac_node.187, align 4
  %call.i.i73 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mac_node.187) #16
  br i1 %call.i.i73, label %if.end.i.i76, label %for.body33.list_del.exit79_crit_edge

for.body33.list_del.exit79_crit_edge:             ; preds = %for.body33
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit79

if.end.i.i76:                                     ; preds = %for.body33
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i74 = getelementptr inbounds %struct.list_head, ptr %mac_node.187, i32 0, i32 1
  %52 = ptrtoint ptr %prev.i.i74 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %prev.i.i74, align 4
  %54 = ptrtoint ptr %mac_node.187 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %mac_node.187, align 4
  %prev1.i.i.i75 = getelementptr inbounds %struct.list_head, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %prev1.i.i.i75 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %53, ptr %prev1.i.i.i75, align 4
  %57 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %55, ptr %53, align 4
  br label %list_del.exit79

list_del.exit79:                                  ; preds = %if.end.i.i76, %for.body33.list_del.exit79_crit_edge
  %58 = ptrtoint ptr %mac_node.187 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr inttoptr (i32 256 to ptr), ptr %mac_node.187, align 4
  %prev.i77 = getelementptr inbounds %struct.list_head, ptr %mac_node.187, i32 0, i32 1
  %59 = ptrtoint ptr %prev.i77 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i77, align 4
  call void @kfree(ptr noundef %mac_node.187) #16
  %cmp30.not = icmp eq ptr %tmp.1, %tmp_del_list
  br i1 %cmp30.not, label %list_del.exit79.for.end41_crit_edge, label %list_del.exit79.for.body33_crit_edge

list_del.exit79.for.body33_crit_edge:             ; preds = %list_del.exit79
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body33

list_del.exit79.for.end41_crit_edge:              ; preds = %list_del.exit79
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end41

for.end41:                                        ; preds = %list_del.exit79.for.end41_crit_edge, %if.end.for.end41_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_del_list) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @devm_iounmap(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_release_selected_regions(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_init_roce_client_instance(ptr noundef %ae_dev, ptr noundef %vport) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.hnae3_ae_dev, ptr %ae_dev, i32 0, i32 8
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %ae_dev1 = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ae_dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ae_dev1, align 4
  %flag = getelementptr inbounds %struct.hnae3_ae_dev, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flag, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %roce_client = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 55
  %7 = ptrtoint ptr %roce_client to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %roce_client, align 8
  %tobool2.not = icmp eq ptr %8, null
  br i1 %tobool2.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false3

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %nic_client = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 54
  %9 = ptrtoint ptr %nic_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %nic_client, align 4
  %tobool4.not = icmp eq ptr %10, null
  br i1 %tobool4.not, label %lor.lhs.false3.cleanup_crit_edge, label %if.end

lor.lhs.false3.cleanup_crit_edge:                 ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false3
  %back.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 12
  %11 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %back.i, align 4
  %num_roce_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 44
  %13 = ptrtoint ptr %num_roce_msi.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %num_roce_msi.i, align 2
  %conv.i = zext i16 %14 to i32
  %num_vectors.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14, i32 5, i32 0, i32 6
  %15 = ptrtoint ptr %num_vectors.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv.i, ptr %num_vectors.i, align 8
  %num_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 38
  %16 = ptrtoint ptr %num_msi.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %num_msi.i, align 8
  %conv4.i = zext i16 %17 to i32
  %num_nic_msi.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 43
  %18 = ptrtoint ptr %num_nic_msi.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %num_nic_msi.i, align 8
  %conv5.i = zext i16 %19 to i32
  %20 = load i16, ptr %num_roce_msi.i, align 2
  %conv7.i = zext i16 %20 to i32
  %add.i = add nuw nsw i32 %conv7.i, %conv5.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv4.i)
  %cmp.i = icmp ugt i32 %add.i, %conv4.i
  br i1 %cmp.i, label %if.end.cleanup_crit_edge, label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %21 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14, i32 5
  %base_vector.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14, i32 5, i32 0, i32 5
  %22 = ptrtoint ptr %base_vector.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %conv5.i, ptr %base_vector.i, align 4
  %23 = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 5
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 8
  %26 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %25, ptr %21, align 8
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 2
  %27 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw.i, align 8
  %roce_io_base.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14, i32 5, i32 0, i32 1
  %29 = ptrtoint ptr %roce_io_base.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %28, ptr %roce_io_base.i, align 4
  %mem_base.i = getelementptr inbounds %struct.hclge_dev, ptr %12, i32 0, i32 2, i32 0, i32 1
  %30 = ptrtoint ptr %mem_base.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mem_base.i, align 4
  %roce_mem_base.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14, i32 5, i32 0, i32 3
  %32 = ptrtoint ptr %roce_mem_base.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %31, ptr %roce_mem_base.i, align 8
  %pdev.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 1
  %33 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pdev.i, align 4
  %pdev15.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14, i32 1
  %35 = ptrtoint ptr %pdev15.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %34, ptr %pdev15.i, align 4
  %ae_algo.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 3
  %36 = ptrtoint ptr %ae_algo.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ae_algo.i, align 4
  %ae_algo16.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14, i32 3
  %38 = ptrtoint ptr %ae_algo16.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %ae_algo16.i, align 4
  %numa_node_mask.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 13, i32 6
  %39 = ptrtoint ptr %numa_node_mask.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %numa_node_mask.i, align 4
  %numa_node_mask17.i = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14, i32 6
  %41 = ptrtoint ptr %numa_node_mask17.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %numa_node_mask17.i, align 4
  %reset_cnt = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 13, i32 6
  %42 = ptrtoint ptr %reset_cnt to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %reset_cnt, align 8
  %ops = getelementptr inbounds %struct.hnae3_client, ptr %8, i32 0, i32 3
  %44 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %ops, align 4
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %45, align 4
  %roce = getelementptr inbounds %struct.hclge_vport, ptr %vport, i32 0, i32 14
  %call9 = tail call i32 %47(ptr noundef %roce) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end8
  %state = getelementptr inbounds %struct.hclge_dev, ptr %1, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 5, ptr noundef %state) #16
  %48 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %state, align 4
  %50 = and i32 %49, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool15.not = icmp eq i32 %50, 0
  br i1 %tobool15.not, label %lor.lhs.false16, label %if.end12.init_roce_err_crit_edge

if.end12.init_roce_err_crit_edge:                 ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %init_roce_err

lor.lhs.false16:                                  ; preds = %if.end12
  %51 = ptrtoint ptr %reset_cnt to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %reset_cnt, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %52)
  %cmp.not = icmp eq i32 %43, %52
  br i1 %cmp.not, label %if.end20, label %lor.lhs.false16.init_roce_err_crit_edge

lor.lhs.false16.init_roce_err_crit_edge:          ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #18
  br label %init_roce_err

if.end20:                                         ; preds = %lor.lhs.false16
  %call21 = tail call i32 @hclge_config_rocee_ras_interrupt(ptr noundef %1, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %do.end

do.end:                                           ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  %53 = ptrtoint ptr %ae_dev to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ae_dev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %54, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.561, i32 noundef %call21) #20
  br label %init_roce_err

if.end24:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @hnae3_set_client_init_flag(ptr noundef nonnull %8, ptr noundef %ae_dev, i32 noundef 1) #16
  br label %cleanup

init_roce_err:                                    ; preds = %do.end, %lor.lhs.false16.init_roce_err_crit_edge, %if.end12.init_roce_err_crit_edge
  %ret.0 = phi i32 [ %call21, %do.end ], [ -16, %lor.lhs.false16.init_roce_err_crit_edge ], [ -16, %if.end12.init_roce_err_crit_edge ]
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %state) #16
  %55 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %state, align 4
  %57 = and i32 %56, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool28.not61 = icmp eq i32 %57, 0
  br i1 %tobool28.not61, label %init_roce_err.while.end_crit_edge, label %init_roce_err.while.body_crit_edge

init_roce_err.while.body_crit_edge:               ; preds = %init_roce_err
  br label %while.body

init_roce_err.while.end_crit_edge:                ; preds = %init_roce_err
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %init_roce_err.while.body_crit_edge
  tail call void @msleep(i32 noundef 100) #16
  %58 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %state, align 4
  %60 = and i32 %59, 256
  %tobool28.not = icmp eq i32 %60, 0
  br i1 %tobool28.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %init_roce_err.while.end_crit_edge
  %61 = ptrtoint ptr %roce_client to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %roce_client, align 8
  %ops30 = getelementptr inbounds %struct.hnae3_client, ptr %62, i32 0, i32 3
  %63 = ptrtoint ptr %ops30 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %ops30, align 4
  %uninit_instance = getelementptr inbounds %struct.hnae3_client_ops, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %uninit_instance to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %uninit_instance, align 4
  tail call void %66(ptr noundef %roce, i1 noundef zeroext false) #16
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.end24, %if.end8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false3.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %while.end ], [ 0, %if.end24 ], [ 0, %lor.lhs.false3.cleanup_crit_edge ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ %call9, %if.end8.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hnae3_set_client_init_flag(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_comm_reset_tqp_stats(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_mac_start_phy(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_clear_arfs_rules(ptr noundef %hdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %fd_active_type = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 75
  %0 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %fd_active_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.not = icmp eq i32 %1, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %fd_rule_list = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 67
  %2 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fd_rule_list, align 4
  %tobool2.not39 = icmp eq ptr %3, null
  br i1 %tobool2.not39, label %if.end.for.end_crit_edge, label %land.rhs.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

land.rhs.lr.ph:                                   ; preds = %if.end
  %fd_bmap.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 74
  %hclge_fd_rule_num.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 69
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %land.rhs.lr.ph
  %rule.040 = phi ptr [ %3, %land.rhs.lr.ph ], [ %5, %for.inc.land.rhs_crit_edge ]
  %4 = ptrtoint ptr %rule.040 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rule.040, align 4
  %state = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.040, i32 0, i32 10
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %state, align 4
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.810)
  switch i32 %7, label %land.rhs.for.inc_crit_edge [
    i32 1, label %land.rhs.sw.bb_crit_edge
    i32 2, label %land.rhs.sw.bb_crit_edge41
    i32 0, label %land.rhs.sw.bb8_crit_edge
  ]

land.rhs.sw.bb8_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb8

land.rhs.sw.bb_crit_edge41:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

land.rhs.sw.bb_crit_edge:                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

sw.bb:                                            ; preds = %land.rhs.sw.bb_crit_edge, %land.rhs.sw.bb_crit_edge41
  %location = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.040, i32 0, i32 8
  %9 = ptrtoint ptr %location to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %location, align 4
  %conv = zext i16 %10 to i32
  %call = tail call fastcc i32 @hclge_fd_tcam_config(ptr noundef %hdev, i1 noundef zeroext true, i32 noundef %conv, ptr noundef null, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool5.not = icmp eq i32 %call, 0
  br i1 %tobool5.not, label %sw.bb.sw.bb8_crit_edge, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.sw.bb8_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb8

sw.bb8:                                           ; preds = %sw.bb.sw.bb8_crit_edge, %land.rhs.sw.bb8_crit_edge
  %location9 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.040, i32 0, i32 8
  %11 = ptrtoint ptr %location9 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %location9, align 4
  %conv.i = zext i16 %12 to i32
  %div3.i.i = lshr i32 %conv.i, 5
  %arrayidx.i.i = getelementptr i32, ptr %fd_bmap.i, i32 %div3.i.i
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %conv.i, 31
  %15 = shl nuw i32 1, %and.i.i
  %16 = and i32 %15, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i, label %sw.bb8.hclge_fd_dec_rule_cnt.exit_crit_edge, label %if.then.i

sw.bb8.hclge_fd_dec_rule_cnt.exit_crit_edge:      ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_dec_rule_cnt.exit

if.then.i:                                        ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef %conv.i, ptr noundef %fd_bmap.i) #16
  %17 = ptrtoint ptr %hclge_fd_rule_num.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %hclge_fd_rule_num.i, align 4
  %dec.i = add i16 %18, -1
  store i16 %dec.i, ptr %hclge_fd_rule_num.i, align 4
  br label %hclge_fd_dec_rule_cnt.exit

hclge_fd_dec_rule_cnt.exit:                       ; preds = %if.then.i, %sw.bb8.hclge_fd_dec_rule_cnt.exit_crit_edge
  %19 = ptrtoint ptr %rule.040 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rule.040, align 4
  %pprev2.i.i = getelementptr inbounds %struct.hlist_node, ptr %rule.040, i32 0, i32 1
  %21 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pprev2.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %20, ptr %22, align 4
  %tobool.not.i.i = icmp eq ptr %20, null
  br i1 %tobool.not.i.i, label %hclge_fd_dec_rule_cnt.exit.hlist_del.exit_crit_edge, label %do.body13.i.i

hclge_fd_dec_rule_cnt.exit.hlist_del.exit_crit_edge: ; preds = %hclge_fd_dec_rule_cnt.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hlist_del.exit

do.body13.i.i:                                    ; preds = %hclge_fd_dec_rule_cnt.exit
  call void @__sanitizer_cov_trace_pc() #18
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %20, i32 0, i32 1
  %24 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %22, ptr %pprev14.i.i, align 4
  br label %hlist_del.exit

hlist_del.exit:                                   ; preds = %do.body13.i.i, %hclge_fd_dec_rule_cnt.exit.hlist_del.exit_crit_edge
  %25 = ptrtoint ptr %rule.040 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr inttoptr (i32 256 to ptr), ptr %rule.040, align 4
  %26 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  tail call void @kfree(ptr noundef nonnull %rule.040) #16
  br label %for.inc

for.inc:                                          ; preds = %hlist_del.exit, %land.rhs.for.inc_crit_edge
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %for.inc.for.end_crit_edge, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %27 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %fd_rule_list, align 4
  %tobool.not.i.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i.not.i, label %if.then.i38, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i38:                                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %fd_active_type, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then.i38, %for.end.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.end.cleanup_crit_edge ], [ 0, %if.then.i38 ], [ %call, %sw.bb.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_mac_stop_phy(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_set_common_loopback(ptr noundef %hdev, i1 noundef zeroext %en, i32 noundef %loop_mode) unnamed_addr #0 align 64 {
entry:
  %desc.i.i.i = alloca %struct.hclge_desc, align 4
  %desc.i = alloca %struct.hclge_desc, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @hclge_cfg_common_loopback(ptr noundef %hdev, i1 noundef zeroext %en, i32 noundef %loop_mode)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i) #16
  %0 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i, i32 0, i32 4
  %1 = call ptr @memset(ptr %desc.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i, i32 noundef 769, i1 noundef zeroext false) #16
  %spec.select.i = select i1 %en, i32 8263872, i32 0
  %2 = call i32 @llvm.bswap.i32(i32 %spec.select.i) #16
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %0, align 4
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool46.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool46.not.i, label %if.end.hclge_cfg_mac_mode.exit_crit_edge, label %do.end50.i

if.end.hclge_cfg_mac_mode.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_cfg_mac_mode.exit

do.end50.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.563, i32 noundef %call.i.i) #20
  br label %hclge_cfg_mac_mode.exit

hclge_cfg_mac_mode.exit:                          ; preds = %do.end50.i, %if.end.hclge_cfg_mac_mode.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i) #16
  %6 = getelementptr inbounds %struct.hclge_desc, ptr %desc.i.i.i, i32 0, i32 4
  br label %do.body.i7.i

do.body.i7.i:                                     ; preds = %if.end2.i.i.do.body.i7.i_crit_edge, %hclge_cfg_mac_mode.exit
  %i.0.i5.i = phi i32 [ 0, %hclge_cfg_mac_mode.exit ], [ %inc.i10.i, %if.end2.i.i.do.body.i7.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %desc.i.i.i) #16
  %7 = call ptr @memset(ptr %desc.i.i.i, i32 255, i32 32)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc.i.i.i, i32 noundef 775, i1 noundef zeroext true) #16
  %call.i.i.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc.i.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i6.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i6.i, label %if.end.i9.i, label %hclge_get_mac_link_status.exit.i.i

hclge_get_mac_link_status.exit.i.i:               ; preds = %do.body.i7.i
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hdev, align 8
  %dev.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i, ptr noundef nonnull @.str.465, i32 noundef %call.i.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i.i) #16
  br label %do.end

if.end.i9.i:                                      ; preds = %do.body.i7.i
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %desc.i.i.i) #16
  %12 = and i8 %11, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %13 = icmp eq i8 %12, 0
  %cmp.i8.i = xor i1 %13, %en
  br i1 %cmp.i8.i, label %if.end.i9.i.cleanup_crit_edge, label %if.end2.i.i

if.end.i9.i.cleanup_crit_edge:                    ; preds = %if.end.i9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2.i.i:                                      ; preds = %if.end.i9.i
  call void @msleep(i32 noundef 10) #16
  %inc.i10.i = add nuw nsw i32 %i.0.i5.i, 1
  %exitcond.not.i11.i = icmp eq i32 %inc.i10.i, 100
  br i1 %exitcond.not.i11.i, label %if.end2.i.i.do.end_crit_edge, label %if.end2.i.i.do.body.i7.i_crit_edge

if.end2.i.i.do.body.i7.i_crit_edge:               ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i7.i

if.end2.i.i.do.end_crit_edge:                     ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %if.end2.i.i.do.end_crit_edge, %hclge_get_mac_link_status.exit.i.i
  %retval.0.i.i.ph = phi i32 [ %call.i.i.i.i, %hclge_get_mac_link_status.exit.i.i ], [ -16, %if.end2.i.i.do.end_crit_edge ]
  %14 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.572) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.i9.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %retval.0.i.i.ph, %do.end ], [ 0, %if.end.i9.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @genphy_read_status(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_suspend(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_resume(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_loopback(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_start_aneg(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phy_set_asym_pause(ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_pause_addr_cfg(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_ptp_get_cfg(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_ptp_set_cfg(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_mii_ioctl(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @hclge_read_phy_reg(ptr noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_write_phy_reg(ptr noundef, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hclge_comm_tqps_get_stats(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hclge_comm_tqps_get_strings(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_tqps_get_sset_count(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_get_dfx_reg_bd_num(ptr noundef %hdev, ptr nocapture noundef writeonly %bd_num_list) unnamed_addr #0 align 64 {
entry:
  %desc = alloca [4 x %struct.hclge_desc], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %desc) #16
  %0 = call ptr @memset(ptr %desc, i32 255, i32 128)
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef nonnull %desc, i32 noundef 67, i1 noundef zeroext true) #16
  %flag.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 0, i32 1
  %1 = ptrtoint ptr %flag.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %flag.i, align 2
  %3 = or i16 %2, 1024
  store i16 %3, ptr %flag.i, align 2
  %arrayidx.1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.1.i, i32 noundef 67, i1 noundef zeroext true) #16
  %flag.1.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 1, i32 1
  %4 = ptrtoint ptr %flag.1.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %flag.1.i, align 2
  %6 = or i16 %5, 1024
  store i16 %6, ptr %flag.1.i, align 2
  %arrayidx.2.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 2
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx.2.i, i32 noundef 67, i1 noundef zeroext true) #16
  %flag.2.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 2, i32 1
  %7 = ptrtoint ptr %flag.2.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %flag.2.i, align 2
  %9 = or i16 %8, 1024
  store i16 %9, ptr %flag.2.i, align 2
  %arrayidx3.i = getelementptr inbounds %struct.hclge_desc, ptr %desc, i32 3
  call void @hclge_comm_cmd_setup_basic_desc(ptr noundef %arrayidx3.i, i32 noundef 67, i1 noundef zeroext true) #16
  %hw.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 2
  %call.i.i = call i32 @hclge_comm_cmd_send(ptr noundef %hw.i, ptr noundef nonnull %desc, i32 noundef 4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %for.body.preheader, label %do.end

for.body.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx2 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 0, i32 4, i32 1
  %10 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx2, align 4
  %12 = call i32 @llvm.bswap.i32(i32 %11)
  %13 = ptrtoint ptr %bd_num_list to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %bd_num_list, align 4
  %arrayidx2.1 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 0, i32 4, i32 2
  %14 = ptrtoint ptr %arrayidx2.1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx2.1, align 4
  %16 = call i32 @llvm.bswap.i32(i32 %15)
  %arrayidx3.1 = getelementptr i32, ptr %bd_num_list, i32 1
  %17 = ptrtoint ptr %arrayidx3.1 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %arrayidx3.1, align 4
  %arrayidx2.2 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 0, i32 4, i32 3
  %18 = ptrtoint ptr %arrayidx2.2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx2.2, align 4
  %20 = call i32 @llvm.bswap.i32(i32 %19)
  %arrayidx3.2 = getelementptr i32, ptr %bd_num_list, i32 2
  %21 = ptrtoint ptr %arrayidx3.2 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %arrayidx3.2, align 4
  %arrayidx2.3 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 0, i32 4, i32 4
  %22 = ptrtoint ptr %arrayidx2.3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx2.3, align 4
  %24 = call i32 @llvm.bswap.i32(i32 %23)
  %arrayidx3.3 = getelementptr i32, ptr %bd_num_list, i32 3
  %25 = ptrtoint ptr %arrayidx3.3 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx3.3, align 4
  %arrayidx2.4 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 0, i32 4, i32 5
  %26 = ptrtoint ptr %arrayidx2.4 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx2.4, align 4
  %28 = call i32 @llvm.bswap.i32(i32 %27)
  %arrayidx3.4 = getelementptr i32, ptr %bd_num_list, i32 4
  %29 = ptrtoint ptr %arrayidx3.4 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx3.4, align 4
  %arrayidx2.5 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4, i32 0
  %30 = ptrtoint ptr %arrayidx2.5 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx2.5, align 4
  %32 = call i32 @llvm.bswap.i32(i32 %31)
  %arrayidx3.5 = getelementptr i32, ptr %bd_num_list, i32 5
  %33 = ptrtoint ptr %arrayidx3.5 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %arrayidx3.5, align 4
  %arrayidx2.6 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4, i32 1
  %34 = ptrtoint ptr %arrayidx2.6 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx2.6, align 4
  %36 = call i32 @llvm.bswap.i32(i32 %35)
  %arrayidx3.6 = getelementptr i32, ptr %bd_num_list, i32 6
  %37 = ptrtoint ptr %arrayidx3.6 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %arrayidx3.6, align 4
  %arrayidx2.7 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4, i32 2
  %38 = ptrtoint ptr %arrayidx2.7 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx2.7, align 4
  %40 = call i32 @llvm.bswap.i32(i32 %39)
  %arrayidx3.7 = getelementptr i32, ptr %bd_num_list, i32 7
  %41 = ptrtoint ptr %arrayidx3.7 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %arrayidx3.7, align 4
  %arrayidx2.8 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4, i32 3
  %42 = ptrtoint ptr %arrayidx2.8 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx2.8, align 4
  %44 = call i32 @llvm.bswap.i32(i32 %43)
  %arrayidx3.8 = getelementptr i32, ptr %bd_num_list, i32 8
  %45 = ptrtoint ptr %arrayidx3.8 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %arrayidx3.8, align 4
  %arrayidx2.9 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4, i32 4
  %46 = ptrtoint ptr %arrayidx2.9 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx2.9, align 4
  %48 = call i32 @llvm.bswap.i32(i32 %47)
  %arrayidx3.9 = getelementptr i32, ptr %bd_num_list, i32 9
  %49 = ptrtoint ptr %arrayidx3.9 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %arrayidx3.9, align 4
  %arrayidx2.10 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 1, i32 4, i32 5
  %50 = ptrtoint ptr %arrayidx2.10 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx2.10, align 4
  %52 = call i32 @llvm.bswap.i32(i32 %51)
  %arrayidx3.10 = getelementptr i32, ptr %bd_num_list, i32 10
  %53 = ptrtoint ptr %arrayidx3.10 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %arrayidx3.10, align 4
  %arrayidx2.11 = getelementptr inbounds [4 x %struct.hclge_desc], ptr %desc, i32 0, i32 2, i32 4, i32 0
  %54 = ptrtoint ptr %arrayidx2.11 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx2.11, align 4
  %56 = call i32 @llvm.bswap.i32(i32 %55)
  %arrayidx3.11 = getelementptr i32, ptr %bd_num_list, i32 11
  %57 = ptrtoint ptr %arrayidx3.11 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %arrayidx3.11, align 4
  br label %cleanup

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %58 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %59, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.623, i32 noundef %call.i.i) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end, %for.body.preheader
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %desc) #16
  ret i32 %call.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_comm_get_rss_hash_info(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_comm_get_rss_indir_tbl(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_set_rss_hash_key(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_set_rss_tuple(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hclge_comm_get_rss_type(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_comm_get_rss_tuple(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @hclge_comm_convert_rss_tuple(i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mdiobus_write(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mdiobus_read(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_push_vf_port_base_vlan_info(ptr noundef, i8 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hclge_tm_vport_map_update(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @hclge_add_fd_entry_common(ptr noundef %hdev, ptr noundef %rule) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %fd_rule_lock = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 68
  tail call void @_raw_spin_lock_bh(ptr noundef %fd_rule_lock) #16
  %fd_active_type = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 75
  %0 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %fd_active_type, align 8
  %rule_type = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 9
  %2 = ptrtoint ptr %rule_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rule_type, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp ne i32 %1, %3
  %4 = and i32 %1, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %switch = icmp eq i32 %4, 2
  %or.cond = and i1 %cmp.not, %switch
  br i1 %or.cond, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.699, i32 noundef %3, i32 noundef %1) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %fd_rule_list.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 67
  %tobool.not.i = icmp ne ptr %rule, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %cmp.not.i = icmp eq i32 %3, 2
  %or.cond47 = select i1 %tobool.not.i, i1 %cmp.not.i, i1 false
  br i1 %or.cond47, label %lor.lhs.false1.i, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

lor.lhs.false1.i:                                 ; preds = %if.end
  %7 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 5
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp2.i = icmp eq i32 %9, 0
  br i1 %cmp2.i, label %lor.lhs.false1.i.if.end9_crit_edge, label %if.end.i

lor.lhs.false1.i.if.end9_crit_edge:               ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.end.i:                                         ; preds = %lor.lhs.false1.i
  %sub.i = add i32 %9, -1
  %arrayidx.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5, i32 %sub.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool6.not.i = icmp eq i16 %11, 0
  br i1 %tobool6.not.i, label %if.end.i.if.end9_crit_edge, label %lor.lhs.false7.i

if.end.i.if.end9_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

lor.lhs.false7.i:                                 ; preds = %if.end.i
  %offset.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5, i32 %sub.i, i32 1
  %12 = ptrtoint ptr %offset.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %offset.i, align 2
  %offset8.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 5, i32 0, i32 0, i32 3
  %14 = ptrtoint ptr %offset8.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %offset8.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp10.i = icmp eq i16 %13, %15
  br i1 %cmp10.i, label %lor.lhs.false7.i.if.end9_crit_edge, label %if.end13.i

lor.lhs.false7.i.if.end9_crit_edge:               ; preds = %lor.lhs.false7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.end13.i:                                       ; preds = %lor.lhs.false7.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %11)
  %cmp16.i = icmp ugt i16 %11, 1
  br i1 %cmp16.i, label %if.end13.i.hclge_fd_check_user_def_refcnt.exit_crit_edge, label %if.end19.i

if.end13.i.hclge_fd_check_user_def_refcnt.exit_crit_edge: ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_check_user_def_refcnt.exit

if.end19.i:                                       ; preds = %if.end13.i
  %location.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 8
  %16 = ptrtoint ptr %location.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %location.i, align 4
  %18 = ptrtoint ptr %fd_rule_list.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %fd_rule_list.i, align 4
  %tobool2.not36.i.i = icmp eq ptr %19, null
  br i1 %tobool2.not36.i.i, label %if.end19.i.hclge_fd_check_user_def_refcnt.exit_crit_edge, label %if.end19.i.land.rhs.i.i_crit_edge

if.end19.i.land.rhs.i.i_crit_edge:                ; preds = %if.end19.i
  br label %land.rhs.i.i

if.end19.i.hclge_fd_check_user_def_refcnt.exit_crit_edge: ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_check_user_def_refcnt.exit

land.rhs.i.i:                                     ; preds = %if.else.i.i.land.rhs.i.i_crit_edge, %if.end19.i.land.rhs.i.i_crit_edge
  %rule.037.i.i = phi ptr [ %23, %if.else.i.i.land.rhs.i.i_crit_edge ], [ %19, %if.end19.i.land.rhs.i.i_crit_edge ]
  %location5.i.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.037.i.i, i32 0, i32 8
  %20 = ptrtoint ptr %location5.i.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %location5.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %21, i16 %17)
  %cmp.i.i = icmp eq i16 %21, %17
  br i1 %cmp.i.i, label %if.then21.i, label %if.else.i.i

if.else.i.i:                                      ; preds = %land.rhs.i.i
  %22 = ptrtoint ptr %rule.037.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rule.037.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %21, i16 %17)
  %cmp11.i.i = icmp ugt i16 %21, %17
  %tobool2.not.i.i = icmp eq ptr %23, null
  %or.cond.i = select i1 %cmp11.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %if.else.i.i.hclge_fd_check_user_def_refcnt.exit_crit_edge, label %if.else.i.i.land.rhs.i.i_crit_edge

if.else.i.i.land.rhs.i.i_crit_edge:               ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i

if.else.i.i.hclge_fd_check_user_def_refcnt.exit_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_check_user_def_refcnt.exit

if.then21.i:                                      ; preds = %land.rhs.i.i
  %24 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.037.i.i, i32 0, i32 5
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %26)
  %cmp25.i = icmp eq i32 %9, %26
  br i1 %cmp25.i, label %if.then21.i.if.end9_crit_edge, label %if.then21.i.hclge_fd_check_user_def_refcnt.exit_crit_edge

if.then21.i.hclge_fd_check_user_def_refcnt.exit_crit_edge: ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_check_user_def_refcnt.exit

if.then21.i.if.end9_crit_edge:                    ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

hclge_fd_check_user_def_refcnt.exit:              ; preds = %if.then21.i.hclge_fd_check_user_def_refcnt.exit_crit_edge, %if.else.i.i.hclge_fd_check_user_def_refcnt.exit_crit_edge, %if.end19.i.hclge_fd_check_user_def_refcnt.exit_crit_edge, %if.end13.i.hclge_fd_check_user_def_refcnt.exit_crit_edge
  %27 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hdev, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %28, i32 0, i32 44
  %add.i = add i32 %9, 1
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.701, i32 noundef %add.i) #20
  br label %cleanup

if.end9:                                          ; preds = %if.then21.i.if.end9_crit_edge, %lor.lhs.false7.i.if.end9_crit_edge, %if.end.i.if.end9_crit_edge, %lor.lhs.false1.i.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %call10 = tail call fastcc i32 @hclge_clear_arfs_rules(ptr noundef %hdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %if.end9
  %call14 = tail call fastcc i32 @hclge_fd_config_rule(ptr noundef %hdev, ptr noundef %rule)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end17:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  %state = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 10
  %29 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 2, ptr %state, align 4
  %30 = ptrtoint ptr %rule_type to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rule_type, align 4
  %32 = ptrtoint ptr %fd_active_type to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %fd_active_type, align 8
  %33 = load i32, ptr %state, align 4
  %location = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule, i32 0, i32 8
  %34 = ptrtoint ptr %location to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %location, align 4
  tail call fastcc void @hclge_update_fd_list(ptr noundef %hdev, i32 noundef %33, i16 noundef zeroext %35, ptr noundef %rule)
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end13.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %hclge_fd_check_user_def_refcnt.exit, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ -28, %hclge_fd_check_user_def_refcnt.exit ], [ %call10, %if.end9.cleanup_crit_edge ], [ %call14, %if.end13.cleanup_crit_edge ], [ 0, %if.end17 ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %fd_rule_lock) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hclge_update_fd_list(ptr noundef %hdev, i32 noundef %state, i16 noundef zeroext %location, ptr noundef %new_rule) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %fd_rule_list = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 67
  %0 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fd_rule_list, align 4
  %tobool2.not36.i = icmp eq ptr %1, null
  br i1 %tobool2.not36.i, label %entry.if.end2_crit_edge, label %entry.land.rhs.i_crit_edge

entry.land.rhs.i_crit_edge:                       ; preds = %entry
  br label %land.rhs.i

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end2

land.rhs.i:                                       ; preds = %if.end14.i.land.rhs.i_crit_edge, %entry.land.rhs.i_crit_edge
  %parent.0 = phi ptr [ %rule.037.i, %if.end14.i.land.rhs.i_crit_edge ], [ null, %entry.land.rhs.i_crit_edge ]
  %rule.037.i = phi ptr [ %3, %if.end14.i.land.rhs.i_crit_edge ], [ %1, %entry.land.rhs.i_crit_edge ]
  %2 = ptrtoint ptr %rule.037.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rule.037.i, align 4
  %location5.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.037.i, i32 0, i32 8
  %4 = ptrtoint ptr %location5.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %location5.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %location)
  %cmp.i = icmp eq i16 %5, %location
  br i1 %cmp.i, label %lor.lhs.false.i, label %if.else.i

if.else.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %location)
  %cmp11.i = icmp ugt i16 %5, %location
  br i1 %cmp11.i, label %if.else.i.if.end2_crit_edge, label %if.end14.i

if.else.i.if.end2_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end2

if.end14.i:                                       ; preds = %if.else.i
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %if.end14.i.if.end2_crit_edge, label %if.end14.i.land.rhs.i_crit_edge

if.end14.i.land.rhs.i_crit_edge:                  ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i

if.end14.i.if.end2_crit_edge:                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end2

lor.lhs.false.i:                                  ; preds = %land.rhs.i
  %location5.i.le = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.037.i, i32 0, i32 8
  %rule_type.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.037.i, i32 0, i32 9
  %6 = ptrtoint ptr %rule_type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rule_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %cmp.not.i = icmp eq i32 %7, 2
  br i1 %cmp.not.i, label %lor.lhs.false1.i, label %lor.lhs.false.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge

lor.lhs.false.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_dec_user_def_refcnt.exit

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %8 = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.037.i, i32 0, i32 5
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp2.i = icmp eq i32 %10, 0
  br i1 %cmp2.i, label %lor.lhs.false1.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge, label %if.end.i

lor.lhs.false1.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge: ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_dec_user_def_refcnt.exit

if.end.i:                                         ; preds = %lor.lhs.false1.i
  %sub.i = add i32 %10, -1
  %arrayidx.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %arrayidx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool5.not.i = icmp eq i16 %12, 0
  br i1 %tobool5.not.i, label %if.end.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge, label %if.end7.i

if.end.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_dec_user_def_refcnt.exit

if.end7.i:                                        ; preds = %if.end.i
  %dec.i = add i16 %12, -1
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %dec.i, ptr %arrayidx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %dec.i)
  %tobool10.not.i = icmp eq i16 %dec.i, 0
  br i1 %tobool10.not.i, label %if.then11.i, label %if.end7.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge

if.end7.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_dec_user_def_refcnt.exit

if.then11.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  %offset.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5, i32 %sub.i, i32 1
  %14 = ptrtoint ptr %offset.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 0, ptr %offset.i, align 2
  %state.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 17, ptr noundef %state.i) #16
  br label %hclge_fd_dec_user_def_refcnt.exit

hclge_fd_dec_user_def_refcnt.exit:                ; preds = %if.then11.i, %if.end7.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge, %if.end.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge, %lor.lhs.false1.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge, %lor.lhs.false.i.hclge_fd_dec_user_def_refcnt.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %cmp = icmp ne i32 %state, 2
  %tobool.not.i39 = icmp eq ptr %new_rule, null
  %or.cond = or i1 %cmp, %tobool.not.i39
  br i1 %or.cond, label %hclge_fd_dec_user_def_refcnt.exit.if.end_crit_edge, label %lor.lhs.false.i42

hclge_fd_dec_user_def_refcnt.exit.if.end_crit_edge: ; preds = %hclge_fd_dec_user_def_refcnt.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.lhs.false.i42:                                ; preds = %hclge_fd_dec_user_def_refcnt.exit
  %rule_type.i40 = getelementptr inbounds %struct.hclge_fd_rule, ptr %new_rule, i32 0, i32 9
  %15 = ptrtoint ptr %rule_type.i40 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %rule_type.i40, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %cmp.not.i41 = icmp eq i32 %16, 2
  br i1 %cmp.not.i41, label %lor.lhs.false1.i44, label %lor.lhs.false.i42.if.end_crit_edge

lor.lhs.false.i42.if.end_crit_edge:               ; preds = %lor.lhs.false.i42
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.lhs.false1.i44:                               ; preds = %lor.lhs.false.i42
  %17 = getelementptr inbounds %struct.hclge_fd_rule, ptr %new_rule, i32 0, i32 5
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp2.i43 = icmp eq i32 %19, 0
  br i1 %cmp2.i43, label %lor.lhs.false1.i44.if.end_crit_edge, label %if.end.i48

lor.lhs.false1.i44.if.end_crit_edge:              ; preds = %lor.lhs.false1.i44
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i48:                                       ; preds = %lor.lhs.false1.i44
  %sub.i45 = add i32 %19, -1
  %arrayidx.i46 = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5, i32 %sub.i45
  %20 = ptrtoint ptr %arrayidx.i46 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %arrayidx.i46, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool5.not.i47 = icmp eq i16 %21, 0
  br i1 %tobool5.not.i47, label %if.then6.i, label %if.end.i48.if.end9.i_crit_edge

if.end.i48.if.end9.i_crit_edge:                   ; preds = %if.end.i48
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9.i

if.then6.i:                                       ; preds = %if.end.i48
  call void @__sanitizer_cov_trace_pc() #18
  %offset.i49 = getelementptr inbounds %struct.hclge_fd_rule, ptr %new_rule, i32 0, i32 5, i32 0, i32 0, i32 3
  %22 = ptrtoint ptr %offset.i49 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %offset.i49, align 4
  %offset8.i = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5, i32 %sub.i45, i32 1
  %24 = ptrtoint ptr %offset8.i to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %23, ptr %offset8.i, align 2
  %state.i50 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 17, ptr noundef %state.i50) #16
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then6.i, %if.end.i48.if.end9.i_crit_edge
  %25 = ptrtoint ptr %arrayidx.i46 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %arrayidx.i46, align 2
  %inc.i = add i16 %26, 1
  store i16 %inc.i, ptr %arrayidx.i46, align 2
  br label %if.end

if.end:                                           ; preds = %if.end9.i, %lor.lhs.false1.i44.if.end_crit_edge, %lor.lhs.false.i42.if.end_crit_edge, %hclge_fd_dec_user_def_refcnt.exit.if.end_crit_edge
  %state.i51 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %call.i = tail call i32 @_test_and_clear_bit(i32 noundef 17, ptr noundef %state.i51) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i52 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i52, label %if.end.hclge_sync_fd_user_def_cfg.exit_crit_edge, label %if.end.i53

if.end.hclge_sync_fd_user_def_cfg.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_fd_user_def_cfg.exit

if.end.i53:                                       ; preds = %if.end
  %user_def_cfg.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5
  %call4.i = tail call fastcc i32 @hclge_fd_set_user_def_cmd(ptr noundef %hdev, ptr noundef %user_def_cfg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i54 = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i54, label %if.end.i53.hclge_sync_fd_user_def_cfg.exit_crit_edge, label %if.then6.i55

if.end.i53.hclge_sync_fd_user_def_cfg.exit_crit_edge: ; preds = %if.end.i53
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_fd_user_def_cfg.exit

if.then6.i55:                                     ; preds = %if.end.i53
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 17, ptr noundef %state.i51) #16
  br label %hclge_sync_fd_user_def_cfg.exit

hclge_sync_fd_user_def_cfg.exit:                  ; preds = %if.then6.i55, %if.end.i53.hclge_sync_fd_user_def_cfg.exit_crit_edge, %if.end.hclge_sync_fd_user_def_cfg.exit_crit_edge
  %27 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.811)
  switch i32 %state, label %hclge_sync_fd_user_def_cfg.exit.cleanup_crit_edge [
    i32 0, label %hclge_sync_fd_user_def_cfg.exit.sw.bb.i_crit_edge
    i32 2, label %hclge_sync_fd_user_def_cfg.exit.sw.bb.i_crit_edge113
    i32 3, label %sw.bb6.i
    i32 1, label %sw.bb7.i
  ]

hclge_sync_fd_user_def_cfg.exit.sw.bb.i_crit_edge113: ; preds = %hclge_sync_fd_user_def_cfg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

hclge_sync_fd_user_def_cfg.exit.sw.bb.i_crit_edge: ; preds = %hclge_sync_fd_user_def_cfg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

hclge_sync_fd_user_def_cfg.exit.cleanup_crit_edge: ; preds = %hclge_sync_fd_user_def_cfg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i:                                          ; preds = %hclge_sync_fd_user_def_cfg.exit.sw.bb.i_crit_edge, %hclge_sync_fd_user_def_cfg.exit.sw.bb.i_crit_edge113
  %28 = ptrtoint ptr %rule.037.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %rule.037.i, align 4
  %30 = ptrtoint ptr %new_rule to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %new_rule, align 4
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %rule.037.i, i32 0, i32 1
  %31 = ptrtoint ptr %pprev.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pprev.i, align 4
  %pprev5.i = getelementptr inbounds %struct.hlist_node, ptr %new_rule, i32 0, i32 1
  %33 = ptrtoint ptr %pprev5.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %32, ptr %pprev5.i, align 4
  %34 = call ptr @memcpy(ptr %rule.037.i, ptr %new_rule, i32 176)
  tail call void @kfree(ptr noundef %new_rule) #16
  br label %cleanup

sw.bb6.i:                                         ; preds = %hclge_sync_fd_user_def_cfg.exit
  %35 = ptrtoint ptr %location5.i.le to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %location5.i.le, align 4
  %conv.i.i = zext i16 %36 to i32
  %fd_bmap.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 74
  %div3.i.i.i = lshr i32 %conv.i.i, 5
  %arrayidx.i.i.i = getelementptr i32, ptr %fd_bmap.i.i, i32 %div3.i.i.i
  %37 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %conv.i.i, 31
  %39 = shl nuw i32 1, %and.i.i.i
  %40 = and i32 %39, %38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i.i = icmp eq i32 %40, 0
  br i1 %tobool.not.i.i, label %sw.bb6.i.hclge_fd_dec_rule_cnt.exit.i_crit_edge, label %if.then.i.i

sw.bb6.i.hclge_fd_dec_rule_cnt.exit.i_crit_edge:  ; preds = %sw.bb6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_dec_rule_cnt.exit.i

if.then.i.i:                                      ; preds = %sw.bb6.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef %conv.i.i, ptr noundef %fd_bmap.i.i) #16
  %hclge_fd_rule_num.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 69
  %41 = ptrtoint ptr %hclge_fd_rule_num.i.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %hclge_fd_rule_num.i.i, align 4
  %dec.i.i = add i16 %42, -1
  store i16 %dec.i.i, ptr %hclge_fd_rule_num.i.i, align 4
  br label %hclge_fd_dec_rule_cnt.exit.i

hclge_fd_dec_rule_cnt.exit.i:                     ; preds = %if.then.i.i, %sw.bb6.i.hclge_fd_dec_rule_cnt.exit.i_crit_edge
  %43 = ptrtoint ptr %rule.037.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %rule.037.i, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %rule.037.i, i32 0, i32 1
  %45 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile ptr %44, ptr %46, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %44, null
  br i1 %tobool.not.i.i.i.i, label %hclge_fd_dec_rule_cnt.exit.i.hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i.i

hclge_fd_dec_rule_cnt.exit.i.hlist_del.exit.i.i_crit_edge: ; preds = %hclge_fd_dec_rule_cnt.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hlist_del.exit.i.i

do.body13.i.i.i.i:                                ; preds = %hclge_fd_dec_rule_cnt.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %44, i32 0, i32 1
  %48 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile ptr %46, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del.exit.i.i

hlist_del.exit.i.i:                               ; preds = %do.body13.i.i.i.i, %hclge_fd_dec_rule_cnt.exit.i.hlist_del.exit.i.i_crit_edge
  %49 = ptrtoint ptr %rule.037.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr inttoptr (i32 256 to ptr), ptr %rule.037.i, align 4
  %50 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  tail call void @kfree(ptr noundef nonnull %rule.037.i) #16
  %51 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %fd_rule_list, align 4
  %tobool.not.i.not.i.i.i = icmp eq ptr %52, null
  br i1 %tobool.not.i.not.i.i.i, label %if.then.i.i.i, label %hlist_del.exit.i.i.cleanup_crit_edge

hlist_del.exit.i.i.cleanup_crit_edge:             ; preds = %hlist_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i.i.i:                                    ; preds = %hlist_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %fd_active_type.i.i.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 75
  %53 = ptrtoint ptr %fd_active_type.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %fd_active_type.i.i.i, align 8
  br label %cleanup

sw.bb7.i:                                         ; preds = %hclge_sync_fd_user_def_cfg.exit
  %state8.i = getelementptr inbounds %struct.hclge_fd_rule, ptr %rule.037.i, i32 0, i32 10
  %54 = ptrtoint ptr %state8.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %state8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %cmp.i56 = icmp eq i32 %55, 0
  br i1 %cmp.i56, label %if.then.i, label %if.end.i57

if.then.i:                                        ; preds = %sw.bb7.i
  %56 = ptrtoint ptr %location5.i.le to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %location5.i.le, align 4
  %conv.i25.i = zext i16 %57 to i32
  %fd_bmap.i26.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 74
  %div3.i.i27.i = lshr i32 %conv.i25.i, 5
  %arrayidx.i.i28.i = getelementptr i32, ptr %fd_bmap.i26.i, i32 %div3.i.i27.i
  %58 = ptrtoint ptr %arrayidx.i.i28.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %arrayidx.i.i28.i, align 4
  %and.i.i29.i = and i32 %conv.i25.i, 31
  %60 = shl nuw i32 1, %and.i.i29.i
  %61 = and i32 %60, %59
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool.not.i30.i = icmp eq i32 %61, 0
  br i1 %tobool.not.i30.i, label %if.then.i.hclge_fd_dec_rule_cnt.exit34.i_crit_edge, label %if.then.i33.i

if.then.i.hclge_fd_dec_rule_cnt.exit34.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_dec_rule_cnt.exit34.i

if.then.i33.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef %conv.i25.i, ptr noundef %fd_bmap.i26.i) #16
  %hclge_fd_rule_num.i31.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 69
  %62 = ptrtoint ptr %hclge_fd_rule_num.i31.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %hclge_fd_rule_num.i31.i, align 4
  %dec.i32.i = add i16 %63, -1
  store i16 %dec.i32.i, ptr %hclge_fd_rule_num.i31.i, align 4
  br label %hclge_fd_dec_rule_cnt.exit34.i

hclge_fd_dec_rule_cnt.exit34.i:                   ; preds = %if.then.i33.i, %if.then.i.hclge_fd_dec_rule_cnt.exit34.i_crit_edge
  %64 = ptrtoint ptr %rule.037.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %rule.037.i, align 4
  %pprev2.i.i.i35.i = getelementptr inbounds %struct.hlist_node, ptr %rule.037.i, i32 0, i32 1
  %66 = ptrtoint ptr %pprev2.i.i.i35.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %pprev2.i.i.i35.i, align 4
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile ptr %65, ptr %67, align 4
  %tobool.not.i.i.i36.i = icmp eq ptr %65, null
  br i1 %tobool.not.i.i.i36.i, label %hclge_fd_dec_rule_cnt.exit34.i.hlist_del.exit.i41.i_crit_edge, label %do.body13.i.i.i38.i

hclge_fd_dec_rule_cnt.exit34.i.hlist_del.exit.i41.i_crit_edge: ; preds = %hclge_fd_dec_rule_cnt.exit34.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %hlist_del.exit.i41.i

do.body13.i.i.i38.i:                              ; preds = %hclge_fd_dec_rule_cnt.exit34.i
  call void @__sanitizer_cov_trace_pc() #18
  %pprev14.i.i.i37.i = getelementptr inbounds %struct.hlist_node, ptr %65, i32 0, i32 1
  %69 = ptrtoint ptr %pprev14.i.i.i37.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store volatile ptr %67, ptr %pprev14.i.i.i37.i, align 4
  br label %hlist_del.exit.i41.i

hlist_del.exit.i41.i:                             ; preds = %do.body13.i.i.i38.i, %hclge_fd_dec_rule_cnt.exit34.i.hlist_del.exit.i41.i_crit_edge
  %70 = ptrtoint ptr %rule.037.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr inttoptr (i32 256 to ptr), ptr %rule.037.i, align 4
  %71 = ptrtoint ptr %pprev2.i.i.i35.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i35.i, align 4
  tail call void @kfree(ptr noundef nonnull %rule.037.i) #16
  %72 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile ptr, ptr %fd_rule_list, align 4
  %tobool.not.i.not.i.i40.i = icmp eq ptr %73, null
  br i1 %tobool.not.i.not.i.i40.i, label %if.then.i.i43.i, label %hlist_del.exit.i41.i.cleanup_crit_edge

hlist_del.exit.i41.i.cleanup_crit_edge:           ; preds = %hlist_del.exit.i41.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i.i43.i:                                  ; preds = %hlist_del.exit.i41.i
  call void @__sanitizer_cov_trace_pc() #18
  %fd_active_type.i.i42.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 75
  %74 = ptrtoint ptr %fd_active_type.i.i42.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 0, ptr %fd_active_type.i.i42.i, align 8
  br label %cleanup

if.end.i57:                                       ; preds = %sw.bb7.i
  call void @__sanitizer_cov_trace_pc() #18
  %75 = ptrtoint ptr %state8.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 1, ptr %state8.i, align 4
  br label %cleanup

if.end2:                                          ; preds = %if.end14.i.if.end2_crit_edge, %if.else.i.if.end2_crit_edge, %entry.if.end2_crit_edge
  %parent.1.ph = phi ptr [ null, %entry.if.end2_crit_edge ], [ %parent.0, %if.else.i.if.end2_crit_edge ], [ %rule.037.i, %if.end14.i.if.end2_crit_edge ]
  %76 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %76, ptr @__sancov_gen_cov_switch_values.812)
  switch i32 %state, label %if.end8 [
    i32 3, label %if.end2.do.end_crit_edge
    i32 1, label %if.end2.do.end_crit_edge114
  ]

if.end2.do.end_crit_edge114:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

if.end2.do.end_crit_edge:                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %if.end2.do.end_crit_edge, %if.end2.do.end_crit_edge114
  %77 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %78, i32 0, i32 44
  %conv = zext i16 %location to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.703, i32 noundef %conv) #20
  br label %cleanup

if.end8:                                          ; preds = %if.end2
  %tobool.not.i58 = icmp eq ptr %new_rule, null
  br i1 %tobool.not.i58, label %if.end8.hclge_fd_inc_user_def_refcnt.exit74_crit_edge, label %lor.lhs.false.i61

if.end8.hclge_fd_inc_user_def_refcnt.exit74_crit_edge: ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_inc_user_def_refcnt.exit74

lor.lhs.false.i61:                                ; preds = %if.end8
  %rule_type.i59 = getelementptr inbounds %struct.hclge_fd_rule, ptr %new_rule, i32 0, i32 9
  %79 = ptrtoint ptr %rule_type.i59 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %rule_type.i59, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %80)
  %cmp.not.i60 = icmp eq i32 %80, 2
  br i1 %cmp.not.i60, label %lor.lhs.false1.i63, label %lor.lhs.false.i61.hclge_fd_inc_user_def_refcnt.exit74_crit_edge

lor.lhs.false.i61.hclge_fd_inc_user_def_refcnt.exit74_crit_edge: ; preds = %lor.lhs.false.i61
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_inc_user_def_refcnt.exit74

lor.lhs.false1.i63:                               ; preds = %lor.lhs.false.i61
  %81 = getelementptr inbounds %struct.hclge_fd_rule, ptr %new_rule, i32 0, i32 5
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %81, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %cmp2.i62 = icmp eq i32 %83, 0
  br i1 %cmp2.i62, label %lor.lhs.false1.i63.hclge_fd_inc_user_def_refcnt.exit74_crit_edge, label %if.end.i67

lor.lhs.false1.i63.hclge_fd_inc_user_def_refcnt.exit74_crit_edge: ; preds = %lor.lhs.false1.i63
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_inc_user_def_refcnt.exit74

if.end.i67:                                       ; preds = %lor.lhs.false1.i63
  %sub.i64 = add i32 %83, -1
  %arrayidx.i65 = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5, i32 %sub.i64
  %84 = ptrtoint ptr %arrayidx.i65 to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %arrayidx.i65, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %85)
  %tobool5.not.i66 = icmp eq i16 %85, 0
  br i1 %tobool5.not.i66, label %if.then6.i71, label %if.end.i67.if.end9.i73_crit_edge

if.end.i67.if.end9.i73_crit_edge:                 ; preds = %if.end.i67
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9.i73

if.then6.i71:                                     ; preds = %if.end.i67
  call void @__sanitizer_cov_trace_pc() #18
  %offset.i68 = getelementptr inbounds %struct.hclge_fd_rule, ptr %new_rule, i32 0, i32 5, i32 0, i32 0, i32 3
  %86 = ptrtoint ptr %offset.i68 to i32
  call void @__asan_load2_noabort(i32 %86)
  %87 = load i16, ptr %offset.i68, align 4
  %offset8.i69 = getelementptr %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5, i32 %sub.i64, i32 1
  %88 = ptrtoint ptr %offset8.i69 to i32
  call void @__asan_store2_noabort(i32 %88)
  store i16 %87, ptr %offset8.i69, align 2
  %state.i70 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 17, ptr noundef %state.i70) #16
  br label %if.end9.i73

if.end9.i73:                                      ; preds = %if.then6.i71, %if.end.i67.if.end9.i73_crit_edge
  %89 = ptrtoint ptr %arrayidx.i65 to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %arrayidx.i65, align 2
  %inc.i72 = add i16 %90, 1
  store i16 %inc.i72, ptr %arrayidx.i65, align 2
  br label %hclge_fd_inc_user_def_refcnt.exit74

hclge_fd_inc_user_def_refcnt.exit74:              ; preds = %if.end9.i73, %lor.lhs.false1.i63.hclge_fd_inc_user_def_refcnt.exit74_crit_edge, %lor.lhs.false.i61.hclge_fd_inc_user_def_refcnt.exit74_crit_edge, %if.end8.hclge_fd_inc_user_def_refcnt.exit74_crit_edge
  %state.i75 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 5
  %call.i76 = tail call i32 @_test_and_clear_bit(i32 noundef 17, ptr noundef %state.i75) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i76)
  %tobool.not.i77 = icmp eq i32 %call.i76, 0
  br i1 %tobool.not.i77, label %hclge_fd_inc_user_def_refcnt.exit74.hclge_sync_fd_user_def_cfg.exit84_crit_edge, label %if.end.i78

hclge_fd_inc_user_def_refcnt.exit74.hclge_sync_fd_user_def_cfg.exit84_crit_edge: ; preds = %hclge_fd_inc_user_def_refcnt.exit74
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_fd_user_def_cfg.exit84

if.end.i78:                                       ; preds = %hclge_fd_inc_user_def_refcnt.exit74
  %user_def_cfg.i79 = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 66, i32 5
  %call4.i80 = tail call fastcc i32 @hclge_fd_set_user_def_cmd(ptr noundef %hdev, ptr noundef %user_def_cfg.i79) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i80)
  %tobool5.not.i81 = icmp eq i32 %call4.i80, 0
  br i1 %tobool5.not.i81, label %if.end.i78.hclge_sync_fd_user_def_cfg.exit84_crit_edge, label %if.then6.i82

if.end.i78.hclge_sync_fd_user_def_cfg.exit84_crit_edge: ; preds = %if.end.i78
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_sync_fd_user_def_cfg.exit84

if.then6.i82:                                     ; preds = %if.end.i78
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 17, ptr noundef %state.i75) #16
  br label %hclge_sync_fd_user_def_cfg.exit84

hclge_sync_fd_user_def_cfg.exit84:                ; preds = %if.then6.i82, %if.end.i78.hclge_sync_fd_user_def_cfg.exit84_crit_edge, %hclge_fd_inc_user_def_refcnt.exit74.hclge_sync_fd_user_def_cfg.exit84_crit_edge
  %91 = ptrtoint ptr %new_rule to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr null, ptr %new_rule, align 4
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %new_rule, i32 0, i32 1
  %92 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr null, ptr %pprev.i.i, align 4
  %tobool.not.i85 = icmp eq ptr %parent.1.ph, null
  br i1 %tobool.not.i85, label %if.else.i88, label %if.then.i87

if.then.i87:                                      ; preds = %hclge_sync_fd_user_def_cfg.exit84
  %93 = ptrtoint ptr %parent.1.ph to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %parent.1.ph, align 4
  %95 = ptrtoint ptr %new_rule to i32
  call void @__asan_store4_noabort(i32 %95)
  store volatile ptr %94, ptr %new_rule, align 4
  store volatile ptr %new_rule, ptr %parent.1.ph, align 4
  %96 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store volatile ptr %parent.1.ph, ptr %pprev.i.i, align 4
  %97 = load ptr, ptr %new_rule, align 4
  %tobool.not.i.i86 = icmp eq ptr %97, null
  br i1 %tobool.not.i.i86, label %if.then.i87.hclge_fd_insert_rule_node.exit_crit_edge, label %do.body24.i.i

if.then.i87.hclge_fd_insert_rule_node.exit_crit_edge: ; preds = %if.then.i87
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_insert_rule_node.exit

do.body24.i.i:                                    ; preds = %if.then.i87
  call void @__sanitizer_cov_trace_pc() #18
  %pprev27.i.i = getelementptr inbounds %struct.hlist_node, ptr %97, i32 0, i32 1
  %98 = ptrtoint ptr %pprev27.i.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store volatile ptr %new_rule, ptr %pprev27.i.i, align 4
  br label %hclge_fd_insert_rule_node.exit

if.else.i88:                                      ; preds = %hclge_sync_fd_user_def_cfg.exit84
  %99 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %fd_rule_list, align 4
  %101 = ptrtoint ptr %new_rule to i32
  call void @__asan_store4_noabort(i32 %101)
  store volatile ptr %100, ptr %new_rule, align 4
  %tobool.not.i8.i = icmp eq ptr %100, null
  br i1 %tobool.not.i8.i, label %if.else.i88.hlist_add_head.exit.i_crit_edge, label %do.body12.i.i

if.else.i88.hlist_add_head.exit.i_crit_edge:      ; preds = %if.else.i88
  call void @__sanitizer_cov_trace_pc() #18
  br label %hlist_add_head.exit.i

do.body12.i.i:                                    ; preds = %if.else.i88
  call void @__sanitizer_cov_trace_pc() #18
  %pprev.i9.i = getelementptr inbounds %struct.hlist_node, ptr %100, i32 0, i32 1
  %102 = ptrtoint ptr %pprev.i9.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store volatile ptr %new_rule, ptr %pprev.i9.i, align 4
  br label %hlist_add_head.exit.i

hlist_add_head.exit.i:                            ; preds = %do.body12.i.i, %if.else.i88.hlist_add_head.exit.i_crit_edge
  %103 = ptrtoint ptr %fd_rule_list to i32
  call void @__asan_store4_noabort(i32 %103)
  store volatile ptr %new_rule, ptr %fd_rule_list, align 4
  %104 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store volatile ptr %fd_rule_list, ptr %pprev.i.i, align 4
  br label %hclge_fd_insert_rule_node.exit

hclge_fd_insert_rule_node.exit:                   ; preds = %hlist_add_head.exit.i, %do.body24.i.i, %if.then.i87.hclge_fd_insert_rule_node.exit_crit_edge
  %location9 = getelementptr inbounds %struct.hclge_fd_rule, ptr %new_rule, i32 0, i32 8
  %105 = ptrtoint ptr %location9 to i32
  call void @__asan_load2_noabort(i32 %105)
  %106 = load i16, ptr %location9, align 4
  %conv.i = zext i16 %106 to i32
  %fd_bmap.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 74
  %div3.i.i = lshr i32 %conv.i, 5
  %arrayidx.i.i = getelementptr i32, ptr %fd_bmap.i, i32 %div3.i.i
  %107 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %conv.i, 31
  %109 = shl nuw i32 1, %and.i.i
  %110 = and i32 %109, %108
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %110)
  %tobool.not.i90 = icmp eq i32 %110, 0
  br i1 %tobool.not.i90, label %if.then.i92, label %hclge_fd_insert_rule_node.exit.hclge_fd_inc_rule_cnt.exit_crit_edge

hclge_fd_insert_rule_node.exit.hclge_fd_inc_rule_cnt.exit_crit_edge: ; preds = %hclge_fd_insert_rule_node.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %hclge_fd_inc_rule_cnt.exit

if.then.i92:                                      ; preds = %hclge_fd_insert_rule_node.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef %conv.i, ptr noundef %fd_bmap.i) #16
  %hclge_fd_rule_num.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 69
  %111 = ptrtoint ptr %hclge_fd_rule_num.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %hclge_fd_rule_num.i, align 4
  %inc.i91 = add i16 %112, 1
  store i16 %inc.i91, ptr %hclge_fd_rule_num.i, align 4
  br label %hclge_fd_inc_rule_cnt.exit

hclge_fd_inc_rule_cnt.exit:                       ; preds = %if.then.i92, %hclge_fd_insert_rule_node.exit.hclge_fd_inc_rule_cnt.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp10 = icmp eq i32 %state, 0
  br i1 %cmp10, label %if.then12, label %hclge_fd_inc_rule_cnt.exit.cleanup_crit_edge

hclge_fd_inc_rule_cnt.exit.cleanup_crit_edge:     ; preds = %hclge_fd_inc_rule_cnt.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then12:                                        ; preds = %hclge_fd_inc_rule_cnt.exit
  tail call void @_set_bit(i32 noundef 15, ptr noundef %state.i75) #16
  %113 = ptrtoint ptr %state.i75 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %state.i75, align 4
  %115 = and i32 %114, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %115)
  %tobool.not.i95 = icmp eq i32 %115, 0
  br i1 %tobool.not.i95, label %land.lhs.true.i, label %if.then12.cleanup_crit_edge

if.then12.cleanup_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.then12
  %116 = ptrtoint ptr %state.i75 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load volatile i32, ptr %state.i75, align 4
  %118 = and i32 %117, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %118)
  %tobool3.not.i = icmp eq i32 %118, 0
  br i1 %tobool3.not.i, label %if.then.i96, label %land.lhs.true.i.cleanup_crit_edge

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i96:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %119 = load ptr, ptr @hclge_wq, align 4
  %service_task.i = getelementptr inbounds %struct.hclge_dev, ptr %hdev, i32 0, i32 48
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %119, ptr noundef %service_task.i, i32 noundef 0) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then.i96, %land.lhs.true.i.cleanup_crit_edge, %if.then12.cleanup_crit_edge, %hclge_fd_inc_rule_cnt.exit.cleanup_crit_edge, %do.end, %if.end.i57, %if.then.i.i43.i, %hlist_del.exit.i41.i.cleanup_crit_edge, %if.then.i.i.i, %hlist_del.exit.i.i.cleanup_crit_edge, %sw.bb.i, %hclge_sync_fd_user_def_cfg.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_zero_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_basic(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_eth_addrs(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_vlan(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_control(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_ipv4_addrs(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_ipv6_addrs(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_ports(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @ethtool_convert_legacy_u32_to_link_mode(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hnae3_unregister_ae_algo_prepare(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @hnae3_unregister_ae_algo(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umin.i16(i16, i16) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umax.i16(i16, i16) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #5

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 803)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 803)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { mustprogress nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { nounwind readonly }
attributes #15 = { argmemonly nofree nounwind readonly willreturn }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { nounwind allocsize(0) }
attributes #20 = { cold nounwind }
attributes #21 = { nounwind allocsize(2) }
attributes #22 = { nobuiltin nounwind }

!llvm.asan.globals = !{!0, !2, !3, !4, !5, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !37, !39, !40, !41, !42, !44, !45, !46, !47, !49, !50, !52, !53, !54, !55, !57, !58, !59, !60, !62, !63, !64, !66, !67, !68, !69, !71, !72, !73, !74, !76, !77, !78, !80, !81, !82, !84, !85, !86, !87, !89, !90, !91, !93, !94, !95, !96, !98, !100, !102, !103, !105, !107, !109, !110, !111, !112, !114, !116, !117, !118, !119, !121, !122, !123, !124, !126, !127, !128, !129, !131, !132, !133, !134, !136, !137, !138, !139, !141, !142, !143, !144, !146, !147, !148, !149, !151, !152, !153, !154, !156, !157, !158, !160, !162, !163, !164, !165, !167, !168, !169, !170, !172, !174, !175, !176, !177, !179, !180, !181, !182, !184, !185, !186, !188, !189, !191, !192, !193, !195, !196, !198, !199, !200, !202, !203, !204, !206, !207, !208, !209, !211, !212, !213, !214, !216, !217, !218, !219, !221, !222, !223, !225, !226, !227, !228, !230, !231, !232, !233, !235, !236, !237, !238, !240, !241, !242, !243, !245, !246, !247, !248, !249, !251, !252, !253, !255, !256, !257, !259, !260, !261, !262, !264, !265, !266, !268, !269, !270, !271, !273, !274, !275, !276, !278, !279, !280, !281, !283, !284, !285, !286, !288, !289, !290, !291, !293, !294, !295, !296, !298, !299, !300, !302, !303, !304, !305, !307, !308, !309, !311, !312, !313, !315, !316, !317, !318, !320, !321, !322, !323, !325, !326, !327, !328, !330, !331, !332, !333, !335, !337, !338, !339, !341, !343, !345, !346, !348, !349, !351, !352, !353, !354, !356, !357, !358, !360, !361, !362, !364, !365, !366, !368, !369, !370, !372, !373, !374, !376, !377, !378, !380, !381, !382, !384, !385, !386, !388, !389, !390, !392, !393, !394, !396, !397, !398, !400, !401, !403, !404, !405, !406, !408, !409, !410, !411, !413, !415, !417, !419, !420, !421, !422, !424, !425, !426, !428, !429, !430, !432, !433, !434, !436, !437, !438, !440, !441, !442, !443, !445, !446, !447, !448, !450, !451, !452, !453, !455, !456, !457, !458, !460, !461, !462, !463, !465, !466, !467, !469, !470, !471, !472, !474, !475, !476, !478, !479, !480, !481, !483, !484, !485, !486, !488, !489, !490, !491, !493, !494, !495, !496, !498, !499, !500, !501, !503, !504, !505, !507, !509, !510, !511, !512, !514, !515, !516, !517, !519, !520, !521, !522, !524, !525, !526, !528, !529, !530, !532, !533, !534, !535, !537, !538, !539, !540, !542, !543, !545, !546, !547, !549, !550, !551, !552, !554, !555, !556, !557, !559, !560, !561, !562, !564, !565, !566, !567, !569, !570, !571, !572, !574, !575, !576, !577, !579, !580, !581, !583, !584, !585, !586, !588, !589, !590, !591, !593, !594, !595, !596, !598, !599, !600, !602, !603, !604, !605, !607, !608, !609, !611, !612, !613, !614, !616, !617, !618, !620, !621, !622, !624, !625, !626, !627, !629, !630, !631, !632, !634, !635, !636, !638, !639, !640, !641, !643, !644, !645, !646, !648, !649, !650, !651, !653, !654, !655, !657, !658, !659, !661, !662, !663, !665, !667, !668, !669, !670, !672, !673, !674, !675, !677, !678, !679, !680, !682, !683, !684, !685, !687, !688, !689, !690, !692, !693, !694, !695, !697, !698, !699, !700, !702, !703, !704, !705, !707, !708, !709, !710, !712, !713, !714, !716, !717, !718, !719, !721, !722, !723, !725, !726, !727, !728, !730, !731, !732, !734, !735, !736, !737, !739, !740, !741, !743, !744, !745, !746, !748, !749, !750, !752, !753, !755, !756, !757, !759, !760, !762, !763, !765, !766, !767, !769, !770, !772, !773, !774, !776, !777, !779, !780, !781, !783, !784, !785, !787, !788, !789, !791, !792, !793, !794, !795, !796, !798, !799, !800, !802, !803, !804, !805, !807, !808, !809, !811, !812, !813, !814, !816, !817, !818, !819, !821, !822, !823, !825, !826, !827, !828, !830, !831, !832, !834, !835, !836, !837, !839, !840, !841, !843, !844, !845, !847, !848, !849, !851, !852, !853, !854, !856, !857, !858, !859, !861, !862, !863, !865, !866, !867, !869, !870, !871, !873, !874, !875, !877, !878, !879, !881, !882, !883, !884, !886, !887, !888, !889, !891, !892, !893, !894, !896, !897, !898, !899, !901, !902, !903, !904, !906, !907, !908, !909, !911, !912, !913, !914, !916, !917, !918, !920, !922, !924, !925, !926, !927, !929, !930, !931, !933, !934, !935, !936, !938, !939, !940, !942, !943, !944, !945, !947, !948, !949, !951, !953, !954, !955, !956, !958, !959, !960, !961, !963, !964, !965, !966, !968, !969, !970, !971, !973, !974, !975, !976, !977, !978, !980, !981, !982, !983, !985, !986, !987, !988, !990, !991, !992, !993, !995, !996, !997, !998, !1000, !1001, !1002, !1004, !1005, !1006, !1008, !1009, !1010, !1012, !1013, !1014, !1016, !1017, !1018, !1020, !1021, !1022, !1024, !1025, !1026, !1028, !1029, !1030, !1032, !1033, !1034, !1036, !1037, !1038, !1039, !1040, !1042, !1043, !1044, !1045, !1046, !1048, !1049, !1050, !1052, !1053, !1054, !1056, !1057, !1058, !1060, !1061, !1062, !1063, !1065, !1066, !1067, !1068, !1070, !1071, !1072, !1073, !1075, !1076, !1077, !1078, !1080, !1081, !1082, !1084, !1085, !1086, !1087, !1089, !1090, !1091, !1092, !1094, !1095, !1096, !1097, !1099, !1100, !1101, !1103, !1104, !1105, !1106, !1108, !1109, !1110, !1112, !1113, !1114, !1115, !1117, !1118, !1119, !1121, !1122, !1123, !1124, !1126, !1127, !1128, !1130, !1131, !1132, !1134, !1135, !1136, !1138, !1139, !1141, !1143, !1145, !1146, !1147, !1148, !1150, !1151, !1152, !1154, !1155, !1156, !1158, !1159, !1160, !1162, !1163, !1164, !1165, !1167, !1169, !1171, !1173, !1175, !1176, !1177, !1178, !1180, !1181, !1182, !1183, !1185, !1186, !1187, !1188, !1190, !1191, !1192, !1194, !1195, !1196, !1197, !1199, !1201, !1202, !1203, !1204, !1206, !1208, !1209, !1210, !1212, !1213, !1214, !1216, !1217, !1218, !1220, !1221, !1222, !1223, !1225, !1226, !1227, !1228, !1230, !1231, !1232, !1233, !1235, !1236, !1237, !1238, !1240, !1241, !1242, !1243, !1245, !1246, !1247, !1249, !1250, !1251, !1252, !1254, !1255, !1256, !1257, !1259, !1260, !1261, !1262, !1264, !1265, !1266, !1268, !1269, !1270, !1272, !1273, !1274, !1275, !1277, !1278, !1279, !1280, !1282, !1283, !1284, !1286, !1287, !1288, !1289, !1291, !1292, !1293, !1295, !1296, !1297, !1299, !1300, !1301, !1303, !1304, !1305, !1306, !1308, !1309, !1310, !1312, !1313, !1314, !1316, !1317, !1318, !1320, !1321, !1322, !1323, !1325, !1326, !1327, !1329, !1330, !1331, !1333, !1334, !1335, !1336, !1338, !1339, !1340, !1342, !1343, !1344, !1345, !1347, !1348, !1349, !1350, !1352, !1353, !1354, !1355, !1357, !1358, !1359, !1360, !1362, !1363, !1364, !1365, !1367, !1368, !1369, !1370, !1372, !1373, !1374, !1376, !1377, !1378, !1379, !1381, !1382, !1383, !1384, !1386, !1387, !1388, !1390, !1391, !1392, !1394, !1395, !1396, !1397, !1399, !1400, !1401, !1402, !1404, !1405, !1406, !1407, !1409, !1410, !1411, !1412, !1414, !1415, !1416, !1418, !1419, !1420, !1422, !1423, !1424, !1425, !1427, !1428, !1429, !1430, !1432, !1433, !1434, !1435, !1437, !1438, !1439, !1440}
!llvm.named.register.sp = !{!1442}
!llvm.module.flags = !{!1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450}
!llvm.ident = !{!1451}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2433, i32 3}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.2, !1, !"<string literal>", i1 false, i1 false}
!4 = !{ptr @.str.3, !1, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @.str.4, !1, !"<string literal>", i1 false, i1 false}
!6 = !{ptr @hclge_buffer_alloc._entry, !1, !"_entry", i1 false, i1 false}
!7 = !{ptr @hclge_buffer_alloc._entry_ptr, !1, !"_entry_ptr", i1 false, i1 false}
!8 = !{ptr @.str.6, !9, !"<string literal>", i1 false, i1 false}
!9 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2440, i32 3}
!10 = !{ptr @hclge_buffer_alloc._entry.5, !9, !"_entry", i1 false, i1 false}
!11 = !{ptr @hclge_buffer_alloc._entry_ptr.7, !9, !"_entry_ptr", i1 false, i1 false}
!12 = !{ptr @.str.9, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2447, i32 3}
!14 = !{ptr @hclge_buffer_alloc._entry.8, !13, !"_entry", i1 false, i1 false}
!15 = !{ptr @hclge_buffer_alloc._entry_ptr.10, !13, !"_entry_ptr", i1 false, i1 false}
!16 = !{ptr @.str.12, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2455, i32 3}
!18 = !{ptr @hclge_buffer_alloc._entry.11, !17, !"_entry", i1 false, i1 false}
!19 = !{ptr @hclge_buffer_alloc._entry_ptr.13, !17, !"_entry_ptr", i1 false, i1 false}
!20 = !{ptr @.str.15, !21, !"<string literal>", i1 false, i1 false}
!21 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2463, i32 4}
!22 = !{ptr @hclge_buffer_alloc._entry.14, !21, !"_entry", i1 false, i1 false}
!23 = !{ptr @hclge_buffer_alloc._entry_ptr.16, !21, !"_entry_ptr", i1 false, i1 false}
!24 = !{ptr @.str.18, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2471, i32 4}
!26 = !{ptr @hclge_buffer_alloc._entry.17, !25, !"_entry", i1 false, i1 false}
!27 = !{ptr @hclge_buffer_alloc._entry_ptr.19, !25, !"_entry_ptr", i1 false, i1 false}
!28 = !{ptr @.str.21, !29, !"<string literal>", i1 false, i1 false}
!29 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2480, i32 3}
!30 = !{ptr @hclge_buffer_alloc._entry.20, !29, !"_entry", i1 false, i1 false}
!31 = !{ptr @hclge_buffer_alloc._entry_ptr.22, !29, !"_entry_ptr", i1 false, i1 false}
!32 = !{ptr @.str.23, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3609, i32 3}
!34 = !{ptr @.str.24, !33, !"<string literal>", i1 false, i1 false}
!35 = !{ptr @hclge_notify_client._entry, !33, !"_entry", i1 false, i1 false}
!36 = !{ptr @hclge_notify_client._entry_ptr, !33, !"_entry_ptr", i1 false, i1 false}
!37 = !{ptr @.str.25, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3827, i32 3}
!39 = !{ptr @.str.26, !38, !"<string literal>", i1 false, i1 false}
!40 = !{ptr @hclge_func_reset_cmd._entry, !38, !"_entry", i1 false, i1 false}
!41 = !{ptr @hclge_func_reset_cmd._entry_ptr, !38, !"_entry_ptr", i1 false, i1 false}
!42 = !{ptr @.str.27, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4806, i32 5}
!44 = !{ptr @.str.28, !43, !"<string literal>", i1 false, i1 false}
!45 = !{ptr @hclge_bind_ring_with_vector._entry, !43, !"_entry", i1 false, i1 false}
!46 = !{ptr @hclge_bind_ring_with_vector._entry_ptr, !43, !"_entry_ptr", i1 false, i1 false}
!47 = !{ptr @hclge_bind_ring_with_vector._entry.29, !48, !"_entry", i1 false, i1 false}
!48 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4832, i32 4}
!49 = !{ptr @hclge_bind_ring_with_vector._entry_ptr.30, !48, !"_entry_ptr", i1 false, i1 false}
!50 = !{ptr @.str.31, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8307, i32 3}
!52 = !{ptr @.str.32, !51, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @hclge_update_mac_list._entry, !51, !"_entry", i1 false, i1 false}
!54 = !{ptr @hclge_update_mac_list._entry_ptr, !51, !"_entry_ptr", i1 false, i1 false}
!55 = !{ptr @.str.33, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8354, i32 3}
!57 = !{ptr @.str.34, !56, !"<string literal>", i1 false, i1 false}
!58 = !{ptr @hclge_add_uc_addr_common._entry, !56, !"_entry", i1 false, i1 false}
!59 = !{ptr @hclge_add_uc_addr_common._entry_ptr, !56, !"_entry_ptr", i1 false, i1 false}
!60 = !{ptr @.str.36, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8388, i32 4}
!62 = !{ptr @hclge_add_uc_addr_common._entry.35, !61, !"_entry", i1 false, i1 false}
!63 = !{ptr @hclge_add_uc_addr_common._entry_ptr.37, !61, !"_entry_ptr", i1 false, i1 false}
!64 = !{ptr @.str.38, !65, !"<string literal>", i1 false, i1 false}
!65 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8423, i32 3}
!66 = !{ptr @.str.39, !65, !"<string literal>", i1 false, i1 false}
!67 = !{ptr @.str.40, !65, !"<string literal>", i1 false, i1 false}
!68 = !{ptr @hclge_rm_uc_addr_common.__UNIQUE_ID_ddebug540, !65, !"__UNIQUE_ID_ddebug540", i1 false, i1 false}
!69 = !{ptr @.str.41, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8465, i32 3}
!71 = !{ptr @.str.42, !70, !"<string literal>", i1 false, i1 false}
!72 = !{ptr @hclge_add_mc_addr_common._entry, !70, !"_entry", i1 false, i1 false}
!73 = !{ptr @hclge_add_mc_addr_common._entry_ptr, !70, !"_entry_ptr", i1 false, i1 false}
!74 = !{ptr @.str.44, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8501, i32 3}
!76 = !{ptr @hclge_add_mc_addr_common._entry.43, !75, !"_entry", i1 false, i1 false}
!77 = !{ptr @hclge_add_mc_addr_common._entry_ptr.45, !75, !"_entry_ptr", i1 false, i1 false}
!78 = !{ptr @.str.46, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8528, i32 3}
!80 = !{ptr @.str.47, !79, !"<string literal>", i1 false, i1 false}
!81 = !{ptr @hclge_rm_mc_addr_common.__UNIQUE_ID_ddebug541, !79, !"__UNIQUE_ID_ddebug541", i1 false, i1 false}
!82 = !{ptr @.str.48, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10390, i32 3}
!84 = !{ptr @.str.49, !83, !"<string literal>", i1 false, i1 false}
!85 = !{ptr @hclge_set_vport_mtu._entry, !83, !"_entry", i1 false, i1 false}
!86 = !{ptr @hclge_set_vport_mtu._entry_ptr, !83, !"_entry_ptr", i1 false, i1 false}
!87 = !{ptr @.str.51, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10400, i32 3}
!89 = !{ptr @hclge_set_vport_mtu._entry.50, !88, !"_entry", i1 false, i1 false}
!90 = !{ptr @hclge_set_vport_mtu._entry_ptr.52, !88, !"_entry_ptr", i1 false, i1 false}
!91 = !{ptr @.str.53, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10573, i32 4}
!93 = !{ptr @.str.54, !92, !"<string literal>", i1 false, i1 false}
!94 = !{ptr @hclge_reset_tqp._entry, !92, !"_entry", i1 false, i1 false}
!95 = !{ptr @hclge_reset_tqp._entry_ptr, !92, !"_entry_ptr", i1 false, i1 false}
!96 = !{ptr @__initcall__kmod_hclge__554_12788_hclge_init6, !97, !"__initcall__kmod_hclge__554_12788_hclge_init6", i1 false, i1 false}
!97 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12788, i32 1}
!98 = !{ptr @__exitcall_hclge_exit, !99, !"__exitcall_hclge_exit", i1 false, i1 false}
!99 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12789, i32 1}
!100 = !{ptr @__UNIQUE_ID_file555, !101, !"__UNIQUE_ID_file555", i1 false, i1 false}
!101 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12791, i32 1}
!102 = !{ptr @__UNIQUE_ID_license556, !101, !"__UNIQUE_ID_license556", i1 false, i1 false}
!103 = !{ptr @__UNIQUE_ID_author557, !104, !"__UNIQUE_ID_author557", i1 false, i1 false}
!104 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12792, i32 1}
!105 = !{ptr @__UNIQUE_ID_description558, !106, !"__UNIQUE_ID_description558", i1 false, i1 false}
!106 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12793, i32 1}
!107 = !{ptr @__UNIQUE_ID_version559, !108, !"__UNIQUE_ID_version559", i1 false, i1 false}
!108 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12794, i32 1}
!109 = !{ptr @.str.55, !108, !"<string literal>", i1 false, i1 false}
!110 = !{ptr @.str.56, !108, !"<string literal>", i1 false, i1 false}
!111 = !{ptr @__modver_attr, !108, !"__modver_attr", i1 false, i1 false}
!112 = !{ptr @hclge_wq, !113, !"hclge_wq", i1 false, i1 false}
!113 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 77, i32 33}
!114 = !{ptr @.str.57, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 502, i32 3}
!116 = !{ptr @.str.58, !115, !"<string literal>", i1 false, i1 false}
!117 = !{ptr @hclge_mac_update_stats_defective._entry, !115, !"_entry", i1 false, i1 false}
!118 = !{ptr @hclge_mac_update_stats_defective._entry_ptr, !115, !"_entry_ptr", i1 false, i1 false}
!119 = !{ptr @.str.59, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1926, i32 3}
!121 = !{ptr @.str.60, !120, !"<string literal>", i1 false, i1 false}
!122 = !{ptr @hclge_tx_buffer_alloc._entry, !120, !"_entry", i1 false, i1 false}
!123 = !{ptr @hclge_tx_buffer_alloc._entry_ptr, !120, !"_entry_ptr", i1 false, i1 false}
!124 = !{ptr @.str.61, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1914, i32 3}
!126 = !{ptr @.str.62, !125, !"<string literal>", i1 false, i1 false}
!127 = !{ptr @hclge_cmd_alloc_tx_buff._entry, !125, !"_entry", i1 false, i1 false}
!128 = !{ptr @hclge_cmd_alloc_tx_buff._entry_ptr, !125, !"_entry_ptr", i1 false, i1 false}
!129 = !{ptr @.str.63, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2304, i32 3}
!131 = !{ptr @.str.64, !130, !"<string literal>", i1 false, i1 false}
!132 = !{ptr @hclge_rx_priv_buf_alloc._entry, !130, !"_entry", i1 false, i1 false}
!133 = !{ptr @hclge_rx_priv_buf_alloc._entry_ptr, !130, !"_entry_ptr", i1 false, i1 false}
!134 = !{ptr @.str.65, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2348, i32 3}
!136 = !{ptr @.str.66, !135, !"<string literal>", i1 false, i1 false}
!137 = !{ptr @hclge_rx_priv_wl_config._entry, !135, !"_entry", i1 false, i1 false}
!138 = !{ptr @hclge_rx_priv_wl_config._entry_ptr, !135, !"_entry_ptr", i1 false, i1 false}
!139 = !{ptr @.str.67, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2392, i32 3}
!141 = !{ptr @.str.68, !140, !"<string literal>", i1 false, i1 false}
!142 = !{ptr @hclge_common_thrd_config._entry, !140, !"_entry", i1 false, i1 false}
!143 = !{ptr @hclge_common_thrd_config._entry_ptr, !140, !"_entry_ptr", i1 false, i1 false}
!144 = !{ptr @.str.69, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2416, i32 3}
!146 = !{ptr @.str.70, !145, !"<string literal>", i1 false, i1 false}
!147 = !{ptr @hclge_common_wl_config._entry, !145, !"_entry", i1 false, i1 false}
!148 = !{ptr @hclge_common_wl_config._entry_ptr, !145, !"_entry_ptr", i1 false, i1 false}
!149 = !{ptr @.str.71, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2606, i32 3}
!151 = !{ptr @.str.72, !150, !"<string literal>", i1 false, i1 false}
!152 = !{ptr @hclge_cfg_mac_speed_dup_hw._entry, !150, !"_entry", i1 false, i1 false}
!153 = !{ptr @hclge_cfg_mac_speed_dup_hw._entry_ptr, !150, !"_entry_ptr", i1 false, i1 false}
!154 = !{ptr @.str.74, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2617, i32 3}
!156 = !{ptr @hclge_cfg_mac_speed_dup_hw._entry.73, !155, !"_entry", i1 false, i1 false}
!157 = !{ptr @hclge_cfg_mac_speed_dup_hw._entry_ptr.75, !155, !"_entry_ptr", i1 false, i1 false}
!158 = !{ptr @hclge_mac_speed_map_to_fw, !159, !"hclge_mac_speed_map_to_fw", i1 false, i1 false}
!159 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2563, i32 35}
!160 = !{ptr @.str.76, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4720, i32 4}
!162 = !{ptr @.str.77, !161, !"<string literal>", i1 false, i1 false}
!163 = !{ptr @hclge_init_rss_tc_mode._entry, !161, !"_entry", i1 false, i1 false}
!164 = !{ptr @hclge_init_rss_tc_mode._entry_ptr, !161, !"_entry_ptr", i1 false, i1 false}
!165 = !{ptr @.str.78, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4922, i32 3}
!167 = !{ptr @.str.79, !166, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @hclge_cmd_set_promisc_mode._entry, !166, !"_entry", i1 false, i1 false}
!169 = !{ptr @hclge_cmd_set_promisc_mode._entry_ptr, !166, !"_entry_ptr", i1 false, i1 false}
!170 = !{ptr @.str.80, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../drivers/net/ethernet/hisilicon/hns3/hnae3.h", i32 872, i32 55}
!172 = !{ptr @.str.81, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8068, i32 3}
!174 = !{ptr @.str.82, !173, !"<string literal>", i1 false, i1 false}
!175 = !{ptr @hclge_lookup_mac_vlan_tbl._entry, !173, !"_entry", i1 false, i1 false}
!176 = !{ptr @hclge_lookup_mac_vlan_tbl._entry_ptr, !173, !"_entry_ptr", i1 false, i1 false}
!177 = !{ptr @.str.83, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7898, i32 3}
!179 = !{ptr @.str.84, !178, !"<string literal>", i1 false, i1 false}
!180 = !{ptr @hclge_get_mac_vlan_cmd_status._entry, !178, !"_entry", i1 false, i1 false}
!181 = !{ptr @hclge_get_mac_vlan_cmd_status._entry_ptr, !178, !"_entry_ptr", i1 false, i1 false}
!182 = !{ptr @.str.86, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7911, i32 3}
!184 = !{ptr @hclge_get_mac_vlan_cmd_status._entry.85, !183, !"_entry", i1 false, i1 false}
!185 = !{ptr @hclge_get_mac_vlan_cmd_status._entry_ptr.87, !183, !"_entry_ptr", i1 false, i1 false}
!186 = !{ptr @.str.88, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7919, i32 4}
!188 = !{ptr @hclge_get_mac_vlan_cmd_status.__UNIQUE_ID_ddebug538, !187, !"__UNIQUE_ID_ddebug538", i1 false, i1 false}
!189 = !{ptr @.str.90, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7924, i32 3}
!191 = !{ptr @hclge_get_mac_vlan_cmd_status._entry.89, !190, !"_entry", i1 false, i1 false}
!192 = !{ptr @hclge_get_mac_vlan_cmd_status._entry_ptr.91, !190, !"_entry_ptr", i1 false, i1 false}
!193 = !{ptr @.str.92, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7932, i32 4}
!195 = !{ptr @hclge_get_mac_vlan_cmd_status.__UNIQUE_ID_ddebug539, !194, !"__UNIQUE_ID_ddebug539", i1 false, i1 false}
!196 = !{ptr @.str.94, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7937, i32 3}
!198 = !{ptr @hclge_get_mac_vlan_cmd_status._entry.93, !197, !"_entry", i1 false, i1 false}
!199 = !{ptr @hclge_get_mac_vlan_cmd_status._entry_ptr.95, !197, !"_entry_ptr", i1 false, i1 false}
!200 = !{ptr @.str.97, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7943, i32 2}
!202 = !{ptr @hclge_get_mac_vlan_cmd_status._entry.96, !201, !"_entry", i1 false, i1 false}
!203 = !{ptr @hclge_get_mac_vlan_cmd_status._entry_ptr.98, !201, !"_entry_ptr", i1 false, i1 false}
!204 = !{ptr @.str.99, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8124, i32 3}
!206 = !{ptr @.str.100, !205, !"<string literal>", i1 false, i1 false}
!207 = !{ptr @hclge_add_mac_vlan_tbl._entry, !205, !"_entry", i1 false, i1 false}
!208 = !{ptr @hclge_add_mac_vlan_tbl._entry_ptr, !205, !"_entry_ptr", i1 false, i1 false}
!209 = !{ptr @.str.101, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8025, i32 3}
!211 = !{ptr @.str.102, !210, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @hclge_remove_mac_vlan_tbl._entry, !210, !"_entry", i1 false, i1 false}
!213 = !{ptr @hclge_remove_mac_vlan_tbl._entry_ptr, !210, !"_entry_ptr", i1 false, i1 false}
!214 = !{ptr @.str.103, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9230, i32 3}
!216 = !{ptr @.str.104, !215, !"<string literal>", i1 false, i1 false}
!217 = !{ptr @hclge_set_vlan_filter_ctrl._entry, !215, !"_entry", i1 false, i1 false}
!218 = !{ptr @hclge_set_vlan_filter_ctrl._entry_ptr, !215, !"_entry_ptr", i1 false, i1 false}
!219 = !{ptr @.str.106, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9242, i32 3}
!221 = !{ptr @hclge_set_vlan_filter_ctrl._entry.105, !220, !"_entry", i1 false, i1 false}
!222 = !{ptr @hclge_set_vlan_filter_ctrl._entry_ptr.107, !220, !"_entry_ptr", i1 false, i1 false}
!223 = !{ptr @.str.108, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9208, i32 3}
!225 = !{ptr @.str.109, !224, !"<string literal>", i1 false, i1 false}
!226 = !{ptr @hclge_set_port_vlan_filter_bypass._entry, !224, !"_entry", i1 false, i1 false}
!227 = !{ptr @hclge_set_port_vlan_filter_bypass._entry_ptr, !224, !"_entry_ptr", i1 false, i1 false}
!228 = !{ptr @.str.110, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9530, i32 3}
!230 = !{ptr @.str.111, !229, !"<string literal>", i1 false, i1 false}
!231 = !{ptr @hclge_set_vlan_filter_hw._entry, !229, !"_entry", i1 false, i1 false}
!232 = !{ptr @hclge_set_vlan_filter_hw._entry_ptr, !229, !"_entry_ptr", i1 false, i1 false}
!233 = !{ptr @.str.112, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9446, i32 4}
!235 = !{ptr @.str.113, !234, !"<string literal>", i1 false, i1 false}
!236 = !{ptr @hclge_set_vf_vlan_common._entry, !234, !"_entry", i1 false, i1 false}
!237 = !{ptr @hclge_set_vf_vlan_common._entry_ptr, !234, !"_entry_ptr", i1 false, i1 false}
!238 = !{ptr @.str.114, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9380, i32 3}
!240 = !{ptr @.str.115, !239, !"<string literal>", i1 false, i1 false}
!241 = !{ptr @hclge_set_vf_vlan_filter_cmd._entry, !239, !"_entry", i1 false, i1 false}
!242 = !{ptr @hclge_set_vf_vlan_filter_cmd._entry_ptr, !239, !"_entry_ptr", i1 false, i1 false}
!243 = !{ptr @.str.116, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9403, i32 4}
!245 = !{ptr @.str.117, !244, !"<string literal>", i1 false, i1 false}
!246 = !{ptr @.str.118, !244, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @hclge_check_vf_vlan_cmd_status._entry, !244, !"_entry", i1 false, i1 false}
!248 = !{ptr @hclge_check_vf_vlan_cmd_status._entry_ptr, !244, !"_entry_ptr", i1 false, i1 false}
!249 = !{ptr @.str.120, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9408, i32 3}
!251 = !{ptr @hclge_check_vf_vlan_cmd_status._entry.119, !250, !"_entry", i1 false, i1 false}
!252 = !{ptr @hclge_check_vf_vlan_cmd_status._entry_ptr.121, !250, !"_entry_ptr", i1 false, i1 false}
!253 = !{ptr @.str.123, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9424, i32 3}
!255 = !{ptr @hclge_check_vf_vlan_cmd_status._entry.122, !254, !"_entry", i1 false, i1 false}
!256 = !{ptr @hclge_check_vf_vlan_cmd_status._entry_ptr.124, !254, !"_entry_ptr", i1 false, i1 false}
!257 = !{ptr @.str.125, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9498, i32 3}
!259 = !{ptr @.str.126, !258, !"<string literal>", i1 false, i1 false}
!260 = !{ptr @hclge_need_update_port_vlan._entry, !258, !"_entry", i1 false, i1 false}
!261 = !{ptr @hclge_need_update_port_vlan._entry_ptr, !258, !"_entry_ptr", i1 false, i1 false}
!262 = !{ptr @.str.128, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9506, i32 3}
!264 = !{ptr @hclge_need_update_port_vlan._entry.127, !263, !"_entry", i1 false, i1 false}
!265 = !{ptr @hclge_need_update_port_vlan._entry_ptr.129, !263, !"_entry_ptr", i1 false, i1 false}
!266 = !{ptr @.str.130, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9484, i32 3}
!268 = !{ptr @.str.131, !267, !"<string literal>", i1 false, i1 false}
!269 = !{ptr @hclge_set_port_vlan_filter._entry, !267, !"_entry", i1 false, i1 false}
!270 = !{ptr @hclge_set_port_vlan_filter._entry_ptr, !267, !"_entry_ptr", i1 false, i1 false}
!271 = !{ptr @.str.132, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9627, i32 3}
!273 = !{ptr @.str.133, !272, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @hclge_set_vlan_rx_offload_cfg._entry, !272, !"_entry", i1 false, i1 false}
!275 = !{ptr @hclge_set_vlan_rx_offload_cfg._entry_ptr, !272, !"_entry_ptr", i1 false, i1 false}
!276 = !{ptr @.str.134, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9587, i32 3}
!278 = !{ptr @.str.135, !277, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @hclge_set_vlan_tx_offload_cfg._entry, !277, !"_entry", i1 false, i1 false}
!280 = !{ptr @hclge_set_vlan_tx_offload_cfg._entry_ptr, !277, !"_entry_ptr", i1 false, i1 false}
!281 = !{ptr @.str.136, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10083, i32 3}
!283 = !{ptr @.str.137, !282, !"<string literal>", i1 false, i1 false}
!284 = !{ptr @hclge_modify_port_base_vlan_tag._entry, !282, !"_entry", i1 false, i1 false}
!285 = !{ptr @hclge_modify_port_base_vlan_tag._entry_ptr, !282, !"_entry_ptr", i1 false, i1 false}
!286 = !{ptr @.str.138, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9839, i32 5}
!288 = !{ptr @.str.139, !287, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @hclge_add_vport_all_vlan_table._entry, !287, !"_entry", i1 false, i1 false}
!290 = !{ptr @hclge_add_vport_all_vlan_table._entry_ptr, !287, !"_entry_ptr", i1 false, i1 false}
!291 = !{ptr @.str.140, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10542, i32 3}
!293 = !{ptr @.str.141, !292, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @hclge_reset_rcb._entry, !292, !"_entry", i1 false, i1 false}
!295 = !{ptr @hclge_reset_rcb._entry_ptr, !292, !"_entry_ptr", i1 false, i1 false}
!296 = !{ptr @.str.143, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10552, i32 3}
!298 = !{ptr @hclge_reset_rcb._entry.142, !297, !"_entry", i1 false, i1 false}
!299 = !{ptr @hclge_reset_rcb._entry_ptr.144, !297, !"_entry_ptr", i1 false, i1 false}
!300 = !{ptr @.str.145, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10482, i32 4}
!302 = !{ptr @.str.146, !301, !"<string literal>", i1 false, i1 false}
!303 = !{ptr @hclge_reset_tqp_cmd._entry, !301, !"_entry", i1 false, i1 false}
!304 = !{ptr @hclge_reset_tqp_cmd._entry_ptr, !301, !"_entry_ptr", i1 false, i1 false}
!305 = !{ptr @.str.148, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10502, i32 4}
!307 = !{ptr @hclge_reset_tqp_cmd._entry.147, !306, !"_entry", i1 false, i1 false}
!308 = !{ptr @hclge_reset_tqp_cmd._entry_ptr.149, !306, !"_entry_ptr", i1 false, i1 false}
!309 = !{ptr @.str.151, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10509, i32 4}
!311 = !{ptr @hclge_reset_tqp_cmd._entry.150, !310, !"_entry", i1 false, i1 false}
!312 = !{ptr @hclge_reset_tqp_cmd._entry_ptr.152, !310, !"_entry_ptr", i1 false, i1 false}
!313 = !{ptr @.str.153, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10425, i32 3}
!315 = !{ptr @.str.154, !314, !"<string literal>", i1 false, i1 false}
!316 = !{ptr @hclge_reset_tqp_cmd_send._entry, !314, !"_entry", i1 false, i1 false}
!317 = !{ptr @hclge_reset_tqp_cmd_send._entry_ptr, !314, !"_entry_ptr", i1 false, i1 false}
!318 = !{ptr @.str.155, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10447, i32 3}
!320 = !{ptr @.str.156, !319, !"<string literal>", i1 false, i1 false}
!321 = !{ptr @hclge_get_reset_status._entry, !319, !"_entry", i1 false, i1 false}
!322 = !{ptr @hclge_get_reset_status._entry_ptr, !319, !"_entry_ptr", i1 false, i1 false}
!323 = !{ptr @.str.157, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10609, i32 3}
!325 = !{ptr @.str.158, !324, !"<string literal>", i1 false, i1 false}
!326 = !{ptr @hclge_cfg_pauseparam._entry, !324, !"_entry", i1 false, i1 false}
!327 = !{ptr @hclge_cfg_pauseparam._entry_ptr, !324, !"_entry_ptr", i1 false, i1 false}
!328 = !{ptr @.str.159, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12769, i32 2}
!330 = !{ptr @.str.160, !329, !"<string literal>", i1 false, i1 false}
!331 = !{ptr @hclge_init._entry, !329, !"_entry", i1 false, i1 false}
!332 = !{ptr @hclge_init._entry_ptr, !329, !"_entry_ptr", i1 false, i1 false}
!333 = !{ptr @.str.161, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12771, i32 29}
!335 = !{ptr @.str.163, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12773, i32 3}
!337 = !{ptr @hclge_init._entry.162, !336, !"_entry", i1 false, i1 false}
!338 = !{ptr @hclge_init._entry_ptr.164, !336, !"_entry_ptr", i1 false, i1 false}
!339 = !{ptr @ae_algo, !340, !"ae_algo", i1 false, i1 false}
!340 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12762, i32 29}
!341 = !{ptr @hclge_ops, !342, !"hclge_ops", i1 false, i1 false}
!342 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12659, i32 34}
!343 = !{ptr @hclge_init_ae_dev.__key, !344, !"__key", i1 false, i1 false}
!344 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11245, i32 2}
!345 = !{ptr @.str.165, !344, !"<string literal>", i1 false, i1 false}
!346 = !{ptr @hclge_init_ae_dev.__key.166, !347, !"__key", i1 false, i1 false}
!347 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11246, i32 2}
!348 = !{ptr @.str.167, !347, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @.str.168, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11278, i32 3}
!351 = !{ptr @.str.169, !350, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @hclge_init_ae_dev._entry, !350, !"_entry", i1 false, i1 false}
!353 = !{ptr @hclge_init_ae_dev._entry_ptr, !350, !"_entry_ptr", i1 false, i1 false}
!354 = !{ptr @.str.171, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11285, i32 3}
!356 = !{ptr @hclge_init_ae_dev._entry.170, !355, !"_entry", i1 false, i1 false}
!357 = !{ptr @hclge_init_ae_dev._entry_ptr.172, !355, !"_entry_ptr", i1 false, i1 false}
!358 = !{ptr @.str.174, !359, !"<string literal>", i1 false, i1 false}
!359 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11291, i32 3}
!360 = !{ptr @hclge_init_ae_dev._entry.173, !359, !"_entry", i1 false, i1 false}
!361 = !{ptr @hclge_init_ae_dev._entry_ptr.175, !359, !"_entry_ptr", i1 false, i1 false}
!362 = !{ptr @.str.177, !363, !"<string literal>", i1 false, i1 false}
!363 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11301, i32 3}
!364 = !{ptr @hclge_init_ae_dev._entry.176, !363, !"_entry", i1 false, i1 false}
!365 = !{ptr @hclge_init_ae_dev._entry_ptr.178, !363, !"_entry_ptr", i1 false, i1 false}
!366 = !{ptr @.str.180, !367, !"<string literal>", i1 false, i1 false}
!367 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11326, i32 3}
!368 = !{ptr @hclge_init_ae_dev._entry.179, !367, !"_entry", i1 false, i1 false}
!369 = !{ptr @hclge_init_ae_dev._entry_ptr.181, !367, !"_entry_ptr", i1 false, i1 false}
!370 = !{ptr @.str.183, !371, !"<string literal>", i1 false, i1 false}
!371 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11332, i32 3}
!372 = !{ptr @hclge_init_ae_dev._entry.182, !371, !"_entry", i1 false, i1 false}
!373 = !{ptr @hclge_init_ae_dev._entry_ptr.184, !371, !"_entry_ptr", i1 false, i1 false}
!374 = !{ptr @.str.186, !375, !"<string literal>", i1 false, i1 false}
!375 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11342, i32 3}
!376 = !{ptr @hclge_init_ae_dev._entry.185, !375, !"_entry", i1 false, i1 false}
!377 = !{ptr @hclge_init_ae_dev._entry_ptr.187, !375, !"_entry_ptr", i1 false, i1 false}
!378 = !{ptr @.str.189, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11348, i32 3}
!380 = !{ptr @hclge_init_ae_dev._entry.188, !379, !"_entry", i1 false, i1 false}
!381 = !{ptr @hclge_init_ae_dev._entry_ptr.190, !379, !"_entry_ptr", i1 false, i1 false}
!382 = !{ptr @.str.192, !383, !"<string literal>", i1 false, i1 false}
!383 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11355, i32 3}
!384 = !{ptr @hclge_init_ae_dev._entry.191, !383, !"_entry", i1 false, i1 false}
!385 = !{ptr @hclge_init_ae_dev._entry_ptr.193, !383, !"_entry_ptr", i1 false, i1 false}
!386 = !{ptr @.str.195, !387, !"<string literal>", i1 false, i1 false}
!387 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11361, i32 3}
!388 = !{ptr @hclge_init_ae_dev._entry.194, !387, !"_entry", i1 false, i1 false}
!389 = !{ptr @hclge_init_ae_dev._entry_ptr.196, !387, !"_entry_ptr", i1 false, i1 false}
!390 = !{ptr @.str.198, !391, !"<string literal>", i1 false, i1 false}
!391 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11367, i32 3}
!392 = !{ptr @hclge_init_ae_dev._entry.197, !391, !"_entry", i1 false, i1 false}
!393 = !{ptr @hclge_init_ae_dev._entry_ptr.199, !391, !"_entry_ptr", i1 false, i1 false}
!394 = !{ptr @.str.201, !395, !"<string literal>", i1 false, i1 false}
!395 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11373, i32 3}
!396 = !{ptr @hclge_init_ae_dev._entry.200, !395, !"_entry", i1 false, i1 false}
!397 = !{ptr @hclge_init_ae_dev._entry_ptr.202, !395, !"_entry_ptr", i1 false, i1 false}
!398 = !{ptr @hclge_init_ae_dev.__key.203, !399, !"__key", i1 false, i1 false}
!399 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11386, i32 2}
!400 = !{ptr @.str.204, !399, !"<string literal>", i1 false, i1 false}
!401 = !{ptr @hclge_init_ae_dev.__key.205, !402, !"__key", i1 false, i1 false}
!402 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11387, i32 2}
!403 = !{ptr @.str.206, !402, !"<string literal>", i1 false, i1 false}
!404 = !{ptr @hclge_init_ae_dev.__key.207, !402, !"__key", i1 false, i1 false}
!405 = !{ptr @.str.208, !402, !"<string literal>", i1 false, i1 false}
!406 = !{ptr @.str.210, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11423, i32 2}
!408 = !{ptr @.str.211, !407, !"<string literal>", i1 false, i1 false}
!409 = !{ptr @hclge_init_ae_dev._entry.209, !407, !"_entry", i1 false, i1 false}
!410 = !{ptr @hclge_init_ae_dev._entry_ptr.212, !407, !"_entry_ptr", i1 false, i1 false}
!411 = !{ptr @sema_init.__key, !412, !"__key", i1 false, i1 false}
!412 = !{!"../include/linux/semaphore.h", i32 33, i32 31}
!413 = !{ptr @.str.213, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../include/linux/semaphore.h", i32 34, i32 28}
!415 = !{ptr @.str.214, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../include/linux/semaphore.h", i32 35, i32 39}
!417 = !{ptr @.str.215, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11040, i32 3}
!419 = !{ptr @.str.216, !418, !"<string literal>", i1 false, i1 false}
!420 = !{ptr @hclge_pci_init._entry, !418, !"_entry", i1 false, i1 false}
!421 = !{ptr @hclge_pci_init._entry_ptr, !418, !"_entry_ptr", i1 false, i1 false}
!422 = !{ptr @.str.218, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11048, i32 4}
!424 = !{ptr @hclge_pci_init._entry.217, !423, !"_entry", i1 false, i1 false}
!425 = !{ptr @hclge_pci_init._entry_ptr.219, !423, !"_entry_ptr", i1 false, i1 false}
!426 = !{ptr @.str.221, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11052, i32 3}
!428 = !{ptr @hclge_pci_init._entry.220, !427, !"_entry", i1 false, i1 false}
!429 = !{ptr @hclge_pci_init._entry_ptr.222, !427, !"_entry_ptr", i1 false, i1 false}
!430 = !{ptr @.str.224, !431, !"<string literal>", i1 false, i1 false}
!431 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11057, i32 3}
!432 = !{ptr @hclge_pci_init._entry.223, !431, !"_entry", i1 false, i1 false}
!433 = !{ptr @hclge_pci_init._entry_ptr.225, !431, !"_entry_ptr", i1 false, i1 false}
!434 = !{ptr @.str.227, !435, !"<string literal>", i1 false, i1 false}
!435 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11065, i32 3}
!436 = !{ptr @hclge_pci_init._entry.226, !435, !"_entry", i1 false, i1 false}
!437 = !{ptr @hclge_pci_init._entry_ptr.228, !435, !"_entry_ptr", i1 false, i1 false}
!438 = !{ptr @.str.229, !439, !"<string literal>", i1 false, i1 false}
!439 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11025, i32 3}
!440 = !{ptr @.str.230, !439, !"<string literal>", i1 false, i1 false}
!441 = !{ptr @hclge_dev_mem_map._entry, !439, !"_entry", i1 false, i1 false}
!442 = !{ptr @hclge_dev_mem_map._entry_ptr, !439, !"_entry_ptr", i1 false, i1 false}
!443 = !{ptr @.str.231, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11207, i32 3}
!445 = !{ptr @.str.232, !444, !"<string literal>", i1 false, i1 false}
!446 = !{ptr @hclge_clear_hw_resource._entry, !444, !"_entry", i1 false, i1 false}
!447 = !{ptr @hclge_clear_hw_resource._entry_ptr, !444, !"_entry_ptr", i1 false, i1 false}
!448 = !{ptr @.str.233, !449, !"<string literal>", i1 false, i1 false}
!449 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1492, i32 3}
!450 = !{ptr @.str.234, !449, !"<string literal>", i1 false, i1 false}
!451 = !{ptr @hclge_get_cap._entry, !449, !"_entry", i1 false, i1 false}
!452 = !{ptr @hclge_get_cap._entry_ptr, !449, !"_entry_ptr", i1 false, i1 false}
!453 = !{ptr @.str.235, !454, !"<string literal>", i1 false, i1 false}
!454 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 853, i32 4}
!455 = !{ptr @.str.236, !454, !"<string literal>", i1 false, i1 false}
!456 = !{ptr @hclge_query_function_status._entry, !454, !"_entry", i1 false, i1 false}
!457 = !{ptr @hclge_query_function_status._entry_ptr, !454, !"_entry_ptr", i1 false, i1 false}
!458 = !{ptr @.str.237, !459, !"<string literal>", i1 false, i1 false}
!459 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 876, i32 3}
!460 = !{ptr @.str.238, !459, !"<string literal>", i1 false, i1 false}
!461 = !{ptr @hclge_query_pf_resource._entry, !459, !"_entry", i1 false, i1 false}
!462 = !{ptr @hclge_query_pf_resource._entry_ptr, !459, !"_entry_ptr", i1 false, i1 false}
!463 = !{ptr @.str.240, !464, !"<string literal>", i1 false, i1 false}
!464 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 904, i32 3}
!465 = !{ptr @hclge_query_pf_resource._entry.239, !464, !"_entry", i1 false, i1 false}
!466 = !{ptr @hclge_query_pf_resource._entry_ptr.241, !464, !"_entry_ptr", i1 false, i1 false}
!467 = !{ptr @.str.242, !468, !"<string literal>", i1 false, i1 false}
!468 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 589, i32 3}
!469 = !{ptr @.str.243, !468, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @hclge_mac_query_reg_num._entry, !468, !"_entry", i1 false, i1 false}
!471 = !{ptr @hclge_mac_query_reg_num._entry_ptr, !468, !"_entry_ptr", i1 false, i1 false}
!472 = !{ptr @.str.245, !473, !"<string literal>", i1 false, i1 false}
!473 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 597, i32 3}
!474 = !{ptr @hclge_mac_query_reg_num._entry.244, !473, !"_entry", i1 false, i1 false}
!475 = !{ptr @hclge_mac_query_reg_num._entry_ptr.246, !473, !"_entry_ptr", i1 false, i1 false}
!476 = !{ptr @.str.247, !477, !"<string literal>", i1 false, i1 false}
!477 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1585, i32 3}
!478 = !{ptr @.str.248, !477, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @hclge_configure._entry, !477, !"_entry", i1 false, i1 false}
!480 = !{ptr @hclge_configure._entry_ptr, !477, !"_entry_ptr", i1 false, i1 false}
!481 = !{ptr @.str.249, !482, !"<string literal>", i1 false, i1 false}
!482 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1368, i32 3}
!483 = !{ptr @.str.250, !482, !"<string literal>", i1 false, i1 false}
!484 = !{ptr @hclge_get_cfg._entry, !482, !"_entry", i1 false, i1 false}
!485 = !{ptr @hclge_get_cfg._entry_ptr, !482, !"_entry_ptr", i1 false, i1 false}
!486 = !{ptr @.str.251, !487, !"<string literal>", i1 false, i1 false}
!487 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1524, i32 3}
!488 = !{ptr @.str.252, !487, !"<string literal>", i1 false, i1 false}
!489 = !{ptr @hclge_init_tc_config._entry, !487, !"_entry", i1 false, i1 false}
!490 = !{ptr @hclge_init_tc_config._entry_ptr, !487, !"_entry_ptr", i1 false, i1 false}
!491 = !{ptr @.str.253, !492, !"<string literal>", i1 false, i1 false}
!492 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1509, i32 2}
!493 = !{ptr @.str.254, !492, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @hclge_init_kdump_kernel_config._entry, !492, !"_entry", i1 false, i1 false}
!495 = !{ptr @hclge_init_kdump_kernel_config._entry_ptr, !492, !"_entry_ptr", i1 false, i1 false}
!496 = !{ptr @.str.255, !497, !"<string literal>", i1 false, i1 false}
!497 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2522, i32 3}
!498 = !{ptr @.str.256, !497, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @hclge_init_msi._entry, !497, !"_entry", i1 false, i1 false}
!500 = !{ptr @hclge_init_msi._entry_ptr, !497, !"_entry_ptr", i1 false, i1 false}
!501 = !{ptr @.str.258, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2528, i32 3}
!503 = !{ptr @hclge_init_msi._entry.257, !502, !"_entry", i1 false, i1 false}
!504 = !{ptr @hclge_init_msi._entry_ptr.259, !502, !"_entry_ptr", i1 false, i1 false}
!505 = !{ptr @.str.260, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3575, i32 55}
!507 = !{ptr @.str.261, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3581, i32 3}
!509 = !{ptr @.str.262, !508, !"<string literal>", i1 false, i1 false}
!510 = !{ptr @hclge_misc_irq_init._entry, !508, !"_entry", i1 false, i1 false}
!511 = !{ptr @hclge_misc_irq_init._entry_ptr, !508, !"_entry_ptr", i1 false, i1 false}
!512 = !{ptr @.str.263, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3515, i32 3}
!514 = !{ptr @.str.264, !513, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @hclge_misc_irq_handle._entry, !513, !"_entry", i1 false, i1 false}
!516 = !{ptr @hclge_misc_irq_handle._entry_ptr, !513, !"_entry_ptr", i1 false, i1 false}
!517 = !{ptr @.str.265, !518, !"<string literal>", i1 false, i1 false}
!518 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3406, i32 3}
!519 = !{ptr @.str.266, !518, !"<string literal>", i1 false, i1 false}
!520 = !{ptr @hclge_check_event_cause._entry, !518, !"_entry", i1 false, i1 false}
!521 = !{ptr @hclge_check_event_cause._entry_ptr, !518, !"_entry_ptr", i1 false, i1 false}
!522 = !{ptr @.str.268, !523, !"<string literal>", i1 false, i1 false}
!523 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3415, i32 3}
!524 = !{ptr @hclge_check_event_cause._entry.267, !523, !"_entry", i1 false, i1 false}
!525 = !{ptr @hclge_check_event_cause._entry_ptr.269, !523, !"_entry_ptr", i1 false, i1 false}
!526 = !{ptr @.str.271, !527, !"<string literal>", i1 false, i1 false}
!527 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3442, i32 2}
!528 = !{ptr @hclge_check_event_cause._entry.270, !527, !"_entry", i1 false, i1 false}
!529 = !{ptr @hclge_check_event_cause._entry_ptr.272, !527, !"_entry_ptr", i1 false, i1 false}
!530 = !{ptr @.str.273, !531, !"<string literal>", i1 false, i1 false}
!531 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3534, i32 3}
!532 = !{ptr @.str.274, !531, !"<string literal>", i1 false, i1 false}
!533 = !{ptr @hclge_free_vector._entry, !531, !"_entry", i1 false, i1 false}
!534 = !{ptr @hclge_free_vector._entry_ptr, !531, !"_entry_ptr", i1 false, i1 false}
!535 = !{ptr @.str.275, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1840, i32 3}
!537 = !{ptr @.str.276, !536, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @hclge_alloc_vport._entry, !536, !"_entry", i1 false, i1 false}
!539 = !{ptr @hclge_alloc_vport._entry_ptr, !536, !"_entry_ptr", i1 false, i1 false}
!540 = !{ptr @hclge_alloc_vport.__key, !541, !"__key", i1 false, i1 false}
!541 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1871, i32 3}
!542 = !{ptr @.str.277, !541, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @.str.279, !544, !"<string literal>", i1 false, i1 false}
!544 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1878, i32 4}
!545 = !{ptr @hclge_alloc_vport._entry.278, !544, !"_entry", i1 false, i1 false}
!546 = !{ptr @hclge_alloc_vport._entry_ptr.280, !544, !"_entry_ptr", i1 false, i1 false}
!547 = !{ptr @.str.281, !548, !"<string literal>", i1 false, i1 false}
!548 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1822, i32 3}
!549 = !{ptr @.str.282, !548, !"<string literal>", i1 false, i1 false}
!550 = !{ptr @hclge_vport_setup._entry, !548, !"_entry", i1 false, i1 false}
!551 = !{ptr @hclge_vport_setup._entry_ptr, !548, !"_entry_ptr", i1 false, i1 false}
!552 = !{ptr @.str.283, !553, !"<string literal>", i1 false, i1 false}
!553 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1760, i32 3}
!554 = !{ptr @.str.284, !553, !"<string literal>", i1 false, i1 false}
!555 = !{ptr @hclge_knic_setup._entry, !553, !"_entry", i1 false, i1 false}
!556 = !{ptr @hclge_knic_setup._entry_ptr, !553, !"_entry_ptr", i1 false, i1 false}
!557 = !{ptr @.str.285, !558, !"<string literal>", i1 false, i1 false}
!558 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1704, i32 3}
!559 = !{ptr @.str.286, !558, !"<string literal>", i1 false, i1 false}
!560 = !{ptr @hclge_map_tqps_to_func._entry, !558, !"_entry", i1 false, i1 false}
!561 = !{ptr @hclge_map_tqps_to_func._entry_ptr, !558, !"_entry_ptr", i1 false, i1 false}
!562 = !{ptr @.str.287, !563, !"<string literal>", i1 false, i1 false}
!563 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8167, i32 3}
!564 = !{ptr @.str.288, !563, !"<string literal>", i1 false, i1 false}
!565 = !{ptr @hclge_init_umv_space._entry, !563, !"_entry", i1 false, i1 false}
!566 = !{ptr @hclge_init_umv_space._entry_ptr, !563, !"_entry_ptr", i1 false, i1 false}
!567 = !{ptr @.str.289, !568, !"<string literal>", i1 false, i1 false}
!568 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8147, i32 3}
!569 = !{ptr @.str.290, !568, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @hclge_set_umv_space._entry, !568, !"_entry", i1 false, i1 false}
!571 = !{ptr @hclge_set_umv_space._entry_ptr, !568, !"_entry_ptr", i1 false, i1 false}
!572 = !{ptr @.str.291, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2817, i32 3}
!574 = !{ptr @.str.292, !573, !"<string literal>", i1 false, i1 false}
!575 = !{ptr @hclge_mac_init._entry, !573, !"_entry", i1 false, i1 false}
!576 = !{ptr @hclge_mac_init._entry_ptr, !573, !"_entry_ptr", i1 false, i1 false}
!577 = !{ptr @.str.294, !578, !"<string literal>", i1 false, i1 false}
!578 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2827, i32 3}
!579 = !{ptr @hclge_mac_init._entry.293, !578, !"_entry", i1 false, i1 false}
!580 = !{ptr @hclge_mac_init._entry_ptr.295, !578, !"_entry_ptr", i1 false, i1 false}
!581 = !{ptr @.str.296, !582, !"<string literal>", i1 false, i1 false}
!582 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2670, i32 3}
!583 = !{ptr @.str.297, !582, !"<string literal>", i1 false, i1 false}
!584 = !{ptr @hclge_set_autoneg_en._entry, !582, !"_entry", i1 false, i1 false}
!585 = !{ptr @hclge_set_autoneg_en._entry_ptr, !582, !"_entry_ptr", i1 false, i1 false}
!586 = !{ptr @.str.298, !587, !"<string literal>", i1 false, i1 false}
!587 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2751, i32 3}
!588 = !{ptr @.str.299, !587, !"<string literal>", i1 false, i1 false}
!589 = !{ptr @hclge_set_fec_hw._entry, !587, !"_entry", i1 false, i1 false}
!590 = !{ptr @hclge_set_fec_hw._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!591 = !{ptr @.str.300, !592, !"<string literal>", i1 false, i1 false}
!592 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7478, i32 3}
!593 = !{ptr @.str.301, !592, !"<string literal>", i1 false, i1 false}
!594 = !{ptr @hclge_set_app_loopback._entry, !592, !"_entry", i1 false, i1 false}
!595 = !{ptr @hclge_set_app_loopback._entry_ptr, !592, !"_entry_ptr", i1 false, i1 false}
!596 = !{ptr @.str.303, !597, !"<string literal>", i1 false, i1 false}
!597 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7495, i32 3}
!598 = !{ptr @hclge_set_app_loopback._entry.302, !597, !"_entry", i1 false, i1 false}
!599 = !{ptr @hclge_set_app_loopback._entry_ptr.304, !597, !"_entry_ptr", i1 false, i1 false}
!600 = !{ptr @.str.305, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7522, i32 3}
!602 = !{ptr @.str.306, !601, !"<string literal>", i1 false, i1 false}
!603 = !{ptr @hclge_cfg_common_loopback_cmd_send._entry, !601, !"_entry", i1 false, i1 false}
!604 = !{ptr @hclge_cfg_common_loopback_cmd_send._entry_ptr, !601, !"_entry_ptr", i1 false, i1 false}
!605 = !{ptr @.str.308, !606, !"<string literal>", i1 false, i1 false}
!606 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7533, i32 3}
!607 = !{ptr @hclge_cfg_common_loopback_cmd_send._entry.307, !606, !"_entry", i1 false, i1 false}
!608 = !{ptr @hclge_cfg_common_loopback_cmd_send._entry_ptr.309, !606, !"_entry_ptr", i1 false, i1 false}
!609 = !{ptr @.str.310, !610, !"<string literal>", i1 false, i1 false}
!610 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7558, i32 4}
!611 = !{ptr @.str.311, !610, !"<string literal>", i1 false, i1 false}
!612 = !{ptr @hclge_cfg_common_loopback_wait._entry, !610, !"_entry", i1 false, i1 false}
!613 = !{ptr @hclge_cfg_common_loopback_wait._entry_ptr, !610, !"_entry_ptr", i1 false, i1 false}
!614 = !{ptr @.str.313, !615, !"<string literal>", i1 false, i1 false}
!615 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7567, i32 3}
!616 = !{ptr @hclge_cfg_common_loopback_wait._entry.312, !615, !"_entry", i1 false, i1 false}
!617 = !{ptr @hclge_cfg_common_loopback_wait._entry_ptr.314, !615, !"_entry_ptr", i1 false, i1 false}
!618 = !{ptr @.str.316, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7570, i32 3}
!620 = !{ptr @hclge_cfg_common_loopback_wait._entry.315, !619, !"_entry", i1 false, i1 false}
!621 = !{ptr @hclge_cfg_common_loopback_wait._entry_ptr.317, !619, !"_entry_ptr", i1 false, i1 false}
!622 = !{ptr @.str.318, !623, !"<string literal>", i1 false, i1 false}
!623 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 1638, i32 3}
!624 = !{ptr @.str.319, !623, !"<string literal>", i1 false, i1 false}
!625 = !{ptr @hclge_config_gro._entry, !623, !"_entry", i1 false, i1 false}
!626 = !{ptr @hclge_config_gro._entry_ptr, !623, !"_entry_ptr", i1 false, i1 false}
!627 = !{ptr @.str.320, !628, !"<string literal>", i1 false, i1 false}
!628 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9709, i32 3}
!629 = !{ptr @.str.321, !628, !"<string literal>", i1 false, i1 false}
!630 = !{ptr @hclge_set_vlan_protocol_type._entry, !628, !"_entry", i1 false, i1 false}
!631 = !{ptr @hclge_set_vlan_protocol_type._entry_ptr, !628, !"_entry_ptr", i1 false, i1 false}
!632 = !{ptr @.str.323, !633, !"<string literal>", i1 false, i1 false}
!633 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9723, i32 3}
!634 = !{ptr @hclge_set_vlan_protocol_type._entry.322, !633, !"_entry", i1 false, i1 false}
!635 = !{ptr @hclge_set_vlan_protocol_type._entry_ptr.324, !633, !"_entry_ptr", i1 false, i1 false}
!636 = !{ptr @.str.325, !637, !"<string literal>", i1 false, i1 false}
!637 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9032, i32 4}
!638 = !{ptr @.str.326, !637, !"<string literal>", i1 false, i1 false}
!639 = !{ptr @init_mgr_tbl._entry, !637, !"_entry", i1 false, i1 false}
!640 = !{ptr @init_mgr_tbl._entry_ptr, !637, !"_entry_ptr", i1 false, i1 false}
!641 = !{ptr @.str.327, !642, !"<string literal>", i1 false, i1 false}
!642 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9012, i32 3}
!643 = !{ptr @.str.328, !642, !"<string literal>", i1 false, i1 false}
!644 = !{ptr @hclge_add_mgr_tbl._entry, !642, !"_entry", i1 false, i1 false}
!645 = !{ptr @hclge_add_mgr_tbl._entry_ptr, !642, !"_entry_ptr", i1 false, i1 false}
!646 = !{ptr @.str.329, !647, !"<string literal>", i1 false, i1 false}
!647 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8935, i32 3}
!648 = !{ptr @.str.330, !647, !"<string literal>", i1 false, i1 false}
!649 = !{ptr @hclge_get_mac_ethertype_cmd_status._entry, !647, !"_entry", i1 false, i1 false}
!650 = !{ptr @hclge_get_mac_ethertype_cmd_status._entry_ptr, !647, !"_entry_ptr", i1 false, i1 false}
!651 = !{ptr @.str.332, !652, !"<string literal>", i1 false, i1 false}
!652 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8947, i32 3}
!653 = !{ptr @hclge_get_mac_ethertype_cmd_status._entry.331, !652, !"_entry", i1 false, i1 false}
!654 = !{ptr @hclge_get_mac_ethertype_cmd_status._entry_ptr.333, !652, !"_entry_ptr", i1 false, i1 false}
!655 = !{ptr @.str.335, !656, !"<string literal>", i1 false, i1 false}
!656 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8952, i32 3}
!657 = !{ptr @hclge_get_mac_ethertype_cmd_status._entry.334, !656, !"_entry", i1 false, i1 false}
!658 = !{ptr @hclge_get_mac_ethertype_cmd_status._entry_ptr.336, !656, !"_entry_ptr", i1 false, i1 false}
!659 = !{ptr @.str.338, !660, !"<string literal>", i1 false, i1 false}
!660 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8957, i32 3}
!661 = !{ptr @hclge_get_mac_ethertype_cmd_status._entry.337, !660, !"_entry", i1 false, i1 false}
!662 = !{ptr @hclge_get_mac_ethertype_cmd_status._entry_ptr.339, !660, !"_entry_ptr", i1 false, i1 false}
!663 = !{ptr @hclge_mgr_table, !664, !"hclge_mgr_table", i1 false, i1 false}
!664 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 365, i32 49}
!665 = !{ptr @.str.340, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5350, i32 3}
!667 = !{ptr @.str.341, !666, !"<string literal>", i1 false, i1 false}
!668 = !{ptr @hclge_init_fd_config._entry, !666, !"_entry", i1 false, i1 false}
!669 = !{ptr @hclge_init_fd_config._entry_ptr, !666, !"_entry_ptr", i1 false, i1 false}
!670 = !{ptr @.str.342, !671, !"<string literal>", i1 false, i1 false}
!671 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5252, i32 3}
!672 = !{ptr @.str.343, !671, !"<string literal>", i1 false, i1 false}
!673 = !{ptr @hclge_get_fd_mode._entry, !671, !"_entry", i1 false, i1 false}
!674 = !{ptr @hclge_get_fd_mode._entry_ptr, !671, !"_entry_ptr", i1 false, i1 false}
!675 = !{ptr @.str.344, !676, !"<string literal>", i1 false, i1 false}
!676 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5277, i32 3}
!677 = !{ptr @.str.345, !676, !"<string literal>", i1 false, i1 false}
!678 = !{ptr @hclge_get_fd_allocation._entry, !676, !"_entry", i1 false, i1 false}
!679 = !{ptr @hclge_get_fd_allocation._entry_ptr, !676, !"_entry_ptr", i1 false, i1 false}
!680 = !{ptr @.str.346, !681, !"<string literal>", i1 false, i1 false}
!681 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5313, i32 3}
!682 = !{ptr @.str.347, !681, !"<string literal>", i1 false, i1 false}
!683 = !{ptr @hclge_set_fd_key_config._entry, !681, !"_entry", i1 false, i1 false}
!684 = !{ptr @hclge_set_fd_key_config._entry_ptr, !681, !"_entry_ptr", i1 false, i1 false}
!685 = !{ptr @.str.348, !686, !"<string literal>", i1 false, i1 false}
!686 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4296, i32 2}
!687 = !{ptr @.str.349, !686, !"<string literal>", i1 false, i1 false}
!688 = !{ptr @hclge_reset_timer._entry, !686, !"_entry", i1 false, i1 false}
!689 = !{ptr @hclge_reset_timer._entry_ptr, !686, !"_entry_ptr", i1 false, i1 false}
!690 = !{ptr @.str.350, !691, !"<string literal>", i1 false, i1 false}
!691 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4369, i32 4}
!692 = !{ptr @.str.351, !691, !"<string literal>", i1 false, i1 false}
!693 = !{ptr @hclge_misc_err_recovery._entry, !691, !"_entry", i1 false, i1 false}
!694 = !{ptr @hclge_misc_err_recovery._entry_ptr, !691, !"_entry_ptr", i1 false, i1 false}
!695 = !{ptr @.str.352, !696, !"<string literal>", i1 false, i1 false}
!696 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4396, i32 3}
!697 = !{ptr @.str.353, !696, !"<string literal>", i1 false, i1 false}
!698 = !{ptr @hclge_reset_service_task._entry, !696, !"_entry", i1 false, i1 false}
!699 = !{ptr @hclge_reset_service_task._entry_ptr, !696, !"_entry_ptr", i1 false, i1 false}
!700 = !{ptr @.str.354, !701, !"<string literal>", i1 false, i1 false}
!701 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3630, i32 3}
!702 = !{ptr @.str.355, !701, !"<string literal>", i1 false, i1 false}
!703 = !{ptr @hclge_notify_roce_client._entry, !701, !"_entry", i1 false, i1 false}
!704 = !{ptr @hclge_notify_roce_client._entry_ptr, !701, !"_entry_ptr", i1 false, i1 false}
!705 = !{ptr @.str.356, !706, !"<string literal>", i1 false, i1 false}
!706 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3971, i32 4}
!707 = !{ptr @.str.357, !706, !"<string literal>", i1 false, i1 false}
!708 = !{ptr @hclge_reset_prepare_wait._entry, !706, !"_entry", i1 false, i1 false}
!709 = !{ptr @hclge_reset_prepare_wait._entry_ptr, !706, !"_entry_ptr", i1 false, i1 false}
!710 = !{ptr @.str.359, !711, !"<string literal>", i1 false, i1 false}
!711 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4002, i32 2}
!712 = !{ptr @hclge_reset_prepare_wait._entry.358, !711, !"_entry", i1 false, i1 false}
!713 = !{ptr @hclge_reset_prepare_wait._entry_ptr.360, !711, !"_entry_ptr", i1 false, i1 false}
!714 = !{ptr @.str.361, !715, !"<string literal>", i1 false, i1 false}
!715 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3706, i32 4}
!716 = !{ptr @.str.362, !715, !"<string literal>", i1 false, i1 false}
!717 = !{ptr @hclge_set_all_vf_rst._entry, !715, !"_entry", i1 false, i1 false}
!718 = !{ptr @hclge_set_all_vf_rst._entry_ptr, !715, !"_entry_ptr", i1 false, i1 false}
!719 = !{ptr @.str.364, !720, !"<string literal>", i1 false, i1 false}
!720 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3722, i32 4}
!721 = !{ptr @hclge_set_all_vf_rst._entry.363, !720, !"_entry", i1 false, i1 false}
!722 = !{ptr @hclge_set_all_vf_rst._entry_ptr.365, !720, !"_entry_ptr", i1 false, i1 false}
!723 = !{ptr @.str.366, !724, !"<string literal>", i1 false, i1 false}
!724 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3772, i32 4}
!725 = !{ptr @.str.367, !724, !"<string literal>", i1 false, i1 false}
!726 = !{ptr @hclge_func_reset_sync_vf._entry, !724, !"_entry", i1 false, i1 false}
!727 = !{ptr @hclge_func_reset_sync_vf._entry_ptr, !724, !"_entry_ptr", i1 false, i1 false}
!728 = !{ptr @.str.369, !729, !"<string literal>", i1 false, i1 false}
!729 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3782, i32 2}
!730 = !{ptr @hclge_func_reset_sync_vf._entry.368, !729, !"_entry", i1 false, i1 false}
!731 = !{ptr @hclge_func_reset_sync_vf._entry_ptr.370, !729, !"_entry_ptr", i1 false, i1 false}
!732 = !{ptr @.str.371, !733, !"<string literal>", i1 false, i1 false}
!733 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3658, i32 3}
!734 = !{ptr @.str.372, !733, !"<string literal>", i1 false, i1 false}
!735 = !{ptr @hclge_reset_wait._entry, !733, !"_entry", i1 false, i1 false}
!736 = !{ptr @hclge_reset_wait._entry_ptr, !733, !"_entry_ptr", i1 false, i1 false}
!737 = !{ptr @.str.374, !738, !"<string literal>", i1 false, i1 false}
!738 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3672, i32 3}
!739 = !{ptr @hclge_reset_wait._entry.373, !738, !"_entry", i1 false, i1 false}
!740 = !{ptr @hclge_reset_wait._entry_ptr.375, !738, !"_entry_ptr", i1 false, i1 false}
!741 = !{ptr @.str.376, !742, !"<string literal>", i1 false, i1 false}
!742 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11692, i32 3}
!743 = !{ptr @.str.377, !742, !"<string literal>", i1 false, i1 false}
!744 = !{ptr @hclge_reset_ae_dev._entry, !742, !"_entry", i1 false, i1 false}
!745 = !{ptr @hclge_reset_ae_dev._entry_ptr, !742, !"_entry_ptr", i1 false, i1 false}
!746 = !{ptr @.str.379, !747, !"<string literal>", i1 false, i1 false}
!747 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11698, i32 3}
!748 = !{ptr @hclge_reset_ae_dev._entry.378, !747, !"_entry", i1 false, i1 false}
!749 = !{ptr @hclge_reset_ae_dev._entry_ptr.380, !747, !"_entry_ptr", i1 false, i1 false}
!750 = !{ptr @hclge_reset_ae_dev._entry.381, !751, !"_entry", i1 false, i1 false}
!751 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11704, i32 3}
!752 = !{ptr @hclge_reset_ae_dev._entry_ptr.382, !751, !"_entry_ptr", i1 false, i1 false}
!753 = !{ptr @.str.384, !754, !"<string literal>", i1 false, i1 false}
!754 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11710, i32 3}
!755 = !{ptr @hclge_reset_ae_dev._entry.383, !754, !"_entry", i1 false, i1 false}
!756 = !{ptr @hclge_reset_ae_dev._entry_ptr.385, !754, !"_entry_ptr", i1 false, i1 false}
!757 = !{ptr @hclge_reset_ae_dev._entry.386, !758, !"_entry", i1 false, i1 false}
!758 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11717, i32 3}
!759 = !{ptr @hclge_reset_ae_dev._entry_ptr.387, !758, !"_entry_ptr", i1 false, i1 false}
!760 = !{ptr @hclge_reset_ae_dev._entry.388, !761, !"_entry", i1 false, i1 false}
!761 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11727, i32 3}
!762 = !{ptr @hclge_reset_ae_dev._entry_ptr.389, !761, !"_entry_ptr", i1 false, i1 false}
!763 = !{ptr @.str.391, !764, !"<string literal>", i1 false, i1 false}
!764 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11733, i32 3}
!765 = !{ptr @hclge_reset_ae_dev._entry.390, !764, !"_entry", i1 false, i1 false}
!766 = !{ptr @hclge_reset_ae_dev._entry_ptr.392, !764, !"_entry_ptr", i1 false, i1 false}
!767 = !{ptr @hclge_reset_ae_dev._entry.393, !768, !"_entry", i1 false, i1 false}
!768 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11739, i32 3}
!769 = !{ptr @hclge_reset_ae_dev._entry_ptr.394, !768, !"_entry_ptr", i1 false, i1 false}
!770 = !{ptr @.str.396, !771, !"<string literal>", i1 false, i1 false}
!771 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11745, i32 3}
!772 = !{ptr @hclge_reset_ae_dev._entry.395, !771, !"_entry", i1 false, i1 false}
!773 = !{ptr @hclge_reset_ae_dev._entry_ptr.397, !771, !"_entry_ptr", i1 false, i1 false}
!774 = !{ptr @hclge_reset_ae_dev._entry.398, !775, !"_entry", i1 false, i1 false}
!775 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11752, i32 3}
!776 = !{ptr @hclge_reset_ae_dev._entry_ptr.399, !775, !"_entry_ptr", i1 false, i1 false}
!777 = !{ptr @.str.401, !778, !"<string literal>", i1 false, i1 false}
!778 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11771, i32 3}
!779 = !{ptr @hclge_reset_ae_dev._entry.400, !778, !"_entry", i1 false, i1 false}
!780 = !{ptr @hclge_reset_ae_dev._entry_ptr.402, !778, !"_entry_ptr", i1 false, i1 false}
!781 = !{ptr @.str.404, !782, !"<string literal>", i1 false, i1 false}
!782 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11780, i32 4}
!783 = !{ptr @hclge_reset_ae_dev._entry.403, !782, !"_entry", i1 false, i1 false}
!784 = !{ptr @hclge_reset_ae_dev._entry_ptr.405, !782, !"_entry_ptr", i1 false, i1 false}
!785 = !{ptr @.str.407, !786, !"<string literal>", i1 false, i1 false}
!786 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11798, i32 2}
!787 = !{ptr @hclge_reset_ae_dev._entry.406, !786, !"_entry", i1 false, i1 false}
!788 = !{ptr @hclge_reset_ae_dev._entry_ptr.408, !786, !"_entry_ptr", i1 false, i1 false}
!789 = !{ptr @.str.409, !790, !"<string literal>", i1 false, i1 false}
!790 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11475, i32 3}
!791 = !{ptr @.str.410, !790, !"<string literal>", i1 false, i1 false}
!792 = !{ptr @hclge_set_vf_spoofchk_hw._entry, !790, !"_entry", i1 false, i1 false}
!793 = !{ptr @hclge_set_vf_spoofchk_hw._entry_ptr, !790, !"_entry_ptr", i1 false, i1 false}
!794 = !{ptr @.str.411, !790, !"<string literal>", i1 false, i1 false}
!795 = !{ptr @.str.412, !790, !"<string literal>", i1 false, i1 false}
!796 = !{ptr @.str.414, !797, !"<string literal>", i1 false, i1 false}
!797 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11483, i32 3}
!798 = !{ptr @hclge_set_vf_spoofchk_hw._entry.413, !797, !"_entry", i1 false, i1 false}
!799 = !{ptr @hclge_set_vf_spoofchk_hw._entry_ptr.415, !797, !"_entry_ptr", i1 false, i1 false}
!800 = !{ptr @.str.416, !801, !"<string literal>", i1 false, i1 false}
!801 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7392, i32 3}
!802 = !{ptr @.str.417, !801, !"<string literal>", i1 false, i1 false}
!803 = !{ptr @hclge_config_switch_param._entry, !801, !"_entry", i1 false, i1 false}
!804 = !{ptr @hclge_config_switch_param._entry_ptr, !801, !"_entry_ptr", i1 false, i1 false}
!805 = !{ptr @.str.419, !806, !"<string literal>", i1 false, i1 false}
!806 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7404, i32 3}
!807 = !{ptr @hclge_config_switch_param._entry.418, !806, !"_entry", i1 false, i1 false}
!808 = !{ptr @hclge_config_switch_param._entry_ptr.420, !806, !"_entry_ptr", i1 false, i1 false}
!809 = !{ptr @.str.421, !810, !"<string literal>", i1 false, i1 false}
!810 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11648, i32 4}
!811 = !{ptr @.str.422, !810, !"<string literal>", i1 false, i1 false}
!812 = !{ptr @hclge_resume_vf_rate._entry, !810, !"_entry", i1 false, i1 false}
!813 = !{ptr @hclge_resume_vf_rate._entry_ptr, !810, !"_entry_ptr", i1 false, i1 false}
!814 = !{ptr @.str.423, !815, !"<string literal>", i1 false, i1 false}
!815 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3321, i32 3}
!816 = !{ptr @.str.424, !815, !"<string literal>", i1 false, i1 false}
!817 = !{ptr @hclge_get_vf_vport._entry, !815, !"_entry", i1 false, i1 false}
!818 = !{ptr @hclge_get_vf_vport._entry_ptr, !815, !"_entry_ptr", i1 false, i1 false}
!819 = !{ptr @.str.426, !820, !"<string literal>", i1 false, i1 false}
!820 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3327, i32 3}
!821 = !{ptr @hclge_get_vf_vport._entry.425, !820, !"_entry", i1 false, i1 false}
!822 = !{ptr @hclge_get_vf_vport._entry_ptr.427, !820, !"_entry_ptr", i1 false, i1 false}
!823 = !{ptr @.str.428, !824, !"<string literal>", i1 false, i1 false}
!824 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4096, i32 3}
!825 = !{ptr @.str.429, !824, !"<string literal>", i1 false, i1 false}
!826 = !{ptr @hclge_set_rst_done._entry, !824, !"_entry", i1 false, i1 false}
!827 = !{ptr @hclge_set_rst_done._entry_ptr, !824, !"_entry_ptr", i1 false, i1 false}
!828 = !{ptr @.str.431, !829, !"<string literal>", i1 false, i1 false}
!829 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4101, i32 3}
!830 = !{ptr @hclge_set_rst_done._entry.430, !829, !"_entry", i1 false, i1 false}
!831 = !{ptr @hclge_set_rst_done._entry_ptr.432, !829, !"_entry_ptr", i1 false, i1 false}
!832 = !{ptr @.str.433, !833, !"<string literal>", i1 false, i1 false}
!833 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4027, i32 3}
!834 = !{ptr @.str.434, !833, !"<string literal>", i1 false, i1 false}
!835 = !{ptr @hclge_reset_err_handle._entry, !833, !"_entry", i1 false, i1 false}
!836 = !{ptr @hclge_reset_err_handle._entry_ptr, !833, !"_entry_ptr", i1 false, i1 false}
!837 = !{ptr @.str.436, !838, !"<string literal>", i1 false, i1 false}
!838 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4032, i32 3}
!839 = !{ptr @hclge_reset_err_handle._entry.435, !838, !"_entry", i1 false, i1 false}
!840 = !{ptr @hclge_reset_err_handle._entry_ptr.437, !838, !"_entry_ptr", i1 false, i1 false}
!841 = !{ptr @.str.439, !842, !"<string literal>", i1 false, i1 false}
!842 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4039, i32 3}
!843 = !{ptr @hclge_reset_err_handle._entry.438, !842, !"_entry", i1 false, i1 false}
!844 = !{ptr @hclge_reset_err_handle._entry_ptr.440, !842, !"_entry_ptr", i1 false, i1 false}
!845 = !{ptr @.str.442, !846, !"<string literal>", i1 false, i1 false}
!846 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4050, i32 2}
!847 = !{ptr @hclge_reset_err_handle._entry.441, !846, !"_entry", i1 false, i1 false}
!848 = !{ptr @hclge_reset_err_handle._entry_ptr.443, !846, !"_entry_ptr", i1 false, i1 false}
!849 = !{ptr @.str.444, !850, !"<string literal>", i1 false, i1 false}
!850 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4017, i32 2}
!851 = !{ptr @.str.445, !850, !"<string literal>", i1 false, i1 false}
!852 = !{ptr @hclge_show_rst_info._entry, !850, !"_entry", i1 false, i1 false}
!853 = !{ptr @hclge_show_rst_info._entry_ptr, !850, !"_entry_ptr", i1 false, i1 false}
!854 = !{ptr @.str.446, !855, !"<string literal>", i1 false, i1 false}
!855 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3840, i32 3}
!856 = !{ptr @.str.447, !855, !"<string literal>", i1 false, i1 false}
!857 = !{ptr @hclge_do_reset._entry, !855, !"_entry", i1 false, i1 false}
!858 = !{ptr @hclge_do_reset._entry_ptr, !855, !"_entry_ptr", i1 false, i1 false}
!859 = !{ptr @.str.449, !860, !"<string literal>", i1 false, i1 false}
!860 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3841, i32 3}
!861 = !{ptr @hclge_do_reset._entry.448, !860, !"_entry", i1 false, i1 false}
!862 = !{ptr @hclge_do_reset._entry_ptr.450, !860, !"_entry_ptr", i1 false, i1 false}
!863 = !{ptr @.str.452, !864, !"<string literal>", i1 false, i1 false}
!864 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3849, i32 3}
!865 = !{ptr @hclge_do_reset._entry.451, !864, !"_entry", i1 false, i1 false}
!866 = !{ptr @hclge_do_reset._entry_ptr.453, !864, !"_entry_ptr", i1 false, i1 false}
!867 = !{ptr @.str.455, !868, !"<string literal>", i1 false, i1 false}
!868 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3855, i32 3}
!869 = !{ptr @hclge_do_reset._entry.454, !868, !"_entry", i1 false, i1 false}
!870 = !{ptr @hclge_do_reset._entry_ptr.456, !868, !"_entry_ptr", i1 false, i1 false}
!871 = !{ptr @.str.458, !872, !"<string literal>", i1 false, i1 false}
!872 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3861, i32 3}
!873 = !{ptr @hclge_do_reset._entry.457, !872, !"_entry", i1 false, i1 false}
!874 = !{ptr @hclge_do_reset._entry_ptr.459, !872, !"_entry_ptr", i1 false, i1 false}
!875 = !{ptr @.str.461, !876, !"<string literal>", i1 false, i1 false}
!876 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3867, i32 3}
!877 = !{ptr @hclge_do_reset._entry.460, !876, !"_entry", i1 false, i1 false}
!878 = !{ptr @hclge_do_reset._entry_ptr.462, !876, !"_entry_ptr", i1 false, i1 false}
!879 = !{ptr @.str.463, !880, !"<string literal>", i1 false, i1 false}
!880 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3740, i32 3}
!881 = !{ptr @.str.464, !880, !"<string literal>", i1 false, i1 false}
!882 = !{ptr @hclge_mailbox_service_task._entry, !880, !"_entry", i1 false, i1 false}
!883 = !{ptr @hclge_mailbox_service_task._entry_ptr, !880, !"_entry_ptr", i1 false, i1 false}
!884 = !{ptr @.str.465, !885, !"<string literal>", i1 false, i1 false}
!885 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2875, i32 3}
!886 = !{ptr @.str.466, !885, !"<string literal>", i1 false, i1 false}
!887 = !{ptr @hclge_get_mac_link_status._entry, !885, !"_entry", i1 false, i1 false}
!888 = !{ptr @hclge_get_mac_link_status._entry_ptr, !885, !"_entry_ptr", i1 false, i1 false}
!889 = !{ptr @.str.467, !890, !"<string literal>", i1 false, i1 false}
!890 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2917, i32 4}
!891 = !{ptr @.str.468, !890, !"<string literal>", i1 false, i1 false}
!892 = !{ptr @hclge_push_link_status._entry, !890, !"_entry", i1 false, i1 false}
!893 = !{ptr @hclge_push_link_status._entry_ptr, !890, !"_entry_ptr", i1 false, i1 false}
!894 = !{ptr @.str.469, !895, !"<string literal>", i1 false, i1 false}
!895 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5427, i32 3}
!896 = !{ptr @.str.470, !895, !"<string literal>", i1 false, i1 false}
!897 = !{ptr @hclge_fd_tcam_config._entry, !895, !"_entry", i1 false, i1 false}
!898 = !{ptr @hclge_fd_tcam_config._entry_ptr, !895, !"_entry_ptr", i1 false, i1 false}
!899 = !{ptr @.str.471, !900, !"<string literal>", i1 false, i1 false}
!900 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5104, i32 3}
!901 = !{ptr @.str.472, !900, !"<string literal>", i1 false, i1 false}
!902 = !{ptr @hclge_fd_set_user_def_cmd._entry, !900, !"_entry", i1 false, i1 false}
!903 = !{ptr @hclge_fd_set_user_def_cmd._entry_ptr, !900, !"_entry_ptr", i1 false, i1 false}
!904 = !{ptr @.str.473, !905, !"<string literal>", i1 false, i1 false}
!905 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5475, i32 3}
!906 = !{ptr @.str.474, !905, !"<string literal>", i1 false, i1 false}
!907 = !{ptr @hclge_fd_ad_config._entry, !905, !"_entry", i1 false, i1 false}
!908 = !{ptr @hclge_fd_ad_config._entry_ptr, !905, !"_entry_ptr", i1 false, i1 false}
!909 = !{ptr @.str.475, !910, !"<string literal>", i1 false, i1 false}
!910 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5645, i32 3}
!911 = !{ptr @.str.476, !910, !"<string literal>", i1 false, i1 false}
!912 = !{ptr @hclge_config_key._entry, !910, !"_entry", i1 false, i1 false}
!913 = !{ptr @hclge_config_key._entry_ptr, !910, !"_entry_ptr", i1 false, i1 false}
!914 = !{ptr @.str.478, !915, !"<string literal>", i1 false, i1 false}
!915 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5654, i32 3}
!916 = !{ptr @hclge_config_key._entry.477, !915, !"_entry", i1 false, i1 false}
!917 = !{ptr @hclge_config_key._entry_ptr.479, !915, !"_entry_ptr", i1 false, i1 false}
!918 = !{ptr @tuple_key_info, !919, !"tuple_key_info", i1 false, i1 false}
!919 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 415, i32 30}
!920 = !{ptr @meta_data_key_info, !921, !"meta_data_key_info", i1 false, i1 false}
!921 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 404, i32 30}
!922 = !{ptr @.str.480, !923, !"<string literal>", i1 false, i1 false}
!923 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 676, i32 4}
!924 = !{ptr @.str.481, !923, !"<string literal>", i1 false, i1 false}
!925 = !{ptr @hclge_update_stats_for_all._entry, !923, !"_entry", i1 false, i1 false}
!926 = !{ptr @hclge_update_stats_for_all._entry_ptr, !923, !"_entry_ptr", i1 false, i1 false}
!927 = !{ptr @.str.483, !928, !"<string literal>", i1 false, i1 false}
!928 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 684, i32 3}
!929 = !{ptr @hclge_update_stats_for_all._entry.482, !928, !"_entry", i1 false, i1 false}
!930 = !{ptr @hclge_update_stats_for_all._entry_ptr.484, !928, !"_entry_ptr", i1 false, i1 false}
!931 = !{ptr @.str.485, !932, !"<string literal>", i1 false, i1 false}
!932 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3096, i32 3}
!933 = !{ptr @.str.486, !932, !"<string literal>", i1 false, i1 false}
!934 = !{ptr @hclge_get_sfp_info._entry, !932, !"_entry", i1 false, i1 false}
!935 = !{ptr @hclge_get_sfp_info._entry_ptr, !932, !"_entry_ptr", i1 false, i1 false}
!936 = !{ptr @.str.488, !937, !"<string literal>", i1 false, i1 false}
!937 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3100, i32 3}
!938 = !{ptr @hclge_get_sfp_info._entry.487, !937, !"_entry", i1 false, i1 false}
!939 = !{ptr @hclge_get_sfp_info._entry_ptr.489, !937, !"_entry_ptr", i1 false, i1 false}
!940 = !{ptr @.str.490, !941, !"<string literal>", i1 false, i1 false}
!941 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3070, i32 3}
!942 = !{ptr @.str.491, !941, !"<string literal>", i1 false, i1 false}
!943 = !{ptr @hclge_get_sfp_speed._entry, !941, !"_entry", i1 false, i1 false}
!944 = !{ptr @hclge_get_sfp_speed._entry_ptr, !941, !"_entry_ptr", i1 false, i1 false}
!945 = !{ptr @.str.493, !946, !"<string literal>", i1 false, i1 false}
!946 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3074, i32 3}
!947 = !{ptr @hclge_get_sfp_speed._entry.492, !946, !"_entry", i1 false, i1 false}
!948 = !{ptr @hclge_get_sfp_speed._entry_ptr.494, !946, !"_entry_ptr", i1 false, i1 false}
!949 = !{ptr @speed_bit_map, !950, !"speed_bit_map", i1 false, i1 false}
!950 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 962, i32 41}
!951 = !{ptr @.str.495, !952, !"<string literal>", i1 false, i1 false}
!952 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10289, i32 4}
!953 = !{ptr @.str.496, !952, !"<string literal>", i1 false, i1 false}
!954 = !{ptr @hclge_sync_vlan_fltr_state._entry, !952, !"_entry", i1 false, i1 false}
!955 = !{ptr @hclge_sync_vlan_fltr_state._entry_ptr, !952, !"_entry_ptr", i1 false, i1 false}
!956 = !{ptr @.str.497, !957, !"<string literal>", i1 false, i1 false}
!957 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11186, i32 4}
!958 = !{ptr @.str.498, !957, !"<string literal>", i1 false, i1 false}
!959 = !{ptr @hclge_clear_resetting_state._entry, !957, !"_entry", i1 false, i1 false}
!960 = !{ptr @hclge_clear_resetting_state._entry_ptr, !957, !"_entry_ptr", i1 false, i1 false}
!961 = !{ptr @.str.499, !962, !"<string literal>", i1 false, i1 false}
!962 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11579, i32 4}
!963 = !{ptr @.str.500, !962, !"<string literal>", i1 false, i1 false}
!964 = !{ptr @hclge_reset_vf_rate._entry, !962, !"_entry", i1 false, i1 false}
!965 = !{ptr @hclge_reset_vf_rate._entry_ptr, !962, !"_entry_ptr", i1 false, i1 false}
!966 = !{ptr @.str.501, !967, !"<string literal>", i1 false, i1 false}
!967 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10219, i32 4}
!968 = !{ptr @.str.502, !967, !"<string literal>", i1 false, i1 false}
!969 = !{ptr @hclge_clear_vf_vlan._entry, !967, !"_entry", i1 false, i1 false}
!970 = !{ptr @hclge_clear_vf_vlan._entry_ptr, !967, !"_entry_ptr", i1 false, i1 false}
!971 = !{ptr @.str.503, !972, !"<string literal>", i1 false, i1 false}
!972 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8901, i32 3}
!973 = !{ptr @.str.504, !972, !"<string literal>", i1 false, i1 false}
!974 = !{ptr @hclge_uninit_vport_mac_list._entry, !972, !"_entry", i1 false, i1 false}
!975 = !{ptr @hclge_uninit_vport_mac_list._entry_ptr, !972, !"_entry_ptr", i1 false, i1 false}
!976 = !{ptr @.str.505, !972, !"<string literal>", i1 false, i1 false}
!977 = !{ptr @.str.506, !972, !"<string literal>", i1 false, i1 false}
!978 = !{ptr @.str.507, !979, !"<string literal>", i1 false, i1 false}
!979 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11143, i32 3}
!980 = !{ptr @.str.508, !979, !"<string literal>", i1 false, i1 false}
!981 = !{ptr @hclge_reset_prepare_general._entry, !979, !"_entry", i1 false, i1 false}
!982 = !{ptr @hclge_reset_prepare_general._entry_ptr, !979, !"_entry_ptr", i1 false, i1 false}
!983 = !{ptr @.str.509, !984, !"<string literal>", i1 false, i1 false}
!984 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11168, i32 3}
!985 = !{ptr @.str.510, !984, !"<string literal>", i1 false, i1 false}
!986 = !{ptr @hclge_reset_done._entry, !984, !"_entry", i1 false, i1 false}
!987 = !{ptr @hclge_reset_done._entry_ptr, !984, !"_entry_ptr", i1 false, i1 false}
!988 = !{ptr @.str.511, !989, !"<string literal>", i1 false, i1 false}
!989 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10861, i32 3}
!990 = !{ptr @.str.512, !989, !"<string literal>", i1 false, i1 false}
!991 = !{ptr @hclge_init_nic_client_instance._entry, !989, !"_entry", i1 false, i1 false}
!992 = !{ptr @hclge_init_nic_client_instance._entry_ptr, !989, !"_entry_ptr", i1 false, i1 false}
!993 = !{ptr @.str.513, !994, !"<string literal>", i1 false, i1 false}
!994 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10816, i32 2}
!995 = !{ptr @.str.514, !994, !"<string literal>", i1 false, i1 false}
!996 = !{ptr @hclge_info_show._entry, !994, !"_entry", i1 false, i1 false}
!997 = !{ptr @hclge_info_show._entry_ptr, !994, !"_entry_ptr", i1 false, i1 false}
!998 = !{ptr @.str.516, !999, !"<string literal>", i1 false, i1 false}
!999 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10818, i32 2}
!1000 = !{ptr @hclge_info_show._entry.515, !999, !"_entry", i1 false, i1 false}
!1001 = !{ptr @hclge_info_show._entry_ptr.517, !999, !"_entry_ptr", i1 false, i1 false}
!1002 = !{ptr @.str.519, !1003, !"<string literal>", i1 false, i1 false}
!1003 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10819, i32 2}
!1004 = !{ptr @hclge_info_show._entry.518, !1003, !"_entry", i1 false, i1 false}
!1005 = !{ptr @hclge_info_show._entry_ptr.520, !1003, !"_entry_ptr", i1 false, i1 false}
!1006 = !{ptr @.str.522, !1007, !"<string literal>", i1 false, i1 false}
!1007 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10820, i32 2}
!1008 = !{ptr @hclge_info_show._entry.521, !1007, !"_entry", i1 false, i1 false}
!1009 = !{ptr @hclge_info_show._entry_ptr.523, !1007, !"_entry_ptr", i1 false, i1 false}
!1010 = !{ptr @.str.525, !1011, !"<string literal>", i1 false, i1 false}
!1011 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10821, i32 2}
!1012 = !{ptr @hclge_info_show._entry.524, !1011, !"_entry", i1 false, i1 false}
!1013 = !{ptr @hclge_info_show._entry_ptr.526, !1011, !"_entry_ptr", i1 false, i1 false}
!1014 = !{ptr @.str.528, !1015, !"<string literal>", i1 false, i1 false}
!1015 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10822, i32 2}
!1016 = !{ptr @hclge_info_show._entry.527, !1015, !"_entry", i1 false, i1 false}
!1017 = !{ptr @hclge_info_show._entry_ptr.529, !1015, !"_entry_ptr", i1 false, i1 false}
!1018 = !{ptr @.str.531, !1019, !"<string literal>", i1 false, i1 false}
!1019 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10823, i32 2}
!1020 = !{ptr @hclge_info_show._entry.530, !1019, !"_entry", i1 false, i1 false}
!1021 = !{ptr @hclge_info_show._entry_ptr.532, !1019, !"_entry_ptr", i1 false, i1 false}
!1022 = !{ptr @.str.534, !1023, !"<string literal>", i1 false, i1 false}
!1023 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10824, i32 2}
!1024 = !{ptr @hclge_info_show._entry.533, !1023, !"_entry", i1 false, i1 false}
!1025 = !{ptr @hclge_info_show._entry_ptr.535, !1023, !"_entry_ptr", i1 false, i1 false}
!1026 = !{ptr @.str.537, !1027, !"<string literal>", i1 false, i1 false}
!1027 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10825, i32 2}
!1028 = !{ptr @hclge_info_show._entry.536, !1027, !"_entry", i1 false, i1 false}
!1029 = !{ptr @hclge_info_show._entry_ptr.538, !1027, !"_entry_ptr", i1 false, i1 false}
!1030 = !{ptr @.str.540, !1031, !"<string literal>", i1 false, i1 false}
!1031 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10826, i32 2}
!1032 = !{ptr @hclge_info_show._entry.539, !1031, !"_entry", i1 false, i1 false}
!1033 = !{ptr @hclge_info_show._entry_ptr.541, !1031, !"_entry_ptr", i1 false, i1 false}
!1034 = !{ptr @.str.543, !1035, !"<string literal>", i1 false, i1 false}
!1035 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10827, i32 2}
!1036 = !{ptr @hclge_info_show._entry.542, !1035, !"_entry", i1 false, i1 false}
!1037 = !{ptr @hclge_info_show._entry_ptr.544, !1035, !"_entry_ptr", i1 false, i1 false}
!1038 = !{ptr @.str.545, !1035, !"<string literal>", i1 false, i1 false}
!1039 = !{ptr @.str.546, !1035, !"<string literal>", i1 false, i1 false}
!1040 = !{ptr @.str.548, !1041, !"<string literal>", i1 false, i1 false}
!1041 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10829, i32 2}
!1042 = !{ptr @hclge_info_show._entry.547, !1041, !"_entry", i1 false, i1 false}
!1043 = !{ptr @hclge_info_show._entry_ptr.549, !1041, !"_entry_ptr", i1 false, i1 false}
!1044 = !{ptr @.str.550, !1041, !"<string literal>", i1 false, i1 false}
!1045 = !{ptr @.str.551, !1041, !"<string literal>", i1 false, i1 false}
!1046 = !{ptr @.str.553, !1047, !"<string literal>", i1 false, i1 false}
!1047 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10831, i32 2}
!1048 = !{ptr @hclge_info_show._entry.552, !1047, !"_entry", i1 false, i1 false}
!1049 = !{ptr @hclge_info_show._entry_ptr.554, !1047, !"_entry_ptr", i1 false, i1 false}
!1050 = !{ptr @.str.556, !1051, !"<string literal>", i1 false, i1 false}
!1051 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10833, i32 2}
!1052 = !{ptr @hclge_info_show._entry.555, !1051, !"_entry", i1 false, i1 false}
!1053 = !{ptr @hclge_info_show._entry_ptr.557, !1051, !"_entry_ptr", i1 false, i1 false}
!1054 = !{ptr @.str.559, !1055, !"<string literal>", i1 false, i1 false}
!1055 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10836, i32 2}
!1056 = !{ptr @hclge_info_show._entry.558, !1055, !"_entry", i1 false, i1 false}
!1057 = !{ptr @hclge_info_show._entry_ptr.560, !1055, !"_entry_ptr", i1 false, i1 false}
!1058 = !{ptr @.str.561, !1059, !"<string literal>", i1 false, i1 false}
!1059 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10915, i32 3}
!1060 = !{ptr @.str.562, !1059, !"<string literal>", i1 false, i1 false}
!1061 = !{ptr @hclge_init_roce_client_instance._entry, !1059, !"_entry", i1 false, i1 false}
!1062 = !{ptr @hclge_init_roce_client_instance._entry_ptr, !1059, !"_entry_ptr", i1 false, i1 false}
!1063 = !{ptr @.str.563, !1064, !"<string literal>", i1 false, i1 false}
!1064 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7369, i32 3}
!1065 = !{ptr @.str.564, !1064, !"<string literal>", i1 false, i1 false}
!1066 = !{ptr @hclge_cfg_mac_mode._entry, !1064, !"_entry", i1 false, i1 false}
!1067 = !{ptr @hclge_cfg_mac_mode._entry_ptr, !1064, !"_entry_ptr", i1 false, i1 false}
!1068 = !{ptr @.str.565, !1069, !"<string literal>", i1 false, i1 false}
!1069 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2764, i32 3}
!1070 = !{ptr @.str.566, !1069, !"<string literal>", i1 false, i1 false}
!1071 = !{ptr @hclge_set_fec._entry, !1069, !"_entry", i1 false, i1 false}
!1072 = !{ptr @hclge_set_fec._entry_ptr, !1069, !"_entry_ptr", i1 false, i1 false}
!1073 = !{ptr @.str.567, !1074, !"<string literal>", i1 false, i1 false}
!1074 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7735, i32 3}
!1075 = !{ptr @.str.568, !1074, !"<string literal>", i1 false, i1 false}
!1076 = !{ptr @hclge_set_loopback._entry, !1074, !"_entry", i1 false, i1 false}
!1077 = !{ptr @hclge_set_loopback._entry_ptr, !1074, !"_entry_ptr", i1 false, i1 false}
!1078 = !{ptr @.str.570, !1079, !"<string literal>", i1 false, i1 false}
!1079 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7745, i32 3}
!1080 = !{ptr @hclge_set_loopback._entry.569, !1079, !"_entry", i1 false, i1 false}
!1081 = !{ptr @hclge_set_loopback._entry_ptr.571, !1079, !"_entry_ptr", i1 false, i1 false}
!1082 = !{ptr @.str.572, !1083, !"<string literal>", i1 false, i1 false}
!1083 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7602, i32 3}
!1084 = !{ptr @.str.573, !1083, !"<string literal>", i1 false, i1 false}
!1085 = !{ptr @hclge_set_common_loopback._entry, !1083, !"_entry", i1 false, i1 false}
!1086 = !{ptr @hclge_set_common_loopback._entry_ptr, !1083, !"_entry_ptr", i1 false, i1 false}
!1087 = !{ptr @.str.574, !1088, !"<string literal>", i1 false, i1 false}
!1088 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7421, i32 4}
!1089 = !{ptr @.str.575, !1088, !"<string literal>", i1 false, i1 false}
!1090 = !{ptr @hclge_phy_link_status_wait._entry, !1088, !"_entry", i1 false, i1 false}
!1091 = !{ptr @hclge_phy_link_status_wait._entry_ptr, !1088, !"_entry_ptr", i1 false, i1 false}
!1092 = !{ptr @.str.576, !1093, !"<string literal>", i1 false, i1 false}
!1093 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7655, i32 3}
!1094 = !{ptr @.str.577, !1093, !"<string literal>", i1 false, i1 false}
!1095 = !{ptr @hclge_set_phy_loopback._entry, !1093, !"_entry", i1 false, i1 false}
!1096 = !{ptr @hclge_set_phy_loopback._entry_ptr, !1093, !"_entry_ptr", i1 false, i1 false}
!1097 = !{ptr @.str.579, !1098, !"<string literal>", i1 false, i1 false}
!1098 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7664, i32 3}
!1099 = !{ptr @hclge_set_phy_loopback._entry.578, !1098, !"_entry", i1 false, i1 false}
!1100 = !{ptr @hclge_set_phy_loopback._entry_ptr.580, !1098, !"_entry_ptr", i1 false, i1 false}
!1101 = !{ptr @.str.581, !1102, !"<string literal>", i1 false, i1 false}
!1102 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10704, i32 4}
!1103 = !{ptr @.str.582, !1102, !"<string literal>", i1 false, i1 false}
!1104 = !{ptr @hclge_set_pauseparam._entry, !1102, !"_entry", i1 false, i1 false}
!1105 = !{ptr @hclge_set_pauseparam._entry_ptr, !1102, !"_entry_ptr", i1 false, i1 false}
!1106 = !{ptr @.str.584, !1107, !"<string literal>", i1 false, i1 false}
!1107 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10711, i32 3}
!1108 = !{ptr @hclge_set_pauseparam._entry.583, !1107, !"_entry", i1 false, i1 false}
!1109 = !{ptr @hclge_set_pauseparam._entry_ptr.585, !1107, !"_entry_ptr", i1 false, i1 false}
!1110 = !{ptr @.str.586, !1111, !"<string literal>", i1 false, i1 false}
!1111 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2683, i32 4}
!1112 = !{ptr @.str.587, !1111, !"<string literal>", i1 false, i1 false}
!1113 = !{ptr @hclge_set_autoneg._entry, !1111, !"_entry", i1 false, i1 false}
!1114 = !{ptr @hclge_set_autoneg._entry_ptr, !1111, !"_entry_ptr", i1 false, i1 false}
!1115 = !{ptr @.str.588, !1116, !"<string literal>", i1 false, i1 false}
!1116 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 2712, i32 2}
!1117 = !{ptr @.str.589, !1116, !"<string literal>", i1 false, i1 false}
!1118 = !{ptr @hclge_restart_autoneg.__UNIQUE_ID_ddebug533, !1116, !"__UNIQUE_ID_ddebug533", i1 false, i1 false}
!1119 = !{ptr @.str.590, !1120, !"<string literal>", i1 false, i1 false}
!1120 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9109, i32 3}
!1121 = !{ptr @.str.591, !1120, !"<string literal>", i1 false, i1 false}
!1122 = !{ptr @hclge_set_mac_addr._entry, !1120, !"_entry", i1 false, i1 false}
!1123 = !{ptr @hclge_set_mac_addr._entry_ptr, !1120, !"_entry_ptr", i1 false, i1 false}
!1124 = !{ptr @.str.593, !1125, !"<string literal>", i1 false, i1 false}
!1125 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9117, i32 3}
!1126 = !{ptr @hclge_set_mac_addr._entry.592, !1125, !"_entry", i1 false, i1 false}
!1127 = !{ptr @hclge_set_mac_addr._entry_ptr.594, !1125, !"_entry_ptr", i1 false, i1 false}
!1128 = !{ptr @.str.596, !1129, !"<string literal>", i1 false, i1 false}
!1129 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 9130, i32 3}
!1130 = !{ptr @hclge_set_mac_addr._entry.595, !1129, !"_entry", i1 false, i1 false}
!1131 = !{ptr @hclge_set_mac_addr._entry_ptr.597, !1129, !"_entry_ptr", i1 false, i1 false}
!1132 = !{ptr @.str.598, !1133, !"<string literal>", i1 false, i1 false}
!1133 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 700, i32 3}
!1134 = !{ptr @hclge_update_stats._entry, !1133, !"_entry", i1 false, i1 false}
!1135 = !{ptr @hclge_update_stats._entry_ptr, !1133, !"_entry_ptr", i1 false, i1 false}
!1136 = !{ptr @hclge_update_stats._entry.599, !1137, !"_entry", i1 false, i1 false}
!1137 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 706, i32 3}
!1138 = !{ptr @hclge_update_stats._entry_ptr.600, !1137, !"_entry_ptr", i1 false, i1 false}
!1139 = !{ptr @g_mac_stats_string, !1140, !"g_mac_stats_string", i1 false, i1 false}
!1140 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 157, i32 42}
!1141 = !{ptr @hns3_nic_test_strs, !1142, !"hns3_nic_test_strs", i1 false, i1 false}
!1142 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 150, i32 19}
!1143 = !{ptr @.str.601, !1144, !"<string literal>", i1 false, i1 false}
!1144 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12369, i32 3}
!1145 = !{ptr @.str.602, !1144, !"<string literal>", i1 false, i1 false}
!1146 = !{ptr @hclge_get_regs._entry, !1144, !"_entry", i1 false, i1 false}
!1147 = !{ptr @hclge_get_regs._entry_ptr, !1144, !"_entry_ptr", i1 false, i1 false}
!1148 = !{ptr @.str.604, !1149, !"<string literal>", i1 false, i1 false}
!1149 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12378, i32 3}
!1150 = !{ptr @hclge_get_regs._entry.603, !1149, !"_entry", i1 false, i1 false}
!1151 = !{ptr @hclge_get_regs._entry_ptr.605, !1149, !"_entry_ptr", i1 false, i1 false}
!1152 = !{ptr @.str.607, !1153, !"<string literal>", i1 false, i1 false}
!1153 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12390, i32 3}
!1154 = !{ptr @hclge_get_regs._entry.606, !1153, !"_entry", i1 false, i1 false}
!1155 = !{ptr @hclge_get_regs._entry_ptr.608, !1153, !"_entry_ptr", i1 false, i1 false}
!1156 = !{ptr @.str.610, !1157, !"<string literal>", i1 false, i1 false}
!1157 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12402, i32 3}
!1158 = !{ptr @hclge_get_regs._entry.609, !1157, !"_entry", i1 false, i1 false}
!1159 = !{ptr @hclge_get_regs._entry_ptr.611, !1157, !"_entry_ptr", i1 false, i1 false}
!1160 = !{ptr @.str.612, !1161, !"<string literal>", i1 false, i1 false}
!1161 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11959, i32 3}
!1162 = !{ptr @.str.613, !1161, !"<string literal>", i1 false, i1 false}
!1163 = !{ptr @hclge_get_regs_num._entry, !1161, !"_entry", i1 false, i1 false}
!1164 = !{ptr @hclge_get_regs_num._entry_ptr, !1161, !"_entry_ptr", i1 false, i1 false}
!1165 = !{ptr @cmdq_reg_addr_list, !1166, !"cmdq_reg_addr_list", i1 false, i1 false}
!1166 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 94, i32 18}
!1167 = distinct !{null, !1168, !"common_reg_addr_list", i1 false, i1 false}
!1168 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 109, i32 18}
!1169 = !{ptr @ring_reg_addr_list, !1170, !"ring_reg_addr_list", i1 false, i1 false}
!1170 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 117, i32 18}
!1171 = distinct !{null, !1172, !"tqp_intr_reg_addr_list", i1 false, i1 false}
!1172 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 144, i32 18}
!1173 = !{ptr @.str.614, !1174, !"<string literal>", i1 false, i1 false}
!1174 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12001, i32 3}
!1175 = !{ptr @.str.615, !1174, !"<string literal>", i1 false, i1 false}
!1176 = !{ptr @hclge_get_32_bit_regs._entry, !1174, !"_entry", i1 false, i1 false}
!1177 = !{ptr @hclge_get_32_bit_regs._entry_ptr, !1174, !"_entry_ptr", i1 false, i1 false}
!1178 = !{ptr @.str.616, !1179, !"<string literal>", i1 false, i1 false}
!1179 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12055, i32 3}
!1180 = !{ptr @.str.617, !1179, !"<string literal>", i1 false, i1 false}
!1181 = !{ptr @hclge_get_64_bit_regs._entry, !1179, !"_entry", i1 false, i1 false}
!1182 = !{ptr @hclge_get_64_bit_regs._entry_ptr, !1179, !"_entry_ptr", i1 false, i1 false}
!1183 = !{ptr @.str.618, !1184, !"<string literal>", i1 false, i1 false}
!1184 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12224, i32 3}
!1185 = !{ptr @.str.619, !1184, !"<string literal>", i1 false, i1 false}
!1186 = !{ptr @hclge_get_dfx_reg._entry, !1184, !"_entry", i1 false, i1 false}
!1187 = !{ptr @hclge_get_dfx_reg._entry_ptr, !1184, !"_entry_ptr", i1 false, i1 false}
!1188 = !{ptr @.str.621, !1189, !"<string literal>", i1 false, i1 false}
!1189 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12245, i32 4}
!1190 = !{ptr @hclge_get_dfx_reg._entry.620, !1189, !"_entry", i1 false, i1 false}
!1191 = !{ptr @hclge_get_dfx_reg._entry_ptr.622, !1189, !"_entry_ptr", i1 false, i1 false}
!1192 = !{ptr @.str.623, !1193, !"<string literal>", i1 false, i1 false}
!1193 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12116, i32 3}
!1194 = !{ptr @.str.624, !1193, !"<string literal>", i1 false, i1 false}
!1195 = !{ptr @hclge_get_dfx_reg_bd_num._entry, !1193, !"_entry", i1 false, i1 false}
!1196 = !{ptr @hclge_get_dfx_reg_bd_num._entry_ptr, !1193, !"_entry_ptr", i1 false, i1 false}
!1197 = distinct !{null, !1198, !"hclge_dfx_bd_offset_list", i1 false, i1 false}
!1198 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 374, i32 18}
!1199 = !{ptr @.str.625, !1200, !"<string literal>", i1 false, i1 false}
!1200 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12149, i32 3}
!1201 = !{ptr @.str.626, !1200, !"<string literal>", i1 false, i1 false}
!1202 = !{ptr @hclge_dfx_reg_cmd_send._entry, !1200, !"_entry", i1 false, i1 false}
!1203 = !{ptr @hclge_dfx_reg_cmd_send._entry_ptr, !1200, !"_entry_ptr", i1 false, i1 false}
!1204 = !{ptr @hclge_dfx_reg_opcode_list, !1205, !"hclge_dfx_reg_opcode_list", i1 false, i1 false}
!1205 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 389, i32 37}
!1206 = !{ptr @.str.627, !1207, !"<string literal>", i1 false, i1 false}
!1207 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12325, i32 3}
!1208 = !{ptr @hclge_get_regs_len._entry, !1207, !"_entry", i1 false, i1 false}
!1209 = !{ptr @hclge_get_regs_len._entry_ptr, !1207, !"_entry_ptr", i1 false, i1 false}
!1210 = !{ptr @.str.629, !1211, !"<string literal>", i1 false, i1 false}
!1211 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12332, i32 3}
!1212 = !{ptr @hclge_get_regs_len._entry.628, !1211, !"_entry", i1 false, i1 false}
!1213 = !{ptr @hclge_get_regs_len._entry_ptr.630, !1211, !"_entry_ptr", i1 false, i1 false}
!1214 = !{ptr @.str.631, !1215, !"<string literal>", i1 false, i1 false}
!1215 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12191, i32 3}
!1216 = !{ptr @hclge_get_dfx_reg_len._entry, !1215, !"_entry", i1 false, i1 false}
!1217 = !{ptr @hclge_get_dfx_reg_len._entry_ptr, !1215, !"_entry_ptr", i1 false, i1 false}
!1218 = !{ptr @.str.632, !1219, !"<string literal>", i1 false, i1 false}
!1219 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4635, i32 3}
!1220 = !{ptr @.str.633, !1219, !"<string literal>", i1 false, i1 false}
!1221 = !{ptr @hclge_set_rss._entry, !1219, !"_entry", i1 false, i1 false}
!1222 = !{ptr @hclge_set_rss._entry_ptr, !1219, !"_entry_ptr", i1 false, i1 false}
!1223 = !{ptr @.str.634, !1224, !"<string literal>", i1 false, i1 false}
!1224 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4658, i32 3}
!1225 = !{ptr @.str.635, !1224, !"<string literal>", i1 false, i1 false}
!1226 = !{ptr @hclge_set_rss_tuple._entry, !1224, !"_entry", i1 false, i1 false}
!1227 = !{ptr @hclge_set_rss_tuple._entry_ptr, !1224, !"_entry_ptr", i1 false, i1 false}
!1228 = !{ptr @.str.636, !1229, !"<string literal>", i1 false, i1 false}
!1229 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4599, i32 3}
!1230 = !{ptr @.str.637, !1229, !"<string literal>", i1 false, i1 false}
!1231 = !{ptr @hclge_put_vector._entry, !1229, !"_entry", i1 false, i1 false}
!1232 = !{ptr @hclge_put_vector._entry_ptr, !1229, !"_entry_ptr", i1 false, i1 false}
!1233 = !{ptr @.str.638, !1234, !"<string literal>", i1 false, i1 false}
!1234 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4850, i32 3}
!1235 = !{ptr @.str.639, !1234, !"<string literal>", i1 false, i1 false}
!1236 = !{ptr @hclge_map_ring_to_vector._entry, !1234, !"_entry", i1 false, i1 false}
!1237 = !{ptr @hclge_map_ring_to_vector._entry_ptr, !1234, !"_entry_ptr", i1 false, i1 false}
!1238 = !{ptr @.str.640, !1239, !"<string literal>", i1 false, i1 false}
!1239 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4870, i32 3}
!1240 = !{ptr @.str.641, !1239, !"<string literal>", i1 false, i1 false}
!1241 = !{ptr @hclge_unmap_ring_frm_vector._entry, !1239, !"_entry", i1 false, i1 false}
!1242 = !{ptr @hclge_unmap_ring_frm_vector._entry_ptr, !1239, !"_entry_ptr", i1 false, i1 false}
!1243 = !{ptr @.str.643, !1244, !"<string literal>", i1 false, i1 false}
!1244 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4877, i32 3}
!1245 = !{ptr @hclge_unmap_ring_frm_vector._entry.642, !1244, !"_entry", i1 false, i1 false}
!1246 = !{ptr @hclge_unmap_ring_frm_vector._entry_ptr.644, !1244, !"_entry_ptr", i1 false, i1 false}
!1247 = !{ptr @.str.645, !1248, !"<string literal>", i1 false, i1 false}
!1248 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 10185, i32 3}
!1249 = !{ptr @.str.646, !1248, !"<string literal>", i1 false, i1 false}
!1250 = !{ptr @hclge_set_vf_vlan_filter._entry, !1248, !"_entry", i1 false, i1 false}
!1251 = !{ptr @hclge_set_vf_vlan_filter._entry_ptr, !1248, !"_entry_ptr", i1 false, i1 false}
!1252 = !{ptr @.str.647, !1253, !"<string literal>", i1 false, i1 false}
!1253 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 4267, i32 2}
!1254 = !{ptr @.str.648, !1253, !"<string literal>", i1 false, i1 false}
!1255 = !{ptr @hclge_reset_event._entry, !1253, !"_entry", i1 false, i1 false}
!1256 = !{ptr @hclge_reset_event._entry_ptr, !1253, !"_entry_ptr", i1 false, i1 false}
!1257 = !{ptr @.str.649, !1258, !"<string literal>", i1 false, i1 false}
!1258 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11911, i32 3}
!1259 = !{ptr @.str.650, !1258, !"<string literal>", i1 false, i1 false}
!1260 = !{ptr @hclge_set_channels._entry, !1258, !"_entry", i1 false, i1 false}
!1261 = !{ptr @hclge_set_channels._entry_ptr, !1258, !"_entry_ptr", i1 false, i1 false}
!1262 = !{ptr @.str.652, !1263, !"<string literal>", i1 false, i1 false}
!1263 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11934, i32 3}
!1264 = !{ptr @hclge_set_channels._entry.651, !1263, !"_entry", i1 false, i1 false}
!1265 = !{ptr @hclge_set_channels._entry_ptr.653, !1263, !"_entry_ptr", i1 false, i1 false}
!1266 = !{ptr @.str.655, !1267, !"<string literal>", i1 false, i1 false}
!1267 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11941, i32 3}
!1268 = !{ptr @hclge_set_channels._entry.654, !1267, !"_entry", i1 false, i1 false}
!1269 = !{ptr @hclge_set_channels._entry_ptr.656, !1267, !"_entry_ptr", i1 false, i1 false}
!1270 = !{ptr @.str.657, !1271, !"<string literal>", i1 false, i1 false}
!1271 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12420, i32 3}
!1272 = !{ptr @.str.658, !1271, !"<string literal>", i1 false, i1 false}
!1273 = !{ptr @hclge_set_led_status._entry, !1271, !"_entry", i1 false, i1 false}
!1274 = !{ptr @hclge_set_led_status._entry_ptr, !1271, !"_entry_ptr", i1 false, i1 false}
!1275 = !{ptr @.str.659, !1276, !"<string literal>", i1 false, i1 false}
!1276 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6341, i32 3}
!1277 = !{ptr @.str.660, !1276, !"<string literal>", i1 false, i1 false}
!1278 = !{ptr @hclge_add_fd_entry._entry, !1276, !"_entry", i1 false, i1 false}
!1279 = !{ptr @hclge_add_fd_entry._entry_ptr, !1276, !"_entry_ptr", i1 false, i1 false}
!1280 = !{ptr @.str.662, !1281, !"<string literal>", i1 false, i1 false}
!1281 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6347, i32 3}
!1282 = !{ptr @hclge_add_fd_entry._entry.661, !1281, !"_entry", i1 false, i1 false}
!1283 = !{ptr @hclge_add_fd_entry._entry_ptr.663, !1281, !"_entry_ptr", i1 false, i1 false}
!1284 = !{ptr @.str.664, !1285, !"<string literal>", i1 false, i1 false}
!1285 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5971, i32 3}
!1286 = !{ptr @.str.665, !1285, !"<string literal>", i1 false, i1 false}
!1287 = !{ptr @hclge_fd_check_spec._entry, !1285, !"_entry", i1 false, i1 false}
!1288 = !{ptr @hclge_fd_check_spec._entry_ptr, !1285, !"_entry_ptr", i1 false, i1 false}
!1289 = !{ptr @.str.667, !1290, !"<string literal>", i1 false, i1 false}
!1290 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6007, i32 4}
!1291 = !{ptr @hclge_fd_check_spec._entry.666, !1290, !"_entry", i1 false, i1 false}
!1292 = !{ptr @hclge_fd_check_spec._entry_ptr.668, !1290, !"_entry_ptr", i1 false, i1 false}
!1293 = !{ptr @.str.670, !1294, !"<string literal>", i1 false, i1 false}
!1294 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6016, i32 3}
!1295 = !{ptr @hclge_fd_check_spec._entry.669, !1294, !"_entry", i1 false, i1 false}
!1296 = !{ptr @hclge_fd_check_spec._entry_ptr.671, !1294, !"_entry_ptr", i1 false, i1 false}
!1297 = !{ptr @.str.673, !1298, !"<string literal>", i1 false, i1 false}
!1298 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6023, i32 3}
!1299 = !{ptr @hclge_fd_check_spec._entry.672, !1298, !"_entry", i1 false, i1 false}
!1300 = !{ptr @hclge_fd_check_spec._entry_ptr.674, !1298, !"_entry_ptr", i1 false, i1 false}
!1301 = !{ptr @.str.675, !1302, !"<string literal>", i1 false, i1 false}
!1302 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5931, i32 3}
!1303 = !{ptr @.str.676, !1302, !"<string literal>", i1 false, i1 false}
!1304 = !{ptr @hclge_fd_parse_user_def_field._entry, !1302, !"_entry", i1 false, i1 false}
!1305 = !{ptr @hclge_fd_parse_user_def_field._entry_ptr, !1302, !"_entry_ptr", i1 false, i1 false}
!1306 = !{ptr @.str.678, !1307, !"<string literal>", i1 false, i1 false}
!1307 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5936, i32 3}
!1308 = !{ptr @hclge_fd_parse_user_def_field._entry.677, !1307, !"_entry", i1 false, i1 false}
!1309 = !{ptr @hclge_fd_parse_user_def_field._entry_ptr.679, !1307, !"_entry_ptr", i1 false, i1 false}
!1310 = !{ptr @.str.681, !1311, !"<string literal>", i1 false, i1 false}
!1311 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5943, i32 3}
!1312 = !{ptr @hclge_fd_parse_user_def_field._entry.680, !1311, !"_entry", i1 false, i1 false}
!1313 = !{ptr @hclge_fd_parse_user_def_field._entry_ptr.682, !1311, !"_entry_ptr", i1 false, i1 false}
!1314 = !{ptr @.str.684, !1315, !"<string literal>", i1 false, i1 false}
!1315 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5949, i32 3}
!1316 = !{ptr @hclge_fd_parse_user_def_field._entry.683, !1315, !"_entry", i1 false, i1 false}
!1317 = !{ptr @hclge_fd_parse_user_def_field._entry_ptr.685, !1315, !"_entry_ptr", i1 false, i1 false}
!1318 = !{ptr @.str.686, !1319, !"<string literal>", i1 false, i1 false}
!1319 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5839, i32 4}
!1320 = !{ptr @.str.687, !1319, !"<string literal>", i1 false, i1 false}
!1321 = !{ptr @hclge_fd_check_ext_tuple._entry, !1319, !"_entry", i1 false, i1 false}
!1322 = !{ptr @hclge_fd_check_ext_tuple._entry_ptr, !1319, !"_entry_ptr", i1 false, i1 false}
!1323 = !{ptr @.str.689, !1324, !"<string literal>", i1 false, i1 false}
!1324 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5848, i32 4}
!1325 = !{ptr @hclge_fd_check_ext_tuple._entry.688, !1324, !"_entry", i1 false, i1 false}
!1326 = !{ptr @hclge_fd_check_ext_tuple._entry_ptr.690, !1324, !"_entry_ptr", i1 false, i1 false}
!1327 = !{ptr @.str.692, !1328, !"<string literal>", i1 false, i1 false}
!1328 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5860, i32 4}
!1329 = !{ptr @hclge_fd_check_ext_tuple._entry.691, !1328, !"_entry", i1 false, i1 false}
!1330 = !{ptr @hclge_fd_check_ext_tuple._entry_ptr.693, !1328, !"_entry_ptr", i1 false, i1 false}
!1331 = !{ptr @.str.694, !1332, !"<string literal>", i1 false, i1 false}
!1332 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6304, i32 4}
!1333 = !{ptr @.str.695, !1332, !"<string literal>", i1 false, i1 false}
!1334 = !{ptr @hclge_fd_parse_ring_cookie._entry, !1332, !"_entry", i1 false, i1 false}
!1335 = !{ptr @hclge_fd_parse_ring_cookie._entry_ptr, !1332, !"_entry_ptr", i1 false, i1 false}
!1336 = !{ptr @.str.697, !1337, !"<string literal>", i1 false, i1 false}
!1337 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6314, i32 4}
!1338 = !{ptr @hclge_fd_parse_ring_cookie._entry.696, !1337, !"_entry", i1 false, i1 false}
!1339 = !{ptr @hclge_fd_parse_ring_cookie._entry_ptr.698, !1337, !"_entry_ptr", i1 false, i1 false}
!1340 = !{ptr @.str.699, !1341, !"<string literal>", i1 false, i1 false}
!1341 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6252, i32 3}
!1342 = !{ptr @.str.700, !1341, !"<string literal>", i1 false, i1 false}
!1343 = !{ptr @hclge_add_fd_entry_common._entry, !1341, !"_entry", i1 false, i1 false}
!1344 = !{ptr @hclge_add_fd_entry_common._entry_ptr, !1341, !"_entry_ptr", i1 false, i1 false}
!1345 = !{ptr @.str.701, !1346, !"<string literal>", i1 false, i1 false}
!1346 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5157, i32 2}
!1347 = !{ptr @.str.702, !1346, !"<string literal>", i1 false, i1 false}
!1348 = !{ptr @hclge_fd_check_user_def_refcnt._entry, !1346, !"_entry", i1 false, i1 false}
!1349 = !{ptr @hclge_fd_check_user_def_refcnt._entry_ptr, !1346, !"_entry_ptr", i1 false, i1 false}
!1350 = !{ptr @.str.703, !1351, !"<string literal>", i1 false, i1 false}
!1351 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 5222, i32 3}
!1352 = !{ptr @.str.704, !1351, !"<string literal>", i1 false, i1 false}
!1353 = !{ptr @hclge_update_fd_list._entry, !1351, !"_entry", i1 false, i1 false}
!1354 = !{ptr @hclge_update_fd_list._entry_ptr, !1351, !"_entry_ptr", i1 false, i1 false}
!1355 = !{ptr @.str.705, !1356, !"<string literal>", i1 false, i1 false}
!1356 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 6407, i32 3}
!1357 = !{ptr @.str.706, !1356, !"<string literal>", i1 false, i1 false}
!1358 = !{ptr @hclge_del_fd_entry._entry, !1356, !"_entry", i1 false, i1 false}
!1359 = !{ptr @hclge_del_fd_entry._entry_ptr, !1356, !"_entry_ptr", i1 false, i1 false}
!1360 = !{ptr @.str.707, !1361, !"<string literal>", i1 false, i1 false}
!1361 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3380, i32 3}
!1362 = !{ptr @.str.708, !1361, !"<string literal>", i1 false, i1 false}
!1363 = !{ptr @hclge_set_vf_link_state._entry, !1361, !"_entry", i1 false, i1 false}
!1364 = !{ptr @hclge_set_vf_link_state._entry_ptr, !1361, !"_entry_ptr", i1 false, i1 false}
!1365 = !{ptr @.str.709, !1366, !"<string literal>", i1 false, i1 false}
!1366 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11509, i32 3}
!1367 = !{ptr @.str.710, !1366, !"<string literal>", i1 false, i1 false}
!1368 = !{ptr @hclge_set_vf_spoofchk._entry, !1366, !"_entry", i1 false, i1 false}
!1369 = !{ptr @hclge_set_vf_spoofchk._entry_ptr, !1366, !"_entry_ptr", i1 false, i1 false}
!1370 = !{ptr @.str.712, !1371, !"<string literal>", i1 false, i1 false}
!1371 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11513, i32 3}
!1372 = !{ptr @hclge_set_vf_spoofchk._entry.711, !1371, !"_entry", i1 false, i1 false}
!1373 = !{ptr @hclge_set_vf_spoofchk._entry_ptr.713, !1371, !"_entry_ptr", i1 false, i1 false}
!1374 = !{ptr @.str.714, !1375, !"<string literal>", i1 false, i1 false}
!1375 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 11590, i32 3}
!1376 = !{ptr @.str.715, !1375, !"<string literal>", i1 false, i1 false}
!1377 = !{ptr @hclge_vf_rate_param_check._entry, !1375, !"_entry", i1 false, i1 false}
!1378 = !{ptr @hclge_vf_rate_param_check._entry_ptr, !1375, !"_entry_ptr", i1 false, i1 false}
!1379 = !{ptr @.str.716, !1380, !"<string literal>", i1 false, i1 false}
!1380 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8979, i32 3}
!1381 = !{ptr @.str.717, !1380, !"<string literal>", i1 false, i1 false}
!1382 = !{ptr @hclge_set_vf_mac._entry, !1380, !"_entry", i1 false, i1 false}
!1383 = !{ptr @hclge_set_vf_mac._entry_ptr, !1380, !"_entry_ptr", i1 false, i1 false}
!1384 = !{ptr @.str.719, !1385, !"<string literal>", i1 false, i1 false}
!1385 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8988, i32 3}
!1386 = !{ptr @hclge_set_vf_mac._entry.718, !1385, !"_entry", i1 false, i1 false}
!1387 = !{ptr @hclge_set_vf_mac._entry_ptr.720, !1385, !"_entry_ptr", i1 false, i1 false}
!1388 = !{ptr @.str.722, !1389, !"<string literal>", i1 false, i1 false}
!1389 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 8994, i32 2}
!1390 = !{ptr @hclge_set_vf_mac._entry.721, !1389, !"_entry", i1 false, i1 false}
!1391 = !{ptr @hclge_set_vf_mac._entry_ptr.723, !1389, !"_entry_ptr", i1 false, i1 false}
!1392 = !{ptr @.str.724, !1393, !"<string literal>", i1 false, i1 false}
!1393 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12544, i32 3}
!1394 = !{ptr @.str.725, !1393, !"<string literal>", i1 false, i1 false}
!1395 = !{ptr @hclge_module_existed._entry, !1393, !"_entry", i1 false, i1 false}
!1396 = !{ptr @hclge_module_existed._entry_ptr, !1393, !"_entry_ptr", i1 false, i1 false}
!1397 = !{ptr @.str.726, !1398, !"<string literal>", i1 false, i1 false}
!1398 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12585, i32 3}
!1399 = !{ptr @.str.727, !1398, !"<string literal>", i1 false, i1 false}
!1400 = !{ptr @hclge_get_sfp_eeprom_info._entry, !1398, !"_entry", i1 false, i1 false}
!1401 = !{ptr @hclge_get_sfp_eeprom_info._entry_ptr, !1398, !"_entry_ptr", i1 false, i1 false}
!1402 = !{ptr @.str.728, !1403, !"<string literal>", i1 false, i1 false}
!1403 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7170, i32 3}
!1404 = !{ptr @.str.729, !1403, !"<string literal>", i1 false, i1 false}
!1405 = !{ptr @hclge_add_cls_flower._entry, !1403, !"_entry", i1 false, i1 false}
!1406 = !{ptr @hclge_add_cls_flower._entry_ptr, !1403, !"_entry_ptr", i1 false, i1 false}
!1407 = !{ptr @.str.730, !1408, !"<string literal>", i1 false, i1 false}
!1408 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7140, i32 3}
!1409 = !{ptr @.str.731, !1408, !"<string literal>", i1 false, i1 false}
!1410 = !{ptr @hclge_check_cls_flower._entry, !1408, !"_entry", i1 false, i1 false}
!1411 = !{ptr @hclge_check_cls_flower._entry_ptr, !1408, !"_entry_ptr", i1 false, i1 false}
!1412 = !{ptr @.str.733, !1413, !"<string literal>", i1 false, i1 false}
!1413 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7146, i32 3}
!1414 = !{ptr @hclge_check_cls_flower._entry.732, !1413, !"_entry", i1 false, i1 false}
!1415 = !{ptr @hclge_check_cls_flower._entry_ptr.734, !1413, !"_entry_ptr", i1 false, i1 false}
!1416 = !{ptr @.str.736, !1417, !"<string literal>", i1 false, i1 false}
!1417 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7153, i32 3}
!1418 = !{ptr @hclge_check_cls_flower._entry.735, !1417, !"_entry", i1 false, i1 false}
!1419 = !{ptr @hclge_check_cls_flower._entry_ptr.737, !1417, !"_entry_ptr", i1 false, i1 false}
!1420 = !{ptr @.str.738, !1421, !"<string literal>", i1 false, i1 false}
!1421 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 7120, i32 3}
!1422 = !{ptr @.str.739, !1421, !"<string literal>", i1 false, i1 false}
!1423 = !{ptr @hclge_parse_cls_flower._entry, !1421, !"_entry", i1 false, i1 false}
!1424 = !{ptr @hclge_parse_cls_flower._entry_ptr, !1421, !"_entry_ptr", i1 false, i1 false}
!1425 = !{ptr @.str.740, !1426, !"<string literal>", i1 false, i1 false}
!1426 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3150, i32 3}
!1427 = !{ptr @.str.741, !1426, !"<string literal>", i1 false, i1 false}
!1428 = !{ptr @hclge_get_phy_link_ksettings._entry, !1426, !"_entry", i1 false, i1 false}
!1429 = !{ptr @hclge_get_phy_link_ksettings._entry_ptr, !1426, !"_entry_ptr", i1 false, i1 false}
!1430 = !{ptr @.str.742, !1431, !"<string literal>", i1 false, i1 false}
!1431 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 3219, i32 3}
!1432 = !{ptr @.str.743, !1431, !"<string literal>", i1 false, i1 false}
!1433 = !{ptr @hclge_set_phy_link_ksettings._entry, !1431, !"_entry", i1 false, i1 false}
!1434 = !{ptr @hclge_set_phy_link_ksettings._entry_ptr, !1431, !"_entry_ptr", i1 false, i1 false}
!1435 = !{ptr @.str.744, !1436, !"<string literal>", i1 false, i1 false}
!1436 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 12650, i32 3}
!1437 = !{ptr @.str.745, !1436, !"<string literal>", i1 false, i1 false}
!1438 = !{ptr @hclge_get_link_diagnosis_info._entry, !1436, !"_entry", i1 false, i1 false}
!1439 = !{ptr @hclge_get_link_diagnosis_info._entry_ptr, !1436, !"_entry_ptr", i1 false, i1 false}
!1440 = !{ptr @ae_algo_pci_tbl, !1441, !"ae_algo_pci_tbl", i1 false, i1 false}
!1441 = !{!"../drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c", i32 79, i32 35}
!1442 = !{!"sp"}
!1443 = !{i32 1, !"wchar_size", i32 2}
!1444 = !{i32 1, !"min_enum_size", i32 4}
!1445 = !{i32 8, !"branch-target-enforcement", i32 0}
!1446 = !{i32 8, !"sign-return-address", i32 0}
!1447 = !{i32 8, !"sign-return-address-all", i32 0}
!1448 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1449 = !{i32 7, !"uwtable", i32 1}
!1450 = !{i32 7, !"frame-pointer", i32 2}
!1451 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1452 = !{!"branch_weights", i32 1, i32 2000}
!1453 = !{i32 0, i32 33}
!1454 = !{i64 2149297853, i64 2149297858, i64 2149297871, i64 2149297915, i64 2149297949, i64 2149297970}
!1455 = !{ptr @hclge_rm_mc_addr_common, ptr @hclge_rm_uc_addr_common}
!1456 = !{i8 0, i8 2}
!1457 = !{i32 4, i32 9}
!1458 = !{i64 2159770607}
!1459 = !{i64 7458674}
!1460 = !{i64 2159052763}
!1461 = !{i64 7459092}
!1462 = !{i64 2159056186}
!1463 = !{!"auto-init"}
!1464 = !{i64 2160063849}
!1465 = !{ptr @hclge_add_mc_addr_common, ptr @hclge_add_uc_addr_common}
