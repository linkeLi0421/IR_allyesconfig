; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/intel/e1000/e1000_hw.c_pt.bc'
source_filename = "../drivers/net/ethernet/intel/e1000/e1000_hw.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.atomic_t = type { i32 }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.spinlock = type { %union.anon.14 }
%union.anon.14 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.15 }
%union.anon.15 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.e1000_hw = type { ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, i32, i32, i32, i32, i32, i32, %struct.e1000_eeprom_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.e1000_host_mng_dhcp_cookie, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, [6 x i8], [6 x i8], i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.e1000_eeprom_info = type { i32, i16, i16, i16, i16, i16 }
%struct.e1000_host_mng_dhcp_cookie = type { i32, i16, i8, i8, i32, i8, i8, i16 }
%struct.e1000_phy_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@e1000_reset_hw.__UNIQUE_ID_ddebug501 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, i8 0, i8 96, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"e1000\00", [26 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"e1000_reset_hw\00", [17 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"drivers/net/ethernet/intel/e1000/e1000_hw.c\00", [52 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Disabling MWI on 82542 rev 2.0\0A\00", [32 x i8] zeroinitializer }, align 32
@e1000_reset_hw.__UNIQUE_ID_ddebug502 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.4, i8 0, i8 97, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.4 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Masking off all interrupts\0A\00", [36 x i8] zeroinitializer }, align 32
@e1000_reset_hw.__UNIQUE_ID_ddebug503 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.5, i8 0, i8 105, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.5 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Issuing a global reset to MAC\0A\00", [33 x i8] zeroinitializer }, align 32
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@e1000_reset_hw.__UNIQUE_ID_ddebug504 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.4, i8 0, i8 124, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_init_hw.__UNIQUE_ID_ddebug505 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.6, ptr @.str.2, ptr @.str.7, i8 0, i8 -123, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.6 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"e1000_init_hw\00", [18 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Error Initializing Identification LED\0A\00", [57 x i8] zeroinitializer }, align 32
@e1000_init_hw.__UNIQUE_ID_ddebug506 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.6, ptr @.str.2, ptr @.str.8, i8 0, i8 -121, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.8 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Initializing the IEEE VLAN\0A\00", [36 x i8] zeroinitializer }, align 32
@e1000_init_hw.__UNIQUE_ID_ddebug507 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.6, ptr @.str.2, ptr @.str.3, i8 0, i8 -119, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_init_hw.__UNIQUE_ID_ddebug508 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.6, ptr @.str.2, ptr @.str.9, i8 0, i8 -113, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.9 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Zeroing the MTA\0A\00", [47 x i8] zeroinitializer }, align 32
@e1000_setup_link.__UNIQUE_ID_ddebug509 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.10, ptr @.str.2, ptr @.str.11, i8 0, i8 -81, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.10 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"e1000_setup_link\00", [47 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"EEPROM Read Error\0A\00", [45 x i8] zeroinitializer }, align 32
@e1000_setup_link.__UNIQUE_ID_ddebug510 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.10, ptr @.str.2, ptr @.str.12, i8 0, i8 -75, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.12 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"After fix-ups FlowControl is now = %x\0A\00", [57 x i8] zeroinitializer }, align 32
@e1000_setup_link.__UNIQUE_ID_ddebug511 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.10, ptr @.str.2, ptr @.str.11, i8 0, i8 -71, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_setup_link.__UNIQUE_ID_ddebug512 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.10, ptr @.str.2, ptr @.str.13, i8 0, i8 -67, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.13 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"Initializing the Flow Control address, type and timer regs\0A\00", [36 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug541 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.15, i8 1, i8 125, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.14 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"e1000_phy_setup_autoneg\00", [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"autoneg_advertised %x\0A\00", [41 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug542 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.16, i8 1, i8 126, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.16 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Advertise 10mb Half duplex\0A\00", [36 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug543 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.17, i8 1, i8 -128, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.17 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Advertise 10mb Full duplex\0A\00", [36 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug544 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.18, i8 1, i8 -127, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.18 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Advertise 100mb Half duplex\0A\00", [35 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug545 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.19, i8 1, i8 -125, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.19 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Advertise 100mb Full duplex\0A\00", [35 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug546 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.20, i8 1, i8 -124, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.20 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"Advertise 1000mb Half duplex requested, request denied!\0A\00", [39 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug547 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.21, i8 1, i8 -122, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.21 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Advertise 1000mb Full duplex\0A\00", [34 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug548 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.22, i8 1, i8 -109, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.22 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Flow control param set incorrectly\0A\00", [60 x i8] zeroinitializer }, align 32
@e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug549 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.14, ptr @.str.2, ptr @.str.23, i8 1, i8 -107, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.23 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Auto-Neg Advertising %x\0A\00", [39 x i8] zeroinitializer }, align 32
@e1000_force_mac_fc.__UNIQUE_ID_ddebug558 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.24, ptr @.str.2, ptr @.str.22, i8 1, i8 -6, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.24 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"e1000_force_mac_fc\00", [45 x i8] zeroinitializer }, align 32
@e1000_check_for_link.__UNIQUE_ID_ddebug578 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.25, ptr @.str.2, ptr @.str.26, i8 2, i8 106, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.25 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"e1000_check_for_link\00", [43 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Error configuring MAC to PHY settings\0A\00", [57 x i8] zeroinitializer }, align 32
@e1000_check_for_link.__UNIQUE_ID_ddebug579 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.25, ptr @.str.2, ptr @.str.27, i8 2, i8 109, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.27 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Error configuring flow control\0A\00", [32 x i8] zeroinitializer }, align 32
@e1000_check_for_link.__UNIQUE_ID_ddebug580 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.25, ptr @.str.2, ptr @.str.28, i8 2, i8 114, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.28 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Error getting link speed and duplex\0A\00", [59 x i8] zeroinitializer }, align 32
@e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug581 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.29, ptr @.str.2, ptr @.str.30, i8 2, i8 -128, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.29 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"e1000_get_speed_and_duplex\00", [37 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"1000 Mbs, \00", [21 x i8] zeroinitializer }, align 32
@e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug582 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.29, ptr @.str.2, ptr @.str.31, i8 2, i8 -127, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.31 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"100 Mbs, \00", [22 x i8] zeroinitializer }, align 32
@e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug583 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.29, ptr @.str.2, ptr @.str.32, i8 2, i8 -126, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.32 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"10 Mbs, \00", [23 x i8] zeroinitializer }, align 32
@e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug584 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.29, ptr @.str.2, ptr @.str.33, i8 2, i8 -125, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.33 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Full Duplex\0A\00", [19 x i8] zeroinitializer }, align 32
@e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug585 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.29, ptr @.str.2, ptr @.str.34, i8 2, i8 -124, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.34 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c" Half Duplex\0A\00", [18 x i8] zeroinitializer }, align 32
@e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug586 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.29, ptr @.str.2, ptr @.str.35, i8 2, i8 -124, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.35 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"1000 Mbs, Full Duplex\0A\00", [41 x i8] zeroinitializer }, align 32
@e1000_phy_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.14 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.112, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@e1000_phy_hw_reset.__UNIQUE_ID_ddebug596 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.36, ptr @.str.2, ptr @.str.37, i8 2, i8 -8, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.36 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"e1000_phy_hw_reset\00", [45 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Resetting Phy...\0A\00", [46 x i8] zeroinitializer }, align 32
@e1000_phy_get_info.__UNIQUE_ID_ddebug600 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.38, ptr @.str.2, ptr @.str.39, i8 3, i8 81, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.38 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"e1000_phy_get_info\00", [45 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"PHY info is only valid for copper media\0A\00", [55 x i8] zeroinitializer }, align 32
@e1000_phy_get_info.__UNIQUE_ID_ddebug601 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.38, ptr @.str.2, ptr @.str.40, i8 3, i8 85, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.40 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"PHY info is only valid if link is up\0A\00", [58 x i8] zeroinitializer }, align 32
@e1000_validate_mdi_setting.__UNIQUE_ID_ddebug602 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.41, ptr @.str.2, ptr @.str.42, i8 3, i8 89, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.41 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"e1000_validate_mdi_setting\00", [37 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Invalid MDI setting detected\0A\00", [34 x i8] zeroinitializer }, align 32
@e1000_eeprom_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.120, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @e1000_eeprom_lock, i64 52), ptr getelementptr (i8, ptr @e1000_eeprom_lock, i64 52) }, ptr @e1000_eeprom_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.121, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@e1000_validate_eeprom_checksum.__UNIQUE_ID_ddebug606 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.43, ptr @.str.2, ptr @.str.11, i8 3, i8 -33, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.43 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"e1000_validate_eeprom_checksum\00", [33 x i8] zeroinitializer }, align 32
@e1000_validate_eeprom_checksum.__UNIQUE_ID_ddebug607 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.43, ptr @.str.2, ptr @.str.44, i8 3, i8 -29, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.44 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"EEPROM Checksum Invalid\0A\00", [39 x i8] zeroinitializer }, align 32
@e1000_update_eeprom_checksum.__UNIQUE_ID_ddebug608 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.45, ptr @.str.2, ptr @.str.11, i8 3, i8 -25, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.45 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"e1000_update_eeprom_checksum\00", [35 x i8] zeroinitializer }, align 32
@e1000_update_eeprom_checksum.__UNIQUE_ID_ddebug609 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.45, ptr @.str.2, ptr @.str.46, i8 3, i8 -23, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.46 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"EEPROM Write Error\0A\00", [44 x i8] zeroinitializer }, align 32
@e1000_read_mac_addr.__UNIQUE_ID_ddebug612 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.47, ptr @.str.2, ptr @.str.11, i8 4, i8 34, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.47 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"e1000_read_mac_addr\00", [44 x i8] zeroinitializer }, align 32
@e1000_reset_adaptive.__UNIQUE_ID_ddebug616 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.48, ptr @.str.2, ptr @.str.49, i8 4, i8 -91, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.48 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"e1000_reset_adaptive\00", [43 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Not in Adaptive IFS mode!\0A\00", [37 x i8] zeroinitializer }, align 32
@e1000_update_adaptive.__UNIQUE_ID_ddebug617 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.50, ptr @.str.2, ptr @.str.49, i8 4, i8 -82, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.50 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"e1000_update_adaptive\00", [42 x i8] zeroinitializer }, align 32
@e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug513 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.51, ptr @.str.2, ptr @.str.22, i8 0, i8 -38, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.51 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"e1000_setup_fiber_serdes_link\00", [34 x i8] zeroinitializer }, align 32
@e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug514 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.51, ptr @.str.2, ptr @.str.52, i8 0, i8 -35, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.52 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Auto-negotiation enabled\0A\00", [38 x i8] zeroinitializer }, align 32
@e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug515 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.51, ptr @.str.2, ptr @.str.53, i8 0, i8 -31, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.53 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Looking for Link\0A\00", [46 x i8] zeroinitializer }, align 32
@e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug516 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.51, ptr @.str.2, ptr @.str.54, i8 0, i8 -29, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.54 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Never got a valid link from auto-neg!!!\0A\00", [55 x i8] zeroinitializer }, align 32
@e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug517 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.51, ptr @.str.2, ptr @.str.55, i8 0, i8 -26, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.55 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Error while checking for link\0A\00", [33 x i8] zeroinitializer }, align 32
@e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug518 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.51, ptr @.str.2, ptr @.str.56, i8 0, i8 -25, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.56 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Valid Link Found\0A\00", [46 x i8] zeroinitializer }, align 32
@e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug519 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.51, ptr @.str.2, ptr @.str.57, i8 0, i8 -24, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.57 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"No Signal Detected\0A\00", [44 x i8] zeroinitializer }, align 32
@e1000_setup_copper_link.__UNIQUE_ID_ddebug536 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.58, ptr @.str.2, ptr @.str.59, i8 1, i8 103, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.58 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"e1000_setup_copper_link\00", [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"gbe_dhg_phy_setup failed!\0A\00", [37 x i8] zeroinitializer }, align 32
@e1000_setup_copper_link.__UNIQUE_ID_ddebug537 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.58, ptr @.str.2, ptr @.str.60, i8 1, i8 107, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.60 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Forcing speed and duplex\0A\00", [38 x i8] zeroinitializer }, align 32
@e1000_setup_copper_link.__UNIQUE_ID_ddebug538 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.58, ptr @.str.2, ptr @.str.61, i8 1, i8 108, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.61 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Error Forcing Speed and Duplex\0A\00", [32 x i8] zeroinitializer }, align 32
@e1000_setup_copper_link.__UNIQUE_ID_ddebug539 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.58, ptr @.str.2, ptr @.str.62, i8 1, i8 113, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.62 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Valid link established!!!\0A\00", [37 x i8] zeroinitializer }, align 32
@e1000_setup_copper_link.__UNIQUE_ID_ddebug540 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.58, ptr @.str.2, ptr @.str.63, i8 1, i8 115, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.63 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Unable to establish link!!!\0A\00", [35 x i8] zeroinitializer }, align 32
@e1000_copper_link_preconfig.__UNIQUE_ID_ddebug524 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.64, ptr @.str.2, ptr @.str.65, i8 1, i8 1, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.64 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"e1000_copper_link_preconfig\00", [36 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Error, did not detect valid phy.\0A\00", [62 x i8] zeroinitializer }, align 32
@e1000_copper_link_preconfig.__UNIQUE_ID_ddebug525 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.64, ptr @.str.2, ptr @.str.66, i8 1, i8 1, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.66 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Phy ID = %x\0A\00", [19 x i8] zeroinitializer }, align 32
@e1000_detect_gig_phy.__UNIQUE_ID_ddebug597 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.67, ptr @.str.2, ptr @.str.68, i8 3, i8 28, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.67 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"e1000_detect_gig_phy\00", [43 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Invalid MAC type %d\0A\00", [43 x i8] zeroinitializer }, align 32
@e1000_detect_gig_phy.__UNIQUE_ID_ddebug598 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.67, ptr @.str.2, ptr @.str.69, i8 3, i8 30, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.69 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"PHY ID 0x%X detected\0A\00", [42 x i8] zeroinitializer }, align 32
@e1000_detect_gig_phy.__UNIQUE_ID_ddebug599 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.67, ptr @.str.2, ptr @.str.70, i8 3, i8 31, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.70 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Invalid PHY ID 0x%X\0A\00", [43 x i8] zeroinitializer }, align 32
@e1000_copper_link_igp_setup.__UNIQUE_ID_ddebug526 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.71, ptr @.str.2, ptr @.str.72, i8 1, i8 11, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.71 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"e1000_copper_link_igp_setup\00", [36 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Error Resetting the PHY\0A\00", [39 x i8] zeroinitializer }, align 32
@e1000_copper_link_igp_setup.__UNIQUE_ID_ddebug527 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.71, ptr @.str.2, ptr @.str.73, i8 1, i8 16, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.73 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Error Disabling LPLU D3\0A\00", [39 x i8] zeroinitializer }, align 32
@e1000_copper_link_mgp_setup.__UNIQUE_ID_ddebug528 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.74, ptr @.str.2, ptr @.str.72, i8 1, i8 67, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.74 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"e1000_copper_link_mgp_setup\00", [36 x i8] zeroinitializer }, align 32
@gbe_dhg_phy_setup.__UNIQUE_ID_ddebug521 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.75, ptr @.str.2, ptr @.str.76, i8 0, i8 -16, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.75 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"gbe_dhg_phy_setup\00", [46 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"e1000_copper_link_rtl_setup failed!\0A\00", [59 x i8] zeroinitializer }, align 32
@gbe_dhg_phy_setup.__UNIQUE_ID_ddebug522 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.75, ptr @.str.2, ptr @.str.76, i8 0, i8 -11, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@gbe_dhg_phy_setup.__UNIQUE_ID_ddebug523 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.75, ptr @.str.2, ptr @.str.72, i8 0, i8 -9, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_copper_link_rtl_setup.__UNIQUE_ID_ddebug520 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.77, ptr @.str.2, ptr @.str.72, i8 0, i8 -20, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.77 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"e1000_copper_link_rtl_setup\00", [36 x i8] zeroinitializer }, align 32
@e1000_copper_link_autoneg.__UNIQUE_ID_ddebug529 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.78, ptr @.str.2, ptr @.str.79, i8 1, i8 76, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.78 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"e1000_copper_link_autoneg\00", [38 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Reconfiguring auto-neg advertisement params\0A\00", [51 x i8] zeroinitializer }, align 32
@e1000_copper_link_autoneg.__UNIQUE_ID_ddebug530 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.78, ptr @.str.2, ptr @.str.80, i8 1, i8 76, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.80 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Error Setting up Auto-Negotiation\0A\00", [61 x i8] zeroinitializer }, align 32
@e1000_copper_link_autoneg.__UNIQUE_ID_ddebug531 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.78, ptr @.str.2, ptr @.str.81, i8 1, i8 77, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.81 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Restarting Auto-Neg\0A\00", [43 x i8] zeroinitializer }, align 32
@e1000_copper_link_autoneg.__UNIQUE_ID_ddebug532 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.78, ptr @.str.2, ptr @.str.82, i8 1, i8 82, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.82 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Error while waiting for autoneg to complete\0A\00", [51 x i8] zeroinitializer }, align 32
@e1000_wait_autoneg.__UNIQUE_ID_ddebug587 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.83, ptr @.str.2, ptr @.str.84, i8 2, i8 -113, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.83 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"e1000_wait_autoneg\00", [45 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Waiting for Auto-Neg to complete.\0A\00", [61 x i8] zeroinitializer }, align 32
@e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug550 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.85, ptr @.str.2, ptr @.str.86, i8 1, i8 -99, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.85 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"e1000_phy_force_speed_duplex\00", [35 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"hw->fc = %d\0A\00", [19 x i8] zeroinitializer }, align 32
@e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug551 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.85, ptr @.str.2, ptr @.str.33, i8 1, i8 -92, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug552 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.85, ptr @.str.2, ptr @.str.87, i8 1, i8 -90, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.87 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Half Duplex\0A\00", [19 x i8] zeroinitializer }, align 32
@e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug553 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.85, ptr @.str.2, ptr @.str.88, i8 1, i8 -87, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.88 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Forcing 100mb \00", [17 x i8] zeroinitializer }, align 32
@e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug554 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.85, ptr @.str.2, ptr @.str.89, i8 1, i8 -86, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.89 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Forcing 10mb \00", [18 x i8] zeroinitializer }, align 32
@e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug555 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.85, ptr @.str.2, ptr @.str.90, i8 1, i8 -80, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.90 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"M88E1000 PSCR: %x\0A\00", [45 x i8] zeroinitializer }, align 32
@e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug556 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.85, ptr @.str.2, ptr @.str.91, i8 1, i8 -70, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.91 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Waiting for forced speed/duplex link.\0A\00", [57 x i8] zeroinitializer }, align 32
@e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug557 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.85, ptr @.str.2, ptr @.str.92, i8 1, i8 -63, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.92 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Error Resetting PHY DSP\0A\00", [39 x i8] zeroinitializer }, align 32
@e1000_copper_link_postconfig.__UNIQUE_ID_ddebug533 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.93, ptr @.str.2, ptr @.str.26, i8 1, i8 90, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.93 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"e1000_copper_link_postconfig\00", [35 x i8] zeroinitializer }, align 32
@e1000_copper_link_postconfig.__UNIQUE_ID_ddebug534 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.93, ptr @.str.2, ptr @.str.94, i8 1, i8 92, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.94 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Error Configuring Flow Control\0A\00", [32 x i8] zeroinitializer }, align 32
@e1000_copper_link_postconfig.__UNIQUE_ID_ddebug535 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.93, ptr @.str.2, ptr @.str.95, i8 1, i8 94, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.95 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Error Configuring DSP after link up\0A\00", [59 x i8] zeroinitializer }, align 32
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug559 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.97, i8 2, i8 5, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.96 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"e1000_config_fc_after_link_up\00", [34 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Error forcing flow control settings\0A\00", [59 x i8] zeroinitializer }, align 32
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug560 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.98, i8 2, i8 26, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.98 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Flow Control = FULL.\0A\00", [42 x i8] zeroinitializer }, align 32
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug561 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.99, i8 2, i8 27, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.99 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Flow Control = RX PAUSE frames only.\0A\00", [58 x i8] zeroinitializer }, align 32
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug562 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.100, i8 2, i8 31, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.100 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Flow Control = TX PAUSE frames only.\0A\00", [58 x i8] zeroinitializer }, align 32
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug563 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.99, i8 2, i8 35, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug564 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.101, i8 2, i8 42, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.101 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Flow Control = NONE.\0A\00", [42 x i8] zeroinitializer }, align 32
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug565 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.99, i8 2, i8 43, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug566 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.28, i8 2, i8 46, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug567 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.97, i8 2, i8 49, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug568 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.96, ptr @.str.2, ptr @.str.102, i8 2, i8 50, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.102 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Copper PHY and Auto Neg has not completed.\0A\00", [52 x i8] zeroinitializer }, align 32
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug569 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.104, i8 2, i8 59, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.103 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"e1000_check_for_serdes_link_generic\00", [60 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"NOT RXing /C/, disable AutoNeg and force link.\0A\00", [48 x i8] zeroinitializer }, align 32
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug570 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.27, i8 2, i8 62, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug571 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.105, i8 2, i8 65, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.105 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"RXing /C/, enable AutoNeg and stop forcing link.\0A\00", [46 x i8] zeroinitializer }, align 32
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug572 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.106, i8 2, i8 69, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.106 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"SERDES: Link up - forced.\0A\00", [37 x i8] zeroinitializer }, align 32
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug573 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.107, i8 2, i8 70, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.107 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"SERDES: Link down - force failed.\0A\00", [61 x i8] zeroinitializer }, align 32
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug574 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.108, i8 2, i8 73, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.108 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"SERDES: Link up - autoneg completed successfully.\0A\00", [45 x i8] zeroinitializer }, align 32
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug575 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.109, i8 2, i8 74, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.109 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"SERDES: Link down - invalidcodewords detected in autoneg.\0A\00", [37 x i8] zeroinitializer }, align 32
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug576 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.110, i8 2, i8 75, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.110 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"SERDES: Link down - no sync.\0A\00", [34 x i8] zeroinitializer }, align 32
@e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug577 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.103, ptr @.str.2, ptr @.str.111, i8 2, i8 76, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.111 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"SERDES: Link down - autoneg failed\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"e1000_phy_lock\00", [17 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"e1000_read_phy_reg_ex\00", [42 x i8] zeroinitializer }, align 32
@e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug589 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.113, ptr @.str.2, ptr @.str.115, i8 2, i8 -58, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.115 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"MDI Read did not complete\0A\00", [37 x i8] zeroinitializer }, align 32
@e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug590 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.113, ptr @.str.2, ptr @.str.116, i8 2, i8 -56, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.116 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"MDI Read Error\0A\00", [16 x i8] zeroinitializer }, align 32
@e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug591 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.113, ptr @.str.2, ptr @.str.115, i8 2, i8 -51, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug592 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.113, ptr @.str.2, ptr @.str.117, i8 2, i8 -50, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.117 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"MDI Error\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"e1000_write_phy_reg_ex\00", [41 x i8] zeroinitializer }, align 32
@e1000_write_phy_reg_ex.__UNIQUE_ID_ddebug594 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.118, ptr @.str.2, ptr @.str.119, i8 2, i8 -23, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.119 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"MDI Write did not complete\0A\00", [36 x i8] zeroinitializer }, align 32
@e1000_write_phy_reg_ex.__UNIQUE_ID_ddebug595 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.118, ptr @.str.2, ptr @.str.119, i8 2, i8 -18, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@e1000_igp_cable_length_table = internal constant { [128 x i16], [64 x i8] } { [128 x i16] [i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 10, i16 10, i16 10, i16 10, i16 10, i16 10, i16 10, i16 20, i16 20, i16 20, i16 20, i16 20, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 30, i16 30, i16 30, i16 30, i16 40, i16 40, i16 40, i16 40, i16 40, i16 40, i16 40, i16 40, i16 40, i16 50, i16 50, i16 50, i16 50, i16 50, i16 50, i16 50, i16 60, i16 60, i16 60, i16 60, i16 60, i16 60, i16 60, i16 60, i16 60, i16 70, i16 70, i16 70, i16 70, i16 70, i16 70, i16 80, i16 80, i16 80, i16 80, i16 80, i16 80, i16 90, i16 90, i16 90, i16 90, i16 90, i16 90, i16 90, i16 90, i16 90, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 110, i16 120, i16 120, i16 120, i16 120, i16 120, i16 120, i16 120, i16 120, i16 120, i16 120], [64 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"e1000_eeprom_lock.wait_lock\00", [36 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"e1000_eeprom_lock\00", [46 x i8] zeroinitializer }, align 32
@e1000_do_read_eeprom.__UNIQUE_ID_ddebug605 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.122, ptr @.str.2, ptr @.str.123, i8 3, i8 -55, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.122 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"e1000_do_read_eeprom\00", [43 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\22words\22 parameter out of bounds. Words = %d,size = %d\0A\00", [41 x i8] zeroinitializer }, align 32
@e1000_acquire_eeprom.__UNIQUE_ID_ddebug603 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.124, ptr @.str.2, ptr @.str.125, i8 3, i8 -104, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.124 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"e1000_acquire_eeprom\00", [43 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Could not acquire EEPROM grant\0A\00", [32 x i8] zeroinitializer }, align 32
@e1000_spi_eeprom_ready.__UNIQUE_ID_ddebug604 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.126, ptr @.str.2, ptr @.str.127, i8 3, i8 -66, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.126 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"e1000_spi_eeprom_ready\00", [41 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SPI EEPROM Status error\0A\00", [39 x i8] zeroinitializer }, align 32
@e1000_do_write_eeprom.__UNIQUE_ID_ddebug610 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.128, ptr @.str.2, ptr @.str.129, i8 3, i8 -12, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.128 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"e1000_do_write_eeprom\00", [42 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\22words\22 parameter out of bounds\0A\00", [63 x i8] zeroinitializer }, align 32
@e1000_write_eeprom_microwire.__UNIQUE_ID_ddebug611 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.130, ptr @.str.2, ptr @.str.131, i8 4, i8 24, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.130 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"e1000_write_eeprom_microwire\00", [35 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"EEPROM Write did not complete\0A\00", [33 x i8] zeroinitializer }, align 32
@e1000_init_rx_addrs.__UNIQUE_ID_ddebug613 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.132, ptr @.str.2, ptr @.str.133, i8 4, i8 43, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.132 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"e1000_init_rx_addrs\00", [44 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Programming MAC Address into RAR[0]\0A\00", [59 x i8] zeroinitializer }, align 32
@e1000_init_rx_addrs.__UNIQUE_ID_ddebug614 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.132, ptr @.str.2, ptr @.str.134, i8 4, i8 46, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.134 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Clearing RAR[1-14]\0A\00", [44 x i8] zeroinitializer }, align 32
@e1000_id_led_init.__UNIQUE_ID_ddebug615 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.135, ptr @.str.2, ptr @.str.11, i8 4, i8 84, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.135 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"e1000_id_led_init\00", [46 x i8] zeroinitializer }, align 32
@e1000_config_dsp_after_link_change.__UNIQUE_ID_ddebug618 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.136, ptr @.str.2, ptr @.str.28, i8 5, i8 14, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.136 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"e1000_config_dsp_after_link_change\00", [61 x i8] zeroinitializer }, align 32
@dsp_reg_array = internal constant { [4 x i16], [24 x i8] } { [4 x i16] [i16 4465, i16 4721, i16 5233, i16 6257], [24 x i8] zeroinitializer }, align 32
@switch.table.e1000_id_led_init = internal constant { [5 x i32], [44 x i8] } { [5 x i32] [i32 14, i32 15, i32 15, i32 14, i32 15], [44 x i8] zeroinitializer }, align 32
@switch.table.e1000_id_led_init.137 = internal constant { [5 x i32], [44 x i8] } { [5 x i32] [i32 3584, i32 3840, i32 3840, i32 3584, i32 3840], [44 x i8] zeroinitializer }, align 32
@switch.table.e1000_id_led_init.138 = internal constant { [5 x i32], [44 x i8] } { [5 x i32] [i32 917504, i32 983040, i32 983040, i32 917504, i32 983040], [44 x i8] zeroinitializer }, align 32
@switch.table.e1000_setup_fiber_serdes_link = internal constant { [4 x i32], [16 x i8] } { [4 x i32] [i32 -2147483616, i32 -2147483232, i32 -2147483360, i32 -2147483232], [16 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [39 x i64] [i64 37, i64 16, i64 4096, i64 4097, i64 4100, i64 4104, i64 4105, i64 4108, i64 4109, i64 4110, i64 4111, i64 4112, i64 4113, i64 4114, i64 4115, i64 4116, i64 4117, i64 4118, i64 4119, i64 4120, i64 4121, i64 4122, i64 4125, i64 4126, i64 4134, i64 4135, i64 4136, i64 4213, i64 4214, i64 4215, i64 4216, i64 4217, i64 4218, i64 4219, i64 4220, i64 4234, i64 4249, i64 4277, i64 11886]
@__sancov_gen_cov_switch_values.139 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 3]
@__sancov_gen_cov_switch_values.140 = internal global [4 x i64] [i64 2, i64 16, i64 4136, i64 4219]
@__sancov_gen_cov_switch_values.141 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 9]
@__sancov_gen_cov_switch_values.142 = internal global [4 x i64] [i64 2, i64 32, i64 11, i64 13]
@__sancov_gen_cov_switch_values.143 = internal global [10 x i64] [i64 8, i64 32, i64 4, i64 5, i64 6, i64 7, i64 8, i64 10, i64 11, i64 12]
@__sancov_gen_cov_switch_values.144 = internal global [10 x i64] [i64 8, i64 32, i64 1, i64 2, i64 3, i64 4, i64 11, i64 12, i64 13, i64 14]
@__sancov_gen_cov_switch_values.145 = internal global [4 x i64] [i64 2, i64 32, i64 11, i64 13]
@__sancov_gen_cov_switch_values.146 = internal global [6 x i64] [i64 4, i64 32, i64 11, i64 12, i64 13, i64 14]
@__sancov_gen_cov_switch_values.147 = internal global [4 x i64] [i64 2, i64 16, i64 4136, i64 4219]
@__sancov_gen_cov_switch_values.148 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 9]
@__sancov_gen_cov_switch_values.149 = internal global [4 x i64] [i64 2, i64 32, i64 7, i64 10]
@__sancov_gen_cov_switch_values.150 = internal global [4 x i64] [i64 2, i64 16, i64 4249, i64 4277]
@__sancov_gen_cov_switch_values.151 = internal global [4 x i64] [i64 2, i64 16, i64 0, i64 65535]
@__sancov_gen_cov_switch_values.152 = internal global [10 x i64] [i64 8, i64 32, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.153 = internal global [10 x i64] [i64 8, i64 32, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.154 = internal global [10 x i64] [i64 8, i64 32, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.155 = internal global [10 x i64] [i64 8, i64 32, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.156 = internal global [6 x i64] [i64 4, i64 32, i64 5, i64 6, i64 8, i64 9]
@__sancov_gen_cov_switch_values.157 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.158 = internal global [4 x i64] [i64 2, i64 32, i64 7, i64 10]
@__sancov_gen_cov_switch_values.159 = internal global [4 x i64] [i64 2, i64 32, i64 7, i64 10]
@__sancov_gen_cov_switch_values.160 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.161 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.162 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 9]
@__sancov_gen_cov_switch_values.163 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.164 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 9]
@__sancov_gen_cov_switch_values.165 = internal global [4 x i64] [i64 2, i64 16, i64 16384, i64 32768]
@__sancov_gen_cov_switch_values.166 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.167 = internal global [4 x i64] [i64 2, i64 12, i64 2048, i64 3072]
@__sancov_gen_cov_switch_values.168 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.169 = internal global [4 x i64] [i64 2, i64 16, i64 10, i64 100]
@__sancov_gen_cov_switch_values.170 = internal global [4 x i64] [i64 2, i64 32, i64 11, i64 13]
@__sancov_gen_cov_switch_values.171 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.172 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 3]
@__sancov_gen_cov_switch_values.173 = internal global [15 x i64] [i64 13, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 10, i64 11, i64 12, i64 13, i64 14]
@__sancov_gen_cov_switch_values.174 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.175 = internal global [4 x i64] [i64 2, i64 32, i64 8, i64 10]
@__sancov_gen_cov_switch_values.176 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.177 = internal global [10 x i64] [i64 8, i64 32, i64 1, i64 2, i64 3, i64 4, i64 11, i64 12, i64 13, i64 14]
@__sancov_gen_cov_switch_values.178 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.179 = internal global [10 x i64] [i64 8, i64 32, i64 1, i64 2, i64 3, i64 4, i64 11, i64 12, i64 13, i64 14]
@__sancov_gen_cov_switch_values.180 = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.181 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.182 = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.183 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.184 = internal global [5 x i64] [i64 3, i64 16, i64 0, i64 16384, i64 32768]
@__sancov_gen_cov_switch_values.185 = internal global [4 x i64] [i64 2, i64 32, i64 7, i64 10]
@__sancov_gen_cov_switch_values.186 = internal global [10 x i64] [i64 8, i64 32, i64 0, i64 1, i64 2, i64 3, i64 11, i64 12, i64 13, i64 14]
@__sancov_gen_cov_switch_values.187 = internal global [4 x i64] [i64 2, i64 32, i64 12, i64 14]
@__sancov_gen_cov_switch_values.188 = internal global [4 x i64] [i64 2, i64 32, i64 12, i64 14]
@__sancov_gen_cov_switch_values.189 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.190 = internal global [4 x i64] [i64 2, i64 32, i64 11, i64 13]
@__sancov_gen_cov_switch_values.191 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 2]
@__sancov_gen_cov_switch_values.192 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.193 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.194 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.195 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 3]
@__sancov_gen_cov_switch_values.196 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 9]
@__sancov_gen_cov_switch_values.197 = internal global [14 x i64] [i64 12, i64 32, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14]
@__sancov_gen_cov_switch_values.198 = internal global [5 x i64] [i64 3, i64 32, i64 33280, i64 1886480, i64 21040704]
@__sancov_gen_cov_switch_values.199 = internal global [10 x i64] [i64 8, i64 32, i64 33280, i64 1886480, i64 21040160, i64 21040176, i64 21040208, i64 21040320, i64 21040704, i64 44565376]
@__sancov_gen_cov_switch_values.200 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.201 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.202 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.203 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.204 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.205 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.206 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@___asan_gen_.218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 385, i32 3 }
@___asan_gen_.221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 390, i32 2 }
@___asan_gen_.224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 423, i32 2 }
@___asan_gen_.230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 535, i32 3 }
@___asan_gen_.233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 543, i32 2 }
@___asan_gen_.236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 572, i32 2 }
@___asan_gen_.242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 703, i32 4 }
@___asan_gen_.245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 727, i32 2 }
@___asan_gen_.248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 757, i32 2 }
@___asan_gen_.254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1526, i32 2 }
@___asan_gen_.257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1530, i32 3 }
@___asan_gen_.260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1536, i32 3 }
@___asan_gen_.263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1542, i32 3 }
@___asan_gen_.266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1548, i32 3 }
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1554, i32 3 }
@___asan_gen_.272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1560, i32 3 }
@___asan_gen_.275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1614, i32 3 }
@___asan_gen_.278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1622, i32 2 }
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2024, i32 3 }
@___asan_gen_.287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2471, i32 5 }
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2484, i32 4 }
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2503, i32 5 }
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2562, i32 4 }
@___asan_gen_.302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2565, i32 4 }
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2568, i32 4 }
@___asan_gen_.308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2573, i32 4 }
@___asan_gen_.311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2576, i32 4 }
@___asan_gen_.314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2579, i32 3 }
@___asan_gen_.315 = private unnamed_addr constant [15 x i8] c"e1000_phy_lock\00", align 1
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3043, i32 2 }
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3399, i32 3 }
@___asan_gen_.332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3412, i32 3 }
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3428, i32 3 }
@___asan_gen_.339 = private unnamed_addr constant [18 x i8] c"e1000_eeprom_lock\00", align 1
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3965, i32 4 }
@___asan_gen_.347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3980, i32 3 }
@___asan_gen_.350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3999, i32 4 }
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4006, i32 3 }
@___asan_gen_.356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4235, i32 4 }
@___asan_gen_.362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4756, i32 3 }
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4792, i32 3 }
@___asan_gen_.368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 875, i32 3 }
@___asan_gen_.371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 885, i32 2 }
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 903, i32 3 }
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 911, i32 4 }
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 920, i32 5 }
@___asan_gen_.383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 926, i32 4 }
@___asan_gen_.386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 929, i32 3 }
@___asan_gen_.392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1437, i32 4 }
@___asan_gen_.395 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1453, i32 3 }
@___asan_gen_.398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1456, i32 4 }
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1478, i32 4 }
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1484, i32 2 }
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1028, i32 3 }
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1031, i32 2 }
@___asan_gen_.419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3187, i32 3 }
@___asan_gen_.422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3193, i32 3 }
@___asan_gen_.425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3196, i32 2 }
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1071, i32 3 }
@___asan_gen_.434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1088, i32 4 }
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1294, i32 3 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 963, i32 4 }
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 947, i32 3 }
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1328, i32 2 }
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1331, i32 3 }
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1334, i32 2 }
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1354, i32 4 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2623, i32 2 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1654, i32 2 }
@___asan_gen_.476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1690, i32 3 }
@___asan_gen_.479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1700, i32 3 }
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1706, i32 3 }
@___asan_gen_.485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1729, i32 3 }
@___asan_gen_.488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1769, i32 3 }
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1797, i32 5 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1387, i32 4 }
@___asan_gen_.497 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1393, i32 3 }
@___asan_gen_.500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 1401, i32 4 }
@___asan_gen_.506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2068, i32 4 }
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2152, i32 6 }
@___asan_gen_.512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2155, i32 6 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2172, i32 5 }
@___asan_gen_.518 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2217, i32 5 }
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2249, i32 4 }
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2286, i32 3 }
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2308, i32 3 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2324, i32 5 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2328, i32 4 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2341, i32 6 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2345, i32 6 }
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2350, i32 5 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2354, i32 4 }
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 85, i32 8 }
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2815, i32 3 }
@___asan_gen_.557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2843, i32 5 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2849, i32 5 }
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2874, i32 5 }
@___asan_gen_.566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2953, i32 3 }
@___asan_gen_.569 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 2982, i32 5 }
@___asan_gen_.570 = private unnamed_addr constant [29 x i8] c"e1000_igp_cable_length_table\00", align 1
@___asan_gen_.572 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 70, i32 5 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 84, i32 8 }
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3877, i32 3 }
@___asan_gen_.590 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3682, i32 4 }
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 3835, i32 3 }
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4050, i32 3 }
@___asan_gen_.608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4195, i32 4 }
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4271, i32 2 }
@___asan_gen_.617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4280, i32 2 }
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 4432, i32 3 }
@___asan_gen_.621 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.623 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 5177, i32 4 }
@___asan_gen_.624 = private unnamed_addr constant [14 x i8] c"dsp_reg_array\00", align 1
@___asan_gen_.625 = private constant [47 x i8] c"../drivers/net/ethernet/intel/e1000/e1000_hw.c\00", align 1
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.625, i32 5082, i32 18 }
@___asan_gen_.627 = private unnamed_addr constant [31 x i8] c"switch.table.e1000_id_led_init\00", align 1
@___asan_gen_.628 = private unnamed_addr constant [35 x i8] c"switch.table.e1000_id_led_init.137\00", align 1
@___asan_gen_.629 = private unnamed_addr constant [35 x i8] c"switch.table.e1000_id_led_init.138\00", align 1
@___asan_gen_.630 = private unnamed_addr constant [43 x i8] c"switch.table.e1000_setup_fiber_serdes_link\00", align 1
@llvm.compiler.used = appending global [144 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @e1000_phy_lock, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @e1000_eeprom_lock, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @e1000_igp_cable_length_table, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @dsp_reg_array, ptr @switch.table.e1000_id_led_init, ptr @switch.table.e1000_id_led_init.137, ptr @switch.table.e1000_id_led_init.138, ptr @switch.table.e1000_setup_fiber_serdes_link], section "llvm.metadata"
@0 = internal global [144 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_phy_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_eeprom_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_igp_cable_length_table to i32), i32 256, i32 320, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dsp_reg_array to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.e1000_id_led_init to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.e1000_id_led_init.137 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.e1000_id_led_init.138 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.e1000_setup_fiber_serdes_link to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @e1000_set_mac_type(ptr nocapture noundef %hw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %device_id = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 50
  %0 = ptrtoint ptr %device_id to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %device_id, align 2
  %2 = zext i16 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values)
  switch i16 %1, label %entry.return_crit_edge [
    i16 4096, label %sw.bb
    i16 4097, label %entry.sw.epilog30_crit_edge
    i16 4100, label %entry.sw.epilog30_crit_edge67
    i16 4104, label %entry.sw.bb7_crit_edge
    i16 4105, label %entry.sw.bb7_crit_edge68
    i16 4108, label %entry.sw.bb7_crit_edge69
    i16 4109, label %entry.sw.bb7_crit_edge70
    i16 4110, label %entry.sw.bb9_crit_edge
    i16 4117, label %entry.sw.bb9_crit_edge71
    i16 4119, label %entry.sw.bb9_crit_edge72
    i16 4118, label %entry.sw.bb9_crit_edge73
    i16 4126, label %entry.sw.bb9_crit_edge74
    i16 4111, label %entry.sw.bb11_crit_edge
    i16 4113, label %entry.sw.bb11_crit_edge75
    i16 4134, label %entry.sw.bb13_crit_edge
    i16 4135, label %entry.sw.bb13_crit_edge76
    i16 4136, label %entry.sw.bb13_crit_edge77
    i16 4112, label %entry.sw.bb15_crit_edge
    i16 4114, label %entry.sw.bb15_crit_edge78
    i16 4125, label %entry.sw.bb15_crit_edge79
    i16 4217, label %entry.sw.bb17_crit_edge
    i16 4218, label %entry.sw.bb17_crit_edge80
    i16 4219, label %entry.sw.bb17_crit_edge81
    i16 4234, label %entry.sw.bb17_crit_edge82
    i16 4249, label %entry.sw.bb17_crit_edge83
    i16 4277, label %entry.sw.bb17_crit_edge84
    i16 4115, label %entry.sw.bb19_crit_edge
    i16 4120, label %entry.sw.bb19_crit_edge85
    i16 4116, label %entry.sw.bb19_crit_edge86
    i16 4216, label %entry.sw.bb21_crit_edge
    i16 4214, label %entry.sw.bb21_crit_edge87
    i16 4220, label %entry.sw.bb21_crit_edge88
    i16 4215, label %entry.sw.bb21_crit_edge89
    i16 4121, label %entry.sw.bb23_crit_edge
    i16 4122, label %entry.sw.bb23_crit_edge90
    i16 4213, label %sw.bb25
    i16 11886, label %sw.bb27
  ]

entry.sw.bb23_crit_edge90:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb23

entry.sw.bb23_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb23

entry.sw.bb21_crit_edge89:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb21

entry.sw.bb21_crit_edge88:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb21

entry.sw.bb21_crit_edge87:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb21

entry.sw.bb21_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb21

entry.sw.bb19_crit_edge86:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb19

entry.sw.bb19_crit_edge85:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb19

entry.sw.bb19_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb19

entry.sw.bb17_crit_edge84:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb17

entry.sw.bb17_crit_edge83:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb17

entry.sw.bb17_crit_edge82:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb17

entry.sw.bb17_crit_edge81:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb17

entry.sw.bb17_crit_edge80:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb17

entry.sw.bb17_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb17

entry.sw.bb15_crit_edge79:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb15

entry.sw.bb15_crit_edge78:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb15

entry.sw.bb15_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb15

entry.sw.bb13_crit_edge77:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb13

entry.sw.bb13_crit_edge76:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb13

entry.sw.bb13_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb13

entry.sw.bb11_crit_edge75:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb11

entry.sw.bb11_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb11

entry.sw.bb9_crit_edge74:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb9

entry.sw.bb9_crit_edge73:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb9

entry.sw.bb9_crit_edge72:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb9

entry.sw.bb9_crit_edge71:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb9

entry.sw.bb9_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb9

entry.sw.bb7_crit_edge70:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb7

entry.sw.bb7_crit_edge69:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb7

entry.sw.bb7_crit_edge68:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb7

entry.sw.bb7_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb7

entry.sw.epilog30_crit_edge67:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog30

entry.sw.epilog30_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog30

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %return

sw.bb:                                            ; preds = %entry
  %revision_id = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 54
  %3 = ptrtoint ptr %revision_id to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %revision_id, align 2
  %5 = zext i8 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.139)
  switch i8 %4, label %sw.bb.return_crit_edge [
    i8 2, label %sw.bb.sw.epilog30_crit_edge
    i8 3, label %sw.bb3
  ]

sw.bb.sw.epilog30_crit_edge:                      ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog30

sw.bb.return_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  br label %return

sw.bb3:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog30

sw.bb7:                                           ; preds = %entry.sw.bb7_crit_edge, %entry.sw.bb7_crit_edge68, %entry.sw.bb7_crit_edge69, %entry.sw.bb7_crit_edge70
  br label %sw.epilog30

sw.bb9:                                           ; preds = %entry.sw.bb9_crit_edge, %entry.sw.bb9_crit_edge71, %entry.sw.bb9_crit_edge72, %entry.sw.bb9_crit_edge73, %entry.sw.bb9_crit_edge74
  br label %sw.epilog30

sw.bb11:                                          ; preds = %entry.sw.bb11_crit_edge, %entry.sw.bb11_crit_edge75
  br label %sw.epilog30

sw.bb13:                                          ; preds = %entry.sw.bb13_crit_edge, %entry.sw.bb13_crit_edge76, %entry.sw.bb13_crit_edge77
  br label %sw.epilog30

sw.bb15:                                          ; preds = %entry.sw.bb15_crit_edge, %entry.sw.bb15_crit_edge78, %entry.sw.bb15_crit_edge79
  br label %sw.epilog30

sw.bb17:                                          ; preds = %entry.sw.bb17_crit_edge, %entry.sw.bb17_crit_edge80, %entry.sw.bb17_crit_edge81, %entry.sw.bb17_crit_edge82, %entry.sw.bb17_crit_edge83, %entry.sw.bb17_crit_edge84
  br label %sw.epilog30

sw.bb19:                                          ; preds = %entry.sw.bb19_crit_edge, %entry.sw.bb19_crit_edge85, %entry.sw.bb19_crit_edge86
  br label %sw.epilog30

sw.bb21:                                          ; preds = %entry.sw.bb21_crit_edge, %entry.sw.bb21_crit_edge87, %entry.sw.bb21_crit_edge88, %entry.sw.bb21_crit_edge89
  br label %sw.epilog30

sw.bb23:                                          ; preds = %entry.sw.bb23_crit_edge, %entry.sw.bb23_crit_edge90
  br label %sw.epilog30

sw.bb25:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog30

sw.bb27:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog30

sw.epilog30:                                      ; preds = %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb3, %sw.bb.sw.epilog30_crit_edge, %entry.sw.epilog30_crit_edge, %entry.sw.epilog30_crit_edge67
  %cmp = phi i1 [ true, %entry.sw.epilog30_crit_edge ], [ true, %entry.sw.epilog30_crit_edge67 ], [ false, %sw.bb.sw.epilog30_crit_edge ], [ false, %sw.bb3 ], [ false, %sw.bb27 ], [ false, %sw.bb25 ], [ false, %sw.bb23 ], [ false, %sw.bb21 ], [ false, %sw.bb19 ], [ false, %sw.bb17 ], [ false, %sw.bb15 ], [ false, %sw.bb13 ], [ false, %sw.bb11 ], [ false, %sw.bb9 ], [ false, %sw.bb7 ]
  %cmp38 = phi i1 [ false, %entry.sw.epilog30_crit_edge ], [ false, %entry.sw.epilog30_crit_edge67 ], [ false, %sw.bb.sw.epilog30_crit_edge ], [ false, %sw.bb3 ], [ true, %sw.bb27 ], [ true, %sw.bb25 ], [ true, %sw.bb23 ], [ true, %sw.bb21 ], [ true, %sw.bb19 ], [ true, %sw.bb17 ], [ true, %sw.bb15 ], [ true, %sw.bb13 ], [ true, %sw.bb11 ], [ true, %sw.bb9 ], [ false, %sw.bb7 ]
  %.sink = phi i32 [ 3, %entry.sw.epilog30_crit_edge ], [ 3, %entry.sw.epilog30_crit_edge67 ], [ 1, %sw.bb.sw.epilog30_crit_edge ], [ 2, %sw.bb3 ], [ 9, %sw.bb27 ], [ 14, %sw.bb25 ], [ 13, %sw.bb23 ], [ 12, %sw.bb21 ], [ 11, %sw.bb19 ], [ 10, %sw.bb17 ], [ 8, %sw.bb15 ], [ 7, %sw.bb13 ], [ 6, %sw.bb11 ], [ 5, %sw.bb9 ], [ 4, %sw.bb7 ]
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %6 = ptrtoint ptr %mac_type to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %.sink, ptr %mac_type, align 4
  %.off = add nsw i32 %.sink, -11
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %.off)
  %switch = icmp ult i32 %.off, 4
  br i1 %switch, label %if.end.thread, label %sw.epilog34

if.end.thread:                                    ; preds = %sw.epilog30
  call void @__sanitizer_cov_trace_pc() #8
  %asf_firmware_present = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 19
  %7 = ptrtoint ptr %asf_firmware_present to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 1, ptr %asf_firmware_present, align 4
  br label %if.then40

sw.epilog34:                                      ; preds = %sw.epilog30
  br i1 %cmp, label %if.end.thread65, label %if.end

if.end.thread65:                                  ; preds = %sw.epilog34
  call void @__sanitizer_cov_trace_pc() #8
  %bad_tx_carr_stats_fd = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 81
  %8 = ptrtoint ptr %bad_tx_carr_stats_fd to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %bad_tx_carr_stats_fd, align 1
  br label %return

if.end:                                           ; preds = %sw.epilog34
  br i1 %cmp38, label %if.end.if.then40_crit_edge, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %return

if.end.if.then40_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then40

if.then40:                                        ; preds = %if.end.if.then40_crit_edge, %if.end.thread
  %has_smbus = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 82
  %9 = ptrtoint ptr %has_smbus to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 1, ptr %has_smbus, align 4
  br label %return

return:                                           ; preds = %if.then40, %if.end.return_crit_edge, %if.end.thread65, %sw.bb.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -5, %sw.bb.return_crit_edge ], [ -5, %entry.return_crit_edge ], [ 0, %if.then40 ], [ 0, %if.end.return_crit_edge ], [ 0, %if.end.thread65 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_set_media_type(ptr nocapture noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp.not = icmp eq i32 %1, 3
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %tbi_compatibility_en = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 68
  %2 = ptrtoint ptr %tbi_compatibility_en to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %tbi_compatibility_en, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %device_id = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 50
  %3 = ptrtoint ptr %device_id to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %device_id, align 2
  %5 = zext i16 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.140)
  switch i16 %4, label %sw.default [
    i16 4136, label %if.end.sw.bb_crit_edge
    i16 4219, label %if.end.sw.bb_crit_edge28
  ]

if.end.sw.bb_crit_edge28:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

sw.bb:                                            ; preds = %if.end.sw.bb_crit_edge, %if.end.sw.bb_crit_edge28
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %6 = ptrtoint ptr %media_type to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 2, ptr %media_type, align 4
  br label %sw.epilog16

sw.default:                                       ; preds = %if.end
  %7 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.141)
  switch i32 %1, label %sw.default6 [
    i32 1, label %sw.default.sw.bb2_crit_edge
    i32 2, label %sw.default.sw.bb2_crit_edge29
    i32 9, label %sw.bb4
  ]

sw.default.sw.bb2_crit_edge29:                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb2

sw.default.sw.bb2_crit_edge:                      ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb2

sw.bb2:                                           ; preds = %sw.default.sw.bb2_crit_edge, %sw.default.sw.bb2_crit_edge29
  %media_type3 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %8 = ptrtoint ptr %media_type3 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %media_type3, align 4
  br label %sw.epilog16

sw.bb4:                                           ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  %media_type5 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %9 = ptrtoint ptr %media_type5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %media_type5, align 4
  br label %sw.epilog16

sw.default6:                                      ; preds = %sw.default
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !393
  %13 = and i32 %12, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not = icmp eq i32 %13, 0
  %media_type14 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  br i1 %tobool.not, label %if.else, label %if.then11

if.then11:                                        ; preds = %sw.default6
  call void @__sanitizer_cov_trace_pc() #8
  %14 = ptrtoint ptr %media_type14 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %media_type14, align 4
  %tbi_compatibility_en13 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 68
  %15 = ptrtoint ptr %tbi_compatibility_en13 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %tbi_compatibility_en13, align 2
  br label %sw.epilog16

if.else:                                          ; preds = %sw.default6
  call void @__sanitizer_cov_trace_pc() #8
  %16 = ptrtoint ptr %media_type14 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %media_type14, align 4
  br label %sw.epilog16

sw.epilog16:                                      ; preds = %if.else, %if.then11, %sw.bb4, %sw.bb2, %sw.bb
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_reset_hw(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %do.body1, label %entry.do.body10_crit_edge

entry.do.body10_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body10

do.body1:                                         ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_reset_hw.__UNIQUE_ID_ddebug501, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_reset_hw, %if.then4)) #6
          to label %do.end7 [label %if.then4], !srcloc !394

if.then4:                                         ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #8
  %call5 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_reset_hw.__UNIQUE_ID_ddebug501, ptr noundef %call5, ptr noundef nonnull @.str.3) #6
  br label %do.end7

do.end7:                                          ; preds = %if.then4, %do.body1
  tail call void @e1000_pci_clear_mwi(ptr noundef %hw) #6
  br label %do.body10

do.body10:                                        ; preds = %do.end7, %entry.do.body10_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_reset_hw.__UNIQUE_ID_ddebug502, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_reset_hw, %if.then22)) #6
          to label %do.body29 [label %if.then22], !srcloc !394

if.then22:                                        ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #8
  %call23 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_reset_hw.__UNIQUE_ID_ddebug502, ptr noundef %call23, ptr noundef nonnull @.str.4) #6
  br label %do.body29

do.body29:                                        ; preds = %if.then22, %do.body10
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !395
  tail call void @arm_heavy_mb() #6
  %2 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %3, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 -1) #6, !srcloc !396
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !397
  tail call void @arm_heavy_mb() #6
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  %add.ptr41 = getelementptr i8, ptr %5, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr41, i32 0) #6, !srcloc !396
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !398
  tail call void @arm_heavy_mb() #6
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 4
  %add.ptr49 = getelementptr i8, ptr %7, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr49, i32 134217728) #6, !srcloc !396
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr54 = getelementptr i8, ptr %9, i32 8
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr54) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !399
  %tbi_compatibility_on = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 69
  %11 = ptrtoint ptr %tbi_compatibility_on to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %tbi_compatibility_on, align 1
  tail call void @msleep(i32 noundef 10) #6
  %12 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw, align 4
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %13) #6, !srcloc !392
  %15 = tail call i32 @llvm.bswap.i32(i32 %14)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !400
  %16 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mac_type, align 4
  %18 = zext i32 %17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.142)
  switch i32 %17, label %do.body29.do.body93_crit_edge [
    i32 11, label %do.body29.do.body73_crit_edge
    i32 13, label %do.body29.do.body73_crit_edge349
  ]

do.body29.do.body73_crit_edge349:                 ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body73

do.body29.do.body73_crit_edge:                    ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body73

do.body29.do.body93_crit_edge:                    ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body93

do.body73:                                        ; preds = %do.body29.do.body73_crit_edge, %do.body29.do.body73_crit_edge349
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !401
  tail call void @arm_heavy_mb() #6
  %or = or i32 %15, -2147483648
  %19 = tail call i32 @llvm.bswap.i32(i32 %or)
  %20 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %21, i32 %19) #6, !srcloc !396
  %22 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw, align 4
  %add.ptr87 = getelementptr i8, ptr %23, i32 8
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr87) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !402
  tail call void @msleep(i32 noundef 5) #6
  br label %do.body93

do.body93:                                        ; preds = %do.body73, %do.body29.do.body93_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_reset_hw.__UNIQUE_ID_ddebug503, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_reset_hw, %if.then105)) #6
          to label %do.end111 [label %if.then105], !srcloc !394

if.then105:                                       ; preds = %do.body93
  call void @__sanitizer_cov_trace_pc() #8
  %call106 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_reset_hw.__UNIQUE_ID_ddebug503, ptr noundef %call106, ptr noundef nonnull @.str.5) #6
  br label %do.end111

do.end111:                                        ; preds = %if.then105, %do.body93
  %25 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mac_type, align 4
  %27 = zext i32 %26 to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.143)
  switch i32 %26, label %do.body125 [
    i32 4, label %do.end111.sw.bb_crit_edge
    i32 5, label %do.end111.sw.bb_crit_edge350
    i32 6, label %do.end111.sw.bb_crit_edge351
    i32 8, label %do.end111.sw.bb_crit_edge352
    i32 11, label %do.end111.sw.bb_crit_edge353
    i32 12, label %do.end111.sw.bb_crit_edge354
    i32 7, label %do.end111.do.body115_crit_edge
    i32 10, label %do.end111.do.body115_crit_edge355
  ]

do.end111.do.body115_crit_edge355:                ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body115

do.end111.do.body115_crit_edge:                   ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body115

do.end111.sw.bb_crit_edge354:                     ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

do.end111.sw.bb_crit_edge353:                     ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

do.end111.sw.bb_crit_edge352:                     ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

do.end111.sw.bb_crit_edge351:                     ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

do.end111.sw.bb_crit_edge350:                     ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

do.end111.sw.bb_crit_edge:                        ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

sw.bb:                                            ; preds = %do.end111.sw.bb_crit_edge, %do.end111.sw.bb_crit_edge350, %do.end111.sw.bb_crit_edge351, %do.end111.sw.bb_crit_edge352, %do.end111.sw.bb_crit_edge353, %do.end111.sw.bb_crit_edge354
  %or113 = or i32 %15, 67108864
  %io_base.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 21
  %28 = ptrtoint ptr %io_base.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %io_base.i, align 4
  %add.i = add i32 %29, 4
  tail call void @e1000_io_write(ptr noundef %hw, i32 noundef %29, i32 noundef 0) #6
  tail call void @e1000_io_write(ptr noundef %hw, i32 noundef %add.i, i32 noundef %or113) #6
  br label %sw.epilog

do.body115:                                       ; preds = %do.end111.do.body115_crit_edge, %do.end111.do.body115_crit_edge355
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !403
  tail call void @arm_heavy_mb() #6
  %or118 = or i32 %15, 67108864
  %30 = tail call i32 @llvm.bswap.i32(i32 %or118)
  %31 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %hw, align 4
  %add.ptr123 = getelementptr i8, ptr %32, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr123, i32 %30) #6, !srcloc !396
  br label %sw.epilog

do.body125:                                       ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !404
  tail call void @arm_heavy_mb() #6
  %or128 = or i32 %15, 67108864
  %33 = tail call i32 @llvm.bswap.i32(i32 %or128)
  %34 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %35, i32 %33) #6, !srcloc !396
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.body125, %do.body115, %sw.bb
  %36 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %mac_type, align 4
  %38 = zext i32 %37 to i64
  call void @__sanitizer_cov_trace_switch(i64 %38, ptr @__sancov_gen_cov_switch_values.144)
  switch i32 %37, label %sw.default166 [
    i32 1, label %sw.epilog.sw.bb135_crit_edge
    i32 2, label %sw.epilog.sw.bb135_crit_edge356
    i32 3, label %sw.epilog.sw.bb135_crit_edge357
    i32 4, label %sw.epilog.sw.bb135_crit_edge358
    i32 11, label %sw.epilog.sw.epilog171_crit_edge
    i32 12, label %sw.epilog.sw.epilog171_crit_edge359
    i32 13, label %sw.epilog.sw.epilog171_crit_edge360
    i32 14, label %sw.epilog.sw.epilog171_crit_edge361
  ]

sw.epilog.sw.epilog171_crit_edge361:              ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog171

sw.epilog.sw.epilog171_crit_edge360:              ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog171

sw.epilog.sw.epilog171_crit_edge359:              ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog171

sw.epilog.sw.epilog171_crit_edge:                 ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog171

sw.epilog.sw.bb135_crit_edge358:                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb135

sw.epilog.sw.bb135_crit_edge357:                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb135

sw.epilog.sw.bb135_crit_edge356:                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb135

sw.epilog.sw.bb135_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb135

sw.bb135:                                         ; preds = %sw.epilog.sw.bb135_crit_edge, %sw.epilog.sw.bb135_crit_edge356, %sw.epilog.sw.bb135_crit_edge357, %sw.epilog.sw.bb135_crit_edge358
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %39 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %39(i32 noundef 2147480) #6
  %40 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hw, align 4
  %add.ptr142 = getelementptr i8, ptr %41, i32 24
  %42 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr142) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !405
  %43 = or i32 %42, 2097152
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !406
  tail call void @arm_heavy_mb() #6
  %44 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %hw, align 4
  %add.ptr154 = getelementptr i8, ptr %45, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr154, i32 %43) #6, !srcloc !396
  %46 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hw, align 4
  %add.ptr161 = getelementptr i8, ptr %47, i32 8
  %48 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr161) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !407
  br label %sw.epilog171

sw.default166:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog171

sw.epilog171:                                     ; preds = %sw.default166, %sw.bb135, %sw.epilog.sw.epilog171_crit_edge, %sw.epilog.sw.epilog171_crit_edge359, %sw.epilog.sw.epilog171_crit_edge360, %sw.epilog.sw.epilog171_crit_edge361
  %.sink = phi i32 [ 5, %sw.default166 ], [ 2, %sw.bb135 ], [ 20, %sw.epilog.sw.epilog171_crit_edge ], [ 20, %sw.epilog.sw.epilog171_crit_edge359 ], [ 20, %sw.epilog.sw.epilog171_crit_edge360 ], [ 20, %sw.epilog.sw.epilog171_crit_edge361 ]
  tail call void @msleep(i32 noundef %.sink) #6
  %49 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %50)
  %cmp173 = icmp ugt i32 %50, 4
  br i1 %cmp173, label %if.then174, label %sw.epilog171.if.end193_crit_edge

sw.epilog171.if.end193_crit_edge:                 ; preds = %sw.epilog171
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end193

if.then174:                                       ; preds = %sw.epilog171
  call void @__sanitizer_cov_trace_pc() #8
  %51 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %hw, align 4
  %add.ptr181 = getelementptr i8, ptr %52, i32 22560
  %53 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr181) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !408
  %54 = and i32 %53, -2097153
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !409
  tail call void @arm_heavy_mb() #6
  %55 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %hw, align 4
  %add.ptr192 = getelementptr i8, ptr %56, i32 22560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr192, i32 %54) #6, !srcloc !396
  %57 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %57)
  %.pr = load i32, ptr %mac_type, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.then174, %sw.epilog171.if.end193_crit_edge
  %58 = phi i32 [ %.pr, %if.then174 ], [ %50, %sw.epilog171.if.end193_crit_edge ]
  %59 = zext i32 %58 to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.145)
  switch i32 %58, label %if.end193.do.body222_crit_edge [
    i32 11, label %if.end193.if.then199_crit_edge
    i32 13, label %if.end193.if.then199_crit_edge362
  ]

if.end193.if.then199_crit_edge362:                ; preds = %if.end193
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then199

if.end193.if.then199_crit_edge:                   ; preds = %if.end193
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then199

if.end193.do.body222_crit_edge:                   ; preds = %if.end193
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body222

if.then199:                                       ; preds = %if.end193.if.then199_crit_edge, %if.end193.if.then199_crit_edge362
  tail call fastcc void @e1000_phy_init_script(ptr noundef %hw)
  %60 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %hw, align 4
  %add.ptr206 = getelementptr i8, ptr %61, i32 3584
  %62 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr206) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !410
  %63 = and i32 %62, -983048
  %64 = or i32 %63, 196615
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !411
  tail call void @arm_heavy_mb() #6
  %65 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %hw, align 4
  %add.ptr219 = getelementptr i8, ptr %66, i32 3584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr219, i32 %64) #6, !srcloc !396
  br label %do.body222

do.body222:                                       ; preds = %if.then199, %if.end193.do.body222_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_reset_hw.__UNIQUE_ID_ddebug504, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_reset_hw, %if.then234)) #6
          to label %do.body241 [label %if.then234], !srcloc !394

if.then234:                                       ; preds = %do.body222
  call void @__sanitizer_cov_trace_pc() #8
  %call235 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_reset_hw.__UNIQUE_ID_ddebug504, ptr noundef %call235, ptr noundef nonnull @.str.4) #6
  br label %do.body241

do.body241:                                       ; preds = %if.then234, %do.body222
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !412
  tail call void @arm_heavy_mb() #6
  %67 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %hw, align 4
  %add.ptr248 = getelementptr i8, ptr %68, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr248, i32 -1) #6, !srcloc !396
  %69 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %hw, align 4
  %add.ptr255 = getelementptr i8, ptr %70, i32 192
  %71 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr255) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !413
  %72 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %73)
  %cmp260 = icmp eq i32 %73, 1
  br i1 %cmp260, label %if.then261, label %do.body241.cleanup_crit_edge

do.body241.cleanup_crit_edge:                     ; preds = %do.body241
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then261:                                       ; preds = %do.body241
  %pci_cmd_word = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 41
  %74 = ptrtoint ptr %pci_cmd_word to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %pci_cmd_word, align 4
  %76 = and i16 %75, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %76)
  %tobool263.not = icmp eq i16 %76, 0
  br i1 %tobool263.not, label %if.then261.cleanup_crit_edge, label %if.then264

if.then261.cleanup_crit_edge:                     ; preds = %if.then261
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then264:                                       ; preds = %if.then261
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @e1000_pci_set_mwi(ptr noundef %hw) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then264, %if.then261.cleanup_crit_edge, %do.body241.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_netdev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @e1000_get_hw_dev(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_pci_clear_mwi(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_phy_init_script(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_saved_data = alloca i16, align 2
  %fused = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_saved_data) #6
  %0 = ptrtoint ptr %phy_saved_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_saved_data, align 2, !annotation !414
  %phy_init_script = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 5
  %1 = ptrtoint ptr %phy_init_script to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %phy_init_script, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end57_crit_edge, label %if.then

entry.if.end57_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end57

if.then:                                          ; preds = %entry
  tail call void @msleep(i32 noundef 20) #6
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %3 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp5.i = icmp eq i32 %4, 1
  br i1 %cmp5.i, label %if.then.i, label %if.then.if.end12.i_crit_edge

if.then.if.end12.i_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i

if.then.i:                                        ; preds = %if.then
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 12123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.if.end12.i_crit_edge, label %if.then.i.e1000_read_phy_reg.exit_crit_edge

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i.if.end12.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then.i.if.end12.i_crit_edge, %if.then.if.end12.i_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 27, ptr noundef nonnull %phy_saved_data) #6
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit:                          ; preds = %if.end12.i, %if.then.i.e1000_read_phy_reg.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  %call2.i86 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %5 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp5.i88 = icmp eq i32 %6, 1
  br i1 %cmp5.i88, label %if.then.i91, label %e1000_read_phy_reg.exit.if.end12.i93_crit_edge

e1000_read_phy_reg.exit.if.end12.i93_crit_edge:   ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i93

if.then.i91:                                      ; preds = %e1000_read_phy_reg.exit
  %call10.i89 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 12123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i89)
  %tobool.not.i90 = icmp eq i32 %call10.i89, 0
  br i1 %tobool.not.i90, label %if.then.i91.if.end12.i93_crit_edge, label %if.then.i91.e1000_write_phy_reg.exit_crit_edge

if.then.i91.e1000_write_phy_reg.exit_crit_edge:   ; preds = %if.then.i91
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i91.if.end12.i93_crit_edge:               ; preds = %if.then.i91
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i93

if.end12.i93:                                     ; preds = %if.then.i91.if.end12.i93_crit_edge, %e1000_read_phy_reg.exit.if.end12.i93_crit_edge
  %call13.i92 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 27, i16 noundef zeroext 3) #6
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit:                         ; preds = %if.end12.i93, %if.then.i91.e1000_write_phy_reg.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i86) #6
  tail call void @msleep(i32 noundef 20) #6
  %call2.i94 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i97 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext 320) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i94) #6
  tail call void @msleep(i32 noundef 5) #6
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %7 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mac_type, align 4
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.146)
  switch i32 %8, label %e1000_write_phy_reg.exit.sw.epilog_crit_edge [
    i32 11, label %e1000_write_phy_reg.exit.sw.bb_crit_edge
    i32 13, label %e1000_write_phy_reg.exit.sw.bb_crit_edge256
    i32 12, label %e1000_write_phy_reg.exit.sw.bb12_crit_edge
    i32 14, label %e1000_write_phy_reg.exit.sw.bb12_crit_edge257
  ]

e1000_write_phy_reg.exit.sw.bb12_crit_edge257:    ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb12

e1000_write_phy_reg.exit.sw.bb12_crit_edge:       ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb12

e1000_write_phy_reg.exit.sw.bb_crit_edge256:      ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

e1000_write_phy_reg.exit.sw.bb_crit_edge:         ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

e1000_write_phy_reg.exit.sw.epilog_crit_edge:     ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

sw.bb:                                            ; preds = %e1000_write_phy_reg.exit.sw.bb_crit_edge, %e1000_write_phy_reg.exit.sw.bb_crit_edge256
  %call2.i100 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %10 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp5.i102 = icmp eq i32 %11, 1
  br i1 %cmp5.i102, label %if.then.i105, label %sw.bb.if.end12.i107_crit_edge

sw.bb.if.end12.i107_crit_edge:                    ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i107

if.then.i105:                                     ; preds = %sw.bb
  %call10.i103 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8085) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i103)
  %tobool.not.i104 = icmp eq i32 %call10.i103, 0
  br i1 %tobool.not.i104, label %if.then.i105.if.end12.i107_crit_edge, label %if.then.i105.e1000_write_phy_reg.exit109_crit_edge

if.then.i105.e1000_write_phy_reg.exit109_crit_edge: ; preds = %if.then.i105
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit109

if.then.i105.if.end12.i107_crit_edge:             ; preds = %if.then.i105
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i107

if.end12.i107:                                    ; preds = %if.then.i105.if.end12.i107_crit_edge, %sw.bb.if.end12.i107_crit_edge
  %call13.i106 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 21, i16 noundef zeroext 1) #6
  br label %e1000_write_phy_reg.exit109

e1000_write_phy_reg.exit109:                      ; preds = %if.end12.i107, %if.then.i105.e1000_write_phy_reg.exit109_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i100) #6
  %call2.i110 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %12 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp5.i112 = icmp eq i32 %13, 1
  br i1 %cmp5.i112, label %if.then.i115, label %e1000_write_phy_reg.exit109.if.end12.i117_crit_edge

e1000_write_phy_reg.exit109.if.end12.i117_crit_edge: ; preds = %e1000_write_phy_reg.exit109
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i117

if.then.i115:                                     ; preds = %e1000_write_phy_reg.exit109
  %call10.i113 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8049) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i113)
  %tobool.not.i114 = icmp eq i32 %call10.i113, 0
  br i1 %tobool.not.i114, label %if.then.i115.if.end12.i117_crit_edge, label %if.then.i115.e1000_write_phy_reg.exit119_crit_edge

if.then.i115.e1000_write_phy_reg.exit119_crit_edge: ; preds = %if.then.i115
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit119

if.then.i115.if.end12.i117_crit_edge:             ; preds = %if.then.i115
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i117

if.end12.i117:                                    ; preds = %if.then.i115.if.end12.i117_crit_edge, %e1000_write_phy_reg.exit109.if.end12.i117_crit_edge
  %call13.i116 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 17, i16 noundef zeroext -17119) #6
  br label %e1000_write_phy_reg.exit119

e1000_write_phy_reg.exit119:                      ; preds = %if.end12.i117, %if.then.i115.e1000_write_phy_reg.exit119_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i110) #6
  %call2.i120 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %14 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %15)
  %cmp5.i122 = icmp eq i32 %15, 1
  br i1 %cmp5.i122, label %if.then.i125, label %e1000_write_phy_reg.exit119.if.end12.i127_crit_edge

e1000_write_phy_reg.exit119.if.end12.i127_crit_edge: ; preds = %e1000_write_phy_reg.exit119
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i127

if.then.i125:                                     ; preds = %e1000_write_phy_reg.exit119
  %call10.i123 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8057) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i123)
  %tobool.not.i124 = icmp eq i32 %call10.i123, 0
  br i1 %tobool.not.i124, label %if.then.i125.if.end12.i127_crit_edge, label %if.then.i125.e1000_write_phy_reg.exit129_crit_edge

if.then.i125.e1000_write_phy_reg.exit129_crit_edge: ; preds = %if.then.i125
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit129

if.then.i125.if.end12.i127_crit_edge:             ; preds = %if.then.i125
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i127

if.end12.i127:                                    ; preds = %if.then.i125.if.end12.i127_crit_edge, %e1000_write_phy_reg.exit119.if.end12.i127_crit_edge
  %call13.i126 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 25, i16 noundef zeroext 24) #6
  br label %e1000_write_phy_reg.exit129

e1000_write_phy_reg.exit129:                      ; preds = %if.end12.i127, %if.then.i125.e1000_write_phy_reg.exit129_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i120) #6
  %call2.i130 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %16 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %17)
  %cmp5.i132 = icmp eq i32 %17, 1
  br i1 %cmp5.i132, label %if.then.i135, label %e1000_write_phy_reg.exit129.if.end12.i137_crit_edge

e1000_write_phy_reg.exit129.if.end12.i137_crit_edge: ; preds = %e1000_write_phy_reg.exit129
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i137

if.then.i135:                                     ; preds = %e1000_write_phy_reg.exit129
  %call10.i133 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 7984) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i133)
  %tobool.not.i134 = icmp eq i32 %call10.i133, 0
  br i1 %tobool.not.i134, label %if.then.i135.if.end12.i137_crit_edge, label %if.then.i135.e1000_write_phy_reg.exit139_crit_edge

if.then.i135.e1000_write_phy_reg.exit139_crit_edge: ; preds = %if.then.i135
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit139

if.then.i135.if.end12.i137_crit_edge:             ; preds = %if.then.i135
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i137

if.end12.i137:                                    ; preds = %if.then.i135.if.end12.i137_crit_edge, %e1000_write_phy_reg.exit129.if.end12.i137_crit_edge
  %call13.i136 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext 5632) #6
  br label %e1000_write_phy_reg.exit139

e1000_write_phy_reg.exit139:                      ; preds = %if.end12.i137, %if.then.i135.e1000_write_phy_reg.exit139_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i130) #6
  %call2.i140 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %18 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %19)
  %cmp5.i142 = icmp eq i32 %19, 1
  br i1 %cmp5.i142, label %if.then.i145, label %e1000_write_phy_reg.exit139.if.end12.i147_crit_edge

e1000_write_phy_reg.exit139.if.end12.i147_crit_edge: ; preds = %e1000_write_phy_reg.exit139
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i147

if.then.i145:                                     ; preds = %e1000_write_phy_reg.exit139
  %call10.i143 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 7985) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i143)
  %tobool.not.i144 = icmp eq i32 %call10.i143, 0
  br i1 %tobool.not.i144, label %if.then.i145.if.end12.i147_crit_edge, label %if.then.i145.e1000_write_phy_reg.exit149_crit_edge

if.then.i145.e1000_write_phy_reg.exit149_crit_edge: ; preds = %if.then.i145
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit149

if.then.i145.if.end12.i147_crit_edge:             ; preds = %if.then.i145
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i147

if.end12.i147:                                    ; preds = %if.then.i145.if.end12.i147_crit_edge, %e1000_write_phy_reg.exit139.if.end12.i147_crit_edge
  %call13.i146 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 17, i16 noundef zeroext 20) #6
  br label %e1000_write_phy_reg.exit149

e1000_write_phy_reg.exit149:                      ; preds = %if.end12.i147, %if.then.i145.e1000_write_phy_reg.exit149_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i140) #6
  %call2.i150 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %20 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %21)
  %cmp5.i152 = icmp eq i32 %21, 1
  br i1 %cmp5.i152, label %if.then.i155, label %e1000_write_phy_reg.exit149.if.end12.i157_crit_edge

e1000_write_phy_reg.exit149.if.end12.i157_crit_edge: ; preds = %e1000_write_phy_reg.exit149
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i157

if.then.i155:                                     ; preds = %e1000_write_phy_reg.exit149
  %call10.i153 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 7986) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i153)
  %tobool.not.i154 = icmp eq i32 %call10.i153, 0
  br i1 %tobool.not.i154, label %if.then.i155.if.end12.i157_crit_edge, label %if.then.i155.e1000_write_phy_reg.exit159_crit_edge

if.then.i155.e1000_write_phy_reg.exit159_crit_edge: ; preds = %if.then.i155
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit159

if.then.i155.if.end12.i157_crit_edge:             ; preds = %if.then.i155
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i157

if.end12.i157:                                    ; preds = %if.then.i155.if.end12.i157_crit_edge, %e1000_write_phy_reg.exit149.if.end12.i157_crit_edge
  %call13.i156 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 18, i16 noundef zeroext 5660) #6
  br label %e1000_write_phy_reg.exit159

e1000_write_phy_reg.exit159:                      ; preds = %if.end12.i157, %if.then.i155.e1000_write_phy_reg.exit159_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i150) #6
  %call2.i160 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %22 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %23)
  %cmp5.i162 = icmp eq i32 %23, 1
  br i1 %cmp5.i162, label %if.then.i165, label %e1000_write_phy_reg.exit159.if.end12.i167_crit_edge

e1000_write_phy_reg.exit159.if.end12.i167_crit_edge: ; preds = %e1000_write_phy_reg.exit159
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i167

if.then.i165:                                     ; preds = %e1000_write_phy_reg.exit159
  %call10.i163 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8084) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i163)
  %tobool.not.i164 = icmp eq i32 %call10.i163, 0
  br i1 %tobool.not.i164, label %if.then.i165.if.end12.i167_crit_edge, label %if.then.i165.e1000_write_phy_reg.exit169_crit_edge

if.then.i165.e1000_write_phy_reg.exit169_crit_edge: ; preds = %if.then.i165
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit169

if.then.i165.if.end12.i167_crit_edge:             ; preds = %if.then.i165
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i167

if.end12.i167:                                    ; preds = %if.then.i165.if.end12.i167_crit_edge, %e1000_write_phy_reg.exit159.if.end12.i167_crit_edge
  %call13.i166 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 20, i16 noundef zeroext 3) #6
  br label %e1000_write_phy_reg.exit169

e1000_write_phy_reg.exit169:                      ; preds = %if.end12.i167, %if.then.i165.e1000_write_phy_reg.exit169_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i160) #6
  %call2.i170 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %24 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %25)
  %cmp5.i172 = icmp eq i32 %25, 1
  br i1 %cmp5.i172, label %if.then.i175, label %e1000_write_phy_reg.exit169.if.end12.i177_crit_edge

e1000_write_phy_reg.exit169.if.end12.i177_crit_edge: ; preds = %e1000_write_phy_reg.exit169
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i177

if.then.i175:                                     ; preds = %e1000_write_phy_reg.exit169
  %call10.i173 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8086) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i173)
  %tobool.not.i174 = icmp eq i32 %call10.i173, 0
  br i1 %tobool.not.i174, label %if.then.i175.if.end12.i177_crit_edge, label %if.then.i175.e1000_write_phy_reg.exit179_crit_edge

if.then.i175.e1000_write_phy_reg.exit179_crit_edge: ; preds = %if.then.i175
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit179

if.then.i175.if.end12.i177_crit_edge:             ; preds = %if.then.i175
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i177

if.end12.i177:                                    ; preds = %if.then.i175.if.end12.i177_crit_edge, %e1000_write_phy_reg.exit169.if.end12.i177_crit_edge
  %call13.i176 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 22, i16 noundef zeroext 63) #6
  br label %e1000_write_phy_reg.exit179

e1000_write_phy_reg.exit179:                      ; preds = %if.end12.i177, %if.then.i175.e1000_write_phy_reg.exit179_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i170) #6
  %call2.i180 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %26 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %27)
  %cmp5.i182 = icmp eq i32 %27, 1
  br i1 %cmp5.i182, label %if.then.i185, label %e1000_write_phy_reg.exit179.if.end12.i187_crit_edge

e1000_write_phy_reg.exit179.if.end12.i187_crit_edge: ; preds = %e1000_write_phy_reg.exit179
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i187

if.then.i185:                                     ; preds = %e1000_write_phy_reg.exit179
  %call10.i183 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8208) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i183)
  %tobool.not.i184 = icmp eq i32 %call10.i183, 0
  br i1 %tobool.not.i184, label %if.then.i185.if.end12.i187_crit_edge, label %if.then.i185.sw.epilog.sink.split_crit_edge

if.then.i185.sw.epilog.sink.split_crit_edge:      ; preds = %if.then.i185
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.sink.split

if.then.i185.if.end12.i187_crit_edge:             ; preds = %if.then.i185
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i187

if.end12.i187:                                    ; preds = %if.then.i185.if.end12.i187_crit_edge, %e1000_write_phy_reg.exit179.if.end12.i187_crit_edge
  %call13.i186 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext 8) #6
  br label %sw.epilog.sink.split

sw.bb12:                                          ; preds = %e1000_write_phy_reg.exit.sw.bb12_crit_edge, %e1000_write_phy_reg.exit.sw.bb12_crit_edge257
  %call2.i190 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %28 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %cmp5.i192 = icmp eq i32 %29, 1
  br i1 %cmp5.i192, label %if.then.i195, label %sw.bb12.if.end12.i197_crit_edge

sw.bb12.if.end12.i197_crit_edge:                  ; preds = %sw.bb12
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i197

if.then.i195:                                     ; preds = %sw.bb12
  %call10.i193 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8051) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i193)
  %tobool.not.i194 = icmp eq i32 %call10.i193, 0
  br i1 %tobool.not.i194, label %if.then.i195.if.end12.i197_crit_edge, label %if.then.i195.sw.epilog.sink.split_crit_edge

if.then.i195.sw.epilog.sink.split_crit_edge:      ; preds = %if.then.i195
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.sink.split

if.then.i195.if.end12.i197_crit_edge:             ; preds = %if.then.i195
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i197

if.end12.i197:                                    ; preds = %if.then.i195.if.end12.i197_crit_edge, %sw.bb12.if.end12.i197_crit_edge
  %call13.i196 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 19, i16 noundef zeroext 153) #6
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %if.end12.i197, %if.then.i195.sw.epilog.sink.split_crit_edge, %if.end12.i187, %if.then.i185.sw.epilog.sink.split_crit_edge
  %call2.i190.sink = phi i32 [ %call2.i180, %if.then.i185.sw.epilog.sink.split_crit_edge ], [ %call2.i180, %if.end12.i187 ], [ %call2.i190, %if.then.i195.sw.epilog.sink.split_crit_edge ], [ %call2.i190, %if.end12.i197 ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i190.sink) #6
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %e1000_write_phy_reg.exit.sw.epilog_crit_edge
  %call2.i200 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i203 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext 13056) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i200) #6
  tail call void @msleep(i32 noundef 20) #6
  %30 = ptrtoint ptr %phy_saved_data to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %phy_saved_data, align 2
  %call2.i206 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %32 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %33)
  %cmp5.i208 = icmp eq i32 %33, 1
  br i1 %cmp5.i208, label %if.then.i211, label %sw.epilog.if.end12.i213_crit_edge

sw.epilog.if.end12.i213_crit_edge:                ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i213

if.then.i211:                                     ; preds = %sw.epilog
  %call10.i209 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 12123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i209)
  %tobool.not.i210 = icmp eq i32 %call10.i209, 0
  br i1 %tobool.not.i210, label %if.then.i211.if.end12.i213_crit_edge, label %if.then.i211.e1000_write_phy_reg.exit215_crit_edge

if.then.i211.e1000_write_phy_reg.exit215_crit_edge: ; preds = %if.then.i211
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit215

if.then.i211.if.end12.i213_crit_edge:             ; preds = %if.then.i211
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i213

if.end12.i213:                                    ; preds = %if.then.i211.if.end12.i213_crit_edge, %sw.epilog.if.end12.i213_crit_edge
  %call13.i212 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 27, i16 noundef zeroext %31) #6
  br label %e1000_write_phy_reg.exit215

e1000_write_phy_reg.exit215:                      ; preds = %if.end12.i213, %if.then.i211.e1000_write_phy_reg.exit215_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i206) #6
  %34 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %35)
  %cmp = icmp eq i32 %35, 13
  br i1 %cmp, label %if.then17, label %e1000_write_phy_reg.exit215.if.end57_crit_edge

e1000_write_phy_reg.exit215.if.end57_crit_edge:   ; preds = %e1000_write_phy_reg.exit215
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end57

if.then17:                                        ; preds = %e1000_write_phy_reg.exit215
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %fused) #6
  %36 = ptrtoint ptr %fused to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 -1, ptr %fused, align 2, !annotation !414
  %call2.i216 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %37 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %38)
  %cmp5.i218 = icmp eq i32 %38, 1
  br i1 %cmp5.i218, label %if.then.i221, label %if.then17.if.end12.i223_crit_edge

if.then17.if.end12.i223_crit_edge:                ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i223

if.then.i221:                                     ; preds = %if.then17
  %call10.i219 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8401) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i219)
  %tobool.not.i220 = icmp eq i32 %call10.i219, 0
  br i1 %tobool.not.i220, label %if.then.i221.if.end12.i223_crit_edge, label %if.then.i221.e1000_read_phy_reg.exit225_crit_edge

if.then.i221.e1000_read_phy_reg.exit225_crit_edge: ; preds = %if.then.i221
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit225

if.then.i221.if.end12.i223_crit_edge:             ; preds = %if.then.i221
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i223

if.end12.i223:                                    ; preds = %if.then.i221.if.end12.i223_crit_edge, %if.then17.if.end12.i223_crit_edge
  %call13.i222 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 17, ptr noundef nonnull %fused) #6
  br label %e1000_read_phy_reg.exit225

e1000_read_phy_reg.exit225:                       ; preds = %if.end12.i223, %if.then.i221.e1000_read_phy_reg.exit225_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i216) #6
  %39 = ptrtoint ptr %fused to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %fused, align 2
  %41 = and i16 %40, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %41)
  %tobool19.not = icmp eq i16 %41, 0
  br i1 %tobool19.not, label %if.then20, label %e1000_read_phy_reg.exit225.if.end55_crit_edge

e1000_read_phy_reg.exit225.if.end55_crit_edge:    ; preds = %e1000_read_phy_reg.exit225
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end55

if.then20:                                        ; preds = %e1000_read_phy_reg.exit225
  %call2.i226 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %42 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %43)
  %cmp5.i228 = icmp eq i32 %43, 1
  br i1 %cmp5.i228, label %if.then.i231, label %if.then20.if.end12.i233_crit_edge

if.then20.if.end12.i233_crit_edge:                ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i233

if.then.i231:                                     ; preds = %if.then20
  %call10.i229 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8400) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i229)
  %tobool.not.i230 = icmp eq i32 %call10.i229, 0
  br i1 %tobool.not.i230, label %if.then.i231.if.end12.i233_crit_edge, label %if.then.i231.e1000_read_phy_reg.exit235_crit_edge

if.then.i231.e1000_read_phy_reg.exit235_crit_edge: ; preds = %if.then.i231
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit235

if.then.i231.if.end12.i233_crit_edge:             ; preds = %if.then.i231
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i233

if.end12.i233:                                    ; preds = %if.then.i231.if.end12.i233_crit_edge, %if.then20.if.end12.i233_crit_edge
  %call13.i232 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %fused) #6
  br label %e1000_read_phy_reg.exit235

e1000_read_phy_reg.exit235:                       ; preds = %if.end12.i233, %if.then.i231.e1000_read_phy_reg.exit235_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i226) #6
  %44 = ptrtoint ptr %fused to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %fused, align 2
  %and23 = and i16 %45, 3968
  %46 = and i16 %45, 112
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %46)
  %cmp29 = icmp ugt i16 %46, 64
  br i1 %cmp29, label %if.then31, label %if.else

if.then31:                                        ; preds = %e1000_read_phy_reg.exit235
  call void @__sanitizer_cov_trace_pc() #8
  %sub = add nsw i16 %46, -16
  %sub35 = add nsw i16 %and23, -128
  br label %if.end44

if.else:                                          ; preds = %e1000_read_phy_reg.exit235
  call void @__sanitizer_cov_trace_pc() #8
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %46)
  %cmp38 = icmp eq i16 %46, 64
  %sub42 = add nsw i16 %and23, -1280
  %spec.select = select i1 %cmp38, i16 %sub42, i16 %and23
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then31
  %fine.0 = phi i16 [ %sub35, %if.then31 ], [ %spec.select, %if.else ]
  %coarse.0 = phi i16 [ %sub, %if.then31 ], [ %46, %if.else ]
  %47 = and i16 %45, -4096
  %48 = and i16 %fine.0, 3968
  %or84 = or i16 %48, %47
  %49 = and i16 %coarse.0, 112
  %or5185 = or i16 %or84, %49
  %50 = ptrtoint ptr %fused to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %or5185, ptr %fused, align 2
  %call2.i236 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %51 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %cmp5.i238 = icmp eq i32 %52, 1
  br i1 %cmp5.i238, label %if.then.i241, label %if.end44.if.end12.i243_crit_edge

if.end44.if.end12.i243_crit_edge:                 ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i243

if.then.i241:                                     ; preds = %if.end44
  %call10.i239 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8412) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i239)
  %tobool.not.i240 = icmp eq i32 %call10.i239, 0
  br i1 %tobool.not.i240, label %if.then.i241.if.end12.i243_crit_edge, label %if.then.i241.e1000_write_phy_reg.exit245_crit_edge

if.then.i241.e1000_write_phy_reg.exit245_crit_edge: ; preds = %if.then.i241
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit245

if.then.i241.if.end12.i243_crit_edge:             ; preds = %if.then.i241
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i243

if.end12.i243:                                    ; preds = %if.then.i241.if.end12.i243_crit_edge, %if.end44.if.end12.i243_crit_edge
  %call13.i242 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 28, i16 noundef zeroext %or5185) #6
  br label %e1000_write_phy_reg.exit245

e1000_write_phy_reg.exit245:                      ; preds = %if.end12.i243, %if.then.i241.e1000_write_phy_reg.exit245_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i236) #6
  %call2.i246 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %53 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %54)
  %cmp5.i248 = icmp eq i32 %54, 1
  br i1 %cmp5.i248, label %if.then.i251, label %e1000_write_phy_reg.exit245.if.end12.i253_crit_edge

e1000_write_phy_reg.exit245.if.end12.i253_crit_edge: ; preds = %e1000_write_phy_reg.exit245
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i253

if.then.i251:                                     ; preds = %e1000_write_phy_reg.exit245
  %call10.i249 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 8414) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i249)
  %tobool.not.i250 = icmp eq i32 %call10.i249, 0
  br i1 %tobool.not.i250, label %if.then.i251.if.end12.i253_crit_edge, label %if.then.i251.e1000_write_phy_reg.exit255_crit_edge

if.then.i251.e1000_write_phy_reg.exit255_crit_edge: ; preds = %if.then.i251
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit255

if.then.i251.if.end12.i253_crit_edge:             ; preds = %if.then.i251
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i253

if.end12.i253:                                    ; preds = %if.then.i251.if.end12.i253_crit_edge, %e1000_write_phy_reg.exit245.if.end12.i253_crit_edge
  %call13.i252 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext 2) #6
  br label %e1000_write_phy_reg.exit255

e1000_write_phy_reg.exit255:                      ; preds = %if.end12.i253, %if.then.i251.e1000_write_phy_reg.exit255_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i246) #6
  br label %if.end55

if.end55:                                         ; preds = %e1000_write_phy_reg.exit255, %e1000_read_phy_reg.exit225.if.end55_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %fused) #6
  br label %if.end57

if.end57:                                         ; preds = %if.end55, %e1000_write_phy_reg.exit215.if.end57_crit_edge, %entry.if.end57_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_saved_data) #6
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_pci_set_mwi(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_init_hw(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @e1000_id_led_init(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end10, label %do.body1

do.body1:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_init_hw.__UNIQUE_ID_ddebug505, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_init_hw, %if.then6)) #6
          to label %cleanup [label %if.then6], !srcloc !394

if.then6:                                         ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #8
  %call7 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_init_hw.__UNIQUE_ID_ddebug505, ptr noundef %call7, ptr noundef nonnull @.str.7) #6
  br label %cleanup

if.end10:                                         ; preds = %entry
  %mac_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp.not.i = icmp eq i32 %1, 3
  br i1 %cmp.not.i, label %if.end10.if.end.i_crit_edge, label %if.then.i

if.end10.if.end.i_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end.i

if.then.i:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #8
  %tbi_compatibility_en.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 68
  %2 = ptrtoint ptr %tbi_compatibility_en.i to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %tbi_compatibility_en.i, align 2
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end10.if.end.i_crit_edge
  %device_id.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 50
  %3 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %device_id.i, align 2
  %5 = zext i16 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.147)
  switch i16 %4, label %sw.default.i [
    i16 4136, label %if.end.i.sw.bb.i_crit_edge
    i16 4219, label %if.end.i.sw.bb.i_crit_edge321
  ]

if.end.i.sw.bb.i_crit_edge321:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.i

if.end.i.sw.bb.i_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.i

sw.bb.i:                                          ; preds = %if.end.i.sw.bb.i_crit_edge, %if.end.i.sw.bb.i_crit_edge321
  %media_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %6 = ptrtoint ptr %media_type.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 2, ptr %media_type.i, align 4
  br label %e1000_set_media_type.exit

sw.default.i:                                     ; preds = %if.end.i
  %7 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.148)
  switch i32 %1, label %sw.default6.i [
    i32 1, label %sw.default.i.sw.bb2.i_crit_edge
    i32 2, label %sw.default.i.sw.bb2.i_crit_edge322
    i32 9, label %sw.bb4.i
  ]

sw.default.i.sw.bb2.i_crit_edge322:               ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb2.i

sw.default.i.sw.bb2.i_crit_edge:                  ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb2.i

sw.bb2.i:                                         ; preds = %sw.default.i.sw.bb2.i_crit_edge, %sw.default.i.sw.bb2.i_crit_edge322
  %media_type3.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %8 = ptrtoint ptr %media_type3.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %media_type3.i, align 4
  br label %e1000_set_media_type.exit

sw.bb4.i:                                         ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #8
  %media_type5.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %9 = ptrtoint ptr %media_type5.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %media_type5.i, align 4
  br label %e1000_set_media_type.exit

sw.default6.i:                                    ; preds = %sw.default.i
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr.i = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !393
  %13 = and i32 %12, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i = icmp eq i32 %13, 0
  %media_type14.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  br i1 %tobool.not.i, label %if.else.i, label %if.then11.i

if.then11.i:                                      ; preds = %sw.default6.i
  call void @__sanitizer_cov_trace_pc() #8
  %14 = ptrtoint ptr %media_type14.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %media_type14.i, align 4
  %tbi_compatibility_en13.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 68
  %15 = ptrtoint ptr %tbi_compatibility_en13.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %tbi_compatibility_en13.i, align 2
  br label %e1000_set_media_type.exit

if.else.i:                                        ; preds = %sw.default6.i
  call void @__sanitizer_cov_trace_pc() #8
  %16 = ptrtoint ptr %media_type14.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %media_type14.i, align 4
  br label %e1000_set_media_type.exit

e1000_set_media_type.exit:                        ; preds = %if.else.i, %if.then11.i, %sw.bb4.i, %sw.bb2.i, %sw.bb.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_init_hw.__UNIQUE_ID_ddebug506, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_init_hw, %if.then24)) #6
          to label %do.end30 [label %if.then24], !srcloc !394

if.then24:                                        ; preds = %e1000_set_media_type.exit
  call void @__sanitizer_cov_trace_pc() #8
  %call25 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_init_hw.__UNIQUE_ID_ddebug506, ptr noundef %call25, ptr noundef nonnull @.str.8) #6
  br label %do.end30

do.end30:                                         ; preds = %if.then24, %e1000_set_media_type.exit
  %17 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %18)
  %cmp = icmp ult i32 %18, 7
  br i1 %cmp, label %do.body32, label %do.end30.do.body.i.preheader_crit_edge

do.end30.do.body.i.preheader_crit_edge:           ; preds = %do.end30
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body.i.preheader

do.body32:                                        ; preds = %do.end30
  call void @__sanitizer_cov_trace_pc() #8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !415
  tail call void @arm_heavy_mb() #6
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %20, i32 56
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 0) #6, !srcloc !396
  br label %do.body.i.preheader

do.body.i.preheader:                              ; preds = %do.body32, %do.end30.do.body.i.preheader_crit_edge
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.i.preheader
  %offset.014.i = phi i32 [ %inc.i, %do.body.i.do.body.i_crit_edge ], [ 0, %do.body.i.preheader ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !416
  tail call void @arm_heavy_mb() #6
  %21 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw, align 4
  %23 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp1.i = icmp ugt i32 %24, 2
  %cond.i = select i1 %cmp1.i, i32 22016, i32 1536
  %add.ptr.i312 = getelementptr i8, ptr %22, i32 %cond.i
  %shl.i = shl nuw nsw i32 %offset.014.i, 2
  %add.ptr2.i = getelementptr i8, ptr %add.ptr.i312, i32 %shl.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr2.i, i32 0) #6, !srcloc !396
  %25 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw, align 4
  %add.ptr7.i = getelementptr i8, ptr %26, i32 8
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr7.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !417
  %inc.i = add nuw nsw i32 %offset.014.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 128
  br i1 %exitcond.not.i, label %e1000_clear_vfta.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body.i

e1000_clear_vfta.exit:                            ; preds = %do.body.i
  %28 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %cmp39 = icmp eq i32 %29, 1
  br i1 %cmp39, label %do.body42, label %e1000_clear_vfta.exit.if.end77_crit_edge

e1000_clear_vfta.exit.if.end77_crit_edge:         ; preds = %e1000_clear_vfta.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end77

do.body42:                                        ; preds = %e1000_clear_vfta.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_init_hw.__UNIQUE_ID_ddebug507, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_init_hw, %if.then54)) #6
          to label %do.end60 [label %if.then54], !srcloc !394

if.then54:                                        ; preds = %do.body42
  call void @__sanitizer_cov_trace_pc() #8
  %call55 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_init_hw.__UNIQUE_ID_ddebug507, ptr noundef %call55, ptr noundef nonnull @.str.3) #6
  br label %do.end60

do.end60:                                         ; preds = %if.then54, %do.body42
  tail call void @e1000_pci_clear_mwi(ptr noundef %hw) #6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !418
  tail call void @arm_heavy_mb() #6
  %30 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw, align 4
  %add.ptr68 = getelementptr i8, ptr %31, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr68, i32 16777216) #6, !srcloc !396
  %32 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw, align 4
  %add.ptr73 = getelementptr i8, ptr %33, i32 8
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr73) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !419
  tail call void @msleep(i32 noundef 5) #6
  br label %if.end77

if.end77:                                         ; preds = %do.end60, %e1000_clear_vfta.exit.if.end77_crit_edge
  tail call fastcc void @e1000_init_rx_addrs(ptr noundef %hw)
  %35 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %36)
  %cmp79 = icmp eq i32 %36, 1
  br i1 %cmp79, label %do.body81, label %if.end77.do.body104_crit_edge

if.end77.do.body104_crit_edge:                    ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body104

do.body81:                                        ; preds = %if.end77
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !420
  tail call void @arm_heavy_mb() #6
  %37 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hw, align 4
  %add.ptr88 = getelementptr i8, ptr %38, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr88, i32 0) #6, !srcloc !396
  %39 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw, align 4
  %add.ptr95 = getelementptr i8, ptr %40, i32 8
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr95) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !421
  tail call void @msleep(i32 noundef 1) #6
  %pci_cmd_word = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 41
  %42 = ptrtoint ptr %pci_cmd_word to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %pci_cmd_word, align 4
  %44 = and i16 %43, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %44)
  %tobool99.not = icmp eq i16 %44, 0
  br i1 %tobool99.not, label %do.body81.do.body104_crit_edge, label %if.then100

do.body81.do.body104_crit_edge:                   ; preds = %do.body81
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body104

if.then100:                                       ; preds = %do.body81
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @e1000_pci_set_mwi(ptr noundef %hw) #6
  br label %do.body104

do.body104:                                       ; preds = %if.then100, %do.body81.do.body104_crit_edge, %if.end77.do.body104_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_init_hw.__UNIQUE_ID_ddebug508, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_init_hw, %if.then116)) #6
          to label %do.body125 [label %if.then116], !srcloc !394

if.then116:                                       ; preds = %do.body104
  call void @__sanitizer_cov_trace_pc() #8
  %call117 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_init_hw.__UNIQUE_ID_ddebug508, ptr noundef %call117, ptr noundef nonnull @.str.9) #6
  br label %do.body125

do.body125:                                       ; preds = %do.body125.do.body125_crit_edge, %if.then116, %do.body104
  %i.0320 = phi i32 [ %inc, %do.body125.do.body125_crit_edge ], [ 0, %do.body104 ], [ 0, %if.then116 ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !422
  tail call void @arm_heavy_mb() #6
  %45 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hw, align 4
  %47 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %48)
  %cmp130 = icmp ugt i32 %48, 2
  %cond132 = select i1 %cmp130, i32 20992, i32 512
  %add.ptr133 = getelementptr i8, ptr %46, i32 %cond132
  %shl = shl nuw nsw i32 %i.0320, 2
  %add.ptr134 = getelementptr i8, ptr %add.ptr133, i32 %shl
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr134, i32 0) #6, !srcloc !396
  %49 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hw, align 4
  %add.ptr142 = getelementptr i8, ptr %50, i32 8
  %51 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr142) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !423
  %inc = add nuw nsw i32 %i.0320, 1
  %exitcond.not = icmp eq i32 %inc, 128
  br i1 %exitcond.not, label %for.end, label %do.body125.do.body125_crit_edge

do.body125.do.body125_crit_edge:                  ; preds = %do.body125
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body125

for.end:                                          ; preds = %do.body125
  %dma_fairness = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 59
  %52 = ptrtoint ptr %dma_fairness to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %dma_fairness, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool147.not = icmp eq i8 %53, 0
  br i1 %tobool147.not, label %for.end.if.end172thread-pre-split_crit_edge, label %land.lhs.true

for.end.if.end172thread-pre-split_crit_edge:      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end172thread-pre-split

land.lhs.true:                                    ; preds = %for.end
  %54 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %55)
  %cmp149 = icmp ult i32 %55, 4
  br i1 %cmp149, label %if.then151, label %land.lhs.true.if.end172_crit_edge

land.lhs.true.if.end172_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end172

if.then151:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  %56 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hw, align 4
  %58 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %57) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !424
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !425
  tail call void @arm_heavy_mb() #6
  %59 = or i32 %58, 67108864
  %60 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %61, i32 %59) #6, !srcloc !396
  br label %if.end172thread-pre-split

if.end172thread-pre-split:                        ; preds = %if.then151, %for.end.if.end172thread-pre-split_crit_edge
  %62 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %.pr = load i32, ptr %mac_type.i, align 4
  br label %if.end172

if.end172:                                        ; preds = %if.end172thread-pre-split, %land.lhs.true.if.end172_crit_edge
  %63 = phi i32 [ %.pr, %if.end172thread-pre-split ], [ %55, %land.lhs.true.if.end172_crit_edge ]
  %64 = zext i32 %63 to i64
  call void @__sanitizer_cov_trace_switch(i64 %64, ptr @__sancov_gen_cov_switch_values.149)
  switch i32 %63, label %sw.default [
    i32 7, label %if.end172.sw.epilog_crit_edge
    i32 10, label %if.end172.sw.epilog_crit_edge323
  ]

if.end172.sw.epilog_crit_edge323:                 ; preds = %if.end172
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

if.end172.sw.epilog_crit_edge:                    ; preds = %if.end172
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end172
  %bus_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 14
  %65 = ptrtoint ptr %bus_type to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %bus_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %66)
  %cmp174 = icmp eq i32 %66, 2
  br i1 %cmp174, label %land.lhs.true176, label %sw.default.sw.epilog_crit_edge

sw.default.sw.epilog_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

land.lhs.true176:                                 ; preds = %sw.default
  %call177 = tail call i32 @e1000_pcix_get_mmrbc(ptr noundef %hw) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %call177)
  %cmp178 = icmp sgt i32 %call177, 2048
  br i1 %cmp178, label %if.then180, label %land.lhs.true176.sw.epilog_crit_edge

land.lhs.true176.sw.epilog_crit_edge:             ; preds = %land.lhs.true176
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

if.then180:                                       ; preds = %land.lhs.true176
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @e1000_pcix_set_mmrbc(ptr noundef %hw, i32 noundef 2048) #6
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then180, %land.lhs.true176.sw.epilog_crit_edge, %sw.default.sw.epilog_crit_edge, %if.end172.sw.epilog_crit_edge, %if.end172.sw.epilog_crit_edge323
  %call182 = tail call i32 @e1000_setup_link(ptr noundef %hw)
  %67 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %68)
  %cmp184 = icmp ugt i32 %68, 4
  br i1 %cmp184, label %if.then186, label %sw.epilog.if.end209_crit_edge

sw.epilog.if.end209_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end209

if.then186:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  %69 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %hw, align 4
  %add.ptr194 = getelementptr i8, ptr %70, i32 14376
  %71 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr194) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !426
  %72 = and i32 %71, -16130
  %73 = or i32 %72, 257
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !427
  tail call void @arm_heavy_mb() #6
  %74 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %hw, align 4
  %add.ptr208 = getelementptr i8, ptr %75, i32 14376
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr208, i32 %73) #6, !srcloc !396
  br label %if.end209

if.end209:                                        ; preds = %if.then186, %sw.epilog.if.end209_crit_edge
  %76 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %hw, align 4
  %add.ptr.i314 = getelementptr i8, ptr %77, i32 16384
  %78 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i314) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !428
  %79 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %hw, align 4
  %add.ptr8.i = getelementptr i8, ptr %80, i32 16392
  %81 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr8.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !429
  %82 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %hw, align 4
  %add.ptr18.i = getelementptr i8, ptr %83, i32 16400
  %84 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr18.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !430
  %85 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %hw, align 4
  %add.ptr28.i = getelementptr i8, ptr %86, i32 16404
  %87 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr28.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !431
  %88 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %hw, align 4
  %add.ptr38.i = getelementptr i8, ptr %89, i32 16408
  %90 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr38.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !432
  %91 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %hw, align 4
  %add.ptr48.i = getelementptr i8, ptr %92, i32 16412
  %93 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr48.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !433
  %94 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %hw, align 4
  %add.ptr58.i = getelementptr i8, ptr %95, i32 16416
  %96 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr58.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !434
  %97 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %hw, align 4
  %add.ptr68.i = getelementptr i8, ptr %98, i32 16424
  %99 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr68.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !435
  %100 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %hw, align 4
  %add.ptr78.i = getelementptr i8, ptr %101, i32 16432
  %102 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr78.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !436
  %103 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %hw, align 4
  %add.ptr88.i = getelementptr i8, ptr %104, i32 16440
  %105 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr88.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !437
  %106 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %hw, align 4
  %add.ptr98.i = getelementptr i8, ptr %107, i32 16448
  %108 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr98.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !438
  %109 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %hw, align 4
  %add.ptr108.i = getelementptr i8, ptr %110, i32 16456
  %111 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr108.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !439
  %112 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %hw, align 4
  %add.ptr118.i = getelementptr i8, ptr %113, i32 16460
  %114 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr118.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !440
  %115 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %hw, align 4
  %add.ptr128.i = getelementptr i8, ptr %116, i32 16464
  %117 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr128.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !441
  %118 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %hw, align 4
  %add.ptr138.i = getelementptr i8, ptr %119, i32 16468
  %120 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr138.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !442
  %121 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %hw, align 4
  %add.ptr148.i = getelementptr i8, ptr %122, i32 16472
  %123 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr148.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !443
  %124 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %hw, align 4
  %add.ptr158.i = getelementptr i8, ptr %125, i32 16476
  %126 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr158.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !444
  %127 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %hw, align 4
  %add.ptr168.i = getelementptr i8, ptr %128, i32 16480
  %129 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr168.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !445
  %130 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %hw, align 4
  %add.ptr178.i = getelementptr i8, ptr %131, i32 16484
  %132 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr178.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !446
  %133 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %hw, align 4
  %add.ptr188.i = getelementptr i8, ptr %134, i32 16488
  %135 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr188.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !447
  %136 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %hw, align 4
  %add.ptr198.i = getelementptr i8, ptr %137, i32 16492
  %138 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr198.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !448
  %139 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %hw, align 4
  %add.ptr208.i = getelementptr i8, ptr %140, i32 16496
  %141 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr208.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !449
  %142 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %hw, align 4
  %add.ptr218.i = getelementptr i8, ptr %143, i32 16500
  %144 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr218.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !450
  %145 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %hw, align 4
  %add.ptr228.i = getelementptr i8, ptr %146, i32 16504
  %147 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr228.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !451
  %148 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %hw, align 4
  %add.ptr238.i = getelementptr i8, ptr %149, i32 16508
  %150 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr238.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !452
  %151 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %hw, align 4
  %add.ptr248.i = getelementptr i8, ptr %152, i32 16512
  %153 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr248.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !453
  %154 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %hw, align 4
  %add.ptr258.i = getelementptr i8, ptr %155, i32 16520
  %156 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr258.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !454
  %157 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %hw, align 4
  %add.ptr268.i = getelementptr i8, ptr %158, i32 16524
  %159 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr268.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !455
  %160 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %hw, align 4
  %add.ptr278.i = getelementptr i8, ptr %161, i32 16528
  %162 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr278.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !456
  %163 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %hw, align 4
  %add.ptr288.i = getelementptr i8, ptr %164, i32 16532
  %165 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr288.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !457
  %166 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %hw, align 4
  %add.ptr298.i = getelementptr i8, ptr %167, i32 16544
  %168 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr298.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !458
  %169 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %hw, align 4
  %add.ptr308.i = getelementptr i8, ptr %170, i32 16548
  %171 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr308.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !459
  %172 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %hw, align 4
  %add.ptr318.i = getelementptr i8, ptr %173, i32 16552
  %174 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr318.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !460
  %175 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %hw, align 4
  %add.ptr328.i = getelementptr i8, ptr %176, i32 16556
  %177 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr328.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !461
  %178 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %hw, align 4
  %add.ptr338.i = getelementptr i8, ptr %179, i32 16560
  %180 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr338.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !462
  %181 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %hw, align 4
  %add.ptr348.i = getelementptr i8, ptr %182, i32 16576
  %183 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr348.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !463
  %184 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %hw, align 4
  %add.ptr358.i = getelementptr i8, ptr %185, i32 16580
  %186 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr358.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !464
  %187 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %hw, align 4
  %add.ptr368.i = getelementptr i8, ptr %188, i32 16584
  %189 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr368.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !465
  %190 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %hw, align 4
  %add.ptr378.i = getelementptr i8, ptr %191, i32 16588
  %192 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr378.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !466
  %193 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %hw, align 4
  %add.ptr388.i = getelementptr i8, ptr %194, i32 16592
  %195 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr388.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !467
  %196 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %hw, align 4
  %add.ptr398.i = getelementptr i8, ptr %197, i32 16596
  %198 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr398.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !468
  %199 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %hw, align 4
  %add.ptr408.i = getelementptr i8, ptr %200, i32 16600
  %201 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr408.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !469
  %202 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %hw, align 4
  %add.ptr418.i = getelementptr i8, ptr %203, i32 16604
  %204 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr418.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !470
  %205 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %hw, align 4
  %add.ptr428.i = getelementptr i8, ptr %206, i32 16608
  %207 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr428.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !471
  %208 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %hw, align 4
  %add.ptr438.i = getelementptr i8, ptr %209, i32 16612
  %210 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr438.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !472
  %211 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %hw, align 4
  %add.ptr448.i = getelementptr i8, ptr %212, i32 16616
  %213 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr448.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !473
  %214 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %hw, align 4
  %add.ptr458.i = getelementptr i8, ptr %215, i32 16620
  %216 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr458.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !474
  %217 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %hw, align 4
  %add.ptr468.i = getelementptr i8, ptr %218, i32 16624
  %219 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr468.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !475
  %220 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %hw, align 4
  %add.ptr478.i = getelementptr i8, ptr %221, i32 16628
  %222 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr478.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !476
  %223 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %224)
  %cmp483.i = icmp ult i32 %224, 3
  br i1 %cmp483.i, label %if.end209.e1000_clear_hw_cntrs.exit_crit_edge, label %if.end.i315

if.end209.e1000_clear_hw_cntrs.exit_crit_edge:    ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_clear_hw_cntrs.exit

if.end.i315:                                      ; preds = %if.end209
  %225 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %hw, align 4
  %add.ptr490.i = getelementptr i8, ptr %226, i32 16388
  %227 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr490.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !477
  %228 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %hw, align 4
  %add.ptr500.i = getelementptr i8, ptr %229, i32 16396
  %230 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr500.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !478
  %231 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %hw, align 4
  %add.ptr510.i = getelementptr i8, ptr %232, i32 16436
  %233 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr510.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !479
  %234 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %hw, align 4
  %add.ptr520.i = getelementptr i8, ptr %235, i32 16444
  %236 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr520.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !480
  %237 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %hw, align 4
  %add.ptr530.i = getelementptr i8, ptr %238, i32 16632
  %239 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr530.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !481
  %240 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %hw, align 4
  %add.ptr540.i = getelementptr i8, ptr %241, i32 16636
  %242 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr540.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !482
  %243 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %244)
  %cmp545.i = icmp ult i32 %244, 5
  br i1 %cmp545.i, label %if.end.i315.e1000_clear_hw_cntrs.exit_crit_edge, label %if.end547.i

if.end.i315.e1000_clear_hw_cntrs.exit_crit_edge:  ; preds = %if.end.i315
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_clear_hw_cntrs.exit

if.end547.i:                                      ; preds = %if.end.i315
  call void @__sanitizer_cov_trace_pc() #8
  %245 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %hw, align 4
  %add.ptr554.i = getelementptr i8, ptr %246, i32 16564
  %247 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr554.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !483
  %248 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %hw, align 4
  %add.ptr564.i = getelementptr i8, ptr %249, i32 16568
  %250 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr564.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !484
  %251 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load ptr, ptr %hw, align 4
  %add.ptr574.i = getelementptr i8, ptr %252, i32 16572
  %253 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr574.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !485
  br label %e1000_clear_hw_cntrs.exit

e1000_clear_hw_cntrs.exit:                        ; preds = %if.end547.i, %if.end.i315.e1000_clear_hw_cntrs.exit_crit_edge, %if.end209.e1000_clear_hw_cntrs.exit_crit_edge
  %254 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load2_noabort(i32 %254)
  %255 = load i16, ptr %device_id.i, align 2
  %256 = zext i16 %255 to i64
  call void @__sanitizer_cov_trace_switch(i64 %256, ptr @__sancov_gen_cov_switch_values.150)
  switch i16 %255, label %e1000_clear_hw_cntrs.exit.cleanup_crit_edge [
    i16 4249, label %e1000_clear_hw_cntrs.exit.if.then217_crit_edge
    i16 4277, label %e1000_clear_hw_cntrs.exit.if.then217_crit_edge324
  ]

e1000_clear_hw_cntrs.exit.if.then217_crit_edge324: ; preds = %e1000_clear_hw_cntrs.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then217

e1000_clear_hw_cntrs.exit.if.then217_crit_edge:   ; preds = %e1000_clear_hw_cntrs.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then217

e1000_clear_hw_cntrs.exit.cleanup_crit_edge:      ; preds = %e1000_clear_hw_cntrs.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then217:                                       ; preds = %e1000_clear_hw_cntrs.exit.if.then217_crit_edge, %e1000_clear_hw_cntrs.exit.if.then217_crit_edge324
  %257 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load ptr, ptr %hw, align 4
  %add.ptr225 = getelementptr i8, ptr %258, i32 24
  %259 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr225) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !486
  %260 = or i32 %259, 512
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !487
  tail call void @arm_heavy_mb() #6
  %261 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %hw, align 4
  %add.ptr238 = getelementptr i8, ptr %262, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr238, i32 %260) #6, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %if.then217, %e1000_clear_hw_cntrs.exit.cleanup_crit_edge, %if.then6, %do.body1
  %retval.0 = phi i32 [ -1, %if.then6 ], [ %call182, %e1000_clear_hw_cntrs.exit.cleanup_crit_edge ], [ %call182, %if.then217 ], [ -1, %do.body1 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_id_led_init(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %eeprom_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data) #6
  %0 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %eeprom_data, align 2, !annotation !414
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %1 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %2)
  %cmp = icmp ult i32 %2, 5
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %4, i32 3584
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %6 = tail call i32 @llvm.bswap.i32(i32 %5)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !488
  %ledctl_default = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 34
  %7 = ptrtoint ptr %ledctl_default to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %ledctl_default, align 4
  %ledctl_mode1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 35
  %8 = ptrtoint ptr %ledctl_mode1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %6, ptr %ledctl_mode1, align 4
  %ledctl_mode2 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 36
  %9 = ptrtoint ptr %ledctl_mode2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %6, ptr %ledctl_mode2, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 4, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp7 = icmp slt i32 %call.i, 0
  br i1 %cmp7, label %do.body9, label %if.end19

do.body9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_id_led_init.__UNIQUE_ID_ddebug615, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_id_led_init, %if.then14)) #6
          to label %cleanup [label %if.then14], !srcloc !394

if.then14:                                        ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #8
  %call15 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_id_led_init.__UNIQUE_ID_ddebug615, ptr noundef %call15, ptr noundef nonnull @.str.11) #6
  br label %cleanup

if.end19:                                         ; preds = %if.end
  %10 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %eeprom_data, align 2
  %12 = zext i16 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.151)
  switch i16 %11, label %if.end19.if.end26_crit_edge [
    i16 0, label %if.end19.if.then25_crit_edge
    i16 -1, label %if.end19.if.then25_crit_edge152
  ]

if.end19.if.then25_crit_edge152:                  ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then25

if.end19.if.then25_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then25

if.end19.if.end26_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end26

if.then25:                                        ; preds = %if.end19.if.then25_crit_edge, %if.end19.if.then25_crit_edge152
  %13 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 -30447, ptr %eeprom_data, align 2
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.end19.if.end26_crit_edge
  %14 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %eeprom_data, align 2
  %conv30 = zext i16 %15 to i32
  %conv32 = and i32 %conv30, 15
  %16 = zext i32 %conv32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.152)
  switch i32 %conv32, label %if.end26.for.inc_crit_edge [
    i32 4, label %if.end26.sw.epilog_crit_edge
    i32 5, label %if.end26.sw.epilog_crit_edge153
    i32 6, label %if.end26.sw.epilog_crit_edge154
    i32 7, label %if.end26.sw.bb43_crit_edge
    i32 8, label %if.end26.sw.bb43_crit_edge155
    i32 9, label %if.end26.sw.bb43_crit_edge156
    i32 2, label %if.end26.for.inc.sink.split_crit_edge
    i32 3, label %sw.bb68
  ]

if.end26.for.inc.sink.split_crit_edge:            ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.sink.split

if.end26.sw.bb43_crit_edge156:                    ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb43

if.end26.sw.bb43_crit_edge155:                    ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb43

if.end26.sw.bb43_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb43

if.end26.sw.epilog_crit_edge154:                  ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

if.end26.sw.epilog_crit_edge153:                  ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

if.end26.sw.epilog_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

if.end26.for.inc_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc

sw.bb43:                                          ; preds = %if.end26.sw.bb43_crit_edge, %if.end26.sw.bb43_crit_edge155, %if.end26.sw.bb43_crit_edge156
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb43, %if.end26.sw.epilog_crit_edge, %if.end26.sw.epilog_crit_edge153, %if.end26.sw.epilog_crit_edge154
  %.sink = phi i32 [ 15, %sw.bb43 ], [ 14, %if.end26.sw.epilog_crit_edge ], [ 14, %if.end26.sw.epilog_crit_edge153 ], [ 14, %if.end26.sw.epilog_crit_edge154 ]
  %17 = ptrtoint ptr %ledctl_mode1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %ledctl_mode1, align 4
  %and49 = and i32 %18, -256
  %or54 = or i32 %and49, %.sink
  store i32 %or54, ptr %ledctl_mode1, align 4
  %switch.tableidx = add nsw i32 %conv32, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %switch.tableidx)
  %19 = icmp ult i32 %switch.tableidx, 5
  br i1 %19, label %switch.hole_check, label %sw.epilog.for.inc_crit_edge

sw.epilog.for.inc_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc

sw.bb68:                                          ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.sink.split

switch.hole_check:                                ; preds = %sw.epilog
  %switch.maskindex = trunc i32 %switch.tableidx to i8
  %switch.shifted = lshr i8 27, %switch.maskindex
  %20 = and i8 %switch.shifted, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %switch.lobit.not = icmp eq i8 %20, 0
  br i1 %switch.lobit.not, label %switch.hole_check.for.inc_crit_edge, label %switch.lookup

switch.hole_check.for.inc_crit_edge:              ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc

switch.lookup:                                    ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #8
  %switch.gep = getelementptr inbounds [5 x i32], ptr @switch.table.e1000_id_led_init, i32 0, i32 %switch.tableidx
  %21 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %21)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %for.inc.sink.split

for.inc.sink.split:                               ; preds = %switch.lookup, %sw.bb68, %if.end26.for.inc.sink.split_crit_edge
  %.sink122 = phi i32 [ 15, %sw.bb68 ], [ 14, %if.end26.for.inc.sink.split_crit_edge ], [ %switch.load, %switch.lookup ]
  %22 = ptrtoint ptr %ledctl_mode2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ledctl_mode2, align 4
  %and62 = and i32 %23, -256
  %or67 = or i32 %and62, %.sink122
  store i32 %or67, ptr %ledctl_mode2, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.inc.sink.split, %switch.hole_check.for.inc_crit_edge, %sw.epilog.for.inc_crit_edge, %if.end26.for.inc_crit_edge
  %shr.1 = lshr i32 %conv30, 4
  %conv32.1 = and i32 %shr.1, 15
  %24 = zext i32 %conv32.1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.153)
  switch i32 %conv32.1, label %for.inc.for.inc.1_crit_edge [
    i32 4, label %for.inc.sw.bb.1_crit_edge
    i32 5, label %for.inc.sw.bb.1_crit_edge157
    i32 6, label %for.inc.sw.bb.1_crit_edge158
    i32 7, label %for.inc.sw.epilog.1_crit_edge
    i32 8, label %for.inc.sw.epilog.1_crit_edge159
    i32 9, label %for.inc.sw.epilog.1_crit_edge160
    i32 2, label %for.inc.for.inc.1.sink.split_crit_edge
    i32 3, label %sw.bb68.1
  ]

for.inc.for.inc.1.sink.split_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.1.sink.split

for.inc.sw.epilog.1_crit_edge160:                 ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.1

for.inc.sw.epilog.1_crit_edge159:                 ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.1

for.inc.sw.epilog.1_crit_edge:                    ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.1

for.inc.sw.bb.1_crit_edge158:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.1

for.inc.sw.bb.1_crit_edge157:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.1

for.inc.sw.bb.1_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.1

sw.bb.1:                                          ; preds = %for.inc.sw.bb.1_crit_edge, %for.inc.sw.bb.1_crit_edge157, %for.inc.sw.bb.1_crit_edge158
  br label %sw.epilog.1

sw.epilog.1:                                      ; preds = %sw.bb.1, %for.inc.sw.epilog.1_crit_edge, %for.inc.sw.epilog.1_crit_edge159, %for.inc.sw.epilog.1_crit_edge160
  %.sink124 = phi i32 [ 3584, %sw.bb.1 ], [ 3840, %for.inc.sw.epilog.1_crit_edge ], [ 3840, %for.inc.sw.epilog.1_crit_edge159 ], [ 3840, %for.inc.sw.epilog.1_crit_edge160 ]
  %25 = ptrtoint ptr %ledctl_mode1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %ledctl_mode1, align 4
  %and38.1 = and i32 %26, -65281
  %or.1 = or i32 %and38.1, %.sink124
  store i32 %or.1, ptr %ledctl_mode1, align 4
  %switch.tableidx135 = add nsw i32 %conv32.1, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %switch.tableidx135)
  %27 = icmp ult i32 %switch.tableidx135, 5
  br i1 %27, label %switch.hole_check136, label %sw.epilog.1.for.inc.1_crit_edge

sw.epilog.1.for.inc.1_crit_edge:                  ; preds = %sw.epilog.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.1

sw.bb68.1:                                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.1.sink.split

switch.hole_check136:                             ; preds = %sw.epilog.1
  %switch.maskindex138 = trunc i32 %switch.tableidx135 to i8
  %switch.shifted139 = lshr i8 27, %switch.maskindex138
  %28 = and i8 %switch.shifted139, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %switch.lobit140.not = icmp eq i8 %28, 0
  br i1 %switch.lobit140.not, label %switch.hole_check136.for.inc.1_crit_edge, label %switch.lookup137

switch.hole_check136.for.inc.1_crit_edge:         ; preds = %switch.hole_check136
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.1

switch.lookup137:                                 ; preds = %switch.hole_check136
  call void @__sanitizer_cov_trace_pc() #8
  %switch.gep141 = getelementptr inbounds [5 x i32], ptr @switch.table.e1000_id_led_init.137, i32 0, i32 %switch.tableidx135
  %29 = ptrtoint ptr %switch.gep141 to i32
  call void @__asan_load4_noabort(i32 %29)
  %switch.load142 = load i32, ptr %switch.gep141, align 4
  br label %for.inc.1.sink.split

for.inc.1.sink.split:                             ; preds = %switch.lookup137, %sw.bb68.1, %for.inc.for.inc.1.sink.split_crit_edge
  %.sink126 = phi i32 [ 3840, %sw.bb68.1 ], [ 3584, %for.inc.for.inc.1.sink.split_crit_edge ], [ %switch.load142, %switch.lookup137 ]
  %30 = ptrtoint ptr %ledctl_mode2 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ledctl_mode2, align 4
  %and74.1 = and i32 %31, -65281
  %or79.1 = or i32 %and74.1, %.sink126
  store i32 %or79.1, ptr %ledctl_mode2, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %for.inc.1.sink.split, %switch.hole_check136.for.inc.1_crit_edge, %sw.epilog.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge
  %shr.2 = lshr i32 %conv30, 8
  %conv32.2 = and i32 %shr.2, 15
  %32 = zext i32 %conv32.2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.154)
  switch i32 %conv32.2, label %for.inc.1.for.inc.2_crit_edge [
    i32 4, label %for.inc.1.sw.bb.2_crit_edge
    i32 5, label %for.inc.1.sw.bb.2_crit_edge161
    i32 6, label %for.inc.1.sw.bb.2_crit_edge162
    i32 7, label %for.inc.1.sw.epilog.2_crit_edge
    i32 8, label %for.inc.1.sw.epilog.2_crit_edge163
    i32 9, label %for.inc.1.sw.epilog.2_crit_edge164
    i32 2, label %for.inc.1.for.inc.2.sink.split_crit_edge
    i32 3, label %sw.bb68.2
  ]

for.inc.1.for.inc.2.sink.split_crit_edge:         ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.2.sink.split

for.inc.1.sw.epilog.2_crit_edge164:               ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.2

for.inc.1.sw.epilog.2_crit_edge163:               ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.2

for.inc.1.sw.epilog.2_crit_edge:                  ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.2

for.inc.1.sw.bb.2_crit_edge162:                   ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.2

for.inc.1.sw.bb.2_crit_edge161:                   ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.2

for.inc.1.sw.bb.2_crit_edge:                      ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.2

sw.bb.2:                                          ; preds = %for.inc.1.sw.bb.2_crit_edge, %for.inc.1.sw.bb.2_crit_edge161, %for.inc.1.sw.bb.2_crit_edge162
  br label %sw.epilog.2

sw.epilog.2:                                      ; preds = %sw.bb.2, %for.inc.1.sw.epilog.2_crit_edge, %for.inc.1.sw.epilog.2_crit_edge163, %for.inc.1.sw.epilog.2_crit_edge164
  %.sink128 = phi i32 [ 917504, %sw.bb.2 ], [ 983040, %for.inc.1.sw.epilog.2_crit_edge ], [ 983040, %for.inc.1.sw.epilog.2_crit_edge163 ], [ 983040, %for.inc.1.sw.epilog.2_crit_edge164 ]
  %33 = ptrtoint ptr %ledctl_mode1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %ledctl_mode1, align 4
  %and38.2 = and i32 %34, -16711681
  %or.2 = or i32 %and38.2, %.sink128
  store i32 %or.2, ptr %ledctl_mode1, align 4
  %switch.tableidx144 = add nsw i32 %conv32.2, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %switch.tableidx144)
  %35 = icmp ult i32 %switch.tableidx144, 5
  br i1 %35, label %switch.hole_check145, label %sw.epilog.2.for.inc.2_crit_edge

sw.epilog.2.for.inc.2_crit_edge:                  ; preds = %sw.epilog.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.2

sw.bb68.2:                                        ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.2.sink.split

switch.hole_check145:                             ; preds = %sw.epilog.2
  %switch.maskindex147 = trunc i32 %switch.tableidx144 to i8
  %switch.shifted148 = lshr i8 27, %switch.maskindex147
  %36 = and i8 %switch.shifted148, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %switch.lobit149.not = icmp eq i8 %36, 0
  br i1 %switch.lobit149.not, label %switch.hole_check145.for.inc.2_crit_edge, label %switch.lookup146

switch.hole_check145.for.inc.2_crit_edge:         ; preds = %switch.hole_check145
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.inc.2

switch.lookup146:                                 ; preds = %switch.hole_check145
  call void @__sanitizer_cov_trace_pc() #8
  %switch.gep150 = getelementptr inbounds [5 x i32], ptr @switch.table.e1000_id_led_init.138, i32 0, i32 %switch.tableidx144
  %37 = ptrtoint ptr %switch.gep150 to i32
  call void @__asan_load4_noabort(i32 %37)
  %switch.load151 = load i32, ptr %switch.gep150, align 4
  br label %for.inc.2.sink.split

for.inc.2.sink.split:                             ; preds = %switch.lookup146, %sw.bb68.2, %for.inc.1.for.inc.2.sink.split_crit_edge
  %.sink130 = phi i32 [ 983040, %sw.bb68.2 ], [ 917504, %for.inc.1.for.inc.2.sink.split_crit_edge ], [ %switch.load151, %switch.lookup146 ]
  %38 = ptrtoint ptr %ledctl_mode2 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ledctl_mode2, align 4
  %and74.2 = and i32 %39, -16711681
  %or79.2 = or i32 %and74.2, %.sink130
  store i32 %or79.2, ptr %ledctl_mode2, align 4
  br label %for.inc.2

for.inc.2:                                        ; preds = %for.inc.2.sink.split, %switch.hole_check145.for.inc.2_crit_edge, %sw.epilog.2.for.inc.2_crit_edge, %for.inc.1.for.inc.2_crit_edge
  %shr.3 = lshr i32 %conv30, 12
  %40 = zext i32 %shr.3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %40, ptr @__sancov_gen_cov_switch_values.155)
  switch i32 %shr.3, label %for.inc.2.cleanup_crit_edge [
    i32 4, label %for.inc.2.sw.bb.3_crit_edge
    i32 5, label %for.inc.2.sw.bb.3_crit_edge165
    i32 6, label %for.inc.2.sw.bb.3_crit_edge166
    i32 7, label %for.inc.2.sw.epilog.3_crit_edge
    i32 8, label %for.inc.2.sw.epilog.3_crit_edge167
    i32 9, label %for.inc.2.sw.epilog.3_crit_edge168
    i32 2, label %for.inc.2.sw.bb56.3_crit_edge
    i32 3, label %for.inc.2.sw.bb68.3_crit_edge
  ]

for.inc.2.sw.bb68.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb68.3

for.inc.2.sw.bb56.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb56.3

for.inc.2.sw.epilog.3_crit_edge168:               ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.3

for.inc.2.sw.epilog.3_crit_edge167:               ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.3

for.inc.2.sw.epilog.3_crit_edge:                  ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.3

for.inc.2.sw.bb.3_crit_edge166:                   ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.3

for.inc.2.sw.bb.3_crit_edge165:                   ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.3

for.inc.2.sw.bb.3_crit_edge:                      ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb.3

for.inc.2.cleanup_crit_edge:                      ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

sw.bb.3:                                          ; preds = %for.inc.2.sw.bb.3_crit_edge, %for.inc.2.sw.bb.3_crit_edge165, %for.inc.2.sw.bb.3_crit_edge166
  br label %sw.epilog.3

sw.epilog.3:                                      ; preds = %sw.bb.3, %for.inc.2.sw.epilog.3_crit_edge, %for.inc.2.sw.epilog.3_crit_edge167, %for.inc.2.sw.epilog.3_crit_edge168
  %.sink132 = phi i32 [ 234881024, %sw.bb.3 ], [ 251658240, %for.inc.2.sw.epilog.3_crit_edge ], [ 251658240, %for.inc.2.sw.epilog.3_crit_edge167 ], [ 251658240, %for.inc.2.sw.epilog.3_crit_edge168 ]
  %41 = ptrtoint ptr %ledctl_mode1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ledctl_mode1, align 4
  %and38.3 = and i32 %42, 16777215
  %or.3 = or i32 %and38.3, %.sink132
  store i32 %or.3, ptr %ledctl_mode1, align 4
  %43 = zext i32 %shr.3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %43, ptr @__sancov_gen_cov_switch_values.156)
  switch i32 %shr.3, label %sw.epilog.3.cleanup_crit_edge [
    i32 9, label %sw.epilog.3.sw.bb68.3_crit_edge
    i32 5, label %sw.epilog.3.sw.bb56.3_crit_edge
    i32 8, label %sw.epilog.3.sw.bb56.3_crit_edge169
    i32 6, label %sw.epilog.3.sw.bb68.3_crit_edge170
  ]

sw.epilog.3.sw.bb68.3_crit_edge170:               ; preds = %sw.epilog.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb68.3

sw.epilog.3.sw.bb56.3_crit_edge169:               ; preds = %sw.epilog.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb56.3

sw.epilog.3.sw.bb56.3_crit_edge:                  ; preds = %sw.epilog.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb56.3

sw.epilog.3.sw.bb68.3_crit_edge:                  ; preds = %sw.epilog.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb68.3

sw.epilog.3.cleanup_crit_edge:                    ; preds = %sw.epilog.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

sw.bb56.3:                                        ; preds = %sw.epilog.3.sw.bb56.3_crit_edge, %sw.epilog.3.sw.bb56.3_crit_edge169, %for.inc.2.sw.bb56.3_crit_edge
  %44 = ptrtoint ptr %ledctl_mode2 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %ledctl_mode2, align 4
  %and62.3 = and i32 %45, 16777215
  %or67.3 = or i32 %and62.3, 234881024
  store i32 %or67.3, ptr %ledctl_mode2, align 4
  br label %cleanup

sw.bb68.3:                                        ; preds = %sw.epilog.3.sw.bb68.3_crit_edge, %sw.epilog.3.sw.bb68.3_crit_edge170, %for.inc.2.sw.bb68.3_crit_edge
  %46 = ptrtoint ptr %ledctl_mode2 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ledctl_mode2, align 4
  %and74.3 = and i32 %47, 16777215
  %or79.3 = or i32 %and74.3, 251658240
  store i32 %or79.3, ptr %ledctl_mode2, align 4
  br label %cleanup

cleanup:                                          ; preds = %sw.bb68.3, %sw.bb56.3, %sw.epilog.3.cleanup_crit_edge, %for.inc.2.cleanup_crit_edge, %if.then14, %do.body9, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -1, %if.then14 ], [ -1, %do.body9 ], [ 0, %sw.bb68.3 ], [ 0, %sw.bb56.3 ], [ 0, %sw.epilog.3.cleanup_crit_edge ], [ 0, %for.inc.2.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_init_rx_addrs(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_init_rx_addrs.__UNIQUE_ID_ddebug613, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_init_rx_addrs, %if.then)) #6
          to label %do.end6 [label %if.then], !srcloc !394

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %call4 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_init_rx_addrs.__UNIQUE_ID_ddebug613, ptr noundef %call4, ptr noundef nonnull @.str.133) #6
  br label %do.end6

do.end6:                                          ; preds = %if.then, %entry
  %mac_addr = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 60
  %0 = ptrtoint ptr %mac_addr to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %mac_addr, align 1
  %conv.i = zext i8 %1 to i32
  %arrayidx1.i = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 60, i32 1
  %2 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx1.i, align 1
  %conv2.i = zext i8 %3 to i32
  %shl.i = shl nuw nsw i32 %conv2.i, 8
  %or.i = or i32 %shl.i, %conv.i
  %arrayidx3.i = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 60, i32 2
  %4 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx3.i, align 1
  %conv4.i = zext i8 %5 to i32
  %shl5.i = shl nuw nsw i32 %conv4.i, 16
  %or6.i = or i32 %or.i, %shl5.i
  %arrayidx7.i = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 60, i32 3
  %6 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx7.i, align 1
  %conv8.i = zext i8 %7 to i32
  %shl9.i = shl nuw i32 %conv8.i, 24
  %or10.i = or i32 %or6.i, %shl9.i
  %arrayidx11.i = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 60, i32 4
  %8 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx11.i, align 1
  %conv12.i = zext i8 %9 to i32
  %arrayidx13.i = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 60, i32 5
  %10 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx13.i, align 1
  %conv14.i = zext i8 %11 to i32
  %shl15.i = shl nuw nsw i32 %conv14.i, 8
  %or16.i = or i32 %shl15.i, %conv12.i
  %or17.i = or i32 %or16.i, -2147483648
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !489
  tail call void @arm_heavy_mb() #6
  %12 = tail call i32 @llvm.bswap.i32(i32 %or10.i) #6
  %13 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hw, align 4
  %mac_type18.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %15 = ptrtoint ptr %mac_type18.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mac_type18.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %cmp.i = icmp ugt i32 %16, 2
  %cond.i = select i1 %cmp.i, i32 21504, i32 64
  %add.ptr.i = getelementptr i8, ptr %14, i32 %cond.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %12) #6, !srcloc !396
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr28.i = getelementptr i8, ptr %18, i32 8
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr28.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !490
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !491
  tail call void @arm_heavy_mb() #6
  %20 = tail call i32 @llvm.bswap.i32(i32 %or17.i) #6
  %21 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw, align 4
  %23 = ptrtoint ptr %mac_type18.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mac_type18.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp35.i = icmp ugt i32 %24, 2
  %cond37.i = select i1 %cmp35.i, i32 21504, i32 64
  %add.ptr38.i = getelementptr i8, ptr %22, i32 %cond37.i
  %add.ptr41.i = getelementptr i8, ptr %add.ptr38.i, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr41.i, i32 %20) #6, !srcloc !396
  %25 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw, align 4
  %add.ptr49.i = getelementptr i8, ptr %26, i32 8
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr49.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !492
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_init_rx_addrs.__UNIQUE_ID_ddebug614, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_init_rx_addrs, %if.then20)) #6
          to label %do.body27 [label %if.then20], !srcloc !394

if.then20:                                        ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #8
  %call21 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_init_rx_addrs.__UNIQUE_ID_ddebug614, ptr noundef %call21, ptr noundef nonnull @.str.134) #6
  br label %do.body27

do.body27:                                        ; preds = %do.body27.do.body27_crit_edge, %if.then20, %do.end6
  %i.081 = phi i32 [ %inc, %do.body27.do.body27_crit_edge ], [ 1, %do.end6 ], [ 1, %if.then20 ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !493
  tail call void @arm_heavy_mb() #6
  %28 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw, align 4
  %30 = ptrtoint ptr %mac_type18.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %mac_type18.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %31)
  %cmp30 = icmp ugt i32 %31, 2
  %cond = select i1 %cmp30, i32 21504, i32 64
  %add.ptr = getelementptr i8, ptr %29, i32 %cond
  %shl = shl nuw nsw i32 %i.081, 3
  %add.ptr32 = getelementptr i8, ptr %add.ptr, i32 %shl
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr32, i32 0) #6, !srcloc !396
  %32 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw, align 4
  %add.ptr37 = getelementptr i8, ptr %33, i32 8
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr37) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !494
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !495
  tail call void @arm_heavy_mb() #6
  %35 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hw, align 4
  %37 = ptrtoint ptr %mac_type18.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %mac_type18.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %38)
  %cmp46 = icmp ugt i32 %38, 2
  %cond47 = select i1 %cmp46, i32 21504, i32 64
  %add.ptr48 = getelementptr i8, ptr %36, i32 %cond47
  %add = or i32 %shl, 4
  %add.ptr51 = getelementptr i8, ptr %add.ptr48, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr51, i32 0) #6, !srcloc !396
  %39 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw, align 4
  %add.ptr58 = getelementptr i8, ptr %40, i32 8
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr58) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !496
  %inc = add nuw nsw i32 %i.081, 1
  %exitcond.not = icmp eq i32 %inc, 15
  br i1 %exitcond.not, label %for.end, label %do.body27.do.body27_crit_edge

do.body27.do.body27_crit_edge:                    ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body27

for.end:                                          ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_pcix_get_mmrbc(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_pcix_set_mmrbc(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_setup_link(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  %eeprom_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data) #6
  %0 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %eeprom_data, align 2, !annotation !414
  %fc = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %1 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %fc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %2)
  %cmp = icmp eq i32 %2, 255
  br i1 %cmp, label %if.then, label %entry.if.end26_crit_edge

entry.if.end26_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end26

if.then:                                          ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 15, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end11, label %do.body2

do.body2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_link.__UNIQUE_ID_ddebug509, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_link, %if.then7)) #6
          to label %cleanup [label %if.then7], !srcloc !394

if.then7:                                         ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #8
  %call8 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_link.__UNIQUE_ID_ddebug509, ptr noundef %call8, ptr noundef nonnull @.str.11) #6
  br label %cleanup

if.end11:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  %3 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %eeprom_data, align 2
  %5 = trunc i16 %4 to i14
  %trunc = and i14 %5, -4096
  %6 = sext i14 %trunc to i16
  call void @__sanitizer_cov_trace_const_cmp2(i16 -8192, i16 %6)
  %switch.selectcmp = icmp eq i14 %trunc, -8192
  %switch.select = select i1 %switch.selectcmp, i32 2, i32 3
  %7 = sext i14 %trunc to i16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %switch.selectcmp304 = icmp eq i14 %trunc, 0
  %switch.select305 = select i1 %switch.selectcmp304, i32 0, i32 %switch.select
  %8 = ptrtoint ptr %fc to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %switch.select305, ptr %fc, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.end11, %entry.if.end26_crit_edge
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %9 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp27 = icmp eq i32 %10, 1
  br i1 %cmp27, label %if.end32.thread, label %if.end32

if.end32.thread:                                  ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  %11 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %fc, align 4
  %and31 = and i32 %12, -3
  store i32 %and31, ptr %fc, align 4
  br label %land.lhs.true

if.end32:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %10)
  %cmp34 = icmp ult i32 %10, 3
  br i1 %cmp34, label %if.end32.land.lhs.true_crit_edge, label %if.end32.if.end43_crit_edge

if.end32.if.end43_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end43

if.end32.land.lhs.true_crit_edge:                 ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #8
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end32.land.lhs.true_crit_edge, %if.end32.thread
  %report_tx_early = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 75
  %13 = ptrtoint ptr %report_tx_early to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %report_tx_early, align 1, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool36.not = icmp eq i8 %14, 0
  br i1 %tobool36.not, label %land.lhs.true.if.end43_crit_edge, label %if.then40

land.lhs.true.if.end43_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end43

if.then40:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  %15 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %fc, align 4
  %and42 = and i32 %16, -2
  store i32 %and42, ptr %fc, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then40, %land.lhs.true.if.end43_crit_edge, %if.end32.if.end43_crit_edge
  %17 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %fc, align 4
  %original_fc = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 25
  %19 = ptrtoint ptr %original_fc to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %original_fc, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_link.__UNIQUE_ID_ddebug510, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_link, %if.then58)) #6
          to label %do.end65 [label %if.then58], !srcloc !394

if.then58:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #8
  %call59 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %20 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %fc, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_link.__UNIQUE_ID_ddebug510, ptr noundef %call59, ptr noundef nonnull @.str.12, i32 noundef %21) #6
  br label %do.end65

do.end65:                                         ; preds = %if.then58, %if.end43
  %22 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %23)
  %cmp67 = icmp eq i32 %23, 3
  br i1 %cmp67, label %if.then69, label %do.end65.if.end102_crit_edge

do.end65.if.end102_crit_edge:                     ; preds = %do.end65
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end102

if.then69:                                        ; preds = %do.end65
  call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i298 = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 15, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i298)
  %tobool71.not = icmp eq i32 %call.i298, 0
  br i1 %tobool71.not, label %if.end93, label %do.body74

do.body74:                                        ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_link.__UNIQUE_ID_ddebug511, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_link, %if.then86)) #6
          to label %cleanup [label %if.then86], !srcloc !394

if.then86:                                        ; preds = %do.body74
  call void @__sanitizer_cov_trace_pc() #8
  %call87 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_link.__UNIQUE_ID_ddebug511, ptr noundef %call87, ptr noundef nonnull @.str.11) #6
  br label %cleanup

if.end93:                                         ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #8
  %24 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %eeprom_data, align 2
  %26 = shl i16 %25, 4
  %27 = and i16 %26, 3840
  %shl = zext i16 %27 to i32
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !498
  call void @arm_heavy_mb() #6
  %28 = shl nuw nsw i32 %shl, 8
  %29 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %30, i32 24
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %28) #6, !srcloc !396
  br label %if.end102

if.end102:                                        ; preds = %if.end93, %do.end65.if.end102_crit_edge
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %31 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp103 = icmp eq i32 %32, 0
  br i1 %cmp103, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #8
  %call105 = call fastcc i32 @e1000_setup_copper_link(ptr noundef %hw)
  br label %cond.end

cond.false:                                       ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #8
  %call106 = call fastcc i32 @e1000_setup_fiber_serdes_link(ptr noundef %hw)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond107 = phi i32 [ %call105, %cond.true ], [ %call106, %cond.false ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_link.__UNIQUE_ID_ddebug512, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_link, %if.then121)) #6
          to label %do.body128 [label %if.then121], !srcloc !394

if.then121:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #8
  %call122 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_link.__UNIQUE_ID_ddebug512, ptr noundef %call122, ptr noundef nonnull @.str.13) #6
  br label %do.body128

do.body128:                                       ; preds = %if.then121, %cond.end
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !499
  call void @arm_heavy_mb() #6
  %33 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %hw, align 4
  %add.ptr136 = getelementptr i8, ptr %34, i32 48
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr136, i32 143130624) #6, !srcloc !396
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !500
  call void @arm_heavy_mb() #6
  %35 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hw, align 4
  %add.ptr145 = getelementptr i8, ptr %36, i32 44
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr145, i32 65536) #6, !srcloc !396
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !501
  call void @arm_heavy_mb() #6
  %37 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hw, align 4
  %add.ptr154 = getelementptr i8, ptr %38, i32 40
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr154, i32 25215488) #6, !srcloc !396
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !502
  call void @arm_heavy_mb() #6
  %fc_pause_time = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 44
  %39 = ptrtoint ptr %fc_pause_time to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %fc_pause_time, align 2
  %conv158 = zext i16 %40 to i32
  %41 = call i32 @llvm.bswap.i32(i32 %conv158)
  %42 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hw, align 4
  %add.ptr164 = getelementptr i8, ptr %43, i32 368
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr164, i32 %41) #6, !srcloc !396
  %44 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %fc, align 4
  %and166 = and i32 %45, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and166)
  %tobool167.not = icmp eq i32 %and166, 0
  br i1 %tobool167.not, label %do.body169, label %if.else187

do.body169:                                       ; preds = %do.body128
  call void @__sanitizer_cov_trace_pc() #8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !503
  call void @arm_heavy_mb() #6
  %46 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hw, align 4
  %48 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %49)
  %cmp174 = icmp ugt i32 %49, 2
  %cond176 = select i1 %cmp174, i32 8544, i32 360
  %add.ptr177 = getelementptr i8, ptr %47, i32 %cond176
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr177, i32 0) #6, !srcloc !396
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !504
  call void @arm_heavy_mb() #6
  %50 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hw, align 4
  %52 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %53)
  %cmp183 = icmp ugt i32 %53, 2
  %cond185 = select i1 %cmp183, i32 8552, i32 352
  %add.ptr186 = getelementptr i8, ptr %51, i32 %cond185
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr186, i32 0) #6, !srcloc !396
  br label %cleanup

if.else187:                                       ; preds = %do.body128
  %fc_send_xon = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 73
  %54 = ptrtoint ptr %fc_send_xon to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %fc_send_xon, align 1, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %55)
  %tobool188.not = icmp eq i8 %55, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6
  call void @arm_heavy_mb() #6
  %fc_low_water214 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 43
  %56 = ptrtoint ptr %fc_low_water214 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %fc_low_water214, align 4
  %conv215 = zext i16 %57 to i32
  br i1 %tobool188.not, label %do.body211, label %do.body190

do.body190:                                       ; preds = %if.else187
  call void @__sanitizer_cov_trace_pc() #8
  %or = or i32 %conv215, -2147483648
  %58 = call i32 @llvm.bswap.i32(i32 %or)
  %59 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hw, align 4
  %61 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %62)
  %cmp196 = icmp ugt i32 %62, 2
  %cond198 = select i1 %cmp196, i32 8544, i32 360
  %add.ptr199 = getelementptr i8, ptr %60, i32 %cond198
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr199, i32 %58) #6, !srcloc !396
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !505
  call void @arm_heavy_mb() #6
  %fc_high_water = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 42
  %63 = ptrtoint ptr %fc_high_water to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %fc_high_water, align 2
  %conv203 = zext i16 %64 to i32
  %65 = call i32 @llvm.bswap.i32(i32 %conv203)
  %66 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %hw, align 4
  %68 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %69)
  %cmp206 = icmp ugt i32 %69, 2
  %cond208 = select i1 %cmp206, i32 8552, i32 352
  %add.ptr209 = getelementptr i8, ptr %67, i32 %cond208
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr209, i32 %65) #6, !srcloc !396
  br label %cleanup

do.body211:                                       ; preds = %if.else187
  call void @__sanitizer_cov_trace_pc() #8
  %70 = call i32 @llvm.bswap.i32(i32 %conv215)
  %71 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %hw, align 4
  %73 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %74)
  %cmp218 = icmp ugt i32 %74, 2
  %cond220 = select i1 %cmp218, i32 8544, i32 360
  %add.ptr221 = getelementptr i8, ptr %72, i32 %cond220
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr221, i32 %70) #6, !srcloc !396
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !506
  call void @arm_heavy_mb() #6
  %fc_high_water225 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 42
  %75 = ptrtoint ptr %fc_high_water225 to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %fc_high_water225, align 2
  %conv226 = zext i16 %76 to i32
  %77 = call i32 @llvm.bswap.i32(i32 %conv226)
  %78 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %hw, align 4
  %80 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %81)
  %cmp229 = icmp ugt i32 %81, 2
  %cond231 = select i1 %cmp229, i32 8552, i32 352
  %add.ptr232 = getelementptr i8, ptr %79, i32 %cond231
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr232, i32 %77) #6, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %do.body211, %do.body190, %do.body169, %if.then86, %do.body74, %if.then7, %do.body2
  %retval.0 = phi i32 [ -1, %if.then7 ], [ -1, %if.then86 ], [ %cond107, %do.body190 ], [ %cond107, %do.body211 ], [ %cond107, %do.body169 ], [ -1, %do.body2 ], [ -1, %do.body74 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_read_eeprom(ptr noundef %hw, i16 noundef zeroext %offset, i16 noundef zeroext %words, ptr noundef %data) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call = tail call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext %offset, i16 noundef zeroext %words, ptr noundef %data)
  tail call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_setup_copper_link(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %call = tail call fastcc i32 @e1000_copper_link_preconfig(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %entry
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %1 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %phy_type, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.157)
  switch i32 %2, label %if.else13 [
    i32 1, label %if.then1
    i32 0, label %if.then8
  ]

if.then1:                                         ; preds = %if.end
  %call2 = tail call fastcc i32 @e1000_copper_link_igp_setup(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.then1.if.end29_crit_edge, label %if.then1.cleanup_crit_edge

if.then1.cleanup_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then1.if.end29_crit_edge:                      ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end29

if.then8:                                         ; preds = %if.end
  %call9 = tail call fastcc i32 @e1000_copper_link_mgp_setup(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.then8.if.end29_crit_edge, label %if.then8.cleanup_crit_edge

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then8.if.end29_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end29

if.else13:                                        ; preds = %if.end
  %call14 = tail call fastcc i32 @gbe_dhg_phy_setup(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.else13.if.end29_crit_edge, label %do.body17

if.else13.if.end29_crit_edge:                     ; preds = %if.else13
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end29

do.body17:                                        ; preds = %if.else13
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug536, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_copper_link, %if.then22)) #6
          to label %cleanup [label %if.then22], !srcloc !394

if.then22:                                        ; preds = %do.body17
  call void @__sanitizer_cov_trace_pc() #8
  %call23 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_copper_link.__UNIQUE_ID_ddebug536, ptr noundef %call23, ptr noundef nonnull @.str.59) #6
  br label %cleanup

if.end29:                                         ; preds = %if.else13.if.end29_crit_edge, %if.then8.if.end29_crit_edge, %if.then1.if.end29_crit_edge
  %autoneg = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 55
  %4 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %autoneg, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool30.not = icmp eq i8 %5, 0
  br i1 %tobool30.not, label %do.body38, label %if.then31

if.then31:                                        ; preds = %if.end29
  %call32 = tail call fastcc i32 @e1000_copper_link_autoneg(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %if.then31.for.body.preheader_crit_edge, label %if.then31.cleanup_crit_edge

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then31.for.body.preheader_crit_edge:           ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body.preheader

for.body.preheader:                               ; preds = %do.end56.for.body.preheader_crit_edge, %if.then31.for.body.preheader_crit_edge
  br label %for.body

do.body38:                                        ; preds = %if.end29
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug537, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_copper_link, %if.then50)) #6
          to label %do.end56 [label %if.then50], !srcloc !394

if.then50:                                        ; preds = %do.body38
  call void @__sanitizer_cov_trace_pc() #8
  %call51 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_copper_link.__UNIQUE_ID_ddebug537, ptr noundef %call51, ptr noundef nonnull @.str.60) #6
  br label %do.end56

do.end56:                                         ; preds = %if.then50, %do.body38
  %call57 = tail call fastcc i32 @e1000_phy_force_speed_duplex(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %do.end56.for.body.preheader_crit_edge, label %do.body61

do.end56.for.body.preheader_crit_edge:            ; preds = %do.end56
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body.preheader

do.body61:                                        ; preds = %do.end56
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug538, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_copper_link, %if.then73)) #6
          to label %cleanup [label %if.then73], !srcloc !394

if.then73:                                        ; preds = %do.body61
  call void @__sanitizer_cov_trace_pc() #8
  %call74 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_copper_link.__UNIQUE_ID_ddebug538, ptr noundef %call74, ptr noundef nonnull @.str.61) #6
  br label %cleanup

for.body:                                         ; preds = %if.end119.for.body_crit_edge, %for.body.preheader
  %i.0197 = phi i16 [ %inc, %if.end119.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool85.not = icmp eq i32 %call13.i, 0
  br i1 %tobool85.not, label %if.end87, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end87:                                         ; preds = %for.body
  %call2.i188 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i191 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i188) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i191)
  %tobool89.not = icmp eq i32 %call13.i191, 0
  br i1 %tobool89.not, label %if.end91, label %if.end87.cleanup_crit_edge

if.end87.cleanup_crit_edge:                       ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end91:                                         ; preds = %if.end87
  %6 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %phy_data, align 2
  %8 = and i16 %7, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool93.not = icmp eq i16 %8, 0
  br i1 %tobool93.not, label %if.end119, label %if.then94

if.then94:                                        ; preds = %if.end91
  %call95 = tail call fastcc i32 @e1000_copper_link_postconfig(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call95)
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %do.body100, label %if.then94.cleanup_crit_edge

if.then94.cleanup_crit_edge:                      ; preds = %if.then94
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body100:                                       ; preds = %if.then94
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug539, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_copper_link, %if.then112)) #6
          to label %cleanup [label %if.then112], !srcloc !394

if.then112:                                       ; preds = %do.body100
  call void @__sanitizer_cov_trace_pc() #8
  %call113 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_copper_link.__UNIQUE_ID_ddebug539, ptr noundef %call113, ptr noundef nonnull @.str.62) #6
  br label %cleanup

if.end119:                                        ; preds = %if.end91
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %9 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %9(i32 noundef 2147480) #6
  %inc = add nuw nsw i16 %i.0197, 1
  %cmp82 = icmp ult i16 %i.0197, 9
  br i1 %cmp82, label %if.end119.for.body_crit_edge, label %do.body121

if.end119.for.body_crit_edge:                     ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

do.body121:                                       ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug540, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_copper_link, %if.then133)) #6
          to label %cleanup [label %if.then133], !srcloc !394

if.then133:                                       ; preds = %do.body121
  call void @__sanitizer_cov_trace_pc() #8
  %call134 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_copper_link.__UNIQUE_ID_ddebug540, ptr noundef %call134, ptr noundef nonnull @.str.63) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then133, %do.body121, %if.then112, %do.body100, %if.then94.cleanup_crit_edge, %if.end87.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.then73, %do.body61, %if.then31.cleanup_crit_edge, %if.then22, %do.body17, %if.then8.cleanup_crit_edge, %if.then1.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call2, %if.then1.cleanup_crit_edge ], [ %call9, %if.then8.cleanup_crit_edge ], [ %call14, %if.then22 ], [ %call32, %if.then31.cleanup_crit_edge ], [ %call57, %if.then73 ], [ %call95, %if.then94.cleanup_crit_edge ], [ 0, %if.then112 ], [ 0, %if.then133 ], [ %call14, %do.body17 ], [ %call57, %do.body61 ], [ 0, %do.body100 ], [ 0, %do.body121 ], [ %call13.i191, %if.end87.cleanup_crit_edge ], [ %call13.i, %for.body.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_setup_fiber_serdes_link(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %default_page.i = alloca i16, align 2
  %phy_data.i = alloca i16, align 2
  %eeprom_data.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !507
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %3 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp2 = icmp eq i32 %4, 1
  br i1 %cmp2, label %if.end.thread, label %if.end

if.end.thread:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %5 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %6)
  %cmp4 = icmp ugt i32 %6, 4
  %cond5 = select i1 %cmp4, i32 524288, i32 0
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data.i) #6
  br label %if.end8

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data.i) #6
  %7 = ptrtoint ptr %eeprom_data.i to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 -1, ptr %eeprom_data.i, align 2, !annotation !414
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %cmp.not.i = icmp eq i32 %4, 2
  br i1 %cmp.not.i, label %if.end.i, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end8

if.end.i:                                         ; preds = %if.end
  %mac_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %8 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mac_type.i, align 4
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.158)
  switch i32 %9, label %if.end.i.if.end8_crit_edge [
    i32 7, label %if.end.i.sw.epilog.i_crit_edge
    i32 10, label %if.end.i.sw.epilog.i_crit_edge315
  ]

if.end.i.sw.epilog.i_crit_edge315:                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.i

if.end.i.sw.epilog.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.i

if.end.i.if.end8_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end8

sw.epilog.i:                                      ; preds = %if.end.i.sw.epilog.i_crit_edge, %if.end.i.sw.epilog.i_crit_edge315
  tail call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i.i = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 6, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data.i) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end2.i, label %sw.epilog.i.e1000_adjust_serdes_amplitude.exit_crit_edge

sw.epilog.i.e1000_adjust_serdes_amplitude.exit_crit_edge: ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_adjust_serdes_amplitude.exit

if.end2.i:                                        ; preds = %sw.epilog.i
  %11 = ptrtoint ptr %eeprom_data.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %eeprom_data.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %12)
  %cmp3.not.i = icmp eq i16 %12, -1
  br i1 %cmp3.not.i, label %if.end2.i.if.end8_crit_edge, label %if.then5.i

if.end2.i.if.end8_crit_edge:                      ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end8

if.then5.i:                                       ; preds = %if.end2.i
  %13 = and i16 %12, 15
  %14 = ptrtoint ptr %eeprom_data.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %eeprom_data.i, align 2
  %call2.i.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %15 = ptrtoint ptr %phy_type.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %phy_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp5.i.i = icmp eq i32 %16, 1
  br i1 %cmp5.i.i, label %if.then.i.i, label %if.then5.i.e1000_write_phy_reg.exit.i_crit_edge

if.then5.i.e1000_write_phy_reg.exit.i_crit_edge:  ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i

if.then.i.i:                                      ; preds = %if.then5.i
  %call10.i.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 26) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool.not.i.i = icmp eq i32 %call10.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i.e1000_write_phy_reg.exit.i_crit_edge, label %e1000_write_phy_reg.exit.thread.i

if.then.i.i.e1000_write_phy_reg.exit.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i

e1000_write_phy_reg.exit.thread.i:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #8
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i) #6
  br label %e1000_adjust_serdes_amplitude.exit

e1000_write_phy_reg.exit.i:                       ; preds = %if.then.i.i.e1000_write_phy_reg.exit.i_crit_edge, %if.then5.i.e1000_write_phy_reg.exit.i_crit_edge
  %call13.i.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 26, i16 noundef zeroext %13) #6
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i)
  %tobool9.not.i = icmp eq i32 %call13.i.i, 0
  br i1 %tobool9.not.i, label %e1000_write_phy_reg.exit.i.if.end8_crit_edge, label %e1000_write_phy_reg.exit.i.e1000_adjust_serdes_amplitude.exit_crit_edge

e1000_write_phy_reg.exit.i.e1000_adjust_serdes_amplitude.exit_crit_edge: ; preds = %e1000_write_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_adjust_serdes_amplitude.exit

e1000_write_phy_reg.exit.i.if.end8_crit_edge:     ; preds = %e1000_write_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end8

e1000_adjust_serdes_amplitude.exit:               ; preds = %e1000_write_phy_reg.exit.i.e1000_adjust_serdes_amplitude.exit_crit_edge, %e1000_write_phy_reg.exit.thread.i, %sw.epilog.i.e1000_adjust_serdes_amplitude.exit_crit_edge
  %retval.0.i277 = phi i32 [ %call.i.i, %sw.epilog.i.e1000_adjust_serdes_amplitude.exit_crit_edge ], [ %call13.i.i, %e1000_write_phy_reg.exit.i.e1000_adjust_serdes_amplitude.exit_crit_edge ], [ %call10.i.i, %e1000_write_phy_reg.exit.thread.i ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data.i) #6
  br label %cleanup

if.end8:                                          ; preds = %e1000_write_phy_reg.exit.i.if.end8_crit_edge, %if.end2.i.if.end8_crit_edge, %if.end.i.if.end8_crit_edge, %if.end.if.end8_crit_edge, %if.end.thread
  %signal.0295.ph = phi i32 [ %cond5, %if.end.thread ], [ 0, %if.end.i.if.end8_crit_edge ], [ 0, %if.end.if.end8_crit_edge ], [ 0, %e1000_write_phy_reg.exit.i.if.end8_crit_edge ], [ 0, %if.end2.i.if.end8_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data.i) #6
  %17 = and i32 %2, -134217729
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %default_page.i) #6
  %18 = ptrtoint ptr %default_page.i to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 0, ptr %default_page.i, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data.i) #6
  %19 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 -1, ptr %phy_data.i, align 2, !annotation !414
  %mac_type.i278 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %20 = ptrtoint ptr %mac_type.i278 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mac_type.i278, align 4
  %22 = zext i32 %21 to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.159)
  switch i32 %21, label %e1000_set_vco_speed.exit.thread302 [
    i32 7, label %if.end8.sw.epilog.i282_crit_edge
    i32 10, label %if.end8.sw.epilog.i282_crit_edge316
  ]

if.end8.sw.epilog.i282_crit_edge316:              ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.i282

if.end8.sw.epilog.i282_crit_edge:                 ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog.i282

e1000_set_vco_speed.exit.thread302:               ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data.i) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %default_page.i) #6
  br label %if.end12

sw.epilog.i282:                                   ; preds = %if.end8.sw.epilog.i282_crit_edge, %if.end8.sw.epilog.i282_crit_edge316
  %call2.i.i279 = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i.i280 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %23 = ptrtoint ptr %phy_type.i.i280 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %phy_type.i.i280, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp5.i.i281 = icmp eq i32 %24, 1
  br i1 %cmp5.i.i281, label %if.then.i.i285, label %sw.epilog.i282.e1000_read_phy_reg.exit.i_crit_edge

sw.epilog.i282.e1000_read_phy_reg.exit.i_crit_edge: ; preds = %sw.epilog.i282
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit.i

if.then.i.i285:                                   ; preds = %sw.epilog.i282
  %call10.i.i283 = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 29) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i283)
  %tobool.not.i.i284 = icmp eq i32 %call10.i.i283, 0
  br i1 %tobool.not.i.i284, label %if.then.i.i285.e1000_read_phy_reg.exit.i_crit_edge, label %if.then.i.i285.e1000_set_vco_speed.exit.thread.sink.split_crit_edge

if.then.i.i285.e1000_set_vco_speed.exit.thread.sink.split_crit_edge: ; preds = %if.then.i.i285
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread.sink.split

if.then.i.i285.e1000_read_phy_reg.exit.i_crit_edge: ; preds = %if.then.i.i285
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit.i

e1000_read_phy_reg.exit.i:                        ; preds = %if.then.i.i285.e1000_read_phy_reg.exit.i_crit_edge, %sw.epilog.i282.e1000_read_phy_reg.exit.i_crit_edge
  %call13.i.i286 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 29, ptr noundef nonnull %default_page.i) #6
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i279) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i286)
  %tobool.not.i287 = icmp eq i32 %call13.i.i286, 0
  br i1 %tobool.not.i287, label %if.end.i288, label %e1000_read_phy_reg.exit.i.e1000_set_vco_speed.exit.thread_crit_edge

e1000_read_phy_reg.exit.i.e1000_set_vco_speed.exit.thread_crit_edge: ; preds = %e1000_read_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread

if.end.i288:                                      ; preds = %e1000_read_phy_reg.exit.i
  %call2.i57.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %25 = ptrtoint ptr %phy_type.i.i280 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %phy_type.i.i280, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %26)
  %cmp5.i59.i = icmp eq i32 %26, 1
  br i1 %cmp5.i59.i, label %if.then.i62.i, label %if.end.i288.e1000_write_phy_reg.exit.i290_crit_edge

if.end.i288.e1000_write_phy_reg.exit.i290_crit_edge: ; preds = %if.end.i288
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i290

if.then.i62.i:                                    ; preds = %if.end.i288
  %call10.i60.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 29) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i60.i)
  %tobool.not.i61.i = icmp eq i32 %call10.i60.i, 0
  br i1 %tobool.not.i61.i, label %if.then.i62.i.e1000_write_phy_reg.exit.i290_crit_edge, label %if.then.i62.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge

if.then.i62.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge: ; preds = %if.then.i62.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread.sink.split

if.then.i62.i.e1000_write_phy_reg.exit.i290_crit_edge: ; preds = %if.then.i62.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i290

e1000_write_phy_reg.exit.i290:                    ; preds = %if.then.i62.i.e1000_write_phy_reg.exit.i290_crit_edge, %if.end.i288.e1000_write_phy_reg.exit.i290_crit_edge
  %call13.i63.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext 5) #6
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i57.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i63.i)
  %tobool2.not.i = icmp eq i32 %call13.i63.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %e1000_write_phy_reg.exit.i290.e1000_set_vco_speed.exit.thread_crit_edge

e1000_write_phy_reg.exit.i290.e1000_set_vco_speed.exit.thread_crit_edge: ; preds = %e1000_write_phy_reg.exit.i290
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread

if.end4.i:                                        ; preds = %e1000_write_phy_reg.exit.i290
  %call2.i65.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %27 = ptrtoint ptr %phy_type.i.i280 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %phy_type.i.i280, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %28)
  %cmp5.i67.i = icmp eq i32 %28, 1
  br i1 %cmp5.i67.i, label %if.then.i70.i, label %if.end4.i.e1000_read_phy_reg.exit74.i_crit_edge

if.end4.i.e1000_read_phy_reg.exit74.i_crit_edge:  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit74.i

if.then.i70.i:                                    ; preds = %if.end4.i
  %call10.i68.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 30) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i68.i)
  %tobool.not.i69.i = icmp eq i32 %call10.i68.i, 0
  br i1 %tobool.not.i69.i, label %if.then.i70.i.e1000_read_phy_reg.exit74.i_crit_edge, label %if.then.i70.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge

if.then.i70.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge: ; preds = %if.then.i70.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread.sink.split

if.then.i70.i.e1000_read_phy_reg.exit74.i_crit_edge: ; preds = %if.then.i70.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit74.i

e1000_read_phy_reg.exit74.i:                      ; preds = %if.then.i70.i.e1000_read_phy_reg.exit74.i_crit_edge, %if.end4.i.e1000_read_phy_reg.exit74.i_crit_edge
  %call13.i71.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 30, ptr noundef nonnull %phy_data.i) #6
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i65.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i71.i)
  %tobool6.not.i = icmp eq i32 %call13.i71.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %e1000_read_phy_reg.exit74.i.e1000_set_vco_speed.exit.thread_crit_edge

e1000_read_phy_reg.exit74.i.e1000_set_vco_speed.exit.thread_crit_edge: ; preds = %e1000_read_phy_reg.exit74.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread

if.end8.i:                                        ; preds = %e1000_read_phy_reg.exit74.i
  %29 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %phy_data.i, align 2
  %31 = and i16 %30, -257
  store i16 %31, ptr %phy_data.i, align 2
  %call2.i75.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %32 = ptrtoint ptr %phy_type.i.i280 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %phy_type.i.i280, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %33)
  %cmp5.i77.i = icmp eq i32 %33, 1
  br i1 %cmp5.i77.i, label %if.then.i80.i, label %if.end8.i.e1000_write_phy_reg.exit84.i_crit_edge

if.end8.i.e1000_write_phy_reg.exit84.i_crit_edge: ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit84.i

if.then.i80.i:                                    ; preds = %if.end8.i
  %call10.i78.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 30) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i78.i)
  %tobool.not.i79.i = icmp eq i32 %call10.i78.i, 0
  br i1 %tobool.not.i79.i, label %if.then.i80.i.e1000_write_phy_reg.exit84.i_crit_edge, label %if.then.i80.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge

if.then.i80.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge: ; preds = %if.then.i80.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread.sink.split

if.then.i80.i.e1000_write_phy_reg.exit84.i_crit_edge: ; preds = %if.then.i80.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit84.i

e1000_write_phy_reg.exit84.i:                     ; preds = %if.then.i80.i.e1000_write_phy_reg.exit84.i_crit_edge, %if.end8.i.e1000_write_phy_reg.exit84.i_crit_edge
  %call13.i81.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext %31) #6
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i75.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i81.i)
  %tobool11.not.i = icmp eq i32 %call13.i81.i, 0
  br i1 %tobool11.not.i, label %if.end13.i, label %e1000_write_phy_reg.exit84.i.e1000_set_vco_speed.exit.thread_crit_edge

e1000_write_phy_reg.exit84.i.e1000_set_vco_speed.exit.thread_crit_edge: ; preds = %e1000_write_phy_reg.exit84.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread

if.end13.i:                                       ; preds = %e1000_write_phy_reg.exit84.i
  %call14.i = call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext 4) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.end17.i, label %if.end13.i.e1000_set_vco_speed.exit.thread_crit_edge

if.end13.i.e1000_set_vco_speed.exit.thread_crit_edge: ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread

if.end17.i:                                       ; preds = %if.end13.i
  %call18.i = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 30, ptr noundef nonnull %phy_data.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i)
  %tobool19.not.i = icmp eq i32 %call18.i, 0
  br i1 %tobool19.not.i, label %if.end21.i, label %if.end17.i.e1000_set_vco_speed.exit.thread_crit_edge

if.end17.i.e1000_set_vco_speed.exit.thread_crit_edge: ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread

if.end21.i:                                       ; preds = %if.end17.i
  %34 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %phy_data.i, align 2
  %36 = or i16 %35, 2048
  %call24.i = call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext %36) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24.i)
  %tobool25.not.i = icmp eq i32 %call24.i, 0
  br i1 %tobool25.not.i, label %e1000_set_vco_speed.exit, label %if.end21.i.e1000_set_vco_speed.exit.thread_crit_edge

if.end21.i.e1000_set_vco_speed.exit.thread_crit_edge: ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_vco_speed.exit.thread

e1000_set_vco_speed.exit.thread.sink.split:       ; preds = %if.then.i80.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge, %if.then.i70.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge, %if.then.i62.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge, %if.then.i.i285.e1000_set_vco_speed.exit.thread.sink.split_crit_edge
  %call2.i.i279.sink = phi i32 [ %call2.i.i279, %if.then.i.i285.e1000_set_vco_speed.exit.thread.sink.split_crit_edge ], [ %call2.i57.i, %if.then.i62.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge ], [ %call2.i65.i, %if.then.i70.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge ], [ %call2.i75.i, %if.then.i80.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge ]
  %retval.0.i291.ph.ph = phi i32 [ %call10.i.i283, %if.then.i.i285.e1000_set_vco_speed.exit.thread.sink.split_crit_edge ], [ %call10.i60.i, %if.then.i62.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge ], [ %call10.i68.i, %if.then.i70.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge ], [ %call10.i78.i, %if.then.i80.i.e1000_set_vco_speed.exit.thread.sink.split_crit_edge ]
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i279.sink) #6
  br label %e1000_set_vco_speed.exit.thread

e1000_set_vco_speed.exit.thread:                  ; preds = %e1000_set_vco_speed.exit.thread.sink.split, %if.end21.i.e1000_set_vco_speed.exit.thread_crit_edge, %if.end17.i.e1000_set_vco_speed.exit.thread_crit_edge, %if.end13.i.e1000_set_vco_speed.exit.thread_crit_edge, %e1000_write_phy_reg.exit84.i.e1000_set_vco_speed.exit.thread_crit_edge, %e1000_read_phy_reg.exit74.i.e1000_set_vco_speed.exit.thread_crit_edge, %e1000_write_phy_reg.exit.i290.e1000_set_vco_speed.exit.thread_crit_edge, %e1000_read_phy_reg.exit.i.e1000_set_vco_speed.exit.thread_crit_edge
  %retval.0.i291.ph = phi i32 [ %call24.i, %if.end21.i.e1000_set_vco_speed.exit.thread_crit_edge ], [ %call18.i, %if.end17.i.e1000_set_vco_speed.exit.thread_crit_edge ], [ %call14.i, %if.end13.i.e1000_set_vco_speed.exit.thread_crit_edge ], [ %call13.i81.i, %e1000_write_phy_reg.exit84.i.e1000_set_vco_speed.exit.thread_crit_edge ], [ %call13.i71.i, %e1000_read_phy_reg.exit74.i.e1000_set_vco_speed.exit.thread_crit_edge ], [ %call13.i63.i, %e1000_write_phy_reg.exit.i290.e1000_set_vco_speed.exit.thread_crit_edge ], [ %call13.i.i286, %e1000_read_phy_reg.exit.i.e1000_set_vco_speed.exit.thread_crit_edge ], [ %retval.0.i291.ph.ph, %e1000_set_vco_speed.exit.thread.sink.split ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data.i) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %default_page.i) #6
  br label %cleanup

e1000_set_vco_speed.exit:                         ; preds = %if.end21.i
  %37 = ptrtoint ptr %default_page.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %default_page.i, align 2
  %call28.i = call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext %38) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data.i) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %default_page.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i)
  %tobool10.not = icmp eq i32 %call28.i, 0
  br i1 %tobool10.not, label %e1000_set_vco_speed.exit.if.end12_crit_edge, label %e1000_set_vco_speed.exit.cleanup_crit_edge

e1000_set_vco_speed.exit.cleanup_crit_edge:       ; preds = %e1000_set_vco_speed.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

e1000_set_vco_speed.exit.if.end12_crit_edge:      ; preds = %e1000_set_vco_speed.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12

if.end12:                                         ; preds = %e1000_set_vco_speed.exit.if.end12_crit_edge, %e1000_set_vco_speed.exit.thread302
  %39 = ptrtoint ptr %mac_type.i278 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %mac_type.i278, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %40)
  %cmp.i = icmp ult i32 %40, 3
  %..i = select i1 %cmp.i, i32 262144, i32 258048
  %41 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %hw, align 4
  %add.ptr.i = getelementptr i8, ptr %42, i32 1024
  %43 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #6, !srcloc !392
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !508
  %44 = and i32 %43, -15744769
  %45 = call i32 @llvm.bswap.i32(i32 %44) #6
  %or.i = or i32 %45, %..i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !509
  call void @arm_heavy_mb() #6
  %46 = call i32 @llvm.bswap.i32(i32 %or.i) #6
  %47 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %hw, align 4
  %add.ptr8.i = getelementptr i8, ptr %48, i32 1024
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8.i, i32 %46) #6, !srcloc !396
  %49 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hw, align 4
  %add.ptr15.i = getelementptr i8, ptr %50, i32 8
  %51 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15.i) #6, !srcloc !392
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !510
  %fc = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %52 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %fc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %53)
  %54 = icmp ult i32 %53, 4
  br i1 %54, label %switch.lookup, label %do.body16

do.body16:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug513, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_fiber_serdes_link, %if.then22)) #6
          to label %cleanup [label %if.then22], !srcloc !394

if.then22:                                        ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #8
  %call23 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug513, ptr noundef %call23, ptr noundef nonnull @.str.22) #6
  br label %cleanup

switch.lookup:                                    ; preds = %if.end12
  %switch.gep = getelementptr inbounds [4 x i32], ptr @switch.table.e1000_setup_fiber_serdes_link, i32 0, i32 %53
  %55 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %55)
  %switch.load = load i32, ptr %switch.gep, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug514, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_fiber_serdes_link, %if.then40)) #6
          to label %do.body47 [label %if.then40], !srcloc !394

if.then40:                                        ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #8
  %call41 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug514, ptr noundef %call41, ptr noundef nonnull @.str.52) #6
  br label %do.body47

do.body47:                                        ; preds = %if.then40, %switch.lookup
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !511
  call void @arm_heavy_mb() #6
  %56 = call i32 @llvm.bswap.i32(i32 %switch.load)
  %57 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %hw, align 4
  %add.ptr54 = getelementptr i8, ptr %58, i32 376
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr54, i32 %56) #6, !srcloc !396
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !512
  call void @arm_heavy_mb() #6
  %59 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hw, align 4
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %60, i32 %17) #6, !srcloc !396
  %61 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %hw, align 4
  %add.ptr69 = getelementptr i8, ptr %62, i32 8
  %63 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr69) #6, !srcloc !392
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !513
  %txcw73 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 26
  %64 = ptrtoint ptr %txcw73 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %switch.load, ptr %txcw73, align 4
  call void @msleep(i32 noundef 1) #6
  %65 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %66)
  %cmp75 = icmp eq i32 %66, 2
  br i1 %cmp75, label %do.body47.do.body90_crit_edge, label %lor.lhs.false

do.body47.do.body90_crit_edge:                    ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body90

lor.lhs.false:                                    ; preds = %do.body47
  %67 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %hw, align 4
  %69 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %68) #6, !srcloc !392
  %70 = shl i32 %69, 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !514
  %and86 = and i32 %70, 524288
  call void @__sanitizer_cov_trace_cmp4(i32 %and86, i32 %signal.0295.ph)
  %cmp87 = icmp eq i32 %and86, %signal.0295.ph
  br i1 %cmp87, label %lor.lhs.false.do.body90_crit_edge, label %do.body195

lor.lhs.false.do.body90_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body90

do.body90:                                        ; preds = %lor.lhs.false.do.body90_crit_edge, %do.body47.do.body90_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug515, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_fiber_serdes_link, %if.then102)) #6
          to label %for.body [label %if.then102], !srcloc !394

if.then102:                                       ; preds = %do.body90
  call void @__sanitizer_cov_trace_pc() #8
  %call103 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug515, ptr noundef %call103, ptr noundef nonnull @.str.53) #6
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.then102, %do.body90
  %i.0314 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %do.body90 ], [ 0, %if.then102 ]
  call void @msleep(i32 noundef 10) #6
  %71 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %hw, align 4
  %add.ptr116 = getelementptr i8, ptr %72, i32 8
  %73 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr116) #6, !srcloc !392
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !515
  %74 = and i32 %73, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool121.not = icmp eq i32 %74, 0
  br i1 %tobool121.not, label %for.inc, label %if.else

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0314, 1
  %exitcond.not = icmp eq i32 %inc, 50
  br i1 %exitcond.not, label %do.body127, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

do.body127:                                       ; preds = %for.inc
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug516, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_fiber_serdes_link, %if.then139)) #6
          to label %do.end145 [label %if.then139], !srcloc !394

if.then139:                                       ; preds = %do.body127
  call void @__sanitizer_cov_trace_pc() #8
  %call140 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug516, ptr noundef %call140, ptr noundef nonnull @.str.54) #6
  br label %do.end145

do.end145:                                        ; preds = %if.then139, %do.body127
  %autoneg_failed = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 27
  %75 = ptrtoint ptr %autoneg_failed to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 1, ptr %autoneg_failed, align 4
  %call146 = call i32 @e1000_check_for_link(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call146)
  %tobool147.not = icmp eq i32 %call146, 0
  br i1 %tobool147.not, label %if.end169, label %do.body150

do.body150:                                       ; preds = %do.end145
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug517, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_fiber_serdes_link, %if.then162)) #6
          to label %cleanup [label %if.then162], !srcloc !394

if.then162:                                       ; preds = %do.body150
  call void @__sanitizer_cov_trace_pc() #8
  %call163 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug517, ptr noundef %call163, ptr noundef nonnull @.str.55) #6
  br label %cleanup

if.end169:                                        ; preds = %do.end145
  call void @__sanitizer_cov_trace_pc() #8
  %76 = ptrtoint ptr %autoneg_failed to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 0, ptr %autoneg_failed, align 4
  br label %cleanup

if.else:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  %autoneg_failed171 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 27
  %77 = ptrtoint ptr %autoneg_failed171 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 0, ptr %autoneg_failed171, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug518, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_fiber_serdes_link, %if.then185)) #6
          to label %cleanup [label %if.then185], !srcloc !394

if.then185:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %call186 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug518, ptr noundef %call186, ptr noundef nonnull @.str.56) #6
  br label %cleanup

do.body195:                                       ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug519, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_setup_fiber_serdes_link, %if.then207)) #6
          to label %cleanup [label %if.then207], !srcloc !394

if.then207:                                       ; preds = %do.body195
  call void @__sanitizer_cov_trace_pc() #8
  %call208 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug519, ptr noundef %call208, ptr noundef nonnull @.str.57) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then207, %do.body195, %if.then185, %if.else, %if.end169, %if.then162, %do.body150, %if.then22, %do.body16, %e1000_set_vco_speed.exit.cleanup_crit_edge, %e1000_set_vco_speed.exit.thread, %e1000_adjust_serdes_amplitude.exit
  %retval.0 = phi i32 [ %retval.0.i277, %e1000_adjust_serdes_amplitude.exit ], [ %call28.i, %e1000_set_vco_speed.exit.cleanup_crit_edge ], [ -3, %if.then22 ], [ %call146, %if.then162 ], [ 0, %if.then207 ], [ 0, %if.end169 ], [ 0, %if.then185 ], [ %retval.0.i291.ph, %e1000_set_vco_speed.exit.thread ], [ -3, %do.body16 ], [ %call146, %do.body150 ], [ 0, %if.else ], [ 0, %do.body195 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_phy_setup_autoneg(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  %mii_autoneg_adv_reg = alloca i16, align 2
  %mii_1000t_ctrl_reg = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_autoneg_adv_reg) #6
  %0 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %mii_autoneg_adv_reg, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_1000t_ctrl_reg) #6
  %1 = ptrtoint ptr %mii_1000t_ctrl_reg to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %mii_1000t_ctrl_reg, align 2, !annotation !414
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 4, ptr noundef nonnull %mii_autoneg_adv_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2.i323 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i326 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 9, ptr noundef nonnull %mii_1000t_ctrl_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i323) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i326)
  %tobool2.not = icmp eq i32 %call13.i326, 0
  br i1 %tobool2.not, label %if.else, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.else:                                          ; preds = %if.end
  %2 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp = icmp eq i32 %3, 3
  br i1 %cmp, label %if.then4, label %if.else.if.end7_crit_edge

if.else.if.end7_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end7

if.then4:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %4 = ptrtoint ptr %mii_1000t_ctrl_reg to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %mii_1000t_ctrl_reg, align 2
  %6 = and i16 %5, -769
  store i16 %6, ptr %mii_1000t_ctrl_reg, align 2
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.else.if.end7_crit_edge
  %7 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %9 = and i16 %8, -481
  store i16 %9, ptr %mii_autoneg_adv_reg, align 2
  %10 = ptrtoint ptr %mii_1000t_ctrl_reg to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %mii_1000t_ctrl_reg, align 2
  %12 = and i16 %11, -769
  store i16 %12, ptr %mii_1000t_ctrl_reg, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug541, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then19)) #6
          to label %do.end24 [label %if.then19], !srcloc !394

if.then19:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  %call20 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %autoneg_advertised = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 40
  %13 = ptrtoint ptr %autoneg_advertised to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %autoneg_advertised, align 2
  %conv21 = zext i16 %14 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug541, ptr noundef %call20, ptr noundef nonnull @.str.15, i32 noundef %conv21) #6
  br label %do.end24

do.end24:                                         ; preds = %if.then19, %if.end7
  %autoneg_advertised25 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 40
  %15 = ptrtoint ptr %autoneg_advertised25 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %autoneg_advertised25, align 2
  %17 = and i16 %16, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool28.not = icmp eq i16 %17, 0
  br i1 %tobool28.not, label %do.end24.if.end52_crit_edge, label %do.body31

do.end24.if.end52_crit_edge:                      ; preds = %do.end24
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end52

do.body31:                                        ; preds = %do.end24
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug542, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then43)) #6
          to label %do.end49 [label %if.then43], !srcloc !394

if.then43:                                        ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #8
  %call44 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug542, ptr noundef %call44, ptr noundef nonnull @.str.16) #6
  br label %do.end49

do.end49:                                         ; preds = %if.then43, %do.body31
  %18 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %20 = or i16 %19, 32
  store i16 %20, ptr %mii_autoneg_adv_reg, align 2
  br label %if.end52

if.end52:                                         ; preds = %do.end49, %do.end24.if.end52_crit_edge
  %21 = ptrtoint ptr %autoneg_advertised25 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %autoneg_advertised25, align 2
  %23 = and i16 %22, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %tobool56.not = icmp eq i16 %23, 0
  br i1 %tobool56.not, label %if.end52.if.end81_crit_edge, label %do.body59

if.end52.if.end81_crit_edge:                      ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end81

do.body59:                                        ; preds = %if.end52
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug543, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then71)) #6
          to label %do.end77 [label %if.then71], !srcloc !394

if.then71:                                        ; preds = %do.body59
  call void @__sanitizer_cov_trace_pc() #8
  %call72 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug543, ptr noundef %call72, ptr noundef nonnull @.str.17) #6
  br label %do.end77

do.end77:                                         ; preds = %if.then71, %do.body59
  %24 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %26 = or i16 %25, 64
  store i16 %26, ptr %mii_autoneg_adv_reg, align 2
  br label %if.end81

if.end81:                                         ; preds = %do.end77, %if.end52.if.end81_crit_edge
  %27 = ptrtoint ptr %autoneg_advertised25 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %autoneg_advertised25, align 2
  %29 = and i16 %28, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool85.not = icmp eq i16 %29, 0
  br i1 %tobool85.not, label %if.end81.if.end110_crit_edge, label %do.body88

if.end81.if.end110_crit_edge:                     ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end110

do.body88:                                        ; preds = %if.end81
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug544, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then100)) #6
          to label %do.end106 [label %if.then100], !srcloc !394

if.then100:                                       ; preds = %do.body88
  call void @__sanitizer_cov_trace_pc() #8
  %call101 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug544, ptr noundef %call101, ptr noundef nonnull @.str.18) #6
  br label %do.end106

do.end106:                                        ; preds = %if.then100, %do.body88
  %30 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %32 = or i16 %31, 128
  store i16 %32, ptr %mii_autoneg_adv_reg, align 2
  br label %if.end110

if.end110:                                        ; preds = %do.end106, %if.end81.if.end110_crit_edge
  %33 = ptrtoint ptr %autoneg_advertised25 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %autoneg_advertised25, align 2
  %35 = and i16 %34, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %35)
  %tobool114.not = icmp eq i16 %35, 0
  br i1 %tobool114.not, label %if.end110.if.end139_crit_edge, label %do.body117

if.end110.if.end139_crit_edge:                    ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end139

do.body117:                                       ; preds = %if.end110
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug545, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then129)) #6
          to label %do.end135 [label %if.then129], !srcloc !394

if.then129:                                       ; preds = %do.body117
  call void @__sanitizer_cov_trace_pc() #8
  %call130 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug545, ptr noundef %call130, ptr noundef nonnull @.str.19) #6
  br label %do.end135

do.end135:                                        ; preds = %if.then129, %do.body117
  %36 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %38 = or i16 %37, 256
  store i16 %38, ptr %mii_autoneg_adv_reg, align 2
  br label %if.end139

if.end139:                                        ; preds = %do.end135, %if.end110.if.end139_crit_edge
  %39 = ptrtoint ptr %autoneg_advertised25 to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %autoneg_advertised25, align 2
  %41 = and i16 %40, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %41)
  %tobool143.not = icmp eq i16 %41, 0
  br i1 %tobool143.not, label %if.end139.if.end165_crit_edge, label %do.body146

if.end139.if.end165_crit_edge:                    ; preds = %if.end139
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end165

do.body146:                                       ; preds = %if.end139
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug546, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then158)) #6
          to label %if.end165 [label %if.then158], !srcloc !394

if.then158:                                       ; preds = %do.body146
  call void @__sanitizer_cov_trace_pc() #8
  %call159 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug546, ptr noundef %call159, ptr noundef nonnull @.str.20) #6
  br label %if.end165

if.end165:                                        ; preds = %if.then158, %do.body146, %if.end139.if.end165_crit_edge
  %42 = ptrtoint ptr %autoneg_advertised25 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %autoneg_advertised25, align 2
  %44 = and i16 %43, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %44)
  %tobool169.not = icmp eq i16 %44, 0
  br i1 %tobool169.not, label %if.end165.if.end194_crit_edge, label %do.body172

if.end165.if.end194_crit_edge:                    ; preds = %if.end165
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end194

do.body172:                                       ; preds = %if.end165
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug547, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then184)) #6
          to label %do.end190 [label %if.then184], !srcloc !394

if.then184:                                       ; preds = %do.body172
  call void @__sanitizer_cov_trace_pc() #8
  %call185 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug547, ptr noundef %call185, ptr noundef nonnull @.str.21) #6
  br label %do.end190

do.end190:                                        ; preds = %if.then184, %do.body172
  %45 = or i16 %12, 512
  %46 = ptrtoint ptr %mii_1000t_ctrl_reg to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %45, ptr %mii_1000t_ctrl_reg, align 2
  br label %if.end194

if.end194:                                        ; preds = %do.end190, %if.end165.if.end194_crit_edge
  %fc = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %47 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %fc, align 4
  %49 = zext i32 %48 to i64
  call void @__sanitizer_cov_trace_switch(i64 %49, ptr @__sancov_gen_cov_switch_values.160)
  switch i32 %48, label %do.body214 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb198
    i32 2, label %sw.bb202
    i32 3, label %sw.bb209
  ]

sw.bb:                                            ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #8
  %50 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %52 = and i16 %51, -3073
  store i16 %52, ptr %mii_autoneg_adv_reg, align 2
  br label %sw.epilog

sw.bb198:                                         ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #8
  %53 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %55 = or i16 %54, 3072
  store i16 %55, ptr %mii_autoneg_adv_reg, align 2
  br label %sw.epilog

sw.bb202:                                         ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #8
  %56 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %58 = and i16 %57, -3073
  %59 = or i16 %58, 2048
  store i16 %59, ptr %mii_autoneg_adv_reg, align 2
  br label %sw.epilog

sw.bb209:                                         ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #8
  %60 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %62 = or i16 %61, 3072
  store i16 %62, ptr %mii_autoneg_adv_reg, align 2
  br label %sw.epilog

do.body214:                                       ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug548, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then226)) #6
          to label %cleanup [label %if.then226], !srcloc !394

if.then226:                                       ; preds = %do.body214
  call void @__sanitizer_cov_trace_pc() #8
  %call227 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug548, ptr noundef %call227, ptr noundef nonnull @.str.22) #6
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb209, %sw.bb202, %sw.bb198, %sw.bb
  %63 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %call2.i327 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i330 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 4, i16 noundef zeroext %64) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i327) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i330)
  %tobool234.not = icmp eq i32 %call13.i330, 0
  br i1 %tobool234.not, label %do.body238, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body238:                                       ; preds = %sw.epilog
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug549, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_setup_autoneg, %if.then250)) #6
          to label %do.end257 [label %if.then250], !srcloc !394

if.then250:                                       ; preds = %do.body238
  call void @__sanitizer_cov_trace_pc() #8
  %call251 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %65 = ptrtoint ptr %mii_autoneg_adv_reg to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %mii_autoneg_adv_reg, align 2
  %conv252 = zext i16 %66 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug549, ptr noundef %call251, ptr noundef nonnull @.str.23, i32 noundef %conv252) #6
  br label %do.end257

do.end257:                                        ; preds = %if.then250, %do.body238
  %67 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %68)
  %cmp259 = icmp eq i32 %68, 3
  br i1 %cmp259, label %if.then261, label %if.else262

if.then261:                                       ; preds = %do.end257
  call void @__sanitizer_cov_trace_pc() #8
  %69 = ptrtoint ptr %mii_1000t_ctrl_reg to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 0, ptr %mii_1000t_ctrl_reg, align 2
  br label %if.end267

if.else262:                                       ; preds = %do.end257
  %70 = ptrtoint ptr %mii_1000t_ctrl_reg to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %mii_1000t_ctrl_reg, align 2
  %call2.i332 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i335 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 9, i16 noundef zeroext %71) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i332) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i335)
  %tobool264.not = icmp eq i32 %call13.i335, 0
  br i1 %tobool264.not, label %if.else262.if.end267_crit_edge, label %if.else262.cleanup_crit_edge

if.else262.cleanup_crit_edge:                     ; preds = %if.else262
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.else262.if.end267_crit_edge:                   ; preds = %if.else262
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end267

if.end267:                                        ; preds = %if.else262.if.end267_crit_edge, %if.then261
  br label %cleanup

cleanup:                                          ; preds = %if.end267, %if.else262.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge, %if.then226, %do.body214, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end267 ], [ %call13.i, %entry.cleanup_crit_edge ], [ %call13.i326, %if.end.cleanup_crit_edge ], [ -3, %if.then226 ], [ %call13.i330, %sw.epilog.cleanup_crit_edge ], [ %call13.i335, %if.else262.cleanup_crit_edge ], [ -3, %do.body214 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_1000t_ctrl_reg) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_autoneg_adv_reg) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef %reg_addr, ptr nocapture noundef writeonly %phy_data) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %0 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp5 = icmp eq i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %reg_addr)
  %cmp7 = icmp ugt i32 %reg_addr, 15
  %or.cond = and i1 %cmp7, %cmp5
  br i1 %or.cond, label %if.then, label %entry.if.end12_crit_edge

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12

if.then:                                          ; preds = %entry
  %conv9 = trunc i32 %reg_addr to i16
  %call10 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext %conv9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool.not = icmp eq i32 %call10, 0
  br i1 %tobool.not, label %if.then.if.end12_crit_edge, label %if.then.out_crit_edge

if.then.out_crit_edge:                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %out

if.then.if.end12_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12

if.end12:                                         ; preds = %if.then.if.end12_crit_edge, %entry.if.end12_crit_edge
  %and = and i32 %reg_addr, 31
  %call13 = tail call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef %and, ptr noundef %phy_data)
  br label %out

out:                                              ; preds = %if.end12, %if.then.out_crit_edge
  %ret_val.0 = phi i32 [ %call10, %if.then.out_crit_edge ], [ %call13, %if.end12 ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2) #6
  ret i32 %ret_val.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef %reg_addr, i16 noundef zeroext %phy_data) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %0 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp5 = icmp eq i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %reg_addr)
  %cmp7 = icmp ugt i32 %reg_addr, 15
  %or.cond = and i1 %cmp7, %cmp5
  br i1 %or.cond, label %if.then, label %entry.if.end12_crit_edge

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12

if.then:                                          ; preds = %entry
  %conv9 = trunc i32 %reg_addr to i16
  %call10 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext %conv9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool.not = icmp eq i32 %call10, 0
  br i1 %tobool.not, label %if.then.if.end12_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then.if.end12_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12

if.end12:                                         ; preds = %if.then.if.end12_crit_edge, %entry.if.end12_crit_edge
  %and = and i32 %reg_addr, 31
  %call13 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef %and, i16 noundef zeroext %phy_data)
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %if.end12 ], [ %call10, %if.then.cleanup_crit_edge ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_config_collision_dist(ptr nocapture noundef readonly %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp = icmp ult i32 %1, 3
  %. = select i1 %cmp, i32 262144, i32 258048
  %2 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %3, i32 1024
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !508
  %5 = and i32 %4, -15744769
  %6 = tail call i32 @llvm.bswap.i32(i32 %5)
  %or = or i32 %6, %.
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !509
  tail call void @arm_heavy_mb() #6
  %7 = tail call i32 @llvm.bswap.i32(i32 %or)
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr8 = getelementptr i8, ptr %9, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8, i32 %7) #6, !srcloc !396
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr15 = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !510
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_force_mac_fc(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !516
  %fc = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %4 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fc, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.161)
  switch i32 %5, label %do.body9 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
    i32 3, label %sw.bb7
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %and = and i32 %3, -402653185
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %and3 = and i32 %3, -402653185
  %or = or i32 %and3, 134217728
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %and5 = and i32 %3, -402653185
  %or6 = or i32 %and5, 268435456
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %or8 = or i32 %3, 402653184
  br label %sw.epilog

do.body9:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_force_mac_fc.__UNIQUE_ID_ddebug558, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_force_mac_fc, %if.then)) #6
          to label %cleanup [label %if.then], !srcloc !394

if.then:                                          ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #8
  %call14 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_force_mac_fc.__UNIQUE_ID_ddebug558, ptr noundef %call14, ptr noundef nonnull @.str.22) #6
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb4, %sw.bb2, %sw.bb
  %ctrl.0 = phi i32 [ %or8, %sw.bb7 ], [ %or6, %sw.bb4 ], [ %or, %sw.bb2 ], [ %and, %sw.bb ]
  %7 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp18 = icmp eq i32 %8, 1
  %and20 = and i32 %ctrl.0, -268435457
  %spec.select = select i1 %cmp18, i32 %and20, i32 %ctrl.0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !517
  tail call void @arm_heavy_mb() #6
  %9 = tail call i32 @llvm.bswap.i32(i32 %spec.select)
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %11, i32 %9) #6, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.then, %do.body9
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -3, %if.then ], [ -3, %do.body9 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_check_for_link(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  %speed = alloca i16, align 2
  %duplex = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %1 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %2) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !518
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  %add.ptr8 = getelementptr i8, ptr %5, i32 8
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr8) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !519
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %7 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %media_type, align 4
  %.off = add i32 %8, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then, label %entry.if.end30_crit_edge

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end30

if.then:                                          ; preds = %entry
  %9 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw, align 4
  %add.ptr21 = getelementptr i8, ptr %10, i32 384
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr21) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !520
  %12 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp26 = icmp ne i32 %13, 1
  %14 = and i32 %6, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not = icmp eq i32 %14, 0
  %or.cond = select i1 %cmp26, i1 true, i1 %tobool.not
  br i1 %or.cond, label %if.then.if.end30_crit_edge, label %if.then28

if.then.if.end30_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end30

if.then28:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  %get_link_status = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 66
  %15 = ptrtoint ptr %get_link_status to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %get_link_status, align 4
  %16 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pr = load i32, ptr %media_type, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %if.then.if.end30_crit_edge, %entry.if.end30_crit_edge
  %17 = phi i32 [ %8, %entry.if.end30_crit_edge ], [ %13, %if.then.if.end30_crit_edge ], [ %.pr, %if.then28 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp32 = icmp eq i32 %17, 0
  br i1 %cmp32, label %land.lhs.true, label %if.end30.if.end249_crit_edge

if.end30.if.end249_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end249

land.lhs.true:                                    ; preds = %if.end30
  %get_link_status33 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 66
  %18 = ptrtoint ptr %get_link_status33 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %get_link_status33, align 4, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool34.not = icmp eq i8 %19, 0
  br i1 %tobool34.not, label %land.lhs.true.if.end249_crit_edge, label %if.then35

land.lhs.true.if.end249_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end249

if.then35:                                        ; preds = %land.lhs.true
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool37.not = icmp eq i32 %call13.i, 0
  br i1 %tobool37.not, label %if.end39, label %if.then35.cleanup260_crit_edge

if.then35.cleanup260_crit_edge:                   ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup260

if.end39:                                         ; preds = %if.then35
  %call2.i354 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i357 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i354) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i357)
  %tobool41.not = icmp eq i32 %call13.i357, 0
  br i1 %tobool41.not, label %if.end43, label %if.end39.cleanup260_crit_edge

if.end39.cleanup260_crit_edge:                    ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup260

if.end43:                                         ; preds = %if.end39
  %20 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %phy_data, align 2
  %22 = and i16 %21, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool45.not = icmp eq i16 %22, 0
  br i1 %tobool45.not, label %if.else, label %if.then46

if.then46:                                        ; preds = %if.end43
  %23 = ptrtoint ptr %get_link_status33 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 0, ptr %get_link_status33, align 4
  tail call fastcc void @e1000_check_downshift(ptr noundef %hw)
  %24 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %mac_type, align 4
  %.off343 = add i32 %25, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off343)
  %switch344 = icmp ult i32 %.off343, 2
  br i1 %switch344, label %land.lhs.true56, label %if.then46.if.end107_crit_edge

if.then46.if.end107_crit_edge:                    ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end107

land.lhs.true56:                                  ; preds = %if.then46
  %autoneg = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 55
  %26 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %autoneg, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool57.not = icmp eq i8 %27, 0
  br i1 %tobool57.not, label %land.lhs.true58, label %land.lhs.true56.if.end107_crit_edge

land.lhs.true56.if.end107_crit_edge:              ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end107

land.lhs.true58:                                  ; preds = %land.lhs.true56
  %forced_speed_duplex = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 57
  %28 = ptrtoint ptr %forced_speed_duplex to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %forced_speed_duplex, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %29)
  %switch345 = icmp ult i8 %29, 2
  br i1 %switch345, label %do.body, label %land.lhs.true58.if.end107_crit_edge

land.lhs.true58.if.end107_crit_edge:              ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end107

do.body:                                          ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !521
  tail call void @arm_heavy_mb() #6
  %30 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw, align 4
  %add.ptr73 = getelementptr i8, ptr %31, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr73, i32 -1) #6, !srcloc !396
  %call74 = tail call fastcc i32 @e1000_polarity_reversal_workaround(ptr noundef %hw)
  %32 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw, align 4
  %add.ptr82 = getelementptr i8, ptr %33, i32 192
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr82) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !522
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !523
  tail call void @arm_heavy_mb() #6
  %35 = and i32 %34, -67108865
  %36 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hw, align 4
  %add.ptr95 = getelementptr i8, ptr %37, i32 200
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr95, i32 %35) #6, !srcloc !396
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !524
  tail call void @arm_heavy_mb() #6
  %38 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hw, align 4
  %add.ptr104 = getelementptr i8, ptr %39, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr104, i32 -1660944384) #6, !srcloc !396
  br label %if.end107

if.else:                                          ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #8
  %call106 = tail call fastcc i32 @e1000_config_dsp_after_link_change(ptr noundef %hw, i1 noundef zeroext false)
  br label %cleanup260

if.end107:                                        ; preds = %do.body, %land.lhs.true58.if.end107_crit_edge, %land.lhs.true56.if.end107_crit_edge, %if.then46.if.end107_crit_edge
  %autoneg108 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 55
  %40 = ptrtoint ptr %autoneg108 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %autoneg108, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool109.not = icmp eq i8 %41, 0
  br i1 %tobool109.not, label %if.end107.cleanup260_crit_edge, label %if.end111

if.end107.cleanup260_crit_edge:                   ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup260

if.end111:                                        ; preds = %if.end107
  %call112 = tail call fastcc i32 @e1000_config_dsp_after_link_change(ptr noundef %hw, i1 noundef zeroext true)
  %42 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %mac_type, align 4
  %44 = zext i32 %43 to i64
  call void @__sanitizer_cov_trace_switch(i64 %44, ptr @__sancov_gen_cov_switch_values.162)
  switch i32 %43, label %if.then120 [
    i32 9, label %if.end111.if.else121_crit_edge
    i32 3, label %if.end111.if.else121_crit_edge361
    i32 2, label %if.end111.if.else121_crit_edge362
    i32 1, label %if.end111.if.else121_crit_edge363
    i32 0, label %if.end111.if.else121_crit_edge364
  ]

if.end111.if.else121_crit_edge364:                ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else121

if.end111.if.else121_crit_edge363:                ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else121

if.end111.if.else121_crit_edge362:                ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else121

if.end111.if.else121_crit_edge361:                ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else121

if.end111.if.else121_crit_edge:                   ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else121

if.then120:                                       ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @e1000_config_collision_dist(ptr noundef %hw)
  br label %if.end140

if.else121:                                       ; preds = %if.end111.if.else121_crit_edge, %if.end111.if.else121_crit_edge361, %if.end111.if.else121_crit_edge362, %if.end111.if.else121_crit_edge363, %if.end111.if.else121_crit_edge364
  %call122 = tail call fastcc i32 @e1000_config_mac_to_phy(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call122)
  %tobool123.not = icmp eq i32 %call122, 0
  br i1 %tobool123.not, label %if.else121.if.end140_crit_edge, label %do.body126

if.else121.if.end140_crit_edge:                   ; preds = %if.else121
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end140

do.body126:                                       ; preds = %if.else121
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_link.__UNIQUE_ID_ddebug578, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_link, %if.then132)) #6
          to label %cleanup260 [label %if.then132], !srcloc !394

if.then132:                                       ; preds = %do.body126
  call void @__sanitizer_cov_trace_pc() #8
  %call133 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_link.__UNIQUE_ID_ddebug578, ptr noundef %call133, ptr noundef nonnull @.str.26) #6
  br label %cleanup260

if.end140:                                        ; preds = %if.else121.if.end140_crit_edge, %if.then120
  %call141 = tail call fastcc i32 @e1000_config_fc_after_link_up(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call141)
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %if.end164, label %do.body145

do.body145:                                       ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_link.__UNIQUE_ID_ddebug579, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_link, %if.then157)) #6
          to label %cleanup260 [label %if.then157], !srcloc !394

if.then157:                                       ; preds = %do.body145
  call void @__sanitizer_cov_trace_pc() #8
  %call158 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_link.__UNIQUE_ID_ddebug579, ptr noundef %call158, ptr noundef nonnull @.str.27) #6
  br label %cleanup260

if.end164:                                        ; preds = %if.end140
  %tbi_compatibility_en = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 68
  %45 = ptrtoint ptr %tbi_compatibility_en to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %tbi_compatibility_en, align 2, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool165.not = icmp eq i8 %46, 0
  br i1 %tobool165.not, label %if.end164.if.end249_crit_edge, label %if.then166

if.end164.if.end249_crit_edge:                    ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end249

if.then166:                                       ; preds = %if.end164
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %speed) #6
  %47 = ptrtoint ptr %speed to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 -1, ptr %speed, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %duplex) #6
  %call167 = call i32 @e1000_get_speed_and_duplex(ptr noundef %hw, ptr noundef nonnull %speed, ptr noundef nonnull %duplex)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call167)
  %tobool168.not = icmp eq i32 %call167, 0
  br i1 %tobool168.not, label %if.end190, label %do.body171

do.body171:                                       ; preds = %if.then166
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_link.__UNIQUE_ID_ddebug580, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_link, %if.then183)) #6
          to label %cleanup260.critedge [label %if.then183], !srcloc !394

if.then183:                                       ; preds = %do.body171
  call void @__sanitizer_cov_trace_pc() #8
  %call184 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_link.__UNIQUE_ID_ddebug580, ptr noundef %call184, ptr noundef nonnull @.str.28) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %duplex) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %speed) #6
  br label %cleanup260

if.end190:                                        ; preds = %if.then166
  %48 = ptrtoint ptr %speed to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %speed, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1000, i16 %49)
  %cmp192.not = icmp eq i16 %49, 1000
  %tbi_compatibility_on221 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 69
  %50 = ptrtoint ptr %tbi_compatibility_on221 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %tbi_compatibility_on221, align 1, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool222.not = icmp eq i8 %51, 0
  br i1 %cmp192.not, label %if.else220, label %if.then194

if.then194:                                       ; preds = %if.end190
  br i1 %tobool222.not, label %if.end249.critedge339, label %if.then196

if.then196:                                       ; preds = %if.then194
  call void @__sanitizer_cov_trace_pc() #8
  %52 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %hw, align 4
  %add.ptr204 = getelementptr i8, ptr %53, i32 256
  %54 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr204) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !525
  %55 = and i32 %54, -67108865
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !526
  tail call void @arm_heavy_mb() #6
  %56 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hw, align 4
  %add.ptr217 = getelementptr i8, ptr %57, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr217, i32 %55) #6, !srcloc !396
  %58 = ptrtoint ptr %tbi_compatibility_on221 to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 0, ptr %tbi_compatibility_on221, align 1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %duplex) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %speed) #6
  br label %if.end249

if.else220:                                       ; preds = %if.end190
  br i1 %tobool222.not, label %if.then223, label %if.end249.critedge341

if.then223:                                       ; preds = %if.else220
  call void @__sanitizer_cov_trace_pc() #8
  %59 = ptrtoint ptr %tbi_compatibility_on221 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 1, ptr %tbi_compatibility_on221, align 1
  %60 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %hw, align 4
  %add.ptr232 = getelementptr i8, ptr %61, i32 256
  %62 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr232) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !527
  %63 = or i32 %62, 67108864
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !528
  tail call void @arm_heavy_mb() #6
  %64 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %hw, align 4
  %add.ptr244 = getelementptr i8, ptr %65, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr244, i32 %63) #6, !srcloc !396
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %duplex) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %speed) #6
  br label %if.end249

if.end249.critedge339:                            ; preds = %if.then194
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %duplex) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %speed) #6
  br label %if.end249

if.end249.critedge341:                            ; preds = %if.else220
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %duplex) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %speed) #6
  br label %if.end249

if.end249:                                        ; preds = %if.end249.critedge341, %if.end249.critedge339, %if.then223, %if.then196, %if.end164.if.end249_crit_edge, %land.lhs.true.if.end249_crit_edge, %if.end30.if.end249_crit_edge
  %66 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %media_type, align 4
  %.off346 = add i32 %67, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off346)
  %switch347 = icmp ult i32 %.off346, 2
  br i1 %switch347, label %if.then257, label %if.end249.cleanup260_crit_edge

if.end249.cleanup260_crit_edge:                   ; preds = %if.end249
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup260

if.then257:                                       ; preds = %if.end249
  call void @__sanitizer_cov_trace_pc() #8
  tail call fastcc void @e1000_check_for_serdes_link_generic(ptr noundef %hw)
  br label %cleanup260

cleanup260.critedge:                              ; preds = %do.body171
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %duplex) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %speed) #6
  br label %cleanup260

cleanup260:                                       ; preds = %cleanup260.critedge, %if.then257, %if.end249.cleanup260_crit_edge, %if.then183, %if.then157, %do.body145, %if.then132, %do.body126, %if.end107.cleanup260_crit_edge, %if.else, %if.end39.cleanup260_crit_edge, %if.then35.cleanup260_crit_edge
  %retval.1 = phi i32 [ 0, %if.else ], [ %call13.i, %if.then35.cleanup260_crit_edge ], [ %call13.i357, %if.end39.cleanup260_crit_edge ], [ -3, %if.end107.cleanup260_crit_edge ], [ %call122, %if.then132 ], [ %call141, %if.then157 ], [ %call167, %cleanup260.critedge ], [ %call167, %if.then183 ], [ 0, %if.end249.cleanup260_crit_edge ], [ 0, %if.then257 ], [ %call122, %do.body126 ], [ %call141, %do.body145 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_check_downshift(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %1 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %phy_type, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.163)
  switch i32 %2, label %entry.cleanup_crit_edge [
    i32 1, label %if.then
    i32 0, label %if.then7
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then:                                          ; preds = %entry
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %4 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp5.i = icmp eq i32 %5, 1
  br i1 %cmp5.i, label %if.then.i, label %if.then.e1000_read_phy_reg.exit_crit_edge

if.then.e1000_read_phy_reg.exit_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %if.then
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 19) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %if.then.e1000_read_phy_reg.exit_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 19, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  %6 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %phy_data, align 2
  %speed_downgraded = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 63
  %.lobit = lshr i16 %7, 15
  %8 = trunc i16 %.lobit to i8
  %9 = ptrtoint ptr %speed_downgraded to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %speed_downgraded, align 1
  br label %cleanup

if.then7:                                         ; preds = %entry
  %call2.i1 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %10 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp5.i3 = icmp eq i32 %11, 1
  br i1 %cmp5.i3, label %if.then.i6, label %if.then7.e1000_read_phy_reg.exit10_crit_edge

if.then7.e1000_read_phy_reg.exit10_crit_edge:     ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit10

if.then.i6:                                       ; preds = %if.then7
  %call10.i4 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 17) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i4)
  %tobool.not.i5 = icmp eq i32 %call10.i4, 0
  br i1 %tobool.not.i5, label %if.then.i6.e1000_read_phy_reg.exit10_crit_edge, label %e1000_read_phy_reg.exit10.thread

if.then.i6.e1000_read_phy_reg.exit10_crit_edge:   ; preds = %if.then.i6
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit10

e1000_read_phy_reg.exit10.thread:                 ; preds = %if.then.i6
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i1) #6
  br label %cleanup

e1000_read_phy_reg.exit10:                        ; preds = %if.then.i6.e1000_read_phy_reg.exit10_crit_edge, %if.then7.e1000_read_phy_reg.exit10_crit_edge
  %call13.i7 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 17, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i1) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i7)
  %tobool9.not = icmp eq i32 %call13.i7, 0
  br i1 %tobool9.not, label %if.end11, label %e1000_read_phy_reg.exit10.cleanup_crit_edge

e1000_read_phy_reg.exit10.cleanup_crit_edge:      ; preds = %e1000_read_phy_reg.exit10
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end11:                                         ; preds = %e1000_read_phy_reg.exit10
  call void @__sanitizer_cov_trace_pc() #8
  %12 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %phy_data, align 2
  %speed_downgraded15 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 63
  %14 = trunc i16 %13 to i8
  %15 = lshr i8 %14, 5
  %16 = and i8 %15, 1
  %17 = ptrtoint ptr %speed_downgraded15 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %speed_downgraded15, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %e1000_read_phy_reg.exit10.cleanup_crit_edge, %e1000_read_phy_reg.exit10.thread, %if.end, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_polarity_reversal_workaround(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %mii_status_reg = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_status_reg) #6
  %0 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %mii_status_reg, align 2, !annotation !414
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %1 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %cmp5.i = icmp eq i32 %2, 1
  br i1 %cmp5.i, label %if.then.i, label %entry.e1000_write_phy_reg.exit_crit_edge

entry.e1000_write_phy_reg.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i:                                        ; preds = %entry
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 29) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_write_phy_reg.exit_crit_edge, label %if.then.i.cleanup.sink.split_crit_edge

if.then.i.cleanup.sink.split_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup.sink.split

if.then.i.e1000_write_phy_reg.exit_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit:                         ; preds = %if.then.i.e1000_write_phy_reg.exit_crit_edge, %entry.e1000_write_phy_reg.exit_crit_edge
  %call13.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext 25) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end, label %e1000_write_phy_reg.exit.cleanup_crit_edge

e1000_write_phy_reg.exit.cleanup_crit_edge:       ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %e1000_write_phy_reg.exit
  %call2.i103 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %3 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp5.i105 = icmp eq i32 %4, 1
  br i1 %cmp5.i105, label %if.then.i108, label %if.end.e1000_write_phy_reg.exit112_crit_edge

if.end.e1000_write_phy_reg.exit112_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit112

if.then.i108:                                     ; preds = %if.end
  %call10.i106 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 30) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i106)
  %tobool.not.i107 = icmp eq i32 %call10.i106, 0
  br i1 %tobool.not.i107, label %if.then.i108.e1000_write_phy_reg.exit112_crit_edge, label %if.then.i108.cleanup.sink.split_crit_edge

if.then.i108.cleanup.sink.split_crit_edge:        ; preds = %if.then.i108
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup.sink.split

if.then.i108.e1000_write_phy_reg.exit112_crit_edge: ; preds = %if.then.i108
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit112

e1000_write_phy_reg.exit112:                      ; preds = %if.then.i108.e1000_write_phy_reg.exit112_crit_edge, %if.end.e1000_write_phy_reg.exit112_crit_edge
  %call13.i109 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext -1) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i103) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i109)
  %tobool2.not = icmp eq i32 %call13.i109, 0
  br i1 %tobool2.not, label %if.end4, label %e1000_write_phy_reg.exit112.cleanup_crit_edge

e1000_write_phy_reg.exit112.cleanup_crit_edge:    ; preds = %e1000_write_phy_reg.exit112
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end4:                                          ; preds = %e1000_write_phy_reg.exit112
  %call2.i113 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %5 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp5.i115 = icmp eq i32 %6, 1
  br i1 %cmp5.i115, label %if.then.i118, label %if.end4.e1000_write_phy_reg.exit122_crit_edge

if.end4.e1000_write_phy_reg.exit122_crit_edge:    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit122

if.then.i118:                                     ; preds = %if.end4
  %call10.i116 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 29) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i116)
  %tobool.not.i117 = icmp eq i32 %call10.i116, 0
  br i1 %tobool.not.i117, label %if.then.i118.e1000_write_phy_reg.exit122_crit_edge, label %if.then.i118.cleanup.sink.split_crit_edge

if.then.i118.cleanup.sink.split_crit_edge:        ; preds = %if.then.i118
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup.sink.split

if.then.i118.e1000_write_phy_reg.exit122_crit_edge: ; preds = %if.then.i118
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit122

e1000_write_phy_reg.exit122:                      ; preds = %if.then.i118.e1000_write_phy_reg.exit122_crit_edge, %if.end4.e1000_write_phy_reg.exit122_crit_edge
  %call13.i119 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext 0) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i113) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i119)
  %tobool6.not = icmp eq i32 %call13.i119, 0
  br i1 %tobool6.not, label %e1000_write_phy_reg.exit122.for.body_crit_edge, label %e1000_write_phy_reg.exit122.cleanup_crit_edge

e1000_write_phy_reg.exit122.cleanup_crit_edge:    ; preds = %e1000_write_phy_reg.exit122
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

e1000_write_phy_reg.exit122.for.body_crit_edge:   ; preds = %e1000_write_phy_reg.exit122
  br label %for.body

for.body:                                         ; preds = %if.end22.for.body_crit_edge, %e1000_write_phy_reg.exit122.for.body_crit_edge
  %i.0153 = phi i16 [ %dec, %if.end22.for.body_crit_edge ], [ 20, %e1000_write_phy_reg.exit122.for.body_crit_edge ]
  %call2.i123 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i126 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i126)
  %tobool11.not = icmp eq i32 %call13.i126, 0
  br i1 %tobool11.not, label %if.end13, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end13:                                         ; preds = %for.body
  %call2.i128 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i131 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i128) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i131)
  %tobool15.not = icmp eq i32 %call13.i131, 0
  br i1 %tobool15.not, label %if.end17, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end17:                                         ; preds = %if.end13
  %7 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %mii_status_reg, align 2
  %9 = and i16 %8, -5
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %cmp19 = icmp eq i16 %9, 0
  br i1 %cmp19, label %if.end17.for.end_crit_edge, label %if.end22

if.end17.for.end_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.end

if.end22:                                         ; preds = %if.end17
  tail call void @msleep(i32 noundef 100) #6
  %dec = add nsw i16 %i.0153, -1
  %cmp.not = icmp eq i16 %dec, 0
  br i1 %cmp.not, label %if.end22.for.end_crit_edge, label %if.end22.for.body_crit_edge

if.end22.for.body_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

if.end22.for.end_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.end

for.end:                                          ; preds = %if.end22.for.end_crit_edge, %if.end17.for.end_crit_edge
  tail call void @msleep(i32 noundef 1000) #6
  %call2.i133 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %10 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp5.i135 = icmp eq i32 %11, 1
  br i1 %cmp5.i135, label %if.then.i138, label %for.end.e1000_write_phy_reg.exit142_crit_edge

for.end.e1000_write_phy_reg.exit142_crit_edge:    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit142

if.then.i138:                                     ; preds = %for.end
  %call10.i136 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 29) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i136)
  %tobool.not.i137 = icmp eq i32 %call10.i136, 0
  br i1 %tobool.not.i137, label %if.then.i138.e1000_write_phy_reg.exit142_crit_edge, label %if.then.i138.cleanup.sink.split_crit_edge

if.then.i138.cleanup.sink.split_crit_edge:        ; preds = %if.then.i138
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup.sink.split

if.then.i138.e1000_write_phy_reg.exit142_crit_edge: ; preds = %if.then.i138
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit142

e1000_write_phy_reg.exit142:                      ; preds = %if.then.i138.e1000_write_phy_reg.exit142_crit_edge, %for.end.e1000_write_phy_reg.exit142_crit_edge
  %call13.i139 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext 25) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i133) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i139)
  %tobool24.not = icmp eq i32 %call13.i139, 0
  br i1 %tobool24.not, label %if.end26, label %e1000_write_phy_reg.exit142.cleanup_crit_edge

e1000_write_phy_reg.exit142.cleanup_crit_edge:    ; preds = %e1000_write_phy_reg.exit142
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end26:                                         ; preds = %e1000_write_phy_reg.exit142
  tail call void @msleep(i32 noundef 50) #6
  %call27 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext -16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end30, label %if.end26.cleanup_crit_edge

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end30:                                         ; preds = %if.end26
  tail call void @msleep(i32 noundef 50) #6
  %call31 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext -256)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %if.end30.cleanup_crit_edge

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end34:                                         ; preds = %if.end30
  tail call void @msleep(i32 noundef 50) #6
  %call35 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.end38, label %if.end34.cleanup_crit_edge

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end38:                                         ; preds = %if.end34
  %call39 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %if.end38.for.body47_crit_edge, label %if.end38.cleanup_crit_edge

if.end38.cleanup_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end38.for.body47_crit_edge:                    ; preds = %if.end38
  br label %for.body47

for.body47:                                       ; preds = %if.end60.for.body47_crit_edge, %if.end38.for.body47_crit_edge
  %i.1154 = phi i16 [ %dec62, %if.end60.for.body47_crit_edge ], [ 20, %if.end38.for.body47_crit_edge ]
  %call48 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.end51, label %for.body47.cleanup_crit_edge

for.body47.cleanup_crit_edge:                     ; preds = %for.body47
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end51:                                         ; preds = %for.body47
  %call52 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.end55, label %if.end51.cleanup_crit_edge

if.end51.cleanup_crit_edge:                       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end55:                                         ; preds = %if.end51
  %12 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %mii_status_reg, align 2
  %14 = and i16 %13, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool58.not = icmp eq i16 %14, 0
  br i1 %tobool58.not, label %if.end60, label %if.end55.cleanup_crit_edge

if.end55.cleanup_crit_edge:                       ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end60:                                         ; preds = %if.end55
  tail call void @msleep(i32 noundef 100) #6
  %dec62 = add nsw i16 %i.1154, -1
  %cmp45.not = icmp eq i16 %dec62, 0
  br i1 %cmp45.not, label %if.end60.cleanup_crit_edge, label %if.end60.for.body47_crit_edge

if.end60.for.body47_crit_edge:                    ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body47

if.end60.cleanup_crit_edge:                       ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.then.i138.cleanup.sink.split_crit_edge, %if.then.i118.cleanup.sink.split_crit_edge, %if.then.i108.cleanup.sink.split_crit_edge, %if.then.i.cleanup.sink.split_crit_edge
  %call2.i133.sink = phi i32 [ %call2.i, %if.then.i.cleanup.sink.split_crit_edge ], [ %call2.i103, %if.then.i108.cleanup.sink.split_crit_edge ], [ %call2.i113, %if.then.i118.cleanup.sink.split_crit_edge ], [ %call2.i133, %if.then.i138.cleanup.sink.split_crit_edge ]
  %retval.0.ph = phi i32 [ %call10.i, %if.then.i.cleanup.sink.split_crit_edge ], [ %call10.i106, %if.then.i108.cleanup.sink.split_crit_edge ], [ %call10.i116, %if.then.i118.cleanup.sink.split_crit_edge ], [ %call10.i136, %if.then.i138.cleanup.sink.split_crit_edge ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i133.sink) #6
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end60.cleanup_crit_edge, %if.end55.cleanup_crit_edge, %if.end51.cleanup_crit_edge, %for.body47.cleanup_crit_edge, %if.end38.cleanup_crit_edge, %if.end34.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %e1000_write_phy_reg.exit142.cleanup_crit_edge, %if.end13.cleanup_crit_edge, %for.body.cleanup_crit_edge, %e1000_write_phy_reg.exit122.cleanup_crit_edge, %e1000_write_phy_reg.exit112.cleanup_crit_edge, %e1000_write_phy_reg.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13.i, %e1000_write_phy_reg.exit.cleanup_crit_edge ], [ %call13.i109, %e1000_write_phy_reg.exit112.cleanup_crit_edge ], [ %call13.i119, %e1000_write_phy_reg.exit122.cleanup_crit_edge ], [ %call13.i139, %e1000_write_phy_reg.exit142.cleanup_crit_edge ], [ %call27, %if.end26.cleanup_crit_edge ], [ %call31, %if.end30.cleanup_crit_edge ], [ %call35, %if.end34.cleanup_crit_edge ], [ %call39, %if.end38.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ], [ 0, %if.end60.cleanup_crit_edge ], [ 0, %if.end55.cleanup_crit_edge ], [ %call52, %if.end51.cleanup_crit_edge ], [ %call48, %for.body47.cleanup_crit_edge ], [ %call13.i131, %if.end13.cleanup_crit_edge ], [ %call13.i126, %for.body.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_status_reg) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_config_dsp_after_link_change(ptr noundef %hw, i1 noundef zeroext %link_up) unnamed_addr #1 align 64 {
entry:
  %min_length.i = alloca i16, align 2
  %max_length.i = alloca i16, align 2
  %phy_data.i = alloca i16, align 2
  %phy_data = alloca i16, align 2
  %phy_saved_data = alloca i16, align 2
  %speed = alloca i16, align 2
  %duplex = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_saved_data) #6
  %1 = ptrtoint ptr %phy_saved_data to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %phy_saved_data, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %speed) #6
  %2 = ptrtoint ptr %speed to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %speed, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %duplex) #6
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %3 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp.not = icmp eq i32 %4, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %link_up, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  %call = call i32 @e1000_get_speed_and_duplex(ptr noundef %hw, ptr noundef nonnull %speed, ptr noundef nonnull %duplex)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %if.end15, label %do.body4

do.body4:                                         ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_dsp_after_link_change.__UNIQUE_ID_ddebug618, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_dsp_after_link_change, %if.then10)) #6
          to label %cleanup [label %if.then10], !srcloc !394

if.then10:                                        ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #8
  %call11 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_dsp_after_link_change.__UNIQUE_ID_ddebug618, ptr noundef %call11, ptr noundef nonnull @.str.28) #6
  br label %cleanup

if.end15:                                         ; preds = %if.then1
  %5 = ptrtoint ptr %speed to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %speed, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1000, i16 %6)
  %cmp16 = icmp eq i16 %6, 1000
  br i1 %cmp16, label %if.then18, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then18:                                        ; preds = %if.end15
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %min_length.i) #6
  %7 = ptrtoint ptr %min_length.i to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 -1, ptr %min_length.i, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %max_length.i) #6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data.i) #6
  %8 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %phy_data.i, align 2, !annotation !414
  %call.i = call fastcc i32 @e1000_get_cable_length(ptr noundef %hw, ptr noundef nonnull %min_length.i, ptr noundef nonnull %max_length.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then18.e1000_1000Mb_check_cable_length.exit.thread_crit_edge

if.then18.e1000_1000Mb_check_cable_length.exit.thread_crit_edge: ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit.thread

if.end.i:                                         ; preds = %if.then18
  %dsp_config_state.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 65
  %9 = ptrtoint ptr %dsp_config_state.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %dsp_config_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp.not.i = icmp eq i32 %10, 1
  br i1 %cmp.not.i, label %if.end2.i, label %if.end.i.e1000_1000Mb_check_cable_length.exit_crit_edge

if.end.i.e1000_1000Mb_check_cable_length.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit

if.end2.i:                                        ; preds = %if.end.i
  %11 = ptrtoint ptr %min_length.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %min_length.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 49, i16 %12)
  %cmp3.i = icmp ugt i16 %12, 49
  br i1 %cmp3.i, label %if.end2.i.for.body.i_crit_edge, label %if.else.i

if.end2.i.for.body.i_crit_edge:                   ; preds = %if.end2.i
  br label %for.body.i

for.cond.i:                                       ; preds = %e1000_write_phy_reg.exit.i
  %indvars.iv.next.i = add nuw nsw i32 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i32 %indvars.iv.next.i, 4
  br i1 %exitcond.not.i, label %for.end.i, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %if.end2.i.for.body.i_crit_edge
  %indvars.iv.i = phi i32 [ %indvars.iv.next.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %if.end2.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [4 x i16], ptr @dsp_reg_array, i32 0, i32 %indvars.iv.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %arrayidx.i, align 2
  %call2.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %15 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp5.i.i = icmp eq i32 %16, 1
  br i1 %cmp5.i.i, label %if.then.i.i, label %for.body.i.e1000_read_phy_reg.exit.i_crit_edge

for.body.i.e1000_read_phy_reg.exit.i_crit_edge:   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  %call10.i.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext %14) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool.not.i.i = icmp eq i32 %call10.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i.e1000_read_phy_reg.exit.i_crit_edge, label %if.then.i.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge

if.then.i.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit.thread.sink.split

if.then.i.i.e1000_read_phy_reg.exit.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit.i

e1000_read_phy_reg.exit.i:                        ; preds = %if.then.i.i.e1000_read_phy_reg.exit.i_crit_edge, %for.body.i.e1000_read_phy_reg.exit.i_crit_edge
  %17 = and i16 %14, 31
  %and.i.i = zext i16 %17 to i32
  %call13.i.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef %and.i.i, ptr noundef nonnull %phy_data.i) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i)
  %tobool11.not.i = icmp eq i32 %call13.i.i, 0
  br i1 %tobool11.not.i, label %if.end13.i, label %e1000_read_phy_reg.exit.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge

e1000_read_phy_reg.exit.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge: ; preds = %e1000_read_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit.thread

if.end13.i:                                       ; preds = %e1000_read_phy_reg.exit.i
  %18 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %phy_data.i, align 2
  %20 = and i16 %19, 16383
  store i16 %20, ptr %phy_data.i, align 2
  %call2.i87.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %21 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp5.i89.i = icmp eq i32 %22, 1
  br i1 %cmp5.i89.i, label %if.then.i94.i, label %if.end13.i.e1000_write_phy_reg.exit.i_crit_edge

if.end13.i.e1000_write_phy_reg.exit.i_crit_edge:  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i

if.then.i94.i:                                    ; preds = %if.end13.i
  %call10.i92.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext %14) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i92.i)
  %tobool.not.i93.i = icmp eq i32 %call10.i92.i, 0
  br i1 %tobool.not.i93.i, label %if.then.i94.i.e1000_write_phy_reg.exit.i_crit_edge, label %if.then.i94.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge

if.then.i94.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge: ; preds = %if.then.i94.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit.thread.sink.split

if.then.i94.i.e1000_write_phy_reg.exit.i_crit_edge: ; preds = %if.then.i94.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i

e1000_write_phy_reg.exit.i:                       ; preds = %if.then.i94.i.e1000_write_phy_reg.exit.i_crit_edge, %if.end13.i.e1000_write_phy_reg.exit.i_crit_edge
  %call13.i96.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef %and.i.i, i16 noundef zeroext %20) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i87.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i96.i)
  %tobool20.not.i = icmp eq i32 %call13.i96.i, 0
  br i1 %tobool20.not.i, label %for.cond.i, label %e1000_write_phy_reg.exit.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge

e1000_write_phy_reg.exit.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge: ; preds = %e1000_write_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit.thread

for.end.i:                                        ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #8
  %23 = ptrtoint ptr %dsp_config_state.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 2, ptr %dsp_config_state.i, align 4
  br label %e1000_1000Mb_check_cable_length.exit

if.else.i:                                        ; preds = %if.end2.i
  %call2.i98.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i101.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 10, ptr noundef nonnull %phy_data.i) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i98.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i101.i)
  %tobool25.not.i = icmp eq i32 %call13.i101.i, 0
  br i1 %tobool25.not.i, label %if.else.i.for.body33.i_crit_edge, label %if.else.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge

if.else.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit.thread

if.else.i.for.body33.i_crit_edge:                 ; preds = %if.else.i
  br label %for.body33.i

for.body33.i:                                     ; preds = %if.end47.i.for.body33.i_crit_edge, %if.else.i.for.body33.i_crit_edge
  %idle_errs.0122.i = phi i32 [ %add.i, %if.end47.i.for.body33.i_crit_edge ], [ 0, %if.else.i.for.body33.i_crit_edge ]
  %ffe_idle_err_timeout.0121.i = phi i16 [ %spec.select.i, %if.end47.i.for.body33.i_crit_edge ], [ 20, %if.else.i.for.body33.i_crit_edge ]
  %i.1120.i = phi i16 [ %inc52.i, %if.end47.i.for.body33.i_crit_edge ], [ 0, %if.else.i.for.body33.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %24 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %24(i32 noundef 214748000) #6
  %call2.i104.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i107.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 10, ptr noundef nonnull %phy_data.i) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i104.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i107.i)
  %tobool35.not.i = icmp eq i32 %call13.i107.i, 0
  br i1 %tobool35.not.i, label %if.end37.i, label %for.body33.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge

for.body33.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge: ; preds = %for.body33.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit.thread

if.end37.i:                                       ; preds = %for.body33.i
  %25 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %phy_data.i, align 2
  %27 = and i16 %26, 255
  %and39.i = zext i16 %27 to i32
  %add.i = add i32 %idle_errs.0122.i, %and39.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %add.i)
  %cmp40.i = icmp ugt i32 %add.i, 5
  br i1 %cmp40.i, label %if.then42.i, label %if.end47.i

if.then42.i:                                      ; preds = %if.end37.i
  %ffe_config_state.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 18
  %28 = ptrtoint ptr %ffe_config_state.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 1, ptr %ffe_config_state.i, align 4
  %call43.i = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 7989, i16 noundef zeroext 105) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43.i)
  %tobool44.not.i = icmp eq i32 %call43.i, 0
  br i1 %tobool44.not.i, label %if.then42.i.e1000_1000Mb_check_cable_length.exit_crit_edge, label %if.then42.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge

if.then42.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge: ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit.thread

if.then42.i.e1000_1000Mb_check_cable_length.exit_crit_edge: ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit

if.end47.i:                                       ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.i)
  %tobool48.not.i = icmp eq i32 %add.i, 0
  %spec.select.i = select i1 %tobool48.not.i, i16 %ffe_idle_err_timeout.0121.i, i16 100
  %inc52.i = add nuw i16 %i.1120.i, 1
  %cmp31.i = icmp ult i16 %inc52.i, %spec.select.i
  br i1 %cmp31.i, label %if.end47.i.for.body33.i_crit_edge, label %if.end47.i.e1000_1000Mb_check_cable_length.exit_crit_edge

if.end47.i.e1000_1000Mb_check_cable_length.exit_crit_edge: ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_1000Mb_check_cable_length.exit

if.end47.i.for.body33.i_crit_edge:                ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body33.i

e1000_1000Mb_check_cable_length.exit.thread.sink.split: ; preds = %if.then.i94.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge, %if.then.i.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge
  %call2.i.i.lcssa.sink = phi i32 [ %call2.i.i, %if.then.i.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge ], [ %call2.i87.i, %if.then.i94.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge ]
  %retval.1.i.ph.ph = phi i32 [ %call10.i.i, %if.then.i.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge ], [ %call10.i92.i, %if.then.i94.i.e1000_1000Mb_check_cable_length.exit.thread.sink.split_crit_edge ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i.lcssa.sink) #6
  br label %e1000_1000Mb_check_cable_length.exit.thread

e1000_1000Mb_check_cable_length.exit.thread:      ; preds = %e1000_1000Mb_check_cable_length.exit.thread.sink.split, %if.then42.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge, %for.body33.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge, %if.else.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge, %e1000_write_phy_reg.exit.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge, %e1000_read_phy_reg.exit.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge, %if.then18.e1000_1000Mb_check_cable_length.exit.thread_crit_edge
  %retval.1.i.ph = phi i32 [ %call.i, %if.then18.e1000_1000Mb_check_cable_length.exit.thread_crit_edge ], [ %call43.i, %if.then42.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge ], [ %call13.i101.i, %if.else.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge ], [ %retval.1.i.ph.ph, %e1000_1000Mb_check_cable_length.exit.thread.sink.split ], [ %call13.i96.i, %e1000_write_phy_reg.exit.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge ], [ %call13.i.i, %e1000_read_phy_reg.exit.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge ], [ %call13.i107.i, %for.body33.i.e1000_1000Mb_check_cable_length.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data.i) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %max_length.i) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %min_length.i) #6
  br label %cleanup

e1000_1000Mb_check_cable_length.exit:             ; preds = %if.end47.i.e1000_1000Mb_check_cable_length.exit_crit_edge, %if.then42.i.e1000_1000Mb_check_cable_length.exit_crit_edge, %for.end.i, %if.end.i.e1000_1000Mb_check_cable_length.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data.i) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %max_length.i) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %min_length.i) #6
  br label %cleanup

if.else:                                          ; preds = %if.end
  %dsp_config_state = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 65
  %29 = ptrtoint ptr %dsp_config_state to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %dsp_config_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %30)
  %cmp24 = icmp eq i32 %30, 2
  br i1 %cmp24, label %if.then26, label %if.else.if.end67_crit_edge

if.else.if.end67_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end67

if.then26:                                        ; preds = %if.else
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %31 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %32)
  %cmp5.i = icmp eq i32 %32, 1
  br i1 %cmp5.i, label %if.then.i, label %if.then26.e1000_read_phy_reg.exit_crit_edge

if.then26.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %if.then26
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 12123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i155 = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i155, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %if.then26.e1000_read_phy_reg.exit_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 27, ptr noundef nonnull %phy_saved_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool28.not = icmp eq i32 %call13.i, 0
  br i1 %tobool28.not, label %if.end30, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end30:                                         ; preds = %e1000_read_phy_reg.exit
  %call2.i156 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %33 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %34)
  %cmp5.i158 = icmp eq i32 %34, 1
  br i1 %cmp5.i158, label %if.then.i161, label %if.end30.e1000_write_phy_reg.exit_crit_edge

if.end30.e1000_write_phy_reg.exit_crit_edge:      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i161:                                     ; preds = %if.end30
  %call10.i159 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 12123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i159)
  %tobool.not.i160 = icmp eq i32 %call10.i159, 0
  br i1 %tobool.not.i160, label %if.then.i161.e1000_write_phy_reg.exit_crit_edge, label %e1000_write_phy_reg.exit.thread

if.then.i161.e1000_write_phy_reg.exit_crit_edge:  ; preds = %if.then.i161
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit.thread:                  ; preds = %if.then.i161
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i156) #6
  br label %cleanup

e1000_write_phy_reg.exit:                         ; preds = %if.then.i161.e1000_write_phy_reg.exit_crit_edge, %if.end30.e1000_write_phy_reg.exit_crit_edge
  %call13.i162 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 27, i16 noundef zeroext 3) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i156) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i162)
  %tobool32.not = icmp eq i32 %call13.i162, 0
  br i1 %tobool32.not, label %if.end34, label %e1000_write_phy_reg.exit.cleanup_crit_edge

e1000_write_phy_reg.exit.cleanup_crit_edge:       ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end34:                                         ; preds = %e1000_write_phy_reg.exit
  tail call void @msleep(i32 noundef 20) #6
  %call35 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext 320)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.end34.for.body_crit_edge, label %if.end34.cleanup_crit_edge

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end34.for.body_crit_edge:                      ; preds = %if.end34
  br label %for.body

for.cond:                                         ; preds = %e1000_write_phy_reg.exit187
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  %exitcond.not = icmp eq i32 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.end, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end34.for.body_crit_edge
  %indvars.iv = phi i32 [ %indvars.iv.next, %for.cond.for.body_crit_edge ], [ 0, %if.end34.for.body_crit_edge ]
  %arrayidx = getelementptr [4 x i16], ptr @dsp_reg_array, i32 0, i32 %indvars.iv
  %35 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %arrayidx, align 2
  %call2.i165 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %37 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %38)
  %cmp5.i167 = icmp eq i32 %38, 1
  br i1 %cmp5.i167, label %if.then.i170, label %for.body.e1000_read_phy_reg.exit174_crit_edge

for.body.e1000_read_phy_reg.exit174_crit_edge:    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit174

if.then.i170:                                     ; preds = %for.body
  %call10.i168 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext %36) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i168)
  %tobool.not.i169 = icmp eq i32 %call10.i168, 0
  br i1 %tobool.not.i169, label %if.then.i170.e1000_read_phy_reg.exit174_crit_edge, label %e1000_read_phy_reg.exit174.thread

if.then.i170.e1000_read_phy_reg.exit174_crit_edge: ; preds = %if.then.i170
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit174

e1000_read_phy_reg.exit174.thread:                ; preds = %if.then.i170
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i165) #6
  br label %cleanup

e1000_read_phy_reg.exit174:                       ; preds = %if.then.i170.e1000_read_phy_reg.exit174_crit_edge, %for.body.e1000_read_phy_reg.exit174_crit_edge
  %39 = and i16 %36, 31
  %and.i = zext i16 %39 to i32
  %call13.i171 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef %and.i, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i165) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i171)
  %tobool44.not = icmp eq i32 %call13.i171, 0
  br i1 %tobool44.not, label %if.end46, label %e1000_read_phy_reg.exit174.cleanup_crit_edge

e1000_read_phy_reg.exit174.cleanup_crit_edge:     ; preds = %e1000_read_phy_reg.exit174
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end46:                                         ; preds = %e1000_read_phy_reg.exit174
  %40 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %phy_data, align 2
  %42 = and i16 %41, 16383
  %43 = or i16 %42, -32768
  store i16 %43, ptr %phy_data, align 2
  %call2.i175 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %44 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %45)
  %cmp5.i177 = icmp eq i32 %45, 1
  br i1 %cmp5.i177, label %if.then.i182, label %if.end46.e1000_write_phy_reg.exit187_crit_edge

if.end46.e1000_write_phy_reg.exit187_crit_edge:   ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit187

if.then.i182:                                     ; preds = %if.end46
  %call10.i180 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext %36) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i180)
  %tobool.not.i181 = icmp eq i32 %call10.i180, 0
  br i1 %tobool.not.i181, label %if.then.i182.e1000_write_phy_reg.exit187_crit_edge, label %e1000_write_phy_reg.exit187.thread

if.then.i182.e1000_write_phy_reg.exit187_crit_edge: ; preds = %if.then.i182
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit187

e1000_write_phy_reg.exit187.thread:               ; preds = %if.then.i182
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i175) #6
  br label %cleanup

e1000_write_phy_reg.exit187:                      ; preds = %if.then.i182.e1000_write_phy_reg.exit187_crit_edge, %if.end46.e1000_write_phy_reg.exit187_crit_edge
  %call13.i184 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef %and.i, i16 noundef zeroext %43) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i175) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i184)
  %tobool55.not = icmp eq i32 %call13.i184, 0
  br i1 %tobool55.not, label %for.cond, label %e1000_write_phy_reg.exit187.cleanup_crit_edge

e1000_write_phy_reg.exit187.cleanup_crit_edge:    ; preds = %e1000_write_phy_reg.exit187
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

for.end:                                          ; preds = %for.cond
  %call58 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext 13056)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %if.end61, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end61:                                         ; preds = %for.end
  tail call void @msleep(i32 noundef 20) #6
  %46 = ptrtoint ptr %phy_saved_data to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %phy_saved_data, align 2
  %call62 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 12123, i16 noundef zeroext %47)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %if.end65, label %if.end61.cleanup_crit_edge

if.end61.cleanup_crit_edge:                       ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end65:                                         ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #8
  %48 = ptrtoint ptr %dsp_config_state to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 1, ptr %dsp_config_state, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.end65, %if.else.if.end67_crit_edge
  %ffe_config_state = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 18
  %49 = ptrtoint ptr %ffe_config_state to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %ffe_config_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %50)
  %cmp68 = icmp eq i32 %50, 1
  br i1 %cmp68, label %if.then70, label %if.end67.cleanup_crit_edge

if.end67.cleanup_crit_edge:                       ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then70:                                        ; preds = %if.end67
  %call2.i188 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %51 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %cmp5.i190 = icmp eq i32 %52, 1
  br i1 %cmp5.i190, label %if.then.i193, label %if.then70.e1000_read_phy_reg.exit197_crit_edge

if.then70.e1000_read_phy_reg.exit197_crit_edge:   ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit197

if.then.i193:                                     ; preds = %if.then70
  %call10.i191 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 12123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i191)
  %tobool.not.i192 = icmp eq i32 %call10.i191, 0
  br i1 %tobool.not.i192, label %if.then.i193.e1000_read_phy_reg.exit197_crit_edge, label %e1000_read_phy_reg.exit197.thread

if.then.i193.e1000_read_phy_reg.exit197_crit_edge: ; preds = %if.then.i193
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit197

e1000_read_phy_reg.exit197.thread:                ; preds = %if.then.i193
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i188) #6
  br label %cleanup

e1000_read_phy_reg.exit197:                       ; preds = %if.then.i193.e1000_read_phy_reg.exit197_crit_edge, %if.then70.e1000_read_phy_reg.exit197_crit_edge
  %call13.i194 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 27, ptr noundef nonnull %phy_saved_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i188) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i194)
  %tobool72.not = icmp eq i32 %call13.i194, 0
  br i1 %tobool72.not, label %if.end74, label %e1000_read_phy_reg.exit197.cleanup_crit_edge

e1000_read_phy_reg.exit197.cleanup_crit_edge:     ; preds = %e1000_read_phy_reg.exit197
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end74:                                         ; preds = %e1000_read_phy_reg.exit197
  %call2.i198 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %53 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %54)
  %cmp5.i200 = icmp eq i32 %54, 1
  br i1 %cmp5.i200, label %if.then.i203, label %if.end74.e1000_write_phy_reg.exit207_crit_edge

if.end74.e1000_write_phy_reg.exit207_crit_edge:   ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit207

if.then.i203:                                     ; preds = %if.end74
  %call10.i201 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 12123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i201)
  %tobool.not.i202 = icmp eq i32 %call10.i201, 0
  br i1 %tobool.not.i202, label %if.then.i203.e1000_write_phy_reg.exit207_crit_edge, label %e1000_write_phy_reg.exit207.thread

if.then.i203.e1000_write_phy_reg.exit207_crit_edge: ; preds = %if.then.i203
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit207

e1000_write_phy_reg.exit207.thread:               ; preds = %if.then.i203
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i198) #6
  br label %cleanup

e1000_write_phy_reg.exit207:                      ; preds = %if.then.i203.e1000_write_phy_reg.exit207_crit_edge, %if.end74.e1000_write_phy_reg.exit207_crit_edge
  %call13.i204 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 27, i16 noundef zeroext 3) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i198) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i204)
  %tobool76.not = icmp eq i32 %call13.i204, 0
  br i1 %tobool76.not, label %if.end78, label %e1000_write_phy_reg.exit207.cleanup_crit_edge

e1000_write_phy_reg.exit207.cleanup_crit_edge:    ; preds = %e1000_write_phy_reg.exit207
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end78:                                         ; preds = %e1000_write_phy_reg.exit207
  tail call void @msleep(i32 noundef 20) #6
  %call79 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext 320)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.end82, label %if.end78.cleanup_crit_edge

if.end78.cleanup_crit_edge:                       ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end82:                                         ; preds = %if.end78
  %call83 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 7989, i16 noundef zeroext 42)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %if.end86, label %if.end82.cleanup_crit_edge

if.end82.cleanup_crit_edge:                       ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end86:                                         ; preds = %if.end82
  %call87 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext 13056)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call87)
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %if.end90, label %if.end86.cleanup_crit_edge

if.end86.cleanup_crit_edge:                       ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end90:                                         ; preds = %if.end86
  tail call void @msleep(i32 noundef 20) #6
  %55 = ptrtoint ptr %phy_saved_data to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %phy_saved_data, align 2
  %call91 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 12123, i16 noundef zeroext %56)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91)
  %tobool92.not = icmp eq i32 %call91, 0
  br i1 %tobool92.not, label %if.end94, label %if.end90.cleanup_crit_edge

if.end90.cleanup_crit_edge:                       ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end94:                                         ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #8
  %57 = ptrtoint ptr %ffe_config_state to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %ffe_config_state, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end94, %if.end90.cleanup_crit_edge, %if.end86.cleanup_crit_edge, %if.end82.cleanup_crit_edge, %if.end78.cleanup_crit_edge, %e1000_write_phy_reg.exit207.cleanup_crit_edge, %e1000_write_phy_reg.exit207.thread, %e1000_read_phy_reg.exit197.cleanup_crit_edge, %e1000_read_phy_reg.exit197.thread, %if.end67.cleanup_crit_edge, %if.end61.cleanup_crit_edge, %for.end.cleanup_crit_edge, %e1000_write_phy_reg.exit187.cleanup_crit_edge, %e1000_write_phy_reg.exit187.thread, %e1000_read_phy_reg.exit174.cleanup_crit_edge, %e1000_read_phy_reg.exit174.thread, %if.end34.cleanup_crit_edge, %e1000_write_phy_reg.exit.cleanup_crit_edge, %e1000_write_phy_reg.exit.thread, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread, %e1000_1000Mb_check_cable_length.exit, %e1000_1000Mb_check_cable_length.exit.thread, %if.end15.cleanup_crit_edge, %if.then10, %do.body4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call, %if.then10 ], [ %call13.i, %e1000_read_phy_reg.exit.cleanup_crit_edge ], [ %call13.i162, %e1000_write_phy_reg.exit.cleanup_crit_edge ], [ %call35, %if.end34.cleanup_crit_edge ], [ %call58, %for.end.cleanup_crit_edge ], [ %call62, %if.end61.cleanup_crit_edge ], [ %call13.i194, %e1000_read_phy_reg.exit197.cleanup_crit_edge ], [ %call13.i204, %e1000_write_phy_reg.exit207.cleanup_crit_edge ], [ %call79, %if.end78.cleanup_crit_edge ], [ %call83, %if.end82.cleanup_crit_edge ], [ %call87, %if.end86.cleanup_crit_edge ], [ %call91, %if.end90.cleanup_crit_edge ], [ %call, %do.body4 ], [ %retval.1.i.ph, %e1000_1000Mb_check_cable_length.exit.thread ], [ %call10.i, %e1000_read_phy_reg.exit.thread ], [ %call10.i159, %e1000_write_phy_reg.exit.thread ], [ %call10.i168, %e1000_read_phy_reg.exit174.thread ], [ %call10.i180, %e1000_write_phy_reg.exit187.thread ], [ %call10.i191, %e1000_read_phy_reg.exit197.thread ], [ %call10.i201, %e1000_write_phy_reg.exit207.thread ], [ 0, %e1000_1000Mb_check_cable_length.exit ], [ 0, %if.end67.cleanup_crit_edge ], [ 0, %if.end94 ], [ 0, %if.end15.cleanup_crit_edge ], [ %call13.i184, %e1000_write_phy_reg.exit187.cleanup_crit_edge ], [ %call13.i171, %e1000_read_phy_reg.exit174.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %duplex) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %speed) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_saved_data) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_config_mac_to_phy(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %1 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %mac_type, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.164)
  switch i32 %2, label %entry.cleanup_crit_edge [
    i32 9, label %entry.if.end_crit_edge
    i32 3, label %entry.if.end_crit_edge95
    i32 2, label %entry.if.end_crit_edge96
    i32 1, label %entry.if.end_crit_edge97
    i32 0, label %entry.if.end_crit_edge98
  ]

entry.if.end_crit_edge98:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end

entry.if.end_crit_edge97:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end

entry.if.end_crit_edge96:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end

entry.if.end_crit_edge95:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %entry.if.end_crit_edge, %entry.if.end_crit_edge95, %entry.if.end_crit_edge96, %entry.if.end_crit_edge97, %entry.if.end_crit_edge98
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %5) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !529
  %7 = and i32 %6, 2145714175
  %8 = or i32 %7, 1572864
  %9 = tail call i32 @llvm.bswap.i32(i32 %8)
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %10 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %11)
  %cond58 = icmp eq i32 %11, 3
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  br i1 %cond58, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %if.end
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 0, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end8, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end8:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  %12 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %phy_data, align 2
  %14 = and i16 %13, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool10.not = icmp eq i16 %14, 0
  %or12 = or i32 %9, 1
  %and13 = and i32 %9, -898
  %ctrl.0 = select i1 %tobool10.not, i32 %and13, i32 %or12
  %15 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %16)
  %cmp.i = icmp ult i32 %16, 3
  %..i = select i1 %cmp.i, i32 262144, i32 258048
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr.i = getelementptr i8, ptr %18, i32 1024
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !508
  %20 = and i32 %19, -15744769
  %21 = tail call i32 @llvm.bswap.i32(i32 %20) #6
  %or.i = or i32 %21, %..i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !509
  tail call void @arm_heavy_mb() #6
  %22 = tail call i32 @llvm.bswap.i32(i32 %or.i) #6
  %23 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %hw, align 4
  %add.ptr8.i = getelementptr i8, ptr %24, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8.i, i32 %22) #6, !srcloc !396
  %25 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw, align 4
  %add.ptr15.i = getelementptr i8, ptr %26, i32 8
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !510
  br label %do.body

sw.default:                                       ; preds = %if.end
  %28 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %cmp5.i84 = icmp eq i32 %29, 1
  br i1 %cmp5.i84, label %if.then.i, label %sw.default.e1000_read_phy_reg.exit_crit_edge

sw.default.e1000_read_phy_reg.exit_crit_edge:     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %sw.default
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 17) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %sw.default.e1000_read_phy_reg.exit_crit_edge
  %call13.i85 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 17, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i85)
  %tobool24.not = icmp eq i32 %call13.i85, 0
  br i1 %tobool24.not, label %if.end26, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end26:                                         ; preds = %e1000_read_phy_reg.exit
  %30 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %phy_data, align 2
  %32 = and i16 %31, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %32)
  %tobool29.not = icmp eq i16 %32, 0
  %or31 = or i32 %9, 1
  %and33 = and i32 %9, -898
  %ctrl.2 = select i1 %tobool29.not, i32 %and33, i32 %or31
  %33 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %34)
  %cmp.i87 = icmp ult i32 %34, 3
  %..i88 = select i1 %cmp.i87, i32 262144, i32 258048
  %35 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hw, align 4
  %add.ptr.i89 = getelementptr i8, ptr %36, i32 1024
  %37 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i89) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !508
  %38 = and i32 %37, -15744769
  %39 = tail call i32 @llvm.bswap.i32(i32 %38) #6
  %or.i90 = or i32 %39, %..i88
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !509
  tail call void @arm_heavy_mb() #6
  %40 = tail call i32 @llvm.bswap.i32(i32 %or.i90) #6
  %41 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %hw, align 4
  %add.ptr8.i91 = getelementptr i8, ptr %42, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8.i91, i32 %40) #6, !srcloc !396
  %43 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hw, align 4
  %add.ptr15.i92 = getelementptr i8, ptr %44, i32 8
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15.i92) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !510
  %46 = and i16 %31, -16384
  %47 = zext i16 %46 to i64
  call void @__sanitizer_cov_trace_switch(i64 %47, ptr @__sancov_gen_cov_switch_values.165)
  switch i16 %46, label %if.end26.do.body_crit_edge [
    i16 -32768, label %if.then39
    i16 16384, label %if.then46
  ]

if.end26.do.body_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body

if.then39:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  %or40 = or i32 %ctrl.2, 512
  br label %do.body

if.then46:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #8
  %or47 = or i32 %ctrl.2, 256
  br label %do.body

do.body:                                          ; preds = %if.then46, %if.then39, %if.end26.do.body_crit_edge, %if.end8
  %ctrl.3 = phi i32 [ %ctrl.0, %if.end8 ], [ %or40, %if.then39 ], [ %or47, %if.then46 ], [ %ctrl.2, %if.end26.do.body_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !530
  tail call void @arm_heavy_mb() #6
  %48 = tail call i32 @llvm.bswap.i32(i32 %ctrl.3)
  %49 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %50, i32 %48) #6, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %do.body, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.body ], [ 0, %entry.cleanup_crit_edge ], [ %call13.i, %sw.bb.cleanup_crit_edge ], [ %call13.i85, %e1000_read_phy_reg.exit.cleanup_crit_edge ], [ %call10.i, %e1000_read_phy_reg.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_config_fc_after_link_up(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %mii_status_reg = alloca i16, align 2
  %mii_nway_adv_reg = alloca i16, align 2
  %mii_nway_lp_ability_reg = alloca i16, align 2
  %speed = alloca i16, align 2
  %duplex = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_status_reg) #6
  %0 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %mii_status_reg, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_nway_adv_reg) #6
  %1 = ptrtoint ptr %mii_nway_adv_reg to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %mii_nway_adv_reg, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_nway_lp_ability_reg) #6
  %2 = ptrtoint ptr %mii_nway_lp_ability_reg to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %mii_nway_lp_ability_reg, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %speed) #6
  %3 = ptrtoint ptr %speed to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %speed, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %duplex) #6
  %4 = ptrtoint ptr %duplex to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %duplex, align 2, !annotation !414
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %5 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %media_type, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.166)
  switch i32 %6, label %entry.cleanup_crit_edge [
    i32 1, label %land.lhs.true
    i32 2, label %land.lhs.true3
    i32 0, label %land.lhs.true9
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

land.lhs.true:                                    ; preds = %entry
  %autoneg_failed = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 27
  %8 = ptrtoint ptr %autoneg_failed to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %autoneg_failed, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.then_crit_edge

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

land.lhs.true3:                                   ; preds = %entry
  %autoneg_failed4 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 27
  %10 = ptrtoint ptr %autoneg_failed4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %autoneg_failed4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool5.not = icmp eq i32 %11, 0
  br i1 %tobool5.not, label %land.lhs.true3.cleanup_crit_edge, label %land.lhs.true3.if.then_crit_edge

land.lhs.true3.if.then_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then

land.lhs.true3.cleanup_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

land.lhs.true9:                                   ; preds = %entry
  %autoneg = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 55
  %12 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %autoneg, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool10.not = icmp eq i8 %13, 0
  br i1 %tobool10.not, label %land.lhs.true9.if.then_crit_edge, label %land.lhs.true9.land.lhs.true26_crit_edge

land.lhs.true9.land.lhs.true26_crit_edge:         ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #8
  br label %land.lhs.true26

land.lhs.true9.if.then_crit_edge:                 ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then

if.then:                                          ; preds = %land.lhs.true9.if.then_crit_edge, %land.lhs.true3.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  %call = tail call i32 @e1000_force_mac_fc(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool11.not = icmp eq i32 %call, 0
  br i1 %tobool11.not, label %if.end23, label %do.body13

do.body13:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug559, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then18)) #6
          to label %cleanup [label %if.then18], !srcloc !394

if.then18:                                        ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #8
  %call19 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug559, ptr noundef %call19, ptr noundef nonnull @.str.97) #6
  br label %cleanup

if.end23:                                         ; preds = %if.then
  %14 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pr = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %cmp25 = icmp eq i32 %.pr, 0
  br i1 %cmp25, label %if.end23.land.lhs.true26_crit_edge, label %if.end23.cleanup_crit_edge

if.end23.cleanup_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end23.land.lhs.true26_crit_edge:               ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #8
  br label %land.lhs.true26

land.lhs.true26:                                  ; preds = %if.end23.land.lhs.true26_crit_edge, %land.lhs.true9.land.lhs.true26_crit_edge
  %autoneg27 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 55
  %15 = ptrtoint ptr %autoneg27 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %autoneg27, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool28.not = icmp eq i8 %16, 0
  br i1 %tobool28.not, label %land.lhs.true26.cleanup_crit_edge, label %if.then29

land.lhs.true26.cleanup_crit_edge:                ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then29:                                        ; preds = %land.lhs.true26
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool31.not = icmp eq i32 %call13.i, 0
  br i1 %tobool31.not, label %if.end33, label %if.then29.cleanup_crit_edge

if.then29.cleanup_crit_edge:                      ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end33:                                         ; preds = %if.then29
  %call2.i397 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i400 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i397) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i400)
  %tobool35.not = icmp eq i32 %call13.i400, 0
  br i1 %tobool35.not, label %if.end37, label %if.end33.cleanup_crit_edge

if.end33.cleanup_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end37:                                         ; preds = %if.end33
  %17 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %mii_status_reg, align 2
  %19 = and i16 %18, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool39.not = icmp eq i16 %19, 0
  br i1 %tobool39.not, label %do.body293, label %if.then40

if.then40:                                        ; preds = %if.end37
  %call41 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 4, ptr noundef nonnull %mii_nway_adv_reg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end44, label %if.then40.cleanup_crit_edge

if.then40.cleanup_crit_edge:                      ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end44:                                         ; preds = %if.then40
  %call45 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 5, ptr noundef nonnull %mii_nway_lp_ability_reg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.end48, label %if.end44.cleanup_crit_edge

if.end44.cleanup_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end48:                                         ; preds = %if.end44
  %20 = ptrtoint ptr %mii_nway_adv_reg to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %mii_nway_adv_reg, align 2
  %22 = and i16 %21, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool51.not = icmp eq i16 %22, 0
  br i1 %tobool51.not, label %if.end48.if.else102_crit_edge, label %land.lhs.true52

if.end48.if.else102_crit_edge:                    ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else102

land.lhs.true52:                                  ; preds = %if.end48
  %23 = ptrtoint ptr %mii_nway_lp_ability_reg to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %mii_nway_lp_ability_reg, align 2
  %25 = and i16 %24, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool55.not = icmp eq i16 %25, 0
  br i1 %tobool55.not, label %land.lhs.true52.if.else102_crit_edge, label %if.then56

land.lhs.true52.if.else102_crit_edge:             ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else102

if.then56:                                        ; preds = %land.lhs.true52
  %original_fc = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 25
  %26 = ptrtoint ptr %original_fc to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %original_fc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %27)
  %cmp57 = icmp eq i32 %27, 3
  %fc = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  br i1 %cmp57, label %if.then59, label %if.else

if.then59:                                        ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #8
  %28 = ptrtoint ptr %fc to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 3, ptr %fc, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug560, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then73)) #6
          to label %if.end236 [label %if.then73], !srcloc !394

if.then73:                                        ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #8
  %call74 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug560, ptr noundef %call74, ptr noundef nonnull @.str.98) #6
  br label %if.end236

if.else:                                          ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #8
  %29 = ptrtoint ptr %fc to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 1, ptr %fc, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug561, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then94)) #6
          to label %if.end236 [label %if.then94], !srcloc !394

if.then94:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %call95 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug561, ptr noundef %call95, ptr noundef nonnull @.str.99) #6
  br label %if.end236

if.else102:                                       ; preds = %land.lhs.true52.if.else102_crit_edge, %if.end48.if.else102_crit_edge
  %30 = trunc i16 %21 to i12
  %trunc = and i12 %30, -1024
  %31 = zext i12 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.167)
  switch i12 %trunc, label %if.else102.if.else178_crit_edge [
    i12 -2048, label %land.lhs.true110
    i12 -1024, label %land.lhs.true148
  ]

if.else102.if.else178_crit_edge:                  ; preds = %if.else102
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else178

land.lhs.true110:                                 ; preds = %if.else102
  %32 = ptrtoint ptr %mii_nway_lp_ability_reg to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %mii_nway_lp_ability_reg, align 2
  %34 = and i16 %33, 3072
  call void @__sanitizer_cov_trace_const_cmp2(i16 3072, i16 %34)
  %.not415 = icmp eq i16 %34, 3072
  br i1 %.not415, label %if.then118, label %land.lhs.true110.if.else178_crit_edge

land.lhs.true110.if.else178_crit_edge:            ; preds = %land.lhs.true110
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else178

if.then118:                                       ; preds = %land.lhs.true110
  call void @__sanitizer_cov_trace_pc() #8
  %fc119 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %35 = ptrtoint ptr %fc119 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 2, ptr %fc119, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug562, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then133)) #6
          to label %if.end236 [label %if.then133], !srcloc !394

if.then133:                                       ; preds = %if.then118
  call void @__sanitizer_cov_trace_pc() #8
  %call134 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug562, ptr noundef %call134, ptr noundef nonnull @.str.100) #6
  br label %if.end236

land.lhs.true148:                                 ; preds = %if.else102
  %36 = ptrtoint ptr %mii_nway_lp_ability_reg to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %mii_nway_lp_ability_reg, align 2
  %38 = and i16 %37, 3072
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %38)
  %.not417 = icmp eq i16 %38, 2048
  br i1 %.not417, label %if.then156, label %land.lhs.true148.if.else178_crit_edge

land.lhs.true148.if.else178_crit_edge:            ; preds = %land.lhs.true148
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else178

if.then156:                                       ; preds = %land.lhs.true148
  call void @__sanitizer_cov_trace_pc() #8
  %fc157 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %39 = ptrtoint ptr %fc157 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 1, ptr %fc157, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug563, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then171)) #6
          to label %if.end236 [label %if.then171], !srcloc !394

if.then171:                                       ; preds = %if.then156
  call void @__sanitizer_cov_trace_pc() #8
  %call172 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug563, ptr noundef %call172, ptr noundef nonnull @.str.99) #6
  br label %if.end236

if.else178:                                       ; preds = %land.lhs.true148.if.else178_crit_edge, %land.lhs.true110.if.else178_crit_edge, %if.else102.if.else178_crit_edge
  %original_fc179 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 25
  %40 = ptrtoint ptr %original_fc179 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %original_fc179, align 4
  %42 = zext i32 %41 to i64
  call void @__sanitizer_cov_trace_switch(i64 %42, ptr @__sancov_gen_cov_switch_values.168)
  switch i32 %41, label %lor.lhs.false186 [
    i32 0, label %if.else178.if.then189_crit_edge
    i32 2, label %if.else178.if.then189_crit_edge421
  ]

if.else178.if.then189_crit_edge421:               ; preds = %if.else178
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then189

if.else178.if.then189_crit_edge:                  ; preds = %if.else178
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then189

lor.lhs.false186:                                 ; preds = %if.else178
  %fc_strict_ieee = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 74
  %43 = ptrtoint ptr %fc_strict_ieee to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %fc_strict_ieee, align 4, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool187.not = icmp eq i8 %44, 0
  br i1 %tobool187.not, label %if.else211, label %lor.lhs.false186.if.then189_crit_edge

lor.lhs.false186.if.then189_crit_edge:            ; preds = %lor.lhs.false186
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then189

if.then189:                                       ; preds = %lor.lhs.false186.if.then189_crit_edge, %if.else178.if.then189_crit_edge, %if.else178.if.then189_crit_edge421
  %fc190 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %45 = ptrtoint ptr %fc190 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 0, ptr %fc190, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug564, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then204)) #6
          to label %if.end236 [label %if.then204], !srcloc !394

if.then204:                                       ; preds = %if.then189
  call void @__sanitizer_cov_trace_pc() #8
  %call205 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug564, ptr noundef %call205, ptr noundef nonnull @.str.101) #6
  br label %if.end236

if.else211:                                       ; preds = %lor.lhs.false186
  call void @__sanitizer_cov_trace_pc() #8
  %fc212 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %46 = ptrtoint ptr %fc212 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 1, ptr %fc212, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug565, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then226)) #6
          to label %if.end236 [label %if.then226], !srcloc !394

if.then226:                                       ; preds = %if.else211
  call void @__sanitizer_cov_trace_pc() #8
  %call227 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug565, ptr noundef %call227, ptr noundef nonnull @.str.99) #6
  br label %if.end236

if.end236:                                        ; preds = %if.then226, %if.else211, %if.then204, %if.then189, %if.then171, %if.then156, %if.then133, %if.then118, %if.then94, %if.else, %if.then73, %if.then59
  %call237 = call i32 @e1000_get_speed_and_duplex(ptr noundef %hw, ptr noundef nonnull %speed, ptr noundef nonnull %duplex)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call237)
  %tobool238.not = icmp eq i32 %call237, 0
  br i1 %tobool238.not, label %if.end260, label %do.body241

do.body241:                                       ; preds = %if.end236
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug566, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then253)) #6
          to label %cleanup [label %if.then253], !srcloc !394

if.then253:                                       ; preds = %do.body241
  call void @__sanitizer_cov_trace_pc() #8
  %call254 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug566, ptr noundef %call254, ptr noundef nonnull @.str.28) #6
  br label %cleanup

if.end260:                                        ; preds = %if.end236
  %47 = ptrtoint ptr %duplex to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %duplex, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %48)
  %cmp262 = icmp eq i16 %48, 1
  br i1 %cmp262, label %if.then264, label %if.end260.if.end266_crit_edge

if.end260.if.end266_crit_edge:                    ; preds = %if.end260
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end266

if.then264:                                       ; preds = %if.end260
  call void @__sanitizer_cov_trace_pc() #8
  %fc265 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %49 = ptrtoint ptr %fc265 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %fc265, align 4
  br label %if.end266

if.end266:                                        ; preds = %if.then264, %if.end260.if.end266_crit_edge
  %call267 = tail call i32 @e1000_force_mac_fc(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call267)
  %tobool268.not = icmp eq i32 %call267, 0
  br i1 %tobool268.not, label %if.end266.cleanup_crit_edge, label %do.body271

if.end266.cleanup_crit_edge:                      ; preds = %if.end266
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body271:                                       ; preds = %if.end266
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug567, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then283)) #6
          to label %cleanup [label %if.then283], !srcloc !394

if.then283:                                       ; preds = %do.body271
  call void @__sanitizer_cov_trace_pc() #8
  %call284 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug567, ptr noundef %call284, ptr noundef nonnull @.str.97) #6
  br label %cleanup

do.body293:                                       ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug568, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_config_fc_after_link_up, %if.then305)) #6
          to label %cleanup [label %if.then305], !srcloc !394

if.then305:                                       ; preds = %do.body293
  call void @__sanitizer_cov_trace_pc() #8
  %call306 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug568, ptr noundef %call306, ptr noundef nonnull @.str.102) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then305, %do.body293, %if.then283, %do.body271, %if.end266.cleanup_crit_edge, %if.then253, %do.body241, %if.end44.cleanup_crit_edge, %if.then40.cleanup_crit_edge, %if.end33.cleanup_crit_edge, %if.then29.cleanup_crit_edge, %land.lhs.true26.cleanup_crit_edge, %if.end23.cleanup_crit_edge, %if.then18, %do.body13, %land.lhs.true3.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then18 ], [ %call13.i, %if.then29.cleanup_crit_edge ], [ %call13.i400, %if.end33.cleanup_crit_edge ], [ %call41, %if.then40.cleanup_crit_edge ], [ %call45, %if.end44.cleanup_crit_edge ], [ %call237, %if.then253 ], [ %call267, %if.then283 ], [ 0, %if.end266.cleanup_crit_edge ], [ 0, %if.then305 ], [ 0, %land.lhs.true26.cleanup_crit_edge ], [ 0, %if.end23.cleanup_crit_edge ], [ %call, %do.body13 ], [ %call237, %do.body241 ], [ %call267, %do.body271 ], [ 0, %do.body293 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %land.lhs.true3.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %duplex) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %speed) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_nway_lp_ability_reg) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_nway_adv_reg) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_status_reg) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_get_speed_and_duplex(ptr noundef %hw, ptr nocapture noundef %speed, ptr nocapture noundef writeonly %duplex) local_unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %1 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %cmp = icmp ugt i32 %2, 2
  br i1 %cmp, label %if.then, label %do.body108

if.then:                                          ; preds = %entry
  %3 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %4, i32 8
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %6 = tail call i32 @llvm.bswap.i32(i32 %5)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !531
  %and = and i32 %6, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  %7 = ptrtoint ptr %speed to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 1000, ptr %speed, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug581, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_get_speed_and_duplex, %if.then11)) #6
          to label %if.end60 [label %if.then11], !srcloc !394

if.then11:                                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #8
  %call12 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug581, ptr noundef %call12, ptr noundef nonnull @.str.30) #6
  br label %if.end60

if.else:                                          ; preds = %if.then
  %and15 = and i32 %6, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %if.else38, label %if.then17

if.then17:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %8 = ptrtoint ptr %speed to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 100, ptr %speed, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug582, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_get_speed_and_duplex, %if.then31)) #6
          to label %if.end60 [label %if.then31], !srcloc !394

if.then31:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #8
  %call32 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug582, ptr noundef %call32, ptr noundef nonnull @.str.31) #6
  br label %if.end60

if.else38:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %9 = ptrtoint ptr %speed to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 10, ptr %speed, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug583, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_get_speed_and_duplex, %if.then52)) #6
          to label %if.end60 [label %if.then52], !srcloc !394

if.then52:                                        ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #8
  %call53 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug583, ptr noundef %call53, ptr noundef nonnull @.str.32) #6
  br label %if.end60

if.end60:                                         ; preds = %if.then52, %if.else38, %if.then31, %if.then17, %if.then11, %if.then4
  %and61 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61)
  %tobool62.not = icmp eq i32 %and61, 0
  br i1 %tobool62.not, label %if.else84, label %if.then63

if.then63:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #8
  %10 = ptrtoint ptr %duplex to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 2, ptr %duplex, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug584, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_get_speed_and_duplex, %if.then77)) #6
          to label %if.end127 [label %if.then77], !srcloc !394

if.then77:                                        ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #8
  %call78 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug584, ptr noundef %call78, ptr noundef nonnull @.str.33) #6
  br label %if.end127

if.else84:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #8
  %11 = ptrtoint ptr %duplex to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 1, ptr %duplex, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug585, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_get_speed_and_duplex, %if.then98)) #6
          to label %if.end127 [label %if.then98], !srcloc !394

if.then98:                                        ; preds = %if.else84
  call void @__sanitizer_cov_trace_pc() #8
  %call99 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug585, ptr noundef %call99, ptr noundef nonnull @.str.34) #6
  br label %if.end127

do.body108:                                       ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug586, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_get_speed_and_duplex, %if.then120)) #6
          to label %do.end126 [label %if.then120], !srcloc !394

if.then120:                                       ; preds = %do.body108
  call void @__sanitizer_cov_trace_pc() #8
  %call121 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug586, ptr noundef %call121, ptr noundef nonnull @.str.35) #6
  br label %do.end126

do.end126:                                        ; preds = %if.then120, %do.body108
  %12 = ptrtoint ptr %speed to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 1000, ptr %speed, align 2
  %13 = ptrtoint ptr %duplex to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 2, ptr %duplex, align 2
  br label %if.end127

if.end127:                                        ; preds = %do.end126, %if.then98, %if.else84, %if.then77, %if.then63
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %14 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %15)
  %cmp128 = icmp eq i32 %15, 1
  br i1 %cmp128, label %land.lhs.true, label %if.end127.cleanup_crit_edge

if.end127.cleanup_crit_edge:                      ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end127
  %speed_downgraded = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 63
  %16 = ptrtoint ptr %speed_downgraded to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %speed_downgraded, align 1, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool129.not = icmp eq i8 %17, 0
  br i1 %tobool129.not, label %land.lhs.true.cleanup_crit_edge, label %if.then130

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then130:                                       ; preds = %land.lhs.true
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 6, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool132.not = icmp eq i32 %call13.i, 0
  br i1 %tobool132.not, label %if.end134, label %if.then130.cleanup_crit_edge

if.then130.cleanup_crit_edge:                     ; preds = %if.then130
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end134:                                        ; preds = %if.then130
  %18 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %phy_data, align 2
  %20 = and i16 %19, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %20)
  %tobool136.not = icmp eq i16 %20, 0
  br i1 %tobool136.not, label %if.end134.cleanup.sink.split_crit_edge, label %if.else138

if.end134.cleanup.sink.split_crit_edge:           ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup.sink.split

if.else138:                                       ; preds = %if.end134
  %call2.i204 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i207 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 5, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i204) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i207)
  %tobool140.not = icmp eq i32 %call13.i207, 0
  br i1 %tobool140.not, label %if.end142, label %if.else138.cleanup_crit_edge

if.else138.cleanup_crit_edge:                     ; preds = %if.else138
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end142:                                        ; preds = %if.else138
  %21 = ptrtoint ptr %speed to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %speed, align 2
  %23 = zext i16 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.169)
  switch i16 %22, label %if.end142.cleanup_crit_edge [
    i16 100, label %land.lhs.true146
    i16 10, label %land.lhs.true153
  ]

if.end142.cleanup_crit_edge:                      ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

land.lhs.true146:                                 ; preds = %if.end142
  %24 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %phy_data, align 2
  %26 = and i16 %25, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %26)
  %tobool149.not = icmp eq i16 %26, 0
  br i1 %tobool149.not, label %land.lhs.true146.cleanup.sink.split_crit_edge, label %land.lhs.true146.cleanup_crit_edge

land.lhs.true146.cleanup_crit_edge:               ; preds = %land.lhs.true146
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

land.lhs.true146.cleanup.sink.split_crit_edge:    ; preds = %land.lhs.true146
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup.sink.split

land.lhs.true153:                                 ; preds = %if.end142
  %27 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %phy_data, align 2
  %29 = and i16 %28, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool156.not = icmp eq i16 %29, 0
  br i1 %tobool156.not, label %land.lhs.true153.cleanup.sink.split_crit_edge, label %land.lhs.true153.cleanup_crit_edge

land.lhs.true153.cleanup_crit_edge:               ; preds = %land.lhs.true153
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

land.lhs.true153.cleanup.sink.split_crit_edge:    ; preds = %land.lhs.true153
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %land.lhs.true153.cleanup.sink.split_crit_edge, %land.lhs.true146.cleanup.sink.split_crit_edge, %if.end134.cleanup.sink.split_crit_edge
  %30 = ptrtoint ptr %duplex to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 1, ptr %duplex, align 2
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %land.lhs.true153.cleanup_crit_edge, %land.lhs.true146.cleanup_crit_edge, %if.end142.cleanup_crit_edge, %if.else138.cleanup_crit_edge, %if.then130.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end127.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13.i, %if.then130.cleanup_crit_edge ], [ %call13.i207, %if.else138.cleanup_crit_edge ], [ 0, %land.lhs.true153.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.end127.cleanup_crit_edge ], [ 0, %land.lhs.true146.cleanup_crit_edge ], [ 0, %if.end142.cleanup_crit_edge ], [ 0, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_check_for_serdes_link_generic(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !532
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  %add.ptr8 = getelementptr i8, ptr %5, i32 8
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr8) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !533
  %7 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw, align 4
  %add.ptr18 = getelementptr i8, ptr %8, i32 384
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr18) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !534
  %10 = and i32 %6, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  %11 = and i32 %9, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool23.not = icmp eq i32 %11, 0
  %or.cond = select i1 %tobool.not, i1 %tobool23.not, i1 false
  br i1 %or.cond, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %autoneg_failed = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 27
  %12 = ptrtoint ptr %autoneg_failed to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %autoneg_failed, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp24 = icmp eq i32 %13, 0
  br i1 %cmp24, label %if.then25, label %do.body27

if.then25:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  %14 = ptrtoint ptr %autoneg_failed to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %autoneg_failed, align 4
  br label %out

do.body27:                                        ; preds = %if.then
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug569, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then33)) #6
          to label %do.body38 [label %if.then33], !srcloc !394

if.then33:                                        ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #8
  %call34 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug569, ptr noundef %call34, ptr noundef nonnull @.str.104) #6
  br label %do.body38

do.body38:                                        ; preds = %if.then33, %do.body27
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !535
  tail call void @arm_heavy_mb() #6
  %txcw = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 26
  %15 = ptrtoint ptr %txcw to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %txcw, align 4
  %and41 = and i32 %16, 2147483647
  %17 = tail call i32 @llvm.bswap.i32(i32 %and41)
  %18 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hw, align 4
  %add.ptr46 = getelementptr i8, ptr %19, i32 376
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr46, i32 %17) #6, !srcloc !396
  %20 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hw, align 4
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %21) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !536
  %23 = or i32 %22, 1090519040
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !537
  tail call void @arm_heavy_mb() #6
  %24 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %25, i32 %23) #6, !srcloc !396
  %call65 = tail call fastcc i32 @e1000_config_fc_after_link_up(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %do.body38.if.end210_crit_edge, label %do.body69

do.body38.if.end210_crit_edge:                    ; preds = %do.body38
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end210

do.body69:                                        ; preds = %do.body38
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug570, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then81)) #6
          to label %out [label %if.then81], !srcloc !394

if.then81:                                        ; preds = %do.body69
  call void @__sanitizer_cov_trace_pc() #8
  %call82 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug570, ptr noundef %call82, ptr noundef nonnull @.str.27) #6
  br label %out

if.else:                                          ; preds = %entry
  %and89 = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and89)
  %tobool90.not = icmp eq i32 %and89, 0
  %or.cond2 = select i1 %tobool90.not, i1 true, i1 %tobool23.not
  br i1 %or.cond2, label %if.else133, label %do.body96

do.body96:                                        ; preds = %if.else
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug571, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then108)) #6
          to label %do.body115 [label %if.then108], !srcloc !394

if.then108:                                       ; preds = %do.body96
  call void @__sanitizer_cov_trace_pc() #8
  %call109 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug571, ptr noundef %call109, ptr noundef nonnull @.str.105) #6
  br label %do.body115

do.body115:                                       ; preds = %if.then108, %do.body96
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !538
  tail call void @arm_heavy_mb() #6
  %txcw118 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 26
  %26 = ptrtoint ptr %txcw118 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %txcw118, align 4
  %28 = tail call i32 @llvm.bswap.i32(i32 %27)
  %29 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hw, align 4
  %add.ptr123 = getelementptr i8, ptr %30, i32 376
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr123, i32 %28) #6, !srcloc !396
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !539
  tail call void @arm_heavy_mb() #6
  %and127 = and i32 %3, -65
  %31 = tail call i32 @llvm.bswap.i32(i32 %and127)
  %32 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %33, i32 %31) #6, !srcloc !396
  %serdes_has_link = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 67
  %34 = ptrtoint ptr %serdes_has_link to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 1, ptr %serdes_has_link, align 1
  br label %if.end210

if.else133:                                       ; preds = %if.else
  %35 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hw, align 4
  %add.ptr140 = getelementptr i8, ptr %36, i32 376
  %37 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr140) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !540
  %.mask1 = and i32 %37, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask1)
  %tobool145.not = icmp eq i32 %.mask1, 0
  br i1 %tobool145.not, label %if.then146, label %if.else133.if.end210_crit_edge

if.else133.if.end210_crit_edge:                   ; preds = %if.else133
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end210

if.then146:                                       ; preds = %if.else133
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %38 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %38(i32 noundef 2147480) #6
  %39 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw, align 4
  %add.ptr153 = getelementptr i8, ptr %40, i32 384
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr153) #6, !srcloc !392
  %42 = tail call i32 @llvm.bswap.i32(i32 %41)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !541
  %and157 = and i32 %42, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and157)
  %tobool158.not = icmp eq i32 %and157, 0
  br i1 %tobool158.not, label %if.else185, label %if.then159

if.then159:                                       ; preds = %if.then146
  %and160 = and i32 %42, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and160)
  %tobool161.not = icmp eq i32 %and160, 0
  br i1 %tobool161.not, label %if.then162, label %if.then159.if.end210_crit_edge

if.then159.if.end210_crit_edge:                   ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end210

if.then162:                                       ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #8
  %serdes_has_link163 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 67
  %43 = ptrtoint ptr %serdes_has_link163 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 1, ptr %serdes_has_link163, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug572, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then177)) #6
          to label %if.end210 [label %if.then177], !srcloc !394

if.then177:                                       ; preds = %if.then162
  call void @__sanitizer_cov_trace_pc() #8
  %call178 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug572, ptr noundef %call178, ptr noundef nonnull @.str.106) #6
  br label %if.end210

if.else185:                                       ; preds = %if.then146
  call void @__sanitizer_cov_trace_pc() #8
  %serdes_has_link186 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 67
  %44 = ptrtoint ptr %serdes_has_link186 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 0, ptr %serdes_has_link186, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug573, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then200)) #6
          to label %if.end210 [label %if.then200], !srcloc !394

if.then200:                                       ; preds = %if.else185
  call void @__sanitizer_cov_trace_pc() #8
  %call201 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug573, ptr noundef %call201, ptr noundef nonnull @.str.107) #6
  br label %if.end210

if.end210:                                        ; preds = %if.then200, %if.else185, %if.then177, %if.then162, %if.then159.if.end210_crit_edge, %if.else133.if.end210_crit_edge, %do.body115, %do.body38.if.end210_crit_edge
  %45 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hw, align 4
  %add.ptr217 = getelementptr i8, ptr %46, i32 376
  %47 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr217) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !542
  %.mask = and i32 %47, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask)
  %tobool222.not = icmp eq i32 %.mask, 0
  br i1 %tobool222.not, label %if.end210.out_crit_edge, label %if.then223

if.end210.out_crit_edge:                          ; preds = %if.end210
  call void @__sanitizer_cov_trace_pc() #8
  br label %out

if.then223:                                       ; preds = %if.end210
  %48 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %hw, align 4
  %add.ptr230 = getelementptr i8, ptr %49, i32 8
  %50 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr230) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !543
  %51 = and i32 %50, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool235.not = icmp eq i32 %51, 0
  br i1 %tobool235.not, label %if.else320, label %if.then236

if.then236:                                       ; preds = %if.then223
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %52 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %52(i32 noundef 2147480) #6
  %53 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %hw, align 4
  %add.ptr243 = getelementptr i8, ptr %54, i32 384
  %55 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr243) #6, !srcloc !392
  %56 = tail call i32 @llvm.bswap.i32(i32 %55)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !544
  %and247 = and i32 %56, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and247)
  %tobool248.not = icmp eq i32 %and247, 0
  br i1 %tobool248.not, label %if.else297, label %if.then249

if.then249:                                       ; preds = %if.then236
  %and250 = and i32 %56, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and250)
  %tobool251.not = icmp eq i32 %and250, 0
  %serdes_has_link253 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 67
  br i1 %tobool251.not, label %if.then252, label %if.else274

if.then252:                                       ; preds = %if.then249
  call void @__sanitizer_cov_trace_pc() #8
  %57 = ptrtoint ptr %serdes_has_link253 to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 1, ptr %serdes_has_link253, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug574, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then267)) #6
          to label %out [label %if.then267], !srcloc !394

if.then267:                                       ; preds = %if.then252
  call void @__sanitizer_cov_trace_pc() #8
  %call268 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug574, ptr noundef %call268, ptr noundef nonnull @.str.108) #6
  br label %out

if.else274:                                       ; preds = %if.then249
  call void @__sanitizer_cov_trace_pc() #8
  %58 = ptrtoint ptr %serdes_has_link253 to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 0, ptr %serdes_has_link253, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug575, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then289)) #6
          to label %out [label %if.then289], !srcloc !394

if.then289:                                       ; preds = %if.else274
  call void @__sanitizer_cov_trace_pc() #8
  %call290 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug575, ptr noundef %call290, ptr noundef nonnull @.str.109) #6
  br label %out

if.else297:                                       ; preds = %if.then236
  call void @__sanitizer_cov_trace_pc() #8
  %serdes_has_link298 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 67
  %59 = ptrtoint ptr %serdes_has_link298 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 0, ptr %serdes_has_link298, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug576, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then312)) #6
          to label %out [label %if.then312], !srcloc !394

if.then312:                                       ; preds = %if.else297
  call void @__sanitizer_cov_trace_pc() #8
  %call313 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug576, ptr noundef %call313, ptr noundef nonnull @.str.110) #6
  br label %out

if.else320:                                       ; preds = %if.then223
  call void @__sanitizer_cov_trace_pc() #8
  %serdes_has_link321 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 67
  %60 = ptrtoint ptr %serdes_has_link321 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 0, ptr %serdes_has_link321, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug577, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_check_for_serdes_link_generic, %if.then335)) #6
          to label %out [label %if.then335], !srcloc !394

if.then335:                                       ; preds = %if.else320
  call void @__sanitizer_cov_trace_pc() #8
  %call336 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug577, ptr noundef %call336, ptr noundef nonnull @.str.111) #6
  br label %out

out:                                              ; preds = %if.then335, %if.else320, %if.then312, %if.else297, %if.then289, %if.else274, %if.then267, %if.then252, %if.end210.out_crit_edge, %if.then81, %do.body69, %if.then25
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef %reg_addr, i16 noundef zeroext %phy_data) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %1)
  %cmp = icmp eq i32 %1, 9
  br i1 %cmp, label %if.then16, label %if.end10

if.end10:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp12 = icmp ugt i32 %1, 3
  br i1 %cmp12, label %if.else, label %if.else119

if.then16:                                        ; preds = %entry
  %phy_addr1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 24
  %2 = ptrtoint ptr %phy_addr1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %phy_addr1, align 4
  %conv = zext i16 %phy_data to i32
  %shl = shl i32 %reg_addr, 16
  %or = or i32 %shl, %conv
  %shl17 = shl i32 %3, 21
  %or18 = or i32 %or, %shl17
  %or20 = or i32 %or18, -2080374784
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !545
  tail call void @arm_heavy_mb() #6
  %4 = tail call i32 @llvm.bswap.i32(i32 %or20)
  %ce4100_gbe_mdio_base_virt = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 2
  %5 = ptrtoint ptr %ce4100_gbe_mdio_base_virt to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ce4100_gbe_mdio_base_virt, align 4
  %add.ptr = getelementptr i8, ptr %6, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %4) #6, !srcloc !396
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.0178, 1
  %exitcond179.not = icmp eq i32 %inc, 640
  br i1 %exitcond179.not, label %do.body38, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.then16
  %i.0178 = phi i32 [ 0, %if.then16 ], [ %inc, %for.cond.for.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %7 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %7(i32 noundef 1073740) #6
  %8 = ptrtoint ptr %ce4100_gbe_mdio_base_virt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ce4100_gbe_mdio_base_virt, align 4
  %add.ptr27 = getelementptr i8, ptr %9, i32 4
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr27) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !546
  %.mask = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask)
  %tobool31.not = icmp eq i32 %.mask, 0
  br i1 %tobool31.not, label %for.body.cleanup_crit_edge, label %for.cond

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body38:                                        ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_write_phy_reg_ex.__UNIQUE_ID_ddebug594, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_write_phy_reg_ex, %if.then50)) #6
          to label %cleanup [label %if.then50], !srcloc !394

if.then50:                                        ; preds = %do.body38
  call void @__sanitizer_cov_trace_pc() #8
  %call51 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_write_phy_reg_ex.__UNIQUE_ID_ddebug594, ptr noundef %call51, ptr noundef nonnull @.str.119) #6
  br label %cleanup

if.else:                                          ; preds = %if.end10
  %conv58 = zext i16 %phy_data to i32
  %shl59 = shl i32 %reg_addr, 16
  %or60 = or i32 %shl59, %conv58
  %or63 = or i32 %or60, 69206016
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !547
  tail call void @arm_heavy_mb() #6
  %11 = tail call i32 @llvm.bswap.i32(i32 %or63)
  %12 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw, align 4
  %add.ptr71 = getelementptr i8, ptr %13, i32 32
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr71, i32 %11) #6, !srcloc !396
  br label %for.body75

for.cond72:                                       ; preds = %for.body75
  %inc92 = add nuw nsw i32 %i.1177, 1
  %exitcond.not = icmp eq i32 %inc92, 641
  br i1 %exitcond.not, label %do.body98, label %for.cond72.for.body75_crit_edge

for.cond72.for.body75_crit_edge:                  ; preds = %for.cond72
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body75

for.body75:                                       ; preds = %for.cond72.for.body75_crit_edge, %if.else
  %i.1177 = phi i32 [ 0, %if.else ], [ %inc92, %for.cond72.for.body75_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %14 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %14(i32 noundef 1073740) #6
  %15 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw, align 4
  %add.ptr83 = getelementptr i8, ptr %16, i32 32
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr83) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !548
  %18 = and i32 %17, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool88.not = icmp eq i32 %18, 0
  br i1 %tobool88.not, label %for.cond72, label %for.body75.cleanup_crit_edge

for.body75.cleanup_crit_edge:                     ; preds = %for.body75
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body98:                                        ; preds = %for.cond72
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_write_phy_reg_ex.__UNIQUE_ID_ddebug595, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_write_phy_reg_ex, %if.then110)) #6
          to label %cleanup [label %if.then110], !srcloc !394

if.then110:                                       ; preds = %do.body98
  call void @__sanitizer_cov_trace_pc() #8
  %call111 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_write_phy_reg_ex.__UNIQUE_ID_ddebug595, ptr noundef %call111, ptr noundef nonnull @.str.119) #6
  br label %cleanup

if.else119:                                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #8
  tail call fastcc void @e1000_shift_out_mdi_bits(ptr noundef %hw, i32 noundef -1, i16 noundef zeroext 32)
  %shl120 = shl i32 %reg_addr, 18
  %conv127 = zext i16 %phy_data to i32
  %or121 = or i32 %shl120, %conv127
  %or128 = or i32 %or121, 1350696960
  tail call fastcc void @e1000_shift_out_mdi_bits(ptr noundef %hw, i32 noundef %or128, i16 noundef zeroext 32)
  br label %cleanup

cleanup:                                          ; preds = %if.else119, %if.then110, %do.body98, %for.body75.cleanup_crit_edge, %if.then50, %do.body38, %for.body.cleanup_crit_edge
  %retval.0 = phi i32 [ -2, %if.then50 ], [ -2, %if.then110 ], [ 0, %if.else119 ], [ -2, %do.body38 ], [ -2, %do.body98 ], [ 0, %for.body.cleanup_crit_edge ], [ 0, %for.body75.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef %reg_addr, ptr nocapture noundef writeonly %phy_data) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %1)
  %cmp = icmp eq i32 %1, 9
  br i1 %cmp, label %if.then16, label %if.end10

if.end10:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp12 = icmp ugt i32 %1, 3
  br i1 %cmp12, label %if.else, label %if.else171

if.then16:                                        ; preds = %entry
  %phy_addr1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 24
  %2 = ptrtoint ptr %phy_addr1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %phy_addr1, align 4
  %shl = shl i32 %reg_addr, 16
  %shl17 = shl i32 %3, 21
  %or = or i32 %shl, %shl17
  %or19 = or i32 %or, -2147483648
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !549
  tail call void @arm_heavy_mb() #6
  %4 = tail call i32 @llvm.bswap.i32(i32 %or19)
  %ce4100_gbe_mdio_base_virt = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 2
  %5 = ptrtoint ptr %ce4100_gbe_mdio_base_virt to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ce4100_gbe_mdio_base_virt, align 4
  %add.ptr = getelementptr i8, ptr %6, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %4) #6, !srcloc !396
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.0242, 1
  %exitcond246.not = icmp eq i32 %inc, 64
  br i1 %exitcond246.not, label %do.body36, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.then16
  %i.0242 = phi i32 [ 0, %if.then16 ], [ %inc, %for.cond.for.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %7 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %7(i32 noundef 10737400) #6
  %8 = ptrtoint ptr %ce4100_gbe_mdio_base_virt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ce4100_gbe_mdio_base_virt, align 4
  %add.ptr25 = getelementptr i8, ptr %9, i32 4
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr25) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !550
  %.mask = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask)
  %tobool29.not = icmp eq i32 %.mask, 0
  br i1 %tobool29.not, label %if.end55, label %for.cond

do.body36:                                        ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug589, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_read_phy_reg_ex, %if.then48)) #6
          to label %cleanup [label %if.then48], !srcloc !394

if.then48:                                        ; preds = %do.body36
  call void @__sanitizer_cov_trace_pc() #8
  %call49 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug589, ptr noundef %call49, ptr noundef nonnull @.str.115) #6
  br label %cleanup

if.end55:                                         ; preds = %for.body
  %11 = ptrtoint ptr %ce4100_gbe_mdio_base_virt to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ce4100_gbe_mdio_base_virt, align 4
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %12) #6, !srcloc !392
  %14 = tail call i32 @llvm.bswap.i32(i32 %13)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !551
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %14)
  %tobool64.not = icmp sgt i32 %14, -1
  br i1 %tobool64.not, label %if.end86, label %do.body67

do.body67:                                        ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug590, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_read_phy_reg_ex, %if.then79)) #6
          to label %cleanup [label %if.then79], !srcloc !394

if.then79:                                        ; preds = %do.body67
  call void @__sanitizer_cov_trace_pc() #8
  %call80 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug590, ptr noundef %call80, ptr noundef nonnull @.str.116) #6
  br label %cleanup

if.end86:                                         ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #8
  %conv = trunc i32 %14 to i16
  %15 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %conv, ptr %phy_data, align 2
  br label %cleanup

if.else:                                          ; preds = %if.end10
  %shl87 = shl i32 %reg_addr, 16
  %or90 = or i32 %shl87, 136314880
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !552
  tail call void @arm_heavy_mb() #6
  %16 = tail call i32 @llvm.bswap.i32(i32 %or90)
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr98 = getelementptr i8, ptr %18, i32 32
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr98, i32 %16) #6, !srcloc !396
  br label %for.body102

for.cond99:                                       ; preds = %for.body102
  %inc119 = add nuw nsw i32 %i.1241, 1
  %exitcond.not = icmp eq i32 %inc119, 64
  br i1 %exitcond.not, label %do.body125, label %for.cond99.for.body102_crit_edge

for.cond99.for.body102_crit_edge:                 ; preds = %for.cond99
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body102

for.body102:                                      ; preds = %for.cond99.for.body102_crit_edge, %if.else
  %i.1241 = phi i32 [ 0, %if.else ], [ %inc119, %for.cond99.for.body102_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %19 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %19(i32 noundef 10737400) #6
  %20 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hw, align 4
  %add.ptr110 = getelementptr i8, ptr %21, i32 32
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr110) #6, !srcloc !392
  %23 = tail call i32 @llvm.bswap.i32(i32 %22)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !553
  %and114 = and i32 %23, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and114)
  %tobool115.not = icmp eq i32 %and114, 0
  br i1 %tobool115.not, label %for.cond99, label %if.end144

do.body125:                                       ; preds = %for.cond99
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug591, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_read_phy_reg_ex, %if.then137)) #6
          to label %cleanup [label %if.then137], !srcloc !394

if.then137:                                       ; preds = %do.body125
  call void @__sanitizer_cov_trace_pc() #8
  %call138 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug591, ptr noundef %call138, ptr noundef nonnull @.str.115) #6
  br label %cleanup

if.end144:                                        ; preds = %for.body102
  %and145 = and i32 %23, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and145)
  %tobool146.not = icmp eq i32 %and145, 0
  br i1 %tobool146.not, label %if.end168, label %do.body149

do.body149:                                       ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug592, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_read_phy_reg_ex, %if.then161)) #6
          to label %cleanup [label %if.then161], !srcloc !394

if.then161:                                       ; preds = %do.body149
  call void @__sanitizer_cov_trace_pc() #8
  %call162 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug592, ptr noundef %call162, ptr noundef nonnull @.str.117) #6
  br label %cleanup

if.end168:                                        ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #8
  %conv169 = trunc i32 %23 to i16
  %24 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv169, ptr %phy_data, align 2
  br label %cleanup

if.else171:                                       ; preds = %if.end10
  tail call fastcc void @e1000_shift_out_mdi_bits(ptr noundef %hw, i32 noundef -1, i16 noundef zeroext 32)
  %or175 = or i32 %reg_addr, 6176
  tail call fastcc void @e1000_shift_out_mdi_bits(ptr noundef %hw, i32 noundef %or175, i16 noundef zeroext 14)
  %25 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw, align 4
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %26) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !554
  %28 = and i32 %27, -4098
  %29 = tail call i32 @llvm.bswap.i32(i32 %28) #6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !555
  tail call void @arm_heavy_mb() #6
  %30 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %31, i32 %28) #6, !srcloc !396
  %32 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw, align 4
  %add.ptr14.i = getelementptr i8, ptr %33, i32 8
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr14.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !556
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !557
  tail call void @arm_heavy_mb() #6
  %or.i.i = or i32 %29, 2097152
  %35 = tail call i32 @llvm.bswap.i32(i32 %or.i.i) #6
  %36 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %37, i32 %35) #6, !srcloc !396
  %38 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hw, align 4
  %add.ptr5.i.i = getelementptr i8, ptr %39, i32 8
  %40 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !558
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %41 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %41(i32 noundef 2147480) #6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !559
  tail call void @arm_heavy_mb() #6
  %and.i.i = and i32 %29, -19922945
  %42 = tail call i32 @llvm.bswap.i32(i32 %and.i.i) #6
  %43 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %44, i32 %42) #6, !srcloc !396
  %45 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hw, align 4
  %add.ptr5.i52.i = getelementptr i8, ptr %46, i32 8
  %47 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i52.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !560
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %48 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %48(i32 noundef 2147480) #6
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.else171
  %data.069.i = phi i16 [ 0, %if.else171 ], [ %62, %for.body.i.for.body.i_crit_edge ]
  %i.068.i = phi i8 [ 0, %if.else171 ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %ctrl.067.i = phi i32 [ %29, %if.else171 ], [ %59, %for.body.i.for.body.i_crit_edge ]
  %shl.i = shl i16 %data.069.i, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !557
  tail call void @arm_heavy_mb() #6
  %or.i53.i = or i32 %ctrl.067.i, 2097152
  %49 = tail call i32 @llvm.bswap.i32(i32 %or.i53.i) #6
  %50 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %51, i32 %49) #6, !srcloc !396
  %52 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %hw, align 4
  %add.ptr5.i54.i = getelementptr i8, ptr %53, i32 8
  %54 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i54.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !558
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %55 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %55(i32 noundef 2147480) #6
  %56 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hw, align 4
  %58 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %57) #6, !srcloc !392
  %59 = tail call i32 @llvm.bswap.i32(i32 %58) #6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !561
  %and33.i = lshr i32 %59, 20
  %60 = trunc i32 %and33.i to i16
  %61 = and i16 %60, 1
  %62 = or i16 %61, %shl.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !559
  tail call void @arm_heavy_mb() #6
  %and.i55.i = and i32 %59, -2097153
  %63 = tail call i32 @llvm.bswap.i32(i32 %and.i55.i) #6
  %64 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %65, i32 %63) #6, !srcloc !396
  %66 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %hw, align 4
  %add.ptr5.i56.i = getelementptr i8, ptr %67, i32 8
  %68 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i56.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !560
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %69 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %69(i32 noundef 2147480) #6
  %inc.i = add nuw nsw i8 %i.068.i, 1
  %cmp18.i = icmp ult i8 %i.068.i, 15
  br i1 %cmp18.i, label %for.body.i.for.body.i_crit_edge, label %e1000_shift_in_mdi_bits.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body.i

e1000_shift_in_mdi_bits.exit:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !557
  tail call void @arm_heavy_mb() #6
  %or.i57.i = or i32 %59, 2097152
  %70 = tail call i32 @llvm.bswap.i32(i32 %or.i57.i) #6
  %71 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %72, i32 %70) #6, !srcloc !396
  %73 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %hw, align 4
  %add.ptr5.i58.i = getelementptr i8, ptr %74, i32 8
  %75 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i58.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !558
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %76 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %76(i32 noundef 2147480) #6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !559
  tail call void @arm_heavy_mb() #6
  %77 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %78, i32 %63) #6, !srcloc !396
  %79 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %hw, align 4
  %add.ptr5.i60.i = getelementptr i8, ptr %80, i32 8
  %81 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i60.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !560
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %82 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %82(i32 noundef 2147480) #6
  %83 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %83)
  store i16 %62, ptr %phy_data, align 2
  br label %cleanup

cleanup:                                          ; preds = %e1000_shift_in_mdi_bits.exit, %if.end168, %if.then161, %do.body149, %if.then137, %do.body125, %if.end86, %if.then79, %do.body67, %if.then48, %do.body36
  %retval.0 = phi i32 [ -2, %if.then48 ], [ -2, %if.then79 ], [ -2, %if.then137 ], [ -2, %if.then161 ], [ 0, %if.end86 ], [ 0, %if.end168 ], [ 0, %e1000_shift_in_mdi_bits.exit ], [ -2, %do.body36 ], [ -2, %do.body67 ], [ -2, %do.body125 ], [ -2, %do.body149 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_phy_hw_reset(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_hw_reset.__UNIQUE_ID_ddebug596, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_hw_reset, %if.then)) #6
          to label %do.end6 [label %if.then], !srcloc !394

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %call4 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_hw_reset.__UNIQUE_ID_ddebug596, ptr noundef %call4, ptr noundef nonnull @.str.37) #6
  br label %do.end6

do.end6:                                          ; preds = %if.then, %entry
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp = icmp ugt i32 %1, 3
  %2 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw, align 4
  br i1 %cmp, label %if.then7, label %if.else

if.then7:                                         ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #8
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %3) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !562
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !563
  tail call void @arm_heavy_mb() #6
  %5 = or i32 %4, 128
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %7, i32 %5) #6, !srcloc !396
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr27 = getelementptr i8, ptr %9, i32 8
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr27) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !564
  tail call void @msleep(i32 noundef 10) #6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !565
  tail call void @arm_heavy_mb() #6
  %11 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %12, i32 %4) #6, !srcloc !396
  %13 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hw, align 4
  %add.ptr45 = getelementptr i8, ptr %14, i32 8
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr45) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !566
  br label %if.end97

if.else:                                          ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #8
  %add.ptr55 = getelementptr i8, ptr %3, i32 24
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr55) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !567
  %17 = and i32 %16, -268500993
  %18 = or i32 %17, 65536
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !568
  tail call void @arm_heavy_mb() #6
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr67 = getelementptr i8, ptr %20, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr67, i32 %18) #6, !srcloc !396
  %21 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw, align 4
  %add.ptr74 = getelementptr i8, ptr %22, i32 8
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr74) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !569
  tail call void @msleep(i32 noundef 10) #6
  %24 = or i32 %16, 268500992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !570
  tail call void @arm_heavy_mb() #6
  %25 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw, align 4
  %add.ptr86 = getelementptr i8, ptr %26, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr86, i32 %24) #6, !srcloc !396
  %27 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw, align 4
  %add.ptr93 = getelementptr i8, ptr %28, i32 8
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr93) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !571
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then7
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %30 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %30(i32 noundef 32212200) #6
  %31 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mac_type, align 4
  %33 = zext i32 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.170)
  switch i32 %32, label %if.end97.if.end123_crit_edge [
    i32 11, label %if.end97.if.then102_crit_edge
    i32 13, label %if.end97.if.then102_crit_edge162
  ]

if.end97.if.then102_crit_edge162:                 ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then102

if.end97.if.then102_crit_edge:                    ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then102

if.end97.if.end123_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end123

if.then102:                                       ; preds = %if.end97.if.then102_crit_edge, %if.end97.if.then102_crit_edge162
  %34 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hw, align 4
  %add.ptr109 = getelementptr i8, ptr %35, i32 3584
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr109) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !572
  %37 = and i32 %36, -983048
  %38 = or i32 %37, 196615
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !573
  tail call void @arm_heavy_mb() #6
  %39 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw, align 4
  %add.ptr122 = getelementptr i8, ptr %40, i32 3584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr122, i32 %38) #6, !srcloc !396
  br label %if.end123

if.end123:                                        ; preds = %if.then102, %if.end97.if.end123_crit_edge
  tail call void @msleep(i32 noundef 10) #6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_phy_reset(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %1 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %cond = icmp eq i32 %2, 1
  br i1 %cond, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %call = tail call i32 @e1000_phy_hw_reset(ptr noundef %hw)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 0, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool2.not = icmp eq i32 %call13.i, 0
  br i1 %tobool2.not, label %if.end4, label %sw.default.cleanup_crit_edge

sw.default.cleanup_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end4:                                          ; preds = %sw.default
  %3 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %phy_data, align 2
  %5 = or i16 %4, -32768
  %call2.i25 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i28 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext %5) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i25) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i28)
  %tobool7.not = icmp eq i32 %call13.i28, 0
  br i1 %tobool7.not, label %if.end9, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %6 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %6(i32 noundef 214748) #6
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end9, %sw.bb
  %7 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then12, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then12:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  tail call fastcc void @e1000_phy_init_script(ptr noundef %hw)
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %sw.epilog.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %sw.default.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13.i, %sw.default.cleanup_crit_edge ], [ %call13.i28, %if.end4.cleanup_crit_edge ], [ 0, %if.then12 ], [ 0, %sw.epilog.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_phy_get_info(ptr noundef %hw, ptr nocapture noundef writeonly %phy_info) local_unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %1 = ptrtoint ptr %phy_info to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 255, ptr %phy_info, align 4
  %extended_10bt_distance = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 1
  %2 = ptrtoint ptr %extended_10bt_distance to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 255, ptr %extended_10bt_distance, align 4
  %cable_polarity = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 2
  %3 = ptrtoint ptr %cable_polarity to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 255, ptr %cable_polarity, align 4
  %downshift = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 3
  %4 = ptrtoint ptr %downshift to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 255, ptr %downshift, align 4
  %polarity_correction = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 4
  %5 = ptrtoint ptr %polarity_correction to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 255, ptr %polarity_correction, align 4
  %mdix_mode = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 5
  %6 = ptrtoint ptr %mdix_mode to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 255, ptr %mdix_mode, align 4
  %local_rx = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 6
  %7 = ptrtoint ptr %local_rx to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 255, ptr %local_rx, align 4
  %remote_rx = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 7
  %8 = ptrtoint ptr %remote_rx to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 255, ptr %remote_rx, align 4
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %9 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.not = icmp eq i32 %10, 0
  br i1 %cmp.not, label %if.end8, label %do.body1

do.body1:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_get_info.__UNIQUE_ID_ddebug600, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_get_info, %if.then4)) #6
          to label %cleanup [label %if.then4], !srcloc !394

if.then4:                                         ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #8
  %call5 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_get_info.__UNIQUE_ID_ddebug600, ptr noundef %call5, ptr noundef nonnull @.str.39) #6
  br label %cleanup

if.end8:                                          ; preds = %entry
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool10.not = icmp eq i32 %call13.i, 0
  br i1 %tobool10.not, label %if.end12, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end12:                                         ; preds = %if.end8
  %call2.i79 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i82 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i79) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i82)
  %tobool14.not = icmp eq i32 %call13.i82, 0
  br i1 %tobool14.not, label %if.end16, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end16:                                         ; preds = %if.end12
  %11 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %phy_data, align 2
  %13 = and i16 %12, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %cmp17.not.not = icmp eq i16 %13, 0
  br i1 %cmp17.not.not, label %do.body21, label %if.end40

do.body21:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_get_info.__UNIQUE_ID_ddebug601, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_get_info, %if.then33)) #6
          to label %cleanup [label %if.then33], !srcloc !394

if.then33:                                        ; preds = %do.body21
  call void @__sanitizer_cov_trace_pc() #8
  %call34 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_get_info.__UNIQUE_ID_ddebug601, ptr noundef %call34, ptr noundef nonnull @.str.40) #6
  br label %cleanup

if.end40:                                         ; preds = %if.end16
  %14 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %phy_type.i, align 4
  %16 = zext i32 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.171)
  switch i32 %15, label %if.else52 [
    i32 1, label %if.then43
    i32 2, label %if.end40.cleanup_crit_edge
    i32 3, label %if.end40.cleanup_crit_edge85
  ]

if.end40.cleanup_crit_edge85:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end40.cleanup_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then43:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #8
  %call44 = tail call fastcc i32 @e1000_phy_igp_get_info(ptr noundef %hw, ptr noundef %phy_info)
  br label %cleanup

if.else52:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #8
  %call53 = tail call fastcc i32 @e1000_phy_m88_get_info(ptr noundef %hw, ptr noundef %phy_info)
  br label %cleanup

cleanup:                                          ; preds = %if.else52, %if.then43, %if.end40.cleanup_crit_edge, %if.end40.cleanup_crit_edge85, %if.then33, %do.body21, %if.end12.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.then4, %do.body1
  %retval.0 = phi i32 [ %call44, %if.then43 ], [ %call53, %if.else52 ], [ -3, %if.then4 ], [ %call13.i, %if.end8.cleanup_crit_edge ], [ %call13.i82, %if.end12.cleanup_crit_edge ], [ -3, %if.then33 ], [ 0, %if.end40.cleanup_crit_edge ], [ 0, %if.end40.cleanup_crit_edge85 ], [ -3, %do.body1 ], [ -3, %do.body21 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_phy_igp_get_info(ptr noundef %hw, ptr nocapture noundef writeonly %phy_info) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  %min_length = alloca i16, align 2
  %max_length = alloca i16, align 2
  %polarity = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %min_length) #6
  %1 = ptrtoint ptr %min_length to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %min_length, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %max_length) #6
  %2 = ptrtoint ptr %max_length to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %max_length, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %polarity) #6
  %3 = ptrtoint ptr %polarity to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %polarity, align 4, !annotation !414
  %speed_downgraded = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 63
  %4 = ptrtoint ptr %speed_downgraded to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %speed_downgraded, align 1, !range !497
  %6 = zext i8 %5 to i32
  %downshift = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 3
  %7 = ptrtoint ptr %downshift to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %downshift, align 4
  %extended_10bt_distance = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 1
  %8 = ptrtoint ptr %extended_10bt_distance to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %extended_10bt_distance, align 4
  %polarity_correction = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 4
  %9 = ptrtoint ptr %polarity_correction to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %polarity_correction, align 4
  %call = call fastcc i32 @e1000_check_polarity(ptr noundef %hw, ptr noundef nonnull %polarity)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = ptrtoint ptr %polarity to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %polarity, align 4
  %cable_polarity = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 2
  %12 = ptrtoint ptr %cable_polarity to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %cable_polarity, align 4
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %13 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp5.i = icmp eq i32 %14, 1
  br i1 %cmp5.i, label %if.then.i, label %if.end.e1000_read_phy_reg.exit_crit_edge

if.end.e1000_read_phy_reg.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %if.end
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 17) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %if.end.e1000_read_phy_reg.exit_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 17, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool3.not = icmp eq i32 %call13.i, 0
  br i1 %tobool3.not, label %if.end5, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end5:                                          ; preds = %e1000_read_phy_reg.exit
  %15 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %phy_data, align 2
  %17 = lshr i16 %16, 11
  %18 = and i16 %17, 1
  %19 = zext i16 %18 to i32
  %mdix_mode = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 5
  %20 = ptrtoint ptr %mdix_mode to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %mdix_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -16385, i16 %16)
  %cmp = icmp ugt i16 %16, -16385
  br i1 %cmp, label %if.then10, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then10:                                        ; preds = %if.end5
  %call2.i91 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i94 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 10, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i91) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i94)
  %tobool12.not = icmp eq i32 %call13.i94, 0
  br i1 %tobool12.not, label %if.end14, label %if.then10.cleanup_crit_edge

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end14:                                         ; preds = %if.then10
  %21 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %phy_data, align 2
  %23 = lshr i16 %22, 13
  %.lobit = and i16 %23, 1
  %24 = zext i16 %.lobit to i32
  %local_rx = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 6
  %25 = ptrtoint ptr %local_rx to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %local_rx, align 4
  %26 = lshr i16 %22, 12
  %.lobit89 = and i16 %26, 1
  %27 = zext i16 %.lobit89 to i32
  %remote_rx = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 7
  %28 = ptrtoint ptr %remote_rx to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %remote_rx, align 4
  %call24 = call fastcc i32 @e1000_get_cable_length(ptr noundef %hw, ptr noundef nonnull %min_length, ptr noundef nonnull %max_length)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end27, label %if.end14.cleanup_crit_edge

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end27:                                         ; preds = %if.end14
  %29 = ptrtoint ptr %max_length to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %max_length, align 2
  %conv28 = zext i16 %30 to i32
  %31 = ptrtoint ptr %min_length to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %min_length, align 2
  %conv29 = zext i16 %32 to i32
  %add = add nuw nsw i32 %conv29, %conv28
  call void @__sanitizer_cov_trace_const_cmp4(i32 102, i32 %add)
  %cmp32 = icmp ult i32 %add, 102
  br i1 %cmp32, label %if.then34, label %if.else

if.then34:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #8
  %33 = ptrtoint ptr %phy_info to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %phy_info, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end27
  call void @__sanitizer_cov_trace_const_cmp4(i32 162, i32 %add)
  %cmp36 = icmp ult i32 %add, 162
  br i1 %cmp36, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %34 = ptrtoint ptr %phy_info to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 1, ptr %phy_info, align 4
  br label %cleanup

if.else40:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_const_cmp4(i32 222, i32 %add)
  %cmp42 = icmp ult i32 %add, 222
  br i1 %cmp42, label %if.then44, label %if.else46

if.then44:                                        ; preds = %if.else40
  call void @__sanitizer_cov_trace_pc() #8
  %35 = ptrtoint ptr %phy_info to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 2, ptr %phy_info, align 4
  br label %cleanup

if.else46:                                        ; preds = %if.else40
  call void @__sanitizer_cov_trace_const_cmp4(i32 282, i32 %add)
  %cmp48 = icmp ult i32 %add, 282
  br i1 %cmp48, label %if.then50, label %if.else52

if.then50:                                        ; preds = %if.else46
  call void @__sanitizer_cov_trace_pc() #8
  %36 = ptrtoint ptr %phy_info to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 3, ptr %phy_info, align 4
  br label %cleanup

if.else52:                                        ; preds = %if.else46
  call void @__sanitizer_cov_trace_pc() #8
  %37 = ptrtoint ptr %phy_info to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 4, ptr %phy_info, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else52, %if.then50, %if.then44, %if.then38, %if.then34, %if.end14.cleanup_crit_edge, %if.then10.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call13.i, %e1000_read_phy_reg.exit.cleanup_crit_edge ], [ %call13.i94, %if.then10.cleanup_crit_edge ], [ %call24, %if.end14.cleanup_crit_edge ], [ 0, %if.then34 ], [ 0, %if.then44 ], [ 0, %if.else52 ], [ 0, %if.then50 ], [ 0, %if.then38 ], [ 0, %if.end5.cleanup_crit_edge ], [ %call10.i, %e1000_read_phy_reg.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %polarity) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %max_length) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %min_length) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_phy_m88_get_info(ptr noundef %hw, ptr nocapture noundef writeonly %phy_info) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  %polarity = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %polarity) #6
  %1 = ptrtoint ptr %polarity to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %polarity, align 4, !annotation !414
  %speed_downgraded = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 63
  %2 = ptrtoint ptr %speed_downgraded to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %speed_downgraded, align 1, !range !497
  %4 = zext i8 %3 to i32
  %downshift = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 3
  %5 = ptrtoint ptr %downshift to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %downshift, align 4
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %6 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp5.i = icmp eq i32 %7, 1
  br i1 %cmp5.i, label %if.then.i, label %entry.e1000_read_phy_reg.exit_crit_edge

entry.e1000_read_phy_reg.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %entry
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %entry.e1000_read_phy_reg.exit_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool1.not = icmp eq i32 %call13.i, 0
  br i1 %tobool1.not, label %if.end, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %e1000_read_phy_reg.exit
  %8 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %phy_data, align 2
  %10 = lshr i16 %9, 7
  %.lobit = and i16 %10, 1
  %11 = zext i16 %.lobit to i32
  %extended_10bt_distance = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 1
  %12 = ptrtoint ptr %extended_10bt_distance to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %extended_10bt_distance, align 4
  %13 = lshr i16 %9, 1
  %.lobit62 = and i16 %13, 1
  %14 = zext i16 %.lobit62 to i32
  %polarity_correction = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 4
  %15 = ptrtoint ptr %polarity_correction to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %polarity_correction, align 4
  %call9 = call fastcc i32 @e1000_check_polarity(ptr noundef %hw, ptr noundef nonnull %polarity)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end12:                                         ; preds = %if.end
  %16 = ptrtoint ptr %polarity to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %polarity, align 4
  %cable_polarity = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 2
  %18 = ptrtoint ptr %cable_polarity to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %cable_polarity, align 4
  %call2.i65 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %19 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp5.i67 = icmp eq i32 %20, 1
  br i1 %cmp5.i67, label %if.then.i70, label %if.end12.e1000_read_phy_reg.exit74_crit_edge

if.end12.e1000_read_phy_reg.exit74_crit_edge:     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit74

if.then.i70:                                      ; preds = %if.end12
  %call10.i68 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 17) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i68)
  %tobool.not.i69 = icmp eq i32 %call10.i68, 0
  br i1 %tobool.not.i69, label %if.then.i70.e1000_read_phy_reg.exit74_crit_edge, label %e1000_read_phy_reg.exit74.thread

if.then.i70.e1000_read_phy_reg.exit74_crit_edge:  ; preds = %if.then.i70
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit74

e1000_read_phy_reg.exit74.thread:                 ; preds = %if.then.i70
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i65) #6
  br label %cleanup

e1000_read_phy_reg.exit74:                        ; preds = %if.then.i70.e1000_read_phy_reg.exit74_crit_edge, %if.end12.e1000_read_phy_reg.exit74_crit_edge
  %call13.i71 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 17, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i65) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i71)
  %tobool14.not = icmp eq i32 %call13.i71, 0
  br i1 %tobool14.not, label %if.end16, label %e1000_read_phy_reg.exit74.cleanup_crit_edge

e1000_read_phy_reg.exit74.cleanup_crit_edge:      ; preds = %e1000_read_phy_reg.exit74
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end16:                                         ; preds = %e1000_read_phy_reg.exit74
  %21 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %phy_data, align 2
  %23 = lshr i16 %22, 6
  %24 = and i16 %23, 1
  %25 = zext i16 %24 to i32
  %mdix_mode = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 5
  %26 = ptrtoint ptr %mdix_mode to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %mdix_mode, align 4
  %conv20 = zext i16 %22 to i32
  %and21 = and i32 %conv20, 49152
  call void @__sanitizer_cov_trace_const_cmp4(i32 32768, i32 %and21)
  %cmp = icmp eq i32 %and21, 32768
  br i1 %cmp, label %if.then23, label %if.end16.cleanup_crit_edge

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then23:                                        ; preds = %if.end16
  %and25 = lshr i32 %conv20, 7
  %27 = and i32 %and25, 7
  %28 = ptrtoint ptr %phy_info to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %phy_info, align 4
  %call2.i75 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i78 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 10, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i75) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i78)
  %tobool28.not = icmp eq i32 %call13.i78, 0
  br i1 %tobool28.not, label %if.end30, label %if.then23.cleanup_crit_edge

if.then23.cleanup_crit_edge:                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end30:                                         ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #8
  %29 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %phy_data, align 2
  %31 = lshr i16 %30, 13
  %.lobit63 = and i16 %31, 1
  %32 = zext i16 %.lobit63 to i32
  %local_rx = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 6
  %33 = ptrtoint ptr %local_rx to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %local_rx, align 4
  %34 = lshr i16 %30, 12
  %.lobit64 = and i16 %34, 1
  %35 = zext i16 %.lobit64 to i32
  %remote_rx = getelementptr inbounds %struct.e1000_phy_info, ptr %phy_info, i32 0, i32 7
  %36 = ptrtoint ptr %remote_rx to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %remote_rx, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end30, %if.then23.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %e1000_read_phy_reg.exit74.cleanup_crit_edge, %e1000_read_phy_reg.exit74.thread, %if.end.cleanup_crit_edge, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread
  %retval.0 = phi i32 [ %call13.i, %e1000_read_phy_reg.exit.cleanup_crit_edge ], [ %call9, %if.end.cleanup_crit_edge ], [ %call13.i71, %e1000_read_phy_reg.exit74.cleanup_crit_edge ], [ %call13.i78, %if.then23.cleanup_crit_edge ], [ 0, %if.end30 ], [ 0, %if.end16.cleanup_crit_edge ], [ %call10.i, %e1000_read_phy_reg.exit.thread ], [ %call10.i68, %e1000_read_phy_reg.exit74.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %polarity) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_validate_mdi_setting(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %autoneg = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 55
  %0 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %autoneg, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %return

land.lhs.true:                                    ; preds = %entry
  %mdix = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 56
  %2 = ptrtoint ptr %mdix to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %mdix, align 4
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.172)
  switch i8 %3, label %land.lhs.true.return_crit_edge [
    i8 0, label %land.lhs.true.do.body6_crit_edge
    i8 3, label %land.lhs.true.do.body6_crit_edge20
  ]

land.lhs.true.do.body6_crit_edge20:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body6

land.lhs.true.do.body6_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body6

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %return

do.body6:                                         ; preds = %land.lhs.true.do.body6_crit_edge, %land.lhs.true.do.body6_crit_edge20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_validate_mdi_setting.__UNIQUE_ID_ddebug602, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_validate_mdi_setting, %if.then10)) #6
          to label %do.end12 [label %if.then10], !srcloc !394

if.then10:                                        ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #8
  %call11 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_validate_mdi_setting.__UNIQUE_ID_ddebug602, ptr noundef %call11, ptr noundef nonnull @.str.42) #6
  br label %do.end12

do.end12:                                         ; preds = %if.then10, %do.body6
  %5 = ptrtoint ptr %mdix to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %mdix, align 4
  br label %return

return:                                           ; preds = %do.end12, %land.lhs.true.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -3, %do.end12 ], [ 0, %land.lhs.true.return_crit_edge ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_init_eeprom_params(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  %eeprom_size = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %eeprom1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %add.ptr = getelementptr i8, ptr %1, i32 16
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !574
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_size) #6
  %4 = ptrtoint ptr %eeprom_size to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %eeprom_size, align 2, !annotation !414
  %5 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mac_type, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.173)
  switch i32 %6, label %entry.sw.epilog_crit_edge [
    i32 1, label %entry.sw.bb_crit_edge
    i32 2, label %entry.sw.bb_crit_edge98
    i32 3, label %entry.sw.bb_crit_edge99
    i32 4, label %entry.sw.bb_crit_edge100
    i32 5, label %entry.sw.bb4_crit_edge
    i32 6, label %entry.sw.bb4_crit_edge101
    i32 7, label %entry.sw.bb4_crit_edge102
    i32 8, label %entry.sw.bb4_crit_edge103
    i32 10, label %entry.sw.bb4_crit_edge104
    i32 11, label %entry.sw.bb12_crit_edge
    i32 12, label %entry.sw.bb12_crit_edge105
    i32 13, label %entry.sw.bb12_crit_edge106
    i32 14, label %entry.sw.bb12_crit_edge107
  ]

entry.sw.bb12_crit_edge107:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb12

entry.sw.bb12_crit_edge106:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb12

entry.sw.bb12_crit_edge105:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb12

entry.sw.bb12_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb12

entry.sw.bb4_crit_edge104:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb4

entry.sw.bb4_crit_edge103:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb4

entry.sw.bb4_crit_edge102:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb4

entry.sw.bb4_crit_edge101:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb4

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb4

entry.sw.bb_crit_edge100:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

entry.sw.bb_crit_edge99:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

entry.sw.bb_crit_edge98:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge98, %entry.sw.bb_crit_edge99, %entry.sw.bb_crit_edge100
  %8 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 2, ptr %eeprom1, align 4
  %word_size = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 1
  %9 = ptrtoint ptr %word_size to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 64, ptr %word_size, align 4
  %opcode_bits = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  %10 = ptrtoint ptr %opcode_bits to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 3, ptr %opcode_bits, align 2
  %address_bits = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %11 = ptrtoint ptr %address_bits to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 6, ptr %address_bits, align 4
  %delay_usec = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  %12 = ptrtoint ptr %delay_usec to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 50, ptr %delay_usec, align 2
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry.sw.bb4_crit_edge, %entry.sw.bb4_crit_edge101, %entry.sw.bb4_crit_edge102, %entry.sw.bb4_crit_edge103, %entry.sw.bb4_crit_edge104
  %13 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 2, ptr %eeprom1, align 4
  %opcode_bits6 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  %14 = ptrtoint ptr %opcode_bits6 to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 3, ptr %opcode_bits6, align 2
  %delay_usec7 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  %15 = ptrtoint ptr %delay_usec7 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 50, ptr %delay_usec7, align 2
  %and = and i32 %3, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %word_size10 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 1
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #8
  %16 = ptrtoint ptr %word_size10 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 256, ptr %word_size10, align 4
  %address_bits9 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %17 = ptrtoint ptr %address_bits9 to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 8, ptr %address_bits9, align 4
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #8
  %18 = ptrtoint ptr %word_size10 to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 64, ptr %word_size10, align 4
  %address_bits11 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %19 = ptrtoint ptr %address_bits11 to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 6, ptr %address_bits11, align 4
  br label %sw.epilog

sw.bb12:                                          ; preds = %entry.sw.bb12_crit_edge, %entry.sw.bb12_crit_edge105, %entry.sw.bb12_crit_edge106, %entry.sw.bb12_crit_edge107
  %and13 = and i32 %3, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14.not = icmp eq i32 %and13, 0
  br i1 %tobool14.not, label %if.else27, label %if.then15

if.then15:                                        ; preds = %sw.bb12
  %20 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 1, ptr %eeprom1, align 4
  %opcode_bits17 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  %21 = ptrtoint ptr %opcode_bits17 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 8, ptr %opcode_bits17, align 2
  %delay_usec18 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  %22 = ptrtoint ptr %delay_usec18 to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 1, ptr %delay_usec18, align 2
  %and19 = and i32 %3, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  %page_size24 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 5
  br i1 %tobool20.not, label %if.else23, label %if.then21

if.then21:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #8
  %23 = ptrtoint ptr %page_size24 to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 32, ptr %page_size24, align 4
  %address_bits22 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %24 = ptrtoint ptr %address_bits22 to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 16, ptr %address_bits22, align 4
  br label %sw.epilog

if.else23:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #8
  %25 = ptrtoint ptr %page_size24 to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 8, ptr %page_size24, align 4
  %address_bits25 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %26 = ptrtoint ptr %address_bits25 to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 8, ptr %address_bits25, align 4
  br label %sw.epilog

if.else27:                                        ; preds = %sw.bb12
  %27 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 2, ptr %eeprom1, align 4
  %opcode_bits29 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  %28 = ptrtoint ptr %opcode_bits29 to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 3, ptr %opcode_bits29, align 2
  %delay_usec30 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  %29 = ptrtoint ptr %delay_usec30 to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 50, ptr %delay_usec30, align 2
  %and31 = and i32 %3, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  %word_size37 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 1
  br i1 %tobool32.not, label %if.else36, label %if.then33

if.then33:                                        ; preds = %if.else27
  call void @__sanitizer_cov_trace_pc() #8
  %30 = ptrtoint ptr %word_size37 to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 256, ptr %word_size37, align 4
  %address_bits35 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %31 = ptrtoint ptr %address_bits35 to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 8, ptr %address_bits35, align 4
  br label %sw.epilog

if.else36:                                        ; preds = %if.else27
  call void @__sanitizer_cov_trace_pc() #8
  %32 = ptrtoint ptr %word_size37 to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 64, ptr %word_size37, align 4
  %address_bits38 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %33 = ptrtoint ptr %address_bits38 to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 6, ptr %address_bits38, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.else36, %if.then33, %if.else23, %if.then21, %if.else, %if.then, %sw.bb, %entry.sw.epilog_crit_edge
  %34 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %eeprom1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %cmp42 = icmp eq i32 %35, 1
  br i1 %cmp42, label %if.then43, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then43:                                        ; preds = %sw.epilog
  %word_size44 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 1
  %36 = ptrtoint ptr %word_size44 to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 64, ptr %word_size44, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 18, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_size) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool46.not = icmp eq i32 %call.i, 0
  br i1 %tobool46.not, label %if.end48, label %if.then43.cleanup_crit_edge

if.then43.cleanup_crit_edge:                      ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end48:                                         ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #8
  %37 = ptrtoint ptr %eeprom_size to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %eeprom_size, align 2
  %39 = lshr i16 %38, 10
  %40 = and i16 %39, 7
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %40)
  %tobool51.not = icmp eq i16 %40, 0
  %inc.op = shl i16 128, %40
  %shl = select i1 %tobool51.not, i16 64, i16 %inc.op
  %41 = ptrtoint ptr %word_size44 to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %shl, ptr %word_size44, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end48, %if.then43.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %if.then43.cleanup_crit_edge ], [ 0, %if.end48 ], [ 0, %sw.epilog.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_size) #6
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext %offset, i16 noundef zeroext %words, ptr noundef %data) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %eeprom1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %1)
  %cmp = icmp eq i32 %1, 9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %2 = tail call i32 asm "@ __pv_stub\0A1:\09sub\09$0, $1, $2\0A2:\09sub\09$0, $0, $3\0A\09.pushsection .pv_table,\22a\22\0A\09.long\091b - ., 2b - .\0A\09.popsection\0A", "=r,r,I,I"(i32 393216, i32 -2130706432, i32 8454144) #9, !srcloc !575
  %3 = inttoptr i32 %2 to ptr
  %conv = zext i16 %offset to i32
  %shl = shl nuw nsw i32 %conv, 1
  %add.ptr = getelementptr i8, ptr %3, i32 %shl
  %conv2 = zext i16 %words to i32
  tail call void @__raw_readsw(ptr noundef %add.ptr, ptr noundef %data, i32 noundef %conv2) #6
  br label %cleanup89

if.end:                                           ; preds = %entry
  %conv3 = zext i16 %offset to i32
  %word_size = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 1
  %4 = ptrtoint ptr %word_size to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %word_size, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %offset)
  %cmp5.not = icmp ugt i16 %5, %offset
  br i1 %cmp5.not, label %lor.lhs.false, label %if.end.do.body18_crit_edge

if.end.do.body18_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body18

lor.lhs.false:                                    ; preds = %if.end
  %conv4 = zext i16 %5 to i32
  %conv7 = zext i16 %words to i32
  %sub = sub nsw i32 %conv4, %conv3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv7)
  %cmp11 = icmp slt i32 %sub, %conv7
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %words)
  %cmp15 = icmp eq i16 %words, 0
  %or.cond = or i1 %cmp15, %cmp11
  br i1 %or.cond, label %lor.lhs.false.do.body18_crit_edge, label %if.end30

lor.lhs.false.do.body18_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body18

do.body18:                                        ; preds = %lor.lhs.false.do.body18_crit_edge, %if.end.do.body18_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_do_read_eeprom.__UNIQUE_ID_ddebug605, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_do_read_eeprom, %if.then22)) #6
          to label %cleanup89 [label %if.then22], !srcloc !394

if.then22:                                        ; preds = %do.body18
  call void @__sanitizer_cov_trace_pc() #8
  %call23 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %6 = ptrtoint ptr %word_size to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %word_size, align 4
  %conv26 = zext i16 %7 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_do_read_eeprom.__UNIQUE_ID_ddebug605, ptr noundef %call23, ptr noundef nonnull @.str.123, i32 noundef %conv3, i32 noundef %conv26) #6
  br label %cleanup89

if.end30:                                         ; preds = %lor.lhs.false
  %call31 = tail call fastcc i32 @e1000_acquire_eeprom(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %cmp32.not = icmp eq i32 %call31, 0
  br i1 %cmp32.not, label %if.end35, label %if.end30.cleanup89_crit_edge

if.end30.cleanup89_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup89

if.end35:                                         ; preds = %if.end30
  %8 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %eeprom1, align 4
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.174)
  switch i32 %9, label %if.end35.if.end88_crit_edge [
    i32 1, label %if.then38
    i32 2, label %for.body75.lr.ph
  ]

if.end35.if.end88_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end88

for.body75.lr.ph:                                 ; preds = %if.end35
  %opcode_bits76 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  %address_bits79 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  br label %for.body75

if.then38:                                        ; preds = %if.end35
  %call39 = tail call fastcc i32 @e1000_spi_eeprom_ready(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %for.body.preheader, label %if.then41

if.then41:                                        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #8
  tail call fastcc void @e1000_release_eeprom(ptr noundef %hw)
  br label %cleanup89

for.body.preheader:                               ; preds = %if.then38
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw)
  %address_bits = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %11 = ptrtoint ptr %address_bits to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %address_bits, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %12)
  %cmp44 = icmp eq i16 %12, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 127, i16 %offset)
  %cmp47 = icmp ugt i16 %offset, 127
  %or.cond134 = and i1 %cmp47, %cmp44
  %conv53 = select i1 %or.cond134, i16 11, i16 3
  %opcode_bits = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  %13 = ptrtoint ptr %opcode_bits to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %opcode_bits, align 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext %conv53, i16 noundef zeroext %14)
  %mul = shl i16 %offset, 1
  %15 = ptrtoint ptr %address_bits to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %address_bits, align 4
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext %mul, i16 noundef zeroext %16)
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.0140 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %call60 = tail call fastcc zeroext i16 @e1000_shift_in_ee_bits(ptr noundef %hw, i16 noundef zeroext 16)
  %or64 = tail call i16 @llvm.bswap.i16(i16 %call60)
  %arrayidx = getelementptr i16, ptr %data, i32 %i.0140
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %or64, ptr %arrayidx, align 2
  %inc = add nuw nsw i32 %i.0140, 1
  %exitcond142.not = icmp eq i32 %inc, %conv7
  br i1 %exitcond142.not, label %for.body.if.end88_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

for.body.if.end88_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end88

for.body75:                                       ; preds = %for.body75.for.body75_crit_edge, %for.body75.lr.ph
  %i.1138 = phi i32 [ 0, %for.body75.lr.ph ], [ %inc85, %for.body75.for.body75_crit_edge ]
  %18 = ptrtoint ptr %opcode_bits76 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %opcode_bits76, align 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext 6, i16 noundef zeroext %19)
  %20 = trunc i32 %i.1138 to i16
  %conv78 = add i16 %20, %offset
  %21 = ptrtoint ptr %address_bits79 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %address_bits79, align 4
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext %conv78, i16 noundef zeroext %22)
  %call80 = tail call fastcc zeroext i16 @e1000_shift_in_ee_bits(ptr noundef %hw, i16 noundef zeroext 16)
  %arrayidx81 = getelementptr i16, ptr %data, i32 %i.1138
  %23 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %call80, ptr %arrayidx81, align 2
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw)
  tail call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 3940, i32 noundef 0) #6
  %call.i = tail call i32 @__cond_resched() #6
  %inc85 = add nuw nsw i32 %i.1138, 1
  %exitcond.not = icmp eq i32 %inc85, %conv7
  br i1 %exitcond.not, label %for.body75.if.end88_crit_edge, label %for.body75.for.body75_crit_edge

for.body75.for.body75_crit_edge:                  ; preds = %for.body75
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body75

for.body75.if.end88_crit_edge:                    ; preds = %for.body75
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end88

if.end88:                                         ; preds = %for.body75.if.end88_crit_edge, %for.body.if.end88_crit_edge, %if.end35.if.end88_crit_edge
  tail call fastcc void @e1000_release_eeprom(ptr noundef %hw)
  br label %cleanup89

cleanup89:                                        ; preds = %if.end88, %if.then41, %if.end30.cleanup89_crit_edge, %if.then22, %do.body18, %if.then
  %retval.1 = phi i32 [ 0, %if.then ], [ 0, %if.end88 ], [ -1, %if.then22 ], [ -1, %if.end30.cleanup89_crit_edge ], [ -1, %if.then41 ], [ -1, %do.body18 ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_validate_eeprom_checksum(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  %eeprom_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data) #6
  %0 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %eeprom_data, align 2, !annotation !414
  br label %for.body

for.body:                                         ; preds = %if.end12.for.body_crit_edge, %entry
  %checksum.054 = phi i32 [ 0, %entry ], [ %phi.cast, %if.end12.for.body_crit_edge ]
  %i.053 = phi i16 [ 0, %entry ], [ %inc, %if.end12.for.body_crit_edge ]
  call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext %i.053, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp2 = icmp slt i32 %call.i, 0
  br i1 %cmp2, label %do.body4, label %if.end12

do.body4:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_validate_eeprom_checksum.__UNIQUE_ID_ddebug606, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_validate_eeprom_checksum, %if.then8)) #6
          to label %cleanup [label %if.then8], !srcloc !394

if.then8:                                         ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #8
  %call9 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_validate_eeprom_checksum.__UNIQUE_ID_ddebug606, ptr noundef %call9, ptr noundef nonnull @.str.11) #6
  br label %cleanup

if.end12:                                         ; preds = %for.body
  %1 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %eeprom_data, align 2
  %conv13 = zext i16 %2 to i32
  %add = add nuw nsw i32 %checksum.054, %conv13
  %inc = add nuw nsw i16 %i.053, 1
  %phi.cast = and i32 %add, 65535
  %cmp = icmp ult i16 %i.053, 63
  br i1 %cmp, label %if.end12.for.body_crit_edge, label %for.end

if.end12.for.body_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

for.end:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_const_cmp4(i32 47802, i32 %phi.cast)
  %cmp17 = icmp eq i32 %phi.cast, 47802
  br i1 %cmp17, label %for.end.cleanup_crit_edge, label %do.body21

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body21:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_validate_eeprom_checksum.__UNIQUE_ID_ddebug607, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_validate_eeprom_checksum, %if.then33)) #6
          to label %cleanup [label %if.then33], !srcloc !394

if.then33:                                        ; preds = %do.body21
  call void @__sanitizer_cov_trace_pc() #8
  %call34 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_validate_eeprom_checksum.__UNIQUE_ID_ddebug607, ptr noundef %call34, ptr noundef nonnull @.str.44) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then33, %do.body21, %for.end.cleanup_crit_edge, %if.then8, %do.body4
  %retval.0 = phi i32 [ -1, %if.then8 ], [ 0, %for.end.cleanup_crit_edge ], [ -1, %if.then33 ], [ -1, %do.body4 ], [ -1, %do.body21 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_update_eeprom_checksum(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  %checksum = alloca i16, align 2
  %eeprom_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %checksum) #6
  %0 = ptrtoint ptr %checksum to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 0, ptr %checksum, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data) #6
  %1 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %eeprom_data, align 2, !annotation !414
  br label %for.body

for.body:                                         ; preds = %if.end12.for.body_crit_edge, %entry
  %i.056 = phi i16 [ 0, %entry ], [ %inc, %if.end12.for.body_crit_edge ]
  call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext %i.056, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp2 = icmp slt i32 %call.i, 0
  br i1 %cmp2, label %do.body4, label %if.end12

do.body4:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_update_eeprom_checksum.__UNIQUE_ID_ddebug608, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_update_eeprom_checksum, %if.then8)) #6
          to label %cleanup [label %if.then8], !srcloc !394

if.then8:                                         ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #8
  %call9 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_update_eeprom_checksum.__UNIQUE_ID_ddebug608, ptr noundef %call9, ptr noundef nonnull @.str.11) #6
  br label %cleanup

if.end12:                                         ; preds = %for.body
  %2 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %eeprom_data, align 2
  %4 = ptrtoint ptr %checksum to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %checksum, align 2
  %add = add i16 %5, %3
  store i16 %add, ptr %checksum, align 2
  %inc = add nuw nsw i16 %i.056, 1
  %cmp = icmp ult i16 %i.056, 62
  br i1 %cmp, label %if.end12.for.body_crit_edge, label %for.end

if.end12.for.body_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

for.end:                                          ; preds = %if.end12
  %6 = ptrtoint ptr %checksum to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %checksum, align 2
  %sub = sub i16 -17734, %7
  store i16 %sub, ptr %checksum, align 2
  call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i53 = call fastcc i32 @e1000_do_write_eeprom(ptr noundef %hw, i16 noundef zeroext 63, i16 noundef zeroext 1, ptr noundef nonnull %checksum) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i53)
  %cmp19 = icmp slt i32 %call.i53, 0
  br i1 %cmp19, label %do.body23, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body23:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_update_eeprom_checksum.__UNIQUE_ID_ddebug609, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_update_eeprom_checksum, %if.then35)) #6
          to label %cleanup [label %if.then35], !srcloc !394

if.then35:                                        ; preds = %do.body23
  call void @__sanitizer_cov_trace_pc() #8
  %call36 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_update_eeprom_checksum.__UNIQUE_ID_ddebug609, ptr noundef %call36, ptr noundef nonnull @.str.46) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then35, %do.body23, %for.end.cleanup_crit_edge, %if.then8, %do.body4
  %retval.0 = phi i32 [ -1, %if.then8 ], [ -1, %if.then35 ], [ 0, %for.end.cleanup_crit_edge ], [ -1, %do.body4 ], [ -1, %do.body23 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %checksum) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_write_eeprom(ptr noundef %hw, i16 noundef zeroext %offset, i16 noundef zeroext %words, ptr noundef %data) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call = tail call fastcc i32 @e1000_do_write_eeprom(ptr noundef %hw, i16 noundef zeroext %offset, i16 noundef zeroext %words, ptr noundef %data)
  tail call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_do_write_eeprom(ptr noundef %hw, i16 noundef zeroext %offset, i16 noundef zeroext %words, ptr noundef %data) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %eeprom1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %1)
  %cmp = icmp eq i32 %1, 9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %2 = tail call i32 asm "@ __pv_stub\0A1:\09sub\09$0, $1, $2\0A2:\09sub\09$0, $0, $3\0A\09.pushsection .pv_table,\22a\22\0A\09.long\091b - ., 2b - .\0A\09.popsection\0A", "=r,r,I,I"(i32 393216, i32 -2130706432, i32 8454144) #9, !srcloc !575
  %3 = inttoptr i32 %2 to ptr
  %conv = zext i16 %offset to i32
  %add.ptr = getelementptr i8, ptr %3, i32 %conv
  %conv2 = zext i16 %words to i32
  tail call void @__raw_writesw(ptr noundef %add.ptr, ptr noundef %data, i32 noundef %conv2) #6
  br label %cleanup

if.end:                                           ; preds = %entry
  %word_size = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 1
  %4 = ptrtoint ptr %word_size to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %word_size, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %offset)
  %cmp5.not = icmp ugt i16 %5, %offset
  br i1 %cmp5.not, label %lor.lhs.false, label %if.end.do.body18_crit_edge

if.end.do.body18_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body18

lor.lhs.false:                                    ; preds = %if.end
  %conv3 = zext i16 %offset to i32
  %conv4 = zext i16 %5 to i32
  %conv7 = zext i16 %words to i32
  %sub = sub nsw i32 %conv4, %conv3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv7)
  %cmp11 = icmp slt i32 %sub, %conv7
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %words)
  %cmp15 = icmp eq i16 %words, 0
  %or.cond = or i1 %cmp15, %cmp11
  br i1 %or.cond, label %lor.lhs.false.do.body18_crit_edge, label %if.end27

lor.lhs.false.do.body18_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body18

do.body18:                                        ; preds = %lor.lhs.false.do.body18_crit_edge, %if.end.do.body18_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_do_write_eeprom.__UNIQUE_ID_ddebug610, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_do_write_eeprom, %if.then22)) #6
          to label %cleanup [label %if.then22], !srcloc !394

if.then22:                                        ; preds = %do.body18
  call void @__sanitizer_cov_trace_pc() #8
  %call23 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_do_write_eeprom.__UNIQUE_ID_ddebug610, ptr noundef %call23, ptr noundef nonnull @.str.129) #6
  br label %cleanup

if.end27:                                         ; preds = %lor.lhs.false
  %call28 = tail call fastcc i32 @e1000_acquire_eeprom(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %cmp29.not = icmp eq i32 %call28, 0
  br i1 %cmp29.not, label %if.end32, label %if.end27.cleanup_crit_edge

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end32:                                         ; preds = %if.end27
  %6 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %eeprom1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %cmp33 = icmp eq i32 %7, 2
  br i1 %cmp33, label %if.then35, label %while.body.i.preheader

if.then35:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #8
  %call36 = tail call fastcc i32 @e1000_write_eeprom_microwire(ptr noundef %hw, i16 noundef zeroext %offset, i16 noundef zeroext %words, ptr noundef %data)
  br label %if.end38

while.body.i.preheader:                           ; preds = %if.end32
  %opcode_bits.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  %address_bits.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  call void @__sanitizer_cov_trace_const_cmp2(i16 127, i16 %offset)
  %cmp9.i = icmp ugt i16 %offset, 127
  %page_size.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 5
  br label %while.body.i

while.body.i:                                     ; preds = %cleanup40.i.while.body.i_crit_edge, %while.body.i.preheader
  %widx.0.i60 = phi i16 [ %21, %cleanup40.i.while.body.i_crit_edge ], [ 0, %while.body.i.preheader ]
  %call.i = tail call fastcc i32 @e1000_spi_eeprom_ready(ptr noundef %hw) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %while.body.i.e1000_write_eeprom_spi.exit_crit_edge

while.body.i.e1000_write_eeprom_spi.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_eeprom_spi.exit

if.end.i:                                         ; preds = %while.body.i
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw) #6
  tail call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 4091, i32 noundef 0) #6
  %call.i.i = tail call i32 @__cond_resched() #6
  %8 = ptrtoint ptr %opcode_bits.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %opcode_bits.i, align 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext 6, i16 noundef zeroext %9) #6
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw) #6
  %10 = ptrtoint ptr %address_bits.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %address_bits.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %11)
  %cmp6.i = icmp eq i16 %11, 8
  %or.cond.i = and i1 %cmp9.i, %cmp6.i
  %conv15.i = select i1 %or.cond.i, i16 10, i16 2
  %12 = ptrtoint ptr %opcode_bits.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %opcode_bits.i, align 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext %conv15.i, i16 noundef zeroext %13) #6
  %add.i = add i16 %widx.0.i60, %offset
  %mul.i = shl i16 %add.i, 1
  %14 = ptrtoint ptr %address_bits.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %address_bits.i, align 4
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext %mul.i, i16 noundef zeroext %15) #6
  %16 = zext i16 %widx.0.i60 to i32
  %umax.i = tail call i16 @llvm.umax.i16(i16 %widx.0.i60, i16 %words) #6
  %wide.trip.count.i = zext i16 %umax.i to i32
  br label %while.cond21.i

while.cond21.i:                                   ; preds = %while.body26.i.while.cond21.i_crit_edge, %if.end.i
  %indvars.iv.i = phi i32 [ %indvars.iv.next.i, %while.body26.i.while.cond21.i_crit_edge ], [ %16, %if.end.i ]
  call void @__sanitizer_cov_trace_cmp4(i32 %indvars.iv.i, i32 %wide.trip.count.i)
  %exitcond.not.i = icmp eq i32 %indvars.iv.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %while.cond21.i.e1000_write_eeprom_spi.exit_crit_edge, label %while.body26.i

while.cond21.i.e1000_write_eeprom_spi.exit_crit_edge: ; preds = %while.cond21.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_eeprom_spi.exit

while.body26.i:                                   ; preds = %while.cond21.i
  %arrayidx.i = getelementptr i16, ptr %data, i32 %indvars.iv.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %arrayidx.i, align 2
  %or29.i = tail call i16 @llvm.bswap.i16(i16 %18) #6
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext %or29.i, i16 noundef zeroext 16) #6
  %indvars.iv.next.i = add nuw nsw i32 %indvars.iv.i, 1
  %add33.i = add nuw nsw i32 %indvars.iv.next.i, %conv3
  %mul34.i = shl nuw nsw i32 %add33.i, 1
  %19 = ptrtoint ptr %page_size.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %page_size.i, align 4
  %conv35.i = zext i16 %20 to i32
  %rem.i = urem i32 %mul34.i, %conv35.i
  %cmp36.i = icmp eq i32 %rem.i, 0
  br i1 %cmp36.i, label %cleanup40.i, label %while.body26.i.while.cond21.i_crit_edge

while.body26.i.while.cond21.i_crit_edge:          ; preds = %while.body26.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.cond21.i

cleanup40.i:                                      ; preds = %while.body26.i
  %21 = trunc i32 %indvars.iv.next.i to i16
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw) #6
  %cmp.i = icmp ult i16 %21, %words
  br i1 %cmp.i, label %cleanup40.i.while.body.i_crit_edge, label %cleanup40.i.e1000_write_eeprom_spi.exit_crit_edge

cleanup40.i.e1000_write_eeprom_spi.exit_crit_edge: ; preds = %cleanup40.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_eeprom_spi.exit

cleanup40.i.while.body.i_crit_edge:               ; preds = %cleanup40.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.body.i

e1000_write_eeprom_spi.exit:                      ; preds = %cleanup40.i.e1000_write_eeprom_spi.exit_crit_edge, %while.cond21.i.e1000_write_eeprom_spi.exit_crit_edge, %while.body.i.e1000_write_eeprom_spi.exit_crit_edge
  %retval.2.ph.i.ph = phi i32 [ 0, %while.cond21.i.e1000_write_eeprom_spi.exit_crit_edge ], [ 0, %cleanup40.i.e1000_write_eeprom_spi.exit_crit_edge ], [ -1, %while.body.i.e1000_write_eeprom_spi.exit_crit_edge ]
  tail call void @msleep(i32 noundef 10) #6
  br label %if.end38

if.end38:                                         ; preds = %e1000_write_eeprom_spi.exit, %if.then35
  %status.0 = phi i32 [ %call36, %if.then35 ], [ %retval.2.ph.i.ph, %e1000_write_eeprom_spi.exit ]
  tail call fastcc void @e1000_release_eeprom(ptr noundef %hw)
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %if.end27.cleanup_crit_edge, %if.then22, %do.body18, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %status.0, %if.end38 ], [ -1, %if.then22 ], [ -1, %if.end27.cleanup_crit_edge ], [ -1, %do.body18 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_read_mac_addr(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  %eeprom_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data) #6
  %0 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %eeprom_data, align 2, !annotation !414
  call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 0, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp4 = icmp slt i32 %call.i, 0
  br i1 %cmp4, label %entry.do.body6_crit_edge, label %if.end14

entry.do.body6_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body6

do.body6:                                         ; preds = %if.end14.1.do.body6_crit_edge, %if.end14.do.body6_crit_edge, %entry.do.body6_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_read_mac_addr.__UNIQUE_ID_ddebug612, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_read_mac_addr, %if.then10)) #6
          to label %cleanup [label %if.then10], !srcloc !394

if.then10:                                        ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #8
  %call11 = call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_read_mac_addr.__UNIQUE_ID_ddebug612, ptr noundef %call11, ptr noundef nonnull @.str.11) #6
  br label %cleanup

if.end14:                                         ; preds = %entry
  %1 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %eeprom_data, align 2
  %conv16 = trunc i16 %2 to i8
  %arrayidx = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 61, i32 0
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %conv16, ptr %arrayidx, align 1
  %4 = lshr i16 %2, 8
  %conv19 = trunc i16 %4 to i8
  %arrayidx22 = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 61, i32 1
  %5 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %conv19, ptr %arrayidx22, align 1
  call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i.1 = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 1, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1)
  %cmp4.1 = icmp slt i32 %call.i.1, 0
  br i1 %cmp4.1, label %if.end14.do.body6_crit_edge, label %if.end14.1

if.end14.do.body6_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body6

if.end14.1:                                       ; preds = %if.end14
  %6 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %eeprom_data, align 2
  %conv16.1 = trunc i16 %7 to i8
  %arrayidx.1 = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 61, i32 2
  %8 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv16.1, ptr %arrayidx.1, align 1
  %9 = lshr i16 %7, 8
  %conv19.1 = trunc i16 %9 to i8
  %arrayidx22.1 = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 61, i32 3
  %10 = ptrtoint ptr %arrayidx22.1 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %conv19.1, ptr %arrayidx22.1, align 1
  call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i.2 = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 2, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.2)
  %cmp4.2 = icmp slt i32 %call.i.2, 0
  br i1 %cmp4.2, label %if.end14.1.do.body6_crit_edge, label %if.end14.2

if.end14.1.do.body6_crit_edge:                    ; preds = %if.end14.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body6

if.end14.2:                                       ; preds = %if.end14.1
  %11 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %eeprom_data, align 2
  %conv16.2 = trunc i16 %12 to i8
  %arrayidx.2 = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 61, i32 4
  %13 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %conv16.2, ptr %arrayidx.2, align 1
  %14 = lshr i16 %12, 8
  %conv19.2 = trunc i16 %14 to i8
  %arrayidx22.2 = getelementptr %struct.e1000_hw, ptr %hw, i32 0, i32 61, i32 5
  %15 = ptrtoint ptr %arrayidx22.2 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %conv19.2, ptr %arrayidx22.2, align 1
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %16 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mac_type, align 4
  %18 = zext i32 %17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.175)
  switch i32 %17, label %if.end14.2.sw.epilog_crit_edge [
    i32 8, label %if.end14.2.sw.bb_crit_edge
    i32 10, label %if.end14.2.sw.bb_crit_edge75
  ]

if.end14.2.sw.bb_crit_edge75:                     ; preds = %if.end14.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

if.end14.2.sw.bb_crit_edge:                       ; preds = %if.end14.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

if.end14.2.sw.epilog_crit_edge:                   ; preds = %if.end14.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end14.2.sw.bb_crit_edge, %if.end14.2.sw.bb_crit_edge75
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %20, i32 8
  %21 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !576
  %22 = and i32 %21, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool33.not = icmp eq i32 %22, 0
  br i1 %tobool33.not, label %sw.bb.sw.epilog_crit_edge, label %if.then34

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

if.then34:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  %23 = ptrtoint ptr %arrayidx22.2 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx22.2, align 1
  %25 = xor i8 %24, 1
  store i8 %25, ptr %arrayidx22.2, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then34, %sw.bb.sw.epilog_crit_edge, %if.end14.2.sw.epilog_crit_edge
  %uglygep = getelementptr i8, ptr %hw, i32 216
  %26 = call ptr @memcpy(ptr %uglygep, ptr %arrayidx, i32 6)
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.then10, %do.body6
  %retval.0 = phi i32 [ -1, %if.then10 ], [ -1, %do.body6 ], [ 0, %sw.epilog ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data) #6
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @e1000_hash_mc_addr(ptr nocapture noundef readonly %hw, ptr nocapture noundef readonly %mc_addr) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mc_filter_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 30
  %0 = ptrtoint ptr %mc_filter_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mc_filter_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.176)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb13
    i32 3, label %sw.bb22
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %arrayidx = getelementptr i8, ptr %mc_addr, i32 4
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx, align 1
  %5 = lshr i8 %4, 4
  br label %sw.epilog.sink.split

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %arrayidx5 = getelementptr i8, ptr %mc_addr, i32 4
  %6 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx5, align 1
  %8 = lshr i8 %7, 3
  br label %sw.epilog.sink.split

sw.bb13:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %arrayidx14 = getelementptr i8, ptr %mc_addr, i32 4
  %9 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx14, align 1
  %11 = lshr i8 %10, 2
  br label %sw.epilog.sink.split

sw.bb22:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %arrayidx23 = getelementptr i8, ptr %mc_addr, i32 4
  %12 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx23, align 1
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb22, %sw.bb13, %sw.bb4, %sw.bb
  %.sink39 = phi i8 [ %13, %sw.bb22 ], [ %11, %sw.bb13 ], [ %8, %sw.bb4 ], [ %5, %sw.bb ]
  %.sink = phi i32 [ 8, %sw.bb22 ], [ 6, %sw.bb13 ], [ 5, %sw.bb4 ], [ 4, %sw.bb ]
  %conv24 = zext i8 %.sink39 to i32
  %arrayidx25 = getelementptr i8, ptr %mc_addr, i32 5
  %14 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx25, align 1
  %conv27 = zext i8 %15 to i32
  %shl28 = shl nuw nsw i32 %conv27, %.sink
  %shl28.masked = and i32 %shl28, 4094
  %phi.bo = or i32 %shl28.masked, %conv24
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  %hash_value.0 = phi i32 [ 0, %entry.sw.epilog_crit_edge ], [ %phi.bo, %sw.epilog.sink.split ]
  ret i32 %hash_value.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_rar_set(ptr nocapture noundef readonly %hw, ptr nocapture noundef readonly %addr, i32 noundef %index) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %addr, align 1
  %conv = zext i8 %1 to i32
  %arrayidx1 = getelementptr i8, ptr %addr, i32 1
  %2 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx1, align 1
  %conv2 = zext i8 %3 to i32
  %shl = shl nuw nsw i32 %conv2, 8
  %or = or i32 %shl, %conv
  %arrayidx3 = getelementptr i8, ptr %addr, i32 2
  %4 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx3, align 1
  %conv4 = zext i8 %5 to i32
  %shl5 = shl nuw nsw i32 %conv4, 16
  %or6 = or i32 %or, %shl5
  %arrayidx7 = getelementptr i8, ptr %addr, i32 3
  %6 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx7, align 1
  %conv8 = zext i8 %7 to i32
  %shl9 = shl nuw i32 %conv8, 24
  %or10 = or i32 %or6, %shl9
  %arrayidx11 = getelementptr i8, ptr %addr, i32 4
  %8 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx11, align 1
  %conv12 = zext i8 %9 to i32
  %arrayidx13 = getelementptr i8, ptr %addr, i32 5
  %10 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx13, align 1
  %conv14 = zext i8 %11 to i32
  %shl15 = shl nuw nsw i32 %conv14, 8
  %or16 = or i32 %shl15, %conv12
  %or17 = or i32 %or16, -2147483648
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !489
  tail call void @arm_heavy_mb() #6
  %12 = tail call i32 @llvm.bswap.i32(i32 %or10)
  %13 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hw, align 4
  %mac_type18 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %15 = ptrtoint ptr %mac_type18 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mac_type18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %cmp = icmp ugt i32 %16, 2
  %cond = select i1 %cmp, i32 21504, i32 64
  %add.ptr = getelementptr i8, ptr %14, i32 %cond
  %shl20 = shl i32 %index, 3
  %add.ptr22 = getelementptr i8, ptr %add.ptr, i32 %shl20
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr22, i32 %12) #6, !srcloc !396
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr28 = getelementptr i8, ptr %18, i32 8
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr28) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !490
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !491
  tail call void @arm_heavy_mb() #6
  %20 = tail call i32 @llvm.bswap.i32(i32 %or17)
  %21 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw, align 4
  %23 = ptrtoint ptr %mac_type18 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mac_type18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp35 = icmp ugt i32 %24, 2
  %cond37 = select i1 %cmp35, i32 21504, i32 64
  %add.ptr38 = getelementptr i8, ptr %22, i32 %cond37
  %add = or i32 %shl20, 4
  %add.ptr41 = getelementptr i8, ptr %add.ptr38, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr41, i32 %20) #6, !srcloc !396
  %25 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw, align 4
  %add.ptr49 = getelementptr i8, ptr %26, i32 8
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr49) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !492
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_write_vfta(ptr nocapture noundef readonly %hw, i32 noundef %offset, i32 noundef %value) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %1)
  %cmp = icmp ne i32 %1, 4
  %and = and i32 %offset, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp1.not = icmp eq i32 %and, 0
  %or.cond = or i1 %cmp1.not, %cmp
  br i1 %or.cond, label %do.body44, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %2 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %3, i32 22016
  %sub = shl i32 %offset, 2
  %shl = add i32 %sub, -4
  %add.ptr4 = getelementptr i8, ptr %add.ptr, i32 %shl
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr4) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !577
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !578
  tail call void @arm_heavy_mb() #6
  %5 = tail call i32 @llvm.bswap.i32(i32 %value)
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 4
  %8 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %9)
  %cmp8 = icmp ugt i32 %9, 2
  %cond9 = select i1 %cmp8, i32 22016, i32 1536
  %add.ptr10 = getelementptr i8, ptr %7, i32 %cond9
  %add.ptr12 = getelementptr i8, ptr %add.ptr10, i32 %sub
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr12, i32 %5) #6, !srcloc !396
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr19 = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr19) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !579
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !580
  tail call void @arm_heavy_mb() #6
  %13 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hw, align 4
  %15 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %cmp28 = icmp ugt i32 %16, 2
  %cond29 = select i1 %cmp28, i32 22016, i32 1536
  %add.ptr30 = getelementptr i8, ptr %14, i32 %cond29
  %add.ptr33 = getelementptr i8, ptr %add.ptr30, i32 %shl
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr33, i32 %4) #6, !srcloc !396
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr40 = getelementptr i8, ptr %18, i32 8
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr40) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !581
  br label %if.end

do.body44:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !582
  tail call void @arm_heavy_mb() #6
  %20 = tail call i32 @llvm.bswap.i32(i32 %value)
  %21 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw, align 4
  %23 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp49 = icmp ugt i32 %24, 2
  %cond50 = select i1 %cmp49, i32 22016, i32 1536
  %add.ptr51 = getelementptr i8, ptr %22, i32 %cond50
  %shl52 = shl i32 %offset, 2
  %add.ptr53 = getelementptr i8, ptr %add.ptr51, i32 %shl52
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr53, i32 %20) #6, !srcloc !396
  %25 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw, align 4
  %add.ptr60 = getelementptr i8, ptr %26, i32 8
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr60) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !583
  br label %if.end

if.end:                                           ; preds = %do.body44, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_setup_led(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.177)
  switch i32 %1, label %entry.sw.default_crit_edge [
    i32 1, label %entry.cleanup_crit_edge
    i32 2, label %entry.cleanup_crit_edge70
    i32 3, label %entry.cleanup_crit_edge71
    i32 4, label %entry.cleanup_crit_edge72
    i32 11, label %entry.sw.bb1_crit_edge
    i32 13, label %entry.sw.bb1_crit_edge73
    i32 12, label %entry.sw.bb1_crit_edge74
    i32 14, label %entry.sw.bb1_crit_edge75
  ]

entry.sw.bb1_crit_edge75:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb1

entry.sw.bb1_crit_edge74:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb1

entry.sw.bb1_crit_edge73:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb1

entry.cleanup_crit_edge72:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

entry.cleanup_crit_edge71:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

entry.cleanup_crit_edge70:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

entry.sw.default_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.default

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge73, %entry.sw.bb1_crit_edge74, %entry.sw.bb1_crit_edge75
  %phy_spd_default = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 39
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %3 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp5.i = icmp eq i32 %4, 1
  br i1 %cmp5.i, label %if.then.i, label %sw.bb1.e1000_read_phy_reg.exit_crit_edge

sw.bb1.e1000_read_phy_reg.exit_crit_edge:         ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %sw.bb1
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 20) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %sw.bb1.e1000_read_phy_reg.exit_crit_edge
  %call13.i = tail call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 20, ptr noundef %phy_spd_default) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %e1000_read_phy_reg.exit
  %5 = ptrtoint ptr %phy_spd_default to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %phy_spd_default, align 4
  %7 = and i16 %6, -33
  %call2.i58 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %8 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp5.i60 = icmp eq i32 %9, 1
  br i1 %cmp5.i60, label %if.then.i63, label %if.end.e1000_write_phy_reg.exit_crit_edge

if.end.e1000_write_phy_reg.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i63:                                      ; preds = %if.end
  %call10.i61 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 20) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i61)
  %tobool.not.i62 = icmp eq i32 %call10.i61, 0
  br i1 %tobool.not.i62, label %if.then.i63.e1000_write_phy_reg.exit_crit_edge, label %e1000_write_phy_reg.exit.thread

if.then.i63.e1000_write_phy_reg.exit_crit_edge:   ; preds = %if.then.i63
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit.thread:                  ; preds = %if.then.i63
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i58) #6
  br label %cleanup

e1000_write_phy_reg.exit:                         ; preds = %if.then.i63.e1000_write_phy_reg.exit_crit_edge, %if.end.e1000_write_phy_reg.exit_crit_edge
  %call13.i64 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 20, i16 noundef zeroext %7) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i58) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i64)
  %tobool5.not = icmp eq i32 %call13.i64, 0
  br i1 %tobool5.not, label %e1000_write_phy_reg.exit.sw.default_crit_edge, label %e1000_write_phy_reg.exit.cleanup_crit_edge

e1000_write_phy_reg.exit.cleanup_crit_edge:       ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

e1000_write_phy_reg.exit.sw.default_crit_edge:    ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.default

sw.default:                                       ; preds = %e1000_write_phy_reg.exit.sw.default_crit_edge, %entry.sw.default_crit_edge
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %10 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %media_type, align 4
  %12 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.178)
  switch i32 %11, label %sw.default.cleanup_crit_edge [
    i32 1, label %if.then9
    i32 0, label %do.body26
  ]

sw.default.cleanup_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then9:                                         ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  %13 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %14, i32 3584
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %16 = tail call i32 @llvm.bswap.i32(i32 %15)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !584
  %ledctl_default = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 34
  %17 = ptrtoint ptr %ledctl_default to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %ledctl_default, align 4
  %and15 = and i32 %16, -208
  %or = or i32 %and15, 15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !585
  tail call void @arm_heavy_mb() #6
  %18 = tail call i32 @llvm.bswap.i32(i32 %or)
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr21 = getelementptr i8, ptr %20, i32 3584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr21, i32 %18) #6, !srcloc !396
  br label %cleanup

do.body26:                                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !586
  tail call void @arm_heavy_mb() #6
  %ledctl_mode1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 35
  %21 = ptrtoint ptr %ledctl_mode1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ledctl_mode1, align 4
  %23 = tail call i32 @llvm.bswap.i32(i32 %22)
  %24 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw, align 4
  %add.ptr34 = getelementptr i8, ptr %25, i32 3584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr34, i32 %23) #6, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %do.body26, %if.then9, %sw.default.cleanup_crit_edge, %e1000_write_phy_reg.exit.cleanup_crit_edge, %e1000_write_phy_reg.exit.thread, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread, %entry.cleanup_crit_edge, %entry.cleanup_crit_edge70, %entry.cleanup_crit_edge71, %entry.cleanup_crit_edge72
  %retval.0 = phi i32 [ %call13.i, %e1000_read_phy_reg.exit.cleanup_crit_edge ], [ %call13.i64, %e1000_write_phy_reg.exit.cleanup_crit_edge ], [ 0, %sw.default.cleanup_crit_edge ], [ 0, %if.then9 ], [ 0, %do.body26 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge70 ], [ 0, %entry.cleanup_crit_edge71 ], [ 0, %entry.cleanup_crit_edge72 ], [ %call10.i, %e1000_read_phy_reg.exit.thread ], [ %call10.i61, %e1000_write_phy_reg.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_cleanup_led(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.179)
  switch i32 %1, label %entry.do.body_crit_edge [
    i32 1, label %entry.cleanup_crit_edge
    i32 2, label %entry.cleanup_crit_edge11
    i32 3, label %entry.cleanup_crit_edge12
    i32 4, label %entry.cleanup_crit_edge13
    i32 11, label %entry.sw.bb1_crit_edge
    i32 13, label %entry.sw.bb1_crit_edge14
    i32 12, label %entry.sw.bb1_crit_edge15
    i32 14, label %entry.sw.bb1_crit_edge16
  ]

entry.sw.bb1_crit_edge16:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb1

entry.sw.bb1_crit_edge15:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb1

entry.sw.bb1_crit_edge14:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb1

entry.cleanup_crit_edge13:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

entry.cleanup_crit_edge12:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

entry.cleanup_crit_edge11:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge14, %entry.sw.bb1_crit_edge15, %entry.sw.bb1_crit_edge16
  %phy_spd_default = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 39
  %3 = ptrtoint ptr %phy_spd_default to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %phy_spd_default, align 4
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %5 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp5.i = icmp eq i32 %6, 1
  br i1 %cmp5.i, label %if.then.i, label %sw.bb1.e1000_write_phy_reg.exit_crit_edge

sw.bb1.e1000_write_phy_reg.exit_crit_edge:        ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i:                                        ; preds = %sw.bb1
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 20) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_write_phy_reg.exit_crit_edge, label %e1000_write_phy_reg.exit.thread

if.then.i.e1000_write_phy_reg.exit_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit.thread:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_write_phy_reg.exit:                         ; preds = %if.then.i.e1000_write_phy_reg.exit_crit_edge, %sw.bb1.e1000_write_phy_reg.exit_crit_edge
  %call13.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 20, i16 noundef zeroext %4) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %e1000_write_phy_reg.exit.do.body_crit_edge, label %e1000_write_phy_reg.exit.cleanup_crit_edge

e1000_write_phy_reg.exit.cleanup_crit_edge:       ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

e1000_write_phy_reg.exit.do.body_crit_edge:       ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body

do.body:                                          ; preds = %e1000_write_phy_reg.exit.do.body_crit_edge, %entry.do.body_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !587
  tail call void @arm_heavy_mb() #6
  %ledctl_default = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 34
  %7 = ptrtoint ptr %ledctl_default to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ledctl_default, align 4
  %9 = tail call i32 @llvm.bswap.i32(i32 %8)
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %11, i32 3584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %9) #6, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %do.body, %e1000_write_phy_reg.exit.cleanup_crit_edge, %e1000_write_phy_reg.exit.thread, %entry.cleanup_crit_edge, %entry.cleanup_crit_edge11, %entry.cleanup_crit_edge12, %entry.cleanup_crit_edge13
  %retval.0 = phi i32 [ %call13.i, %e1000_write_phy_reg.exit.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge11 ], [ 0, %entry.cleanup_crit_edge12 ], [ 0, %entry.cleanup_crit_edge13 ], [ 0, %do.body ], [ %call10.i, %e1000_write_phy_reg.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_led_on(ptr nocapture noundef readonly %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !588
  %4 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mac_type, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.180)
  switch i32 %5, label %sw.default [
    i32 1, label %entry.sw.bb_crit_edge
    i32 2, label %entry.sw.bb_crit_edge51
    i32 3, label %entry.sw.bb_crit_edge52
    i32 4, label %sw.bb4
  ]

entry.sw.bb_crit_edge52:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

entry.sw.bb_crit_edge51:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge51, %entry.sw.bb_crit_edge52
  %or3 = or i32 %3, 4456448
  br label %do.body25

sw.bb4:                                           ; preds = %entry
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %7 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp5 = icmp eq i32 %8, 1
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #8
  %or7 = or i32 %3, 4456448
  br label %do.body25

if.else:                                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #8
  %and = and i32 %3, -4456449
  %or8 = or i32 %and, 4194304
  br label %do.body25

sw.default:                                       ; preds = %entry
  %media_type9 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %9 = ptrtoint ptr %media_type9 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %media_type9, align 4
  %11 = zext i32 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.181)
  switch i32 %10, label %sw.default.do.body25_crit_edge [
    i32 1, label %if.then11
    i32 0, label %do.body
  ]

sw.default.do.body25_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body25

if.then11:                                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  %and12 = and i32 %3, -4456449
  %or13 = or i32 %and12, 4194304
  br label %do.body25

do.body:                                          ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !589
  tail call void @arm_heavy_mb() #6
  %ledctl_mode2 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 36
  %12 = ptrtoint ptr %ledctl_mode2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ledctl_mode2, align 4
  %14 = tail call i32 @llvm.bswap.i32(i32 %13)
  %15 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw, align 4
  %add.ptr22 = getelementptr i8, ptr %16, i32 3584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr22, i32 %14) #6, !srcloc !396
  br label %cleanup

do.body25:                                        ; preds = %if.then11, %sw.default.do.body25_crit_edge, %if.else, %if.then, %sw.bb
  %ctrl.0 = phi i32 [ %or13, %if.then11 ], [ %or7, %if.then ], [ %or8, %if.else ], [ %or3, %sw.bb ], [ %3, %sw.default.do.body25_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !590
  tail call void @arm_heavy_mb() #6
  %17 = tail call i32 @llvm.bswap.i32(i32 %ctrl.0)
  %18 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %19, i32 %17) #6, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %do.body25, %do.body
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_led_off(ptr nocapture noundef readonly %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !591
  %4 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mac_type, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.182)
  switch i32 %5, label %sw.default [
    i32 1, label %entry.sw.bb_crit_edge
    i32 2, label %entry.sw.bb_crit_edge51
    i32 3, label %entry.sw.bb_crit_edge52
    i32 4, label %sw.bb3
  ]

entry.sw.bb_crit_edge52:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

entry.sw.bb_crit_edge51:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge51, %entry.sw.bb_crit_edge52
  %and = and i32 %3, -4456449
  %or = or i32 %and, 4194304
  br label %do.body25

sw.bb3:                                           ; preds = %entry
  %media_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %7 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp4 = icmp eq i32 %8, 1
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #8
  %and5 = and i32 %3, -4456449
  %or6 = or i32 %and5, 4194304
  br label %do.body25

if.else:                                          ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #8
  %or8 = or i32 %3, 4456448
  br label %do.body25

sw.default:                                       ; preds = %entry
  %media_type9 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %9 = ptrtoint ptr %media_type9 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %media_type9, align 4
  %11 = zext i32 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.183)
  switch i32 %10, label %sw.default.do.body25_crit_edge [
    i32 1, label %if.then11
    i32 0, label %do.body
  ]

sw.default.do.body25_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body25

if.then11:                                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  %or13 = or i32 %3, 4456448
  br label %do.body25

do.body:                                          ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !592
  tail call void @arm_heavy_mb() #6
  %ledctl_mode1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 35
  %12 = ptrtoint ptr %ledctl_mode1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ledctl_mode1, align 4
  %14 = tail call i32 @llvm.bswap.i32(i32 %13)
  %15 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw, align 4
  %add.ptr22 = getelementptr i8, ptr %16, i32 3584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr22, i32 %14) #6, !srcloc !396
  br label %cleanup

do.body25:                                        ; preds = %if.then11, %sw.default.do.body25_crit_edge, %if.else, %if.then, %sw.bb
  %ctrl.0 = phi i32 [ %or13, %if.then11 ], [ %or6, %if.then ], [ %or8, %if.else ], [ %or, %sw.bb ], [ %3, %sw.default.do.body25_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !593
  tail call void @arm_heavy_mb() #6
  %17 = tail call i32 @llvm.bswap.i32(i32 %ctrl.0)
  %18 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %19, i32 %17) #6, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %do.body25, %do.body
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_reset_adaptive(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %adaptive_ifs = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 76
  %0 = ptrtoint ptr %adaptive_ifs to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %adaptive_ifs, align 2, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %do.body4, label %if.then

if.then:                                          ; preds = %entry
  %ifs_params_forced = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 77
  %2 = ptrtoint ptr %ifs_params_forced to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %ifs_params_forced, align 1, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %if.then2, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  %current_ifs_val = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 45
  %4 = ptrtoint ptr %current_ifs_val to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 0, ptr %current_ifs_val, align 4
  %ifs_min_val = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 46
  %5 = ptrtoint ptr %ifs_min_val to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 40, ptr %ifs_min_val, align 2
  %ifs_max_val = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 47
  %6 = ptrtoint ptr %ifs_max_val to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 80, ptr %ifs_max_val, align 4
  %ifs_step_size = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 48
  %7 = ptrtoint ptr %ifs_step_size to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 10, ptr %ifs_step_size, align 2
  %ifs_ratio = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 49
  %8 = ptrtoint ptr %ifs_ratio to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 4, ptr %ifs_ratio, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then.if.end_crit_edge
  %in_ifs_mode = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 78
  %9 = ptrtoint ptr %in_ifs_mode to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %in_ifs_mode, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !594
  tail call void @arm_heavy_mb() #6
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %11, i32 1112
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 0) #6, !srcloc !396
  br label %if.end13

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_reset_adaptive.__UNIQUE_ID_ddebug616, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_reset_adaptive, %if.then8)) #6
          to label %if.end13 [label %if.then8], !srcloc !394

if.then8:                                         ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #8
  %call9 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_reset_adaptive.__UNIQUE_ID_ddebug616, ptr noundef %call9, ptr noundef nonnull @.str.49) #6
  br label %if.end13

if.end13:                                         ; preds = %if.then8, %do.body4, %if.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_update_adaptive(ptr noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %adaptive_ifs = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 76
  %0 = ptrtoint ptr %adaptive_ifs to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %adaptive_ifs, align 2, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %do.body50, label %if.then

if.then:                                          ; preds = %entry
  %collision_delta = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 32
  %2 = ptrtoint ptr %collision_delta to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %collision_delta, align 4
  %ifs_ratio = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 49
  %4 = ptrtoint ptr %ifs_ratio to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %ifs_ratio, align 4
  %conv = zext i16 %5 to i32
  %mul = mul i32 %3, %conv
  %tx_packet_delta = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 33
  %6 = ptrtoint ptr %tx_packet_delta to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tx_packet_delta, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %mul, i32 %7)
  %cmp = icmp ugt i32 %mul, %7
  br i1 %cmp, label %if.then2, label %if.else28

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %7)
  %cmp4 = icmp ugt i32 %7, 1000
  br i1 %cmp4, label %if.then6, label %if.then2.if.end59_crit_edge

if.then2.if.end59_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end59

if.then6:                                         ; preds = %if.then2
  %in_ifs_mode = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 78
  %8 = ptrtoint ptr %in_ifs_mode to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %in_ifs_mode, align 4
  %current_ifs_val = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 45
  %9 = ptrtoint ptr %current_ifs_val to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %current_ifs_val, align 4
  %ifs_max_val = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 47
  %11 = ptrtoint ptr %ifs_max_val to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %ifs_max_val, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %10, i16 %12)
  %cmp9 = icmp ult i16 %10, %12
  br i1 %cmp9, label %if.then11, label %if.then6.if.end59_crit_edge

if.then6.if.end59_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end59

if.then11:                                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %cmp14 = icmp eq i16 %10, 0
  br i1 %cmp14, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #8
  %ifs_min_val = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 46
  %13 = ptrtoint ptr %ifs_min_val to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %ifs_min_val, align 2
  br label %do.body

if.else:                                          ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #8
  %ifs_step_size = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 48
  %15 = ptrtoint ptr %ifs_step_size to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %ifs_step_size, align 2
  %add = add i16 %16, %10
  br label %do.body

do.body:                                          ; preds = %if.else, %if.then16
  %storemerge = phi i16 [ %add, %if.else ], [ %14, %if.then16 ]
  %17 = ptrtoint ptr %current_ifs_val to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %storemerge, ptr %current_ifs_val, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !595
  tail call void @arm_heavy_mb() #6
  %18 = ptrtoint ptr %current_ifs_val to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %current_ifs_val, align 4
  %conv23 = zext i16 %19 to i32
  %20 = tail call i32 @llvm.bswap.i32(i32 %conv23)
  %21 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %22, i32 1112
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %20) #6, !srcloc !396
  br label %if.end59

if.else28:                                        ; preds = %if.then
  %in_ifs_mode29 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 78
  %23 = ptrtoint ptr %in_ifs_mode29 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %in_ifs_mode29, align 4, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool30.not = icmp ne i8 %24, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1001, i32 %7)
  %cmp33 = icmp ult i32 %7, 1001
  %or.cond = select i1 %tobool30.not, i1 %cmp33, i1 false
  br i1 %or.cond, label %if.then35, label %if.else28.if.end59_crit_edge

if.else28.if.end59_crit_edge:                     ; preds = %if.else28
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end59

if.then35:                                        ; preds = %if.else28
  call void @__sanitizer_cov_trace_pc() #8
  %current_ifs_val36 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 45
  %25 = ptrtoint ptr %current_ifs_val36 to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 0, ptr %current_ifs_val36, align 4
  %26 = ptrtoint ptr %in_ifs_mode29 to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 0, ptr %in_ifs_mode29, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !596
  tail call void @arm_heavy_mb() #6
  %27 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw, align 4
  %add.ptr45 = getelementptr i8, ptr %28, i32 1112
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr45, i32 0) #6, !srcloc !396
  br label %if.end59

do.body50:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_update_adaptive.__UNIQUE_ID_ddebug617, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_update_adaptive, %if.then54)) #6
          to label %if.end59 [label %if.then54], !srcloc !394

if.then54:                                        ; preds = %do.body50
  call void @__sanitizer_cov_trace_pc() #8
  %call55 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_update_adaptive.__UNIQUE_ID_ddebug617, ptr noundef %call55, ptr noundef nonnull @.str.49) #6
  br label %if.end59

if.end59:                                         ; preds = %if.then54, %do.body50, %if.then35, %if.else28.if.end59_crit_edge, %do.body, %if.then6.if.end59_crit_edge, %if.then2.if.end59_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_get_bus_info(ptr nocapture noundef %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  %.off = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %bus_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 14
  %2 = ptrtoint ptr %bus_type to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %bus_type, align 4
  %bus_speed = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 12
  %3 = ptrtoint ptr %bus_speed to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %bus_speed, align 4
  br label %sw.epilog35

sw.default:                                       ; preds = %entry
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 8
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %7 = tail call i32 @llvm.bswap.i32(i32 %6)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !597
  %and = and i32 %7, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %cond3 = select i1 %tobool.not, i32 1, i32 2
  %bus_type4 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 14
  %8 = ptrtoint ptr %bus_type4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %cond3, ptr %bus_type4, align 4
  %device_id = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 50
  %9 = ptrtoint ptr %device_id to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %device_id, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4125, i16 %10)
  %cmp5 = icmp eq i16 %10, 4125
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #8
  %cond10 = select i1 %tobool.not, i32 2, i32 4
  br label %if.end30

if.else:                                          ; preds = %sw.default
  br i1 %tobool.not, label %if.then15, label %if.else20

if.then15:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %and16 = and i32 %7, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16)
  %tobool17.not = icmp eq i32 %and16, 0
  %cond18 = select i1 %tobool17.not, i32 1, i32 2
  br label %if.end30

if.else20:                                        ; preds = %if.else
  %11 = trunc i32 %7 to i16
  %trunc = and i16 %11, -16384
  %12 = zext i16 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.184)
  switch i16 %trunc, label %sw.default28 [
    i16 0, label %if.else20.if.end30_crit_edge
    i16 16384, label %sw.bb24
    i16 -32768, label %sw.bb26
  ]

if.else20.if.end30_crit_edge:                     ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end30

sw.bb24:                                          ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end30

sw.bb26:                                          ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end30

sw.default28:                                     ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end30

if.end30:                                         ; preds = %sw.default28, %sw.bb26, %sw.bb24, %if.else20.if.end30_crit_edge, %if.then15, %if.then
  %cond18.sink = phi i32 [ %cond18, %if.then15 ], [ 6, %sw.default28 ], [ 5, %sw.bb26 ], [ 3, %sw.bb24 ], [ %cond10, %if.then ], [ 2, %if.else20.if.end30_crit_edge ]
  %bus_speed19 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 12
  %13 = ptrtoint ptr %bus_speed19 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %cond18.sink, ptr %bus_speed19, align 4
  %and31 = and i32 %7, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  %cond33 = select i1 %tobool32.not, i32 1, i32 2
  br label %sw.epilog35

sw.epilog35:                                      ; preds = %if.end30, %sw.bb
  %cond33.sink = phi i32 [ %cond33, %if.end30 ], [ 0, %sw.bb ]
  %bus_width34 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 13
  %14 = ptrtoint ptr %bus_width34 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %cond33.sink, ptr %bus_width34, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_enable_mng_pass_thru(ptr nocapture noundef readonly %hw) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %asf_firmware_present = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 19
  %0 = ptrtoint ptr %asf_firmware_present to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %asf_firmware_present, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end12_crit_edge, label %if.then

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %3, i32 22560
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %5 = tail call i32 @llvm.bswap.i32(i32 %4)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !598
  %6 = and i32 %5, 1179648
  call void @__sanitizer_cov_trace_const_cmp4(i32 1179648, i32 %6)
  %.not = icmp eq i32 %6, 1179648
  br i1 %.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %if.then
  %7 = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %if.end.cleanup_crit_edge, label %if.end.if.end12_crit_edge

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end12:                                         ; preds = %if.end.if.end12_crit_edge, %entry.if.end12_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end12 ], [ 0, %if.then.cleanup_crit_edge ], [ 1, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_copper_link_preconfig(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %eeprom_data.i = alloca i16, align 2
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %1 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %2) #6, !srcloc !392
  %4 = tail call i32 @llvm.bswap.i32(i32 %3)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !599
  %5 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %6)
  %cmp3 = icmp ugt i32 %6, 3
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %or = and i32 %4, -6209
  %and = or i32 %or, 64
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !600
  tail call void @arm_heavy_mb() #6
  %7 = tail call i32 @llvm.bswap.i32(i32 %and)
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %9, i32 %7) #6, !srcloc !396
  br label %if.end20

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %or9 = or i32 %4, 6208
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !601
  tail call void @arm_heavy_mb() #6
  %10 = tail call i32 @llvm.bswap.i32(i32 %or9)
  %11 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %12, i32 %10) #6, !srcloc !396
  %call18 = tail call i32 @e1000_phy_hw_reset(ptr noundef %hw)
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then
  %call21 = tail call fastcc i32 @e1000_detect_gig_phy(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %do.body40, label %do.body25

do.body25:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_preconfig.__UNIQUE_ID_ddebug524, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_preconfig, %if.then31)) #6
          to label %cleanup [label %if.then31], !srcloc !394

if.then31:                                        ; preds = %do.body25
  call void @__sanitizer_cov_trace_pc() #8
  %call32 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_preconfig.__UNIQUE_ID_ddebug524, ptr noundef %call32, ptr noundef nonnull @.str.65) #6
  br label %cleanup

do.body40:                                        ; preds = %if.end20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_preconfig.__UNIQUE_ID_ddebug525, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_preconfig, %if.then52)) #6
          to label %do.end58 [label %if.then52], !srcloc !394

if.then52:                                        ; preds = %do.body40
  call void @__sanitizer_cov_trace_pc() #8
  %call53 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %phy_id = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 22
  %13 = ptrtoint ptr %phy_id to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %phy_id, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_preconfig.__UNIQUE_ID_ddebug525, ptr noundef %call53, ptr noundef nonnull @.str.66, i32 noundef %14) #6
  br label %do.end58

do.end58:                                         ; preds = %if.then52, %do.body40
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data.i) #6
  %15 = ptrtoint ptr %eeprom_data.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 -1, ptr %eeprom_data.i, align 2, !annotation !414
  %16 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %17)
  %cmp.i = icmp eq i32 %17, 7
  br i1 %cmp.i, label %land.lhs.true.i, label %do.end58.if.end62_crit_edge

do.end58.if.end62_crit_edge:                      ; preds = %do.end58
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end62

land.lhs.true.i:                                  ; preds = %do.end58
  %media_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 6
  %18 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp1.i = icmp eq i32 %19, 0
  br i1 %cmp1.i, label %if.then.i, label %land.lhs.true.i.if.end62thread-pre-split_crit_edge

land.lhs.true.i.if.end62thread-pre-split_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end62thread-pre-split

if.then.i:                                        ; preds = %land.lhs.true.i
  tail call void @mutex_lock_nested(ptr noundef nonnull @e1000_eeprom_lock, i32 noundef 0) #6
  %call.i.i = call fastcc i32 @e1000_do_read_eeprom(ptr noundef %hw, i16 noundef zeroext 7, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data.i) #6
  call void @mutex_unlock(ptr noundef nonnull @e1000_eeprom_lock) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i.e1000_set_phy_mode.exit_crit_edge

if.then.i.e1000_set_phy_mode.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_phy_mode.exit

if.end.i:                                         ; preds = %if.then.i
  %20 = ptrtoint ptr %eeprom_data.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %eeprom_data.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -2, i16 %21)
  %22 = icmp sgt i16 %21, -2
  br i1 %22, label %if.end.i.if.end62thread-pre-split_crit_edge, label %if.then8.i

if.end.i.if.end62thread-pre-split_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end62thread-pre-split

if.then8.i:                                       ; preds = %if.end.i
  %call2.i.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %23 = ptrtoint ptr %phy_type.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %phy_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp5.i.i = icmp eq i32 %24, 1
  br i1 %cmp5.i.i, label %if.then.i.i, label %if.then8.i.e1000_write_phy_reg.exit.i_crit_edge

if.then8.i.e1000_write_phy_reg.exit.i_crit_edge:  ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i

if.then.i.i:                                      ; preds = %if.then8.i
  %call10.i.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 29) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool.not.i.i = icmp eq i32 %call10.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i.e1000_write_phy_reg.exit.i_crit_edge, label %e1000_write_phy_reg.exit.thread.i

if.then.i.i.e1000_write_phy_reg.exit.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i

e1000_write_phy_reg.exit.thread.i:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #8
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i) #6
  br label %e1000_set_phy_mode.exit

e1000_write_phy_reg.exit.i:                       ; preds = %if.then.i.i.e1000_write_phy_reg.exit.i_crit_edge, %if.then8.i.e1000_write_phy_reg.exit.i_crit_edge
  %call13.i.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext 11) #6
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i)
  %tobool10.not.i = icmp eq i32 %call13.i.i, 0
  br i1 %tobool10.not.i, label %if.end12.i, label %e1000_write_phy_reg.exit.i.e1000_set_phy_mode.exit_crit_edge

e1000_write_phy_reg.exit.i.e1000_set_phy_mode.exit_crit_edge: ; preds = %e1000_write_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_phy_mode.exit

if.end12.i:                                       ; preds = %e1000_write_phy_reg.exit.i
  %call13.i = call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext -32508) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end16.i, label %if.end12.i.e1000_set_phy_mode.exit_crit_edge

if.end12.i.e1000_set_phy_mode.exit_crit_edge:     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_phy_mode.exit

if.end16.i:                                       ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #8
  %phy_reset_disable.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 71
  %25 = ptrtoint ptr %phy_reset_disable.i to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 0, ptr %phy_reset_disable.i, align 1
  br label %if.end62thread-pre-split

e1000_set_phy_mode.exit:                          ; preds = %if.end12.i.e1000_set_phy_mode.exit_crit_edge, %e1000_write_phy_reg.exit.i.e1000_set_phy_mode.exit_crit_edge, %e1000_write_phy_reg.exit.thread.i, %if.then.i.e1000_set_phy_mode.exit_crit_edge
  %retval.0.i134 = phi i32 [ -1, %if.then.i.e1000_set_phy_mode.exit_crit_edge ], [ %call13.i.i, %e1000_write_phy_reg.exit.i.e1000_set_phy_mode.exit_crit_edge ], [ %call13.i, %if.end12.i.e1000_set_phy_mode.exit_crit_edge ], [ %call10.i.i, %e1000_write_phy_reg.exit.thread.i ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data.i) #6
  br label %cleanup

if.end62thread-pre-split:                         ; preds = %if.end16.i, %if.end.i.if.end62thread-pre-split_crit_edge, %land.lhs.true.i.if.end62thread-pre-split_crit_edge
  %26 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pr = load i32, ptr %mac_type, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.end62thread-pre-split, %do.end58.if.end62_crit_edge
  %27 = phi i32 [ %.pr, %if.end62thread-pre-split ], [ %17, %do.end58.if.end62_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data.i) #6
  %28 = zext i32 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.185)
  switch i32 %27, label %if.end62.if.end72_crit_edge [
    i32 7, label %if.end62.if.then67_crit_edge
    i32 10, label %if.end62.if.then67_crit_edge152
  ]

if.end62.if.then67_crit_edge152:                  ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then67

if.end62.if.then67_crit_edge:                     ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then67

if.end62.if.end72_crit_edge:                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end72

if.then67:                                        ; preds = %if.end62.if.then67_crit_edge, %if.end62.if.then67_crit_edge152
  %call2.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %29 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp5.i = icmp eq i32 %30, 1
  br i1 %cmp5.i, label %if.then.i136, label %if.then67.if.end12.i138_crit_edge

if.then67.if.end12.i138_crit_edge:                ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i138

if.then.i136:                                     ; preds = %if.then67
  %call10.i = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i135 = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i135, label %if.then.i136.if.end12.i138_crit_edge, label %if.then.i136.e1000_read_phy_reg.exit_crit_edge

if.then.i136.e1000_read_phy_reg.exit_crit_edge:   ; preds = %if.then.i136
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i136.if.end12.i138_crit_edge:             ; preds = %if.then.i136
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i138

if.end12.i138:                                    ; preds = %if.then.i136.if.end12.i138_crit_edge, %if.then67.if.end12.i138_crit_edge
  %call13.i137 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %phy_data) #6
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit:                          ; preds = %if.end12.i138, %if.then.i136.e1000_read_phy_reg.exit_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  %31 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %phy_data, align 2
  %33 = or i16 %32, 8
  store i16 %33, ptr %phy_data, align 2
  %call2.i139 = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %34 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %cmp5.i141 = icmp eq i32 %35, 1
  br i1 %cmp5.i141, label %if.then.i144, label %e1000_read_phy_reg.exit.if.end12.i146_crit_edge

e1000_read_phy_reg.exit.if.end12.i146_crit_edge:  ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i146

if.then.i144:                                     ; preds = %e1000_read_phy_reg.exit
  %call10.i142 = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i142)
  %tobool.not.i143 = icmp eq i32 %call10.i142, 0
  br i1 %tobool.not.i143, label %if.then.i144.if.end12.i146_crit_edge, label %if.then.i144.e1000_write_phy_reg.exit_crit_edge

if.then.i144.e1000_write_phy_reg.exit_crit_edge:  ; preds = %if.then.i144
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i144.if.end12.i146_crit_edge:             ; preds = %if.then.i144
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i146

if.end12.i146:                                    ; preds = %if.then.i144.if.end12.i146_crit_edge, %e1000_read_phy_reg.exit.if.end12.i146_crit_edge
  %call13.i145 = call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext %33) #6
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit:                         ; preds = %if.end12.i146, %if.then.i144.e1000_write_phy_reg.exit_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i139) #6
  br label %if.end72

if.end72:                                         ; preds = %e1000_write_phy_reg.exit, %if.end62.if.end72_crit_edge
  %36 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %mac_type, align 4
  %38 = zext i32 %37 to i64
  call void @__sanitizer_cov_trace_switch(i64 %38, ptr @__sancov_gen_cov_switch_values.186)
  switch i32 %37, label %if.end72.cleanup_crit_edge [
    i32 14, label %if.end72.if.then92_crit_edge
    i32 13, label %if.end72.if.then92_crit_edge153
    i32 12, label %if.end72.if.then92_crit_edge154
    i32 11, label %if.end72.if.then92_crit_edge155
    i32 3, label %if.end72.if.then92_crit_edge156
    i32 2, label %if.end72.if.then92_crit_edge157
    i32 1, label %if.end72.if.then92_crit_edge158
    i32 0, label %if.end72.if.then92_crit_edge159
  ]

if.end72.if.then92_crit_edge159:                  ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then92

if.end72.if.then92_crit_edge158:                  ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then92

if.end72.if.then92_crit_edge157:                  ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then92

if.end72.if.then92_crit_edge156:                  ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then92

if.end72.if.then92_crit_edge155:                  ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then92

if.end72.if.then92_crit_edge154:                  ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then92

if.end72.if.then92_crit_edge153:                  ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then92

if.end72.if.then92_crit_edge:                     ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then92

if.end72.cleanup_crit_edge:                       ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then92:                                        ; preds = %if.end72.if.then92_crit_edge, %if.end72.if.then92_crit_edge153, %if.end72.if.then92_crit_edge154, %if.end72.if.then92_crit_edge155, %if.end72.if.then92_crit_edge156, %if.end72.if.then92_crit_edge157, %if.end72.if.then92_crit_edge158, %if.end72.if.then92_crit_edge159
  %phy_reset_disable = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 71
  %39 = ptrtoint ptr %phy_reset_disable to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 0, ptr %phy_reset_disable, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.then92, %if.end72.cleanup_crit_edge, %e1000_set_phy_mode.exit, %if.then31, %do.body25
  %retval.0 = phi i32 [ %call21, %if.then31 ], [ %retval.0.i134, %e1000_set_phy_mode.exit ], [ 0, %if.end72.cleanup_crit_edge ], [ 0, %if.then92 ], [ %call21, %do.body25 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_copper_link_igp_setup(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_data.i = alloca i16, align 2
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %phy_reset_disable = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 71
  %1 = ptrtoint ptr %phy_reset_disable to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %phy_reset_disable, align 1, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup159_crit_edge

entry.cleanup159_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

if.end:                                           ; preds = %entry
  %call = tail call i32 @e1000_phy_reset(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end13, label %do.body3

do.body3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_igp_setup.__UNIQUE_ID_ddebug526, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_igp_setup, %if.then8)) #6
          to label %cleanup159 [label %if.then8], !srcloc !394

if.then8:                                         ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #8
  %call9 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_igp_setup.__UNIQUE_ID_ddebug526, ptr noundef %call9, ptr noundef nonnull @.str.72) #6
  br label %cleanup159

if.end13:                                         ; preds = %if.end
  tail call void @msleep(i32 noundef 15) #6
  %3 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %add.ptr = getelementptr i8, ptr %4, i32 3584
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !602
  %6 = and i32 %5, -983048
  %7 = or i32 %6, 196615
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !603
  tail call void @arm_heavy_mb() #6
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr24 = getelementptr i8, ptr %9, i32 3584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr24, i32 %7) #6, !srcloc !396
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %10 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp25 = icmp eq i32 %11, 1
  br i1 %cmp25, label %if.end.i, label %if.end13.if.end51_crit_edge

if.end13.if.end51_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end51

if.end.i:                                         ; preds = %if.end13
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data.i) #6
  %12 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 -1, ptr %phy_data.i, align 2, !annotation !414
  %13 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mac_type, align 4
  %15 = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.187)
  switch i32 %14, label %if.end.i.if.then9.i_crit_edge [
    i32 12, label %if.end.i.if.then4.i_crit_edge
    i32 14, label %if.end.i.if.then4.i_crit_edge241
  ]

if.end.i.if.then4.i_crit_edge241:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then4.i

if.end.i.if.then4.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then4.i

if.end.i.if.then9.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then9.i

if.then4.i:                                       ; preds = %if.end.i.if.then4.i_crit_edge, %if.end.i.if.then4.i_crit_edge241
  %call2.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %16 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %17)
  %cmp5.i.i = icmp eq i32 %17, 1
  br i1 %cmp5.i.i, label %if.then.i.i, label %if.then4.i.e1000_read_phy_reg.exit.i_crit_edge

if.then4.i.e1000_read_phy_reg.exit.i_crit_edge:   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit.i

if.then.i.i:                                      ; preds = %if.then4.i
  %call10.i.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 20) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool.not.i.i = icmp eq i32 %call10.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i.e1000_read_phy_reg.exit.i_crit_edge, label %if.then.i.i.do.body31.sink.split_crit_edge

if.then.i.i.do.body31.sink.split_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31.sink.split

if.then.i.i.e1000_read_phy_reg.exit.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit.i

e1000_read_phy_reg.exit.i:                        ; preds = %if.then.i.i.e1000_read_phy_reg.exit.i_crit_edge, %if.then4.i.e1000_read_phy_reg.exit.i_crit_edge
  %call13.i.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 20, ptr noundef nonnull %phy_data.i) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i)
  %tobool.not.i = icmp eq i32 %call13.i.i, 0
  br i1 %tobool.not.i, label %if.then9thread-pre-split.i, label %e1000_read_phy_reg.exit.i.do.body31_crit_edge

e1000_read_phy_reg.exit.i.do.body31_crit_edge:    ; preds = %e1000_read_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31

if.then9thread-pre-split.i:                       ; preds = %e1000_read_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  %18 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pr.i = load i32, ptr %mac_type, align 4
  br label %if.then9.i

if.then9.i:                                       ; preds = %if.then9thread-pre-split.i, %if.end.i.if.then9.i_crit_edge
  %19 = phi i32 [ %.pr.i, %if.then9thread-pre-split.i ], [ %14, %if.end.i.if.then9.i_crit_edge ]
  %20 = zext i32 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.188)
  switch i32 %19, label %if.then9.i.if.end21.i_crit_edge [
    i32 12, label %if.then9.i.if.then15.i_crit_edge
    i32 14, label %if.then9.i.if.then15.i_crit_edge242
  ]

if.then9.i.if.then15.i_crit_edge242:              ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then15.i

if.then9.i.if.then15.i_crit_edge:                 ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then15.i

if.then9.i.if.end21.i_crit_edge:                  ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end21.i

if.then15.i:                                      ; preds = %if.then9.i.if.then15.i_crit_edge, %if.then9.i.if.then15.i_crit_edge242
  %21 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %phy_data.i, align 2
  %23 = and i16 %22, -17
  store i16 %23, ptr %phy_data.i, align 2
  %call2.i1.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %24 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %25)
  %cmp5.i3.i = icmp eq i32 %25, 1
  br i1 %cmp5.i3.i, label %if.then.i6.i, label %if.then15.i.e1000_write_phy_reg.exit.i_crit_edge

if.then15.i.e1000_write_phy_reg.exit.i_crit_edge: ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i

if.then.i6.i:                                     ; preds = %if.then15.i
  %call10.i4.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 20) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i4.i)
  %tobool.not.i5.i = icmp eq i32 %call10.i4.i, 0
  br i1 %tobool.not.i5.i, label %if.then.i6.i.e1000_write_phy_reg.exit.i_crit_edge, label %if.then.i6.i.do.body31.sink.split_crit_edge

if.then.i6.i.do.body31.sink.split_crit_edge:      ; preds = %if.then.i6.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31.sink.split

if.then.i6.i.e1000_write_phy_reg.exit.i_crit_edge: ; preds = %if.then.i6.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit.i

e1000_write_phy_reg.exit.i:                       ; preds = %if.then.i6.i.e1000_write_phy_reg.exit.i_crit_edge, %if.then15.i.e1000_write_phy_reg.exit.i_crit_edge
  %call13.i7.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 20, i16 noundef zeroext %23) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i1.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i7.i)
  %tobool18.not.i = icmp eq i32 %call13.i7.i, 0
  br i1 %tobool18.not.i, label %e1000_write_phy_reg.exit.i.if.end21.i_crit_edge, label %e1000_write_phy_reg.exit.i.do.body31_crit_edge

e1000_write_phy_reg.exit.i.do.body31_crit_edge:   ; preds = %e1000_write_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31

e1000_write_phy_reg.exit.i.if.end21.i_crit_edge:  ; preds = %e1000_write_phy_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end21.i

if.end21.i:                                       ; preds = %e1000_write_phy_reg.exit.i.if.end21.i_crit_edge, %if.then9.i.if.end21.i_crit_edge
  %smart_speed.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 64
  %26 = ptrtoint ptr %smart_speed.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %smart_speed.i, align 4
  %28 = zext i32 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.189)
  switch i32 %27, label %if.end21.i.e1000_set_d3_lplu_state.exit_crit_edge [
    i32 1, label %if.then24.i
    i32 2, label %if.then38.i
  ]

if.end21.i.e1000_set_d3_lplu_state.exit_crit_edge: ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_d3_lplu_state.exit

if.then24.i:                                      ; preds = %if.end21.i
  %call2.i9.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %29 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp5.i11.i = icmp eq i32 %30, 1
  br i1 %cmp5.i11.i, label %if.then.i14.i, label %if.then24.i.e1000_read_phy_reg.exit18.i_crit_edge

if.then24.i.e1000_read_phy_reg.exit18.i_crit_edge: ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit18.i

if.then.i14.i:                                    ; preds = %if.then24.i
  %call10.i12.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i12.i)
  %tobool.not.i13.i = icmp eq i32 %call10.i12.i, 0
  br i1 %tobool.not.i13.i, label %if.then.i14.i.e1000_read_phy_reg.exit18.i_crit_edge, label %if.then.i14.i.do.body31.sink.split_crit_edge

if.then.i14.i.do.body31.sink.split_crit_edge:     ; preds = %if.then.i14.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31.sink.split

if.then.i14.i.e1000_read_phy_reg.exit18.i_crit_edge: ; preds = %if.then.i14.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit18.i

e1000_read_phy_reg.exit18.i:                      ; preds = %if.then.i14.i.e1000_read_phy_reg.exit18.i_crit_edge, %if.then24.i.e1000_read_phy_reg.exit18.i_crit_edge
  %call13.i15.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %phy_data.i) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i9.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i15.i)
  %tobool26.not.i = icmp eq i32 %call13.i15.i, 0
  br i1 %tobool26.not.i, label %if.end28.i, label %e1000_read_phy_reg.exit18.i.do.body31_crit_edge

e1000_read_phy_reg.exit18.i.do.body31_crit_edge:  ; preds = %e1000_read_phy_reg.exit18.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31

if.end28.i:                                       ; preds = %e1000_read_phy_reg.exit18.i
  %31 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %phy_data.i, align 2
  %33 = or i16 %32, 128
  %call2.i19.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %34 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %cmp5.i21.i = icmp eq i32 %35, 1
  br i1 %cmp5.i21.i, label %if.then.i24.i, label %if.end28.i.e1000_write_phy_reg.exit28.i_crit_edge

if.end28.i.e1000_write_phy_reg.exit28.i_crit_edge: ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit28.i

if.then.i24.i:                                    ; preds = %if.end28.i
  %call10.i22.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i22.i)
  %tobool.not.i23.i = icmp eq i32 %call10.i22.i, 0
  br i1 %tobool.not.i23.i, label %if.then.i24.i.e1000_write_phy_reg.exit28.i_crit_edge, label %if.then.i24.i.do.body31.sink.split_crit_edge

if.then.i24.i.do.body31.sink.split_crit_edge:     ; preds = %if.then.i24.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31.sink.split

if.then.i24.i.e1000_write_phy_reg.exit28.i_crit_edge: ; preds = %if.then.i24.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit28.i

e1000_write_phy_reg.exit28.i:                     ; preds = %if.then.i24.i.e1000_write_phy_reg.exit28.i_crit_edge, %if.end28.i.e1000_write_phy_reg.exit28.i_crit_edge
  %call13.i25.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext %33) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i19.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i25.i)
  %tobool32.not.i = icmp eq i32 %call13.i25.i, 0
  br i1 %tobool32.not.i, label %e1000_write_phy_reg.exit28.i.e1000_set_d3_lplu_state.exit_crit_edge, label %e1000_write_phy_reg.exit28.i.do.body31_crit_edge

e1000_write_phy_reg.exit28.i.do.body31_crit_edge: ; preds = %e1000_write_phy_reg.exit28.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31

e1000_write_phy_reg.exit28.i.e1000_set_d3_lplu_state.exit_crit_edge: ; preds = %e1000_write_phy_reg.exit28.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_d3_lplu_state.exit

if.then38.i:                                      ; preds = %if.end21.i
  %call2.i29.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %36 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %37)
  %cmp5.i31.i = icmp eq i32 %37, 1
  br i1 %cmp5.i31.i, label %if.then.i34.i, label %if.then38.i.e1000_read_phy_reg.exit38.i_crit_edge

if.then38.i.e1000_read_phy_reg.exit38.i_crit_edge: ; preds = %if.then38.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit38.i

if.then.i34.i:                                    ; preds = %if.then38.i
  %call10.i32.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i32.i)
  %tobool.not.i33.i = icmp eq i32 %call10.i32.i, 0
  br i1 %tobool.not.i33.i, label %if.then.i34.i.e1000_read_phy_reg.exit38.i_crit_edge, label %if.then.i34.i.do.body31.sink.split_crit_edge

if.then.i34.i.do.body31.sink.split_crit_edge:     ; preds = %if.then.i34.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31.sink.split

if.then.i34.i.e1000_read_phy_reg.exit38.i_crit_edge: ; preds = %if.then.i34.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit38.i

e1000_read_phy_reg.exit38.i:                      ; preds = %if.then.i34.i.e1000_read_phy_reg.exit38.i_crit_edge, %if.then38.i.e1000_read_phy_reg.exit38.i_crit_edge
  %call13.i35.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %phy_data.i) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i29.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i35.i)
  %tobool40.not.i = icmp eq i32 %call13.i35.i, 0
  br i1 %tobool40.not.i, label %if.end42.i, label %e1000_read_phy_reg.exit38.i.do.body31_crit_edge

e1000_read_phy_reg.exit38.i.do.body31_crit_edge:  ; preds = %e1000_read_phy_reg.exit38.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31

if.end42.i:                                       ; preds = %e1000_read_phy_reg.exit38.i
  %38 = ptrtoint ptr %phy_data.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %phy_data.i, align 2
  %40 = and i16 %39, -129
  store i16 %40, ptr %phy_data.i, align 2
  %call2.i39.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %41 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %42)
  %cmp5.i41.i = icmp eq i32 %42, 1
  br i1 %cmp5.i41.i, label %if.then.i44.i, label %if.end42.i.e1000_write_phy_reg.exit48.i_crit_edge

if.end42.i.e1000_write_phy_reg.exit48.i_crit_edge: ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit48.i

if.then.i44.i:                                    ; preds = %if.end42.i
  %call10.i42.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i42.i)
  %tobool.not.i43.i = icmp eq i32 %call10.i42.i, 0
  br i1 %tobool.not.i43.i, label %if.then.i44.i.e1000_write_phy_reg.exit48.i_crit_edge, label %if.then.i44.i.do.body31.sink.split_crit_edge

if.then.i44.i.do.body31.sink.split_crit_edge:     ; preds = %if.then.i44.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31.sink.split

if.then.i44.i.e1000_write_phy_reg.exit48.i_crit_edge: ; preds = %if.then.i44.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit48.i

e1000_write_phy_reg.exit48.i:                     ; preds = %if.then.i44.i.e1000_write_phy_reg.exit48.i_crit_edge, %if.end42.i.e1000_write_phy_reg.exit48.i_crit_edge
  %call13.i45.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext %40) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i39.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i45.i)
  %tobool47.not.i = icmp eq i32 %call13.i45.i, 0
  br i1 %tobool47.not.i, label %e1000_write_phy_reg.exit48.i.e1000_set_d3_lplu_state.exit_crit_edge, label %e1000_write_phy_reg.exit48.i.do.body31_crit_edge

e1000_write_phy_reg.exit48.i.do.body31_crit_edge: ; preds = %e1000_write_phy_reg.exit48.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body31

e1000_write_phy_reg.exit48.i.e1000_set_d3_lplu_state.exit_crit_edge: ; preds = %e1000_write_phy_reg.exit48.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_d3_lplu_state.exit

e1000_set_d3_lplu_state.exit:                     ; preds = %e1000_write_phy_reg.exit48.i.e1000_set_d3_lplu_state.exit_crit_edge, %e1000_write_phy_reg.exit28.i.e1000_set_d3_lplu_state.exit_crit_edge, %if.end21.i.e1000_set_d3_lplu_state.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data.i) #6
  br label %if.end51

do.body31.sink.split:                             ; preds = %if.then.i44.i.do.body31.sink.split_crit_edge, %if.then.i34.i.do.body31.sink.split_crit_edge, %if.then.i24.i.do.body31.sink.split_crit_edge, %if.then.i14.i.do.body31.sink.split_crit_edge, %if.then.i6.i.do.body31.sink.split_crit_edge, %if.then.i.i.do.body31.sink.split_crit_edge
  %call2.i.i.sink = phi i32 [ %call2.i.i, %if.then.i.i.do.body31.sink.split_crit_edge ], [ %call2.i1.i, %if.then.i6.i.do.body31.sink.split_crit_edge ], [ %call2.i9.i, %if.then.i14.i.do.body31.sink.split_crit_edge ], [ %call2.i19.i, %if.then.i24.i.do.body31.sink.split_crit_edge ], [ %call2.i29.i, %if.then.i34.i.do.body31.sink.split_crit_edge ], [ %call2.i39.i, %if.then.i44.i.do.body31.sink.split_crit_edge ]
  %retval.0.i218.ph.ph = phi i32 [ %call10.i.i, %if.then.i.i.do.body31.sink.split_crit_edge ], [ %call10.i4.i, %if.then.i6.i.do.body31.sink.split_crit_edge ], [ %call10.i12.i, %if.then.i14.i.do.body31.sink.split_crit_edge ], [ %call10.i22.i, %if.then.i24.i.do.body31.sink.split_crit_edge ], [ %call10.i32.i, %if.then.i34.i.do.body31.sink.split_crit_edge ], [ %call10.i42.i, %if.then.i44.i.do.body31.sink.split_crit_edge ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i.i.sink) #6
  br label %do.body31

do.body31:                                        ; preds = %do.body31.sink.split, %e1000_write_phy_reg.exit48.i.do.body31_crit_edge, %e1000_read_phy_reg.exit38.i.do.body31_crit_edge, %e1000_write_phy_reg.exit28.i.do.body31_crit_edge, %e1000_read_phy_reg.exit18.i.do.body31_crit_edge, %e1000_write_phy_reg.exit.i.do.body31_crit_edge, %e1000_read_phy_reg.exit.i.do.body31_crit_edge
  %retval.0.i218.ph = phi i32 [ %call13.i45.i, %e1000_write_phy_reg.exit48.i.do.body31_crit_edge ], [ %call13.i35.i, %e1000_read_phy_reg.exit38.i.do.body31_crit_edge ], [ %call13.i25.i, %e1000_write_phy_reg.exit28.i.do.body31_crit_edge ], [ %call13.i15.i, %e1000_read_phy_reg.exit18.i.do.body31_crit_edge ], [ %call13.i7.i, %e1000_write_phy_reg.exit.i.do.body31_crit_edge ], [ %call13.i.i, %e1000_read_phy_reg.exit.i.do.body31_crit_edge ], [ %retval.0.i218.ph.ph, %do.body31.sink.split ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data.i) #6
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_igp_setup.__UNIQUE_ID_ddebug527, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_igp_setup, %if.then43)) #6
          to label %cleanup159 [label %if.then43], !srcloc !394

if.then43:                                        ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #8
  %call44 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_igp_setup.__UNIQUE_ID_ddebug527, ptr noundef %call44, ptr noundef nonnull @.str.73) #6
  br label %cleanup159

if.end51:                                         ; preds = %e1000_set_d3_lplu_state.exit, %if.end13.if.end51_crit_edge
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %43 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %44)
  %cmp5.i = icmp eq i32 %44, 1
  br i1 %cmp5.i, label %if.then.i, label %if.end51.e1000_read_phy_reg.exit_crit_edge

if.end51.e1000_read_phy_reg.exit_crit_edge:       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %if.end51
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 18) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i220 = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i220, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup159

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %if.end51.e1000_read_phy_reg.exit_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 18, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool53.not = icmp eq i32 %call13.i, 0
  br i1 %tobool53.not, label %if.end55, label %e1000_read_phy_reg.exit.cleanup159_crit_edge

e1000_read_phy_reg.exit.cleanup159_crit_edge:     ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

if.end55:                                         ; preds = %e1000_read_phy_reg.exit
  %45 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %mac_type, align 4
  %47 = zext i32 %46 to i64
  call void @__sanitizer_cov_trace_switch(i64 %47, ptr @__sancov_gen_cov_switch_values.190)
  switch i32 %46, label %if.else [
    i32 11, label %if.end55.if.then60_crit_edge
    i32 13, label %if.end55.if.then60_crit_edge243
  ]

if.end55.if.then60_crit_edge243:                  ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then60

if.end55.if.then60_crit_edge:                     ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then60

if.then60:                                        ; preds = %if.end55.if.then60_crit_edge, %if.end55.if.then60_crit_edge243
  %dsp_config_state = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 65
  %48 = ptrtoint ptr %dsp_config_state to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %dsp_config_state, align 4
  %49 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %phy_data, align 2
  %51 = and i16 %50, -12289
  store i16 %51, ptr %phy_data, align 2
  %mdix = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 56
  %52 = ptrtoint ptr %mdix to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 1, ptr %mdix, align 4
  br label %if.end80

if.else:                                          ; preds = %if.end55
  %dsp_config_state63 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 65
  %53 = ptrtoint ptr %dsp_config_state63 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 1, ptr %dsp_config_state63, align 4
  %54 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %phy_data, align 2
  %mdix67 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 56
  %56 = ptrtoint ptr %mdix67 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %mdix67, align 4
  %58 = zext i8 %57 to i64
  call void @__sanitizer_cov_trace_switch(i64 %58, ptr @__sancov_gen_cov_switch_values.191)
  switch i8 %57, label %sw.default [
    i8 1, label %sw.bb
    i8 2, label %sw.bb72
  ]

sw.bb:                                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %59 = and i16 %55, -12289
  %60 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 %59, ptr %phy_data, align 2
  br label %if.end80

sw.bb72:                                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %61 = and i16 %55, -12289
  %62 = or i16 %61, 8192
  %63 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 %62, ptr %phy_data, align 2
  br label %if.end80

sw.default:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %64 = or i16 %55, 4096
  %65 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %64, ptr %phy_data, align 2
  br label %if.end80

if.end80:                                         ; preds = %sw.default, %sw.bb72, %sw.bb, %if.then60
  %66 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %phy_data, align 2
  %call2.i221 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %68 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %69)
  %cmp5.i223 = icmp eq i32 %69, 1
  br i1 %cmp5.i223, label %if.then.i226, label %if.end80.e1000_write_phy_reg.exit_crit_edge

if.end80.e1000_write_phy_reg.exit_crit_edge:      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i226:                                     ; preds = %if.end80
  %call10.i224 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 18) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i224)
  %tobool.not.i225 = icmp eq i32 %call10.i224, 0
  br i1 %tobool.not.i225, label %if.then.i226.e1000_write_phy_reg.exit_crit_edge, label %e1000_write_phy_reg.exit.thread

if.then.i226.e1000_write_phy_reg.exit_crit_edge:  ; preds = %if.then.i226
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit.thread:                  ; preds = %if.then.i226
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i221) #6
  br label %cleanup159

e1000_write_phy_reg.exit:                         ; preds = %if.then.i226.e1000_write_phy_reg.exit_crit_edge, %if.end80.e1000_write_phy_reg.exit_crit_edge
  %call13.i227 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 18, i16 noundef zeroext %67) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i221) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i227)
  %tobool82.not = icmp eq i32 %call13.i227, 0
  br i1 %tobool82.not, label %if.end84, label %e1000_write_phy_reg.exit.cleanup159_crit_edge

e1000_write_phy_reg.exit.cleanup159_crit_edge:    ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

if.end84:                                         ; preds = %e1000_write_phy_reg.exit
  %autoneg = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 55
  %70 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %autoneg, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %71)
  %tobool85.not = icmp eq i8 %71, 0
  br i1 %tobool85.not, label %if.end84.if.end158_crit_edge, label %if.then86

if.end84.if.end158_crit_edge:                     ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end158

if.then86:                                        ; preds = %if.end84
  %master_slave = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 16
  %72 = ptrtoint ptr %master_slave to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %master_slave, align 4
  %ffe_config_state = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 18
  %74 = ptrtoint ptr %ffe_config_state to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %ffe_config_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %75)
  %cmp87 = icmp eq i32 %75, 1
  br i1 %cmp87, label %if.then89, label %if.then86.if.end91_crit_edge

if.then86.if.end91_crit_edge:                     ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end91

if.then89:                                        ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #8
  %76 = ptrtoint ptr %ffe_config_state to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 0, ptr %ffe_config_state, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then89, %if.then86.if.end91_crit_edge
  %dsp_config_state92 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 65
  %77 = ptrtoint ptr %dsp_config_state92 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %dsp_config_state92, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %78)
  %cmp93 = icmp eq i32 %78, 2
  br i1 %cmp93, label %if.then95, label %if.end91.if.end97_crit_edge

if.end91.if.end97_crit_edge:                      ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end97

if.then95:                                        ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #8
  %79 = ptrtoint ptr %dsp_config_state92 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 1, ptr %dsp_config_state92, align 4
  br label %if.end97

if.end97:                                         ; preds = %if.then95, %if.end91.if.end97_crit_edge
  %autoneg_advertised = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 40
  %80 = ptrtoint ptr %autoneg_advertised to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %autoneg_advertised, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 32, i16 %81)
  %cmp99 = icmp eq i16 %81, 32
  br i1 %cmp99, label %if.then101, label %if.end97.if.end124_crit_edge

if.end97.if.end124_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end124

if.then101:                                       ; preds = %if.end97
  %call102 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %phy_data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call102)
  %tobool103.not = icmp eq i32 %call102, 0
  br i1 %tobool103.not, label %if.end105, label %if.then101.cleanup159_crit_edge

if.then101.cleanup159_crit_edge:                  ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

if.end105:                                        ; preds = %if.then101
  %82 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %phy_data, align 2
  %84 = and i16 %83, -129
  store i16 %84, ptr %phy_data, align 2
  %call109 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext %84)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call109)
  %tobool110.not = icmp eq i32 %call109, 0
  br i1 %tobool110.not, label %if.end112, label %if.end105.cleanup159_crit_edge

if.end105.cleanup159_crit_edge:                   ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

if.end112:                                        ; preds = %if.end105
  %call113 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 9, ptr noundef nonnull %phy_data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call113)
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %if.end116, label %if.end112.cleanup159_crit_edge

if.end112.cleanup159_crit_edge:                   ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

if.end116:                                        ; preds = %if.end112
  %85 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %phy_data, align 2
  %87 = and i16 %86, -4097
  store i16 %87, ptr %phy_data, align 2
  %call120 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 9, i16 noundef zeroext %87)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call120)
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %if.end116.if.end124_crit_edge, label %if.end116.cleanup159_crit_edge

if.end116.cleanup159_crit_edge:                   ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

if.end116.if.end124_crit_edge:                    ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end124

if.end124:                                        ; preds = %if.end116.if.end124_crit_edge, %if.end97.if.end124_crit_edge
  %call125 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 9, ptr noundef nonnull %phy_data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call125)
  %tobool126.not = icmp eq i32 %call125, 0
  br i1 %tobool126.not, label %if.end128, label %if.end124.cleanup159_crit_edge

if.end124.cleanup159_crit_edge:                   ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

if.end128:                                        ; preds = %if.end124
  %88 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %88)
  %89 = load i16, ptr %phy_data, align 2
  %conv129 = zext i16 %89 to i32
  %and130 = and i32 %conv129, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and130)
  %tobool131.not = icmp eq i32 %and130, 0
  %and133 = and i32 %conv129, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and133)
  %tobool134.not = icmp eq i32 %and133, 0
  %cond135 = select i1 %tobool134.not, i32 2, i32 1
  %cond136 = select i1 %tobool131.not, i32 3, i32 %cond135
  %original_master_slave = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 17
  %90 = ptrtoint ptr %original_master_slave to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %cond136, ptr %original_master_slave, align 4
  %91 = zext i32 %73 to i64
  call void @__sanitizer_cov_trace_switch(i64 %91, ptr @__sancov_gen_cov_switch_values.192)
  switch i32 %73, label %if.end128.cleanup_crit_edge [
    i32 1, label %sw.bb137
    i32 2, label %sw.bb141
    i32 3, label %sw.bb148
  ]

if.end128.cleanup_crit_edge:                      ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

sw.bb137:                                         ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #8
  %92 = or i16 %89, 6144
  %93 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 %92, ptr %phy_data, align 2
  br label %cleanup

sw.bb141:                                         ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #8
  %94 = and i16 %89, -6145
  %95 = or i16 %94, 4096
  %96 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %96)
  store i16 %95, ptr %phy_data, align 2
  br label %cleanup

sw.bb148:                                         ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #8
  %97 = and i16 %89, -4097
  %98 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 %97, ptr %phy_data, align 2
  br label %cleanup

cleanup:                                          ; preds = %sw.bb148, %sw.bb141, %sw.bb137, %if.end128.cleanup_crit_edge
  %99 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %phy_data, align 2
  %call154 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 9, i16 noundef zeroext %100)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call154)
  %tobool155.not = icmp eq i32 %call154, 0
  br i1 %tobool155.not, label %cleanup.if.end158_crit_edge, label %cleanup.cleanup159_crit_edge

cleanup.cleanup159_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup159

cleanup.if.end158_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end158

if.end158:                                        ; preds = %cleanup.if.end158_crit_edge, %if.end84.if.end158_crit_edge
  br label %cleanup159

cleanup159:                                       ; preds = %if.end158, %cleanup.cleanup159_crit_edge, %if.end124.cleanup159_crit_edge, %if.end116.cleanup159_crit_edge, %if.end112.cleanup159_crit_edge, %if.end105.cleanup159_crit_edge, %if.then101.cleanup159_crit_edge, %e1000_write_phy_reg.exit.cleanup159_crit_edge, %e1000_write_phy_reg.exit.thread, %e1000_read_phy_reg.exit.cleanup159_crit_edge, %e1000_read_phy_reg.exit.thread, %if.then43, %do.body31, %if.then8, %do.body3, %entry.cleanup159_crit_edge
  %retval.1 = phi i32 [ 0, %if.end158 ], [ %call154, %cleanup.cleanup159_crit_edge ], [ 0, %entry.cleanup159_crit_edge ], [ %call, %if.then8 ], [ %retval.0.i218.ph, %if.then43 ], [ %call13.i, %e1000_read_phy_reg.exit.cleanup159_crit_edge ], [ %call13.i227, %e1000_write_phy_reg.exit.cleanup159_crit_edge ], [ %call, %do.body3 ], [ %retval.0.i218.ph, %do.body31 ], [ %call10.i, %e1000_read_phy_reg.exit.thread ], [ %call10.i224, %e1000_write_phy_reg.exit.thread ], [ %call125, %if.end124.cleanup159_crit_edge ], [ %call120, %if.end116.cleanup159_crit_edge ], [ %call113, %if.end112.cleanup159_crit_edge ], [ %call109, %if.end105.cleanup159_crit_edge ], [ %call102, %if.then101.cleanup159_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_copper_link_mgp_setup(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %phy_reset_disable = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 71
  %1 = ptrtoint ptr %phy_reset_disable to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %phy_reset_disable, align 1, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %3 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp5.i = icmp eq i32 %4, 1
  br i1 %cmp5.i, label %if.then.i, label %if.end.e1000_read_phy_reg.exit_crit_edge

if.end.e1000_read_phy_reg.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %if.end
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %if.end.e1000_read_phy_reg.exit_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool1.not = icmp eq i32 %call13.i, 0
  br i1 %tobool1.not, label %if.end3, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end3:                                          ; preds = %e1000_read_phy_reg.exit
  %5 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %phy_data, align 2
  %7 = and i16 %6, -2145
  %mdix = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 56
  %8 = ptrtoint ptr %mdix to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %mdix, align 4
  %10 = zext i8 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.193)
  switch i8 %9, label %sw.default [
    i8 1, label %sw.bb
    i8 2, label %sw.bb11
    i8 3, label %sw.bb15
  ]

sw.bb:                                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #8
  %11 = or i16 %7, 2048
  %12 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %11, ptr %phy_data, align 2
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #8
  %13 = or i16 %7, 2080
  %14 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %phy_data, align 2
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #8
  %15 = or i16 %7, 2112
  %16 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %15, ptr %phy_data, align 2
  br label %sw.epilog

sw.default:                                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #8
  %17 = or i16 %6, 2144
  %18 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %17, ptr %phy_data, align 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb15, %sw.bb11, %sw.bb
  %19 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %phy_data, align 2
  %21 = and i16 %20, -3
  store i16 %21, ptr %phy_data, align 2
  %disable_polarity_correction = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 62
  %22 = ptrtoint ptr %disable_polarity_correction to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %disable_polarity_correction, align 4, !range !497
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool26.not = icmp eq i8 %23, 0
  br i1 %tobool26.not, label %sw.epilog.if.end33_crit_edge, label %if.then29

sw.epilog.if.end33_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end33

if.then29:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #8
  %24 = or i16 %20, 2
  %25 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 %24, ptr %phy_data, align 2
  br label %if.end33

if.end33:                                         ; preds = %if.then29, %sw.epilog.if.end33_crit_edge
  %26 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %phy_data, align 2
  %call2.i114 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %28 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %cmp5.i116 = icmp eq i32 %29, 1
  br i1 %cmp5.i116, label %if.then.i119, label %if.end33.e1000_write_phy_reg.exit_crit_edge

if.end33.e1000_write_phy_reg.exit_crit_edge:      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i119:                                     ; preds = %if.end33
  %call10.i117 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i117)
  %tobool.not.i118 = icmp eq i32 %call10.i117, 0
  br i1 %tobool.not.i118, label %if.then.i119.e1000_write_phy_reg.exit_crit_edge, label %e1000_write_phy_reg.exit.thread

if.then.i119.e1000_write_phy_reg.exit_crit_edge:  ; preds = %if.then.i119
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit.thread:                  ; preds = %if.then.i119
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i114) #6
  br label %cleanup

e1000_write_phy_reg.exit:                         ; preds = %if.then.i119.e1000_write_phy_reg.exit_crit_edge, %if.end33.e1000_write_phy_reg.exit_crit_edge
  %call13.i120 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext %27) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i114) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i120)
  %tobool35.not = icmp eq i32 %call13.i120, 0
  br i1 %tobool35.not, label %if.end37, label %e1000_write_phy_reg.exit.cleanup_crit_edge

e1000_write_phy_reg.exit.cleanup_crit_edge:       ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end37:                                         ; preds = %e1000_write_phy_reg.exit
  %phy_revision = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 23
  %30 = ptrtoint ptr %phy_revision to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %phy_revision, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %31)
  %cmp38 = icmp ult i32 %31, 4
  br i1 %cmp38, label %if.then40, label %if.end37.if.end75_crit_edge

if.end37.if.end75_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end75

if.then40:                                        ; preds = %if.end37
  %call2.i123 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %32 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %33)
  %cmp5.i125 = icmp eq i32 %33, 1
  br i1 %cmp5.i125, label %if.then.i128, label %if.then40.e1000_read_phy_reg.exit132_crit_edge

if.then40.e1000_read_phy_reg.exit132_crit_edge:   ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit132

if.then.i128:                                     ; preds = %if.then40
  %call10.i126 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 20) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i126)
  %tobool.not.i127 = icmp eq i32 %call10.i126, 0
  br i1 %tobool.not.i127, label %if.then.i128.e1000_read_phy_reg.exit132_crit_edge, label %e1000_read_phy_reg.exit132.thread

if.then.i128.e1000_read_phy_reg.exit132_crit_edge: ; preds = %if.then.i128
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit132

e1000_read_phy_reg.exit132.thread:                ; preds = %if.then.i128
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i123) #6
  br label %cleanup

e1000_read_phy_reg.exit132:                       ; preds = %if.then.i128.e1000_read_phy_reg.exit132_crit_edge, %if.then40.e1000_read_phy_reg.exit132_crit_edge
  %call13.i129 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 20, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i123) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i129)
  %tobool42.not = icmp eq i32 %call13.i129, 0
  br i1 %tobool42.not, label %if.end44, label %e1000_read_phy_reg.exit132.cleanup_crit_edge

e1000_read_phy_reg.exit132.cleanup_crit_edge:     ; preds = %e1000_read_phy_reg.exit132
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end44:                                         ; preds = %e1000_read_phy_reg.exit132
  %34 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %phy_data, align 2
  %36 = or i16 %35, 112
  %37 = ptrtoint ptr %phy_revision to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %phy_revision, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %38)
  %cmp49 = icmp eq i32 %38, 2
  br i1 %cmp49, label %land.lhs.true, label %if.end44.if.else_crit_edge

if.end44.if.else_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else

land.lhs.true:                                    ; preds = %if.end44
  %phy_id = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 22
  %39 = ptrtoint ptr %phy_id to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %phy_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 21040320, i32 %40)
  %cmp51 = icmp eq i32 %40, 21040320
  br i1 %cmp51, label %if.then53, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else

if.then53:                                        ; preds = %land.lhs.true
  %41 = and i16 %36, -3585
  %42 = or i16 %41, 2048
  %43 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 %42, ptr %phy_data, align 2
  %call60 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 20, i16 noundef zeroext %42)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %if.then53.if.end75_crit_edge, label %if.then53.cleanup_crit_edge

if.then53.cleanup_crit_edge:                      ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then53.if.end75_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end75

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end44.if.else_crit_edge
  %44 = and i16 %36, -3841
  %45 = or i16 %44, 256
  %46 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %45, ptr %phy_data, align 2
  %call70 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 20, i16 noundef zeroext %45)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %if.else.if.end75_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.else.if.end75_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end75

if.end75:                                         ; preds = %if.else.if.end75_crit_edge, %if.then53.if.end75_crit_edge, %if.end37.if.end75_crit_edge
  %call76 = tail call i32 @e1000_phy_reset(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call76)
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %if.end75.cleanup_crit_edge, label %do.body79

if.end75.cleanup_crit_edge:                       ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body79:                                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_mgp_setup.__UNIQUE_ID_ddebug528, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_mgp_setup, %if.then84)) #6
          to label %cleanup [label %if.then84], !srcloc !394

if.then84:                                        ; preds = %do.body79
  call void @__sanitizer_cov_trace_pc() #8
  %call85 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_mgp_setup.__UNIQUE_ID_ddebug528, ptr noundef %call85, ptr noundef nonnull @.str.72) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then84, %do.body79, %if.end75.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then53.cleanup_crit_edge, %e1000_read_phy_reg.exit132.cleanup_crit_edge, %e1000_read_phy_reg.exit132.thread, %e1000_write_phy_reg.exit.cleanup_crit_edge, %e1000_write_phy_reg.exit.thread, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call13.i, %e1000_read_phy_reg.exit.cleanup_crit_edge ], [ %call13.i120, %e1000_write_phy_reg.exit.cleanup_crit_edge ], [ %call13.i129, %e1000_read_phy_reg.exit132.cleanup_crit_edge ], [ %call60, %if.then53.cleanup_crit_edge ], [ %call70, %if.else.cleanup_crit_edge ], [ %call76, %if.then84 ], [ 0, %if.end75.cleanup_crit_edge ], [ %call10.i, %e1000_read_phy_reg.exit.thread ], [ %call10.i117, %e1000_write_phy_reg.exit.thread ], [ %call10.i126, %e1000_read_phy_reg.exit132.thread ], [ %call76, %do.body79 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gbe_dhg_phy_setup(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %0 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %phy_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.194)
  switch i32 %1, label %do.body87 [
    i32 2, label %sw.bb
    i32 3, label %sw.bb11
  ]

sw.bb:                                            ; preds = %entry
  %call.i = tail call i32 @e1000_phy_reset(ptr noundef %hw) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %sw.bb.cleanup_crit_edge, label %do.body1.i

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body1.i:                                       ; preds = %sw.bb
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_rtl_setup.__UNIQUE_ID_ddebug520, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gbe_dhg_phy_setup, %if.then6.i)) #6
          to label %do.body1 [label %if.then6.i], !srcloc !394

if.then6.i:                                       ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #8
  %call7.i = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_rtl_setup.__UNIQUE_ID_ddebug520, ptr noundef %call7.i, ptr noundef nonnull @.str.72) #6
  br label %do.body1

do.body1:                                         ; preds = %if.then6.i, %do.body1.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug521, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gbe_dhg_phy_setup, %if.then6)) #6
          to label %cleanup [label %if.then6], !srcloc !394

if.then6:                                         ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #8
  %call7 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug521, ptr noundef %call7, ptr noundef nonnull @.str.76) #6
  br label %cleanup

sw.bb11:                                          ; preds = %entry
  %3 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %4, i32 224
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !604
  %6 = or i32 %5, 16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !605
  tail call void @arm_heavy_mb() #6
  %7 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw, align 4
  %add.ptr22 = getelementptr i8, ptr %8, i32 224
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr22, i32 %6) #6, !srcloc !396
  %9 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw, align 4
  %add.ptr29 = getelementptr i8, ptr %10, i32 8
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr29) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !606
  %12 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw, align 4
  %add.ptr39 = getelementptr i8, ptr %13, i32 224
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr39) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !607
  %15 = and i32 %14, -100663297
  %16 = or i32 %15, 67108864
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !608
  tail call void @arm_heavy_mb() #6
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr51 = getelementptr i8, ptr %18, i32 224
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr51, i32 %16) #6, !srcloc !396
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr58 = getelementptr i8, ptr %20, i32 8
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr58) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !609
  %call.i137 = tail call i32 @e1000_phy_reset(ptr noundef %hw) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i137)
  %tobool.not.i138 = icmp eq i32 %call.i137, 0
  br i1 %tobool.not.i138, label %sw.bb11.cleanup_crit_edge, label %do.body1.i139

sw.bb11.cleanup_crit_edge:                        ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body1.i139:                                    ; preds = %sw.bb11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_rtl_setup.__UNIQUE_ID_ddebug520, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gbe_dhg_phy_setup, %if.then6.i141)) #6
          to label %do.body66 [label %if.then6.i141], !srcloc !394

if.then6.i141:                                    ; preds = %do.body1.i139
  call void @__sanitizer_cov_trace_pc() #8
  %call7.i140 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_rtl_setup.__UNIQUE_ID_ddebug520, ptr noundef %call7.i140, ptr noundef nonnull @.str.72) #6
  br label %do.body66

do.body66:                                        ; preds = %if.then6.i141, %do.body1.i139
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug522, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gbe_dhg_phy_setup, %if.then78)) #6
          to label %cleanup [label %if.then78], !srcloc !394

if.then78:                                        ; preds = %do.body66
  call void @__sanitizer_cov_trace_pc() #8
  %call79 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug522, ptr noundef %call79, ptr noundef nonnull @.str.76) #6
  br label %cleanup

do.body87:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug523, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gbe_dhg_phy_setup, %if.then99)) #6
          to label %cleanup [label %if.then99], !srcloc !394

if.then99:                                        ; preds = %do.body87
  call void @__sanitizer_cov_trace_pc() #8
  %call100 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug523, ptr noundef %call100, ptr noundef nonnull @.str.72) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then99, %do.body87, %if.then78, %do.body66, %sw.bb11.cleanup_crit_edge, %if.then6, %do.body1, %sw.bb.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %if.then6 ], [ %call.i137, %if.then78 ], [ 6, %if.then99 ], [ %call.i, %do.body1 ], [ %call.i137, %do.body66 ], [ 6, %do.body87 ], [ 0, %sw.bb.cleanup_crit_edge ], [ 0, %sw.bb11.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_copper_link_autoneg(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %autoneg_advertised = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 40
  %1 = ptrtoint ptr %autoneg_advertised to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %autoneg_advertised, align 2
  %3 = and i16 %2, 47
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %cmp = icmp eq i16 %3, 0
  %spec.select = select i1 %cmp, i16 47, i16 %3
  %4 = ptrtoint ptr %autoneg_advertised to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %spec.select, ptr %autoneg_advertised, align 2
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %5 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %6)
  %cmp6 = icmp eq i32 %6, 3
  br i1 %cmp6, label %if.then8, label %entry.do.body14_crit_edge

entry.do.body14_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body14

if.then8:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %7 = and i16 %spec.select, 15
  %8 = ptrtoint ptr %autoneg_advertised to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %7, ptr %autoneg_advertised, align 2
  br label %do.body14

do.body14:                                        ; preds = %if.then8, %entry.do.body14_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug529, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_autoneg, %if.then17)) #6
          to label %do.end21 [label %if.then17], !srcloc !394

if.then17:                                        ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #8
  %call18 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug529, ptr noundef %call18, ptr noundef nonnull @.str.79) #6
  br label %do.end21

do.end21:                                         ; preds = %if.then17, %do.body14
  %call22 = tail call i32 @e1000_phy_setup_autoneg(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %do.body47, label %do.body26

do.body26:                                        ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug530, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_autoneg, %if.then38)) #6
          to label %cleanup [label %if.then38], !srcloc !394

if.then38:                                        ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #8
  %call39 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug530, ptr noundef %call39, ptr noundef nonnull @.str.80) #6
  br label %cleanup

do.body47:                                        ; preds = %do.end21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug531, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_autoneg, %if.then59)) #6
          to label %do.end65 [label %if.then59], !srcloc !394

if.then59:                                        ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #8
  %call60 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug531, ptr noundef %call60, ptr noundef nonnull @.str.81) #6
  br label %do.end65

do.end65:                                         ; preds = %if.then59, %do.body47
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 0, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool67.not = icmp eq i32 %call13.i, 0
  br i1 %tobool67.not, label %if.end69, label %do.end65.cleanup_crit_edge

do.end65.cleanup_crit_edge:                       ; preds = %do.end65
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end69:                                         ; preds = %do.end65
  %9 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %phy_data, align 2
  %11 = or i16 %10, 4608
  %call2.i134 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i137 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext %11) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i134) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i137)
  %tobool73.not = icmp eq i32 %call13.i137, 0
  br i1 %tobool73.not, label %if.end75, label %if.end69.cleanup_crit_edge

if.end69.cleanup_crit_edge:                       ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end75:                                         ; preds = %if.end69
  %wait_autoneg_complete = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 58
  %12 = ptrtoint ptr %wait_autoneg_complete to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %wait_autoneg_complete, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool76.not = icmp eq i8 %13, 0
  br i1 %tobool76.not, label %if.end75.if.end102_crit_edge, label %if.then77

if.end75.if.end102_crit_edge:                     ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end102

if.then77:                                        ; preds = %if.end75
  %call78 = tail call fastcc i32 @e1000_wait_autoneg(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %if.then77.if.end102_crit_edge, label %do.body82

if.then77.if.end102_crit_edge:                    ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end102

do.body82:                                        ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug532, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_autoneg, %if.then94)) #6
          to label %cleanup [label %if.then94], !srcloc !394

if.then94:                                        ; preds = %do.body82
  call void @__sanitizer_cov_trace_pc() #8
  %call95 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug532, ptr noundef %call95, ptr noundef nonnull @.str.82) #6
  br label %cleanup

if.end102:                                        ; preds = %if.then77.if.end102_crit_edge, %if.end75.if.end102_crit_edge
  %get_link_status = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 66
  %14 = ptrtoint ptr %get_link_status to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 1, ptr %get_link_status, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end102, %if.then94, %do.body82, %if.end69.cleanup_crit_edge, %do.end65.cleanup_crit_edge, %if.then38, %do.body26
  %retval.0 = phi i32 [ 0, %if.end102 ], [ %call22, %if.then38 ], [ %call13.i, %do.end65.cleanup_crit_edge ], [ %call13.i137, %if.end69.cleanup_crit_edge ], [ %call78, %if.then94 ], [ %call22, %do.body26 ], [ %call78, %do.body82 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_phy_force_speed_duplex(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %mii_ctrl_reg = alloca i16, align 2
  %mii_status_reg = alloca i16, align 2
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_ctrl_reg) #6
  %0 = ptrtoint ptr %mii_ctrl_reg to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %mii_ctrl_reg, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_status_reg) #6
  %1 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %mii_status_reg, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %2 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %fc = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 11
  %3 = ptrtoint ptr %fc to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %fc, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug550, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_force_speed_duplex, %if.then)) #6
          to label %do.end7 [label %if.then], !srcloc !394

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %call4 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %4 = ptrtoint ptr %fc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fc, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug550, ptr noundef %call4, ptr noundef nonnull @.str.86, i32 noundef %5) #6
  br label %do.end7

do.end7:                                          ; preds = %if.then, %entry
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %7) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !610
  %9 = and i32 %8, -538640385
  %10 = or i32 %9, 1572864
  %11 = tail call i32 @llvm.bswap.i32(i32 %10)
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 0, ptr noundef nonnull %mii_ctrl_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool13.not = icmp eq i32 %call13.i, 0
  br i1 %tobool13.not, label %if.end15, label %do.end7.cleanup_crit_edge

do.end7.cleanup_crit_edge:                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end15:                                         ; preds = %do.end7
  %12 = ptrtoint ptr %mii_ctrl_reg to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %mii_ctrl_reg, align 2
  %forced_speed_duplex = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 57
  %14 = ptrtoint ptr %forced_speed_duplex to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %forced_speed_duplex, align 1
  %16 = zext i8 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.195)
  switch i8 %15, label %if.else [
    i8 3, label %if.end15.if.then25_crit_edge
    i8 1, label %if.end15.if.then25_crit_edge557
  ]

if.end15.if.then25_crit_edge557:                  ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then25

if.end15.if.then25_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then25

if.then25:                                        ; preds = %if.end15.if.then25_crit_edge, %if.end15.if.then25_crit_edge557
  %17 = and i16 %13, -4353
  %or26 = or i32 %11, 1
  %18 = or i16 %17, 256
  %19 = ptrtoint ptr %mii_ctrl_reg to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %18, ptr %mii_ctrl_reg, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug551, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_force_speed_duplex, %if.then43)) #6
          to label %if.end74 [label %if.then43], !srcloc !394

if.then43:                                        ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #8
  %call44 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug551, ptr noundef %call44, ptr noundef nonnull @.str.33) #6
  br label %if.end74

if.else:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #8
  %and50 = and i32 %11, -802
  %20 = and i16 %13, -4353
  %21 = ptrtoint ptr %mii_ctrl_reg to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %20, ptr %mii_ctrl_reg, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug552, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_force_speed_duplex, %if.then67)) #6
          to label %if.end74 [label %if.then67], !srcloc !394

if.then67:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  %call68 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug552, ptr noundef %call68, ptr noundef nonnull @.str.87) #6
  br label %if.end74

if.end74:                                         ; preds = %if.then67, %if.else, %if.then43, %if.then25
  %ctrl.0 = phi i32 [ %or26, %if.then43 ], [ %and50, %if.then67 ], [ %or26, %if.then25 ], [ %and50, %if.else ]
  %22 = ptrtoint ptr %forced_speed_duplex to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %forced_speed_duplex, align 1
  %24 = and i8 %23, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %24)
  %switch = icmp eq i8 %24, 2
  br i1 %switch, label %if.then84, label %if.else112

if.then84:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #8
  %or85 = or i32 %ctrl.0, 256
  %25 = ptrtoint ptr %mii_ctrl_reg to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %mii_ctrl_reg, align 2
  %27 = and i16 %26, -8257
  %28 = or i16 %27, 8192
  store i16 %28, ptr %mii_ctrl_reg, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug553, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_force_speed_duplex, %if.then105)) #6
          to label %if.end140 [label %if.then105], !srcloc !394

if.then105:                                       ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #8
  %call106 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug553, ptr noundef %call106, ptr noundef nonnull @.str.88) #6
  br label %if.end140

if.else112:                                       ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #8
  %and113 = and i32 %ctrl.0, -769
  %29 = ptrtoint ptr %mii_ctrl_reg to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %mii_ctrl_reg, align 2
  %31 = and i16 %30, -8257
  store i16 %31, ptr %mii_ctrl_reg, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug554, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_force_speed_duplex, %if.then133)) #6
          to label %if.end140 [label %if.then133], !srcloc !394

if.then133:                                       ; preds = %if.else112
  call void @__sanitizer_cov_trace_pc() #8
  %call134 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug554, ptr noundef %call134, ptr noundef nonnull @.str.89) #6
  br label %if.end140

if.end140:                                        ; preds = %if.then133, %if.else112, %if.then105, %if.then84
  %ctrl.1 = phi i32 [ %or85, %if.then105 ], [ %and113, %if.then133 ], [ %or85, %if.then84 ], [ %and113, %if.else112 ]
  %32 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %33)
  %cmp.i = icmp ult i32 %33, 3
  %..i = select i1 %cmp.i, i32 262144, i32 258048
  %34 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hw, align 4
  %add.ptr.i = getelementptr i8, ptr %35, i32 1024
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !508
  %37 = and i32 %36, -15744769
  %38 = tail call i32 @llvm.bswap.i32(i32 %37) #6
  %or.i = or i32 %38, %..i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !509
  tail call void @arm_heavy_mb() #6
  %39 = tail call i32 @llvm.bswap.i32(i32 %or.i) #6
  %40 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hw, align 4
  %add.ptr8.i = getelementptr i8, ptr %41, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8.i, i32 %39) #6, !srcloc !396
  %42 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hw, align 4
  %add.ptr15.i = getelementptr i8, ptr %43, i32 8
  %44 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !510
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !611
  tail call void @arm_heavy_mb() #6
  %45 = tail call i32 @llvm.bswap.i32(i32 %ctrl.1)
  %46 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %47, i32 %45) #6, !srcloc !396
  %48 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp150 = icmp eq i32 %49, 0
  %call2.i466 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %50 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %51)
  %cmp5.i468 = icmp eq i32 %51, 1
  br i1 %cmp150, label %if.then152, label %if.else188

if.then152:                                       ; preds = %if.end140
  br i1 %cmp5.i468, label %if.then.i, label %if.then152.e1000_read_phy_reg.exit_crit_edge

if.then152.e1000_read_phy_reg.exit_crit_edge:     ; preds = %if.then152
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %if.then152
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i466) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %if.then152.e1000_read_phy_reg.exit_crit_edge
  %call13.i469 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i466) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i469)
  %tobool154.not = icmp eq i32 %call13.i469, 0
  br i1 %tobool154.not, label %if.end156, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end156:                                        ; preds = %e1000_read_phy_reg.exit
  %52 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %phy_data, align 2
  %54 = and i16 %53, -97
  store i16 %54, ptr %phy_data, align 2
  %call2.i470 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %55 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %56)
  %cmp5.i472 = icmp eq i32 %56, 1
  br i1 %cmp5.i472, label %if.then.i475, label %if.end156.e1000_write_phy_reg.exit_crit_edge

if.end156.e1000_write_phy_reg.exit_crit_edge:     ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i475:                                     ; preds = %if.end156
  %call10.i473 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 16) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i473)
  %tobool.not.i474 = icmp eq i32 %call10.i473, 0
  br i1 %tobool.not.i474, label %if.then.i475.e1000_write_phy_reg.exit_crit_edge, label %e1000_write_phy_reg.exit.thread

if.then.i475.e1000_write_phy_reg.exit_crit_edge:  ; preds = %if.then.i475
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit.thread:                  ; preds = %if.then.i475
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i470) #6
  br label %cleanup

e1000_write_phy_reg.exit:                         ; preds = %if.then.i475.e1000_write_phy_reg.exit_crit_edge, %if.end156.e1000_write_phy_reg.exit_crit_edge
  %call13.i476 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext %54) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i470) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i476)
  %tobool161.not = icmp eq i32 %call13.i476, 0
  br i1 %tobool161.not, label %do.body165, label %e1000_write_phy_reg.exit.cleanup_crit_edge

e1000_write_phy_reg.exit.cleanup_crit_edge:       ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body165:                                       ; preds = %e1000_write_phy_reg.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug555, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_force_speed_duplex, %if.then177)) #6
          to label %do.end184 [label %if.then177], !srcloc !394

if.then177:                                       ; preds = %do.body165
  call void @__sanitizer_cov_trace_pc() #8
  %call178 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %conv179 = zext i16 %54 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug555, ptr noundef %call178, ptr noundef nonnull @.str.90, i32 noundef %conv179) #6
  br label %do.end184

do.end184:                                        ; preds = %if.then177, %do.body165
  %57 = ptrtoint ptr %mii_ctrl_reg to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %mii_ctrl_reg, align 2
  %59 = or i16 %58, -32768
  store i16 %59, ptr %mii_ctrl_reg, align 2
  br label %if.end203

if.else188:                                       ; preds = %if.end140
  br i1 %cmp5.i468, label %if.then.i484, label %if.else188.e1000_read_phy_reg.exit488_crit_edge

if.else188.e1000_read_phy_reg.exit488_crit_edge:  ; preds = %if.else188
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit488

if.then.i484:                                     ; preds = %if.else188
  %call10.i482 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 18) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i482)
  %tobool.not.i483 = icmp eq i32 %call10.i482, 0
  br i1 %tobool.not.i483, label %if.then.i484.e1000_read_phy_reg.exit488_crit_edge, label %e1000_read_phy_reg.exit488.thread

if.then.i484.e1000_read_phy_reg.exit488_crit_edge: ; preds = %if.then.i484
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit488

e1000_read_phy_reg.exit488.thread:                ; preds = %if.then.i484
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i466) #6
  br label %cleanup

e1000_read_phy_reg.exit488:                       ; preds = %if.then.i484.e1000_read_phy_reg.exit488_crit_edge, %if.else188.e1000_read_phy_reg.exit488_crit_edge
  %call13.i485 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 18, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i466) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i485)
  %tobool190.not = icmp eq i32 %call13.i485, 0
  br i1 %tobool190.not, label %if.end192, label %e1000_read_phy_reg.exit488.cleanup_crit_edge

e1000_read_phy_reg.exit488.cleanup_crit_edge:     ; preds = %e1000_read_phy_reg.exit488
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end192:                                        ; preds = %e1000_read_phy_reg.exit488
  %60 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %phy_data, align 2
  %62 = and i16 %61, -12289
  store i16 %62, ptr %phy_data, align 2
  %call2.i489 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %63 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %64)
  %cmp5.i491 = icmp eq i32 %64, 1
  br i1 %cmp5.i491, label %if.then.i494, label %if.end192.e1000_write_phy_reg.exit498_crit_edge

if.end192.e1000_write_phy_reg.exit498_crit_edge:  ; preds = %if.end192
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit498

if.then.i494:                                     ; preds = %if.end192
  %call10.i492 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 18) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i492)
  %tobool.not.i493 = icmp eq i32 %call10.i492, 0
  br i1 %tobool.not.i493, label %if.then.i494.e1000_write_phy_reg.exit498_crit_edge, label %e1000_write_phy_reg.exit498.thread

if.then.i494.e1000_write_phy_reg.exit498_crit_edge: ; preds = %if.then.i494
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit498

e1000_write_phy_reg.exit498.thread:               ; preds = %if.then.i494
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i489) #6
  br label %cleanup

e1000_write_phy_reg.exit498:                      ; preds = %if.then.i494.e1000_write_phy_reg.exit498_crit_edge, %if.end192.e1000_write_phy_reg.exit498_crit_edge
  %call13.i495 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 18, i16 noundef zeroext %62) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i489) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i495)
  %tobool200.not = icmp eq i32 %call13.i495, 0
  br i1 %tobool200.not, label %e1000_write_phy_reg.exit498.if.end203_crit_edge, label %e1000_write_phy_reg.exit498.cleanup_crit_edge

e1000_write_phy_reg.exit498.cleanup_crit_edge:    ; preds = %e1000_write_phy_reg.exit498
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

e1000_write_phy_reg.exit498.if.end203_crit_edge:  ; preds = %e1000_write_phy_reg.exit498
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end203

if.end203:                                        ; preds = %e1000_write_phy_reg.exit498.if.end203_crit_edge, %do.end184
  %65 = ptrtoint ptr %mii_ctrl_reg to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %mii_ctrl_reg, align 2
  %call2.i499 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i502 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 0, i16 noundef zeroext %66) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i499) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i502)
  %tobool205.not = icmp eq i32 %call13.i502, 0
  br i1 %tobool205.not, label %if.end207, label %if.end203.cleanup_crit_edge

if.end203.cleanup_crit_edge:                      ; preds = %if.end203
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end207:                                        ; preds = %if.end203
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %67 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %67(i32 noundef 214748) #6
  %wait_autoneg_complete = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 58
  %68 = ptrtoint ptr %wait_autoneg_complete to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %wait_autoneg_complete, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool208.not = icmp eq i8 %69, 0
  br i1 %tobool208.not, label %if.end207.if.end299_crit_edge, label %do.body211

if.end207.if.end299_crit_edge:                    ; preds = %if.end207
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end299

do.body211:                                       ; preds = %if.end207
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug556, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_force_speed_duplex, %if.then223)) #6
          to label %do.end229 [label %if.then223], !srcloc !394

if.then223:                                       ; preds = %do.body211
  call void @__sanitizer_cov_trace_pc() #8
  %call224 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug556, ptr noundef %call224, ptr noundef nonnull @.str.91) #6
  br label %do.end229

do.end229:                                        ; preds = %if.then223, %do.body211
  %70 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 0, ptr %mii_status_reg, align 2
  br label %for.body

for.body:                                         ; preds = %if.end245.for.body_crit_edge, %do.end229
  %i.0547 = phi i16 [ 20, %do.end229 ], [ %dec, %if.end245.for.body_crit_edge ]
  %call2.i505 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i508 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i505) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i508)
  %tobool234.not = icmp eq i32 %call13.i508, 0
  br i1 %tobool234.not, label %if.end236, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end236:                                        ; preds = %for.body
  %call2.i511 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i514 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i511) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i514)
  %tobool238.not = icmp eq i32 %call13.i514, 0
  br i1 %tobool238.not, label %if.end240, label %if.end236.cleanup_crit_edge

if.end236.cleanup_crit_edge:                      ; preds = %if.end236
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end240:                                        ; preds = %if.end236
  %71 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %mii_status_reg, align 2
  %73 = and i16 %72, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %73)
  %tobool243.not = icmp eq i16 %73, 0
  br i1 %tobool243.not, label %if.end245, label %if.end240.for.body282.preheader_crit_edge

if.end240.for.body282.preheader_crit_edge:        ; preds = %if.end240
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body282.preheader

if.end245:                                        ; preds = %if.end240
  tail call void @msleep(i32 noundef 100) #6
  %dec = add nsw i16 %i.0547, -1
  %cond = icmp eq i16 %dec, 0
  br i1 %cond, label %land.lhs.true, label %if.end245.for.body_crit_edge

if.end245.for.body_crit_edge:                     ; preds = %if.end245
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

land.lhs.true:                                    ; preds = %if.end245
  %74 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %cmp250 = icmp eq i32 %75, 0
  br i1 %cmp250, label %if.then252, label %land.lhs.true.for.body282.preheader_crit_edge

land.lhs.true.for.body282.preheader_crit_edge:    ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body282.preheader

for.body282.preheader:                            ; preds = %if.then252.for.body282.preheader_crit_edge, %land.lhs.true.for.body282.preheader_crit_edge, %if.end240.for.body282.preheader_crit_edge
  br label %for.body282

if.then252:                                       ; preds = %land.lhs.true
  %call253 = tail call fastcc i32 @e1000_phy_reset_dsp(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call253)
  %tobool254.not = icmp eq i32 %call253, 0
  br i1 %tobool254.not, label %if.then252.for.body282.preheader_crit_edge, label %do.body257

if.then252.for.body282.preheader_crit_edge:       ; preds = %if.then252
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body282.preheader

do.body257:                                       ; preds = %if.then252
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug557, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_phy_force_speed_duplex, %if.then269)) #6
          to label %cleanup [label %if.then269], !srcloc !394

if.then269:                                       ; preds = %do.body257
  call void @__sanitizer_cov_trace_pc() #8
  %call270 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug557, ptr noundef %call270, ptr noundef nonnull @.str.92) #6
  br label %cleanup

for.cond278:                                      ; preds = %if.end291
  %dec297 = add nsw i16 %i.1548, -1
  %cmp280.not = icmp eq i16 %dec297, 0
  br i1 %cmp280.not, label %for.cond278.if.end299_crit_edge, label %for.cond278.for.body282_crit_edge

for.cond278.for.body282_crit_edge:                ; preds = %for.cond278
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body282

for.cond278.if.end299_crit_edge:                  ; preds = %for.cond278
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end299

for.body282:                                      ; preds = %for.cond278.for.body282_crit_edge, %for.body282.preheader
  %i.1548 = phi i16 [ %dec297, %for.cond278.for.body282_crit_edge ], [ 20, %for.body282.preheader ]
  %76 = ptrtoint ptr %mii_status_reg to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %mii_status_reg, align 2
  %78 = and i16 %77, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %78)
  %tobool285.not = icmp eq i16 %78, 0
  br i1 %tobool285.not, label %if.end287, label %for.body282.if.end299_crit_edge

for.body282.if.end299_crit_edge:                  ; preds = %for.body282
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end299

if.end287:                                        ; preds = %for.body282
  tail call void @msleep(i32 noundef 100) #6
  %call2.i517 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i520 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i517) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i520)
  %tobool289.not = icmp eq i32 %call13.i520, 0
  br i1 %tobool289.not, label %if.end291, label %if.end287.cleanup_crit_edge

if.end287.cleanup_crit_edge:                      ; preds = %if.end287
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end291:                                        ; preds = %if.end287
  %call2.i523 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i526 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %mii_status_reg) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i523) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i526)
  %tobool293.not = icmp eq i32 %call13.i526, 0
  br i1 %tobool293.not, label %for.cond278, label %if.end291.cleanup_crit_edge

if.end291.cleanup_crit_edge:                      ; preds = %if.end291
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end299:                                        ; preds = %for.body282.if.end299_crit_edge, %for.cond278.if.end299_crit_edge, %if.end207.if.end299_crit_edge
  %79 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %cmp301 = icmp eq i32 %80, 0
  br i1 %cmp301, label %if.then303, label %if.end299.if.end351_crit_edge

if.end299.if.end351_crit_edge:                    ; preds = %if.end299
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end351

if.then303:                                       ; preds = %if.end299
  %call304 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 20, ptr noundef nonnull %phy_data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call304)
  %tobool305.not = icmp eq i32 %call304, 0
  br i1 %tobool305.not, label %if.end307, label %if.then303.cleanup_crit_edge

if.then303.cleanup_crit_edge:                     ; preds = %if.then303
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end307:                                        ; preds = %if.then303
  %81 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %81)
  %82 = load i16, ptr %phy_data, align 2
  %83 = or i16 %82, 112
  store i16 %83, ptr %phy_data, align 2
  %call311 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 20, i16 noundef zeroext %83)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call311)
  %tobool312.not = icmp eq i32 %call311, 0
  br i1 %tobool312.not, label %if.end314, label %if.end307.cleanup_crit_edge

if.end307.cleanup_crit_edge:                      ; preds = %if.end307
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end314:                                        ; preds = %if.end307
  %call315 = call i32 @e1000_read_phy_reg(ptr noundef %hw, i32 noundef 16, ptr noundef nonnull %phy_data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call315)
  %tobool316.not = icmp eq i32 %call315, 0
  br i1 %tobool316.not, label %if.end318, label %if.end314.cleanup_crit_edge

if.end314.cleanup_crit_edge:                      ; preds = %if.end314
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end318:                                        ; preds = %if.end314
  %84 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %phy_data, align 2
  %86 = or i16 %85, 2048
  store i16 %86, ptr %phy_data, align 2
  %call322 = tail call i32 @e1000_write_phy_reg(ptr noundef %hw, i32 noundef 16, i16 noundef zeroext %86)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call322)
  %tobool323.not = icmp eq i32 %call322, 0
  br i1 %tobool323.not, label %if.end325, label %if.end318.cleanup_crit_edge

if.end318.cleanup_crit_edge:                      ; preds = %if.end318
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end325:                                        ; preds = %if.end318
  %87 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %mac_type, align 4
  %.off442 = add i32 %88, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off442)
  %switch443 = icmp ult i32 %.off442, 2
  br i1 %switch443, label %land.lhs.true333, label %if.end325.if.end351_crit_edge

if.end325.if.end351_crit_edge:                    ; preds = %if.end325
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end351

land.lhs.true333:                                 ; preds = %if.end325
  %autoneg = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 55
  %89 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %autoneg, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool334.not = icmp eq i8 %90, 0
  br i1 %tobool334.not, label %land.lhs.true335, label %land.lhs.true333.if.end351_crit_edge

land.lhs.true333.if.end351_crit_edge:             ; preds = %land.lhs.true333
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end351

land.lhs.true335:                                 ; preds = %land.lhs.true333
  %91 = ptrtoint ptr %forced_speed_duplex to i32
  call void @__asan_load1_noabort(i32 %91)
  %92 = load i8, ptr %forced_speed_duplex, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %92)
  %switch444 = icmp ult i8 %92, 2
  br i1 %switch444, label %if.then345, label %land.lhs.true335.if.end351_crit_edge

land.lhs.true335.if.end351_crit_edge:             ; preds = %land.lhs.true335
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end351

if.then345:                                       ; preds = %land.lhs.true335
  %call346 = tail call fastcc i32 @e1000_polarity_reversal_workaround(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call346)
  %tobool347.not = icmp eq i32 %call346, 0
  br i1 %tobool347.not, label %if.then345.if.end351_crit_edge, label %if.then345.cleanup_crit_edge

if.then345.cleanup_crit_edge:                     ; preds = %if.then345
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then345.if.end351_crit_edge:                   ; preds = %if.then345
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end351

if.end351:                                        ; preds = %if.then345.if.end351_crit_edge, %land.lhs.true335.if.end351_crit_edge, %land.lhs.true333.if.end351_crit_edge, %if.end325.if.end351_crit_edge, %if.end299.if.end351_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end351, %if.then345.cleanup_crit_edge, %if.end318.cleanup_crit_edge, %if.end314.cleanup_crit_edge, %if.end307.cleanup_crit_edge, %if.then303.cleanup_crit_edge, %if.end291.cleanup_crit_edge, %if.end287.cleanup_crit_edge, %if.then269, %do.body257, %if.end236.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.end203.cleanup_crit_edge, %e1000_write_phy_reg.exit498.cleanup_crit_edge, %e1000_write_phy_reg.exit498.thread, %e1000_read_phy_reg.exit488.cleanup_crit_edge, %e1000_read_phy_reg.exit488.thread, %e1000_write_phy_reg.exit.cleanup_crit_edge, %e1000_write_phy_reg.exit.thread, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread, %do.end7.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end351 ], [ %call13.i, %do.end7.cleanup_crit_edge ], [ %call13.i469, %e1000_read_phy_reg.exit.cleanup_crit_edge ], [ %call13.i476, %e1000_write_phy_reg.exit.cleanup_crit_edge ], [ %call13.i485, %e1000_read_phy_reg.exit488.cleanup_crit_edge ], [ %call13.i495, %e1000_write_phy_reg.exit498.cleanup_crit_edge ], [ %call13.i502, %if.end203.cleanup_crit_edge ], [ %call253, %if.then269 ], [ %call304, %if.then303.cleanup_crit_edge ], [ %call311, %if.end307.cleanup_crit_edge ], [ %call315, %if.end314.cleanup_crit_edge ], [ %call322, %if.end318.cleanup_crit_edge ], [ %call346, %if.then345.cleanup_crit_edge ], [ %call10.i, %e1000_read_phy_reg.exit.thread ], [ %call10.i473, %e1000_write_phy_reg.exit.thread ], [ %call10.i482, %e1000_read_phy_reg.exit488.thread ], [ %call10.i492, %e1000_write_phy_reg.exit498.thread ], [ %call253, %do.body257 ], [ %call13.i526, %if.end291.cleanup_crit_edge ], [ %call13.i520, %if.end287.cleanup_crit_edge ], [ %call13.i514, %if.end236.cleanup_crit_edge ], [ %call13.i508, %for.body.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_status_reg) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_ctrl_reg) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_copper_link_postconfig(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.196)
  switch i32 %1, label %if.then [
    i32 9, label %entry.if.else_crit_edge
    i32 3, label %entry.if.else_crit_edge89
    i32 2, label %entry.if.else_crit_edge90
    i32 1, label %entry.if.else_crit_edge91
    i32 0, label %entry.if.else_crit_edge92
  ]

entry.if.else_crit_edge92:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else

entry.if.else_crit_edge91:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else

entry.if.else_crit_edge90:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else

entry.if.else_crit_edge89:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %3 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw, align 4
  %add.ptr.i = getelementptr i8, ptr %4, i32 1024
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !508
  %6 = and i32 %5, -15744769
  %7 = or i32 %6, 15729408
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !509
  tail call void @arm_heavy_mb() #6
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr8.i = getelementptr i8, ptr %9, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8.i, i32 %7) #6, !srcloc !396
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr15.i = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !510
  br label %if.end14

if.else:                                          ; preds = %entry.if.else_crit_edge, %entry.if.else_crit_edge89, %entry.if.else_crit_edge90, %entry.if.else_crit_edge91, %entry.if.else_crit_edge92
  %call = tail call fastcc i32 @e1000_config_mac_to_phy(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.else.if.end14_crit_edge, label %do.body4

if.else.if.end14_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end14

do.body4:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug533, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_postconfig, %if.then9)) #6
          to label %cleanup [label %if.then9], !srcloc !394

if.then9:                                         ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #8
  %call10 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug533, ptr noundef %call10, ptr noundef nonnull @.str.26) #6
  br label %cleanup

if.end14:                                         ; preds = %if.else.if.end14_crit_edge, %if.then
  %call15 = tail call fastcc i32 @e1000_config_fc_after_link_up(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end38, label %do.body19

do.body19:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug534, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_postconfig, %if.then31)) #6
          to label %cleanup [label %if.then31], !srcloc !394

if.then31:                                        ; preds = %do.body19
  call void @__sanitizer_cov_trace_pc() #8
  %call32 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug534, ptr noundef %call32, ptr noundef nonnull @.str.94) #6
  br label %cleanup

if.end38:                                         ; preds = %if.end14
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %13 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp39 = icmp eq i32 %14, 1
  br i1 %cmp39, label %if.then40, label %if.end38.cleanup_crit_edge

if.end38.cleanup_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then40:                                        ; preds = %if.end38
  %call41 = tail call fastcc i32 @e1000_config_dsp_after_link_change(ptr noundef %hw, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.then40.cleanup_crit_edge, label %do.body45

if.then40.cleanup_crit_edge:                      ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

do.body45:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug535, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_copper_link_postconfig, %if.then57)) #6
          to label %cleanup [label %if.then57], !srcloc !394

if.then57:                                        ; preds = %do.body45
  call void @__sanitizer_cov_trace_pc() #8
  %call58 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug535, ptr noundef %call58, ptr noundef nonnull @.str.95) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then57, %do.body45, %if.then40.cleanup_crit_edge, %if.end38.cleanup_crit_edge, %if.then31, %do.body19, %if.then9, %do.body4
  %retval.0 = phi i32 [ %call, %if.then9 ], [ %call15, %if.then31 ], [ %call41, %if.then57 ], [ 0, %if.then40.cleanup_crit_edge ], [ 0, %if.end38.cleanup_crit_edge ], [ %call, %do.body4 ], [ %call15, %do.body19 ], [ %call41, %do.body45 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_detect_gig_phy(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_id_high = alloca i16, align 2
  %phy_id_low = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_id_high) #6
  %0 = ptrtoint ptr %phy_id_high to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_id_high, align 2, !annotation !414
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_id_low) #6
  %1 = ptrtoint ptr %phy_id_low to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %phy_id_low, align 2, !annotation !414
  %phy_id = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 22
  %2 = ptrtoint ptr %phy_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %phy_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not = icmp eq i32 %3, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 2, ptr noundef nonnull %phy_id_high) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %4 = ptrtoint ptr %phy_id_high to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %phy_id_high, align 2
  %conv = zext i16 %5 to i32
  %shl = shl nuw i32 %conv, 16
  %6 = ptrtoint ptr %phy_id to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %shl, ptr %phy_id, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %7 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %7(i32 noundef 4294960) #6
  %call2.i144 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i147 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 3, ptr noundef nonnull %phy_id_low) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i144) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i147)
  %tobool5.not = icmp eq i32 %call13.i147, 0
  br i1 %tobool5.not, label %if.end7, label %if.end2.cleanup_crit_edge

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end7:                                          ; preds = %if.end2
  %8 = ptrtoint ptr %phy_id_low to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %phy_id_low, align 2
  %10 = and i16 %9, -16
  %and = zext i16 %10 to i32
  %11 = ptrtoint ptr %phy_id to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %phy_id, align 4
  %or = or i32 %12, %and
  store i32 %or, ptr %phy_id, align 4
  %13 = and i16 %9, 15
  %and11 = zext i16 %13 to i32
  %phy_revision = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 23
  %14 = ptrtoint ptr %phy_revision to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %and11, ptr %phy_revision, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %15 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mac_type, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.197)
  switch i32 %16, label %do.body48 [
    i32 3, label %sw.bb
    i32 4, label %sw.bb17
    i32 5, label %if.end7.sw.bb23_crit_edge
    i32 6, label %if.end7.sw.bb23_crit_edge153
    i32 7, label %if.end7.sw.bb23_crit_edge154
    i32 8, label %if.end7.sw.bb23_crit_edge155
    i32 10, label %if.end7.sw.bb23_crit_edge156
    i32 9, label %sw.bb29
    i32 11, label %if.end7.sw.bb42_crit_edge
    i32 12, label %if.end7.sw.bb42_crit_edge157
    i32 13, label %if.end7.sw.bb42_crit_edge158
    i32 14, label %if.end7.sw.bb42_crit_edge159
  ]

if.end7.sw.bb42_crit_edge159:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb42

if.end7.sw.bb42_crit_edge158:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb42

if.end7.sw.bb42_crit_edge157:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb42

if.end7.sw.bb42_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb42

if.end7.sw.bb23_crit_edge156:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb23

if.end7.sw.bb23_crit_edge155:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb23

if.end7.sw.bb23_crit_edge154:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb23

if.end7.sw.bb23_crit_edge153:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb23

if.end7.sw.bb23_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  br label %sw.bb23

sw.bb:                                            ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 21040208, i32 %or)
  %cmp13 = icmp eq i32 %or, 21040208
  br label %if.end.i

sw.bb17:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 21040176, i32 %or)
  %cmp19 = icmp eq i32 %or, 21040176
  br label %if.end.i

sw.bb23:                                          ; preds = %if.end7.sw.bb23_crit_edge, %if.end7.sw.bb23_crit_edge153, %if.end7.sw.bb23_crit_edge154, %if.end7.sw.bb23_crit_edge155, %if.end7.sw.bb23_crit_edge156
  call void @__sanitizer_cov_trace_const_cmp4(i32 21040160, i32 %or)
  %cmp25 = icmp eq i32 %or, 21040160
  br label %if.end.i

sw.bb29:                                          ; preds = %if.end7
  %18 = zext i32 %or to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.198)
  switch i32 %or, label %sw.bb29.if.end.i_crit_edge [
    i32 1886480, label %sw.bb29.if.then40_crit_edge
    i32 33280, label %sw.bb29.if.then40_crit_edge160
    i32 21040704, label %sw.bb29.if.then40_crit_edge161
  ]

sw.bb29.if.then40_crit_edge161:                   ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then40

sw.bb29.if.then40_crit_edge160:                   ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then40

sw.bb29.if.then40_crit_edge:                      ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.then40

sw.bb29.if.end.i_crit_edge:                       ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end.i

if.then40:                                        ; preds = %sw.bb29.if.then40_crit_edge, %sw.bb29.if.then40_crit_edge160, %sw.bb29.if.then40_crit_edge161
  br label %if.end.i

sw.bb42:                                          ; preds = %if.end7.sw.bb42_crit_edge, %if.end7.sw.bb42_crit_edge157, %if.end7.sw.bb42_crit_edge158, %if.end7.sw.bb42_crit_edge159
  call void @__sanitizer_cov_trace_const_cmp4(i32 44565376, i32 %or)
  %cmp44 = icmp eq i32 %or, 44565376
  br label %if.end.i

do.body48:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_detect_gig_phy.__UNIQUE_ID_ddebug597, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_detect_gig_phy, %if.then53)) #6
          to label %cleanup [label %if.then53], !srcloc !394

if.then53:                                        ; preds = %do.body48
  call void @__sanitizer_cov_trace_pc() #8
  %call54 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %19 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %mac_type, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_detect_gig_phy.__UNIQUE_ID_ddebug597, ptr noundef %call54, ptr noundef nonnull @.str.68, i32 noundef %20) #6
  br label %cleanup

if.end.i:                                         ; preds = %sw.bb42, %if.then40, %sw.bb29.if.end.i_crit_edge, %sw.bb23, %sw.bb17, %sw.bb
  %match.0.off0 = phi i1 [ true, %if.then40 ], [ %cmp13, %sw.bb ], [ %cmp19, %sw.bb17 ], [ %cmp25, %sw.bb23 ], [ false, %sw.bb29.if.end.i_crit_edge ], [ %cmp44, %sw.bb42 ]
  %21 = zext i32 %or to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.199)
  switch i32 %or, label %sw.default.i [
    i32 21040208, label %if.end.i.return.sink.split.i_crit_edge
    i32 21040176, label %if.end.i.return.sink.split.i_crit_edge162
    i32 21040160, label %if.end.i.return.sink.split.i_crit_edge163
    i32 21040320, label %if.end.i.return.sink.split.i_crit_edge164
    i32 21040704, label %if.end.i.return.sink.split.i_crit_edge165
    i32 44565376, label %sw.bb1.i
    i32 1886480, label %sw.bb15.i
    i32 33280, label %sw.bb17.i
  ]

if.end.i.return.sink.split.i_crit_edge165:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

if.end.i.return.sink.split.i_crit_edge164:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

if.end.i.return.sink.split.i_crit_edge163:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

if.end.i.return.sink.split.i_crit_edge162:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

if.end.i.return.sink.split.i_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

sw.bb1.i:                                         ; preds = %if.end.i
  %.off.i = add nsw i32 %16, -11
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 4
  br i1 %switch.i, label %sw.bb1.i.return.sink.split.i_crit_edge, label %sw.bb1.i.e1000_set_phy_type.exit_crit_edge

sw.bb1.i.e1000_set_phy_type.exit_crit_edge:       ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_set_phy_type.exit

sw.bb1.i.return.sink.split.i_crit_edge:           ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

sw.bb15.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

sw.bb17.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

sw.default.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %return.sink.split.i

return.sink.split.i:                              ; preds = %sw.default.i, %sw.bb17.i, %sw.bb15.i, %sw.bb1.i.return.sink.split.i_crit_edge, %if.end.i.return.sink.split.i_crit_edge, %if.end.i.return.sink.split.i_crit_edge162, %if.end.i.return.sink.split.i_crit_edge163, %if.end.i.return.sink.split.i_crit_edge164, %if.end.i.return.sink.split.i_crit_edge165
  %.sink.i = phi i32 [ 2, %sw.bb15.i ], [ 3, %sw.bb17.i ], [ 255, %sw.default.i ], [ 0, %if.end.i.return.sink.split.i_crit_edge ], [ 0, %if.end.i.return.sink.split.i_crit_edge162 ], [ 0, %if.end.i.return.sink.split.i_crit_edge163 ], [ 0, %if.end.i.return.sink.split.i_crit_edge164 ], [ 0, %if.end.i.return.sink.split.i_crit_edge165 ], [ 1, %sw.bb1.i.return.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi i32 [ 0, %sw.bb15.i ], [ 0, %sw.bb17.i ], [ -6, %sw.default.i ], [ 0, %if.end.i.return.sink.split.i_crit_edge ], [ 0, %if.end.i.return.sink.split.i_crit_edge162 ], [ 0, %if.end.i.return.sink.split.i_crit_edge163 ], [ 0, %if.end.i.return.sink.split.i_crit_edge164 ], [ 0, %if.end.i.return.sink.split.i_crit_edge165 ], [ 0, %sw.bb1.i.return.sink.split.i_crit_edge ]
  %22 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %.sink.i, ptr %phy_type.i, align 4
  br label %e1000_set_phy_type.exit

e1000_set_phy_type.exit:                          ; preds = %return.sink.split.i, %sw.bb1.i.e1000_set_phy_type.exit_crit_edge
  %retval.0.i149 = phi i32 [ 0, %sw.bb1.i.e1000_set_phy_type.exit_crit_edge ], [ %retval.0.ph.i, %return.sink.split.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i149)
  %cmp62 = icmp eq i32 %retval.0.i149, 0
  %or.cond = and i1 %match.0.off0, %cmp62
  br i1 %or.cond, label %do.body66, label %do.body88

do.body66:                                        ; preds = %e1000_set_phy_type.exit
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_detect_gig_phy.__UNIQUE_ID_ddebug598, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_detect_gig_phy, %if.then78)) #6
          to label %cleanup [label %if.then78], !srcloc !394

if.then78:                                        ; preds = %do.body66
  call void @__sanitizer_cov_trace_pc() #8
  %call79 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %23 = ptrtoint ptr %phy_id to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %phy_id, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_detect_gig_phy.__UNIQUE_ID_ddebug598, ptr noundef %call79, ptr noundef nonnull @.str.69, i32 noundef %24) #6
  br label %cleanup

do.body88:                                        ; preds = %e1000_set_phy_type.exit
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_detect_gig_phy.__UNIQUE_ID_ddebug599, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_detect_gig_phy, %if.then100)) #6
          to label %cleanup [label %if.then100], !srcloc !394

if.then100:                                       ; preds = %do.body88
  call void @__sanitizer_cov_trace_pc() #8
  %call101 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  %25 = ptrtoint ptr %phy_id to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %phy_id, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_detect_gig_phy.__UNIQUE_ID_ddebug599, ptr noundef %call101, ptr noundef nonnull @.str.70, i32 noundef %26) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then100, %do.body88, %if.then78, %do.body66, %if.then53, %do.body48, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call13.i, %if.end.cleanup_crit_edge ], [ %call13.i147, %if.end2.cleanup_crit_edge ], [ -3, %if.then53 ], [ 0, %if.then78 ], [ -2, %if.then100 ], [ -3, %do.body48 ], [ 0, %do.body66 ], [ -2, %do.body88 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_id_low) #6
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_id_high) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_wait_autoneg(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_wait_autoneg.__UNIQUE_ID_ddebug587, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_wait_autoneg, %if.then)) #6
          to label %for.body [label %if.then], !srcloc !394

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %call4 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_wait_autoneg.__UNIQUE_ID_ddebug587, ptr noundef %call4, ptr noundef nonnull @.str.84) #6
  br label %for.body

for.body:                                         ; preds = %if.end19.for.body_crit_edge, %if.then, %entry
  %i.033 = phi i16 [ %dec, %if.end19.for.body_crit_edge ], [ 45, %entry ], [ 45, %if.then ]
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool9.not = icmp eq i32 %call13.i, 0
  br i1 %tobool9.not, label %if.end11, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end11:                                         ; preds = %for.body
  %call2.i28 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %call13.i31 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 1, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i28) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i31)
  %tobool13.not = icmp eq i32 %call13.i31, 0
  br i1 %tobool13.not, label %if.end15, label %if.end11.cleanup_crit_edge

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end15:                                         ; preds = %if.end11
  %1 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %phy_data, align 2
  %3 = and i16 %2, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool17.not = icmp eq i16 %3, 0
  br i1 %tobool17.not, label %if.end19, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end19:                                         ; preds = %if.end15
  tail call void @msleep(i32 noundef 100) #6
  %dec = add nsw i16 %i.033, -1
  %cmp.not = icmp eq i16 %dec, 0
  br i1 %cmp.not, label %if.end19.cleanup_crit_edge, label %if.end19.for.body_crit_edge

if.end19.for.body_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

cleanup:                                          ; preds = %if.end19.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13.i, %for.body.cleanup_crit_edge ], [ %call13.i31, %if.end11.cleanup_crit_edge ], [ 0, %if.end15.cleanup_crit_edge ], [ 0, %if.end19.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_phy_reset_dsp(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %phy_type.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %0 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp5.i = icmp eq i32 %1, 1
  br i1 %cmp5.i, label %if.then.i, label %entry.e1000_write_phy_reg.exit_crit_edge

entry.e1000_write_phy_reg.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

if.then.i:                                        ; preds = %entry
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 29) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_write_phy_reg.exit_crit_edge, label %if.then.i.do.end.sink.split_crit_edge

if.then.i.do.end.sink.split_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.end.sink.split

if.then.i.e1000_write_phy_reg.exit_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit

e1000_write_phy_reg.exit:                         ; preds = %if.then.i.e1000_write_phy_reg.exit_crit_edge, %entry.e1000_write_phy_reg.exit_crit_edge
  %call13.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 29, i16 noundef zeroext 29) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end, label %e1000_write_phy_reg.exit.do.end_crit_edge

e1000_write_phy_reg.exit.do.end_crit_edge:        ; preds = %e1000_write_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.end

if.end:                                           ; preds = %e1000_write_phy_reg.exit
  %call2.i14 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %2 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp5.i16 = icmp eq i32 %3, 1
  br i1 %cmp5.i16, label %if.then.i19, label %if.end.e1000_write_phy_reg.exit23_crit_edge

if.end.e1000_write_phy_reg.exit23_crit_edge:      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit23

if.then.i19:                                      ; preds = %if.end
  %call10.i17 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 30) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i17)
  %tobool.not.i18 = icmp eq i32 %call10.i17, 0
  br i1 %tobool.not.i18, label %if.then.i19.e1000_write_phy_reg.exit23_crit_edge, label %if.then.i19.do.end.sink.split_crit_edge

if.then.i19.do.end.sink.split_crit_edge:          ; preds = %if.then.i19
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.end.sink.split

if.then.i19.e1000_write_phy_reg.exit23_crit_edge: ; preds = %if.then.i19
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_write_phy_reg.exit23

e1000_write_phy_reg.exit23:                       ; preds = %if.then.i19.e1000_write_phy_reg.exit23_crit_edge, %if.end.e1000_write_phy_reg.exit23_crit_edge
  %call13.i20 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext 193) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i14) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i20)
  %tobool2.not = icmp eq i32 %call13.i20, 0
  br i1 %tobool2.not, label %if.end4, label %e1000_write_phy_reg.exit23.do.end_crit_edge

e1000_write_phy_reg.exit23.do.end_crit_edge:      ; preds = %e1000_write_phy_reg.exit23
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.end

if.end4:                                          ; preds = %e1000_write_phy_reg.exit23
  %call2.i24 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %4 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp5.i26 = icmp eq i32 %5, 1
  br i1 %cmp5.i26, label %if.then.i29, label %if.end4.if.end12.i31_crit_edge

if.end4.if.end12.i31_crit_edge:                   ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i31

if.then.i29:                                      ; preds = %if.end4
  %call10.i27 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 30) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i27)
  %tobool.not.i28 = icmp eq i32 %call10.i27, 0
  br i1 %tobool.not.i28, label %if.then.i29.if.end12.i31_crit_edge, label %if.then.i29.do.end.sink.split_crit_edge

if.then.i29.do.end.sink.split_crit_edge:          ; preds = %if.then.i29
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.end.sink.split

if.then.i29.if.end12.i31_crit_edge:               ; preds = %if.then.i29
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end12.i31

if.end12.i31:                                     ; preds = %if.then.i29.if.end12.i31_crit_edge, %if.end4.if.end12.i31_crit_edge
  %call13.i30 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 30, i16 noundef zeroext 0) #6
  br label %do.end.sink.split

do.end.sink.split:                                ; preds = %if.end12.i31, %if.then.i29.do.end.sink.split_crit_edge, %if.then.i19.do.end.sink.split_crit_edge, %if.then.i.do.end.sink.split_crit_edge
  %call2.i14.sink = phi i32 [ %call2.i, %if.then.i.do.end.sink.split_crit_edge ], [ %call2.i14, %if.then.i19.do.end.sink.split_crit_edge ], [ %call2.i24, %if.then.i29.do.end.sink.split_crit_edge ], [ %call2.i24, %if.end12.i31 ]
  %ret_val.0.ph = phi i32 [ %call10.i, %if.then.i.do.end.sink.split_crit_edge ], [ %call10.i17, %if.then.i19.do.end.sink.split_crit_edge ], [ %call10.i27, %if.then.i29.do.end.sink.split_crit_edge ], [ %call13.i30, %if.end12.i31 ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i14.sink) #6
  br label %do.end

do.end:                                           ; preds = %do.end.sink.split, %e1000_write_phy_reg.exit23.do.end_crit_edge, %e1000_write_phy_reg.exit.do.end_crit_edge
  %ret_val.0 = phi i32 [ %call13.i, %e1000_write_phy_reg.exit.do.end_crit_edge ], [ %call13.i20, %e1000_write_phy_reg.exit23.do.end_crit_edge ], [ %ret_val.0.ph, %do.end.sink.split ]
  ret i32 %ret_val.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_shift_out_mdi_bits(ptr nocapture noundef readonly %hw, i32 noundef %data, i16 noundef zeroext %count) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i16 %count to i32
  %sub = add nsw i32 %conv, -1
  %shl = shl nuw i32 1, %sub
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !612
  %3 = or i32 %2, 3
  %4 = tail call i32 @llvm.bswap.i32(i32 %3)
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry
  %mask.039 = phi i32 [ %shl, %entry ], [ %shr, %while.body.while.body_crit_edge ]
  %ctrl.038 = phi i32 [ %4, %entry ], [ %storemerge, %while.body.while.body_crit_edge ]
  %and = and i32 %mask.039, %data
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  %and5 = and i32 %ctrl.038, -1048577
  %masksel = select i1 %tobool3.not, i32 0, i32 1048576
  %storemerge = or i32 %masksel, %and5
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !613
  tail call void @arm_heavy_mb() #6
  %5 = tail call i32 @llvm.bswap.i32(i32 %storemerge)
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %7, i32 %5) #6, !srcloc !396
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr19 = getelementptr i8, ptr %9, i32 8
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr19) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !614
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %11 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %11(i32 noundef 2147480) #6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !557
  tail call void @arm_heavy_mb() #6
  %or.i = or i32 %storemerge, 2097152
  %12 = tail call i32 @llvm.bswap.i32(i32 %or.i) #6
  %13 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %14, i32 %12) #6, !srcloc !396
  %15 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw, align 4
  %add.ptr5.i = getelementptr i8, ptr %16, i32 8
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !558
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %18 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %18(i32 noundef 2147480) #6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !559
  tail call void @arm_heavy_mb() #6
  %and.i = and i32 %storemerge, -2097153
  %19 = tail call i32 @llvm.bswap.i32(i32 %and.i) #6
  %20 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hw, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %21, i32 %19) #6, !srcloc !396
  %22 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw, align 4
  %add.ptr5.i33 = getelementptr i8, ptr %23, i32 8
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i33) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !560
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %25 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %25(i32 noundef 2147480) #6
  %shr = lshr i32 %mask.039, 1
  %tobool.not = icmp ult i32 %mask.039, 2
  br i1 %tobool.not, label %while.end, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.body

while.end:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_check_polarity(ptr noundef %hw, ptr nocapture noundef writeonly %polarity) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %1 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %phy_type, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.200)
  switch i32 %2, label %entry.cleanup_crit_edge [
    i32 0, label %if.then
    i32 1, label %if.then6
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then:                                          ; preds = %entry
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %4 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp5.i = icmp eq i32 %5, 1
  br i1 %cmp5.i, label %if.then.i, label %if.then.e1000_read_phy_reg.exit_crit_edge

if.then.e1000_read_phy_reg.exit_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %if.then
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 17) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %if.then.e1000_read_phy_reg.exit_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 17, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end, label %e1000_read_phy_reg.exit.cleanup_crit_edge

e1000_read_phy_reg.exit.cleanup_crit_edge:        ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  %6 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %phy_data, align 2
  %8 = lshr i16 %7, 1
  %.lobit = and i16 %8, 1
  %9 = zext i16 %.lobit to i32
  %10 = ptrtoint ptr %polarity to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %polarity, align 4
  br label %cleanup

if.then6:                                         ; preds = %entry
  %call2.i44 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %11 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp5.i46 = icmp eq i32 %12, 1
  br i1 %cmp5.i46, label %if.then.i49, label %if.then6.e1000_read_phy_reg.exit53_crit_edge

if.then6.e1000_read_phy_reg.exit53_crit_edge:     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit53

if.then.i49:                                      ; preds = %if.then6
  %call10.i47 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 17) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i47)
  %tobool.not.i48 = icmp eq i32 %call10.i47, 0
  br i1 %tobool.not.i48, label %if.then.i49.e1000_read_phy_reg.exit53_crit_edge, label %e1000_read_phy_reg.exit53.thread

if.then.i49.e1000_read_phy_reg.exit53_crit_edge:  ; preds = %if.then.i49
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit53

e1000_read_phy_reg.exit53.thread:                 ; preds = %if.then.i49
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i44) #6
  br label %cleanup

e1000_read_phy_reg.exit53:                        ; preds = %if.then.i49.e1000_read_phy_reg.exit53_crit_edge, %if.then6.e1000_read_phy_reg.exit53_crit_edge
  %call13.i50 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 17, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i44) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i50)
  %tobool8.not = icmp eq i32 %call13.i50, 0
  br i1 %tobool8.not, label %if.end10, label %e1000_read_phy_reg.exit53.cleanup_crit_edge

e1000_read_phy_reg.exit53.cleanup_crit_edge:      ; preds = %e1000_read_phy_reg.exit53
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end10:                                         ; preds = %e1000_read_phy_reg.exit53
  %13 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %phy_data, align 2
  %conv11 = zext i16 %14 to i32
  %and12 = and i32 %conv11, 49152
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %and12)
  %cmp13 = icmp eq i32 %and12, 49152
  br i1 %cmp13, label %if.then15, label %if.else24

if.then15:                                        ; preds = %if.end10
  %call2.i54 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %15 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp5.i56 = icmp eq i32 %16, 1
  br i1 %cmp5.i56, label %if.then.i59, label %if.then15.e1000_read_phy_reg.exit63_crit_edge

if.then15.e1000_read_phy_reg.exit63_crit_edge:    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit63

if.then.i59:                                      ; preds = %if.then15
  %call10.i57 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 180) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i57)
  %tobool.not.i58 = icmp eq i32 %call10.i57, 0
  br i1 %tobool.not.i58, label %if.then.i59.e1000_read_phy_reg.exit63_crit_edge, label %e1000_read_phy_reg.exit63.thread

if.then.i59.e1000_read_phy_reg.exit63_crit_edge:  ; preds = %if.then.i59
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit63

e1000_read_phy_reg.exit63.thread:                 ; preds = %if.then.i59
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i54) #6
  br label %cleanup

e1000_read_phy_reg.exit63:                        ; preds = %if.then.i59.e1000_read_phy_reg.exit63_crit_edge, %if.then15.e1000_read_phy_reg.exit63_crit_edge
  %call13.i60 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 20, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i54) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i60)
  %tobool17.not = icmp eq i32 %call13.i60, 0
  br i1 %tobool17.not, label %if.end19, label %e1000_read_phy_reg.exit63.cleanup_crit_edge

e1000_read_phy_reg.exit63.cleanup_crit_edge:      ; preds = %e1000_read_phy_reg.exit63
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end19:                                         ; preds = %e1000_read_phy_reg.exit63
  call void @__sanitizer_cov_trace_pc() #8
  %17 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %phy_data, align 2
  %19 = and i16 %18, 120
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool22.not = icmp ne i16 %19, 0
  %cond23 = zext i1 %tobool22.not to i32
  %20 = ptrtoint ptr %polarity to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %cond23, ptr %polarity, align 4
  br label %cleanup

if.else24:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #8
  %and26 = lshr i32 %conv11, 1
  %and26.lobit = and i32 %and26, 1
  %21 = ptrtoint ptr %polarity to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %and26.lobit, ptr %polarity, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else24, %if.end19, %e1000_read_phy_reg.exit63.cleanup_crit_edge, %e1000_read_phy_reg.exit63.thread, %e1000_read_phy_reg.exit53.cleanup_crit_edge, %e1000_read_phy_reg.exit53.thread, %if.end, %e1000_read_phy_reg.exit.cleanup_crit_edge, %e1000_read_phy_reg.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13.i, %e1000_read_phy_reg.exit.cleanup_crit_edge ], [ %call13.i50, %e1000_read_phy_reg.exit53.cleanup_crit_edge ], [ %call13.i60, %e1000_read_phy_reg.exit63.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.else24 ], [ 0, %if.end19 ], [ 0, %if.end ], [ %call10.i, %e1000_read_phy_reg.exit.thread ], [ %call10.i47, %e1000_read_phy_reg.exit53.thread ], [ %call10.i57, %e1000_read_phy_reg.exit63.thread ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_get_cable_length(ptr noundef %hw, ptr nocapture noundef writeonly %min_length, ptr nocapture noundef writeonly %max_length) unnamed_addr #1 align 64 {
entry:
  %phy_data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_data) #6
  %0 = ptrtoint ptr %phy_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %phy_data, align 2, !annotation !414
  %1 = ptrtoint ptr %max_length to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 0, ptr %max_length, align 2
  %2 = ptrtoint ptr %min_length to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 0, ptr %min_length, align 2
  %phy_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 4
  %3 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %phy_type, align 4
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.201)
  switch i32 %4, label %entry.cleanup73_crit_edge [
    i32 0, label %if.then
    i32 1, label %for.body.preheader
  ]

entry.cleanup73_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

for.body.preheader:                               ; preds = %entry
  %call2.i113 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %6 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp5.i115 = icmp eq i32 %7, 1
  br i1 %cmp5.i115, label %if.then.i118, label %for.body.preheader.e1000_read_phy_reg.exit122_crit_edge

for.body.preheader.e1000_read_phy_reg.exit122_crit_edge: ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122

if.then:                                          ; preds = %entry
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %8 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp5.i = icmp eq i32 %9, 1
  br i1 %cmp5.i, label %if.then.i, label %if.then.e1000_read_phy_reg.exit_crit_edge

if.then.e1000_read_phy_reg.exit_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

if.then.i:                                        ; preds = %if.then
  %call10.i = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 17) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %if.then.i.e1000_read_phy_reg.exit_crit_edge, label %e1000_read_phy_reg.exit.thread

if.then.i.e1000_read_phy_reg.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit

e1000_read_phy_reg.exit.thread:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  br label %cleanup73

e1000_read_phy_reg.exit:                          ; preds = %if.then.i.e1000_read_phy_reg.exit_crit_edge, %if.then.e1000_read_phy_reg.exit_crit_edge
  %call13.i = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 17, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not = icmp eq i32 %call13.i, 0
  br i1 %tobool.not, label %if.end, label %e1000_read_phy_reg.exit.cleanup73_crit_edge

e1000_read_phy_reg.exit.cleanup73_crit_edge:      ; preds = %e1000_read_phy_reg.exit
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end:                                           ; preds = %e1000_read_phy_reg.exit
  %10 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %phy_data, align 2
  %12 = lshr i16 %11, 7
  %13 = and i16 %12, 7
  %conv3 = zext i16 %13 to i32
  %14 = zext i32 %conv3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.202)
  switch i32 %conv3, label %if.end.cleanup73_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
    i32 3, label %sw.bb6
    i32 4, label %sw.bb7
  ]

if.end.cleanup73_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  %15 = ptrtoint ptr %min_length to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 0, ptr %min_length, align 2
  %16 = ptrtoint ptr %max_length to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 50, ptr %max_length, align 2
  br label %cleanup73

sw.bb4:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  %17 = ptrtoint ptr %min_length to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 50, ptr %min_length, align 2
  %18 = ptrtoint ptr %max_length to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 80, ptr %max_length, align 2
  br label %cleanup73

sw.bb5:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  %19 = ptrtoint ptr %min_length to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 80, ptr %min_length, align 2
  %20 = ptrtoint ptr %max_length to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 110, ptr %max_length, align 2
  br label %cleanup73

sw.bb6:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  %21 = ptrtoint ptr %min_length to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 110, ptr %min_length, align 2
  %22 = ptrtoint ptr %max_length to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 140, ptr %max_length, align 2
  br label %cleanup73

sw.bb7:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  %23 = ptrtoint ptr %min_length to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 140, ptr %min_length, align 2
  %24 = ptrtoint ptr %max_length to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 170, ptr %max_length, align 2
  br label %cleanup73

if.then.i118:                                     ; preds = %for.body.preheader
  %call10.i116 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 4466) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i116)
  %tobool.not.i117 = icmp eq i32 %call10.i116, 0
  br i1 %tobool.not.i117, label %if.then.i118.e1000_read_phy_reg.exit122_crit_edge, label %if.then.i118.e1000_read_phy_reg.exit122.thread_crit_edge

if.then.i118.e1000_read_phy_reg.exit122.thread_crit_edge: ; preds = %if.then.i118
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.thread

if.then.i118.e1000_read_phy_reg.exit122_crit_edge: ; preds = %if.then.i118
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122

e1000_read_phy_reg.exit122.thread:                ; preds = %if.then.i118.3.e1000_read_phy_reg.exit122.thread_crit_edge, %if.then.i118.2.e1000_read_phy_reg.exit122.thread_crit_edge, %if.then.i118.1.e1000_read_phy_reg.exit122.thread_crit_edge, %if.then.i118.e1000_read_phy_reg.exit122.thread_crit_edge
  %call2.i113.lcssa = phi i32 [ %call2.i113, %if.then.i118.e1000_read_phy_reg.exit122.thread_crit_edge ], [ %call2.i113.1, %if.then.i118.1.e1000_read_phy_reg.exit122.thread_crit_edge ], [ %call2.i113.2, %if.then.i118.2.e1000_read_phy_reg.exit122.thread_crit_edge ], [ %call2.i113.3, %if.then.i118.3.e1000_read_phy_reg.exit122.thread_crit_edge ]
  %call10.i116.lcssa = phi i32 [ %call10.i116, %if.then.i118.e1000_read_phy_reg.exit122.thread_crit_edge ], [ %call10.i116.1, %if.then.i118.1.e1000_read_phy_reg.exit122.thread_crit_edge ], [ %call10.i116.2, %if.then.i118.2.e1000_read_phy_reg.exit122.thread_crit_edge ], [ %call10.i116.3, %if.then.i118.3.e1000_read_phy_reg.exit122.thread_crit_edge ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i113.lcssa) #6
  br label %cleanup73

e1000_read_phy_reg.exit122:                       ; preds = %if.then.i118.e1000_read_phy_reg.exit122_crit_edge, %for.body.preheader.e1000_read_phy_reg.exit122_crit_edge
  %call13.i119 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 18, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i113) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i119)
  %tobool17.not = icmp eq i32 %call13.i119, 0
  br i1 %tobool17.not, label %if.end19, label %e1000_read_phy_reg.exit122.cleanup73_crit_edge

e1000_read_phy_reg.exit122.cleanup73_crit_edge:   ; preds = %e1000_read_phy_reg.exit122
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end19:                                         ; preds = %e1000_read_phy_reg.exit122
  %25 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %phy_data, align 2
  %27 = add i16 %26, -16256
  call void @__sanitizer_cov_trace_const_cmp2(i16 -16128, i16 %27)
  %28 = icmp ult i16 %27, -16128
  br i1 %28, label %if.end19.cleanup73_crit_edge, label %if.end30

if.end19.cleanup73_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end30:                                         ; preds = %if.end19
  %29 = lshr i16 %26, 7
  %call2.i113.1 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %30 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %31)
  %cmp5.i115.1 = icmp eq i32 %31, 1
  br i1 %cmp5.i115.1, label %if.then.i118.1, label %if.end30.e1000_read_phy_reg.exit122.1_crit_edge

if.end30.e1000_read_phy_reg.exit122.1_crit_edge:  ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.1

if.then.i118.1:                                   ; preds = %if.end30
  %call10.i116.1 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 4722) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i116.1)
  %tobool.not.i117.1 = icmp eq i32 %call10.i116.1, 0
  br i1 %tobool.not.i117.1, label %if.then.i118.1.e1000_read_phy_reg.exit122.1_crit_edge, label %if.then.i118.1.e1000_read_phy_reg.exit122.thread_crit_edge

if.then.i118.1.e1000_read_phy_reg.exit122.thread_crit_edge: ; preds = %if.then.i118.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.thread

if.then.i118.1.e1000_read_phy_reg.exit122.1_crit_edge: ; preds = %if.then.i118.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.1

e1000_read_phy_reg.exit122.1:                     ; preds = %if.then.i118.1.e1000_read_phy_reg.exit122.1_crit_edge, %if.end30.e1000_read_phy_reg.exit122.1_crit_edge
  %call13.i119.1 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 18, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i113.1) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i119.1)
  %tobool17.not.1 = icmp eq i32 %call13.i119.1, 0
  br i1 %tobool17.not.1, label %if.end19.1, label %e1000_read_phy_reg.exit122.1.cleanup73_crit_edge

e1000_read_phy_reg.exit122.1.cleanup73_crit_edge: ; preds = %e1000_read_phy_reg.exit122.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end19.1:                                       ; preds = %e1000_read_phy_reg.exit122.1
  %32 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %phy_data, align 2
  %34 = add i16 %33, -16256
  call void @__sanitizer_cov_trace_const_cmp2(i16 -16128, i16 %34)
  %35 = icmp ult i16 %34, -16128
  br i1 %35, label %if.end19.1.cleanup73_crit_edge, label %if.end30.1

if.end19.1.cleanup73_crit_edge:                   ; preds = %if.end19.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end30.1:                                       ; preds = %if.end19.1
  %36 = lshr i16 %33, 7
  %narrow = add nuw nsw i16 %29, %36
  %37 = call i16 @llvm.umin.i16(i16 %29, i16 %36)
  %call2.i113.2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %38 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %39)
  %cmp5.i115.2 = icmp eq i32 %39, 1
  br i1 %cmp5.i115.2, label %if.then.i118.2, label %if.end30.1.e1000_read_phy_reg.exit122.2_crit_edge

if.end30.1.e1000_read_phy_reg.exit122.2_crit_edge: ; preds = %if.end30.1
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.2

if.then.i118.2:                                   ; preds = %if.end30.1
  %call10.i116.2 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 5234) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i116.2)
  %tobool.not.i117.2 = icmp eq i32 %call10.i116.2, 0
  br i1 %tobool.not.i117.2, label %if.then.i118.2.e1000_read_phy_reg.exit122.2_crit_edge, label %if.then.i118.2.e1000_read_phy_reg.exit122.thread_crit_edge

if.then.i118.2.e1000_read_phy_reg.exit122.thread_crit_edge: ; preds = %if.then.i118.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.thread

if.then.i118.2.e1000_read_phy_reg.exit122.2_crit_edge: ; preds = %if.then.i118.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.2

e1000_read_phy_reg.exit122.2:                     ; preds = %if.then.i118.2.e1000_read_phy_reg.exit122.2_crit_edge, %if.end30.1.e1000_read_phy_reg.exit122.2_crit_edge
  %call13.i119.2 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 18, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i113.2) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i119.2)
  %tobool17.not.2 = icmp eq i32 %call13.i119.2, 0
  br i1 %tobool17.not.2, label %if.end19.2, label %e1000_read_phy_reg.exit122.2.cleanup73_crit_edge

e1000_read_phy_reg.exit122.2.cleanup73_crit_edge: ; preds = %e1000_read_phy_reg.exit122.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end19.2:                                       ; preds = %e1000_read_phy_reg.exit122.2
  %40 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %phy_data, align 2
  %42 = add i16 %41, -16256
  call void @__sanitizer_cov_trace_const_cmp2(i16 -16128, i16 %42)
  %43 = icmp ult i16 %42, -16128
  br i1 %43, label %if.end19.2.cleanup73_crit_edge, label %if.end30.2

if.end19.2.cleanup73_crit_edge:                   ; preds = %if.end19.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end30.2:                                       ; preds = %if.end19.2
  %44 = lshr i16 %41, 7
  %narrow138 = add nuw nsw i16 %narrow, %44
  %45 = call i16 @llvm.umin.i16(i16 %37, i16 %44)
  %call2.i113.3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @e1000_phy_lock) #6
  %46 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %47)
  %cmp5.i115.3 = icmp eq i32 %47, 1
  br i1 %cmp5.i115.3, label %if.then.i118.3, label %if.end30.2.e1000_read_phy_reg.exit122.3_crit_edge

if.end30.2.e1000_read_phy_reg.exit122.3_crit_edge: ; preds = %if.end30.2
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.3

if.then.i118.3:                                   ; preds = %if.end30.2
  %call10.i116.3 = tail call fastcc i32 @e1000_write_phy_reg_ex(ptr noundef %hw, i32 noundef 31, i16 noundef zeroext 6258) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i116.3)
  %tobool.not.i117.3 = icmp eq i32 %call10.i116.3, 0
  br i1 %tobool.not.i117.3, label %if.then.i118.3.e1000_read_phy_reg.exit122.3_crit_edge, label %if.then.i118.3.e1000_read_phy_reg.exit122.thread_crit_edge

if.then.i118.3.e1000_read_phy_reg.exit122.thread_crit_edge: ; preds = %if.then.i118.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.thread

if.then.i118.3.e1000_read_phy_reg.exit122.3_crit_edge: ; preds = %if.then.i118.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %e1000_read_phy_reg.exit122.3

e1000_read_phy_reg.exit122.3:                     ; preds = %if.then.i118.3.e1000_read_phy_reg.exit122.3_crit_edge, %if.end30.2.e1000_read_phy_reg.exit122.3_crit_edge
  %call13.i119.3 = call fastcc i32 @e1000_read_phy_reg_ex(ptr noundef %hw, i32 noundef 18, ptr noundef nonnull %phy_data) #6
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @e1000_phy_lock, i32 noundef %call2.i113.3) #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i119.3)
  %tobool17.not.3 = icmp eq i32 %call13.i119.3, 0
  br i1 %tobool17.not.3, label %if.end19.3, label %e1000_read_phy_reg.exit122.3.cleanup73_crit_edge

e1000_read_phy_reg.exit122.3.cleanup73_crit_edge: ; preds = %e1000_read_phy_reg.exit122.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end19.3:                                       ; preds = %e1000_read_phy_reg.exit122.3
  %48 = ptrtoint ptr %phy_data to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %phy_data, align 2
  %50 = add i16 %49, -16256
  call void @__sanitizer_cov_trace_const_cmp2(i16 -16128, i16 %50)
  %51 = icmp ult i16 %50, -16128
  br i1 %51, label %if.end19.3.cleanup73_crit_edge, label %if.end30.3

if.end19.3.cleanup73_crit_edge:                   ; preds = %if.end19.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup73

if.end30.3:                                       ; preds = %if.end19.3
  %52 = lshr i16 %49, 7
  %narrow139 = add nuw nsw i16 %narrow138, %52
  %53 = call i16 @llvm.umin.i16(i16 %45, i16 %52)
  call void @__sanitizer_cov_trace_const_cmp2(i16 200, i16 %narrow139)
  %cmp41 = icmp ult i16 %narrow139, 200
  %conv46 = sub nsw i16 %narrow139, %53
  %54 = udiv i16 %conv46, 3
  %55 = lshr i16 %narrow139, 2
  %agc_value.1.in.v = select i1 %cmp41, i16 %54, i16 %55
  %agc_value.1.in = zext i16 %agc_value.1.in.v to i32
  %arrayidx55 = getelementptr [128 x i16], ptr @e1000_igp_cable_length_table, i32 0, i32 %agc_value.1.in
  %56 = add nsw i32 %agc_value.1.in, -24
  call void @__sanitizer_cov_trace_const_cmp4(i32 104, i32 %56)
  %cmp58 = icmp ult i32 %56, 104
  br i1 %cmp58, label %cond.true, label %if.end30.3.cleanup_crit_edge

if.end30.3.cleanup_crit_edge:                     ; preds = %if.end30.3
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

cond.true:                                        ; preds = %if.end30.3
  call void @__sanitizer_cov_trace_pc() #8
  %57 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %arrayidx55, align 2
  %sub57 = add i16 %58, -10
  br label %cleanup

cleanup:                                          ; preds = %cond.true, %if.end30.3.cleanup_crit_edge
  %cond = phi i16 [ %sub57, %cond.true ], [ 0, %if.end30.3.cleanup_crit_edge ]
  %59 = ptrtoint ptr %min_length to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 %cond, ptr %min_length, align 2
  %60 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %arrayidx55, align 2
  %add68 = add i16 %61, 10
  %62 = ptrtoint ptr %max_length to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %add68, ptr %max_length, align 2
  br label %cleanup73

cleanup73:                                        ; preds = %cleanup, %if.end19.3.cleanup73_crit_edge, %e1000_read_phy_reg.exit122.3.cleanup73_crit_edge, %if.end19.2.cleanup73_crit_edge, %e1000_read_phy_reg.exit122.2.cleanup73_crit_edge, %if.end19.1.cleanup73_crit_edge, %e1000_read_phy_reg.exit122.1.cleanup73_crit_edge, %if.end19.cleanup73_crit_edge, %e1000_read_phy_reg.exit122.cleanup73_crit_edge, %e1000_read_phy_reg.exit122.thread, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb, %if.end.cleanup73_crit_edge, %e1000_read_phy_reg.exit.cleanup73_crit_edge, %e1000_read_phy_reg.exit.thread, %entry.cleanup73_crit_edge
  %retval.1 = phi i32 [ %call13.i, %e1000_read_phy_reg.exit.cleanup73_crit_edge ], [ -2, %if.end.cleanup73_crit_edge ], [ %call10.i, %e1000_read_phy_reg.exit.thread ], [ 0, %cleanup ], [ 0, %entry.cleanup73_crit_edge ], [ 0, %sw.bb ], [ 0, %sw.bb4 ], [ 0, %sw.bb5 ], [ 0, %sw.bb6 ], [ 0, %sw.bb7 ], [ %call10.i116.lcssa, %e1000_read_phy_reg.exit122.thread ], [ -2, %if.end19.cleanup73_crit_edge ], [ %call13.i119, %e1000_read_phy_reg.exit122.cleanup73_crit_edge ], [ %call13.i119.1, %e1000_read_phy_reg.exit122.1.cleanup73_crit_edge ], [ -2, %if.end19.1.cleanup73_crit_edge ], [ %call13.i119.2, %e1000_read_phy_reg.exit122.2.cleanup73_crit_edge ], [ -2, %if.end19.2.cleanup73_crit_edge ], [ %call13.i119.3, %e1000_read_phy_reg.exit122.3.cleanup73_crit_edge ], [ -2, %if.end19.3.cleanup73_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_data) #6
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_acquire_eeprom(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %eeprom1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %add.ptr = getelementptr i8, ptr %1, i32 16
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !615
  %4 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %5)
  %cmp4 = icmp ugt i32 %5, 4
  br i1 %cmp4, label %if.then, label %entry.if.end57_crit_edge

entry.if.end57_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end57

if.then:                                          ; preds = %entry
  %or = or i32 %3, 64
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !616
  tail call void @arm_heavy_mb() #6
  %6 = tail call i32 @llvm.bswap.i32(i32 %or)
  %7 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw, align 4
  %add.ptr9 = getelementptr i8, ptr %8, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr9, i32 %6) #6, !srcloc !396
  %9 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw, align 4
  %add.ptr16 = getelementptr i8, ptr %10, i32 16
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr16) #6, !srcloc !392
  %12 = tail call i32 @llvm.bswap.i32(i32 %11)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !617
  %and138 = and i32 %12, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and138)
  %tobool.not139 = icmp eq i32 %and138, 0
  br i1 %tobool.not139, label %if.then.while.body_crit_edge, label %if.then.if.end57_crit_edge

if.then.if.end57_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end57

if.then.while.body_crit_edge:                     ; preds = %if.then
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.then.while.body_crit_edge
  %i.0140 = phi i32 [ %inc, %while.body.while.body_crit_edge ], [ 0, %if.then.while.body_crit_edge ]
  %inc = add nuw nsw i32 %i.0140, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %13 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %13(i32 noundef 1073740) #6
  %14 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw, align 4
  %add.ptr27 = getelementptr i8, ptr %15, i32 16
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr27) #6, !srcloc !392
  %17 = tail call i32 @llvm.bswap.i32(i32 %16)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !618
  %and = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 999, i32 %i.0140)
  %cmp20 = icmp ult i32 %i.0140, 999
  %or.cond = select i1 %tobool.not, i1 %cmp20, i1 false
  br i1 %or.cond, label %while.body.while.body_crit_edge, label %while.end

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.body

while.end:                                        ; preds = %while.body
  br i1 %tobool.not, label %if.then33, label %while.end.if.end57_crit_edge

while.end.if.end57_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end57

if.then33:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #8
  %and34 = and i32 %17, -65
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !619
  tail call void @arm_heavy_mb() #6
  %18 = tail call i32 @llvm.bswap.i32(i32 %and34)
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr42 = getelementptr i8, ptr %20, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr42, i32 %18) #6, !srcloc !396
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_acquire_eeprom.__UNIQUE_ID_ddebug603, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_acquire_eeprom, %if.then50)) #6
          to label %cleanup [label %if.then50], !srcloc !394

if.then50:                                        ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #8
  %call51 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_acquire_eeprom.__UNIQUE_ID_ddebug603, ptr noundef %call51, ptr noundef nonnull @.str.125) #6
  br label %cleanup

if.end57:                                         ; preds = %while.end.if.end57_crit_edge, %if.then.if.end57_crit_edge, %entry.if.end57_crit_edge
  %eecd.1 = phi i32 [ %17, %while.end.if.end57_crit_edge ], [ %3, %entry.if.end57_crit_edge ], [ %12, %if.then.if.end57_crit_edge ]
  %21 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %eeprom1, align 4
  %23 = zext i32 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.203)
  switch i32 %22, label %if.end57.cleanup_crit_edge [
    i32 2, label %if.then59
    i32 1, label %if.then80
  ]

if.end57.cleanup_crit_edge:                       ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.then59:                                        ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #8
  %and60 = and i32 %eecd.1, -6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !620
  tail call void @arm_heavy_mb() #6
  %24 = tail call i32 @llvm.bswap.i32(i32 %and60)
  %25 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw, align 4
  %add.ptr68 = getelementptr i8, ptr %26, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr68, i32 %24) #6, !srcloc !396
  %or69 = or i32 %and60, 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !621
  tail call void @arm_heavy_mb() #6
  %27 = tail call i32 @llvm.bswap.i32(i32 %or69)
  %28 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw, align 4
  %add.ptr77 = getelementptr i8, ptr %29, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr77, i32 %27) #6, !srcloc !396
  br label %cleanup

if.then80:                                        ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #8
  %and81 = and i32 %eecd.1, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !622
  tail call void @arm_heavy_mb() #6
  %30 = tail call i32 @llvm.bswap.i32(i32 %and81)
  %31 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %hw, align 4
  %add.ptr89 = getelementptr i8, ptr %32, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr89, i32 %30) #6, !srcloc !396
  %33 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %hw, align 4
  %add.ptr96 = getelementptr i8, ptr %34, i32 8
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr96) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !623
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %36 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %36(i32 noundef 214748) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then80, %if.then59, %if.end57.cleanup_crit_edge, %if.then50, %if.then33
  %retval.0 = phi i32 [ -1, %if.then50 ], [ 0, %if.end57.cleanup_crit_edge ], [ 0, %if.then80 ], [ 0, %if.then59 ], [ -1, %if.then33 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_spi_eeprom_ready(ptr noundef %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %opcode_bits = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  br label %do.body

do.body:                                          ; preds = %if.end.do.body_crit_edge, %entry
  %retry_count.0 = phi i16 [ 0, %entry ], [ %add, %if.end.do.body_crit_edge ]
  %0 = ptrtoint ptr %opcode_bits to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %opcode_bits, align 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext 5, i16 noundef zeroext %1)
  %call = tail call fastcc zeroext i16 @e1000_shift_in_ee_bits(ptr noundef %hw, i16 noundef zeroext 8)
  %2 = and i16 %call, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool.not = icmp eq i16 %2, 0
  br i1 %tobool.not, label %do.body.cleanup_crit_edge, label %if.end

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %cleanup

if.end:                                           ; preds = %do.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %3 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %3(i32 noundef 1073740) #6
  %add = add nuw nsw i16 %retry_count.0, 5
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw)
  %cmp = icmp ult i16 %retry_count.0, 4995
  br i1 %cmp, label %if.end.do.body_crit_edge, label %do.body11

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body

do.body11:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_spi_eeprom_ready.__UNIQUE_ID_ddebug604, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_spi_eeprom_ready, %if.then16)) #6
          to label %cleanup [label %if.then16], !srcloc !394

if.then16:                                        ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #8
  %call17 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_spi_eeprom_ready.__UNIQUE_ID_ddebug604, ptr noundef %call17, ptr noundef nonnull @.str.127) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then16, %do.body11, %do.body.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %if.then16 ], [ -1, %do.body11 ], [ 0, %do.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_release_eeprom(ptr nocapture noundef readonly %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %mac_type = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 3
  %add.ptr = getelementptr i8, ptr %1, i32 16
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !624
  %eeprom = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15
  %4 = ptrtoint ptr %eeprom to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %eeprom, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.204)
  switch i32 %5, label %entry.if.end129_crit_edge [
    i32 1, label %if.then
    i32 2, label %if.then36
  ]

entry.if.end129_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end129

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %or = and i32 %3, -4
  %and = or i32 %or, 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !625
  tail call void @arm_heavy_mb() #6
  %7 = tail call i32 @llvm.bswap.i32(i32 %and)
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr7 = getelementptr i8, ptr %9, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7, i32 %7) #6, !srcloc !396
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr14 = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr14) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !626
  %delay_usec = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  br label %if.end129.sink.split

if.then36:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %and37 = and i32 %3, -7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !627
  tail call void @arm_heavy_mb() #6
  %13 = tail call i32 @llvm.bswap.i32(i32 %and37)
  %14 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw, align 4
  %add.ptr46 = getelementptr i8, ptr %15, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr46, i32 %13) #6, !srcloc !396
  %or47 = or i32 %and37, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !628
  tail call void @arm_heavy_mb() #6
  %16 = tail call i32 @llvm.bswap.i32(i32 %or47)
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr56 = getelementptr i8, ptr %18, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr56, i32 %16) #6, !srcloc !396
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr64 = getelementptr i8, ptr %20, i32 8
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr64) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !629
  %delay_usec69 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  %22 = ptrtoint ptr %delay_usec69 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %delay_usec69, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %24 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv86 = zext i16 %23 to i32
  tail call void %24(i32 noundef %conv86) #6
  %and88 = and i32 %3, -8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !630
  tail call void @arm_heavy_mb() #6
  %25 = tail call i32 @llvm.bswap.i32(i32 %and88)
  %26 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hw, align 4
  %add.ptr97 = getelementptr i8, ptr %27, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr97, i32 %25) #6, !srcloc !396
  %28 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw, align 4
  %add.ptr105 = getelementptr i8, ptr %29, i32 8
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr105) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !631
  br label %if.end129.sink.split

if.end129.sink.split:                             ; preds = %if.then36, %if.then
  %delay_usec69.sink = phi ptr [ %delay_usec69, %if.then36 ], [ %delay_usec, %if.then ]
  %eecd.0.ph = phi i32 [ %and88, %if.then36 ], [ %and, %if.then ]
  %31 = ptrtoint ptr %delay_usec69.sink to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %delay_usec69.sink, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %33 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv127 = zext i16 %32 to i32
  tail call void %33(i32 noundef %conv127) #6
  br label %if.end129

if.end129:                                        ; preds = %if.end129.sink.split, %entry.if.end129_crit_edge
  %eecd.0 = phi i32 [ %3, %entry.if.end129_crit_edge ], [ %eecd.0.ph, %if.end129.sink.split ]
  %34 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %35)
  %cmp131 = icmp ugt i32 %35, 4
  br i1 %cmp131, label %if.then133, label %if.end129.if.end144_crit_edge

if.end129.if.end144_crit_edge:                    ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end144

if.then133:                                       ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #8
  %and134 = and i32 %eecd.0, -65
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !632
  tail call void @arm_heavy_mb() #6
  %36 = tail call i32 @llvm.bswap.i32(i32 %and134)
  %37 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hw, align 4
  %add.ptr143 = getelementptr i8, ptr %38, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr143, i32 %36) #6, !srcloc !396
  br label %if.end144

if.end144:                                        ; preds = %if.then133, %if.end129.if.end144_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_standby_eeprom(ptr nocapture noundef readonly %hw) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %eeprom1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 16
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !633
  %4 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %eeprom1, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.205)
  switch i32 %5, label %entry.if.end217_crit_edge [
    i32 2, label %if.then
    i32 1, label %if.then142
  ]

entry.if.end217_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end217

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %and = and i32 %3, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !634
  tail call void @arm_heavy_mb() #6
  %7 = tail call i32 @llvm.bswap.i32(i32 %and)
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr8 = getelementptr i8, ptr %9, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8, i32 %7) #6, !srcloc !396
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr15 = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !635
  %delay_usec = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  %13 = ptrtoint ptr %delay_usec to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %delay_usec, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %15 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv27 = zext i16 %14 to i32
  tail call void %15(i32 noundef %conv27) #6
  %or = or i32 %and, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !636
  tail call void @arm_heavy_mb() #6
  %16 = tail call i32 @llvm.bswap.i32(i32 %or)
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr37 = getelementptr i8, ptr %18, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr37, i32 %16) #6, !srcloc !396
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr45 = getelementptr i8, ptr %20, i32 8
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr45) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !637
  %22 = ptrtoint ptr %delay_usec to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %delay_usec, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %24 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv63 = zext i16 %23 to i32
  tail call void %24(i32 noundef %conv63) #6
  %or65 = or i32 %3, 3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !638
  tail call void @arm_heavy_mb() #6
  %25 = tail call i32 @llvm.bswap.i32(i32 %or65)
  %26 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hw, align 4
  %add.ptr74 = getelementptr i8, ptr %27, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr74, i32 %25) #6, !srcloc !396
  %28 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw, align 4
  %add.ptr82 = getelementptr i8, ptr %29, i32 8
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr82) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !639
  %31 = ptrtoint ptr %delay_usec to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %delay_usec, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %33 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv100 = zext i16 %32 to i32
  tail call void %33(i32 noundef %conv100) #6
  %and102 = and i32 %or65, -2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !640
  tail call void @arm_heavy_mb() #6
  %34 = tail call i32 @llvm.bswap.i32(i32 %and102)
  %35 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hw, align 4
  %add.ptr111 = getelementptr i8, ptr %36, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr111, i32 %34) #6, !srcloc !396
  %37 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hw, align 4
  %add.ptr119 = getelementptr i8, ptr %38, i32 8
  %39 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr119) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !641
  br label %if.end217.sink.split

if.then142:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %or143 = or i32 %3, 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !642
  tail call void @arm_heavy_mb() #6
  %40 = tail call i32 @llvm.bswap.i32(i32 %or143)
  %41 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %hw, align 4
  %add.ptr152 = getelementptr i8, ptr %42, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr152, i32 %40) #6, !srcloc !396
  %43 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hw, align 4
  %add.ptr160 = getelementptr i8, ptr %44, i32 8
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr160) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !643
  %delay_usec164 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  %46 = ptrtoint ptr %delay_usec164 to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %delay_usec164, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %48 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv178 = zext i16 %47 to i32
  tail call void %48(i32 noundef %conv178) #6
  %and180 = and i32 %3, -3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !644
  tail call void @arm_heavy_mb() #6
  %49 = tail call i32 @llvm.bswap.i32(i32 %and180)
  %50 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hw, align 4
  %add.ptr189 = getelementptr i8, ptr %51, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr189, i32 %49) #6, !srcloc !396
  %52 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %hw, align 4
  %add.ptr197 = getelementptr i8, ptr %53, i32 8
  %54 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr197) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !645
  br label %if.end217.sink.split

if.end217.sink.split:                             ; preds = %if.then142, %if.then
  %delay_usec164.sink = phi ptr [ %delay_usec164, %if.then142 ], [ %delay_usec, %if.then ]
  %55 = ptrtoint ptr %delay_usec164.sink to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %delay_usec164.sink, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %57 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv215 = zext i16 %56 to i32
  tail call void %57(i32 noundef %conv215) #6
  br label %if.end217

if.end217:                                        ; preds = %if.end217.sink.split, %entry.if.end217_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_shift_out_ee_bits(ptr nocapture noundef readonly %hw, i16 noundef zeroext %data, i16 noundef zeroext %count) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %eeprom1 = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15
  %conv = zext i16 %count to i32
  %sub = add nsw i32 %conv, -1
  %shl = shl nuw i32 1, %sub
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 16
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !646
  %4 = ptrtoint ptr %eeprom1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %eeprom1, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.206)
  switch i32 %5, label %entry.if.end10_crit_edge [
    i32 2, label %if.then
    i32 1, label %if.then9
  ]

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %if.end10

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %and = and i32 %3, -9
  br label %if.end10

if.then9:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  %or = or i32 %3, 8
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.then, %entry.if.end10_crit_edge
  %eecd.0 = phi i32 [ %3, %entry.if.end10_crit_edge ], [ %or, %if.then9 ], [ %and, %if.then ]
  %conv12 = zext i16 %data to i32
  %delay_usec = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %if.end10
  %eecd.1 = phi i32 [ %eecd.0, %if.end10 ], [ %and.i, %do.body.do.body_crit_edge ]
  %mask.0 = phi i32 [ %shl, %if.end10 ], [ %shr, %do.body.do.body_crit_edge ]
  %and11 = and i32 %eecd.1, -5
  %and13 = and i32 %mask.0, %conv12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool.not = icmp eq i32 %and13, 0
  %masksel = select i1 %tobool.not, i32 0, i32 4
  %spec.select = or i32 %masksel, %and11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !647
  tail call void @arm_heavy_mb() #6
  %7 = tail call i32 @llvm.bswap.i32(i32 %spec.select)
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr23 = getelementptr i8, ptr %9, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr23, i32 %7) #6, !srcloc !396
  %10 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw, align 4
  %add.ptr31 = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr31) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !648
  %13 = ptrtoint ptr %delay_usec to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %delay_usec, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %15 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv44 = zext i16 %14 to i32
  tail call void %15(i32 noundef %conv44) #6
  %or.i = or i32 %spec.select, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !649
  tail call void @arm_heavy_mb() #6
  %16 = tail call i32 @llvm.bswap.i32(i32 %or.i) #6
  %17 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw, align 4
  %add.ptr.i = getelementptr i8, ptr %18, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %16) #6, !srcloc !396
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %add.ptr5.i = getelementptr i8, ptr %20, i32 8
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !650
  %22 = ptrtoint ptr %delay_usec to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %delay_usec, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %24 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv18.i = zext i16 %23 to i32
  tail call void %24(i32 noundef %conv18.i) #6
  %and.i = and i32 %spec.select, -2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !651
  tail call void @arm_heavy_mb() #6
  %25 = tail call i32 @llvm.bswap.i32(i32 %and.i) #6
  %26 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hw, align 4
  %add.ptr.i76 = getelementptr i8, ptr %27, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i76, i32 %25) #6, !srcloc !396
  %28 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw, align 4
  %add.ptr5.i77 = getelementptr i8, ptr %29, i32 8
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i77) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !652
  %31 = ptrtoint ptr %delay_usec to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %delay_usec, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %33 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv18.i85 = zext i16 %32 to i32
  tail call void %33(i32 noundef %conv18.i85) #6
  %shr = lshr i32 %mask.0, 1
  %tobool47.not = icmp ult i32 %mask.0, 2
  br i1 %tobool47.not, label %do.end48, label %do.body.do.body_crit_edge

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %do.body

do.end48:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #8
  %and49 = and i32 %eecd.1, -6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !653
  tail call void @arm_heavy_mb() #6
  %34 = tail call i32 @llvm.bswap.i32(i32 %and49)
  %35 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hw, align 4
  %add.ptr58 = getelementptr i8, ptr %36, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr58, i32 %34) #6, !srcloc !396
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i16 @e1000_shift_in_ee_bits(ptr nocapture noundef readonly %hw, i16 noundef zeroext %count) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 16
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !654
  %conv = zext i16 %count to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %count)
  %cmp243.not = icmp eq i16 %count, 0
  br i1 %cmp243.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %3 = and i32 %2, -201326593
  %4 = tail call i32 @llvm.bswap.i32(i32 %3)
  %delay_usec.i = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.046 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %data.045 = phi i16 [ 0, %for.body.lr.ph ], [ %22, %for.body.for.body_crit_edge ]
  %eecd.044 = phi i32 [ %4, %for.body.lr.ph ], [ %and.i, %for.body.for.body_crit_edge ]
  %shl = shl i16 %data.045, 1
  %or.i = or i32 %eecd.044, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !649
  tail call void @arm_heavy_mb() #6
  %5 = tail call i32 @llvm.bswap.i32(i32 %or.i) #6
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %5) #6, !srcloc !396
  %8 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw, align 4
  %add.ptr5.i = getelementptr i8, ptr %9, i32 8
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !650
  %11 = ptrtoint ptr %delay_usec.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %delay_usec.i, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %13 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv18.i = zext i16 %12 to i32
  tail call void %13(i32 noundef %conv18.i) #6
  %14 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw, align 4
  %add.ptr13 = getelementptr i8, ptr %15, i32 16
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr13) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !655
  %17 = and i32 %16, -67108865
  %18 = tail call i32 @llvm.bswap.i32(i32 %17)
  %19 = trunc i32 %18 to i16
  %20 = lshr i16 %19, 3
  %21 = and i16 %20, 1
  %22 = or i16 %21, %shl
  %and.i = and i32 %18, -6
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !651
  tail call void @arm_heavy_mb() #6
  %23 = tail call i32 @llvm.bswap.i32(i32 %and.i) #6
  %24 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw, align 4
  %add.ptr.i29 = getelementptr i8, ptr %25, i32 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i29, i32 %23) #6, !srcloc !396
  %26 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hw, align 4
  %add.ptr5.i30 = getelementptr i8, ptr %27, i32 8
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i30) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !652
  %29 = ptrtoint ptr %delay_usec.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %delay_usec.i, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %31 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  %conv18.i38 = zext i16 %30 to i32
  tail call void %31(i32 noundef %conv18.i38) #6
  %inc = add nuw nsw i32 %i.046, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %data.0.lcssa = phi i16 [ 0, %entry.for.end_crit_edge ], [ %22, %for.body.for.end_crit_edge ]
  ret i16 %data.0.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_readsw(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_write_eeprom_microwire(ptr noundef %hw, i16 noundef zeroext %offset, i16 noundef zeroext %words, ptr nocapture noundef readonly %data) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #8
  call void @llvm.arm.gnu.eabi.mcount()
  %opcode_bits = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 2
  %0 = ptrtoint ptr %opcode_bits to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %opcode_bits, align 2
  %add = add i16 %1, 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext 19, i16 noundef zeroext %add)
  %address_bits = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 15, i32 3
  %2 = ptrtoint ptr %address_bits to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %address_bits, align 4
  %sub = add i16 %3, -2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext 0, i16 noundef zeroext %sub)
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw)
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %words)
  %cmp77.not = icmp eq i16 %words, 0
  br i1 %cmp77.not, label %entry.while.end_crit_edge, label %while.body.preheader

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.end

while.body.preheader:                             ; preds = %entry
  %wide.trip.count = zext i16 %words to i32
  br label %while.body

while.body:                                       ; preds = %if.end35.while.body_crit_edge, %while.body.preheader
  %indvars.iv = phi i32 [ 0, %while.body.preheader ], [ %indvars.iv.next, %if.end35.while.body_crit_edge ]
  %4 = ptrtoint ptr %opcode_bits to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %opcode_bits, align 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext 5, i16 noundef zeroext %5)
  %6 = trunc i32 %indvars.iv to i16
  %add11 = add i16 %6, %offset
  %7 = ptrtoint ptr %address_bits to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %address_bits, align 4
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext %add11, i16 noundef zeroext %8)
  %arrayidx = getelementptr i16, ptr %data, i32 %indvars.iv
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %arrayidx, align 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext %10, i16 noundef zeroext 16)
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw)
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %while.body
  %i.076 = phi i16 [ 0, %while.body ], [ %inc, %if.end.for.body_crit_edge ]
  %11 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hw, align 4
  %add.ptr = getelementptr i8, ptr %12, i32 16
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #6, !srcloc !392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #6, !srcloc !656
  %14 = and i32 %13, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not = icmp eq i32 %14, 0
  br i1 %tobool.not, label %if.end, label %if.end35

if.end:                                           ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %15 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %15(i32 noundef 10737400) #6
  %inc = add nuw nsw i16 %i.076, 1
  %cmp15 = icmp ult i16 %i.076, 199
  br i1 %cmp15, label %if.end.for.body_crit_edge, label %do.body24

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  br label %for.body

do.body24:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_write_eeprom_microwire.__UNIQUE_ID_ddebug611, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_write_eeprom_microwire, %if.then30)) #6
          to label %cleanup [label %if.then30], !srcloc !394

if.then30:                                        ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #8
  %call31 = tail call ptr @e1000_get_hw_dev(ptr noundef %hw) #6
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_write_eeprom_microwire.__UNIQUE_ID_ddebug611, ptr noundef %call31, ptr noundef nonnull @.str.131) #6
  br label %cleanup

if.end35:                                         ; preds = %for.body
  tail call fastcc void @e1000_standby_eeprom(ptr noundef %hw)
  tail call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 4201, i32 noundef 0) #6
  %call.i = tail call i32 @__cond_resched() #6
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  %exitcond.not = icmp eq i32 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end35.while.end_crit_edge, label %if.end35.while.body_crit_edge

if.end35.while.body_crit_edge:                    ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.body

if.end35.while.end_crit_edge:                     ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #8
  br label %while.end

while.end:                                        ; preds = %if.end35.while.end_crit_edge, %entry.while.end_crit_edge
  %16 = ptrtoint ptr %opcode_bits to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %opcode_bits, align 2
  %add41 = add i16 %17, 2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext 16, i16 noundef zeroext %add41)
  %18 = ptrtoint ptr %address_bits to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %address_bits, align 4
  %sub45 = add i16 %19, -2
  tail call fastcc void @e1000_shift_out_ee_bits(ptr noundef %hw, i16 noundef zeroext 0, i16 noundef zeroext %sub45)
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.then30, %do.body24
  %retval.0 = phi i32 [ 0, %while.end ], [ -1, %if.then30 ], [ -1, %do.body24 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_writesw(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_io_write(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umin.i16(i16, i16) #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umax.i16(i16, i16) #3

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #6

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #7 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 144)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #7 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 144)
  ret void
}

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nounwind }
attributes #7 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #8 = { nomerge }
attributes #9 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !5, !6, !8, !9, !11, !12, !14, !16, !17, !18, !20, !21, !23, !25, !26, !28, !29, !30, !32, !33, !35, !37, !38, !40, !41, !42, !44, !45, !47, !48, !50, !51, !53, !54, !56, !57, !59, !60, !62, !63, !65, !66, !68, !69, !71, !72, !73, !75, !76, !78, !79, !81, !82, !83, !85, !86, !88, !89, !91, !92, !94, !95, !97, !98, !100, !101, !102, !104, !105, !106, !108, !109, !111, !112, !113, !115, !116, !118, !119, !121, !122, !124, !125, !127, !128, !130, !131, !132, !134, !135, !137, !138, !140, !141, !143, !144, !146, !147, !149, !150, !152, !153, !155, !156, !158, !159, !160, !162, !163, !165, !166, !168, !169, !171, !172, !174, !175, !176, !178, !179, !181, !182, !183, !185, !186, !188, !189, !191, !192, !193, !195, !196, !198, !199, !201, !202, !203, !205, !207, !209, !210, !212, !213, !214, !216, !217, !219, !220, !222, !223, !225, !226, !227, !229, !230, !231, !233, !235, !236, !238, !239, !241, !242, !244, !245, !247, !248, !250, !251, !253, !254, !256, !257, !259, !260, !262, !263, !264, !266, !267, !269, !270, !272, !273, !275, !277, !278, !280, !282, !284, !286, !287, !289, !290, !291, !293, !295, !296, !298, !299, !301, !302, !304, !305, !307, !308, !310, !311, !313, !314, !316, !317, !319, !320, !321, !323, !324, !326, !327, !329, !331, !332, !334, !335, !337, !338, !340, !342, !344, !346, !347, !348, !350, !351, !352, !354, !355, !356, !358, !359, !360, !362, !363, !364, !366, !367, !368, !370, !371, !372, !374, !375, !377, !378, !380, !381}
!llvm.module.flags = !{!383, !384, !385, !386, !387, !388, !389, !390}
!llvm.ident = !{!391}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 385, i32 3}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.2, !1, !"<string literal>", i1 false, i1 false}
!4 = !{ptr @.str.3, !1, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @e1000_reset_hw.__UNIQUE_ID_ddebug501, !1, !"__UNIQUE_ID_ddebug501", i1 false, i1 false}
!6 = !{ptr @.str.4, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 390, i32 2}
!8 = !{ptr @e1000_reset_hw.__UNIQUE_ID_ddebug502, !7, !"__UNIQUE_ID_ddebug502", i1 false, i1 false}
!9 = !{ptr @.str.5, !10, !"<string literal>", i1 false, i1 false}
!10 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 423, i32 2}
!11 = !{ptr @e1000_reset_hw.__UNIQUE_ID_ddebug503, !10, !"__UNIQUE_ID_ddebug503", i1 false, i1 false}
!12 = !{ptr @e1000_reset_hw.__UNIQUE_ID_ddebug504, !13, !"__UNIQUE_ID_ddebug504", i1 false, i1 false}
!13 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 499, i32 2}
!14 = !{ptr @.str.6, !15, !"<string literal>", i1 false, i1 false}
!15 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 535, i32 3}
!16 = !{ptr @.str.7, !15, !"<string literal>", i1 false, i1 false}
!17 = !{ptr @e1000_init_hw.__UNIQUE_ID_ddebug505, !15, !"__UNIQUE_ID_ddebug505", i1 false, i1 false}
!18 = !{ptr @.str.8, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 543, i32 2}
!20 = !{ptr @e1000_init_hw.__UNIQUE_ID_ddebug506, !19, !"__UNIQUE_ID_ddebug506", i1 false, i1 false}
!21 = !{ptr @e1000_init_hw.__UNIQUE_ID_ddebug507, !22, !"__UNIQUE_ID_ddebug507", i1 false, i1 false}
!22 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 550, i32 3}
!23 = !{ptr @.str.9, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 572, i32 2}
!25 = !{ptr @e1000_init_hw.__UNIQUE_ID_ddebug508, !24, !"__UNIQUE_ID_ddebug508", i1 false, i1 false}
!26 = !{ptr @.str.10, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 703, i32 4}
!28 = !{ptr @.str.11, !27, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @e1000_setup_link.__UNIQUE_ID_ddebug509, !27, !"__UNIQUE_ID_ddebug509", i1 false, i1 false}
!30 = !{ptr @.str.12, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 727, i32 2}
!32 = !{ptr @e1000_setup_link.__UNIQUE_ID_ddebug510, !31, !"__UNIQUE_ID_ddebug510", i1 false, i1 false}
!33 = !{ptr @e1000_setup_link.__UNIQUE_ID_ddebug511, !34, !"__UNIQUE_ID_ddebug511", i1 false, i1 false}
!34 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 740, i32 4}
!35 = !{ptr @.str.13, !36, !"<string literal>", i1 false, i1 false}
!36 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 757, i32 2}
!37 = !{ptr @e1000_setup_link.__UNIQUE_ID_ddebug512, !36, !"__UNIQUE_ID_ddebug512", i1 false, i1 false}
!38 = !{ptr @.str.14, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1526, i32 2}
!40 = !{ptr @.str.15, !39, !"<string literal>", i1 false, i1 false}
!41 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug541, !39, !"__UNIQUE_ID_ddebug541", i1 false, i1 false}
!42 = !{ptr @.str.16, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1530, i32 3}
!44 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug542, !43, !"__UNIQUE_ID_ddebug542", i1 false, i1 false}
!45 = !{ptr @.str.17, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1536, i32 3}
!47 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug543, !46, !"__UNIQUE_ID_ddebug543", i1 false, i1 false}
!48 = !{ptr @.str.18, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1542, i32 3}
!50 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug544, !49, !"__UNIQUE_ID_ddebug544", i1 false, i1 false}
!51 = !{ptr @.str.19, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1548, i32 3}
!53 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug545, !52, !"__UNIQUE_ID_ddebug545", i1 false, i1 false}
!54 = !{ptr @.str.20, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1554, i32 3}
!56 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug546, !55, !"__UNIQUE_ID_ddebug546", i1 false, i1 false}
!57 = !{ptr @.str.21, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1560, i32 3}
!59 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug547, !58, !"__UNIQUE_ID_ddebug547", i1 false, i1 false}
!60 = !{ptr @.str.22, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1614, i32 3}
!62 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug548, !61, !"__UNIQUE_ID_ddebug548", i1 false, i1 false}
!63 = !{ptr @.str.23, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1622, i32 2}
!65 = !{ptr @e1000_phy_setup_autoneg.__UNIQUE_ID_ddebug549, !64, !"__UNIQUE_ID_ddebug549", i1 false, i1 false}
!66 = !{ptr @.str.24, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2024, i32 3}
!68 = !{ptr @e1000_force_mac_fc.__UNIQUE_ID_ddebug558, !67, !"__UNIQUE_ID_ddebug558", i1 false, i1 false}
!69 = !{ptr @.str.25, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2471, i32 5}
!71 = !{ptr @.str.26, !70, !"<string literal>", i1 false, i1 false}
!72 = !{ptr @e1000_check_for_link.__UNIQUE_ID_ddebug578, !70, !"__UNIQUE_ID_ddebug578", i1 false, i1 false}
!73 = !{ptr @.str.27, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2484, i32 4}
!75 = !{ptr @e1000_check_for_link.__UNIQUE_ID_ddebug579, !74, !"__UNIQUE_ID_ddebug579", i1 false, i1 false}
!76 = !{ptr @.str.28, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2503, i32 5}
!78 = !{ptr @e1000_check_for_link.__UNIQUE_ID_ddebug580, !77, !"__UNIQUE_ID_ddebug580", i1 false, i1 false}
!79 = !{ptr @.str.29, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2562, i32 4}
!81 = !{ptr @.str.30, !80, !"<string literal>", i1 false, i1 false}
!82 = !{ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug581, !80, !"__UNIQUE_ID_ddebug581", i1 false, i1 false}
!83 = !{ptr @.str.31, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2565, i32 4}
!85 = !{ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug582, !84, !"__UNIQUE_ID_ddebug582", i1 false, i1 false}
!86 = !{ptr @.str.32, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2568, i32 4}
!88 = !{ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug583, !87, !"__UNIQUE_ID_ddebug583", i1 false, i1 false}
!89 = !{ptr @.str.33, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2573, i32 4}
!91 = !{ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug584, !90, !"__UNIQUE_ID_ddebug584", i1 false, i1 false}
!92 = !{ptr @.str.34, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2576, i32 4}
!94 = !{ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug585, !93, !"__UNIQUE_ID_ddebug585", i1 false, i1 false}
!95 = !{ptr @.str.35, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2579, i32 3}
!97 = !{ptr @e1000_get_speed_and_duplex.__UNIQUE_ID_ddebug586, !96, !"__UNIQUE_ID_ddebug586", i1 false, i1 false}
!98 = !{ptr @.str.36, !99, !"<string literal>", i1 false, i1 false}
!99 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3043, i32 2}
!100 = !{ptr @.str.37, !99, !"<string literal>", i1 false, i1 false}
!101 = !{ptr @e1000_phy_hw_reset.__UNIQUE_ID_ddebug596, !99, !"__UNIQUE_ID_ddebug596", i1 false, i1 false}
!102 = !{ptr @.str.38, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3399, i32 3}
!104 = !{ptr @.str.39, !103, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @e1000_phy_get_info.__UNIQUE_ID_ddebug600, !103, !"__UNIQUE_ID_ddebug600", i1 false, i1 false}
!106 = !{ptr @.str.40, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3412, i32 3}
!108 = !{ptr @e1000_phy_get_info.__UNIQUE_ID_ddebug601, !107, !"__UNIQUE_ID_ddebug601", i1 false, i1 false}
!109 = !{ptr @.str.41, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3428, i32 3}
!111 = !{ptr @.str.42, !110, !"<string literal>", i1 false, i1 false}
!112 = !{ptr @e1000_validate_mdi_setting.__UNIQUE_ID_ddebug602, !110, !"__UNIQUE_ID_ddebug602", i1 false, i1 false}
!113 = !{ptr @.str.43, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3965, i32 4}
!115 = !{ptr @e1000_validate_eeprom_checksum.__UNIQUE_ID_ddebug606, !114, !"__UNIQUE_ID_ddebug606", i1 false, i1 false}
!116 = !{ptr @.str.44, !117, !"<string literal>", i1 false, i1 false}
!117 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3980, i32 3}
!118 = !{ptr @e1000_validate_eeprom_checksum.__UNIQUE_ID_ddebug607, !117, !"__UNIQUE_ID_ddebug607", i1 false, i1 false}
!119 = !{ptr @.str.45, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3999, i32 4}
!121 = !{ptr @e1000_update_eeprom_checksum.__UNIQUE_ID_ddebug608, !120, !"__UNIQUE_ID_ddebug608", i1 false, i1 false}
!122 = !{ptr @.str.46, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4006, i32 3}
!124 = !{ptr @e1000_update_eeprom_checksum.__UNIQUE_ID_ddebug609, !123, !"__UNIQUE_ID_ddebug609", i1 false, i1 false}
!125 = !{ptr @.str.47, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4235, i32 4}
!127 = !{ptr @e1000_read_mac_addr.__UNIQUE_ID_ddebug612, !126, !"__UNIQUE_ID_ddebug612", i1 false, i1 false}
!128 = !{ptr @.str.48, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4756, i32 3}
!130 = !{ptr @.str.49, !129, !"<string literal>", i1 false, i1 false}
!131 = !{ptr @e1000_reset_adaptive.__UNIQUE_ID_ddebug616, !129, !"__UNIQUE_ID_ddebug616", i1 false, i1 false}
!132 = !{ptr @.str.50, !133, !"<string literal>", i1 false, i1 false}
!133 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4792, i32 3}
!134 = !{ptr @e1000_update_adaptive.__UNIQUE_ID_ddebug617, !133, !"__UNIQUE_ID_ddebug617", i1 false, i1 false}
!135 = !{ptr @.str.51, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 875, i32 3}
!137 = !{ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug513, !136, !"__UNIQUE_ID_ddebug513", i1 false, i1 false}
!138 = !{ptr @.str.52, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 885, i32 2}
!140 = !{ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug514, !139, !"__UNIQUE_ID_ddebug514", i1 false, i1 false}
!141 = !{ptr @.str.53, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 903, i32 3}
!143 = !{ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug515, !142, !"__UNIQUE_ID_ddebug515", i1 false, i1 false}
!144 = !{ptr @.str.54, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 911, i32 4}
!146 = !{ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug516, !145, !"__UNIQUE_ID_ddebug516", i1 false, i1 false}
!147 = !{ptr @.str.55, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 920, i32 5}
!149 = !{ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug517, !148, !"__UNIQUE_ID_ddebug517", i1 false, i1 false}
!150 = !{ptr @.str.56, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 926, i32 4}
!152 = !{ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug518, !151, !"__UNIQUE_ID_ddebug518", i1 false, i1 false}
!153 = !{ptr @.str.57, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 929, i32 3}
!155 = !{ptr @e1000_setup_fiber_serdes_link.__UNIQUE_ID_ddebug519, !154, !"__UNIQUE_ID_ddebug519", i1 false, i1 false}
!156 = !{ptr @.str.58, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1437, i32 4}
!158 = !{ptr @.str.59, !157, !"<string literal>", i1 false, i1 false}
!159 = !{ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug536, !157, !"__UNIQUE_ID_ddebug536", i1 false, i1 false}
!160 = !{ptr @.str.60, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1453, i32 3}
!162 = !{ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug537, !161, !"__UNIQUE_ID_ddebug537", i1 false, i1 false}
!163 = !{ptr @.str.61, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1456, i32 4}
!165 = !{ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug538, !164, !"__UNIQUE_ID_ddebug538", i1 false, i1 false}
!166 = !{ptr @.str.62, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1478, i32 4}
!168 = !{ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug539, !167, !"__UNIQUE_ID_ddebug539", i1 false, i1 false}
!169 = !{ptr @.str.63, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1484, i32 2}
!171 = !{ptr @e1000_setup_copper_link.__UNIQUE_ID_ddebug540, !170, !"__UNIQUE_ID_ddebug540", i1 false, i1 false}
!172 = !{ptr @.str.64, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1028, i32 3}
!174 = !{ptr @.str.65, !173, !"<string literal>", i1 false, i1 false}
!175 = !{ptr @e1000_copper_link_preconfig.__UNIQUE_ID_ddebug524, !173, !"__UNIQUE_ID_ddebug524", i1 false, i1 false}
!176 = !{ptr @.str.66, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1031, i32 2}
!178 = !{ptr @e1000_copper_link_preconfig.__UNIQUE_ID_ddebug525, !177, !"__UNIQUE_ID_ddebug525", i1 false, i1 false}
!179 = !{ptr @.str.67, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3187, i32 3}
!181 = !{ptr @.str.68, !180, !"<string literal>", i1 false, i1 false}
!182 = !{ptr @e1000_detect_gig_phy.__UNIQUE_ID_ddebug597, !180, !"__UNIQUE_ID_ddebug597", i1 false, i1 false}
!183 = !{ptr @.str.69, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3193, i32 3}
!185 = !{ptr @e1000_detect_gig_phy.__UNIQUE_ID_ddebug598, !184, !"__UNIQUE_ID_ddebug598", i1 false, i1 false}
!186 = !{ptr @.str.70, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3196, i32 2}
!188 = !{ptr @e1000_detect_gig_phy.__UNIQUE_ID_ddebug599, !187, !"__UNIQUE_ID_ddebug599", i1 false, i1 false}
!189 = !{ptr @.str.71, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1071, i32 3}
!191 = !{ptr @.str.72, !190, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @e1000_copper_link_igp_setup.__UNIQUE_ID_ddebug526, !190, !"__UNIQUE_ID_ddebug526", i1 false, i1 false}
!193 = !{ptr @.str.73, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1088, i32 4}
!195 = !{ptr @e1000_copper_link_igp_setup.__UNIQUE_ID_ddebug527, !194, !"__UNIQUE_ID_ddebug527", i1 false, i1 false}
!196 = !{ptr @.str.74, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1294, i32 3}
!198 = !{ptr @e1000_copper_link_mgp_setup.__UNIQUE_ID_ddebug528, !197, !"__UNIQUE_ID_ddebug528", i1 false, i1 false}
!199 = !{ptr @.str.75, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 963, i32 4}
!201 = !{ptr @.str.76, !200, !"<string literal>", i1 false, i1 false}
!202 = !{ptr @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug521, !200, !"__UNIQUE_ID_ddebug521", i1 false, i1 false}
!203 = !{ptr @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug522, !204, !"__UNIQUE_ID_ddebug522", i1 false, i1 false}
!204 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 983, i32 4}
!205 = !{ptr @gbe_dhg_phy_setup.__UNIQUE_ID_ddebug523, !206, !"__UNIQUE_ID_ddebug523", i1 false, i1 false}
!206 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 988, i32 3}
!207 = !{ptr @.str.77, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 947, i32 3}
!209 = !{ptr @e1000_copper_link_rtl_setup.__UNIQUE_ID_ddebug520, !208, !"__UNIQUE_ID_ddebug520", i1 false, i1 false}
!210 = !{ptr @.str.78, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1328, i32 2}
!212 = !{ptr @.str.79, !211, !"<string literal>", i1 false, i1 false}
!213 = !{ptr @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug529, !211, !"__UNIQUE_ID_ddebug529", i1 false, i1 false}
!214 = !{ptr @.str.80, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1331, i32 3}
!216 = !{ptr @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug530, !215, !"__UNIQUE_ID_ddebug530", i1 false, i1 false}
!217 = !{ptr @.str.81, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1334, i32 2}
!219 = !{ptr @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug531, !218, !"__UNIQUE_ID_ddebug531", i1 false, i1 false}
!220 = !{ptr @.str.82, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1354, i32 4}
!222 = !{ptr @e1000_copper_link_autoneg.__UNIQUE_ID_ddebug532, !221, !"__UNIQUE_ID_ddebug532", i1 false, i1 false}
!223 = !{ptr @.str.83, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2623, i32 2}
!225 = !{ptr @.str.84, !224, !"<string literal>", i1 false, i1 false}
!226 = !{ptr @e1000_wait_autoneg.__UNIQUE_ID_ddebug587, !224, !"__UNIQUE_ID_ddebug587", i1 false, i1 false}
!227 = !{ptr @.str.85, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1654, i32 2}
!229 = !{ptr @.str.86, !228, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug550, !228, !"__UNIQUE_ID_ddebug550", i1 false, i1 false}
!231 = !{ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug551, !232, !"__UNIQUE_ID_ddebug551", i1 false, i1 false}
!232 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1683, i32 3}
!233 = !{ptr @.str.87, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1690, i32 3}
!235 = !{ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug552, !234, !"__UNIQUE_ID_ddebug552", i1 false, i1 false}
!236 = !{ptr @.str.88, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1700, i32 3}
!238 = !{ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug553, !237, !"__UNIQUE_ID_ddebug553", i1 false, i1 false}
!239 = !{ptr @.str.89, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1706, i32 3}
!241 = !{ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug554, !240, !"__UNIQUE_ID_ddebug554", i1 false, i1 false}
!242 = !{ptr @.str.90, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1729, i32 3}
!244 = !{ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug555, !243, !"__UNIQUE_ID_ddebug555", i1 false, i1 false}
!245 = !{ptr @.str.91, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1769, i32 3}
!247 = !{ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug556, !246, !"__UNIQUE_ID_ddebug556", i1 false, i1 false}
!248 = !{ptr @.str.92, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1797, i32 5}
!250 = !{ptr @e1000_phy_force_speed_duplex.__UNIQUE_ID_ddebug557, !249, !"__UNIQUE_ID_ddebug557", i1 false, i1 false}
!251 = !{ptr @.str.93, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1387, i32 4}
!253 = !{ptr @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug533, !252, !"__UNIQUE_ID_ddebug533", i1 false, i1 false}
!254 = !{ptr @.str.94, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1393, i32 3}
!256 = !{ptr @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug534, !255, !"__UNIQUE_ID_ddebug534", i1 false, i1 false}
!257 = !{ptr @.str.95, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 1401, i32 4}
!259 = !{ptr @e1000_copper_link_postconfig.__UNIQUE_ID_ddebug535, !258, !"__UNIQUE_ID_ddebug535", i1 false, i1 false}
!260 = !{ptr @.str.96, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2068, i32 4}
!262 = !{ptr @.str.97, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug559, !261, !"__UNIQUE_ID_ddebug559", i1 false, i1 false}
!264 = !{ptr @.str.98, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2152, i32 6}
!266 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug560, !265, !"__UNIQUE_ID_ddebug560", i1 false, i1 false}
!267 = !{ptr @.str.99, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2155, i32 6}
!269 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug561, !268, !"__UNIQUE_ID_ddebug561", i1 false, i1 false}
!270 = !{ptr @.str.100, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2172, i32 5}
!272 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug562, !271, !"__UNIQUE_ID_ddebug562", i1 false, i1 false}
!273 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug563, !274, !"__UNIQUE_ID_ddebug563", i1 false, i1 false}
!274 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2188, i32 5}
!275 = !{ptr @.str.101, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2217, i32 5}
!277 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug564, !276, !"__UNIQUE_ID_ddebug564", i1 false, i1 false}
!278 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug565, !279, !"__UNIQUE_ID_ddebug565", i1 false, i1 false}
!279 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2220, i32 5}
!280 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug566, !281, !"__UNIQUE_ID_ddebug566", i1 false, i1 false}
!281 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2231, i32 5}
!282 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug567, !283, !"__UNIQUE_ID_ddebug567", i1 false, i1 false}
!283 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2244, i32 5}
!284 = !{ptr @.str.102, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2249, i32 4}
!286 = !{ptr @e1000_config_fc_after_link_up.__UNIQUE_ID_ddebug568, !285, !"__UNIQUE_ID_ddebug568", i1 false, i1 false}
!287 = !{ptr @.str.103, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2286, i32 3}
!289 = !{ptr @.str.104, !288, !"<string literal>", i1 false, i1 false}
!290 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug569, !288, !"__UNIQUE_ID_ddebug569", i1 false, i1 false}
!291 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug570, !292, !"__UNIQUE_ID_ddebug570", i1 false, i1 false}
!292 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2299, i32 4}
!293 = !{ptr @.str.105, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2308, i32 3}
!295 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug571, !294, !"__UNIQUE_ID_ddebug571", i1 false, i1 false}
!296 = !{ptr @.str.106, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2324, i32 5}
!298 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug572, !297, !"__UNIQUE_ID_ddebug572", i1 false, i1 false}
!299 = !{ptr @.str.107, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2328, i32 4}
!301 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug573, !300, !"__UNIQUE_ID_ddebug573", i1 false, i1 false}
!302 = !{ptr @.str.108, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2341, i32 6}
!304 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug574, !303, !"__UNIQUE_ID_ddebug574", i1 false, i1 false}
!305 = !{ptr @.str.109, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2345, i32 6}
!307 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug575, !306, !"__UNIQUE_ID_ddebug575", i1 false, i1 false}
!308 = !{ptr @.str.110, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2350, i32 5}
!310 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug576, !309, !"__UNIQUE_ID_ddebug576", i1 false, i1 false}
!311 = !{ptr @.str.111, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2354, i32 4}
!313 = !{ptr @e1000_check_for_serdes_link_generic.__UNIQUE_ID_ddebug577, !312, !"__UNIQUE_ID_ddebug577", i1 false, i1 false}
!314 = !{ptr @.str.112, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 85, i32 8}
!316 = !{ptr @e1000_phy_lock, !315, !"e1000_phy_lock", i1 false, i1 false}
!317 = !{ptr @.str.113, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2815, i32 3}
!319 = distinct !{null, !318, !"<string literal>", i1 false, i1 false}
!320 = distinct !{null, !318, !"__UNIQUE_ID_ddebug588", i1 false, i1 false}
!321 = !{ptr @.str.115, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2843, i32 5}
!323 = !{ptr @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug589, !322, !"__UNIQUE_ID_ddebug589", i1 false, i1 false}
!324 = !{ptr @.str.116, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2849, i32 5}
!326 = !{ptr @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug590, !325, !"__UNIQUE_ID_ddebug590", i1 false, i1 false}
!327 = !{ptr @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug591, !328, !"__UNIQUE_ID_ddebug591", i1 false, i1 false}
!328 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2870, i32 5}
!329 = !{ptr @.str.117, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2874, i32 5}
!331 = !{ptr @e1000_read_phy_reg_ex.__UNIQUE_ID_ddebug592, !330, !"__UNIQUE_ID_ddebug592", i1 false, i1 false}
!332 = !{ptr @.str.118, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2953, i32 3}
!334 = distinct !{null, !333, !"__UNIQUE_ID_ddebug593", i1 false, i1 false}
!335 = !{ptr @.str.119, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 2982, i32 5}
!337 = !{ptr @e1000_write_phy_reg_ex.__UNIQUE_ID_ddebug594, !336, !"__UNIQUE_ID_ddebug594", i1 false, i1 false}
!338 = !{ptr @e1000_write_phy_reg_ex.__UNIQUE_ID_ddebug595, !339, !"__UNIQUE_ID_ddebug595", i1 false, i1 false}
!339 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3003, i32 5}
!340 = distinct !{null, !341, !"agc_reg_array", i1 false, i1 false}
!341 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4925, i32 20}
!342 = !{ptr @e1000_igp_cable_length_table, !343, !"e1000_igp_cable_length_table", i1 false, i1 false}
!343 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 70, i32 5}
!344 = !{ptr @.str.120, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 84, i32 8}
!346 = !{ptr @.str.121, !345, !"<string literal>", i1 false, i1 false}
!347 = !{ptr @e1000_eeprom_lock, !345, !"e1000_eeprom_lock", i1 false, i1 false}
!348 = !{ptr @.str.122, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3877, i32 3}
!350 = !{ptr @.str.123, !349, !"<string literal>", i1 false, i1 false}
!351 = !{ptr @e1000_do_read_eeprom.__UNIQUE_ID_ddebug605, !349, !"__UNIQUE_ID_ddebug605", i1 false, i1 false}
!352 = !{ptr @.str.124, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3682, i32 4}
!354 = !{ptr @.str.125, !353, !"<string literal>", i1 false, i1 false}
!355 = !{ptr @e1000_acquire_eeprom.__UNIQUE_ID_ddebug603, !353, !"__UNIQUE_ID_ddebug603", i1 false, i1 false}
!356 = !{ptr @.str.126, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 3835, i32 3}
!358 = !{ptr @.str.127, !357, !"<string literal>", i1 false, i1 false}
!359 = !{ptr @e1000_spi_eeprom_ready.__UNIQUE_ID_ddebug604, !357, !"__UNIQUE_ID_ddebug604", i1 false, i1 false}
!360 = !{ptr @.str.128, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4050, i32 3}
!362 = !{ptr @.str.129, !361, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @e1000_do_write_eeprom.__UNIQUE_ID_ddebug610, !361, !"__UNIQUE_ID_ddebug610", i1 false, i1 false}
!364 = !{ptr @.str.130, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4195, i32 4}
!366 = !{ptr @.str.131, !365, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @e1000_write_eeprom_microwire.__UNIQUE_ID_ddebug611, !365, !"__UNIQUE_ID_ddebug611", i1 false, i1 false}
!368 = !{ptr @.str.132, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4271, i32 2}
!370 = !{ptr @.str.133, !369, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @e1000_init_rx_addrs.__UNIQUE_ID_ddebug613, !369, !"__UNIQUE_ID_ddebug613", i1 false, i1 false}
!372 = !{ptr @.str.134, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4280, i32 2}
!374 = !{ptr @e1000_init_rx_addrs.__UNIQUE_ID_ddebug614, !373, !"__UNIQUE_ID_ddebug614", i1 false, i1 false}
!375 = !{ptr @.str.135, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 4432, i32 3}
!377 = !{ptr @e1000_id_led_init.__UNIQUE_ID_ddebug615, !376, !"__UNIQUE_ID_ddebug615", i1 false, i1 false}
!378 = !{ptr @.str.136, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 5177, i32 4}
!380 = !{ptr @e1000_config_dsp_after_link_change.__UNIQUE_ID_ddebug618, !379, !"__UNIQUE_ID_ddebug618", i1 false, i1 false}
!381 = !{ptr @dsp_reg_array, !382, !"dsp_reg_array", i1 false, i1 false}
!382 = !{!"../drivers/net/ethernet/intel/e1000/e1000_hw.c", i32 5082, i32 18}
!383 = !{i32 1, !"wchar_size", i32 2}
!384 = !{i32 1, !"min_enum_size", i32 4}
!385 = !{i32 8, !"branch-target-enforcement", i32 0}
!386 = !{i32 8, !"sign-return-address", i32 0}
!387 = !{i32 8, !"sign-return-address-all", i32 0}
!388 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!389 = !{i32 7, !"uwtable", i32 1}
!390 = !{i32 7, !"frame-pointer", i32 2}
!391 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!392 = !{i64 6553479}
!393 = !{i64 2158220827}
!394 = !{i64 2149119770, i64 2149119775, i64 2149119788, i64 2149119832, i64 2149119866, i64 2149119887}
!395 = !{i64 2158226184}
!396 = !{i64 6553061}
!397 = !{i64 2158226902}
!398 = !{i64 2158227622}
!399 = !{i64 2158228813}
!400 = !{i64 2158229714}
!401 = !{i64 2158230214}
!402 = !{i64 2158231435}
!403 = !{i64 2158234506}
!404 = !{i64 2158235303}
!405 = !{i64 2158237063}
!406 = !{i64 2158237559}
!407 = !{i64 2158238744}
!408 = !{i64 2158239645}
!409 = !{i64 2158240113}
!410 = !{i64 2158241273}
!411 = !{i64 2158241777}
!412 = !{i64 2158244925}
!413 = !{i64 2158250149}
!414 = !{!"auto-init"}
!415 = !{i64 2158255547}
!416 = !{i64 2158696136}
!417 = !{i64 2158697340}
!418 = !{i64 2158258726}
!419 = !{i64 2158259917}
!420 = !{i64 2158260368}
!421 = !{i64 2158261532}
!422 = !{i64 2158264383}
!423 = !{i64 2158265582}
!424 = !{i64 2158266483}
!425 = !{i64 2158266977}
!426 = !{i64 2158268176}
!427 = !{i64 2158268665}
!428 = !{i64 2158710086}
!429 = !{i64 2158711002}
!430 = !{i64 2158711898}
!431 = !{i64 2158712794}
!432 = !{i64 2158713695}
!433 = !{i64 2158714591}
!434 = !{i64 2158715507}
!435 = !{i64 2158716408}
!436 = !{i64 2158717299}
!437 = !{i64 2158718195}
!438 = !{i64 2158719096}
!439 = !{i64 2158720007}
!440 = !{i64 2158720918}
!441 = !{i64 2158721834}
!442 = !{i64 2158722750}
!443 = !{i64 2158723656}
!444 = !{i64 2158724562}
!445 = !{i64 2158725473}
!446 = !{i64 2158726384}
!447 = !{i64 2158727295}
!448 = !{i64 2158728211}
!449 = !{i64 2158729127}
!450 = !{i64 2158730028}
!451 = !{i64 2158730929}
!452 = !{i64 2158731830}
!453 = !{i64 2158732731}
!454 = !{i64 2158733637}
!455 = !{i64 2158734543}
!456 = !{i64 2158735449}
!457 = !{i64 2158736355}
!458 = !{i64 2158737256}
!459 = !{i64 2158738152}
!460 = !{i64 2158739048}
!461 = !{i64 2158739944}
!462 = !{i64 2158740840}
!463 = !{i64 2158741741}
!464 = !{i64 2158742642}
!465 = !{i64 2158743543}
!466 = !{i64 2158744444}
!467 = !{i64 2158745340}
!468 = !{i64 2158746236}
!469 = !{i64 2158747142}
!470 = !{i64 2158748053}
!471 = !{i64 2158748964}
!472 = !{i64 2158749875}
!473 = !{i64 2158750791}
!474 = !{i64 2158751707}
!475 = !{i64 2158752608}
!476 = !{i64 2158753509}
!477 = !{i64 2158754430}
!478 = !{i64 2158755341}
!479 = !{i64 2158756247}
!480 = !{i64 2158757163}
!481 = !{i64 2158758069}
!482 = !{i64 2158758980}
!483 = !{i64 2158759891}
!484 = !{i64 2158760802}
!485 = !{i64 2158761713}
!486 = !{i64 2158269849}
!487 = !{i64 2158270345}
!488 = !{i64 2158698261}
!489 = !{i64 2158686185}
!490 = !{i64 2158687413}
!491 = !{i64 2158687975}
!492 = !{i64 2158689212}
!493 = !{i64 2158682668}
!494 = !{i64 2158683874}
!495 = !{i64 2158684414}
!496 = !{i64 2158685626}
!497 = !{i8 0, i8 2}
!498 = !{i64 2158278416}
!499 = !{i64 2158281851}
!500 = !{i64 2158282586}
!501 = !{i64 2158283333}
!502 = !{i64 2158284088}
!503 = !{i64 2158284820}
!504 = !{i64 2158285504}
!505 = !{i64 2158287070}
!506 = !{i64 2158288593}
!507 = !{i64 2158289782}
!508 = !{i64 2158421373}
!509 = !{i64 2158421844}
!510 = !{i64 2158423017}
!511 = !{i64 2158295284}
!512 = !{i64 2158295990}
!513 = !{i64 2158297163}
!514 = !{i64 2158298064}
!515 = !{i64 2158301323}
!516 = !{i64 2158425722}
!517 = !{i64 2158428776}
!518 = !{i64 2158494433}
!519 = !{i64 2158495344}
!520 = !{i64 2158496245}
!521 = !{i64 2158496737}
!522 = !{i64 2158497900}
!523 = !{i64 2158498411}
!524 = !{i64 2158499554}
!525 = !{i64 2158508385}
!526 = !{i64 2158508853}
!527 = !{i64 2158510003}
!528 = !{i64 2158510471}
!529 = !{i64 2158423920}
!530 = !{i64 2158424570}
!531 = !{i64 2158511633}
!532 = !{i64 2158458971}
!533 = !{i64 2158459882}
!534 = !{i64 2158460783}
!535 = !{i64 2158463921}
!536 = !{i64 2158465137}
!537 = !{i64 2158465616}
!538 = !{i64 2158471434}
!539 = !{i64 2158472199}
!540 = !{i64 2158473414}
!541 = !{i64 2158474857}
!542 = !{i64 2158480693}
!543 = !{i64 2158481604}
!544 = !{i64 2158483058}
!545 = !{i64 2158559412}
!546 = !{i64 2158560784}
!547 = !{i64 2158563706}
!548 = !{i64 2158565392}
!549 = !{i64 2158542491}
!550 = !{i64 2158543869}
!551 = !{i64 2158546945}
!552 = !{i64 2158549748}
!553 = !{i64 2158551440}
!554 = !{i64 2158536647}
!555 = !{i64 2158537164}
!556 = !{i64 2158538337}
!557 = !{i64 2158528490}
!558 = !{i64 2158529714}
!559 = !{i64 2158530781}
!560 = !{i64 2158532011}
!561 = !{i64 2158539238}
!562 = !{i64 2158575167}
!563 = !{i64 2158575661}
!564 = !{i64 2158576873}
!565 = !{i64 2158577330}
!566 = !{i64 2158578503}
!567 = !{i64 2158579424}
!568 = !{i64 2158579931}
!569 = !{i64 2158581116}
!570 = !{i64 2158581612}
!571 = !{i64 2158582797}
!572 = !{i64 2158584256}
!573 = !{i64 2158584760}
!574 = !{i64 2158602093}
!575 = !{i64 2149243428, i64 2149243451, i64 2149243483, i64 2149243515, i64 2149243553, i64 2149243583}
!576 = !{i64 2158673204}
!577 = !{i64 2158690319}
!578 = !{i64 2158690859}
!579 = !{i64 2158692075}
!580 = !{i64 2158692625}
!581 = !{i64 2158693844}
!582 = !{i64 2158694384}
!583 = !{i64 2158695600}
!584 = !{i64 2158701849}
!585 = !{i64 2158702359}
!586 = !{i64 2158703105}
!587 = !{i64 2158703927}
!588 = !{i64 2158705121}
!589 = !{i64 2158705700}
!590 = !{i64 2158706444}
!591 = !{i64 2158707596}
!592 = !{i64 2158708175}
!593 = !{i64 2158708919}
!594 = !{i64 2158762170}
!595 = !{i64 2158765312}
!596 = !{i64 2158766057}
!597 = !{i64 2158769623}
!598 = !{i64 2158774164}
!599 = !{i64 2158326925}
!600 = !{i64 2158327415}
!601 = !{i64 2158328154}
!602 = !{i64 2158336551}
!603 = !{i64 2158337055}
!604 = !{i64 2158316832}
!605 = !{i64 2158317354}
!606 = !{i64 2158318539}
!607 = !{i64 2158319455}
!608 = !{i64 2158319935}
!609 = !{i64 2158321120}
!610 = !{i64 2158402451}
!611 = !{i64 2158412240}
!612 = !{i64 2158533454}
!613 = !{i64 2158534031}
!614 = !{i64 2158535204}
!615 = !{i64 2158613439}
!616 = !{i64 2158613907}
!617 = !{i64 2158615057}
!618 = !{i64 2158616510}
!619 = !{i64 2158616989}
!620 = !{i64 2158620179}
!621 = !{i64 2158620896}
!622 = !{i64 2158621624}
!623 = !{i64 2158622797}
!624 = !{i64 2158638822}
!625 = !{i64 2158639301}
!626 = !{i64 2158640474}
!627 = !{i64 2158641609}
!628 = !{i64 2158642326}
!629 = !{i64 2158643499}
!630 = !{i64 2158644623}
!631 = !{i64 2158645796}
!632 = !{i64 2158646920}
!633 = !{i64 2158624236}
!634 = !{i64 2158624715}
!635 = !{i64 2158625888}
!636 = !{i64 2158626994}
!637 = !{i64 2158628167}
!638 = !{i64 2158629273}
!639 = !{i64 2158630446}
!640 = !{i64 2158631552}
!641 = !{i64 2158632725}
!642 = !{i64 2158633831}
!643 = !{i64 2158635004}
!644 = !{i64 2158636110}
!645 = !{i64 2158637283}
!646 = !{i64 2158607663}
!647 = !{i64 2158608164}
!648 = !{i64 2158609337}
!649 = !{i64 2158602628}
!650 = !{i64 2158603804}
!651 = !{i64 2158604930}
!652 = !{i64 2158606106}
!653 = !{i64 2158610443}
!654 = !{i64 2158611593}
!655 = !{i64 2158612516}
!656 = !{i64 2158666807}
