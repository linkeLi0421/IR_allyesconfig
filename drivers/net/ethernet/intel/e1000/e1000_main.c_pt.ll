; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/intel/e1000/e1000_main.c_pt.bc'
source_filename = "../drivers/net/ethernet/intel/e1000/e1000_main.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.125 }
%union.anon.125 = type { ptr }
%struct.pci_driver = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { ptr, ptr }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pci_error_handlers = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.sk_buff_head, %struct.anon.167, [100 x i8], i32, [124 x i8], %struct.__call_single_data, ptr, i32, i32, i32, %struct.sk_buff_head, %struct.napi_struct, [72 x i8] }
%struct.anon.167 = type { i16, i8 }
%struct.__call_single_data = type { %struct.__call_single_node, ptr, ptr }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%struct.llist_node = type { ptr }
%union.anon.20 = type { i32 }
%struct.sk_buff_head = type { %union.anon.78, i32, %struct.spinlock }
%union.anon.78 = type { %struct.anon.79 }
%struct.anon.79 = type { ptr, ptr }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.126 }
%struct.atomic_t = type { i32 }
%union.anon.126 = type { i32 }
%struct.e1000_hw = type { ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, i32, i32, i32, i32, i32, i32, %struct.e1000_eeprom_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.e1000_host_mng_dhcp_cookie, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, [6 x i8], [6 x i8], i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.e1000_eeprom_info = type { i32, i16, i16, i16, i16, i16 }
%struct.e1000_host_mng_dhcp_cookie = type { i32, i16, i8, i8, i32, i8, i8, i16 }
%struct.e1000_adapter = type { [128 x i32], i16, i32, i32, i32, i32, i32, i16, i16, %struct.spinlock, i32, i32, i32, i32, i32, i32, i16, i16, i8, ptr, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i32, i32, i8, %struct.atomic_t, i8, i8, i8, ptr, ptr, ptr, %struct.napi_struct, i32, i32, i64, i64, i32, i32, i32, i8, i32, i64, ptr, ptr, %struct.e1000_hw, %struct.e1000_hw_stats, %struct.e1000_phy_info, %struct.e1000_phy_stats, i32, %struct.e1000_tx_ring, %struct.e1000_rx_ring, i32, i8, i8, i8, i32, i32, i32, i32, i8, %struct.work_struct, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work }
%struct.e1000_hw_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.e1000_phy_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.e1000_phy_stats = type { i32, i32 }
%struct.e1000_tx_ring = type { ptr, i32, i32, i32, i32, i32, ptr, i16, i16, i8 }
%struct.e1000_rx_ring = type { ptr, i32, i32, i32, i32, i32, ptr, ptr, i32, i16, i16 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.131, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.152, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.131 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.rb_root = type { ptr }
%struct.hlist_head = type { ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.possible_net_t = type { ptr }
%union.anon.152 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.netdev_queue = type { ptr, ptr, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, ptr, [88 x i8], %struct.spinlock, i32, i32, i32, [72 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [116 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [88 x i8] }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.156, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.156 = type { ptr }
%struct.e1000_tx_buffer = type { ptr, i32, i32, i16, i16, i8, i16, i32 }
%struct.e1000_tx_desc = type { i64, %union.anon.163, %union.anon.165 }
%union.anon.163 = type { i32 }
%union.anon.165 = type { i32 }
%struct.sk_buff = type { %union.anon.50, %union.anon.53, %union.anon.54, [48 x i8], %union.anon.55, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.57, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { ptr, ptr, %union.anon.52 }
%union.anon.52 = type { ptr }
%union.anon.53 = type { ptr }
%union.anon.54 = type { i64 }
%union.anon.55 = type { %struct.anon.56 }
%struct.anon.56 = type { i32, ptr }
%union.anon.57 = type { %struct.anon.58 }
%struct.anon.58 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.59, i32, i32, i32, i16, i16, %union.anon.61, i32, %union.anon.62, %union.anon.63, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.59 = type { i32 }
%union.anon.61 = type { i32 }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i16 }
%struct.my_u = type { i64, i64 }
%struct.e1000_rx_desc = type { i64, i16, i16, i8, i8, i16 }
%struct.e1000_rx_buffer = type { %union.anon.155, i32 }
%union.anon.155 = type { ptr }
%struct.my_u.169 = type { i64, i64 }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ops = type { i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vlan_hdr = type { i16, i16 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.71 }
%union.anon.71 = type { [4 x i32] }
%struct.e1000_context_desc = type { %union.anon.157, %union.anon.159, i32, %union.anon.161 }
%union.anon.157 = type { i32 }
%union.anon.159 = type { i32 }
%union.anon.161 = type { i32 }
%struct.anon.158 = type { i8, i8, i16 }
%struct.anon.160 = type { i8, i8, i16 }
%struct.anon.162 = type { i8, i8, i16 }
%struct.page = type { i32, %union.anon.2, %union.anon.124, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.124 = type { %struct.atomic_t }
%struct.netdev_hw_addr = type { %struct.list_head, %struct.rb_node, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.ifreq = type { %union.anon.132, %union.anon.133 }
%union.anon.132 = type { [16 x i8] }
%union.anon.133 = type { %struct.ifmap }
%struct.ifmap = type { i32, i32, i16, i8, i8, i8 }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.anon.60 = type { i16, i16 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.109, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.22 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.109 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }

@e1000_driver_name = dso_local global { [6 x i8], [26 x i8] } { [6 x i8] c"e1000\00", [26 x i8] zeroinitializer }, align 32
@__param_str_copybreak = internal constant [16 x i8] c"e1000.copybreak\00", align 1
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 4
@copybreak = internal global i32 256, section ".data..read_mostly", align 4
@__param_copybreak = internal constant %struct.kernel_param { ptr @__param_str_copybreak, ptr null, ptr @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.125 { ptr @copybreak } }, section "__param", align 4
@__UNIQUE_ID_copybreaktype521 = internal constant [30 x i8] c"e1000.parmtype=copybreak:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_copybreak522 = internal constant [86 x i8] c"e1000.parm=copybreak:Maximum size of packet that is copied to a new buffer on receive\00", section ".modinfo", align 1
@__UNIQUE_ID_author523 = internal constant [55 x i8] c"e1000.author=Intel Corporation, <linux.nics@intel.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_description524 = internal constant [51 x i8] c"e1000.description=Intel(R) PRO/1000 Network Driver\00", section ".modinfo", align 1
@__UNIQUE_ID_file525 = internal constant [50 x i8] c"e1000.file=drivers/net/ethernet/intel/e1000/e1000\00", section ".modinfo", align 1
@__UNIQUE_ID_license526 = internal constant [21 x i8] c"e1000.license=GPL v2\00", section ".modinfo", align 1
@__param_str_debug = internal constant [12 x i8] c"e1000.debug\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@debug = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@__param_debug = internal constant %struct.kernel_param { ptr @__param_str_debug, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.125 { ptr @debug } }, section "__param", align 4
@__UNIQUE_ID_debugtype527 = internal constant [25 x i8] c"e1000.parmtype=debug:int\00", section ".modinfo", align 1
@__UNIQUE_ID_debug528 = internal constant [49 x i8] c"e1000.parm=debug:Debug level (0=none,...,16=all)\00", section ".modinfo", align 1
@__initcall__kmod_e1000__529_238_e1000_init_module6 = internal global ptr @e1000_init_module, section ".initcall6.init", align 4
@e1000_driver = internal global { %struct.pci_driver, [36 x i8] } { %struct.pci_driver { %struct.list_head zeroinitializer, ptr @e1000_driver_name, ptr @e1000_pci_tbl, ptr @e1000_probe, ptr @e1000_remove, ptr null, ptr null, ptr @e1000_shutdown, ptr null, ptr null, ptr null, ptr @e1000_err_handler, ptr null, ptr null, %struct.device_driver { ptr null, ptr null, ptr null, ptr null, i8 0, i32 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @e1000_pm_ops, ptr null, ptr null }, %struct.pci_dynids zeroinitializer }, [36 x i8] zeroinitializer }, align 32
@__exitcall_e1000_exit_module = internal global ptr @e1000_exit_module, section ".exitcall.exit", align 4
@e1000_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 681, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Hardware Error\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"e1000_reset\00", [20 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"drivers/net/ethernet/intel/e1000/e1000_main.c\00", [50 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@e1000_reset._entry_ptr = internal global ptr @e1000_reset._entry, section ".printk_index", align 4
@.str.5 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Allocation for Tx Queue %u failed\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Allocation for Rx Queue %u failed\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Error in setting MWI\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Unsupported Speed/Duplex configuration\0A\00", [56 x i8] zeroinitializer }, align 32
@e1000_init_module._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.10, ptr @.str.2, i32 223, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"\016e1000: %s\0A\00", [19 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"e1000_init_module\00", [46 x i8] zeroinitializer }, align 32
@e1000_init_module._entry_ptr = internal global ptr @e1000_init_module._entry, section ".printk_index", align 4
@e1000_driver_string = internal global { [33 x i8], [63 x i8] } { [33 x i8] c"Intel(R) PRO/1000 Network Driver\00", [63 x i8] zeroinitializer }, align 32
@e1000_init_module._entry.11 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.10, ptr @.str.2, i32 225, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@e1000_init_module._entry_ptr.12 = internal global ptr @e1000_init_module._entry.11, section ".printk_index", align 4
@e1000_copyright = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Copyright (c) 1999-2006 Intel Corporation.\00", [53 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"e1000\00", [26 x i8] zeroinitializer }, align 32
@e1000_init_module._entry.14 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.10, ptr @.str.2, i32 230, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016e1000: copybreak disabled\0A\00", [35 x i8] zeroinitializer }, align 32
@e1000_init_module._entry_ptr.16 = internal global ptr @e1000_init_module._entry.14, section ".printk_index", align 4
@e1000_init_module._entry.17 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.10, ptr @.str.2, i32 233, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016e1000: copybreak enabled for packets <= %u bytes\0A\00", [44 x i8] zeroinitializer }, align 32
@e1000_init_module._entry_ptr.19 = internal global ptr @e1000_init_module._entry.17, section ".printk_index", align 4
@e1000_pci_tbl = internal constant { [38 x %struct.pci_device_id], [288 x i8] } { [38 x %struct.pci_device_id] [%struct.pci_device_id { i32 32902, i32 4096, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4097, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4100, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4104, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4105, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4108, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4109, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4110, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4111, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4112, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4113, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4114, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4115, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4116, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4117, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4118, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4119, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4120, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4121, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4122, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4125, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4126, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4134, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4135, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4136, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4213, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4214, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4215, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4216, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4217, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4218, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4219, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4220, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4234, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4249, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4277, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 11886, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id zeroinitializer], [288 x i8] zeroinitializer }, align 32
@e1000_err_handler = internal constant { %struct.pci_error_handlers, [40 x i8] } { %struct.pci_error_handlers { ptr @e1000_io_error_detected, ptr null, ptr @e1000_io_slot_reset, ptr null, ptr null, ptr @e1000_io_resume }, [40 x i8] zeroinitializer }, align 32
@e1000_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr @e1000_suspend, ptr @e1000_resume, ptr @e1000_suspend, ptr @e1000_resume, ptr @e1000_suspend, ptr @e1000_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@e1000_probe.cards_found = internal global { i32, [28 x i8] } zeroinitializer, align 32
@e1000_probe.global_quad_port_a = internal global { i32, [28 x i8] } zeroinitializer, align 32
@e1000_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.21, ptr @.str.2, i32 1007, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013e1000: No usable DMA config, aborting\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"e1000_probe\00", [20 x i8] zeroinitializer }, align 32
@e1000_probe._entry_ptr = internal global ptr @e1000_probe._entry, section ".printk_index", align 4
@e1000_netdev_ops = internal constant { %struct.net_device_ops, [80 x i8] } { %struct.net_device_ops { ptr null, ptr null, ptr @e1000_open, ptr @e1000_close, ptr @e1000_xmit_frame, ptr null, ptr null, ptr null, ptr @e1000_set_rx_mode, ptr @e1000_set_mac, ptr @eth_validate_addr, ptr null, ptr @e1000_ioctl, ptr null, ptr null, ptr null, ptr null, ptr @e1000_change_mtu, ptr null, ptr @e1000_tx_timeout, ptr null, ptr null, ptr null, ptr null, ptr @e1000_vlan_rx_add_vid, ptr @e1000_vlan_rx_kill_vid, ptr @e1000_netpoll, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @e1000_fix_features, ptr @e1000_set_features, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"EEPROM initialization failed\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"The EEPROM Checksum Is Not Valid\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"EEPROM Read Error\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Invalid MAC Address\0A\00", [43 x i8] zeroinitializer }, align 32
@e1000_probe.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.26 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"(work_completion)(&(&adapter->watchdog_task)->work)\00", [44 x i8] zeroinitializer }, align 32
@e1000_probe.__key.27 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.28 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"&(&adapter->watchdog_task)->timer\00", [62 x i8] zeroinitializer }, align 32
@e1000_probe.__key.29 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.30 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"(work_completion)(&(&adapter->fifo_stall_task)->work)\00", [42 x i8] zeroinitializer }, align 32
@e1000_probe.__key.31 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.32 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"&(&adapter->fifo_stall_task)->timer\00", [60 x i8] zeroinitializer }, align 32
@e1000_probe.__key.33 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.34 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"(work_completion)(&(&adapter->phy_info_task)->work)\00", [44 x i8] zeroinitializer }, align 32
@e1000_probe.__key.35 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.36 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"&(&adapter->phy_info_task)->timer\00", [62 x i8] zeroinitializer }, align 32
@e1000_probe.__key.37 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.38 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"(work_completion)(&adapter->reset_task)\00", [56 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"eth%d\00", [26 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"(PCI%s:%dMHz:%d-bit) %pM\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"-X\00", [29 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.43 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Intel(R) PRO/1000 Network Connection\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Unknown MAC Type\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"__pskb_pull_tail failed.\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/if_vlan.h\00", [40 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@.str.47 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"checksum_partial proto=%x!\0A\00", [36 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@e1000_tx_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.49, ptr @.str.2, i32 2952, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"TX DMA map failed\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"e1000_tx_map\00", [19 x i8] zeroinitializer }, align 32
@e1000_tx_map._entry_ptr = internal global ptr @e1000_tx_map._entry, section ".printk_index", align 4
@dma_map_single_attrs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.50 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/dma-mapping.h\00", [36 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", [52 x i8] zeroinitializer }, align 32
@softnet_data = external dso_local global %struct.softnet_data, section ".data..percpu..shared_aligned", align 128
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@.str.55 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@e1000_clean_rx_irq.__UNIQUE_ID_ddebug577 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.13, ptr @.str.56, ptr @.str.2, ptr @.str.57, i8 4, i8 81, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.56 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"e1000_clean_rx_irq\00", [45 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Receive packet consumed multiple buffers\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"skb align check failed: %u bytes at %p\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"dma align check failed: %u bytes at %p\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Jumbo Frames not supported.\0A\00", [35 x i8] zeroinitializer }, align 32
@e1000_change_mtu.__UNIQUE_ID_ddebug563 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.13, ptr @.str.61, ptr @.str.2, ptr @.str.62, i8 3, i8 125, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.61 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"e1000_change_mtu\00", [47 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"changing MTU from %d to %d\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [305 x i8], [79 x i8] } { [305 x i8] c"Detected Tx Unit Hang\0A  Tx Queue             <%lu>\0A  TDH                  <%x>\0A  TDT                  <%x>\0A  next_to_use          <%x>\0A  next_to_clean        <%x>\0Abuffer_info[next_to_clean]\0A  time_stamp           <%lx>\0A  next_to_watch        <%x>\0A  jiffies              <%lx>\0A  next_to_watch.status <%x>\0A\00", [79 x i8] zeroinitializer }, align 32
@e1000_dump._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.64, ptr @.str.65, ptr @.str.2, i32 3369, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016e1000: TX Desc ring0 dump\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"e1000_dump\00", [21 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr = internal global ptr @e1000_dump._entry, section ".printk_index", align 4
@e1000_dump._entry.66 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.65, ptr @.str.2, i32 3398, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [109 x i8], [51 x i8] } { [109 x i8] c"\016e1000: Tc[desc]     [Ce CoCsIpceCoS] [MssHlRSCm0Plen] [bi->dma       ] leng  ntw timestmp         bi->skb\0A\00", [51 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.68 = internal global ptr @e1000_dump._entry.66, section ".printk_index", align 4
@e1000_dump._entry.69 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.65, ptr @.str.2, i32 3399, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [109 x i8], [51 x i8] } { [109 x i8] c"\016e1000: Td[desc]     [address 63:0  ] [VlaPoRSCm1Dlen] [bi->dma       ] leng  ntw timestmp         bi->skb\0A\00", [51 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.71 = internal global ptr @e1000_dump._entry.69, section ".printk_index", align 4
@.str.72 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"NTC/U\00", [26 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"NTU\00", [28 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"NTC\00", [28 x i8] zeroinitializer }, align 32
@e1000_dump._entry.75 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.76, ptr @.str.65, ptr @.str.2, i32 3425, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\016e1000: T%c[0x%03X]    %016llX %016llX %016llX %04X  %3X %016llX %p %s\0A\00", [55 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.77 = internal global ptr @e1000_dump._entry.75, section ".printk_index", align 4
@e1000_dump._entry.78 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.65, ptr @.str.2, i32 3430, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016e1000: \0ARX Desc ring dump\0A\00", [35 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.80 = internal global ptr @e1000_dump._entry.78, section ".printk_index", align 4
@e1000_dump._entry.81 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.82, ptr @.str.65, ptr @.str.2, i32 3441, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"\016e1000: R[desc]      [address 63:0  ] [vl er S cks ln] [bi->dma       ] [bi->skb]\0A\00", [44 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.83 = internal global ptr @e1000_dump._entry.81, section ".printk_index", align 4
@e1000_dump._entry.84 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.85, ptr @.str.65, ptr @.str.2, i32 3462, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\016e1000: R[0x%03X]     %016llX %016llX %016llX %p %s\0A\00", [42 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.86 = internal global ptr @e1000_dump._entry.84, section ".printk_index", align 4
@e1000_dump._entry.87 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.88, ptr @.str.65, ptr @.str.2, i32 3467, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016e1000: Rx descriptor cache in 64bit format\0A\00", [50 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.89 = internal global ptr @e1000_dump._entry.87, section ".printk_index", align 4
@e1000_dump._entry.90 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.91, ptr @.str.65, ptr @.str.2, i32 3474, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016e1000: R%04X: %08X|%08X %08X|%08X\0A\00", [59 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.92 = internal global ptr @e1000_dump._entry.90, section ".printk_index", align 4
@e1000_dump._entry.93 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.94, ptr @.str.65, ptr @.str.2, i32 3477, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016e1000: Tx descriptor cache in 64bit format\0A\00", [50 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.95 = internal global ptr @e1000_dump._entry.93, section ".printk_index", align 4
@e1000_dump._entry.96 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.65, ptr @.str.2, i32 3484, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016e1000: T%04X: %08X|%08X %08X|%08X\0A\00", [59 x i8] zeroinitializer }, align 32
@e1000_dump._entry_ptr.98 = internal global ptr @e1000_dump._entry.96, section ".printk_index", align 4
@e1000_regdump.reg_name = internal constant { [38 x ptr], [40 x i8] } { [38 x ptr] [ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136], [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"CTRL\00", [27 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"STATUS\00", [25 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"RCTL\00", [27 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RDLEN\00", [26 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"RDH\00", [28 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"RDT\00", [28 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"RDTR\00", [27 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TCTL\00", [27 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TDBAL\00", [26 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TDBAH\00", [26 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TDLEN\00", [26 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"TDH\00", [28 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"TDT\00", [28 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TIDV\00", [27 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"TXDCTL\00", [25 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TADV\00", [27 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TARC0\00", [26 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"TDBAL1\00", [25 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"TDBAH1\00", [25 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"TDLEN1\00", [25 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TDH1\00", [27 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TDT1\00", [27 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"TXDCTL1\00", [24 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TARC1\00", [26 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"CTRL_EXT\00", [23 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ERT\00", [28 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RDBAL\00", [26 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RDBAH\00", [26 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TDFH\00", [27 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TDFT\00", [27 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TDFHS\00", [26 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TDFTS\00", [26 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TDFPC\00", [26 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"RDFH\00", [27 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"RDFT\00", [27 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RDFHS\00", [26 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RDFTS\00", [26 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RDFPC\00", [26 x i8] zeroinitializer }, align 32
@e1000_regdump._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.137, ptr @.str.138, ptr @.str.2, i32 3347, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\016e1000: Register dump\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"e1000_regdump\00", [18 x i8] zeroinitializer }, align 32
@e1000_regdump._entry_ptr = internal global ptr @e1000_regdump._entry, section ".printk_index", align 4
@e1000_regdump._entry.139 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.140, ptr @.str.138, ptr @.str.2, i32 3349, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016e1000: %-15s  %08x\0A\00", [42 x i8] zeroinitializer }, align 32
@e1000_regdump._entry_ptr.141 = internal global ptr @e1000_regdump._entry.139, section ".printk_index", align 4
@.str.142 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Unable to allocate memory for queues\0A\00", [58 x i8] zeroinitializer }, align 32
@e1000_sw_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.143 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&adapter->stats_lock\00", [43 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.145, ptr @.str.2, i32 731, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013e1000: /*********************/\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"e1000_dump_eeprom\00", [46 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr = internal global ptr @e1000_dump_eeprom._entry, section ".printk_index", align 4
@e1000_dump_eeprom._entry.146 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.145, ptr @.str.2, i32 732, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013e1000: Current EEPROM Checksum : 0x%04x\0A\00", [53 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.148 = internal global ptr @e1000_dump_eeprom._entry.146, section ".printk_index", align 4
@e1000_dump_eeprom._entry.149 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.145, ptr @.str.2, i32 733, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013e1000: Calculated              : 0x%04x\0A\00", [53 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.151 = internal global ptr @e1000_dump_eeprom._entry.149, section ".printk_index", align 4
@e1000_dump_eeprom._entry.152 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.145, ptr @.str.2, i32 735, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\013e1000: Offset    Values\0A\00", [37 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.154 = internal global ptr @e1000_dump_eeprom._entry.152, section ".printk_index", align 4
@e1000_dump_eeprom._entry.155 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.156, ptr @.str.145, ptr @.str.2, i32 736, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\013e1000: ========  ======\0A\00", [37 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.157 = internal global ptr @e1000_dump_eeprom._entry.155, section ".printk_index", align 4
@e1000_dump_eeprom._entry.158 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.159, ptr @.str.145, ptr @.str.2, i32 739, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013e1000: Include this output when contacting your support provider.\0A\00", [59 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.160 = internal global ptr @e1000_dump_eeprom._entry.158, section ".printk_index", align 4
@e1000_dump_eeprom._entry.161 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.162, ptr @.str.145, ptr @.str.2, i32 740, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013e1000: This is not a software error! Something bad happened to\0A\00", [62 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.163 = internal global ptr @e1000_dump_eeprom._entry.161, section ".printk_index", align 4
@e1000_dump_eeprom._entry.164 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.165, ptr @.str.145, ptr @.str.2, i32 741, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013e1000: your hardware or EEPROM image. Ignoring this problem could\0A\00", [59 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.166 = internal global ptr @e1000_dump_eeprom._entry.164, section ".printk_index", align 4
@e1000_dump_eeprom._entry.167 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.145, ptr @.str.2, i32 742, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013e1000: result in further problems, possibly loss of data,\0A\00", [35 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.169 = internal global ptr @e1000_dump_eeprom._entry.167, section ".printk_index", align 4
@e1000_dump_eeprom._entry.170 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.171, ptr @.str.145, ptr @.str.2, i32 743, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\013e1000: corruption or system hangs!\0A\00", [58 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.172 = internal global ptr @e1000_dump_eeprom._entry.170, section ".printk_index", align 4
@e1000_dump_eeprom._entry.173 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.145, ptr @.str.2, i32 744, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013e1000: The MAC Address will be reset to 00:00:00:00:00:00,\0A\00", [34 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.175 = internal global ptr @e1000_dump_eeprom._entry.173, section ".printk_index", align 4
@e1000_dump_eeprom._entry.176 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.145, ptr @.str.2, i32 745, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013e1000: which is invalid and requires you to set the proper MAC\0A\00", [62 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.178 = internal global ptr @e1000_dump_eeprom._entry.176, section ".printk_index", align 4
@e1000_dump_eeprom._entry.179 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.145, ptr @.str.2, i32 746, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013e1000: address manually before continuing to enable this network\0A\00", [60 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.181 = internal global ptr @e1000_dump_eeprom._entry.179, section ".printk_index", align 4
@e1000_dump_eeprom._entry.182 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.145, ptr @.str.2, i32 747, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013e1000: device. Please inspect the EEPROM dump and report the\0A\00", [32 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.184 = internal global ptr @e1000_dump_eeprom._entry.182, section ".printk_index", align 4
@e1000_dump_eeprom._entry.185 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.186, ptr @.str.145, ptr @.str.2, i32 748, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013e1000: issue to your hardware vendor or Intel Customer Support.\0A\00", [61 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.187 = internal global ptr @e1000_dump_eeprom._entry.185, section ".printk_index", align 4
@e1000_dump_eeprom._entry.188 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.145, ptr @.str.2, i32 749, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@e1000_dump_eeprom._entry_ptr.189 = internal global ptr @e1000_dump_eeprom._entry.188, section ".printk_index", align 4
@e1000_watchdog._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.190, ptr @.str.191, ptr @.str.2, i32 2458, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\016e1000: %s NIC Link is Up %d Mbps %s, Flow Control: %s\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"e1000_watchdog\00", [17 x i8] zeroinitializer }, align 32
@e1000_watchdog._entry_ptr = internal global ptr @e1000_watchdog._entry, section ".printk_index", align 4
@.str.192 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Full Duplex\00", [20 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Half Duplex\00", [20 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RX/TX\00", [26 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"RX\00", [29 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"TX\00", [29 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"None\00", [27 x i8] zeroinitializer }, align 32
@e1000_watchdog._entry.198 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.199, ptr @.str.191, ptr @.str.2, i32 2487, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016e1000: %s NIC Link is Down\0A\00", [34 x i8] zeroinitializer }, align 32
@e1000_watchdog._entry_ptr.200 = internal global ptr @e1000_watchdog._entry.198, section ".printk_index", align 4
@.str.201 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Reset adapter\0A\00", [17 x i8] zeroinitializer }, align 32
@system_state = external dso_local local_unnamed_addr global i32, align 4
@e1000_io_slot_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.202, ptr @.str.203, ptr @.str.2, i32 5273, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\013e1000: Cannot re-enable PCI device after reset.\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"e1000_io_slot_reset\00", [44 x i8] zeroinitializer }, align 32
@e1000_io_slot_reset._entry_ptr = internal global ptr @e1000_io_slot_reset._entry, section ".printk_index", align 4
@e1000_io_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.204, ptr @.str.205, ptr @.str.2, i32 5308, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016e1000: can't bring device back up after reset\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"e1000_io_resume\00", [16 x i8] zeroinitializer }, align 32
@e1000_io_resume._entry_ptr = internal global ptr @e1000_io_resume._entry, section ".printk_index", align 4
@e1000_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.206, ptr @.str.207, ptr @.str.2, i32 5166, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013e1000: Cannot enable PCI device from suspend\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"e1000_resume\00", [19 x i8] zeroinitializer }, align 32
@e1000_resume._entry_ptr = internal global ptr @e1000_resume._entry, section ".printk_index", align 4
@.str.208 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Unable to allocate interrupt Error: %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"txdr align check failed: %u bytes at %p\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"Unable to allocate aligned memory for the transmit descriptor ring\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"rxdr align check failed: %u bytes at %p\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"Unable to allocate aligned memory for the Rx descriptor ring\0A\00", [34 x i8] zeroinitializer }, align 32
@switch.table.e1000_probe = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 100, i32 120, i32 133], [20 x i8] zeroinitializer }, align 32
@switch.table.e1000_clean = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 70000, i32 20000, i32 4000], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 256]
@__sancov_gen_cov_switch_values.213 = internal global [16 x i64] [i64 14, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14]
@__sancov_gen_cov_switch_values.214 = internal global [5 x i64] [i64 3, i64 32, i64 6, i64 8, i64 9]
@__sancov_gen_cov_switch_values.215 = internal global [5 x i64] [i64 3, i64 32, i64 6, i64 8, i64 9]
@__sancov_gen_cov_switch_values.216 = internal global [5 x i64] [i64 3, i64 32, i64 6, i64 8, i64 9]
@__sancov_gen_cov_switch_values.217 = internal global [5 x i64] [i64 3, i64 32, i64 6, i64 8, i64 9]
@__sancov_gen_cov_switch_values.218 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.219 = internal global [7 x i64] [i64 5, i64 32, i64 10, i64 11, i64 100, i64 101, i64 1001]
@__sancov_gen_cov_switch_values.220 = internal global [23 x i64] [i64 21, i64 16, i64 4104, i64 4105, i64 4108, i64 4109, i64 4110, i64 4111, i64 4112, i64 4113, i64 4114, i64 4115, i64 4116, i64 4117, i64 4118, i64 4119, i64 4120, i64 4125, i64 4126, i64 4214, i64 4215, i64 4216, i64 4220]
@__sancov_gen_cov_switch_values.221 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 13]
@__sancov_gen_cov_switch_values.222 = internal global [8 x i64] [i64 6, i64 32, i64 1, i64 2, i64 3, i64 4, i64 8, i64 10]
@__sancov_gen_cov_switch_values.223 = internal global [6 x i64] [i64 4, i64 16, i64 4114, i64 4218, i64 4234, i64 4277]
@__sancov_gen_cov_switch_values.224 = internal global [4 x i64] [i64 2, i64 16, i64 0, i64 255]
@__sancov_gen_cov_switch_values.225 = internal global [5 x i64] [i64 3, i64 16, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.226 = internal global [5 x i64] [i64 3, i64 16, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.227 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.228 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 3]
@__sancov_gen_cov_switch_values.229 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.230 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.231 = internal global [5 x i64] [i64 3, i64 32, i64 35143, i64 35144, i64 35145]
@__sancov_gen_cov_switch_values.232 = internal global [5 x i64] [i64 3, i64 16, i64 0, i64 16, i64 20]
@__sancov_gen_cov_switch_values.233 = internal global [7 x i64] [i64 5, i64 32, i64 10, i64 11, i64 100, i64 101, i64 1001]
@__sancov_gen_cov_switch_values.234 = internal global [4 x i64] [i64 2, i64 32, i64 1500, i64 1504]
@__sancov_gen_cov_switch_values.235 = internal global [4 x i64] [i64 2, i64 16, i64 2048, i64 34525]
@__sancov_gen_cov_switch_values.236 = internal global [5 x i64] [i64 3, i64 32, i64 6, i64 8, i64 9]
@__sancov_gen_cov_switch_values.237 = internal global [5 x i64] [i64 3, i64 32, i64 6, i64 8, i64 9]
@__sancov_gen_cov_switch_values.238 = internal global [5 x i64] [i64 3, i64 32, i64 6, i64 8, i64 9]
@__sancov_gen_cov_switch_values.239 = internal global [8 x i64] [i64 6, i64 32, i64 65, i64 128, i64 256, i64 512, i64 1024, i64 1523]
@__sancov_gen_cov_switch_values.240 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 3, i64 7]
@___asan_gen_.241 = private unnamed_addr constant [18 x i8] c"e1000_driver_name\00", align 1
@___asan_gen_.243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 11, i32 6 }
@___asan_gen_.244 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@___asan_gen_.246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 197, i32 12 }
@___asan_gen_.247 = private unnamed_addr constant [13 x i8] c"e1000_driver\00", align 1
@___asan_gen_.249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 180, i32 26 }
@___asan_gen_.267 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 681, i32 3 }
@___asan_gen_.270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1576, i32 4 }
@___asan_gen_.273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1768, i32 4 }
@___asan_gen_.276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 4852, i32 3 }
@___asan_gen_.279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 5057, i32 2 }
@___asan_gen_.288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 223, i32 2 }
@___asan_gen_.289 = private unnamed_addr constant [20 x i8] c"e1000_driver_string\00", align 1
@___asan_gen_.291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 12, i32 13 }
@___asan_gen_.294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 225, i32 2 }
@___asan_gen_.295 = private unnamed_addr constant [16 x i8] c"e1000_copyright\00", align 1
@___asan_gen_.297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 13, i32 19 }
@___asan_gen_.300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 227, i32 8 }
@___asan_gen_.306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 230, i32 4 }
@___asan_gen_.312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 232, i32 4 }
@___asan_gen_.313 = private unnamed_addr constant [14 x i8] c"e1000_pci_tbl\00", align 1
@___asan_gen_.315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 22, i32 35 }
@___asan_gen_.316 = private unnamed_addr constant [18 x i8] c"e1000_err_handler\00", align 1
@___asan_gen_.318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 172, i32 40 }
@___asan_gen_.319 = private unnamed_addr constant [13 x i8] c"e1000_pm_ops\00", align 1
@___asan_gen_.321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 178, i32 8 }
@___asan_gen_.322 = private unnamed_addr constant [12 x i8] c"cards_found\00", align 1
@___asan_gen_.324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 927, i32 13 }
@___asan_gen_.325 = private unnamed_addr constant [19 x i8] c"global_quad_port_a\00", align 1
@___asan_gen_.327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 928, i32 13 }
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1007, i32 4 }
@___asan_gen_.337 = private unnamed_addr constant [17 x i8] c"e1000_netdev_ops\00", align 1
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 827, i32 36 }
@___asan_gen_.342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1078, i32 3 }
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1090, i32 3 }
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1103, i32 4 }
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1109, i32 3 }
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1112, i32 2 }
@___asan_gen_.375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1113, i32 2 }
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1115, i32 2 }
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1116, i32 2 }
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1200, i32 23 }
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1208, i32 2 }
@___asan_gen_.408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1220, i32 2 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 877, i32 3 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3160, i32 6 }
@___asan_gen_.416 = private unnamed_addr constant [27 x i8] c"../include/linux/if_vlan.h\00", align 1
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.416, i32 598, i32 8 }
@___asan_gen_.420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 2788, i32 4 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 2952, i32 2 }
@___asan_gen_.434 = private unnamed_addr constant [31 x i8] c"../include/linux/dma-mapping.h\00", align 1
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.434, i32 326, i32 6 }
@___asan_gen_.437 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.437, i32 717, i32 2 }
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 4423, i32 4 }
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 4593, i32 4 }
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 4634, i32 4 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3530, i32 4 }
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3572, i32 2 }
@___asan_gen_.462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3905, i32 4 }
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3369, i32 2 }
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3398, i32 2 }
@___asan_gen_.483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3399, i32 2 }
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3412, i32 11 }
@___asan_gen_.489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3414, i32 11 }
@___asan_gen_.492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3416, i32 11 }
@___asan_gen_.498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3420, i32 3 }
@___asan_gen_.504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3430, i32 2 }
@___asan_gen_.510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3441, i32 2 }
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3460, i32 3 }
@___asan_gen_.522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3467, i32 2 }
@___asan_gen_.528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3469, i32 3 }
@___asan_gen_.534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3477, i32 2 }
@___asan_gen_.540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3479, i32 3 }
@___asan_gen_.541 = private unnamed_addr constant [9 x i8] c"reg_name\00", align 1
@___asan_gen_.543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3293, i32 28 }
@___asan_gen_.546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3294, i32 3 }
@___asan_gen_.549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3294, i32 12 }
@___asan_gen_.552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3295, i32 3 }
@___asan_gen_.555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3295, i32 11 }
@___asan_gen_.558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3295, i32 20 }
@___asan_gen_.561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3295, i32 27 }
@___asan_gen_.564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3295, i32 34 }
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3296, i32 3 }
@___asan_gen_.570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3296, i32 11 }
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3296, i32 20 }
@___asan_gen_.576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3296, i32 29 }
@___asan_gen_.579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3296, i32 38 }
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3296, i32 45 }
@___asan_gen_.585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3297, i32 3 }
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3297, i32 11 }
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3297, i32 21 }
@___asan_gen_.594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3297, i32 29 }
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3298, i32 3 }
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3298, i32 13 }
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3298, i32 23 }
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3298, i32 33 }
@___asan_gen_.609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3298, i32 41 }
@___asan_gen_.612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3299, i32 3 }
@___asan_gen_.615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3299, i32 14 }
@___asan_gen_.618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3300, i32 3 }
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3300, i32 15 }
@___asan_gen_.624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3300, i32 22 }
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3300, i32 31 }
@___asan_gen_.630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3301, i32 3 }
@___asan_gen_.633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3301, i32 11 }
@___asan_gen_.636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3301, i32 19 }
@___asan_gen_.639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3301, i32 28 }
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3301, i32 37 }
@___asan_gen_.645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3302, i32 3 }
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3302, i32 11 }
@___asan_gen_.651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3302, i32 19 }
@___asan_gen_.654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3302, i32 28 }
@___asan_gen_.657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3302, i32 37 }
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3347, i32 2 }
@___asan_gen_.672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3349, i32 3 }
@___asan_gen_.675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1304, i32 3 }
@___asan_gen_.676 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1311, i32 2 }
@___asan_gen_.690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 731, i32 2 }
@___asan_gen_.696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 732, i32 2 }
@___asan_gen_.702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 733, i32 2 }
@___asan_gen_.708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 735, i32 2 }
@___asan_gen_.714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 736, i32 2 }
@___asan_gen_.720 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 739, i32 2 }
@___asan_gen_.726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 740, i32 2 }
@___asan_gen_.732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 741, i32 2 }
@___asan_gen_.738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 742, i32 2 }
@___asan_gen_.744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 743, i32 2 }
@___asan_gen_.750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 744, i32 2 }
@___asan_gen_.756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 745, i32 2 }
@___asan_gen_.762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 746, i32 2 }
@___asan_gen_.768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 747, i32 2 }
@___asan_gen_.774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 748, i32 2 }
@___asan_gen_.777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 749, i32 2 }
@___asan_gen_.804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 2449, i32 4 }
@___asan_gen_.810 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 2486, i32 4 }
@___asan_gen_.813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 3509, i32 2 }
@___asan_gen_.822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 5273, i32 3 }
@___asan_gen_.831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 5308, i32 4 }
@___asan_gen_.832 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 5166, i32 3 }
@___asan_gen_.843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 263, i32 3 }
@___asan_gen_.846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1526, i32 3 }
@___asan_gen_.849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1544, i32 4 }
@___asan_gen_.852 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1718, i32 3 }
@___asan_gen_.853 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.854 = private constant [49 x i8] c"../drivers/net/ethernet/intel/e1000/e1000_main.c\00", align 1
@___asan_gen_.855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.854, i32 1736, i32 4 }
@___asan_gen_.856 = private unnamed_addr constant [25 x i8] c"switch.table.e1000_probe\00", align 1
@___asan_gen_.857 = private unnamed_addr constant [25 x i8] c"switch.table.e1000_clean\00", align 1
@llvm.compiler.used = appending global [261 x ptr] [ptr @__UNIQUE_ID_author523, ptr @__UNIQUE_ID_copybreak522, ptr @__UNIQUE_ID_copybreaktype521, ptr @__UNIQUE_ID_debug528, ptr @__UNIQUE_ID_debugtype527, ptr @__UNIQUE_ID_description524, ptr @__UNIQUE_ID_file525, ptr @__UNIQUE_ID_license526, ptr @__exitcall_e1000_exit_module, ptr @__initcall__kmod_e1000__529_238_e1000_init_module6, ptr @__param_copybreak, ptr @__param_debug, ptr @e1000_dump._entry, ptr @e1000_dump._entry.66, ptr @e1000_dump._entry.69, ptr @e1000_dump._entry.75, ptr @e1000_dump._entry.78, ptr @e1000_dump._entry.81, ptr @e1000_dump._entry.84, ptr @e1000_dump._entry.87, ptr @e1000_dump._entry.90, ptr @e1000_dump._entry.93, ptr @e1000_dump._entry.96, ptr @e1000_dump._entry_ptr, ptr @e1000_dump._entry_ptr.68, ptr @e1000_dump._entry_ptr.71, ptr @e1000_dump._entry_ptr.77, ptr @e1000_dump._entry_ptr.80, ptr @e1000_dump._entry_ptr.83, ptr @e1000_dump._entry_ptr.86, ptr @e1000_dump._entry_ptr.89, ptr @e1000_dump._entry_ptr.92, ptr @e1000_dump._entry_ptr.95, ptr @e1000_dump._entry_ptr.98, ptr @e1000_dump_eeprom._entry, ptr @e1000_dump_eeprom._entry.146, ptr @e1000_dump_eeprom._entry.149, ptr @e1000_dump_eeprom._entry.152, ptr @e1000_dump_eeprom._entry.155, ptr @e1000_dump_eeprom._entry.158, ptr @e1000_dump_eeprom._entry.161, ptr @e1000_dump_eeprom._entry.164, ptr @e1000_dump_eeprom._entry.167, ptr @e1000_dump_eeprom._entry.170, ptr @e1000_dump_eeprom._entry.173, ptr @e1000_dump_eeprom._entry.176, ptr @e1000_dump_eeprom._entry.179, ptr @e1000_dump_eeprom._entry.182, ptr @e1000_dump_eeprom._entry.185, ptr @e1000_dump_eeprom._entry.188, ptr @e1000_dump_eeprom._entry_ptr, ptr @e1000_dump_eeprom._entry_ptr.148, ptr @e1000_dump_eeprom._entry_ptr.151, ptr @e1000_dump_eeprom._entry_ptr.154, ptr @e1000_dump_eeprom._entry_ptr.157, ptr @e1000_dump_eeprom._entry_ptr.160, ptr @e1000_dump_eeprom._entry_ptr.163, ptr @e1000_dump_eeprom._entry_ptr.166, ptr @e1000_dump_eeprom._entry_ptr.169, ptr @e1000_dump_eeprom._entry_ptr.172, ptr @e1000_dump_eeprom._entry_ptr.175, ptr @e1000_dump_eeprom._entry_ptr.178, ptr @e1000_dump_eeprom._entry_ptr.181, ptr @e1000_dump_eeprom._entry_ptr.184, ptr @e1000_dump_eeprom._entry_ptr.187, ptr @e1000_dump_eeprom._entry_ptr.189, ptr @e1000_exit_module, ptr @e1000_init_module._entry, ptr @e1000_init_module._entry.11, ptr @e1000_init_module._entry.14, ptr @e1000_init_module._entry.17, ptr @e1000_init_module._entry_ptr, ptr @e1000_init_module._entry_ptr.12, ptr @e1000_init_module._entry_ptr.16, ptr @e1000_init_module._entry_ptr.19, ptr @e1000_io_resume._entry, ptr @e1000_io_resume._entry_ptr, ptr @e1000_io_slot_reset._entry, ptr @e1000_io_slot_reset._entry_ptr, ptr @e1000_probe._entry, ptr @e1000_probe._entry_ptr, ptr @e1000_regdump._entry, ptr @e1000_regdump._entry.139, ptr @e1000_regdump._entry_ptr, ptr @e1000_regdump._entry_ptr.141, ptr @e1000_reset._entry, ptr @e1000_reset._entry_ptr, ptr @e1000_resume._entry, ptr @e1000_resume._entry_ptr, ptr @e1000_tx_map._entry, ptr @e1000_tx_map._entry_ptr, ptr @e1000_watchdog._entry, ptr @e1000_watchdog._entry.198, ptr @e1000_watchdog._entry_ptr, ptr @e1000_watchdog._entry_ptr.200, ptr @e1000_driver_name, ptr @debug, ptr @e1000_driver, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @e1000_driver_string, ptr @e1000_copyright, ptr @.str.13, ptr @.str.15, ptr @.str.18, ptr @e1000_pci_tbl, ptr @e1000_err_handler, ptr @e1000_pm_ops, ptr @e1000_probe.cards_found, ptr @e1000_probe.global_quad_port_a, ptr @.str.20, ptr @.str.21, ptr @e1000_netdev_ops, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @e1000_probe.__key, ptr @.str.26, ptr @e1000_probe.__key.27, ptr @.str.28, ptr @e1000_probe.__key.29, ptr @.str.30, ptr @e1000_probe.__key.31, ptr @.str.32, ptr @e1000_probe.__key.33, ptr @.str.34, ptr @e1000_probe.__key.35, ptr @.str.36, ptr @e1000_probe.__key.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.67, ptr @.str.70, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.76, ptr @.str.79, ptr @.str.82, ptr @.str.85, ptr @.str.88, ptr @.str.91, ptr @.str.94, ptr @.str.97, ptr @e1000_regdump.reg_name, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.140, ptr @.str.142, ptr @e1000_sw_init.__key, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.147, ptr @.str.150, ptr @.str.153, ptr @.str.156, ptr @.str.159, ptr @.str.162, ptr @.str.165, ptr @.str.168, ptr @.str.171, ptr @.str.174, ptr @.str.177, ptr @.str.180, ptr @.str.183, ptr @.str.186, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.199, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @switch.table.e1000_probe, ptr @switch.table.e1000_clean], section "llvm.metadata"
@0 = internal global [207 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_driver_name to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_driver to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_init_module._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_driver_string to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_init_module._entry.11 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_copyright to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_init_module._entry.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_init_module._entry.17 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_pci_tbl to i32), i32 1216, i32 1504, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_err_handler to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.cards_found to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.global_quad_port_a to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_netdev_ops to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.__key.27 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.__key.29 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.__key.31 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.__key.33 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.__key.35 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_probe.__key.37 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_tx_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 305, i32 384, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 109, i32 160, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.69 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 109, i32 160, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.75 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.78 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.81 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.84 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.87 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.90 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.93 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump._entry.96 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_regdump.reg_name to i32), i32 152, i32 192, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_regdump._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_regdump._entry.139 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_sw_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.146 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.149 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.152 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.155 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.158 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.161 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.164 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.167 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.170 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.173 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.176 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.179 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.185 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_dump_eeprom._entry.188 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_watchdog._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_watchdog._entry.198 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_io_slot_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_io_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @e1000_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.e1000_probe to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.e1000_clean to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @e1000_get_hw_dev(ptr nocapture noundef readonly %hw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 7
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %1, i32 0, i32 51
  %2 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %netdev, align 8
  ret ptr %3
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_init_module() #2 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9, ptr noundef nonnull @e1000_driver_string) #17
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9, ptr noundef nonnull @e1000_copyright) #17
  %call6 = tail call i32 @__pci_register_driver(ptr noundef nonnull @e1000_driver, ptr noundef null, ptr noundef nonnull @.str.13) #14
  %0 = load i32, ptr @copybreak, align 4
  %1 = zext i32 %0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values)
  switch i32 %0, label %do.end16 [
    i32 256, label %entry.if.end19_crit_edge
    i32 0, label %do.end11
  ]

entry.if.end19_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

do.end11:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15) #17
  br label %if.end19

do.end16:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.18, i32 noundef %0) #17
  br label %if.end19

if.end19:                                         ; preds = %do.end16, %do.end11, %entry.if.end19_crit_edge
  ret i32 %call6
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @e1000_exit_module() #2 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_unregister_driver(ptr noundef nonnull @e1000_driver) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_unregister_driver(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_up(ptr noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  tail call fastcc void @e1000_configure(ptr noundef %adapter)
  %flags = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 64
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %flags) #14
  %napi = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 40
  tail call void @napi_enable(ptr noundef %napi) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  tail call void @arm_heavy_mb() #14
  %0 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw1, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 -1660944384) #14, !srcloc !421
  %2 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw1, align 4
  %add.ptr6.i = getelementptr i8, ptr %3, i32 8
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %5 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %netdev, align 8
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %6, i32 0, i32 103
  %7 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %_tx.i.i, align 128
  tail call void @netif_tx_wake_queue(ptr noundef %8) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !424
  tail call void @arm_heavy_mb() #14
  %9 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %10, i32 200
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 67108864) #14, !srcloc !421
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_configure(ptr noundef %adapter) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev1, align 8
  tail call void @e1000_set_rx_mode(ptr noundef %1)
  %call.i.i = tail call i32 @_find_next_bit_be(ptr noundef %adapter, i32 noundef 4096, i32 noundef 0) #14
  %conv1.i.i = and i32 %call.i.i, 61440
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv1.i.i)
  %cmp.i.i = icmp eq i32 %conv1.i.i, 0
  br i1 %cmp.i.i, label %if.end.i, label %entry.e1000_restore_vlan.exit_crit_edge

entry.e1000_restore_vlan.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_restore_vlan.exit

if.end.i:                                         ; preds = %entry
  tail call fastcc void @e1000_vlan_filter_on_off(ptr noundef %adapter, i1 noundef zeroext true) #14
  %call1.i = tail call i32 @_find_next_bit_be(ptr noundef %adapter, i32 noundef 4096, i32 noundef 0) #14
  %conv216.i = and i32 %call1.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %conv216.i)
  %cmp17.i = icmp ult i32 %conv216.i, 4096
  br i1 %cmp17.i, label %if.end.i.for.body.i_crit_edge, label %if.end.i.e1000_restore_vlan.exit_crit_edge

if.end.i.e1000_restore_vlan.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_restore_vlan.exit

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %conv219.i = phi i32 [ %conv2.i, %for.body.i.for.body.i_crit_edge ], [ %conv216.i, %if.end.i.for.body.i_crit_edge ]
  %vid.0.in18.i = phi i32 [ %call8.i, %for.body.i.for.body.i_crit_edge ], [ %call1.i, %if.end.i.for.body.i_crit_edge ]
  %vid.0.i = trunc i32 %vid.0.in18.i to i16
  %2 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %netdev1, align 8
  %call4.i = tail call i32 @e1000_vlan_rx_add_vid(ptr noundef %3, i16 noundef zeroext -32512, i16 noundef zeroext %vid.0.i) #14
  %add.i = add nuw nsw i32 %conv219.i, 1
  %call8.i = tail call i32 @_find_next_bit_be(ptr noundef %adapter, i32 noundef 4096, i32 noundef %add.i) #14
  %conv2.i = and i32 %call8.i, 65535
  %cmp.i = icmp ult i32 %conv2.i, 4096
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.e1000_restore_vlan.exit_crit_edge

for.body.i.e1000_restore_vlan.exit_crit_edge:     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_restore_vlan.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

e1000_restore_vlan.exit:                          ; preds = %for.body.i.e1000_restore_vlan.exit_crit_edge, %if.end.i.e1000_restore_vlan.exit_crit_edge, %entry.e1000_restore_vlan.exit_crit_edge
  %en_mng_pt.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 6
  %4 = ptrtoint ptr %en_mng_pt.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %en_mng_pt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %e1000_restore_vlan.exit.e1000_init_manageability.exit_crit_edge, label %if.then.i

e1000_restore_vlan.exit.e1000_init_manageability.exit_crit_edge: ; preds = %e1000_restore_vlan.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_init_manageability.exit

if.then.i:                                        ; preds = %e1000_restore_vlan.exit
  call void @__sanitizer_cov_trace_pc() #16
  %hw1.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %6 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 22560
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !425
  %9 = and i32 %8, -2097153
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !426
  tail call void @arm_heavy_mb() #14
  %10 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw1.i, align 4
  %add.ptr7.i = getelementptr i8, ptr %11, i32 22560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7.i, i32 %9) #14, !srcloc !421
  br label %e1000_init_manageability.exit

e1000_init_manageability.exit:                    ; preds = %if.then.i, %e1000_restore_vlan.exit.e1000_init_manageability.exit_crit_edge
  %hw1.i30 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %tx_ring.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 19
  %12 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tx_ring.i, align 8
  %dma.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %dma.i, align 4
  %count.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %13, i32 0, i32 3
  %16 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %count.i, align 4
  %mul.i = shl i32 %17, 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !427
  tail call void @arm_heavy_mb() #14
  %18 = tail call i32 @llvm.bswap.i32(i32 %mul.i) #14
  %19 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw1.i30, align 4
  %mac_type.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %21 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %22)
  %cmp.i31 = icmp ugt i32 %22, 2
  %cond.i = select i1 %cmp.i31, i32 14344, i32 1064
  %add.ptr.i32 = getelementptr i8, ptr %20, i32 %cond.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i32, i32 %18) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !428
  tail call void @arm_heavy_mb() #14
  %23 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %hw1.i30, align 4
  %25 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %26)
  %cmp11.i = icmp ugt i32 %26, 2
  %cond13.i = select i1 %cmp11.i, i32 14340, i32 1060
  %add.ptr14.i = getelementptr i8, ptr %24, i32 %cond13.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr14.i, i32 0) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !429
  tail call void @arm_heavy_mb() #14
  %27 = tail call i32 @llvm.bswap.i32(i32 %15) #14
  %28 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw1.i30, align 4
  %30 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %31)
  %cmp21.i = icmp ugt i32 %31, 2
  %cond23.i = select i1 %cmp21.i, i32 14336, i32 1056
  %add.ptr24.i = getelementptr i8, ptr %29, i32 %cond23.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr24.i, i32 %27) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !430
  tail call void @arm_heavy_mb() #14
  %32 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %hw1.i30, align 4
  %34 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %35)
  %cmp30.i = icmp ugt i32 %35, 2
  %cond32.i = select i1 %cmp30.i, i32 14360, i32 1080
  %add.ptr33.i = getelementptr i8, ptr %33, i32 %cond32.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr33.i, i32 0) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !431
  tail call void @arm_heavy_mb() #14
  %36 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hw1.i30, align 4
  %38 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %39)
  %cmp39.i = icmp ugt i32 %39, 2
  %cond41.i = select i1 %cmp39.i, i32 14352, i32 1072
  %add.ptr42.i = getelementptr i8, ptr %37, i32 %cond41.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr42.i, i32 0) #14, !srcloc !421
  %40 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %41)
  %cmp44.i = icmp ugt i32 %41, 2
  %conv47.i = select i1 %cmp44.i, i16 14352, i16 1072
  %42 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %tx_ring.i, align 8
  %tdh.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %43, i32 0, i32 7
  %44 = ptrtoint ptr %tdh.i to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %conv47.i, ptr %tdh.i, align 4
  %45 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %46)
  %cmp51.i = icmp ugt i32 %46, 2
  %conv54.i = select i1 %cmp51.i, i16 14360, i16 1080
  %47 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %tx_ring.i, align 8
  %tdt.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %48, i32 0, i32 8
  %49 = ptrtoint ptr %tdt.i to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %conv54.i, ptr %tdt.i, align 2
  %media_type.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 6
  %50 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %media_type.i, align 4
  %.off188.i = add i32 %51, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off188.i)
  %switch189.i = icmp ult i32 %.off188.i, 2
  %spec.select.i = select i1 %switch189.i, i32 6299657, i32 6299656
  %52 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %mac_type.i, align 4
  %.off.i = add i32 %53, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  %.tipg.0.i = select i1 %switch.i, i32 10487818, i32 %spec.select.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !432
  tail call void @arm_heavy_mb() #14
  %54 = tail call i32 @llvm.bswap.i32(i32 %.tipg.0.i) #14
  %55 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %hw1.i30, align 4
  %add.ptr76.i = getelementptr i8, ptr %56, i32 1040
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr76.i, i32 %54) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !433
  tail call void @arm_heavy_mb() #14
  %tx_int_delay.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 22
  %57 = ptrtoint ptr %tx_int_delay.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %tx_int_delay.i, align 4
  %59 = tail call i32 @llvm.bswap.i32(i32 %58) #14
  %60 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %hw1.i30, align 4
  %62 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %63)
  %cmp82.i = icmp ugt i32 %63, 2
  %cond84.i = select i1 %cmp82.i, i32 14368, i32 1088
  %add.ptr85.i = getelementptr i8, ptr %61, i32 %cond84.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr85.i, i32 %59) #14, !srcloc !421
  %64 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %65)
  %cmp87.i = icmp ugt i32 %65, 4
  br i1 %cmp87.i, label %do.body90.i, label %e1000_init_manageability.exit.if.end99.i_crit_edge

e1000_init_manageability.exit.if.end99.i_crit_edge: ; preds = %e1000_init_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end99.i

do.body90.i:                                      ; preds = %e1000_init_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !434
  tail call void @arm_heavy_mb() #14
  %tx_abs_int_delay.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 23
  %66 = ptrtoint ptr %tx_abs_int_delay.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %tx_abs_int_delay.i, align 8
  %68 = tail call i32 @llvm.bswap.i32(i32 %67) #14
  %69 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %hw1.i30, align 4
  %add.ptr98.i = getelementptr i8, ptr %70, i32 14380
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr98.i, i32 %68) #14, !srcloc !421
  br label %if.end99.i

if.end99.i:                                       ; preds = %do.body90.i, %e1000_init_manageability.exit.if.end99.i_crit_edge
  %71 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %hw1.i30, align 4
  %add.ptr105.i = getelementptr i8, ptr %72, i32 1024
  %73 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr105.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !435
  tail call void @e1000_config_collision_dist(ptr noundef %hw1.i30) #14
  %txd_cmd.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 21
  %74 = ptrtoint ptr %tx_int_delay.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %tx_int_delay.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool.not.i33 = icmp eq i32 %75, 0
  %spec.store.select.i = select i1 %tobool.not.i33, i32 50331648, i32 -2097152000
  %76 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %77)
  %cmp115.i = icmp ult i32 %77, 3
  br i1 %cmp115.i, label %if.end123.thread.i, label %if.end123.i

if.end123.thread.i:                               ; preds = %if.end99.i
  call void @__sanitizer_cov_trace_pc() #16
  %or119.i = or i32 %spec.store.select.i, 268435456
  %78 = ptrtoint ptr %txd_cmd.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %or119.i, ptr %txd_cmd.i, align 8
  br label %e1000_configure_tx.exit

if.end123.i:                                      ; preds = %if.end99.i
  %or122.i = or i32 %spec.store.select.i, 134217728
  %79 = ptrtoint ptr %txd_cmd.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %or122.i, ptr %txd_cmd.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %77)
  %cmp125.i = icmp eq i32 %77, 4
  br i1 %cmp125.i, label %land.lhs.true.i, label %if.end123.i.e1000_configure_tx.exit_crit_edge

if.end123.i.e1000_configure_tx.exit_crit_edge:    ; preds = %if.end123.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_configure_tx.exit

land.lhs.true.i:                                  ; preds = %if.end123.i
  %bus_type.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 14
  %80 = ptrtoint ptr %bus_type.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %bus_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %81)
  %cmp127.i = icmp eq i32 %81, 2
  br i1 %cmp127.i, label %if.then129.i, label %land.lhs.true.i.e1000_configure_tx.exit_crit_edge

land.lhs.true.i.e1000_configure_tx.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_configure_tx.exit

if.then129.i:                                     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  %pcix_82544.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 34
  %82 = ptrtoint ptr %pcix_82544.i to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 1, ptr %pcix_82544.i, align 8
  br label %e1000_configure_tx.exit

e1000_configure_tx.exit:                          ; preds = %if.then129.i, %land.lhs.true.i.e1000_configure_tx.exit_crit_edge, %if.end123.i.e1000_configure_tx.exit_crit_edge, %if.end123.thread.i
  %83 = and i32 %73, 133234686
  %84 = or i32 %83, -134217727
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !436
  tail call void @arm_heavy_mb() #14
  %85 = ptrtoint ptr %hw1.i30 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %hw1.i30, align 4
  %add.ptr139.i = getelementptr i8, ptr %86, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr139.i, i32 %84) #14, !srcloc !421
  tail call fastcc void @e1000_setup_rctl(ptr noundef %adapter)
  tail call fastcc void @e1000_configure_rx(ptr noundef %adapter)
  %num_rx_queues = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 42
  %87 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %num_rx_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %88)
  %cmp34 = icmp sgt i32 %88, 0
  br i1 %cmp34, label %for.body.lr.ph, label %e1000_configure_tx.exit.for.end_crit_edge

e1000_configure_tx.exit.for.end_crit_edge:        ; preds = %e1000_configure_tx.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %e1000_configure_tx.exit
  %rx_ring = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  %alloc_rx_buf = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 38
  br label %for.body

for.body:                                         ; preds = %cond.end.for.body_crit_edge, %for.body.lr.ph
  %i.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cond.end.for.body_crit_edge ]
  %89 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %rx_ring, align 4
  %arrayidx = getelementptr %struct.e1000_rx_ring, ptr %90, i32 %i.035
  %91 = ptrtoint ptr %alloc_rx_buf to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %alloc_rx_buf, align 8
  %next_to_clean = getelementptr %struct.e1000_rx_ring, ptr %90, i32 %i.035, i32 5
  %93 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %next_to_clean, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !437
  %next_to_use = getelementptr %struct.e1000_rx_ring, ptr %90, i32 %i.035, i32 4
  %95 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %94, i32 %96)
  %cmp11 = icmp ugt i32 %94, %96
  br i1 %cmp11, label %for.body.cond.end_crit_edge, label %cond.false

for.body.cond.end_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.false:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %count = getelementptr %struct.e1000_rx_ring, ptr %90, i32 %i.035, i32 3
  %97 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %count, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %for.body.cond.end_crit_edge
  %cond = phi i32 [ %98, %cond.false ], [ 0, %for.body.cond.end_crit_edge ]
  %99 = xor i32 %96, -1
  %add = add i32 %94, %99
  %sub12 = add i32 %add, %cond
  tail call void %92(ptr noundef %adapter, ptr noundef %arrayidx, i32 noundef %sub12) #14
  %inc = add nuw nsw i32 %i.035, 1
  %100 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %num_rx_queues, align 4
  %cmp = icmp slt i32 %inc, %101
  br i1 %cmp, label %cond.end.for.body_crit_edge, label %cond.end.for.end_crit_edge

cond.end.for.end_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

cond.end.for.body_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %cond.end.for.end_crit_edge, %e1000_configure_tx.exit.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_enable(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_irq_enable(ptr nocapture noundef readonly %adapter) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  tail call void @arm_heavy_mb() #14
  %0 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 -1660944384) #14, !srcloc !421
  %2 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw1, align 4
  %add.ptr6 = getelementptr i8, ptr %3, i32 8
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_power_up_phy(ptr noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  %mii_reg = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_reg) #14
  %0 = ptrtoint ptr %mii_reg to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 0, ptr %mii_reg, align 2
  %media_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 6
  %1 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %call = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 0, ptr noundef nonnull %mii_reg) #14
  %3 = ptrtoint ptr %mii_reg to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %mii_reg, align 2
  %5 = and i16 %4, -2049
  store i16 %5, ptr %mii_reg, align 2
  %call3 = call i32 @e1000_write_phy_reg(ptr noundef %hw1, i32 noundef 0, i16 noundef zeroext %5) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_reg) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_read_phy_reg(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_write_phy_reg(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_down(ptr noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %netdev2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev2, align 8
  %2 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %3, i32 256
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !438
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !439
  tail call void @arm_heavy_mb() #14
  %5 = and i32 %4, -33554433
  %6 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw1, align 4
  %add.ptr8 = getelementptr i8, ptr %7, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8, i32 %5) #14, !srcloc !421
  tail call fastcc void @local_bh_disable() #14
  %8 = tail call i32 @llvm.read_register.i32(metadata !410) #14
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu1.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu1.i, align 4
  %tx_global_lock.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 108
  tail call void @_raw_spin_lock(ptr noundef %tx_global_lock.i) #14
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 104
  %12 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp13.not.i = icmp eq i32 %13, 0
  br i1 %cmp13.not.i, label %entry.netif_tx_disable.exit_crit_edge, label %for.body.lr.ph.i

entry.netif_tx_disable.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_tx_disable.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.014.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %14 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %_tx.i.i, align 128
  %_xmit_lock.i.i = getelementptr %struct.netdev_queue, ptr %15, i32 %i.014.i, i32 10
  tail call void @_raw_spin_lock(ptr noundef %_xmit_lock.i.i) #14
  %xmit_lock_owner.i.i = getelementptr %struct.netdev_queue, ptr %15, i32 %i.014.i, i32 11
  %16 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile i32 %11, ptr %xmit_lock_owner.i.i, align 4
  %state.i.i = getelementptr %struct.netdev_queue, ptr %15, i32 %i.014.i, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  %17 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 -1, ptr %xmit_lock_owner.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i.i) #14
  %inc.i = add nuw i32 %i.014.i, 1
  %18 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %19
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.netif_tx_disable.exit_crit_edge

for.body.i.netif_tx_disable.exit_crit_edge:       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_tx_disable.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

netif_tx_disable.exit:                            ; preds = %for.body.i.netif_tx_disable.exit_crit_edge, %entry.netif_tx_disable.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %tx_global_lock.i) #14
  tail call fastcc void @local_bh_enable() #14
  %20 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hw1, align 4
  %add.ptr15 = getelementptr i8, ptr %21, i32 1024
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !440
  %23 = and i32 %22, -33554433
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !441
  tail call void @arm_heavy_mb() #14
  %24 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw1, align 4
  %add.ptr27 = getelementptr i8, ptr %25, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr27, i32 %23) #14, !srcloc !421
  %26 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hw1, align 4
  %add.ptr34 = getelementptr i8, ptr %27, i32 8
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr34) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !442
  tail call void @msleep(i32 noundef 10) #14
  tail call void @netif_carrier_off(ptr noundef %1) #14
  %napi = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 40
  tail call void @napi_disable(ptr noundef %napi) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !443
  tail call void @arm_heavy_mb() #14
  %29 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hw1, align 4
  %add.ptr.i = getelementptr i8, ptr %30, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 -1) #14, !srcloc !421
  %31 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %hw1, align 4
  %add.ptr6.i = getelementptr i8, ptr %32, i32 8
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !444
  %pdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %34 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pdev.i, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 46
  %36 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %irq.i, align 4
  tail call void @synchronize_irq(i32 noundef %37) #14
  %flags.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 64
  tail call void @_set_bit(i32 noundef 2, ptr noundef %flags.i) #14
  %watchdog_task.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 70
  %call.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %watchdog_task.i) #14
  %phy_info_task.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 72
  %call1.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %phy_info_task.i) #14
  %fifo_stall_task.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 71
  %call2.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %fifo_stall_task.i) #14
  %38 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %flags.i, align 4
  %40 = and i32 %39, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i = icmp eq i32 %40, 0
  br i1 %tobool.not.i, label %if.then.i, label %netif_tx_disable.exit.e1000_down_and_stop.exit_crit_edge

netif_tx_disable.exit.e1000_down_and_stop.exit_crit_edge: ; preds = %netif_tx_disable.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_down_and_stop.exit

if.then.i:                                        ; preds = %netif_tx_disable.exit
  call void @__sanitizer_cov_trace_pc() #16
  %reset_task.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 69
  %call5.i = tail call zeroext i1 @cancel_work_sync(ptr noundef %reset_task.i) #14
  br label %e1000_down_and_stop.exit

e1000_down_and_stop.exit:                         ; preds = %if.then.i, %netif_tx_disable.exit.e1000_down_and_stop.exit_crit_edge
  %link_speed = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 7
  %41 = ptrtoint ptr %link_speed to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 0, ptr %link_speed, align 8
  %link_duplex = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 8
  %42 = ptrtoint ptr %link_duplex to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 0, ptr %link_duplex, align 2
  tail call void @e1000_reset(ptr noundef %adapter)
  %num_tx_queues.i58 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 41
  %43 = ptrtoint ptr %num_tx_queues.i58 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %num_tx_queues.i58, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %cmp5.i = icmp sgt i32 %44, 0
  br i1 %cmp5.i, label %for.body.lr.ph.i59, label %e1000_down_and_stop.exit.e1000_clean_all_tx_rings.exit_crit_edge

e1000_down_and_stop.exit.e1000_clean_all_tx_rings.exit_crit_edge: ; preds = %e1000_down_and_stop.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_clean_all_tx_rings.exit

for.body.lr.ph.i59:                               ; preds = %e1000_down_and_stop.exit
  %tx_ring.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 19
  br label %for.body.i62

for.body.i62:                                     ; preds = %for.body.i62.for.body.i62_crit_edge, %for.body.lr.ph.i59
  %i.06.i = phi i32 [ 0, %for.body.lr.ph.i59 ], [ %inc.i60, %for.body.i62.for.body.i62_crit_edge ]
  %45 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %tx_ring.i, align 8
  %arrayidx.i = getelementptr %struct.e1000_tx_ring, ptr %46, i32 %i.06.i
  tail call fastcc void @e1000_clean_tx_ring(ptr noundef %adapter, ptr noundef %arrayidx.i) #14
  %inc.i60 = add nuw nsw i32 %i.06.i, 1
  %47 = ptrtoint ptr %num_tx_queues.i58 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %num_tx_queues.i58, align 8
  %cmp.i61 = icmp slt i32 %inc.i60, %48
  br i1 %cmp.i61, label %for.body.i62.for.body.i62_crit_edge, label %for.body.i62.e1000_clean_all_tx_rings.exit_crit_edge

for.body.i62.e1000_clean_all_tx_rings.exit_crit_edge: ; preds = %for.body.i62
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_clean_all_tx_rings.exit

for.body.i62.for.body.i62_crit_edge:              ; preds = %for.body.i62
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i62

e1000_clean_all_tx_rings.exit:                    ; preds = %for.body.i62.e1000_clean_all_tx_rings.exit_crit_edge, %e1000_down_and_stop.exit.e1000_clean_all_tx_rings.exit_crit_edge
  %num_rx_queues.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 42
  %49 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %num_rx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %cmp5.i63 = icmp sgt i32 %50, 0
  br i1 %cmp5.i63, label %for.body.lr.ph.i64, label %e1000_clean_all_tx_rings.exit.e1000_clean_all_rx_rings.exit_crit_edge

e1000_clean_all_tx_rings.exit.e1000_clean_all_rx_rings.exit_crit_edge: ; preds = %e1000_clean_all_tx_rings.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_clean_all_rx_rings.exit

for.body.lr.ph.i64:                               ; preds = %e1000_clean_all_tx_rings.exit
  %rx_ring.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  br label %for.body.i69

for.body.i69:                                     ; preds = %for.body.i69.for.body.i69_crit_edge, %for.body.lr.ph.i64
  %i.06.i65 = phi i32 [ 0, %for.body.lr.ph.i64 ], [ %inc.i67, %for.body.i69.for.body.i69_crit_edge ]
  %51 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i66 = getelementptr %struct.e1000_rx_ring, ptr %52, i32 %i.06.i65
  tail call fastcc void @e1000_clean_rx_ring(ptr noundef %adapter, ptr noundef %arrayidx.i66) #14
  %inc.i67 = add nuw nsw i32 %i.06.i65, 1
  %53 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %num_rx_queues.i, align 4
  %cmp.i68 = icmp slt i32 %inc.i67, %54
  br i1 %cmp.i68, label %for.body.i69.for.body.i69_crit_edge, label %for.body.i69.e1000_clean_all_rx_rings.exit_crit_edge

for.body.i69.e1000_clean_all_rx_rings.exit_crit_edge: ; preds = %for.body.i69
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_clean_all_rx_rings.exit

for.body.i69.for.body.i69_crit_edge:              ; preds = %for.body.i69
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i69

e1000_clean_all_rx_rings.exit:                    ; preds = %for.body.i69.e1000_clean_all_rx_rings.exit_crit_edge, %e1000_clean_all_tx_rings.exit.e1000_clean_all_rx_rings.exit_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_disable(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_reset(ptr noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %mac_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.213)
  switch i32 %1, label %entry.if.else_crit_edge [
    i32 1, label %entry.if.then.thread_crit_edge
    i32 2, label %entry.if.then.thread_crit_edge216
    i32 3, label %entry.if.then.thread_crit_edge217
    i32 4, label %entry.if.then.thread_crit_edge218
    i32 5, label %entry.if.then.thread_crit_edge219
    i32 11, label %entry.if.then.thread_crit_edge220
    i32 12, label %entry.if.then.thread_crit_edge221
    i32 6, label %entry.sw.bb2_crit_edge
    i32 7, label %entry.sw.bb2_crit_edge222
    i32 8, label %entry.sw.bb2_crit_edge223
    i32 9, label %entry.sw.bb2_crit_edge224
    i32 10, label %entry.sw.bb2_crit_edge225
    i32 13, label %entry.if.then_crit_edge
    i32 14, label %entry.if.then_crit_edge226
  ]

entry.if.then_crit_edge226:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.sw.bb2_crit_edge225:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb2

entry.sw.bb2_crit_edge224:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb2

entry.sw.bb2_crit_edge223:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb2

entry.sw.bb2_crit_edge222:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb2

entry.sw.bb2_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb2

entry.if.then.thread_crit_edge221:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.thread

entry.if.then.thread_crit_edge220:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.thread

entry.if.then.thread_crit_edge219:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.thread

entry.if.then.thread_crit_edge218:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.thread

entry.if.then.thread_crit_edge217:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.thread

entry.if.then.thread_crit_edge216:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.thread

entry.if.then.thread_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.thread

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then.thread:                                   ; preds = %entry.if.then.thread_crit_edge, %entry.if.then.thread_crit_edge216, %entry.if.then.thread_crit_edge217, %entry.if.then.thread_crit_edge218, %entry.if.then.thread_crit_edge219, %entry.if.then.thread_crit_edge220, %entry.if.then.thread_crit_edge221
  %max_frame_size211 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 28
  %3 = ptrtoint ptr %max_frame_size211 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_frame_size211, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8192, i32 %4)
  %cmp212 = icmp ugt i32 %4, 8192
  %spec.select214 = select i1 %cmp212, i32 40, i32 48
  br label %do.body48

sw.bb2:                                           ; preds = %entry.sw.bb2_crit_edge, %entry.sw.bb2_crit_edge222, %entry.sw.bb2_crit_edge223, %entry.sw.bb2_crit_edge224, %entry.sw.bb2_crit_edge225
  br label %if.else

if.then:                                          ; preds = %entry.if.then_crit_edge, %entry.if.then_crit_edge226
  %max_frame_size = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 28
  %5 = ptrtoint ptr %max_frame_size to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_frame_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8192, i32 %6)
  %cmp = icmp ugt i32 %6, 8192
  %spec.select = select i1 %cmp, i32 22, i32 30
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %1)
  %cmp7 = icmp eq i32 %1, 13
  br i1 %cmp7, label %if.then8, label %if.then.do.body48_crit_edge

if.then.do.body48_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body48

if.then8:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %tx_fifo_head = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 29
  %7 = ptrtoint ptr %tx_fifo_head to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %tx_fifo_head, align 4
  %shl = shl nuw nsw i32 %spec.select, 7
  %tx_head_addr = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 30
  %8 = ptrtoint ptr %tx_head_addr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %shl, ptr %tx_head_addr, align 8
  %.neg = mul nsw i32 %spec.select, -1024
  %shl10 = add nsw i32 %.neg, 40960
  %tx_fifo_size = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 31
  %9 = ptrtoint ptr %tx_fifo_size to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %shl10, ptr %tx_fifo_size, align 4
  %tx_fifo_stall = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 33
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %tx_fifo_stall, i32 noundef 4) #14
  %10 = ptrtoint ptr %tx_fifo_stall to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile i32 0, ptr %tx_fifo_stall, align 4
  br label %do.body48

if.else:                                          ; preds = %sw.bb2, %entry.if.else_crit_edge
  %pba.0 = phi i32 [ 0, %entry.if.else_crit_edge ], [ 48, %sw.bb2 ]
  %max_frame_size12 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 28
  %11 = ptrtoint ptr %max_frame_size12 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %max_frame_size12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1518, i32 %12)
  %cmp13 = icmp ugt i32 %12, 1518
  br i1 %cmp13, label %do.body, label %if.else.do.body48_crit_edge

if.else.do.body48_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body48

do.body:                                          ; preds = %if.else
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !445
  tail call void @arm_heavy_mb() #14
  %13 = shl nuw nsw i32 %pba.0, 24
  %14 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %15, i32 4096
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %13) #14, !srcloc !421
  %16 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw1, align 4
  %add.ptr21 = getelementptr i8, ptr %17, i32 4096
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr21) #14, !srcloc !422
  %19 = tail call i32 @llvm.bswap.i32(i32 %18)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !446
  %shr = lshr i32 %19, 16
  %and = and i32 %19, 65535
  %20 = ptrtoint ptr %max_frame_size12 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %max_frame_size12, align 4
  %sub24 = shl i32 %21, 1
  %add25 = add i32 %sub24, 1047
  %shr27 = lshr i32 %add25, 10
  %add29 = add i32 %21, 1023
  %shr31 = lshr i32 %add29, 10
  call void @__sanitizer_cov_trace_cmp4(i32 %shr27, i32 %shr)
  %cmp32 = icmp ugt i32 %shr27, %shr
  br i1 %cmp32, label %land.lhs.true, label %do.body.do.body48_crit_edge

do.body.do.body48_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body48

land.lhs.true:                                    ; preds = %do.body
  %sub33 = sub nsw i32 %shr27, %shr
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %sub33)
  %cmp34 = icmp ugt i32 %and, %sub33
  br i1 %cmp34, label %if.then35, label %land.lhs.true.do.body48_crit_edge

land.lhs.true.do.body48_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body48

if.then35:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %sub37 = sub nsw i32 %and, %sub33
  %22 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %mac_type, align 4
  %.off = add i32 %23, -6
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %.off)
  %switch = icmp ult i32 %.off, 5
  %and40 = and i32 %sub37, -8
  %spec.select205 = select i1 %switch, i32 %and40, i32 %sub37
  %24 = tail call i32 @llvm.umax.i32(i32 %spec.select205, i32 %shr31)
  br label %do.body48

do.body48:                                        ; preds = %if.then35, %land.lhs.true.do.body48_crit_edge, %do.body.do.body48_crit_edge, %if.else.do.body48_crit_edge, %if.then8, %if.then.do.body48_crit_edge, %if.then.thread
  %pba.3 = phi i32 [ %spec.select, %if.then8 ], [ %spec.select, %if.then.do.body48_crit_edge ], [ %and, %land.lhs.true.do.body48_crit_edge ], [ %and, %do.body.do.body48_crit_edge ], [ %pba.0, %if.else.do.body48_crit_edge ], [ %24, %if.then35 ], [ %spec.select214, %if.then.thread ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !447
  tail call void @arm_heavy_mb() #14
  %25 = tail call i32 @llvm.bswap.i32(i32 %pba.3)
  %26 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hw1, align 4
  %add.ptr55 = getelementptr i8, ptr %27, i32 4096
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr55, i32 %25) #14, !srcloc !421
  %shl56 = shl i32 %pba.3, 10
  %mul57 = mul i32 %pba.3, 9216
  %div = udiv i32 %mul57, 10
  %max_frame_size59 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 28
  %28 = ptrtoint ptr %max_frame_size59 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %max_frame_size59, align 4
  %sub60 = sub i32 %shl56, %29
  %30 = tail call i32 @llvm.umin.i32(i32 %div, i32 %sub60)
  %31 = trunc i32 %30 to i16
  %conv66 = and i16 %31, -8
  %fc_high_water = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 42
  %32 = ptrtoint ptr %fc_high_water to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %conv66, ptr %fc_high_water, align 2
  %sub69 = add i16 %conv66, -8
  %fc_low_water = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 43
  %33 = ptrtoint ptr %fc_low_water to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %sub69, ptr %fc_low_water, align 4
  %fc_pause_time = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 44
  %34 = ptrtoint ptr %fc_pause_time to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 -1, ptr %fc_pause_time, align 2
  %fc_send_xon = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 73
  %35 = ptrtoint ptr %fc_send_xon to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 1, ptr %fc_send_xon, align 1
  %original_fc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 25
  %36 = ptrtoint ptr %original_fc to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %original_fc, align 4
  %fc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 11
  %38 = ptrtoint ptr %fc to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %fc, align 4
  %call71 = tail call i32 @e1000_reset_hw(ptr noundef %hw1) #14
  %39 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %40)
  %cmp73 = icmp ugt i32 %40, 3
  br i1 %cmp73, label %do.body76, label %do.body48.if.end85_crit_edge

do.body48.if.end85_crit_edge:                     ; preds = %do.body48
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end85

do.body76:                                        ; preds = %do.body48
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !448
  tail call void @arm_heavy_mb() #14
  %41 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %hw1, align 4
  %add.ptr84 = getelementptr i8, ptr %42, i32 22528
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr84, i32 0) #14, !srcloc !421
  br label %if.end85

if.end85:                                         ; preds = %do.body76, %do.body48.if.end85_crit_edge
  %call86 = tail call i32 @e1000_init_hw(ptr noundef %hw1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86)
  %tobool87.not = icmp eq i32 %call86, 0
  br i1 %tobool87.not, label %if.end85.if.end92_crit_edge, label %do.end91

if.end85.if.end92_crit_edge:                      ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end92

do.end91:                                         ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #16
  %pdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %43 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %44, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str) #17
  br label %if.end92

if.end92:                                         ; preds = %do.end91, %if.end85.if.end92_crit_edge
  tail call fastcc void @e1000_update_mng_vlan(ptr noundef %adapter)
  %45 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %46)
  %cmp94 = icmp ugt i32 %46, 3
  br i1 %cmp94, label %land.lhs.true96, label %if.end92.do.body127_crit_edge

if.end92.do.body127_crit_edge:                    ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body127

land.lhs.true96:                                  ; preds = %if.end92
  %autoneg = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 55
  %47 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %autoneg, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %48)
  %cmp98 = icmp eq i8 %48, 1
  br i1 %cmp98, label %land.lhs.true100, label %land.lhs.true96.do.body127_crit_edge

land.lhs.true96.do.body127_crit_edge:             ; preds = %land.lhs.true96
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body127

land.lhs.true100:                                 ; preds = %land.lhs.true96
  %autoneg_advertised = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 40
  %49 = ptrtoint ptr %autoneg_advertised to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %autoneg_advertised, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 32, i16 %50)
  %cmp102 = icmp eq i16 %50, 32
  br i1 %cmp102, label %if.then104, label %land.lhs.true100.do.body127_crit_edge

land.lhs.true100.do.body127_crit_edge:            ; preds = %land.lhs.true100
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body127

if.then104:                                       ; preds = %land.lhs.true100
  call void @__sanitizer_cov_trace_pc() #16
  %51 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %hw1, align 4
  %53 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %52) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !449
  %54 = and i32 %53, -8193
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !450
  tail call void @arm_heavy_mb() #14
  %55 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %hw1, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %56, i32 %54) #14, !srcloc !421
  br label %do.body127

do.body127:                                       ; preds = %if.then104, %land.lhs.true100.do.body127_crit_edge, %land.lhs.true96.do.body127_crit_edge, %if.end92.do.body127_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !451
  tail call void @arm_heavy_mb() #14
  %57 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %hw1, align 4
  %add.ptr135 = getelementptr i8, ptr %58, i32 56
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr135, i32 8454144) #14, !srcloc !421
  tail call void @e1000_reset_adaptive(ptr noundef %hw1) #14
  %phy_info = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 55
  %call136 = tail call i32 @e1000_phy_get_info(ptr noundef %hw1, ptr noundef %phy_info) #14
  %en_mng_pt.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 6
  %59 = ptrtoint ptr %en_mng_pt.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %en_mng_pt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.not.i = icmp eq i32 %60, 0
  br i1 %tobool.not.i, label %do.body127.e1000_release_manageability.exit_crit_edge, label %if.then.i

do.body127.e1000_release_manageability.exit_crit_edge: ; preds = %do.body127
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_release_manageability.exit

if.then.i:                                        ; preds = %do.body127
  call void @__sanitizer_cov_trace_pc() #16
  %61 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %hw1, align 4
  %add.ptr.i = getelementptr i8, ptr %62, i32 22560
  %63 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !452
  %64 = or i32 %63, 2097152
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !453
  tail call void @arm_heavy_mb() #14
  %65 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %hw1, align 4
  %add.ptr7.i = getelementptr i8, ptr %66, i32 22560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7.i, i32 %64) #14, !srcloc !421
  br label %e1000_release_manageability.exit

e1000_release_manageability.exit:                 ; preds = %if.then.i, %do.body127.e1000_release_manageability.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_reinit_locked(ptr noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 64
  %call10 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %flags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool.not11 = icmp eq i32 %call10, 0
  br i1 %tobool.not11, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  tail call void @msleep(i32 noundef 1) #14
  %call = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %flags) #14
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool3.not = icmp eq i32 %2, 0
  br i1 %tobool3.not, label %if.then, label %while.end.if.end_crit_edge

while.end.if.end_crit_edge:                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_down(ptr noundef %adapter)
  %hw1.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  tail call fastcc void @e1000_configure(ptr noundef %adapter) #14
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %flags) #14
  %napi.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 40
  tail call void @napi_enable(ptr noundef %napi.i) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  tail call void @arm_heavy_mb() #14
  %3 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %4, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 -1660944384) #14, !srcloc !421
  %5 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hw1.i, align 4
  %add.ptr6.i.i = getelementptr i8, ptr %6, i32 8
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  %netdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %8 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %netdev.i, align 8
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 103
  %10 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %_tx.i.i.i, align 128
  tail call void @netif_tx_wake_queue(ptr noundef %11) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !424
  tail call void @arm_heavy_mb() #14
  %12 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 200
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 67108864) #14, !srcloc !421
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end.if.end_crit_edge
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %flags) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_reset_hw(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_init_hw(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_update_mng_vlan(ptr noundef %adapter) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev2, align 8
  %vlan_id = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 38, i32 1
  %2 = ptrtoint ptr %vlan_id to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vlan_id, align 4
  %mng_vlan_id = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 1
  %4 = ptrtoint ptr %mng_vlan_id to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %mng_vlan_id, align 8
  %call.i = tail call i32 @_find_next_bit_be(ptr noundef %adapter, i32 noundef 4096, i32 noundef 0) #14
  %conv1.i = and i32 %call.i, 61440
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv1.i)
  %cmp.i = icmp eq i32 %conv1.i, 0
  br i1 %cmp.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = zext i16 %3 to i32
  %div3.i = lshr i32 %conv, 5
  %arrayidx.i = getelementptr i32, ptr %adapter, i32 %div3.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %conv, 31
  %8 = shl nuw i32 1, %and.i
  %9 = and i32 %7, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %if.then4, label %if.else28

if.then4:                                         ; preds = %if.end
  %status = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 38, i32 3
  %10 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %status, align 1
  %12 = and i8 %11, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool7.not = icmp eq i8 %12, 0
  br i1 %tobool7.not, label %if.then4.if.end12_crit_edge, label %if.then8

if.then4.if.end12_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then8:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #16
  %call9 = tail call i32 @e1000_vlan_rx_add_vid(ptr noundef %1, i16 noundef zeroext -32512, i16 noundef zeroext %3)
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.then4.if.end12_crit_edge
  %storemerge = phi i16 [ %3, %if.then8 ], [ -1, %if.then4.if.end12_crit_edge ]
  %13 = ptrtoint ptr %mng_vlan_id to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %storemerge, ptr %mng_vlan_id, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %5)
  %cmp.not = icmp eq i16 %5, -1
  call void @__sanitizer_cov_trace_cmp2(i16 %3, i16 %5)
  %cmp17.not = icmp eq i16 %3, %5
  %or.cond = select i1 %cmp.not, i1 true, i1 %cmp17.not
  br i1 %or.cond, label %if.end12.cleanup_crit_edge, label %land.lhs.true19

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true19:                                  ; preds = %if.end12
  %conv13 = zext i16 %5 to i32
  %div3.i51 = lshr i32 %conv13, 5
  %arrayidx.i52 = getelementptr i32, ptr %adapter, i32 %div3.i51
  %14 = ptrtoint ptr %arrayidx.i52 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %arrayidx.i52, align 4
  %and.i53 = and i32 %conv13, 31
  %16 = shl nuw i32 1, %and.i53
  %17 = and i32 %15, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool24.not = icmp eq i32 %17, 0
  br i1 %tobool24.not, label %if.then25, label %land.lhs.true19.cleanup_crit_edge

land.lhs.true19.cleanup_crit_edge:                ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then25:                                        ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #16
  %call26 = tail call i32 @e1000_vlan_rx_kill_vid(ptr noundef %1, i16 noundef zeroext -32512, i16 noundef zeroext %5)
  br label %cleanup

if.else28:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %mng_vlan_id to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %3, ptr %mng_vlan_id, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.else28, %if.then25, %land.lhs.true19.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_reset_adaptive(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_phy_get_info(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_open(ptr noundef %netdev) #4 align 64 {
entry:
  %mii_reg.i46 = alloca i16, align 2
  %mii_reg.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1 = getelementptr i8, ptr %netdev, i32 3296
  %flags = getelementptr i8, ptr %netdev, i32 4240
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags, align 4
  %and1.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @netif_carrier_off(ptr noundef %netdev) #14
  %call3 = tail call i32 @e1000_setup_all_tx_resources(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.err_setup_tx_crit_edge

if.end.err_setup_tx_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_setup_tx

if.end6:                                          ; preds = %if.end
  %call7 = tail call i32 @e1000_setup_all_rx_resources(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end10, label %if.end6.err_setup_rx_crit_edge

if.end6.err_setup_rx_crit_edge:                   ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_setup_rx

if.end10:                                         ; preds = %if.end6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_reg.i) #14
  %2 = ptrtoint ptr %mii_reg.i to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 0, ptr %mii_reg.i, align 2
  %media_type.i = getelementptr i8, ptr %netdev, i32 3320
  %3 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.i = icmp eq i32 %4, 0
  br i1 %cmp.i, label %if.then.i, label %if.end10.e1000_power_up_phy.exit_crit_edge

if.end10.e1000_power_up_phy.exit_crit_edge:       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_power_up_phy.exit

if.then.i:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 0, ptr noundef nonnull %mii_reg.i) #14
  %5 = ptrtoint ptr %mii_reg.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %mii_reg.i, align 2
  %7 = and i16 %6, -2049
  store i16 %7, ptr %mii_reg.i, align 2
  %call3.i = call i32 @e1000_write_phy_reg(ptr noundef %hw1, i32 noundef 0, i16 noundef zeroext %7) #14
  br label %e1000_power_up_phy.exit

e1000_power_up_phy.exit:                          ; preds = %if.then.i, %if.end10.e1000_power_up_phy.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_reg.i) #14
  %mng_vlan_id = getelementptr i8, ptr %netdev, i32 2816
  %8 = ptrtoint ptr %mng_vlan_id to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %mng_vlan_id, align 8
  %status = getelementptr i8, ptr %netdev, i32 3467
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %status, align 1
  %11 = and i8 %10, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool11.not = icmp eq i8 %11, 0
  br i1 %tobool11.not, label %e1000_power_up_phy.exit.if.end13_crit_edge, label %if.then12

e1000_power_up_phy.exit.if.end13_crit_edge:       ; preds = %e1000_power_up_phy.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.then12:                                        ; preds = %e1000_power_up_phy.exit
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @e1000_update_mng_vlan(ptr noundef %add.ptr.i)
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %e1000_power_up_phy.exit.if.end13_crit_edge
  call fastcc void @e1000_configure(ptr noundef %add.ptr.i)
  %netdev1.i = getelementptr i8, ptr %netdev, i32 3288
  %12 = ptrtoint ptr %netdev1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %netdev1.i, align 8
  %pdev.i = getelementptr i8, ptr %netdev, i32 3292
  %14 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pdev.i, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 46
  %16 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %irq.i, align 4
  %call.i.i = call i32 @request_threaded_irq(i32 noundef %17, ptr noundef nonnull @e1000_intr, ptr noundef null, i32 noundef 128, ptr noundef %13, ptr noundef %13) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end17, label %do.body.i

do.body.i:                                        ; preds = %if.end13
  %msg_enable.i = getelementptr i8, ptr %netdev, i32 4232
  %18 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %msg_enable.i, align 8
  %and.i = and i32 %19, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %do.body.i.err_req_irq_crit_edge, label %if.then3.i

do.body.i.err_req_irq_crit_edge:                  ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_req_irq

if.then3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %20 = ptrtoint ptr %netdev1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %netdev1.i, align 8
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %21, ptr noundef nonnull @.str.208, i32 noundef %call.i.i) #17
  br label %err_req_irq

if.end17:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  call void @_clear_bit(i32 noundef 2, ptr noundef %flags) #14
  %napi = getelementptr i8, ptr %netdev, i32 3008
  call void @napi_enable(ptr noundef %napi) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  call void @arm_heavy_mb() #14
  %22 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw1, align 4
  %add.ptr.i45 = getelementptr i8, ptr %23, i32 208
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i45, i32 -1660944384) #14, !srcloc !421
  %24 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw1, align 4
  %add.ptr6.i = getelementptr i8, ptr %25, i32 8
  %26 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i) #14, !srcloc !422
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 103
  %27 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr inbounds %struct.netdev_queue, ptr %28, i32 0, i32 13
  call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !454
  call void @arm_heavy_mb() #14
  %29 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %30, i32 200
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 67108864) #14, !srcloc !421
  br label %cleanup

err_req_irq:                                      ; preds = %if.then3.i, %do.body.i.err_req_irq_crit_edge
  %wol.i = getelementptr i8, ptr %netdev, i32 2828
  %31 = ptrtoint ptr %wol.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %wol.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i48 = icmp eq i32 %32, 0
  br i1 %tobool.not.i48, label %land.lhs.true.i, label %err_req_irq.e1000_power_down_phy.exit_crit_edge

err_req_irq.e1000_power_down_phy.exit_crit_edge:  ; preds = %err_req_irq
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_power_down_phy.exit

land.lhs.true.i:                                  ; preds = %err_req_irq
  %mac_type.i = getelementptr i8, ptr %netdev, i32 3308
  %33 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %34)
  %cmp.i49 = icmp ugt i32 %34, 4
  br i1 %cmp.i49, label %land.lhs.true2.i, label %land.lhs.true.i.e1000_power_down_phy.exit_crit_edge

land.lhs.true.i.e1000_power_down_phy.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_power_down_phy.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %35 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp3.i = icmp eq i32 %36, 0
  br i1 %cmp3.i, label %if.then.i51, label %land.lhs.true2.i.e1000_power_down_phy.exit_crit_edge

land.lhs.true2.i.e1000_power_down_phy.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_power_down_phy.exit

if.then.i51:                                      ; preds = %land.lhs.true2.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_reg.i46) #14
  %37 = ptrtoint ptr %mii_reg.i46 to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 0, ptr %mii_reg.i46, align 2
  %.off.i = add i32 %34, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 10
  br i1 %switch.i, label %sw.bb.i, label %if.then.i51.cleanup.i_crit_edge

if.then.i51.cleanup.i_crit_edge:                  ; preds = %if.then.i51
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

sw.bb.i:                                          ; preds = %if.then.i51
  %38 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hw1, align 4
  %add.ptr.i52 = getelementptr i8, ptr %39, i32 22560
  %40 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i52) #14, !srcloc !422
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !455
  %41 = and i32 %40, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool8.not.i = icmp eq i32 %41, 0
  br i1 %tobool8.not.i, label %sw.epilog.i, label %sw.bb.i.cleanup.i_crit_edge

sw.bb.i.cleanup.i_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

sw.epilog.i:                                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  %call10.i = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 0, ptr noundef nonnull %mii_reg.i46) #14
  %42 = ptrtoint ptr %mii_reg.i46 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %mii_reg.i46, align 2
  %44 = or i16 %43, 2048
  store i16 %44, ptr %mii_reg.i46, align 2
  %call12.i = call i32 @e1000_write_phy_reg(ptr noundef %hw1, i32 noundef 0, i16 noundef zeroext %44) #14
  call void @msleep(i32 noundef 1) #14
  br label %cleanup.i

cleanup.i:                                        ; preds = %sw.epilog.i, %sw.bb.i.cleanup.i_crit_edge, %if.then.i51.cleanup.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_reg.i46) #14
  br label %e1000_power_down_phy.exit

e1000_power_down_phy.exit:                        ; preds = %cleanup.i, %land.lhs.true2.i.e1000_power_down_phy.exit_crit_edge, %land.lhs.true.i.e1000_power_down_phy.exit_crit_edge, %err_req_irq.e1000_power_down_phy.exit_crit_edge
  %num_rx_queues.i = getelementptr i8, ptr %netdev, i32 3236
  %45 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %num_rx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp5.i = icmp sgt i32 %46, 0
  br i1 %cmp5.i, label %for.body.lr.ph.i, label %e1000_power_down_phy.exit.err_setup_rx_crit_edge

e1000_power_down_phy.exit.err_setup_rx_crit_edge: ; preds = %e1000_power_down_phy.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_setup_rx

for.body.lr.ph.i:                                 ; preds = %e1000_power_down_phy.exit
  %rx_ring.i = getelementptr i8, ptr %netdev, i32 3004
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.06.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %47 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.e1000_rx_ring, ptr %48, i32 %i.06.i
  %49 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %pdev.i, align 4
  call fastcc void @e1000_clean_rx_ring(ptr noundef %add.ptr.i, ptr noundef %arrayidx.i) #14
  %buffer_info.i.i = getelementptr %struct.e1000_rx_ring, ptr %48, i32 %i.06.i, i32 6
  %51 = ptrtoint ptr %buffer_info.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %buffer_info.i.i, align 4
  call void @vfree(ptr noundef %52) #14
  %53 = ptrtoint ptr %buffer_info.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %buffer_info.i.i, align 4
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %50, i32 0, i32 44
  %size.i.i = getelementptr %struct.e1000_rx_ring, ptr %48, i32 %i.06.i, i32 2
  %54 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %size.i.i, align 4
  %56 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx.i, align 4
  %dma.i.i = getelementptr %struct.e1000_rx_ring, ptr %48, i32 %i.06.i, i32 1
  %58 = ptrtoint ptr %dma.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %dma.i.i, align 4
  call void @dma_free_attrs(ptr noundef %dev.i.i, i32 noundef %55, ptr noundef %57, i32 noundef %59, i32 noundef 0) #14
  %60 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr null, ptr %arrayidx.i, align 4
  %inc.i = add nuw nsw i32 %i.06.i, 1
  %61 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %num_rx_queues.i, align 4
  %cmp.i53 = icmp slt i32 %inc.i, %62
  br i1 %cmp.i53, label %for.body.i.for.body.i_crit_edge, label %for.body.i.err_setup_rx_crit_edge

for.body.i.err_setup_rx_crit_edge:                ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_setup_rx

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

err_setup_rx:                                     ; preds = %for.body.i.err_setup_rx_crit_edge, %e1000_power_down_phy.exit.err_setup_rx_crit_edge, %if.end6.err_setup_rx_crit_edge
  %err.0 = phi i32 [ %call7, %if.end6.err_setup_rx_crit_edge ], [ %call.i.i, %e1000_power_down_phy.exit.err_setup_rx_crit_edge ], [ %call.i.i, %for.body.i.err_setup_rx_crit_edge ]
  %num_tx_queues.i = getelementptr i8, ptr %netdev, i32 3232
  %63 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %num_tx_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %cmp5.i54 = icmp sgt i32 %64, 0
  br i1 %cmp5.i54, label %for.body.lr.ph.i56, label %err_setup_rx.err_setup_tx_crit_edge

err_setup_rx.err_setup_tx_crit_edge:              ; preds = %err_setup_rx
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_setup_tx

for.body.lr.ph.i56:                               ; preds = %err_setup_rx
  %tx_ring.i = getelementptr i8, ptr %netdev, i32 2920
  %pdev1.i.i55 = getelementptr i8, ptr %netdev, i32 3292
  br label %for.body.i65

for.body.i65:                                     ; preds = %for.body.i65.for.body.i65_crit_edge, %for.body.lr.ph.i56
  %i.06.i57 = phi i32 [ 0, %for.body.lr.ph.i56 ], [ %inc.i63, %for.body.i65.for.body.i65_crit_edge ]
  %65 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %tx_ring.i, align 8
  %arrayidx.i58 = getelementptr %struct.e1000_tx_ring, ptr %66, i32 %i.06.i57
  %67 = ptrtoint ptr %pdev1.i.i55 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %pdev1.i.i55, align 4
  call fastcc void @e1000_clean_tx_ring(ptr noundef %add.ptr.i, ptr noundef %arrayidx.i58) #14
  %buffer_info.i.i59 = getelementptr %struct.e1000_tx_ring, ptr %66, i32 %i.06.i57, i32 6
  %69 = ptrtoint ptr %buffer_info.i.i59 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %buffer_info.i.i59, align 4
  call void @vfree(ptr noundef %70) #14
  %71 = ptrtoint ptr %buffer_info.i.i59 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr null, ptr %buffer_info.i.i59, align 4
  %dev.i.i60 = getelementptr inbounds %struct.pci_dev, ptr %68, i32 0, i32 44
  %size.i.i61 = getelementptr %struct.e1000_tx_ring, ptr %66, i32 %i.06.i57, i32 2
  %72 = ptrtoint ptr %size.i.i61 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %size.i.i61, align 4
  %74 = ptrtoint ptr %arrayidx.i58 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %arrayidx.i58, align 4
  %dma.i.i62 = getelementptr %struct.e1000_tx_ring, ptr %66, i32 %i.06.i57, i32 1
  %76 = ptrtoint ptr %dma.i.i62 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %dma.i.i62, align 4
  call void @dma_free_attrs(ptr noundef %dev.i.i60, i32 noundef %73, ptr noundef %75, i32 noundef %77, i32 noundef 0) #14
  %78 = ptrtoint ptr %arrayidx.i58 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr null, ptr %arrayidx.i58, align 4
  %inc.i63 = add nuw nsw i32 %i.06.i57, 1
  %79 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %num_tx_queues.i, align 8
  %cmp.i64 = icmp slt i32 %inc.i63, %80
  br i1 %cmp.i64, label %for.body.i65.for.body.i65_crit_edge, label %for.body.i65.err_setup_tx_crit_edge

for.body.i65.err_setup_tx_crit_edge:              ; preds = %for.body.i65
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_setup_tx

for.body.i65.for.body.i65_crit_edge:              ; preds = %for.body.i65
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i65

err_setup_tx:                                     ; preds = %for.body.i65.err_setup_tx_crit_edge, %err_setup_rx.err_setup_tx_crit_edge, %if.end.err_setup_tx_crit_edge
  %err.1 = phi i32 [ %call3, %if.end.err_setup_tx_crit_edge ], [ %err.0, %err_setup_rx.err_setup_tx_crit_edge ], [ %err.0, %for.body.i65.err_setup_tx_crit_edge ]
  call void @e1000_reset(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %err_setup_tx, %if.end17, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.1, %err_setup_tx ], [ 0, %if.end17 ], [ -16, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_setup_all_tx_resources(ptr nocapture noundef readonly %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tx_queues = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 41
  %0 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_tx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp73 = icmp sgt i32 %1, 0
  br i1 %cmp73, label %for.body.lr.ph, label %entry.for.end11_crit_edge

entry.for.end11_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end11

for.body.lr.ph:                                   ; preds = %entry
  %tx_ring = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 19
  %pdev1.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %mac_type.i.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %msg_enable.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 60
  %netdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  br label %for.body

for.body:                                         ; preds = %for.inc10.for.body_crit_edge, %for.body.lr.ph
  %i.074 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc10.for.body_crit_edge ]
  %2 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tx_ring, align 8
  %arrayidx = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.074
  %4 = ptrtoint ptr %pdev1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev1.i, align 4
  %count.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.074, i32 3
  %6 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %count.i, align 4
  %mul.i = mul i32 %7, 24
  %call.i = tail call noalias ptr @vzalloc(i32 noundef %mul.i) #18
  %buffer_info.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.074, i32 6
  %8 = ptrtoint ptr %buffer_info.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call.i, ptr %buffer_info.i, align 4
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %for.body.do.body_crit_edge, label %if.end.i

for.body.do.body_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end.i:                                         ; preds = %for.body
  %9 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %count.i, align 4
  %mul4.i = shl i32 %10, 4
  %size5.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.074, i32 2
  %add.i = add i32 %mul4.i, 4095
  %and.i = and i32 %add.i, -4096
  %11 = ptrtoint ptr %size5.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %and.i, ptr %size5.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %dma.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.074, i32 1
  %call.i.i = tail call ptr @dma_alloc_attrs(ptr noundef %dev.i, i32 noundef %and.i, ptr noundef %dma.i, i32 noundef 3264, i32 noundef 0) #14
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call.i.i, ptr %arrayidx, align 4
  %tobool11.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool11.not.i, label %if.end.i.do.body.sink.split_crit_edge, label %if.end14.i

if.end.i.do.body.sink.split_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.sink.split

if.end14.i:                                       ; preds = %if.end.i
  %13 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %size5.i, align 4
  %15 = ptrtoint ptr %mac_type.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mac_type.i.i, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.214)
  switch i32 %16, label %if.end14.i.for.inc10_crit_edge [
    i32 6, label %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge
    i32 9, label %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge219
    i32 8, label %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge220
  ]

if.end14.i.e1000_check_64k_bound.exit.i_crit_edge220: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit.i

if.end14.i.e1000_check_64k_bound.exit.i_crit_edge219: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit.i

if.end14.i.e1000_check_64k_bound.exit.i_crit_edge: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit.i

if.end14.i.for.inc10_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10

e1000_check_64k_bound.exit.i:                     ; preds = %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge, %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge219, %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge220
  %18 = ptrtoint ptr %call.i.i to i32
  %add.i.i = add i32 %18, -1
  %sub.i.i = add i32 %add.i.i, %14
  %xor.i.i = xor i32 %sub.i.i, %18
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %xor.i.i)
  %cmp7.i.i = icmp ult i32 %xor.i.i, 65536
  br i1 %cmp7.i.i, label %e1000_check_64k_bound.exit.i.for.inc10_crit_edge, label %if.then18.i

e1000_check_64k_bound.exit.i.for.inc10_crit_edge: ; preds = %e1000_check_64k_bound.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10

if.then18.i:                                      ; preds = %e1000_check_64k_bound.exit.i
  %19 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %dma.i, align 4
  %21 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %msg_enable.i, align 8
  %and21.i = and i32 %22, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool22.not.i = icmp eq i32 %and21.i, 0
  br i1 %tobool22.not.i, label %if.then18.i.do.end.i_crit_edge, label %if.then23.i

if.then18.i.do.end.i_crit_edge:                   ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

if.then23.i:                                      ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #16
  %23 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %netdev.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %24, ptr noundef nonnull @.str.209, i32 noundef %14, ptr noundef nonnull %call.i.i) #17
  br label %do.end.i

do.end.i:                                         ; preds = %if.then23.i, %if.then18.i.do.end.i_crit_edge
  %25 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %size5.i, align 4
  %call.i116.i = tail call ptr @dma_alloc_attrs(ptr noundef %dev.i, i32 noundef %26, ptr noundef %dma.i, i32 noundef 3264, i32 noundef 0) #14
  %27 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %call.i116.i, ptr %arrayidx, align 4
  %tobool33.not.i = icmp eq ptr %call.i116.i, null
  %28 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %size5.i, align 4
  br i1 %tobool33.not.i, label %cleanup.i, label %if.end37.i

if.end37.i:                                       ; preds = %do.end.i
  %30 = ptrtoint ptr %mac_type.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %mac_type.i.i, align 4
  %32 = zext i32 %31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.215)
  switch i32 %31, label %if.end37.i.cleanup.thread128.i_crit_edge [
    i32 6, label %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge
    i32 9, label %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge221
    i32 8, label %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge222
  ]

if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge222: ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit124.i

if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge221: ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit124.i

if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge: ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit124.i

if.end37.i.cleanup.thread128.i_crit_edge:         ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread128.i

e1000_check_64k_bound.exit124.i:                  ; preds = %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge, %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge221, %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge222
  %33 = ptrtoint ptr %call.i116.i to i32
  %add.i118.i = add i32 %33, -1
  %sub.i119.i = add i32 %add.i118.i, %29
  %xor.i120.i = xor i32 %sub.i119.i, %33
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %xor.i120.i)
  %cmp7.i121.i = icmp ult i32 %xor.i120.i, 65536
  br i1 %cmp7.i121.i, label %e1000_check_64k_bound.exit124.i.cleanup.thread128.i_crit_edge, label %if.then41.i

e1000_check_64k_bound.exit124.i.cleanup.thread128.i_crit_edge: ; preds = %e1000_check_64k_bound.exit124.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread128.i

if.then41.i:                                      ; preds = %e1000_check_64k_bound.exit124.i
  %34 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %dma.i, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %29, ptr noundef nonnull %call.i116.i, i32 noundef %35, i32 noundef 0) #14
  %36 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %size5.i, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %37, ptr noundef nonnull %call.i.i, i32 noundef %20, i32 noundef 0) #14
  %38 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %msg_enable.i, align 8
  %and50.i = and i32 %39, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50.i)
  %tobool51.not.i = icmp eq i32 %and50.i, 0
  br i1 %tobool51.not.i, label %if.then41.i.do.body.sink.split_crit_edge, label %if.then52.i

if.then41.i.do.body.sink.split_crit_edge:         ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.sink.split

if.then52.i:                                      ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #16
  %40 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %netdev.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %41, ptr noundef nonnull @.str.210) #17
  br label %do.body.sink.split

cleanup.thread128.i:                              ; preds = %e1000_check_64k_bound.exit124.i.cleanup.thread128.i_crit_edge, %if.end37.i.cleanup.thread128.i_crit_edge
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %29, ptr noundef nonnull %call.i.i, i32 noundef %20, i32 noundef 0) #14
  br label %for.inc10

cleanup.i:                                        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %29, ptr noundef nonnull %call.i.i, i32 noundef %20, i32 noundef 0) #14
  br label %do.body.sink.split

do.body.sink.split:                               ; preds = %cleanup.i, %if.then52.i, %if.then41.i.do.body.sink.split_crit_edge, %if.end.i.do.body.sink.split_crit_edge
  %42 = ptrtoint ptr %buffer_info.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %buffer_info.i, align 4
  tail call void @vfree(ptr noundef %43) #14
  br label %do.body

do.body:                                          ; preds = %do.body.sink.split, %for.body.do.body_crit_edge
  %44 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %msg_enable.i, align 8
  %and = and i32 %45, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.do.end_crit_edge, label %if.then2

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then2:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %46 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %netdev.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %47, ptr noundef nonnull @.str.5, i32 noundef %i.074) #17
  br label %do.end

do.end:                                           ; preds = %if.then2, %do.body.do.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.074)
  %cmp478.not = icmp eq i32 %i.074, 0
  br i1 %cmp478.not, label %do.end.for.end11_crit_edge, label %do.end.for.body5_crit_edge

do.end.for.body5_crit_edge:                       ; preds = %do.end
  br label %for.body5

do.end.for.end11_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end11

for.body5:                                        ; preds = %for.body5.for.body5_crit_edge, %do.end.for.body5_crit_edge
  %i.179.in = phi i32 [ %i.179, %for.body5.for.body5_crit_edge ], [ %i.074, %do.end.for.body5_crit_edge ]
  %i.179 = add nsw i32 %i.179.in, -1
  %48 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %tx_ring, align 8
  %arrayidx7 = getelementptr %struct.e1000_tx_ring, ptr %49, i32 %i.179
  %50 = ptrtoint ptr %pdev1.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pdev1.i, align 4
  tail call fastcc void @e1000_clean_tx_ring(ptr noundef %adapter, ptr noundef %arrayidx7) #14
  %buffer_info.i27 = getelementptr %struct.e1000_tx_ring, ptr %49, i32 %i.179, i32 6
  %52 = ptrtoint ptr %buffer_info.i27 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %buffer_info.i27, align 4
  tail call void @vfree(ptr noundef %53) #14
  %54 = ptrtoint ptr %buffer_info.i27 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr null, ptr %buffer_info.i27, align 4
  %dev.i28 = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 44
  %size.i = getelementptr %struct.e1000_tx_ring, ptr %49, i32 %i.179, i32 2
  %55 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %size.i, align 4
  %57 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx7, align 4
  %dma.i29 = getelementptr %struct.e1000_tx_ring, ptr %49, i32 %i.179, i32 1
  %59 = ptrtoint ptr %dma.i29 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %dma.i29, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i28, i32 noundef %56, ptr noundef %58, i32 noundef %60, i32 noundef 0) #14
  %61 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr null, ptr %arrayidx7, align 4
  %cmp4 = icmp sgt i32 %i.179.in, 1
  br i1 %cmp4, label %for.body5.for.body5_crit_edge, label %for.body5.for.end11_crit_edge

for.body5.for.end11_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end11

for.body5.for.body5_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body5

for.inc10:                                        ; preds = %cleanup.thread128.i, %e1000_check_64k_bound.exit.i.for.inc10_crit_edge, %if.end14.i.for.inc10_crit_edge
  %62 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %arrayidx, align 4
  %64 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %size5.i, align 4
  %66 = call ptr @memset(ptr %63, i32 0, i32 %65)
  %next_to_use.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.074, i32 4
  %67 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 0, ptr %next_to_use.i, align 4
  %next_to_clean.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.074, i32 5
  %68 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 0, ptr %next_to_clean.i, align 4
  %inc = add nuw nsw i32 %i.074, 1
  %69 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %num_tx_queues, align 8
  %cmp = icmp slt i32 %inc, %70
  br i1 %cmp, label %for.inc10.for.body_crit_edge, label %for.inc10.for.end11_crit_edge

for.inc10.for.end11_crit_edge:                    ; preds = %for.inc10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end11

for.inc10.for.body_crit_edge:                     ; preds = %for.inc10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end11:                                        ; preds = %for.inc10.for.end11_crit_edge, %for.body5.for.end11_crit_edge, %do.end.for.end11_crit_edge, %entry.for.end11_crit_edge
  %err.1 = phi i32 [ -12, %do.end.for.end11_crit_edge ], [ 0, %entry.for.end11_crit_edge ], [ -12, %for.body5.for.end11_crit_edge ], [ 0, %for.inc10.for.end11_crit_edge ]
  ret i32 %err.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_setup_all_rx_resources(ptr nocapture noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_rx_queues = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 42
  %0 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_rx_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp73 = icmp sgt i32 %1, 0
  br i1 %cmp73, label %for.body.lr.ph, label %entry.for.end11_crit_edge

entry.for.end11_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end11

for.body.lr.ph:                                   ; preds = %entry
  %rx_ring = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  %pdev1.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %mac_type.i.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %msg_enable.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 60
  %netdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  br label %for.body

for.body:                                         ; preds = %for.inc10.for.body_crit_edge, %for.body.lr.ph
  %i.074 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc10.for.body_crit_edge ]
  %2 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rx_ring, align 4
  %arrayidx = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.074
  %4 = ptrtoint ptr %pdev1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev1.i, align 4
  %count.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.074, i32 3
  %6 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %count.i, align 4
  %mul.i = shl i32 %7, 3
  %call.i = tail call noalias ptr @vzalloc(i32 noundef %mul.i) #18
  %buffer_info.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.074, i32 6
  %8 = ptrtoint ptr %buffer_info.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call.i, ptr %buffer_info.i, align 4
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %for.body.do.body_crit_edge, label %if.end.i

for.body.do.body_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end.i:                                         ; preds = %for.body
  %9 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %count.i, align 4
  %mul4.i = shl i32 %10, 4
  %size5.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.074, i32 2
  %add.i = add i32 %mul4.i, 4095
  %and.i = and i32 %add.i, -4096
  %11 = ptrtoint ptr %size5.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %and.i, ptr %size5.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %dma.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.074, i32 1
  %call.i.i = tail call ptr @dma_alloc_attrs(ptr noundef %dev.i, i32 noundef %and.i, ptr noundef %dma.i, i32 noundef 3264, i32 noundef 0) #14
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call.i.i, ptr %arrayidx, align 4
  %tobool11.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool11.not.i, label %if.end.i.setup_rx_desc_die.i_crit_edge, label %if.end14.i

if.end.i.setup_rx_desc_die.i_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %setup_rx_desc_die.i

setup_rx_desc_die.i:                              ; preds = %if.then52.i, %if.then41.i.setup_rx_desc_die.i_crit_edge, %if.then34.i, %if.end.i.setup_rx_desc_die.i_crit_edge
  %13 = ptrtoint ptr %buffer_info.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %buffer_info.i, align 4
  tail call void @vfree(ptr noundef %14) #14
  br label %do.body

if.end14.i:                                       ; preds = %if.end.i
  %15 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %size5.i, align 4
  %17 = ptrtoint ptr %mac_type.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %mac_type.i.i, align 4
  %19 = zext i32 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.216)
  switch i32 %18, label %if.end14.i.for.inc10_crit_edge [
    i32 6, label %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge
    i32 9, label %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge219
    i32 8, label %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge220
  ]

if.end14.i.e1000_check_64k_bound.exit.i_crit_edge220: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit.i

if.end14.i.e1000_check_64k_bound.exit.i_crit_edge219: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit.i

if.end14.i.e1000_check_64k_bound.exit.i_crit_edge: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit.i

if.end14.i.for.inc10_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10

e1000_check_64k_bound.exit.i:                     ; preds = %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge, %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge219, %if.end14.i.e1000_check_64k_bound.exit.i_crit_edge220
  %20 = ptrtoint ptr %call.i.i to i32
  %add.i.i = add i32 %20, -1
  %sub.i.i = add i32 %add.i.i, %16
  %xor.i.i = xor i32 %sub.i.i, %20
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %xor.i.i)
  %cmp7.i.i = icmp ult i32 %xor.i.i, 65536
  br i1 %cmp7.i.i, label %e1000_check_64k_bound.exit.i.for.inc10_crit_edge, label %if.then18.i

e1000_check_64k_bound.exit.i.for.inc10_crit_edge: ; preds = %e1000_check_64k_bound.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10

if.then18.i:                                      ; preds = %e1000_check_64k_bound.exit.i
  %21 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %dma.i, align 4
  %23 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %msg_enable.i, align 8
  %and21.i = and i32 %24, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool22.not.i = icmp eq i32 %and21.i, 0
  br i1 %tobool22.not.i, label %if.then18.i.do.end.i_crit_edge, label %if.then23.i

if.then18.i.do.end.i_crit_edge:                   ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

if.then23.i:                                      ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #16
  %25 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %netdev.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %26, ptr noundef nonnull @.str.211, i32 noundef %16, ptr noundef nonnull %call.i.i) #17
  br label %do.end.i

do.end.i:                                         ; preds = %if.then23.i, %if.then18.i.do.end.i_crit_edge
  %27 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %size5.i, align 4
  %call.i116.i = tail call ptr @dma_alloc_attrs(ptr noundef %dev.i, i32 noundef %28, ptr noundef %dma.i, i32 noundef 3264, i32 noundef 0) #14
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %call.i116.i, ptr %arrayidx, align 4
  %tobool33.not.i = icmp eq ptr %call.i116.i, null
  %30 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %size5.i, align 4
  br i1 %tobool33.not.i, label %if.then34.i, label %if.end37.i

if.then34.i:                                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %31, ptr noundef nonnull %call.i.i, i32 noundef %22, i32 noundef 0) #14
  br label %setup_rx_desc_die.i

if.end37.i:                                       ; preds = %do.end.i
  %32 = ptrtoint ptr %mac_type.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %mac_type.i.i, align 4
  %34 = zext i32 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.217)
  switch i32 %33, label %if.end37.i.cleanup.i_crit_edge [
    i32 6, label %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge
    i32 9, label %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge221
    i32 8, label %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge222
  ]

if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge222: ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit124.i

if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge221: ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit124.i

if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge: ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit124.i

if.end37.i.cleanup.i_crit_edge:                   ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

e1000_check_64k_bound.exit124.i:                  ; preds = %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge, %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge221, %if.end37.i.e1000_check_64k_bound.exit124.i_crit_edge222
  %35 = ptrtoint ptr %call.i116.i to i32
  %add.i118.i = add i32 %35, -1
  %sub.i119.i = add i32 %add.i118.i, %31
  %xor.i120.i = xor i32 %sub.i119.i, %35
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %xor.i120.i)
  %cmp7.i121.i = icmp ult i32 %xor.i120.i, 65536
  br i1 %cmp7.i121.i, label %e1000_check_64k_bound.exit124.i.cleanup.i_crit_edge, label %if.then41.i

e1000_check_64k_bound.exit124.i.cleanup.i_crit_edge: ; preds = %e1000_check_64k_bound.exit124.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

if.then41.i:                                      ; preds = %e1000_check_64k_bound.exit124.i
  %36 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %dma.i, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %31, ptr noundef nonnull %call.i116.i, i32 noundef %37, i32 noundef 0) #14
  %38 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %size5.i, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %39, ptr noundef nonnull %call.i.i, i32 noundef %22, i32 noundef 0) #14
  %40 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %msg_enable.i, align 8
  %and50.i = and i32 %41, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50.i)
  %tobool51.not.i = icmp eq i32 %and50.i, 0
  br i1 %tobool51.not.i, label %if.then41.i.setup_rx_desc_die.i_crit_edge, label %if.then52.i

if.then41.i.setup_rx_desc_die.i_crit_edge:        ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %setup_rx_desc_die.i

if.then52.i:                                      ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %netdev.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %43, ptr noundef nonnull @.str.212) #17
  br label %setup_rx_desc_die.i

cleanup.i:                                        ; preds = %e1000_check_64k_bound.exit124.i.cleanup.i_crit_edge, %if.end37.i.cleanup.i_crit_edge
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %31, ptr noundef nonnull %call.i.i, i32 noundef %22, i32 noundef 0) #14
  br label %for.inc10

do.body:                                          ; preds = %setup_rx_desc_die.i, %for.body.do.body_crit_edge
  %44 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %msg_enable.i, align 8
  %and = and i32 %45, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.do.end_crit_edge, label %if.then2

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then2:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %46 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %netdev.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %47, ptr noundef nonnull @.str.6, i32 noundef %i.074) #17
  br label %do.end

do.end:                                           ; preds = %if.then2, %do.body.do.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.074)
  %cmp478.not = icmp eq i32 %i.074, 0
  br i1 %cmp478.not, label %do.end.for.end11_crit_edge, label %do.end.for.body5_crit_edge

do.end.for.body5_crit_edge:                       ; preds = %do.end
  br label %for.body5

do.end.for.end11_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end11

for.body5:                                        ; preds = %for.body5.for.body5_crit_edge, %do.end.for.body5_crit_edge
  %i.179.in = phi i32 [ %i.179, %for.body5.for.body5_crit_edge ], [ %i.074, %do.end.for.body5_crit_edge ]
  %i.179 = add nsw i32 %i.179.in, -1
  %48 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rx_ring, align 4
  %arrayidx7 = getelementptr %struct.e1000_rx_ring, ptr %49, i32 %i.179
  %50 = ptrtoint ptr %pdev1.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pdev1.i, align 4
  tail call fastcc void @e1000_clean_rx_ring(ptr noundef %adapter, ptr noundef %arrayidx7) #14
  %buffer_info.i27 = getelementptr %struct.e1000_rx_ring, ptr %49, i32 %i.179, i32 6
  %52 = ptrtoint ptr %buffer_info.i27 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %buffer_info.i27, align 4
  tail call void @vfree(ptr noundef %53) #14
  %54 = ptrtoint ptr %buffer_info.i27 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr null, ptr %buffer_info.i27, align 4
  %dev.i28 = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 44
  %size.i = getelementptr %struct.e1000_rx_ring, ptr %49, i32 %i.179, i32 2
  %55 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %size.i, align 4
  %57 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx7, align 4
  %dma.i29 = getelementptr %struct.e1000_rx_ring, ptr %49, i32 %i.179, i32 1
  %59 = ptrtoint ptr %dma.i29 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %dma.i29, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i28, i32 noundef %56, ptr noundef %58, i32 noundef %60, i32 noundef 0) #14
  %61 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr null, ptr %arrayidx7, align 4
  %cmp4 = icmp sgt i32 %i.179.in, 1
  br i1 %cmp4, label %for.body5.for.body5_crit_edge, label %for.body5.for.end11_crit_edge

for.body5.for.end11_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end11

for.body5.for.body5_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body5

for.inc10:                                        ; preds = %cleanup.i, %e1000_check_64k_bound.exit.i.for.inc10_crit_edge, %if.end14.i.for.inc10_crit_edge
  %62 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %arrayidx, align 4
  %64 = ptrtoint ptr %size5.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %size5.i, align 4
  %66 = call ptr @memset(ptr %63, i32 0, i32 %65)
  %next_to_clean.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.074, i32 5
  %67 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 0, ptr %next_to_clean.i, align 4
  %next_to_use.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.074, i32 4
  %68 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 0, ptr %next_to_use.i, align 4
  %rx_skb_top.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.074, i32 7
  %69 = ptrtoint ptr %rx_skb_top.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr null, ptr %rx_skb_top.i, align 4
  %inc = add nuw nsw i32 %i.074, 1
  %70 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %num_rx_queues, align 4
  %cmp = icmp slt i32 %inc, %71
  br i1 %cmp, label %for.inc10.for.body_crit_edge, label %for.inc10.for.end11_crit_edge

for.inc10.for.end11_crit_edge:                    ; preds = %for.inc10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end11

for.inc10.for.body_crit_edge:                     ; preds = %for.inc10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end11:                                        ; preds = %for.inc10.for.end11_crit_edge, %for.body5.for.end11_crit_edge, %do.end.for.end11_crit_edge, %entry.for.end11_crit_edge
  %err.1 = phi i32 [ -12, %do.end.for.end11_crit_edge ], [ 0, %entry.for.end11_crit_edge ], [ -12, %for.body5.for.end11_crit_edge ], [ 0, %for.inc10.for.end11_crit_edge ]
  ret i32 %err.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_free_all_rx_resources(ptr nocapture noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_rx_queues = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 42
  %0 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_rx_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp5 = icmp sgt i32 %1, 0
  br i1 %cmp5, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %rx_ring = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  %pdev1.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.06 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %2 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rx_ring, align 4
  %arrayidx = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.06
  %4 = ptrtoint ptr %pdev1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev1.i, align 4
  tail call fastcc void @e1000_clean_rx_ring(ptr noundef %adapter, ptr noundef %arrayidx) #14
  %buffer_info.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.06, i32 6
  %6 = ptrtoint ptr %buffer_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %buffer_info.i, align 4
  tail call void @vfree(ptr noundef %7) #14
  %8 = ptrtoint ptr %buffer_info.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %buffer_info.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %size.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.06, i32 2
  %9 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %size.i, align 4
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx, align 4
  %dma.i = getelementptr %struct.e1000_rx_ring, ptr %3, i32 %i.06, i32 1
  %13 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %dma.i, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %10, ptr noundef %12, i32 noundef %14, i32 noundef 0) #14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %arrayidx, align 4
  %inc = add nuw nsw i32 %i.06, 1
  %16 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num_rx_queues, align 4
  %cmp = icmp slt i32 %inc, %17
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_free_all_tx_resources(ptr nocapture noundef readonly %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tx_queues = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 41
  %0 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_tx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp5 = icmp sgt i32 %1, 0
  br i1 %cmp5, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %tx_ring = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 19
  %pdev1.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.06 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %2 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tx_ring, align 8
  %arrayidx = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.06
  %4 = ptrtoint ptr %pdev1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev1.i, align 4
  tail call fastcc void @e1000_clean_tx_ring(ptr noundef %adapter, ptr noundef %arrayidx) #14
  %buffer_info.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.06, i32 6
  %6 = ptrtoint ptr %buffer_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %buffer_info.i, align 4
  tail call void @vfree(ptr noundef %7) #14
  %8 = ptrtoint ptr %buffer_info.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %buffer_info.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %size.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.06, i32 2
  %9 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %size.i, align 4
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx, align 4
  %dma.i = getelementptr %struct.e1000_tx_ring, ptr %3, i32 %i.06, i32 1
  %13 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %dma.i, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %10, ptr noundef %12, i32 noundef %14, i32 noundef 0) #14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %arrayidx, align 4
  %inc = add nuw nsw i32 %i.06, 1
  %16 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num_tx_queues, align 8
  %cmp = icmp slt i32 %inc, %17
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_close(ptr noundef %netdev) #4 align 64 {
entry:
  %mii_reg.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %flags = getelementptr i8, ptr %netdev, i32 4240
  %call268 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %flags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call268)
  %tobool.not69 = icmp eq i32 %call268, 0
  br i1 %tobool.not69, label %entry.if.end_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.rhs:                                         ; preds = %while.body.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %count.070 = phi i32 [ %dec, %while.body.land.rhs_crit_edge ], [ 50, %entry.land.rhs_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.070)
  %tobool3.not = icmp eq i32 %count.070, 0
  br i1 %tobool3.not, label %land.rhs.do.end_crit_edge, label %while.body

land.rhs.do.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

while.body:                                       ; preds = %land.rhs
  %dec = add nsw i32 %count.070, -1
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #14
  %call2 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %flags) #14
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %while.end, label %while.body.land.rhs_crit_edge

while.body.land.rhs_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs

while.end:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %count.070)
  %phi.cmp = icmp slt i32 %count.070, 1
  br i1 %phi.cmp, label %while.end.do.end_crit_edge, label %while.end.if.end_crit_edge, !prof !456

while.end.if.end_crit_edge:                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

while.end.do.end_crit_edge:                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %while.end.do.end_crit_edge, %land.rhs.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1440, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %while.end.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @_set_bit(i32 noundef 2, ptr noundef %flags) #14
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %flags) #14
  tail call void @e1000_down(ptr noundef %add.ptr.i)
  %hw1.i = getelementptr i8, ptr %netdev, i32 3296
  %wol.i = getelementptr i8, ptr %netdev, i32 2828
  %0 = ptrtoint ptr %wol.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %wol.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end.e1000_power_down_phy.exit_crit_edge

if.end.e1000_power_down_phy.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_power_down_phy.exit

land.lhs.true.i:                                  ; preds = %if.end
  %mac_type.i = getelementptr i8, ptr %netdev, i32 3308
  %2 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %3)
  %cmp.i = icmp ugt i32 %3, 4
  br i1 %cmp.i, label %land.lhs.true2.i, label %land.lhs.true.i.e1000_power_down_phy.exit_crit_edge

land.lhs.true.i.e1000_power_down_phy.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_power_down_phy.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %media_type.i = getelementptr i8, ptr %netdev, i32 3320
  %4 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp3.i = icmp eq i32 %5, 0
  br i1 %cmp3.i, label %if.then.i, label %land.lhs.true2.i.e1000_power_down_phy.exit_crit_edge

land.lhs.true2.i.e1000_power_down_phy.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_power_down_phy.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_reg.i) #14
  %6 = ptrtoint ptr %mii_reg.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 0, ptr %mii_reg.i, align 2
  %.off.i = add i32 %3, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 10
  br i1 %switch.i, label %sw.bb.i, label %if.then.i.cleanup.i_crit_edge

if.then.i.cleanup.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

sw.bb.i:                                          ; preds = %if.then.i
  %7 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i47 = getelementptr i8, ptr %8, i32 22560
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i47) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !455
  %10 = and i32 %9, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool8.not.i = icmp eq i32 %10, 0
  br i1 %tobool8.not.i, label %sw.epilog.i, label %sw.bb.i.cleanup.i_crit_edge

sw.bb.i.cleanup.i_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

sw.epilog.i:                                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  %call10.i = call i32 @e1000_read_phy_reg(ptr noundef %hw1.i, i32 noundef 0, ptr noundef nonnull %mii_reg.i) #14
  %11 = ptrtoint ptr %mii_reg.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %mii_reg.i, align 2
  %13 = or i16 %12, 2048
  store i16 %13, ptr %mii_reg.i, align 2
  %call12.i = call i32 @e1000_write_phy_reg(ptr noundef %hw1.i, i32 noundef 0, i16 noundef zeroext %13) #14
  call void @msleep(i32 noundef 1) #14
  br label %cleanup.i

cleanup.i:                                        ; preds = %sw.epilog.i, %sw.bb.i.cleanup.i_crit_edge, %if.then.i.cleanup.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_reg.i) #14
  br label %e1000_power_down_phy.exit

e1000_power_down_phy.exit:                        ; preds = %cleanup.i, %land.lhs.true2.i.e1000_power_down_phy.exit_crit_edge, %land.lhs.true.i.e1000_power_down_phy.exit_crit_edge, %if.end.e1000_power_down_phy.exit_crit_edge
  %netdev1.i = getelementptr i8, ptr %netdev, i32 3288
  %14 = ptrtoint ptr %netdev1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %netdev1.i, align 8
  %pdev.i = getelementptr i8, ptr %netdev, i32 3292
  %16 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pdev.i, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 46
  %18 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %irq.i, align 4
  %call.i = call ptr @free_irq(i32 noundef %19, ptr noundef %15) #14
  %num_tx_queues.i = getelementptr i8, ptr %netdev, i32 3232
  %20 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_tx_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp5.i = icmp sgt i32 %21, 0
  br i1 %cmp5.i, label %for.body.lr.ph.i, label %e1000_power_down_phy.exit.e1000_free_all_tx_resources.exit_crit_edge

e1000_power_down_phy.exit.e1000_free_all_tx_resources.exit_crit_edge: ; preds = %e1000_power_down_phy.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_free_all_tx_resources.exit

for.body.lr.ph.i:                                 ; preds = %e1000_power_down_phy.exit
  %tx_ring.i = getelementptr i8, ptr %netdev, i32 2920
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.06.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %22 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %tx_ring.i, align 8
  %arrayidx.i48 = getelementptr %struct.e1000_tx_ring, ptr %23, i32 %i.06.i
  %24 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pdev.i, align 4
  call fastcc void @e1000_clean_tx_ring(ptr noundef %add.ptr.i, ptr noundef %arrayidx.i48) #14
  %buffer_info.i.i = getelementptr %struct.e1000_tx_ring, ptr %23, i32 %i.06.i, i32 6
  %26 = ptrtoint ptr %buffer_info.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %buffer_info.i.i, align 4
  call void @vfree(ptr noundef %27) #14
  %28 = ptrtoint ptr %buffer_info.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %buffer_info.i.i, align 4
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 44
  %size.i.i = getelementptr %struct.e1000_tx_ring, ptr %23, i32 %i.06.i, i32 2
  %29 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %size.i.i, align 4
  %31 = ptrtoint ptr %arrayidx.i48 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx.i48, align 4
  %dma.i.i = getelementptr %struct.e1000_tx_ring, ptr %23, i32 %i.06.i, i32 1
  %33 = ptrtoint ptr %dma.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %dma.i.i, align 4
  call void @dma_free_attrs(ptr noundef %dev.i.i, i32 noundef %30, ptr noundef %32, i32 noundef %34, i32 noundef 0) #14
  %35 = ptrtoint ptr %arrayidx.i48 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %arrayidx.i48, align 4
  %inc.i = add nuw nsw i32 %i.06.i, 1
  %36 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %num_tx_queues.i, align 8
  %cmp.i49 = icmp slt i32 %inc.i, %37
  br i1 %cmp.i49, label %for.body.i.for.body.i_crit_edge, label %for.body.i.e1000_free_all_tx_resources.exit_crit_edge

for.body.i.e1000_free_all_tx_resources.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_free_all_tx_resources.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

e1000_free_all_tx_resources.exit:                 ; preds = %for.body.i.e1000_free_all_tx_resources.exit_crit_edge, %e1000_power_down_phy.exit.e1000_free_all_tx_resources.exit_crit_edge
  %num_rx_queues.i = getelementptr i8, ptr %netdev, i32 3236
  %38 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %num_rx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp5.i50 = icmp sgt i32 %39, 0
  br i1 %cmp5.i50, label %for.body.lr.ph.i52, label %e1000_free_all_tx_resources.exit.e1000_free_all_rx_resources.exit_crit_edge

e1000_free_all_tx_resources.exit.e1000_free_all_rx_resources.exit_crit_edge: ; preds = %e1000_free_all_tx_resources.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_free_all_rx_resources.exit

for.body.lr.ph.i52:                               ; preds = %e1000_free_all_tx_resources.exit
  %rx_ring.i = getelementptr i8, ptr %netdev, i32 3004
  br label %for.body.i61

for.body.i61:                                     ; preds = %for.body.i61.for.body.i61_crit_edge, %for.body.lr.ph.i52
  %i.06.i53 = phi i32 [ 0, %for.body.lr.ph.i52 ], [ %inc.i59, %for.body.i61.for.body.i61_crit_edge ]
  %40 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i54 = getelementptr %struct.e1000_rx_ring, ptr %41, i32 %i.06.i53
  %42 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %pdev.i, align 4
  call fastcc void @e1000_clean_rx_ring(ptr noundef %add.ptr.i, ptr noundef %arrayidx.i54) #14
  %buffer_info.i.i55 = getelementptr %struct.e1000_rx_ring, ptr %41, i32 %i.06.i53, i32 6
  %44 = ptrtoint ptr %buffer_info.i.i55 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %buffer_info.i.i55, align 4
  call void @vfree(ptr noundef %45) #14
  %46 = ptrtoint ptr %buffer_info.i.i55 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %buffer_info.i.i55, align 4
  %dev.i.i56 = getelementptr inbounds %struct.pci_dev, ptr %43, i32 0, i32 44
  %size.i.i57 = getelementptr %struct.e1000_rx_ring, ptr %41, i32 %i.06.i53, i32 2
  %47 = ptrtoint ptr %size.i.i57 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %size.i.i57, align 4
  %49 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx.i54, align 4
  %dma.i.i58 = getelementptr %struct.e1000_rx_ring, ptr %41, i32 %i.06.i53, i32 1
  %51 = ptrtoint ptr %dma.i.i58 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %dma.i.i58, align 4
  call void @dma_free_attrs(ptr noundef %dev.i.i56, i32 noundef %48, ptr noundef %50, i32 noundef %52, i32 noundef 0) #14
  %53 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %arrayidx.i54, align 4
  %inc.i59 = add nuw nsw i32 %i.06.i53, 1
  %54 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %num_rx_queues.i, align 4
  %cmp.i60 = icmp slt i32 %inc.i59, %55
  br i1 %cmp.i60, label %for.body.i61.for.body.i61_crit_edge, label %for.body.i61.e1000_free_all_rx_resources.exit_crit_edge

for.body.i61.e1000_free_all_rx_resources.exit_crit_edge: ; preds = %for.body.i61
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_free_all_rx_resources.exit

for.body.i61.for.body.i61_crit_edge:              ; preds = %for.body.i61
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i61

e1000_free_all_rx_resources.exit:                 ; preds = %for.body.i61.e1000_free_all_rx_resources.exit_crit_edge, %e1000_free_all_tx_resources.exit.e1000_free_all_rx_resources.exit_crit_edge
  %status = getelementptr i8, ptr %netdev, i32 3467
  %56 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %status, align 1
  %58 = and i8 %57, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool25.not = icmp eq i8 %58, 0
  br i1 %tobool25.not, label %e1000_free_all_rx_resources.exit.if.end32_crit_edge, label %land.lhs.true

e1000_free_all_rx_resources.exit.if.end32_crit_edge: ; preds = %e1000_free_all_rx_resources.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

land.lhs.true:                                    ; preds = %e1000_free_all_rx_resources.exit
  %mng_vlan_id = getelementptr i8, ptr %netdev, i32 2816
  %59 = ptrtoint ptr %mng_vlan_id to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %mng_vlan_id, align 8
  %conv26 = zext i16 %60 to i32
  %div3.i = lshr i32 %conv26, 5
  %arrayidx.i = getelementptr i32, ptr %add.ptr.i, i32 %div3.i
  %61 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %conv26, 31
  %63 = shl nuw i32 1, %and.i
  %64 = and i32 %63, %62
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool28.not = icmp eq i32 %64, 0
  br i1 %tobool28.not, label %if.then29, label %land.lhs.true.if.end32_crit_edge

land.lhs.true.if.end32_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

if.then29:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %call31 = call i32 @e1000_vlan_rx_kill_vid(ptr noundef %netdev, i16 noundef zeroext -32512, i16 noundef zeroext %60)
  br label %if.end32

if.end32:                                         ; preds = %if.then29, %land.lhs.true.if.end32_crit_edge, %e1000_free_all_rx_resources.exit.if.end32_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_vlan_rx_kill_vid(ptr noundef %netdev, i16 noundef zeroext %proto, i16 noundef zeroext %vid) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1 = getelementptr i8, ptr %netdev, i32 3296
  %flags = getelementptr i8, ptr %netdev, i32 4240
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !443
  tail call void @arm_heavy_mb() #14
  %3 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw1, align 4
  %add.ptr.i35 = getelementptr i8, ptr %4, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i35, i32 -1) #14, !srcloc !421
  %5 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hw1, align 4
  %add.ptr6.i = getelementptr i8, ptr %6, i32 8
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !444
  %pdev.i = getelementptr i8, ptr %netdev, i32 3292
  %8 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev.i, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 46
  %10 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %irq.i, align 4
  tail call void @synchronize_irq(i32 noundef %11) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %flags, align 4
  %14 = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool5.not = icmp eq i32 %14, 0
  br i1 %tobool5.not, label %if.then6, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  tail call void @arm_heavy_mb() #14
  %15 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw1, align 4
  %add.ptr.i37 = getelementptr i8, ptr %16, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i37, i32 -1660944384) #14, !srcloc !421
  %17 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hw1, align 4
  %add.ptr6.i38 = getelementptr i8, ptr %18, i32 8
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i38) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end.if.end7_crit_edge
  %conv = zext i16 %vid to i32
  %20 = lshr i32 %conv, 5
  %and = and i32 %20, 127
  %21 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw1, align 4
  %mac_type = getelementptr i8, ptr %netdev, i32 3308
  %23 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp = icmp ugt i32 %24, 2
  %cond = select i1 %cmp, i32 22016, i32 1536
  %add.ptr = getelementptr i8, ptr %22, i32 %cond
  %shl = shl nuw nsw i32 %and, 2
  %add.ptr9 = getelementptr i8, ptr %add.ptr, i32 %shl
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr9) #14, !srcloc !422
  %26 = tail call i32 @llvm.bswap.i32(i32 %25)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !457
  %and13 = and i32 %conv, 31
  %shl14 = shl nuw i32 1, %and13
  %neg = xor i32 %shl14, -1
  %and15 = and i32 %26, %neg
  tail call void @e1000_write_vfta(ptr noundef %hw1, i32 noundef %and, i32 noundef %and15) #14
  tail call void @_clear_bit(i32 noundef %conv, ptr noundef %add.ptr.i) #14
  %call.i = tail call i32 @_find_next_bit_be(ptr noundef %add.ptr.i, i32 noundef 4096, i32 noundef 0) #14
  %conv1.i = and i32 %call.i, 61440
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv1.i)
  %cmp.i = icmp eq i32 %conv1.i, 0
  br i1 %cmp.i, label %if.end7.if.end19_crit_edge, label %if.then18

if.end7.if.end19_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.then18:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @e1000_vlan_filter_on_off(ptr noundef %add.ptr.i, i1 noundef zeroext false)
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.end7.if.end19_crit_edge
  ret i32 0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @e1000_has_link(ptr noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %media_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 6
  %0 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %media_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.218)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
    i32 2, label %sw.bb17
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %mac_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %3 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %4)
  %cmp = icmp eq i32 %4, 9
  br i1 %cmp, label %if.then, label %sw.bb.if.end_crit_edge

sw.bb.if.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %get_link_status = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 66
  %5 = ptrtoint ptr %get_link_status to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %get_link_status, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb.if.end_crit_edge
  %get_link_status2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 66
  %6 = ptrtoint ptr %get_link_status2 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %get_link_status2, align 4, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %if.end.sw.epilog_crit_edge, label %if.then3

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @e1000_check_for_link(ptr noundef %hw1) #14
  %8 = ptrtoint ptr %get_link_status2 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %get_link_status2, align 4, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool5.not = icmp eq i8 %9, 0
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call8 = tail call i32 @e1000_check_for_link(ptr noundef %hw1) #14
  %10 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %11, i32 8
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !459
  %13 = and i32 %12, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool13 = icmp ne i32 %13, 0
  br label %sw.epilog

sw.bb17:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call18 = tail call i32 @e1000_check_for_link(ptr noundef %hw1) #14
  %serdes_has_link = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 67
  %14 = ptrtoint ptr %serdes_has_link to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %serdes_has_link, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %extract.t = icmp ne i8 %15, 0
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb17, %sw.bb7, %if.then3, %if.end.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  %link_active.0.off0 = phi i1 [ false, %entry.sw.epilog_crit_edge ], [ %extract.t, %sw.bb17 ], [ %tobool13, %sw.bb7 ], [ %tobool5.not, %if.then3 ], [ true, %if.end.sw.epilog_crit_edge ]
  ret i1 %link_active.0.off0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_check_for_link(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_update_stats(ptr noundef %adapter) local_unnamed_addr #4 align 64 {
entry:
  %phy_tmp = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev1, align 8
  %hw2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %pdev3 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %2 = ptrtoint ptr %pdev3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev3, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_tmp) #14
  %4 = ptrtoint ptr %phy_tmp to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %phy_tmp, align 2, !annotation !460
  %link_speed = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 7
  %5 = ptrtoint ptr %link_speed to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %link_speed, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %cmp = icmp eq i16 %6, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %error_state.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 43
  %7 = ptrtoint ptr %error_state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %error_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp.i.not = icmp eq i32 %8, 1
  br i1 %cmp.i.not, label %do.body7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body7:                                         ; preds = %if.end
  %stats_lock = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 9
  %call11 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %stats_lock) #14
  %9 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw2, align 4
  %mac_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %add.ptr = getelementptr i8, ptr %10, i32 16384
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  %12 = tail call i32 @llvm.bswap.i32(i32 %11)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !461
  %conv19 = zext i32 %12 to i64
  %stats = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54
  %13 = ptrtoint ptr %stats to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %stats, align 8
  %add = add i64 %14, %conv19
  store i64 %add, ptr %stats, align 8
  %15 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw2, align 4
  %add.ptr27 = getelementptr i8, ptr %16, i32 16500
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr27) #14, !srcloc !422
  %18 = tail call i32 @llvm.bswap.i32(i32 %17)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !462
  %conv31 = zext i32 %18 to i64
  %gprc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 27
  %19 = ptrtoint ptr %gprc to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %gprc, align 8
  %add33 = add i64 %20, %conv31
  store i64 %add33, ptr %gprc, align 8
  %21 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw2, align 4
  %add.ptr41 = getelementptr i8, ptr %22, i32 16520
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr41) #14, !srcloc !422
  %24 = tail call i32 @llvm.bswap.i32(i32 %23)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !463
  %conv45 = zext i32 %24 to i64
  %gorcl = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 31
  %25 = ptrtoint ptr %gorcl to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %gorcl, align 8
  %add47 = add i64 %26, %conv45
  store i64 %add47, ptr %gorcl, align 8
  %27 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw2, align 4
  %add.ptr55 = getelementptr i8, ptr %28, i32 16524
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr55) #14, !srcloc !422
  %30 = tail call i32 @llvm.bswap.i32(i32 %29)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !464
  %conv59 = zext i32 %30 to i64
  %gorch = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 32
  %31 = ptrtoint ptr %gorch to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %gorch, align 8
  %add61 = add i64 %32, %conv59
  store i64 %add61, ptr %gorch, align 8
  %33 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %hw2, align 4
  %add.ptr69 = getelementptr i8, ptr %34, i32 16504
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr69) #14, !srcloc !422
  %36 = tail call i32 @llvm.bswap.i32(i32 %35)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !465
  %conv73 = zext i32 %36 to i64
  %bprc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 28
  %37 = ptrtoint ptr %bprc to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %bprc, align 8
  %add75 = add i64 %38, %conv73
  store i64 %add75, ptr %bprc, align 8
  %39 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw2, align 4
  %add.ptr83 = getelementptr i8, ptr %40, i32 16508
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr83) #14, !srcloc !422
  %42 = tail call i32 @llvm.bswap.i32(i32 %41)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !466
  %conv87 = zext i32 %42 to i64
  %mprc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 29
  %43 = ptrtoint ptr %mprc to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %mprc, align 8
  %add89 = add i64 %44, %conv87
  store i64 %add89, ptr %mprc, align 8
  %45 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hw2, align 4
  %add.ptr97 = getelementptr i8, ptr %46, i32 16556
  %47 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr97) #14, !srcloc !422
  %48 = tail call i32 @llvm.bswap.i32(i32 %47)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !467
  %conv101 = zext i32 %48 to i64
  %roc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 38
  %49 = ptrtoint ptr %roc to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %roc, align 8
  %add103 = add i64 %50, %conv101
  store i64 %add103, ptr %roc, align 8
  %51 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %hw2, align 4
  %add.ptr111 = getelementptr i8, ptr %52, i32 16476
  %53 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr111) #14, !srcloc !422
  %54 = tail call i32 @llvm.bswap.i32(i32 %53)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !468
  %conv115 = zext i32 %54 to i64
  %prc64 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 21
  %55 = ptrtoint ptr %prc64 to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %prc64, align 8
  %add117 = add i64 %56, %conv115
  store i64 %add117, ptr %prc64, align 8
  %57 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %hw2, align 4
  %add.ptr125 = getelementptr i8, ptr %58, i32 16480
  %59 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr125) #14, !srcloc !422
  %60 = tail call i32 @llvm.bswap.i32(i32 %59)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !469
  %conv129 = zext i32 %60 to i64
  %prc127 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 22
  %61 = ptrtoint ptr %prc127 to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %prc127, align 8
  %add131 = add i64 %62, %conv129
  store i64 %add131, ptr %prc127, align 8
  %63 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %hw2, align 4
  %add.ptr139 = getelementptr i8, ptr %64, i32 16484
  %65 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr139) #14, !srcloc !422
  %66 = tail call i32 @llvm.bswap.i32(i32 %65)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !470
  %conv143 = zext i32 %66 to i64
  %prc255 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 23
  %67 = ptrtoint ptr %prc255 to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %prc255, align 8
  %add145 = add i64 %68, %conv143
  store i64 %add145, ptr %prc255, align 8
  %69 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %hw2, align 4
  %add.ptr153 = getelementptr i8, ptr %70, i32 16488
  %71 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr153) #14, !srcloc !422
  %72 = tail call i32 @llvm.bswap.i32(i32 %71)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !471
  %conv157 = zext i32 %72 to i64
  %prc511 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 24
  %73 = ptrtoint ptr %prc511 to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %prc511, align 8
  %add159 = add i64 %74, %conv157
  store i64 %add159, ptr %prc511, align 8
  %75 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %hw2, align 4
  %add.ptr167 = getelementptr i8, ptr %76, i32 16492
  %77 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr167) #14, !srcloc !422
  %78 = tail call i32 @llvm.bswap.i32(i32 %77)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !472
  %conv171 = zext i32 %78 to i64
  %prc1023 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 25
  %79 = ptrtoint ptr %prc1023 to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %prc1023, align 8
  %add173 = add i64 %80, %conv171
  store i64 %add173, ptr %prc1023, align 8
  %81 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %hw2, align 4
  %add.ptr181 = getelementptr i8, ptr %82, i32 16496
  %83 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr181) #14, !srcloc !422
  %84 = tail call i32 @llvm.bswap.i32(i32 %83)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !473
  %conv185 = zext i32 %84 to i64
  %prc1522 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 26
  %85 = ptrtoint ptr %prc1522 to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %prc1522, align 8
  %add187 = add i64 %86, %conv185
  store i64 %add187, ptr %prc1522, align 8
  %87 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %hw2, align 4
  %add.ptr195 = getelementptr i8, ptr %88, i32 16392
  %89 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr195) #14, !srcloc !422
  %90 = tail call i32 @llvm.bswap.i32(i32 %89)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !474
  %conv199 = zext i32 %90 to i64
  %symerrs = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 2
  %91 = ptrtoint ptr %symerrs to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %symerrs, align 8
  %add201 = add i64 %92, %conv199
  store i64 %add201, ptr %symerrs, align 8
  %93 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %hw2, align 4
  %add.ptr209 = getelementptr i8, ptr %94, i32 16400
  %95 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr209) #14, !srcloc !422
  %96 = tail call i32 @llvm.bswap.i32(i32 %95)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !475
  %conv213 = zext i32 %96 to i64
  %mpc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 5
  %97 = ptrtoint ptr %mpc to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %mpc, align 8
  %add215 = add i64 %98, %conv213
  store i64 %add215, ptr %mpc, align 8
  %99 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %hw2, align 4
  %add.ptr223 = getelementptr i8, ptr %100, i32 16404
  %101 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr223) #14, !srcloc !422
  %102 = tail call i32 @llvm.bswap.i32(i32 %101)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !476
  %conv227 = zext i32 %102 to i64
  %scc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 6
  %103 = ptrtoint ptr %scc to i32
  call void @__asan_load8_noabort(i32 %103)
  %104 = load i64, ptr %scc, align 8
  %add229 = add i64 %104, %conv227
  store i64 %add229, ptr %scc, align 8
  %105 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %hw2, align 4
  %add.ptr237 = getelementptr i8, ptr %106, i32 16408
  %107 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr237) #14, !srcloc !422
  %108 = tail call i32 @llvm.bswap.i32(i32 %107)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !477
  %conv241 = zext i32 %108 to i64
  %ecol = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 7
  %109 = ptrtoint ptr %ecol to i32
  call void @__asan_load8_noabort(i32 %109)
  %110 = load i64, ptr %ecol, align 8
  %add243 = add i64 %110, %conv241
  store i64 %add243, ptr %ecol, align 8
  %111 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %hw2, align 4
  %add.ptr251 = getelementptr i8, ptr %112, i32 16412
  %113 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr251) #14, !srcloc !422
  %114 = tail call i32 @llvm.bswap.i32(i32 %113)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !478
  %conv255 = zext i32 %114 to i64
  %mcc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 8
  %115 = ptrtoint ptr %mcc to i32
  call void @__asan_load8_noabort(i32 %115)
  %116 = load i64, ptr %mcc, align 8
  %add257 = add i64 %116, %conv255
  store i64 %add257, ptr %mcc, align 8
  %117 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %hw2, align 4
  %add.ptr265 = getelementptr i8, ptr %118, i32 16416
  %119 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr265) #14, !srcloc !422
  %120 = tail call i32 @llvm.bswap.i32(i32 %119)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !479
  %conv269 = zext i32 %120 to i64
  %latecol = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 9
  %121 = ptrtoint ptr %latecol to i32
  call void @__asan_load8_noabort(i32 %121)
  %122 = load i64, ptr %latecol, align 8
  %add271 = add i64 %122, %conv269
  store i64 %add271, ptr %latecol, align 8
  %123 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %hw2, align 4
  %add.ptr279 = getelementptr i8, ptr %124, i32 16432
  %125 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr279) #14, !srcloc !422
  %126 = tail call i32 @llvm.bswap.i32(i32 %125)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !480
  %conv283 = zext i32 %126 to i64
  %dc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 11
  %127 = ptrtoint ptr %dc to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %dc, align 8
  %add285 = add i64 %128, %conv283
  store i64 %add285, ptr %dc, align 8
  %129 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %hw2, align 4
  %add.ptr293 = getelementptr i8, ptr %130, i32 16440
  %131 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr293) #14, !srcloc !422
  %132 = tail call i32 @llvm.bswap.i32(i32 %131)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !481
  %conv297 = zext i32 %132 to i64
  %sec = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 13
  %133 = ptrtoint ptr %sec to i32
  call void @__asan_load8_noabort(i32 %133)
  %134 = load i64, ptr %sec, align 8
  %add299 = add i64 %134, %conv297
  store i64 %add299, ptr %sec, align 8
  %135 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %hw2, align 4
  %add.ptr307 = getelementptr i8, ptr %136, i32 16448
  %137 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr307) #14, !srcloc !422
  %138 = tail call i32 @llvm.bswap.i32(i32 %137)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !482
  %conv311 = zext i32 %138 to i64
  %rlec = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 15
  %139 = ptrtoint ptr %rlec to i32
  call void @__asan_load8_noabort(i32 %139)
  %140 = load i64, ptr %rlec, align 8
  %add313 = add i64 %140, %conv311
  store i64 %add313, ptr %rlec, align 8
  %141 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %hw2, align 4
  %add.ptr321 = getelementptr i8, ptr %142, i32 16456
  %143 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr321) #14, !srcloc !422
  %144 = tail call i32 @llvm.bswap.i32(i32 %143)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !483
  %conv325 = zext i32 %144 to i64
  %xonrxc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 16
  %145 = ptrtoint ptr %xonrxc to i32
  call void @__asan_load8_noabort(i32 %145)
  %146 = load i64, ptr %xonrxc, align 8
  %add327 = add i64 %146, %conv325
  store i64 %add327, ptr %xonrxc, align 8
  %147 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %hw2, align 4
  %add.ptr335 = getelementptr i8, ptr %148, i32 16460
  %149 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr335) #14, !srcloc !422
  %150 = tail call i32 @llvm.bswap.i32(i32 %149)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !484
  %conv339 = zext i32 %150 to i64
  %xontxc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 17
  %151 = ptrtoint ptr %xontxc to i32
  call void @__asan_load8_noabort(i32 %151)
  %152 = load i64, ptr %xontxc, align 8
  %add341 = add i64 %152, %conv339
  store i64 %add341, ptr %xontxc, align 8
  %153 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %hw2, align 4
  %add.ptr349 = getelementptr i8, ptr %154, i32 16464
  %155 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr349) #14, !srcloc !422
  %156 = tail call i32 @llvm.bswap.i32(i32 %155)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !485
  %conv353 = zext i32 %156 to i64
  %xoffrxc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 18
  %157 = ptrtoint ptr %xoffrxc to i32
  call void @__asan_load8_noabort(i32 %157)
  %158 = load i64, ptr %xoffrxc, align 8
  %add355 = add i64 %158, %conv353
  store i64 %add355, ptr %xoffrxc, align 8
  %159 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %hw2, align 4
  %add.ptr363 = getelementptr i8, ptr %160, i32 16468
  %161 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr363) #14, !srcloc !422
  %162 = tail call i32 @llvm.bswap.i32(i32 %161)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !486
  %conv367 = zext i32 %162 to i64
  %xofftxc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 19
  %163 = ptrtoint ptr %xofftxc to i32
  call void @__asan_load8_noabort(i32 %163)
  %164 = load i64, ptr %xofftxc, align 8
  %add369 = add i64 %164, %conv367
  store i64 %add369, ptr %xofftxc, align 8
  %165 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %hw2, align 4
  %add.ptr377 = getelementptr i8, ptr %166, i32 16472
  %167 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr377) #14, !srcloc !422
  %168 = tail call i32 @llvm.bswap.i32(i32 %167)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !487
  %conv381 = zext i32 %168 to i64
  %fcruc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 20
  %169 = ptrtoint ptr %fcruc to i32
  call void @__asan_load8_noabort(i32 %169)
  %170 = load i64, ptr %fcruc, align 8
  %add383 = add i64 %170, %conv381
  store i64 %add383, ptr %fcruc, align 8
  %171 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %hw2, align 4
  %add.ptr391 = getelementptr i8, ptr %172, i32 16512
  %173 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr391) #14, !srcloc !422
  %174 = tail call i32 @llvm.bswap.i32(i32 %173)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !488
  %conv395 = zext i32 %174 to i64
  %gptc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 30
  %175 = ptrtoint ptr %gptc to i32
  call void @__asan_load8_noabort(i32 %175)
  %176 = load i64, ptr %gptc, align 8
  %add397 = add i64 %176, %conv395
  store i64 %add397, ptr %gptc, align 8
  %177 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %hw2, align 4
  %add.ptr405 = getelementptr i8, ptr %178, i32 16528
  %179 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr405) #14, !srcloc !422
  %180 = tail call i32 @llvm.bswap.i32(i32 %179)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !489
  %conv409 = zext i32 %180 to i64
  %gotcl = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 33
  %181 = ptrtoint ptr %gotcl to i32
  call void @__asan_load8_noabort(i32 %181)
  %182 = load i64, ptr %gotcl, align 8
  %add411 = add i64 %182, %conv409
  store i64 %add411, ptr %gotcl, align 8
  %183 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %hw2, align 4
  %add.ptr419 = getelementptr i8, ptr %184, i32 16532
  %185 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr419) #14, !srcloc !422
  %186 = tail call i32 @llvm.bswap.i32(i32 %185)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !490
  %conv423 = zext i32 %186 to i64
  %gotch = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 34
  %187 = ptrtoint ptr %gotch to i32
  call void @__asan_load8_noabort(i32 %187)
  %188 = load i64, ptr %gotch, align 8
  %add425 = add i64 %188, %conv423
  store i64 %add425, ptr %gotch, align 8
  %189 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %hw2, align 4
  %add.ptr433 = getelementptr i8, ptr %190, i32 16544
  %191 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr433) #14, !srcloc !422
  %192 = tail call i32 @llvm.bswap.i32(i32 %191)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !491
  %conv437 = zext i32 %192 to i64
  %rnbc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 35
  %193 = ptrtoint ptr %rnbc to i32
  call void @__asan_load8_noabort(i32 %193)
  %194 = load i64, ptr %rnbc, align 8
  %add439 = add i64 %194, %conv437
  store i64 %add439, ptr %rnbc, align 8
  %195 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %hw2, align 4
  %add.ptr447 = getelementptr i8, ptr %196, i32 16548
  %197 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr447) #14, !srcloc !422
  %198 = tail call i32 @llvm.bswap.i32(i32 %197)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !492
  %conv451 = zext i32 %198 to i64
  %ruc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 36
  %199 = ptrtoint ptr %ruc to i32
  call void @__asan_load8_noabort(i32 %199)
  %200 = load i64, ptr %ruc, align 8
  %add453 = add i64 %200, %conv451
  store i64 %add453, ptr %ruc, align 8
  %201 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %hw2, align 4
  %add.ptr461 = getelementptr i8, ptr %202, i32 16552
  %203 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr461) #14, !srcloc !422
  %204 = tail call i32 @llvm.bswap.i32(i32 %203)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !493
  %conv465 = zext i32 %204 to i64
  %rfc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 37
  %205 = ptrtoint ptr %rfc to i32
  call void @__asan_load8_noabort(i32 %205)
  %206 = load i64, ptr %rfc, align 8
  %add467 = add i64 %206, %conv465
  store i64 %add467, ptr %rfc, align 8
  %207 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %hw2, align 4
  %add.ptr475 = getelementptr i8, ptr %208, i32 16560
  %209 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr475) #14, !srcloc !422
  %210 = tail call i32 @llvm.bswap.i32(i32 %209)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !494
  %conv479 = zext i32 %210 to i64
  %rjc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 40
  %211 = ptrtoint ptr %rjc to i32
  call void @__asan_load8_noabort(i32 %211)
  %212 = load i64, ptr %rjc, align 8
  %add481 = add i64 %212, %conv479
  store i64 %add481, ptr %rjc, align 8
  %213 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %hw2, align 4
  %add.ptr489 = getelementptr i8, ptr %214, i32 16576
  %215 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr489) #14, !srcloc !422
  %216 = tail call i32 @llvm.bswap.i32(i32 %215)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !495
  %conv493 = zext i32 %216 to i64
  %torl = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 44
  %217 = ptrtoint ptr %torl to i32
  call void @__asan_load8_noabort(i32 %217)
  %218 = load i64, ptr %torl, align 8
  %add495 = add i64 %218, %conv493
  store i64 %add495, ptr %torl, align 8
  %219 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %hw2, align 4
  %add.ptr503 = getelementptr i8, ptr %220, i32 16580
  %221 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr503) #14, !srcloc !422
  %222 = tail call i32 @llvm.bswap.i32(i32 %221)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !496
  %conv507 = zext i32 %222 to i64
  %torh = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 45
  %223 = ptrtoint ptr %torh to i32
  call void @__asan_load8_noabort(i32 %223)
  %224 = load i64, ptr %torh, align 8
  %add509 = add i64 %224, %conv507
  store i64 %add509, ptr %torh, align 8
  %225 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %hw2, align 4
  %add.ptr517 = getelementptr i8, ptr %226, i32 16584
  %227 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr517) #14, !srcloc !422
  %228 = tail call i32 @llvm.bswap.i32(i32 %227)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !497
  %conv521 = zext i32 %228 to i64
  %totl = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 46
  %229 = ptrtoint ptr %totl to i32
  call void @__asan_load8_noabort(i32 %229)
  %230 = load i64, ptr %totl, align 8
  %add523 = add i64 %230, %conv521
  store i64 %add523, ptr %totl, align 8
  %231 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %hw2, align 4
  %add.ptr531 = getelementptr i8, ptr %232, i32 16588
  %233 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr531) #14, !srcloc !422
  %234 = tail call i32 @llvm.bswap.i32(i32 %233)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !498
  %conv535 = zext i32 %234 to i64
  %toth = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 47
  %235 = ptrtoint ptr %toth to i32
  call void @__asan_load8_noabort(i32 %235)
  %236 = load i64, ptr %toth, align 8
  %add537 = add i64 %236, %conv535
  store i64 %add537, ptr %toth, align 8
  %237 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %hw2, align 4
  %add.ptr545 = getelementptr i8, ptr %238, i32 16592
  %239 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr545) #14, !srcloc !422
  %240 = tail call i32 @llvm.bswap.i32(i32 %239)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !499
  %conv549 = zext i32 %240 to i64
  %tpr = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 48
  %241 = ptrtoint ptr %tpr to i32
  call void @__asan_load8_noabort(i32 %241)
  %242 = load i64, ptr %tpr, align 8
  %add551 = add i64 %242, %conv549
  store i64 %add551, ptr %tpr, align 8
  %243 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %hw2, align 4
  %add.ptr559 = getelementptr i8, ptr %244, i32 16600
  %245 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr559) #14, !srcloc !422
  %246 = tail call i32 @llvm.bswap.i32(i32 %245)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !500
  %conv563 = zext i32 %246 to i64
  %ptc64 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 50
  %247 = ptrtoint ptr %ptc64 to i32
  call void @__asan_load8_noabort(i32 %247)
  %248 = load i64, ptr %ptc64, align 8
  %add565 = add i64 %248, %conv563
  store i64 %add565, ptr %ptc64, align 8
  %249 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %hw2, align 4
  %add.ptr573 = getelementptr i8, ptr %250, i32 16604
  %251 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr573) #14, !srcloc !422
  %252 = tail call i32 @llvm.bswap.i32(i32 %251)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !501
  %conv577 = zext i32 %252 to i64
  %ptc127 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 51
  %253 = ptrtoint ptr %ptc127 to i32
  call void @__asan_load8_noabort(i32 %253)
  %254 = load i64, ptr %ptc127, align 8
  %add579 = add i64 %254, %conv577
  store i64 %add579, ptr %ptc127, align 8
  %255 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %hw2, align 4
  %add.ptr587 = getelementptr i8, ptr %256, i32 16608
  %257 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr587) #14, !srcloc !422
  %258 = tail call i32 @llvm.bswap.i32(i32 %257)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !502
  %conv591 = zext i32 %258 to i64
  %ptc255 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 52
  %259 = ptrtoint ptr %ptc255 to i32
  call void @__asan_load8_noabort(i32 %259)
  %260 = load i64, ptr %ptc255, align 8
  %add593 = add i64 %260, %conv591
  store i64 %add593, ptr %ptc255, align 8
  %261 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %hw2, align 4
  %add.ptr601 = getelementptr i8, ptr %262, i32 16612
  %263 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr601) #14, !srcloc !422
  %264 = tail call i32 @llvm.bswap.i32(i32 %263)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !503
  %conv605 = zext i32 %264 to i64
  %ptc511 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 53
  %265 = ptrtoint ptr %ptc511 to i32
  call void @__asan_load8_noabort(i32 %265)
  %266 = load i64, ptr %ptc511, align 8
  %add607 = add i64 %266, %conv605
  store i64 %add607, ptr %ptc511, align 8
  %267 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %hw2, align 4
  %add.ptr615 = getelementptr i8, ptr %268, i32 16616
  %269 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr615) #14, !srcloc !422
  %270 = tail call i32 @llvm.bswap.i32(i32 %269)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !504
  %conv619 = zext i32 %270 to i64
  %ptc1023 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 54
  %271 = ptrtoint ptr %ptc1023 to i32
  call void @__asan_load8_noabort(i32 %271)
  %272 = load i64, ptr %ptc1023, align 8
  %add621 = add i64 %272, %conv619
  store i64 %add621, ptr %ptc1023, align 8
  %273 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load ptr, ptr %hw2, align 4
  %add.ptr629 = getelementptr i8, ptr %274, i32 16620
  %275 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr629) #14, !srcloc !422
  %276 = tail call i32 @llvm.bswap.i32(i32 %275)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !505
  %conv633 = zext i32 %276 to i64
  %ptc1522 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 55
  %277 = ptrtoint ptr %ptc1522 to i32
  call void @__asan_load8_noabort(i32 %277)
  %278 = load i64, ptr %ptc1522, align 8
  %add635 = add i64 %278, %conv633
  store i64 %add635, ptr %ptc1522, align 8
  %279 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load ptr, ptr %hw2, align 4
  %add.ptr643 = getelementptr i8, ptr %280, i32 16624
  %281 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr643) #14, !srcloc !422
  %282 = tail call i32 @llvm.bswap.i32(i32 %281)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !506
  %conv647 = zext i32 %282 to i64
  %mptc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 56
  %283 = ptrtoint ptr %mptc to i32
  call void @__asan_load8_noabort(i32 %283)
  %284 = load i64, ptr %mptc, align 8
  %add649 = add i64 %284, %conv647
  store i64 %add649, ptr %mptc, align 8
  %285 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load ptr, ptr %hw2, align 4
  %add.ptr657 = getelementptr i8, ptr %286, i32 16628
  %287 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr657) #14, !srcloc !422
  %288 = tail call i32 @llvm.bswap.i32(i32 %287)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !507
  %conv661 = zext i32 %288 to i64
  %bptc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 57
  %289 = ptrtoint ptr %bptc to i32
  call void @__asan_load8_noabort(i32 %289)
  %290 = load i64, ptr %bptc, align 8
  %add663 = add i64 %290, %conv661
  store i64 %add663, ptr %bptc, align 8
  %291 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %hw2, align 4
  %add.ptr671 = getelementptr i8, ptr %292, i32 16596
  %293 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr671) #14, !srcloc !422
  %294 = tail call i32 @llvm.bswap.i32(i32 %293)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !508
  %tx_packet_delta = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 33
  %295 = ptrtoint ptr %tx_packet_delta to i32
  call void @__asan_store4_noabort(i32 %295)
  store i32 %294, ptr %tx_packet_delta, align 4
  %conv676 = zext i32 %294 to i64
  %tpt = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 49
  %296 = ptrtoint ptr %tpt to i32
  call void @__asan_load8_noabort(i32 %296)
  %297 = load i64, ptr %tpt, align 8
  %add678 = add i64 %297, %conv676
  store i64 %add678, ptr %tpt, align 8
  %298 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %hw2, align 4
  %add.ptr686 = getelementptr i8, ptr %299, i32 16424
  %300 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr686) #14, !srcloc !422
  %301 = tail call i32 @llvm.bswap.i32(i32 %300)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !509
  %collision_delta = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 32
  %302 = ptrtoint ptr %collision_delta to i32
  call void @__asan_store4_noabort(i32 %302)
  store i32 %301, ptr %collision_delta, align 4
  %conv691 = zext i32 %301 to i64
  %colc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 10
  %303 = ptrtoint ptr %colc to i32
  call void @__asan_load8_noabort(i32 %303)
  %304 = load i64, ptr %colc, align 8
  %add693 = add i64 %304, %conv691
  store i64 %add693, ptr %colc, align 8
  %305 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %306)
  %cmp695 = icmp ugt i32 %306, 2
  br i1 %cmp695, label %if.then697, label %do.body7.if.end782_crit_edge

do.body7.if.end782_crit_edge:                     ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end782

if.then697:                                       ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #16
  %307 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load ptr, ptr %hw2, align 4
  %add.ptr705 = getelementptr i8, ptr %308, i32 16388
  %309 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr705) #14, !srcloc !422
  %310 = tail call i32 @llvm.bswap.i32(i32 %309)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !510
  %conv709 = zext i32 %310 to i64
  %algnerrc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 1
  %311 = ptrtoint ptr %algnerrc to i32
  call void @__asan_load8_noabort(i32 %311)
  %312 = load i64, ptr %algnerrc, align 8
  %add711 = add i64 %312, %conv709
  store i64 %add711, ptr %algnerrc, align 8
  %313 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %hw2, align 4
  %add.ptr719 = getelementptr i8, ptr %314, i32 16396
  %315 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr719) #14, !srcloc !422
  %316 = tail call i32 @llvm.bswap.i32(i32 %315)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !511
  %conv723 = zext i32 %316 to i64
  %rxerrc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 3
  %317 = ptrtoint ptr %rxerrc to i32
  call void @__asan_load8_noabort(i32 %317)
  %318 = load i64, ptr %rxerrc, align 8
  %add725 = add i64 %318, %conv723
  store i64 %add725, ptr %rxerrc, align 8
  %319 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %hw2, align 4
  %add.ptr733 = getelementptr i8, ptr %320, i32 16436
  %321 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr733) #14, !srcloc !422
  %322 = tail call i32 @llvm.bswap.i32(i32 %321)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !512
  %conv737 = zext i32 %322 to i64
  %tncrs = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 12
  %323 = ptrtoint ptr %tncrs to i32
  call void @__asan_load8_noabort(i32 %323)
  %324 = load i64, ptr %tncrs, align 8
  %add739 = add i64 %324, %conv737
  store i64 %add739, ptr %tncrs, align 8
  %325 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %hw2, align 4
  %add.ptr747 = getelementptr i8, ptr %326, i32 16444
  %327 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr747) #14, !srcloc !422
  %328 = tail call i32 @llvm.bswap.i32(i32 %327)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !513
  %conv751 = zext i32 %328 to i64
  %cexterr = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 14
  %329 = ptrtoint ptr %cexterr to i32
  call void @__asan_load8_noabort(i32 %329)
  %330 = load i64, ptr %cexterr, align 8
  %add753 = add i64 %330, %conv751
  store i64 %add753, ptr %cexterr, align 8
  %331 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load ptr, ptr %hw2, align 4
  %add.ptr761 = getelementptr i8, ptr %332, i32 16632
  %333 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr761) #14, !srcloc !422
  %334 = tail call i32 @llvm.bswap.i32(i32 %333)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !514
  %conv765 = zext i32 %334 to i64
  %tsctc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 58
  %335 = ptrtoint ptr %tsctc to i32
  call void @__asan_load8_noabort(i32 %335)
  %336 = load i64, ptr %tsctc, align 8
  %add767 = add i64 %336, %conv765
  store i64 %add767, ptr %tsctc, align 8
  %337 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load ptr, ptr %hw2, align 4
  %add.ptr775 = getelementptr i8, ptr %338, i32 16636
  %339 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr775) #14, !srcloc !422
  %340 = tail call i32 @llvm.bswap.i32(i32 %339)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !515
  %conv779 = zext i32 %340 to i64
  %tsctfc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 59
  %341 = ptrtoint ptr %tsctfc to i32
  call void @__asan_load8_noabort(i32 %341)
  %342 = load i64, ptr %tsctfc, align 8
  %add781 = add i64 %342, %conv779
  store i64 %add781, ptr %tsctfc, align 8
  br label %if.end782

if.end782:                                        ; preds = %if.then697, %do.body7.if.end782_crit_edge
  %343 = ptrtoint ptr %mprc to i32
  call void @__asan_load8_noabort(i32 %343)
  %344 = load i64, ptr %mprc, align 8
  %conv785 = trunc i64 %344 to i32
  %multicast = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 8
  %345 = ptrtoint ptr %multicast to i32
  call void @__asan_store4_noabort(i32 %345)
  store i32 %conv785, ptr %multicast, align 8
  %346 = ptrtoint ptr %colc to i32
  call void @__asan_load8_noabort(i32 %346)
  %347 = load i64, ptr %colc, align 8
  %conv789 = trunc i64 %347 to i32
  %collisions = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 9
  %348 = ptrtoint ptr %collisions to i32
  call void @__asan_store4_noabort(i32 %348)
  store i32 %conv789, ptr %collisions, align 4
  %rxerrc792 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 3
  %349 = ptrtoint ptr %rxerrc792 to i32
  call void @__asan_load8_noabort(i32 %349)
  %350 = load i64, ptr %rxerrc792, align 8
  %351 = ptrtoint ptr %stats to i32
  call void @__asan_load8_noabort(i32 %351)
  %352 = load i64, ptr %stats, align 8
  %add795 = add i64 %352, %350
  %algnerrc797 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 1
  %353 = ptrtoint ptr %algnerrc797 to i32
  call void @__asan_load8_noabort(i32 %353)
  %354 = load i64, ptr %algnerrc797, align 8
  %add798 = add i64 %add795, %354
  %355 = ptrtoint ptr %ruc to i32
  call void @__asan_load8_noabort(i32 %355)
  %356 = load i64, ptr %ruc, align 8
  %add801 = add i64 %add798, %356
  %357 = ptrtoint ptr %roc to i32
  call void @__asan_load8_noabort(i32 %357)
  %358 = load i64, ptr %roc, align 8
  %add804 = add i64 %add801, %358
  %cexterr806 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 14
  %359 = ptrtoint ptr %cexterr806 to i32
  call void @__asan_load8_noabort(i32 %359)
  %360 = load i64, ptr %cexterr806, align 8
  %add807 = add i64 %add804, %360
  %conv808 = trunc i64 %add807 to i32
  %rx_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 4
  %361 = ptrtoint ptr %rx_errors to i32
  call void @__asan_store4_noabort(i32 %361)
  store i32 %conv808, ptr %rx_errors, align 8
  %362 = load i64, ptr %ruc, align 8
  %363 = load i64, ptr %roc, align 8
  %add814 = add i64 %363, %362
  %rlerrc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 39
  %364 = ptrtoint ptr %rlerrc to i32
  call void @__asan_store8_noabort(i32 %364)
  store i64 %add814, ptr %rlerrc, align 8
  %conv818 = trunc i64 %add814 to i32
  %rx_length_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 10
  %365 = ptrtoint ptr %rx_length_errors to i32
  call void @__asan_store4_noabort(i32 %365)
  store i32 %conv818, ptr %rx_length_errors, align 8
  %366 = load i64, ptr %stats, align 8
  %conv822 = trunc i64 %366 to i32
  %rx_crc_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 12
  %367 = ptrtoint ptr %rx_crc_errors to i32
  call void @__asan_store4_noabort(i32 %367)
  store i32 %conv822, ptr %rx_crc_errors, align 8
  %368 = load i64, ptr %algnerrc797, align 8
  %conv826 = trunc i64 %368 to i32
  %rx_frame_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 13
  %369 = ptrtoint ptr %rx_frame_errors to i32
  call void @__asan_store4_noabort(i32 %369)
  store i32 %conv826, ptr %rx_frame_errors, align 4
  %370 = ptrtoint ptr %mpc to i32
  call void @__asan_load8_noabort(i32 %370)
  %371 = load i64, ptr %mpc, align 8
  %conv830 = trunc i64 %371 to i32
  %rx_missed_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 15
  %372 = ptrtoint ptr %rx_missed_errors to i32
  call void @__asan_store4_noabort(i32 %372)
  store i32 %conv830, ptr %rx_missed_errors, align 4
  %373 = ptrtoint ptr %ecol to i32
  call void @__asan_load8_noabort(i32 %373)
  %374 = load i64, ptr %ecol, align 8
  %375 = ptrtoint ptr %latecol to i32
  call void @__asan_load8_noabort(i32 %375)
  %376 = load i64, ptr %latecol, align 8
  %add836 = add i64 %376, %374
  %txerrc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 4
  %377 = ptrtoint ptr %txerrc to i32
  call void @__asan_store8_noabort(i32 %377)
  store i64 %add836, ptr %txerrc, align 8
  %conv840 = trunc i64 %add836 to i32
  %tx_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 5
  %378 = ptrtoint ptr %tx_errors to i32
  call void @__asan_store4_noabort(i32 %378)
  store i32 %conv840, ptr %tx_errors, align 4
  %379 = load i64, ptr %ecol, align 8
  %conv844 = trunc i64 %379 to i32
  %tx_aborted_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 16
  %380 = ptrtoint ptr %tx_aborted_errors to i32
  call void @__asan_store4_noabort(i32 %380)
  store i32 %conv844, ptr %tx_aborted_errors, align 8
  %381 = load i64, ptr %latecol, align 8
  %conv848 = trunc i64 %381 to i32
  %tx_window_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 20
  %382 = ptrtoint ptr %tx_window_errors to i32
  call void @__asan_store4_noabort(i32 %382)
  store i32 %conv848, ptr %tx_window_errors, align 8
  %tncrs851 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 12
  %383 = ptrtoint ptr %tncrs851 to i32
  call void @__asan_load8_noabort(i32 %383)
  %384 = load i64, ptr %tncrs851, align 8
  %conv852 = trunc i64 %384 to i32
  %tx_carrier_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 17
  %385 = ptrtoint ptr %tx_carrier_errors to i32
  call void @__asan_store4_noabort(i32 %385)
  store i32 %conv852, ptr %tx_carrier_errors, align 4
  %bad_tx_carr_stats_fd = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 81
  %386 = ptrtoint ptr %bad_tx_carr_stats_fd to i32
  call void @__asan_load1_noabort(i32 %386)
  %387 = load i8, ptr %bad_tx_carr_stats_fd, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %387)
  %tobool854.not = icmp eq i8 %387, 0
  br i1 %tobool854.not, label %if.end782.if.end864_crit_edge, label %land.lhs.true

if.end782.if.end864_crit_edge:                    ; preds = %if.end782
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end864

land.lhs.true:                                    ; preds = %if.end782
  %link_duplex = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 8
  %388 = ptrtoint ptr %link_duplex to i32
  call void @__asan_load2_noabort(i32 %388)
  %389 = load i16, ptr %link_duplex, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %389)
  %cmp857 = icmp eq i16 %389, 2
  br i1 %cmp857, label %if.then859, label %land.lhs.true.if.end864_crit_edge

land.lhs.true.if.end864_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end864

if.then859:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %390 = ptrtoint ptr %tx_carrier_errors to i32
  call void @__asan_store4_noabort(i32 %390)
  store i32 0, ptr %tx_carrier_errors, align 4
  %391 = ptrtoint ptr %tncrs851 to i32
  call void @__asan_store8_noabort(i32 %391)
  store i64 0, ptr %tncrs851, align 8
  br label %if.end864

if.end864:                                        ; preds = %if.then859, %land.lhs.true.if.end864_crit_edge, %if.end782.if.end864_crit_edge
  %media_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 6
  %392 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %393)
  %cmp865 = icmp eq i32 %393, 0
  br i1 %cmp865, label %if.then867, label %if.end864.if.end895_crit_edge

if.end864.if.end895_crit_edge:                    ; preds = %if.end864
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end895

if.then867:                                       ; preds = %if.end864
  %394 = ptrtoint ptr %link_speed to i32
  call void @__asan_load2_noabort(i32 %394)
  %395 = load i16, ptr %link_speed, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1000, i16 %395)
  %cmp870 = icmp eq i16 %395, 1000
  br i1 %cmp870, label %land.lhs.true872, label %if.then867.if.end880_crit_edge

if.then867.if.end880_crit_edge:                   ; preds = %if.then867
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end880

land.lhs.true872:                                 ; preds = %if.then867
  %call873 = call i32 @e1000_read_phy_reg(ptr noundef %hw2, i32 noundef 10, ptr noundef nonnull %phy_tmp) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call873)
  %tobool874.not = icmp eq i32 %call873, 0
  br i1 %tobool874.not, label %if.then875, label %land.lhs.true872.if.end880_crit_edge

land.lhs.true872.if.end880_crit_edge:             ; preds = %land.lhs.true872
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end880

if.then875:                                       ; preds = %land.lhs.true872
  call void @__sanitizer_cov_trace_pc() #16
  %396 = ptrtoint ptr %phy_tmp to i32
  call void @__asan_load2_noabort(i32 %396)
  %397 = load i16, ptr %phy_tmp, align 2
  %398 = and i16 %397, 255
  store i16 %398, ptr %phy_tmp, align 2
  %conv878 = zext i16 %398 to i32
  %phy_stats = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 56
  %399 = ptrtoint ptr %phy_stats to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load i32, ptr %phy_stats, align 8
  %add879 = add i32 %400, %conv878
  store i32 %add879, ptr %phy_stats, align 8
  br label %if.end880

if.end880:                                        ; preds = %if.then875, %land.lhs.true872.if.end880_crit_edge, %if.then867.if.end880_crit_edge
  %401 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %402)
  %cmp882 = icmp ult i32 %402, 9
  br i1 %cmp882, label %land.lhs.true884, label %if.end880.if.end895_crit_edge

if.end880.if.end895_crit_edge:                    ; preds = %if.end880
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end895

land.lhs.true884:                                 ; preds = %if.end880
  %phy_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 4
  %403 = ptrtoint ptr %phy_type to i32
  call void @__asan_load4_noabort(i32 %403)
  %404 = load i32, ptr %phy_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %404)
  %cmp885 = icmp eq i32 %404, 0
  br i1 %cmp885, label %land.lhs.true887, label %land.lhs.true884.if.end895_crit_edge

land.lhs.true884.if.end895_crit_edge:             ; preds = %land.lhs.true884
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end895

land.lhs.true887:                                 ; preds = %land.lhs.true884
  %call888 = call i32 @e1000_read_phy_reg(ptr noundef %hw2, i32 noundef 21, ptr noundef nonnull %phy_tmp) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call888)
  %tobool889.not = icmp eq i32 %call888, 0
  br i1 %tobool889.not, label %if.then890, label %land.lhs.true887.if.end895_crit_edge

land.lhs.true887.if.end895_crit_edge:             ; preds = %land.lhs.true887
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end895

if.then890:                                       ; preds = %land.lhs.true887
  call void @__sanitizer_cov_trace_pc() #16
  %405 = ptrtoint ptr %phy_tmp to i32
  call void @__asan_load2_noabort(i32 %405)
  %406 = load i16, ptr %phy_tmp, align 2
  %conv891 = zext i16 %406 to i32
  %receive_errors = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 56, i32 1
  %407 = ptrtoint ptr %receive_errors to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load i32, ptr %receive_errors, align 4
  %add893 = add i32 %408, %conv891
  store i32 %add893, ptr %receive_errors, align 4
  br label %if.end895

if.end895:                                        ; preds = %if.then890, %land.lhs.true887.if.end895_crit_edge, %land.lhs.true884.if.end895_crit_edge, %if.end880.if.end895_crit_edge, %if.end864.if.end895_crit_edge
  %has_smbus = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 82
  %409 = ptrtoint ptr %has_smbus to i32
  call void @__asan_load1_noabort(i32 %409)
  %410 = load i8, ptr %has_smbus, align 4, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %410)
  %tobool896.not = icmp eq i8 %410, 0
  br i1 %tobool896.not, label %if.end895.if.end940_crit_edge, label %if.then897

if.end895.if.end940_crit_edge:                    ; preds = %if.end895
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end940

if.then897:                                       ; preds = %if.end895
  call void @__sanitizer_cov_trace_pc() #16
  %411 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load ptr, ptr %hw2, align 4
  %add.ptr905 = getelementptr i8, ptr %412, i32 16572
  %413 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr905) #14, !srcloc !422
  %414 = call i32 @llvm.bswap.i32(i32 %413)
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !516
  %conv909 = zext i32 %414 to i64
  %mgptc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 43
  %415 = ptrtoint ptr %mgptc to i32
  call void @__asan_load8_noabort(i32 %415)
  %416 = load i64, ptr %mgptc, align 8
  %add911 = add i64 %416, %conv909
  store i64 %add911, ptr %mgptc, align 8
  %417 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %417)
  %418 = load ptr, ptr %hw2, align 4
  %add.ptr919 = getelementptr i8, ptr %418, i32 16564
  %419 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr919) #14, !srcloc !422
  %420 = call i32 @llvm.bswap.i32(i32 %419)
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !517
  %conv923 = zext i32 %420 to i64
  %mgprc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 41
  %421 = ptrtoint ptr %mgprc to i32
  call void @__asan_load8_noabort(i32 %421)
  %422 = load i64, ptr %mgprc, align 8
  %add925 = add i64 %422, %conv923
  store i64 %add925, ptr %mgprc, align 8
  %423 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %423)
  %424 = load ptr, ptr %hw2, align 4
  %add.ptr933 = getelementptr i8, ptr %424, i32 16568
  %425 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr933) #14, !srcloc !422
  %426 = call i32 @llvm.bswap.i32(i32 %425)
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !518
  %conv937 = zext i32 %426 to i64
  %mgpdc = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 42
  %427 = ptrtoint ptr %mgpdc to i32
  call void @__asan_load8_noabort(i32 %427)
  %428 = load i64, ptr %mgpdc, align 8
  %add939 = add i64 %428, %conv937
  store i64 %add939, ptr %mgpdc, align 8
  br label %if.end940

if.end940:                                        ; preds = %if.then897, %if.end895.if.end940_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %stats_lock, i32 noundef %call11) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end940, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_tmp) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_pci_set_mwi(ptr nocapture noundef readonly %hw) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 7
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %pdev = getelementptr inbounds %struct.e1000_adapter, ptr %1, i32 0, i32 52
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %call = tail call i32 @pci_set_mwi(ptr noundef %3) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %do.body

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

do.body:                                          ; preds = %entry
  %msg_enable = getelementptr inbounds %struct.e1000_adapter, ptr %1, i32 0, i32 60
  %4 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %msg_enable, align 8
  %and = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.if.end3_crit_edge, label %if.then2

do.body.if.end3_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.then2:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %1, i32 0, i32 51
  %6 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %netdev, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %7, ptr noundef nonnull @.str.7) #17
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %do.body.if.end3_crit_edge, %entry.if.end3_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_set_mwi(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_pci_clear_mwi(ptr nocapture noundef readonly %hw) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 7
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %pdev = getelementptr inbounds %struct.e1000_adapter, ptr %1, i32 0, i32 52
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  tail call void @pci_clear_mwi(ptr noundef %3) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_clear_mwi(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_pcix_get_mmrbc(ptr nocapture noundef readonly %hw) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 7
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %pdev = getelementptr inbounds %struct.e1000_adapter, ptr %1, i32 0, i32 52
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %call = tail call i32 @pcix_get_mmrbc(ptr noundef %3) #14
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcix_get_mmrbc(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_pcix_set_mmrbc(ptr nocapture noundef readonly %hw, i32 noundef %mmrbc) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %back = getelementptr inbounds %struct.e1000_hw, ptr %hw, i32 0, i32 7
  %0 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %back, align 4
  %pdev = getelementptr inbounds %struct.e1000_adapter, ptr %1, i32 0, i32 52
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %call = tail call i32 @pcix_set_mmrbc(ptr noundef %3, i32 noundef %mmrbc) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcix_set_mmrbc(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @e1000_io_write(ptr nocapture noundef readnone %hw, i32 noundef %port, i32 noundef %value) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !519
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %value)
  %and = and i32 %port, 1048575
  %add = or i32 %and, -18874368
  %1 = inttoptr i32 %add to ptr
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr nonnull elementtype(i32) %1, i32 %0) #14, !srcloc !421
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @e1000_set_spd_dplx(ptr nocapture noundef %adapter, i32 noundef %spd, i8 noundef zeroext %dplx) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %autoneg = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 55
  %0 = ptrtoint ptr %autoneg to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %autoneg, align 1
  %and = and i32 %spd, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.do.body_crit_edge

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

lor.lhs.false:                                    ; preds = %entry
  %conv = zext i8 %dplx to i32
  %and2 = and i32 %conv, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.end, label %lor.lhs.false.do.body_crit_edge

lor.lhs.false.do.body_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end:                                           ; preds = %lor.lhs.false
  %media_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 6
  %1 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %media_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %cmp = icmp ne i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %spd)
  %cmp5.not = icmp eq i32 %spd, 1000
  %or.cond = or i1 %cmp5.not, %cmp
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %dplx)
  %cmp9.not = icmp eq i8 %dplx, 1
  %or.cond41 = or i1 %cmp9.not, %or.cond
  br i1 %or.cond41, label %if.end12, label %if.end.do.body_crit_edge

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end12:                                         ; preds = %if.end
  %add = add i32 %conv, %spd
  %3 = zext i32 %add to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.219)
  switch i32 %add, label %if.end12.do.body_crit_edge [
    i32 10, label %sw.bb
    i32 11, label %sw.bb14
    i32 100, label %sw.bb16
    i32 101, label %sw.bb18
    i32 1001, label %sw.bb20
  ]

if.end12.do.body_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

sw.bb:                                            ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %forced_speed_duplex = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 57
  %4 = ptrtoint ptr %forced_speed_duplex to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %forced_speed_duplex, align 1
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %forced_speed_duplex15 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 57
  %5 = ptrtoint ptr %forced_speed_duplex15 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %forced_speed_duplex15, align 1
  br label %sw.epilog

sw.bb16:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %forced_speed_duplex17 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 57
  %6 = ptrtoint ptr %forced_speed_duplex17 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 2, ptr %forced_speed_duplex17, align 1
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %forced_speed_duplex19 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 57
  %7 = ptrtoint ptr %forced_speed_duplex19 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 3, ptr %forced_speed_duplex19, align 1
  br label %sw.epilog

sw.bb20:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %8 = ptrtoint ptr %autoneg to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %autoneg, align 1
  %autoneg_advertised = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 40
  %9 = ptrtoint ptr %autoneg_advertised to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 32, ptr %autoneg_advertised, align 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb
  %mdix = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 56
  %10 = ptrtoint ptr %mdix to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 0, ptr %mdix, align 4
  br label %cleanup

do.body:                                          ; preds = %if.end12.do.body_crit_edge, %if.end.do.body_crit_edge, %lor.lhs.false.do.body_crit_edge, %entry.do.body_crit_edge
  %msg_enable = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 60
  %11 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %msg_enable, align 8
  %and23 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %do.body.cleanup_crit_edge, label %if.then25

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then25:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %13 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %netdev, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str.8) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then25, %do.body.cleanup_crit_edge, %sw.epilog
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -22, %if.then25 ], [ -22, %do.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pci_register_driver(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_probe(ptr noundef %pdev, ptr nocapture noundef readnone %ent) #4 align 64 {
entry:
  %eeprom_data = alloca i16, align 2
  %tmp = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %eeprom_data) #14
  %0 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 0, ptr %eeprom_data, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %tmp) #14
  %1 = ptrtoint ptr %tmp to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 0, ptr %tmp, align 2
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 8
  %2 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %device.i, align 2
  %4 = zext i16 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.220)
  switch i16 %3, label %if.else [
    i16 4110, label %entry.if.then_crit_edge
    i16 4117, label %entry.if.then_crit_edge678
    i16 4119, label %entry.if.then_crit_edge679
    i16 4118, label %entry.if.then_crit_edge680
    i16 4126, label %entry.if.then_crit_edge681
    i16 4115, label %entry.if.then_crit_edge682
    i16 4120, label %entry.if.then_crit_edge683
    i16 4216, label %entry.if.then_crit_edge684
    i16 4116, label %entry.if.then_crit_edge685
    i16 4214, label %entry.if.then_crit_edge686
    i16 4220, label %entry.if.then_crit_edge687
    i16 4215, label %entry.if.then_crit_edge688
    i16 4104, label %entry.if.then_crit_edge689
    i16 4105, label %entry.if.then_crit_edge690
    i16 4108, label %entry.if.then_crit_edge691
    i16 4109, label %entry.if.then_crit_edge692
    i16 4111, label %entry.if.then_crit_edge693
    i16 4113, label %entry.if.then_crit_edge694
    i16 4112, label %entry.if.then_crit_edge695
    i16 4114, label %entry.if.then_crit_edge696
    i16 4125, label %entry.if.then_crit_edge697
  ]

entry.if.then_crit_edge697:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge696:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge695:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge694:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge693:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge692:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge691:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge690:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge689:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge688:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge687:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge686:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge685:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge684:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge683:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge682:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge681:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge680:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge679:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge678:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then:                                          ; preds = %entry.if.then_crit_edge, %entry.if.then_crit_edge678, %entry.if.then_crit_edge679, %entry.if.then_crit_edge680, %entry.if.then_crit_edge681, %entry.if.then_crit_edge682, %entry.if.then_crit_edge683, %entry.if.then_crit_edge684, %entry.if.then_crit_edge685, %entry.if.then_crit_edge686, %entry.if.then_crit_edge687, %entry.if.then_crit_edge688, %entry.if.then_crit_edge689, %entry.if.then_crit_edge690, %entry.if.then_crit_edge691, %entry.if.then_crit_edge692, %entry.if.then_crit_edge693, %entry.if.then_crit_edge694, %entry.if.then_crit_edge695, %entry.if.then_crit_edge696, %entry.if.then_crit_edge697
  %call1 = tail call i32 @pci_select_bars(ptr noundef %pdev, i32 noundef 768) #14
  %call2 = tail call i32 @pci_enable_device(ptr noundef %pdev) #14
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call3 = tail call i32 @pci_select_bars(ptr noundef %pdev, i32 noundef 512) #14
  %call4 = tail call i32 @pci_enable_device_mem(ptr noundef %pdev) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %retval.0.i655 = phi i32 [ 1, %if.then ], [ 0, %if.else ]
  %bars.0 = phi i32 [ %call1, %if.then ], [ %call3, %if.else ]
  %err.0 = phi i32 [ %call2, %if.then ], [ %call4, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool5.not = icmp eq i32 %err.0, 0
  br i1 %tobool5.not, label %if.end7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %call8 = tail call i32 @pci_request_selected_regions(ptr noundef %pdev, i32 noundef %bars.0, ptr noundef nonnull @e1000_driver_name) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %if.end7.if.then445_crit_edge

if.end7.if.then445_crit_edge:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then445

if.end11:                                         ; preds = %if.end7
  tail call void @pci_set_master(ptr noundef %pdev) #14
  %call12 = tail call i32 @pci_save_state(ptr noundef %pdev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %if.end11.err_pci_reg.thread668_crit_edge

if.end11.err_pci_reg.thread668_crit_edge:         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_pci_reg.thread668

if.end15:                                         ; preds = %if.end11
  %call16 = tail call ptr @alloc_etherdev_mqs(i32 noundef 2304, i32 noundef 1, i32 noundef 1) #14
  %tobool17.not = icmp eq ptr %call16, null
  br i1 %tobool17.not, label %if.end15.err_pci_reg.thread668_crit_edge, label %if.end19

if.end15.err_pci_reg.thread668_crit_edge:         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_pci_reg.thread668

if.end19:                                         ; preds = %if.end15
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %parent = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 133, i32 1
  %5 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %dev, ptr %parent, align 8
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %6 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call16, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %call16, i32 2304
  %netdev22 = getelementptr i8, ptr %call16, i32 3288
  %7 = ptrtoint ptr %netdev22 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call16, ptr %netdev22, align 8
  %pdev23 = getelementptr i8, ptr %call16, i32 3292
  %8 = ptrtoint ptr %pdev23 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %pdev, ptr %pdev23, align 4
  %9 = load i32, ptr @debug, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %9)
  %cmp1.i = icmp ugt i32 %9, 31
  br i1 %cmp1.i, label %if.end19.netif_msg_init.exit_crit_edge, label %if.end.i

if.end19.netif_msg_init.exit_crit_edge:           ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_msg_init.exit

if.end.i:                                         ; preds = %if.end19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp2.i = icmp eq i32 %9, 0
  br i1 %cmp2.i, label %if.end.i.netif_msg_init.exit_crit_edge, label %if.end4.i

if.end.i.netif_msg_init.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_msg_init.exit

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %notmask.i = shl nsw i32 -1, %9
  %sub.i = xor i32 %notmask.i, -1
  br label %netif_msg_init.exit

netif_msg_init.exit:                              ; preds = %if.end4.i, %if.end.i.netif_msg_init.exit_crit_edge, %if.end19.netif_msg_init.exit_crit_edge
  %retval.0.i647 = phi i32 [ %sub.i, %if.end4.i ], [ 7, %if.end19.netif_msg_init.exit_crit_edge ], [ 0, %if.end.i.netif_msg_init.exit_crit_edge ]
  %msg_enable = getelementptr i8, ptr %call16, i32 4232
  %10 = ptrtoint ptr %msg_enable to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %retval.0.i647, ptr %msg_enable, align 8
  %bars25 = getelementptr i8, ptr %call16, i32 4248
  %11 = ptrtoint ptr %bars25 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %bars.0, ptr %bars25, align 8
  %need_ioport26 = getelementptr i8, ptr %call16, i32 4252
  %12 = ptrtoint ptr %need_ioport26 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %retval.0.i655, ptr %need_ioport26, align 4
  %hw27 = getelementptr i8, ptr %call16, i32 3296
  %back = getelementptr i8, ptr %call16, i32 3324
  %13 = ptrtoint ptr %back to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %add.ptr.i, ptr %back, align 4
  %call28 = tail call ptr @pci_ioremap_bar(ptr noundef %pdev, i32 noundef 0) #14
  %14 = ptrtoint ptr %hw27 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call28, ptr %hw27, align 4
  %tobool30.not = icmp eq ptr %call28, null
  br i1 %tobool30.not, label %netif_msg_init.exit.err_pci_reg_crit_edge, label %if.end32

netif_msg_init.exit.err_pci_reg_crit_edge:        ; preds = %netif_msg_init.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_pci_reg

if.end32:                                         ; preds = %netif_msg_init.exit
  %15 = ptrtoint ptr %need_ioport26 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %need_ioport26, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool34.not = icmp eq i32 %16, 0
  br i1 %tobool34.not, label %if.end32.if.end53_crit_edge, label %for.body.preheader

if.end32.if.end53_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end53

for.body.preheader:                               ; preds = %if.end32
  %arrayidx = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 1
  %end = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 1, i32 1
  %17 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp36 = icmp eq i32 %18, 0
  br i1 %cmp36, label %for.body.preheader.for.inc_crit_edge, label %cond.end

for.body.preheader.for.inc_crit_edge:             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

cond.end:                                         ; preds = %for.body.preheader
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx, align 8
  %sub = sub i32 %18, %20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub)
  %cmp42 = icmp eq i32 %sub, -1
  br i1 %cmp42, label %cond.end.for.inc_crit_edge, label %if.end44

cond.end.for.inc_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end44:                                         ; preds = %cond.end
  %flags = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 1, i32 3
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags, align 4
  %and = and i32 %22, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool47.not = icmp eq i32 %and, 0
  br i1 %tobool47.not, label %if.end44.for.inc_crit_edge, label %if.end44.if.then48_crit_edge

if.end44.if.then48_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48

if.end44.for.inc_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then48:                                        ; preds = %if.end44.4.if.then48_crit_edge, %if.end44.3.if.then48_crit_edge, %if.end44.2.if.then48_crit_edge, %if.end44.1.if.then48_crit_edge, %if.end44.if.then48_crit_edge
  %arrayidx.lcssa = phi ptr [ %arrayidx, %if.end44.if.then48_crit_edge ], [ %arrayidx.1, %if.end44.1.if.then48_crit_edge ], [ %arrayidx.2, %if.end44.2.if.then48_crit_edge ], [ %arrayidx.3, %if.end44.3.if.then48_crit_edge ], [ %arrayidx.4, %if.end44.4.if.then48_crit_edge ]
  %23 = ptrtoint ptr %arrayidx.lcssa to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx.lcssa, align 8
  %io_base = getelementptr i8, ptr %call16, i32 3392
  %25 = ptrtoint ptr %io_base to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %io_base, align 4
  br label %if.end53

for.inc:                                          ; preds = %if.end44.for.inc_crit_edge, %cond.end.for.inc_crit_edge, %for.body.preheader.for.inc_crit_edge
  %arrayidx.1 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 2
  %end.1 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 2, i32 1
  %26 = ptrtoint ptr %end.1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %end.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp36.1 = icmp eq i32 %27, 0
  br i1 %cmp36.1, label %for.inc.for.inc.1_crit_edge, label %cond.end.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1

cond.end.1:                                       ; preds = %for.inc
  %28 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.1, align 8
  %sub.1 = sub i32 %27, %29
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.1)
  %cmp42.1 = icmp eq i32 %sub.1, -1
  br i1 %cmp42.1, label %cond.end.1.for.inc.1_crit_edge, label %if.end44.1

cond.end.1.for.inc.1_crit_edge:                   ; preds = %cond.end.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1

if.end44.1:                                       ; preds = %cond.end.1
  %flags.1 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 2, i32 3
  %30 = ptrtoint ptr %flags.1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags.1, align 4
  %and.1 = and i32 %31, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool47.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool47.not.1, label %if.end44.1.for.inc.1_crit_edge, label %if.end44.1.if.then48_crit_edge

if.end44.1.if.then48_crit_edge:                   ; preds = %if.end44.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48

if.end44.1.for.inc.1_crit_edge:                   ; preds = %if.end44.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.end44.1.for.inc.1_crit_edge, %cond.end.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge
  %arrayidx.2 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 3
  %end.2 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 3, i32 1
  %32 = ptrtoint ptr %end.2 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %end.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp36.2 = icmp eq i32 %33, 0
  br i1 %cmp36.2, label %for.inc.1.for.inc.2_crit_edge, label %cond.end.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.2

cond.end.2:                                       ; preds = %for.inc.1
  %34 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx.2, align 8
  %sub.2 = sub i32 %33, %35
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.2)
  %cmp42.2 = icmp eq i32 %sub.2, -1
  br i1 %cmp42.2, label %cond.end.2.for.inc.2_crit_edge, label %if.end44.2

cond.end.2.for.inc.2_crit_edge:                   ; preds = %cond.end.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.2

if.end44.2:                                       ; preds = %cond.end.2
  %flags.2 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 3, i32 3
  %36 = ptrtoint ptr %flags.2 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags.2, align 4
  %and.2 = and i32 %37, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool47.not.2 = icmp eq i32 %and.2, 0
  br i1 %tobool47.not.2, label %if.end44.2.for.inc.2_crit_edge, label %if.end44.2.if.then48_crit_edge

if.end44.2.if.then48_crit_edge:                   ; preds = %if.end44.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48

if.end44.2.for.inc.2_crit_edge:                   ; preds = %if.end44.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.end44.2.for.inc.2_crit_edge, %cond.end.2.for.inc.2_crit_edge, %for.inc.1.for.inc.2_crit_edge
  %arrayidx.3 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 4
  %end.3 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 4, i32 1
  %38 = ptrtoint ptr %end.3 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %end.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp36.3 = icmp eq i32 %39, 0
  br i1 %cmp36.3, label %for.inc.2.for.inc.3_crit_edge, label %cond.end.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.3

cond.end.3:                                       ; preds = %for.inc.2
  %40 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx.3, align 8
  %sub.3 = sub i32 %39, %41
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.3)
  %cmp42.3 = icmp eq i32 %sub.3, -1
  br i1 %cmp42.3, label %cond.end.3.for.inc.3_crit_edge, label %if.end44.3

cond.end.3.for.inc.3_crit_edge:                   ; preds = %cond.end.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.3

if.end44.3:                                       ; preds = %cond.end.3
  %flags.3 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 4, i32 3
  %42 = ptrtoint ptr %flags.3 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags.3, align 4
  %and.3 = and i32 %43, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool47.not.3 = icmp eq i32 %and.3, 0
  br i1 %tobool47.not.3, label %if.end44.3.for.inc.3_crit_edge, label %if.end44.3.if.then48_crit_edge

if.end44.3.if.then48_crit_edge:                   ; preds = %if.end44.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48

if.end44.3.for.inc.3_crit_edge:                   ; preds = %if.end44.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.end44.3.for.inc.3_crit_edge, %cond.end.3.for.inc.3_crit_edge, %for.inc.2.for.inc.3_crit_edge
  %arrayidx.4 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 5
  %end.4 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 5, i32 1
  %44 = ptrtoint ptr %end.4 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %end.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp36.4 = icmp eq i32 %45, 0
  br i1 %cmp36.4, label %for.inc.3.if.end53_crit_edge, label %cond.end.4

for.inc.3.if.end53_crit_edge:                     ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end53

cond.end.4:                                       ; preds = %for.inc.3
  %46 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx.4, align 8
  %sub.4 = sub i32 %45, %47
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.4)
  %cmp42.4 = icmp eq i32 %sub.4, -1
  br i1 %cmp42.4, label %cond.end.4.if.end53_crit_edge, label %if.end44.4

cond.end.4.if.end53_crit_edge:                    ; preds = %cond.end.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end53

if.end44.4:                                       ; preds = %cond.end.4
  %flags.4 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 5, i32 3
  %48 = ptrtoint ptr %flags.4 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %flags.4, align 4
  %and.4 = and i32 %49, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool47.not.4 = icmp eq i32 %and.4, 0
  br i1 %tobool47.not.4, label %if.end44.4.if.end53_crit_edge, label %if.end44.4.if.then48_crit_edge

if.end44.4.if.then48_crit_edge:                   ; preds = %if.end44.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48

if.end44.4.if.end53_crit_edge:                    ; preds = %if.end44.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end53

if.end53:                                         ; preds = %if.end44.4.if.end53_crit_edge, %cond.end.4.if.end53_crit_edge, %for.inc.3.if.end53_crit_edge, %if.then48, %if.end32.if.end53_crit_edge
  %50 = ptrtoint ptr %pdev23 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pdev23, align 4
  %vendor.i = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 7
  %52 = ptrtoint ptr %vendor.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %vendor.i, align 8
  %vendor_id.i = getelementptr i8, ptr %call16, i32 3500
  %54 = ptrtoint ptr %vendor_id.i to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 %53, ptr %vendor_id.i, align 4
  %device.i648 = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 8
  %55 = ptrtoint ptr %device.i648 to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %device.i648, align 2
  %device_id.i = getelementptr i8, ptr %call16, i32 3498
  %57 = ptrtoint ptr %device_id.i to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 %56, ptr %device_id.i, align 2
  %subsystem_vendor.i = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 9
  %58 = ptrtoint ptr %subsystem_vendor.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %subsystem_vendor.i, align 4
  %subsystem_vendor_id.i = getelementptr i8, ptr %call16, i32 3504
  %60 = ptrtoint ptr %subsystem_vendor_id.i to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 %59, ptr %subsystem_vendor_id.i, align 4
  %subsystem_device.i = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 10
  %61 = ptrtoint ptr %subsystem_device.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %subsystem_device.i, align 2
  %subsystem_id.i = getelementptr i8, ptr %call16, i32 3502
  %63 = ptrtoint ptr %subsystem_id.i to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 %62, ptr %subsystem_id.i, align 2
  %revision.i = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 12
  %64 = ptrtoint ptr %revision.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %revision.i, align 4
  %revision_id.i = getelementptr i8, ptr %call16, i32 3506
  %66 = ptrtoint ptr %revision_id.i to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 %65, ptr %revision_id.i, align 2
  %pci_cmd_word.i = getelementptr i8, ptr %call16, i32 3480
  %call.i = tail call i32 @pci_read_config_word(ptr noundef %51, i32 noundef 4, ptr noundef %pci_cmd_word.i) #14
  %67 = ptrtoint ptr %netdev22 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %netdev22, align 8
  %mtu.i = getelementptr inbounds %struct.net_device, ptr %68, i32 0, i32 20
  %69 = ptrtoint ptr %mtu.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %mtu.i, align 4
  %add2.i = add i32 %70, 18
  %max_frame_size.i = getelementptr i8, ptr %call16, i32 3420
  %71 = ptrtoint ptr %max_frame_size.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %add2.i, ptr %max_frame_size.i, align 4
  %min_frame_size.i = getelementptr i8, ptr %call16, i32 3424
  %72 = ptrtoint ptr %min_frame_size.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 64, ptr %min_frame_size.i, align 4
  %call3.i = tail call i32 @e1000_set_mac_type(ptr noundef %hw27) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool.not.i, label %if.end7.i, label %do.body.i

do.body.i:                                        ; preds = %if.end53
  %73 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %msg_enable, align 8
  %and.i = and i32 %74, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool4.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool4.not.i, label %do.body.i.err_mdio_ioremap_crit_edge, label %if.then5.i

do.body.i.err_mdio_ioremap_crit_edge:             ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_mdio_ioremap

if.then5.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %75 = ptrtoint ptr %netdev22 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %netdev22, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %76, ptr noundef nonnull @.str.44) #17
  br label %err_mdio_ioremap

if.end7.i:                                        ; preds = %if.end53
  %mac_type.i = getelementptr i8, ptr %call16, i32 3308
  %77 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %mac_type.i, align 4
  %.off.i = add i32 %78, -11
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 4
  br i1 %switch.i, label %sw.bb.i, label %if.end7.i.sw.epilog.i_crit_edge

if.end7.i.sw.epilog.i_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #16
  %phy_init_script.i = getelementptr i8, ptr %call16, i32 3316
  %79 = ptrtoint ptr %phy_init_script.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 1, ptr %phy_init_script.i, align 4
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb.i, %if.end7.i.sw.epilog.i_crit_edge
  tail call void @e1000_set_media_type(ptr noundef %hw27) #14
  tail call void @e1000_get_bus_info(ptr noundef %hw27) #14
  %wait_autoneg_complete.i = getelementptr i8, ptr %call16, i32 3510
  %80 = ptrtoint ptr %wait_autoneg_complete.i to i32
  call void @__asan_store1_noabort(i32 %80)
  store i8 0, ptr %wait_autoneg_complete.i, align 2
  %tbi_compatibility_en.i = getelementptr i8, ptr %call16, i32 3538
  %81 = ptrtoint ptr %tbi_compatibility_en.i to i32
  call void @__asan_store1_noabort(i32 %81)
  store i8 1, ptr %tbi_compatibility_en.i, align 2
  %adaptive_ifs.i = getelementptr i8, ptr %call16, i32 3546
  %82 = ptrtoint ptr %adaptive_ifs.i to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 1, ptr %adaptive_ifs.i, align 2
  %media_type.i = getelementptr i8, ptr %call16, i32 3320
  %83 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %cmp.i = icmp eq i32 %84, 0
  br i1 %cmp.i, label %if.then8.i, label %sw.epilog.i.if.end57_crit_edge

sw.epilog.i.if.end57_crit_edge:                   ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end57

if.then8.i:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  %mdix.i = getelementptr i8, ptr %call16, i32 3508
  %85 = ptrtoint ptr %mdix.i to i32
  call void @__asan_store1_noabort(i32 %85)
  store i8 0, ptr %mdix.i, align 4
  %disable_polarity_correction.i = getelementptr i8, ptr %call16, i32 3524
  %86 = ptrtoint ptr %disable_polarity_correction.i to i32
  call void @__asan_store1_noabort(i32 %86)
  store i8 0, ptr %disable_polarity_correction.i, align 4
  %master_slave.i = getelementptr i8, ptr %call16, i32 3372
  %87 = ptrtoint ptr %master_slave.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 0, ptr %master_slave.i, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then8.i, %sw.epilog.i.if.end57_crit_edge
  %bus_type = getelementptr i8, ptr %call16, i32 3352
  %88 = ptrtoint ptr %bus_type to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %bus_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %89)
  %cmp58 = icmp eq i32 %89, 2
  br i1 %cmp58, label %land.lhs.true, label %if.end57.if.else63_crit_edge

if.end57.if.else63_crit_edge:                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else63

land.lhs.true:                                    ; preds = %if.end57
  %call60 = tail call fastcc i32 @dma_set_mask_and_coherent(ptr noundef %dev, i64 noundef -1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.if.end71_crit_edge, label %land.lhs.true.if.else63_crit_edge

land.lhs.true.if.else63_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else63

land.lhs.true.if.end71_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71

if.else63:                                        ; preds = %land.lhs.true.if.else63_crit_edge, %if.end57.if.else63_crit_edge
  %call65 = tail call fastcc i32 @dma_set_mask_and_coherent(ptr noundef %dev, i64 noundef 4294967295)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %if.else63.if.end71_crit_edge, label %do.end

if.else63.if.end71_crit_edge:                     ; preds = %if.else63
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71

do.end:                                           ; preds = %if.else63
  call void @__sanitizer_cov_trace_pc() #16
  %call69 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20) #17
  br label %err_mdio_ioremap

if.end71:                                         ; preds = %if.else63.if.end71_crit_edge, %land.lhs.true.if.end71_crit_edge
  %tobool123.not = phi i1 [ true, %if.else63.if.end71_crit_edge ], [ false, %land.lhs.true.if.end71_crit_edge ]
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 16
  %90 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr @e1000_netdev_ops, ptr %netdev_ops, align 8
  tail call void @e1000_set_ethtool_ops(ptr noundef nonnull %call16) #14
  %watchdog_timeo = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 115
  %91 = ptrtoint ptr %watchdog_timeo to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 500, ptr %watchdog_timeo, align 4
  %napi = getelementptr i8, ptr %call16, i32 3008
  tail call void @netif_napi_add(ptr noundef nonnull %call16, ptr noundef %napi, ptr noundef nonnull @e1000_clean, i32 noundef 64) #14
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 3
  %92 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %93, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.end71.pci_name.exit_crit_edge

if.end71.pci_name.exit_crit_edge:                 ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_name.exit

if.end.i.i:                                       ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #16
  %94 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %dev, align 4
  br label %pci_name.exit

pci_name.exit:                                    ; preds = %if.end.i.i, %if.end71.pci_name.exit_crit_edge
  %retval.0.i.i = phi ptr [ %95, %if.end.i.i ], [ %93, %if.end71.pci_name.exit_crit_edge ]
  %call73 = tail call ptr @strncpy(ptr noundef nonnull %call16, ptr noundef %retval.0.i.i, i32 noundef 15)
  %96 = load i32, ptr @e1000_probe.cards_found, align 4
  %bd_number = getelementptr i8, ptr %call16, i32 2820
  %97 = ptrtoint ptr %bd_number to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %96, ptr %bd_number, align 4
  %call74 = tail call fastcc i32 @e1000_sw_init(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74)
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %if.end77, label %pci_name.exit.err_mdio_ioremap_crit_edge

pci_name.exit.err_mdio_ioremap_crit_edge:         ; preds = %pci_name.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_mdio_ioremap

if.end77:                                         ; preds = %pci_name.exit
  %98 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %99)
  %cmp78 = icmp eq i32 %99, 9
  br i1 %cmp78, label %if.then79, label %if.end77.if.end104_crit_edge

if.end77.if.end104_crit_edge:                     ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end104

if.then79:                                        ; preds = %if.end77
  %arrayidx81 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 1
  %100 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx81, align 8
  %end85 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 1, i32 1
  %102 = ptrtoint ptr %end85 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %end85, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %103)
  %cmp86 = icmp eq i32 %103, 0
  %sub95 = sub i32 1, %101
  %add96 = add i32 %sub95, %103
  %cond98 = select i1 %cmp86, i32 0, i32 %add96
  %call99 = tail call ptr @ioremap(i32 noundef %101, i32 noundef %cond98) #14
  %ce4100_gbe_mdio_base_virt = getelementptr i8, ptr %call16, i32 3304
  %104 = ptrtoint ptr %ce4100_gbe_mdio_base_virt to i32
  call void @__asan_store4_noabort(i32 %104)
  store ptr %call99, ptr %ce4100_gbe_mdio_base_virt, align 4
  %tobool101.not = icmp eq ptr %call99, null
  br i1 %tobool101.not, label %if.then79.err_mdio_ioremap_crit_edge, label %if.end104thread-pre-split

if.then79.err_mdio_ioremap_crit_edge:             ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_mdio_ioremap

if.end104thread-pre-split:                        ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #16
  %105 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %.pr = load i32, ptr %mac_type.i, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.end104thread-pre-split, %if.end77.if.end104_crit_edge
  %106 = phi i32 [ %.pr, %if.end104thread-pre-split ], [ %99, %if.end77.if.end104_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %106)
  %cmp106 = icmp ugt i32 %106, 2
  br i1 %cmp106, label %if.then107, label %if.end104.if.end108_crit_edge

if.end104.if.end108_crit_edge:                    ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end108

if.then107:                                       ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #16
  %hw_features = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 24
  %107 = ptrtoint ptr %hw_features to i32
  call void @__asan_store8_noabort(i32 %107)
  store i64 265, ptr %hw_features, align 8
  %features = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 23
  %108 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %108)
  store i64 640, ptr %features, align 16
  br label %if.end108

if.end108:                                        ; preds = %if.then107, %if.end104.if.end108_crit_edge
  %109 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %mac_type.i, align 4
  %111 = zext i32 %110 to i64
  call void @__sanitizer_cov_trace_switch(i64 %111, ptr @__sancov_gen_cov_switch_values.221)
  switch i32 %110, label %if.then114 [
    i32 13, label %if.end108.if.end116_crit_edge
    i32 3, label %if.end108.if.end116_crit_edge698
    i32 2, label %if.end108.if.end116_crit_edge699
    i32 1, label %if.end108.if.end116_crit_edge700
    i32 0, label %if.end108.if.end116_crit_edge701
  ]

if.end108.if.end116_crit_edge701:                 ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116

if.end108.if.end116_crit_edge700:                 ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116

if.end108.if.end116_crit_edge699:                 ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116

if.end108.if.end116_crit_edge698:                 ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116

if.end108.if.end116_crit_edge:                    ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116

if.then114:                                       ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #16
  %hw_features115 = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 24
  %112 = ptrtoint ptr %hw_features115 to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %hw_features115, align 8
  %or = or i64 %113, 65536
  store i64 %or, ptr %hw_features115, align 8
  br label %if.end116

if.end116:                                        ; preds = %if.then114, %if.end108.if.end116_crit_edge, %if.end108.if.end116_crit_edge698, %if.end108.if.end116_crit_edge699, %if.end108.if.end116_crit_edge700, %if.end108.if.end116_crit_edge701
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 15
  %114 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %priv_flags, align 16
  %or117 = or i64 %115, 16384
  store i64 %or117, ptr %priv_flags, align 16
  %hw_features118 = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 24
  %116 = ptrtoint ptr %hw_features118 to i32
  call void @__asan_load8_noabort(i32 %116)
  %117 = load i64, ptr %hw_features118, align 8
  %features119 = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 23
  %118 = ptrtoint ptr %features119 to i32
  call void @__asan_load8_noabort(i32 %118)
  %119 = load i64, ptr %features119, align 16
  %or120 = or i64 %119, %117
  store i64 %or120, ptr %features119, align 16
  %or122 = or i64 %117, 27487790694400
  store i64 %or122, ptr %hw_features118, align 8
  br i1 %tobool123.not, label %if.end116.if.end128_crit_edge, label %if.then124

if.end116.if.end128_crit_edge:                    ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end128

if.then124:                                       ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #16
  %or126 = or i64 %or120, 32
  %120 = ptrtoint ptr %features119 to i32
  call void @__asan_store8_noabort(i32 %120)
  store i64 %or126, ptr %features119, align 16
  %vlan_features = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 26
  %121 = ptrtoint ptr %vlan_features to i32
  call void @__asan_load8_noabort(i32 %121)
  %122 = load i64, ptr %vlan_features, align 8
  %or127 = or i64 %122, 32
  store i64 %or127, ptr %vlan_features, align 8
  br label %if.end128

if.end128:                                        ; preds = %if.then124, %if.end116.if.end128_crit_edge
  %vlan_features129 = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 26
  %123 = ptrtoint ptr %vlan_features129 to i32
  call void @__asan_load8_noabort(i32 %123)
  %124 = load i64, ptr %vlan_features129, align 8
  %or130 = or i64 %124, 65545
  store i64 %or130, ptr %vlan_features129, align 8
  %125 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load2_noabort(i32 %125)
  %126 = load i16, ptr %device_id.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4111, i16 %126)
  %cmp131.not = icmp eq i16 %126, 4111
  br i1 %cmp131.not, label %lor.lhs.false, label %if.end128.if.then136_crit_edge

if.end128.if.then136_crit_edge:                   ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then136

lor.lhs.false:                                    ; preds = %if.end128
  %127 = ptrtoint ptr %subsystem_vendor_id.i to i32
  call void @__asan_load2_noabort(i32 %127)
  %128 = load i16, ptr %subsystem_vendor_id.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 5549, i16 %128)
  %cmp134.not = icmp eq i16 %128, 5549
  br i1 %cmp134.not, label %lor.lhs.false.if.end139_crit_edge, label %lor.lhs.false.if.then136_crit_edge

lor.lhs.false.if.then136_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then136

lor.lhs.false.if.end139_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end139

if.then136:                                       ; preds = %lor.lhs.false.if.then136_crit_edge, %if.end128.if.then136_crit_edge
  %129 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %129)
  %130 = load i64, ptr %priv_flags, align 16
  %or138 = or i64 %130, 4096
  store i64 %or138, ptr %priv_flags, align 16
  br label %if.end139

if.end139:                                        ; preds = %if.then136, %lor.lhs.false.if.end139_crit_edge
  %min_mtu = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 30
  %131 = ptrtoint ptr %min_mtu to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 46, ptr %min_mtu, align 8
  %max_mtu = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 31
  %132 = ptrtoint ptr %max_mtu to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 16110, ptr %max_mtu, align 4
  %call140 = tail call i32 @e1000_enable_mng_pass_thru(ptr noundef %hw27) #14
  %en_mng_pt = getelementptr i8, ptr %call16, i32 2836
  %133 = ptrtoint ptr %en_mng_pt to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %call140, ptr %en_mng_pt, align 4
  %call141 = tail call i32 @e1000_init_eeprom_params(ptr noundef %hw27) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call141)
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %if.end153, label %do.body144

do.body144:                                       ; preds = %if.end139
  %134 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %msg_enable, align 8
  %and146 = and i32 %135, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and146)
  %tobool147.not = icmp eq i32 %and146, 0
  br i1 %tobool147.not, label %do.body144.err_eeprom_crit_edge, label %if.then148

do.body144.err_eeprom_crit_edge:                  ; preds = %do.body144
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_eeprom

if.then148:                                       ; preds = %do.body144
  call void @__sanitizer_cov_trace_pc() #16
  %136 = ptrtoint ptr %netdev22 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %netdev22, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %137, ptr noundef nonnull @.str.22) #17
  br label %err_eeprom

if.end153:                                        ; preds = %if.end139
  %call154 = tail call i32 @e1000_reset_hw(ptr noundef %hw27) #14
  %call155 = tail call i32 @e1000_validate_eeprom_checksum(ptr noundef %hw27) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call155)
  %cmp156 = icmp slt i32 %call155, 0
  br i1 %cmp156, label %do.body159, label %if.else170

do.body159:                                       ; preds = %if.end153
  %138 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %msg_enable, align 8
  %and161 = and i32 %139, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and161)
  %tobool162.not = icmp eq i32 %and161, 0
  br i1 %tobool162.not, label %do.body159.do.end167_crit_edge, label %if.then163

do.body159.do.end167_crit_edge:                   ; preds = %do.body159
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end167

if.then163:                                       ; preds = %do.body159
  call void @__sanitizer_cov_trace_pc() #16
  %140 = ptrtoint ptr %netdev22 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %netdev22, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %141, ptr noundef nonnull @.str.23) #17
  br label %do.end167

do.end167:                                        ; preds = %if.then163, %do.body159.do.end167_crit_edge
  tail call fastcc void @e1000_dump_eeprom(ptr noundef %add.ptr.i)
  %mac_addr = getelementptr i8, ptr %call16, i32 3512
  %addr_len = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 56
  %142 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %142)
  %143 = load i8, ptr %addr_len, align 1
  %conv169 = zext i8 %143 to i32
  %144 = call ptr @memset(ptr %mac_addr, i32 0, i32 %conv169)
  br label %if.end184

if.else170:                                       ; preds = %if.end153
  %call171 = tail call i32 @e1000_read_mac_addr(ptr noundef %hw27) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call171)
  %tobool172.not = icmp eq i32 %call171, 0
  br i1 %tobool172.not, label %if.else170.if.end184_crit_edge, label %do.body174

if.else170.if.end184_crit_edge:                   ; preds = %if.else170
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184

do.body174:                                       ; preds = %if.else170
  %145 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %msg_enable, align 8
  %and176 = and i32 %146, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and176)
  %tobool177.not = icmp eq i32 %and176, 0
  br i1 %tobool177.not, label %do.body174.if.end184_crit_edge, label %if.then178

do.body174.if.end184_crit_edge:                   ; preds = %do.body174
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184

if.then178:                                       ; preds = %do.body174
  call void @__sanitizer_cov_trace_pc() #16
  %147 = ptrtoint ptr %netdev22 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %netdev22, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %148, ptr noundef nonnull @.str.24) #17
  br label %if.end184

if.end184:                                        ; preds = %if.then178, %do.body174.if.end184_crit_edge, %if.else170.if.end184_crit_edge, %do.end167
  %mac_addr185 = getelementptr i8, ptr %call16, i32 3512
  tail call void @dev_addr_mod(ptr noundef nonnull %call16, i32 noundef 0, ptr noundef %mac_addr185, i32 noundef 6) #14
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %call16, i32 0, i32 86
  %149 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %dev_addr, align 64
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %150, align 4
  %153 = and i32 %152, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %tobool.i.not.i = icmp eq i32 %153, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %if.end184.do.body189_crit_edge

if.end184.do.body189_crit_edge:                   ; preds = %if.end184
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body189

is_valid_ether_addr.exit:                         ; preds = %if.end184
  %add.ptr.i.i = getelementptr i8, ptr %150, i32 4
  %154 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %154)
  %155 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %155 to i32
  %or.i.i = or i32 %152, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.do.body189_crit_edge, label %is_valid_ether_addr.exit.do.body200_crit_edge

is_valid_ether_addr.exit.do.body200_crit_edge:    ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body200

is_valid_ether_addr.exit.do.body189_crit_edge:    ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body189

do.body189:                                       ; preds = %is_valid_ether_addr.exit.do.body189_crit_edge, %if.end184.do.body189_crit_edge
  %156 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %msg_enable, align 8
  %and191 = and i32 %157, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and191)
  %tobool192.not = icmp eq i32 %and191, 0
  br i1 %tobool192.not, label %do.body189.do.body200_crit_edge, label %if.then193

do.body189.do.body200_crit_edge:                  ; preds = %do.body189
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body200

if.then193:                                       ; preds = %do.body189
  call void @__sanitizer_cov_trace_pc() #16
  %158 = ptrtoint ptr %netdev22 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %netdev22, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %159, ptr noundef nonnull @.str.25) #17
  br label %do.body200

do.body200:                                       ; preds = %if.then193, %do.body189.do.body200_crit_edge, %is_valid_ether_addr.exit.do.body200_crit_edge
  %watchdog_task = getelementptr i8, ptr %call16, i32 4304
  tail call void @__init_work(ptr noundef %watchdog_task, i32 noundef 0) #14
  %160 = ptrtoint ptr %watchdog_task to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 -64, ptr %watchdog_task, align 8
  %lockdep_map = getelementptr i8, ptr %call16, i32 4320
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.26, ptr noundef nonnull @e1000_probe.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  %entry207 = getelementptr i8, ptr %call16, i32 4308
  %161 = ptrtoint ptr %entry207 to i32
  call void @__asan_store4_noabort(i32 %161)
  store volatile ptr %entry207, ptr %entry207, align 4
  %prev.i = getelementptr i8, ptr %call16, i32 4312
  %162 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %162)
  store ptr %entry207, ptr %prev.i, align 4
  %func = getelementptr i8, ptr %call16, i32 4316
  %163 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %163)
  store ptr @e1000_watchdog, ptr %func, align 4
  %timer = getelementptr i8, ptr %call16, i32 4348
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.28, ptr noundef nonnull @e1000_probe.__key.27) #14
  %fifo_stall_task = getelementptr i8, ptr %call16, i32 4404
  tail call void @__init_work(ptr noundef %fifo_stall_task, i32 noundef 0) #14
  %164 = ptrtoint ptr %fifo_stall_task to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 -64, ptr %fifo_stall_task, align 4
  %lockdep_map228 = getelementptr i8, ptr %call16, i32 4420
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map228, ptr noundef nonnull @.str.30, ptr noundef nonnull @e1000_probe.__key.29, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  %entry231 = getelementptr i8, ptr %call16, i32 4408
  %165 = ptrtoint ptr %entry231 to i32
  call void @__asan_store4_noabort(i32 %165)
  store volatile ptr %entry231, ptr %entry231, align 4
  %prev.i650 = getelementptr i8, ptr %call16, i32 4412
  %166 = ptrtoint ptr %prev.i650 to i32
  call void @__asan_store4_noabort(i32 %166)
  store ptr %entry231, ptr %prev.i650, align 4
  %func234 = getelementptr i8, ptr %call16, i32 4416
  %167 = ptrtoint ptr %func234 to i32
  call void @__asan_store4_noabort(i32 %167)
  store ptr @e1000_82547_tx_fifo_stall_task, ptr %func234, align 4
  %timer239 = getelementptr i8, ptr %call16, i32 4448
  tail call void @init_timer_key(ptr noundef %timer239, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.32, ptr noundef nonnull @e1000_probe.__key.31) #14
  %phy_info_task = getelementptr i8, ptr %call16, i32 4504
  tail call void @__init_work(ptr noundef %phy_info_task, i32 noundef 0) #14
  %168 = ptrtoint ptr %phy_info_task to i32
  call void @__asan_store4_noabort(i32 %168)
  store i32 -64, ptr %phy_info_task, align 8
  %lockdep_map254 = getelementptr i8, ptr %call16, i32 4520
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map254, ptr noundef nonnull @.str.34, ptr noundef nonnull @e1000_probe.__key.33, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  %entry257 = getelementptr i8, ptr %call16, i32 4508
  %169 = ptrtoint ptr %entry257 to i32
  call void @__asan_store4_noabort(i32 %169)
  store volatile ptr %entry257, ptr %entry257, align 4
  %prev.i651 = getelementptr i8, ptr %call16, i32 4512
  %170 = ptrtoint ptr %prev.i651 to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr %entry257, ptr %prev.i651, align 4
  %func260 = getelementptr i8, ptr %call16, i32 4516
  %171 = ptrtoint ptr %func260 to i32
  call void @__asan_store4_noabort(i32 %171)
  store ptr @e1000_update_phy_info_task, ptr %func260, align 4
  %timer265 = getelementptr i8, ptr %call16, i32 4548
  tail call void @init_timer_key(ptr noundef %timer265, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.36, ptr noundef nonnull @e1000_probe.__key.35) #14
  %reset_task = getelementptr i8, ptr %call16, i32 4260
  tail call void @__init_work(ptr noundef %reset_task, i32 noundef 0) #14
  %172 = ptrtoint ptr %reset_task to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 -64, ptr %reset_task, align 4
  %lockdep_map276 = getelementptr i8, ptr %call16, i32 4276
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map276, ptr noundef nonnull @.str.38, ptr noundef nonnull @e1000_probe.__key.37, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  %entry278 = getelementptr i8, ptr %call16, i32 4264
  %173 = ptrtoint ptr %entry278 to i32
  call void @__asan_store4_noabort(i32 %173)
  store volatile ptr %entry278, ptr %entry278, align 4
  %prev.i652 = getelementptr i8, ptr %call16, i32 4268
  %174 = ptrtoint ptr %prev.i652 to i32
  call void @__asan_store4_noabort(i32 %174)
  store ptr %entry278, ptr %prev.i652, align 4
  %func280 = getelementptr i8, ptr %call16, i32 4272
  %175 = ptrtoint ptr %func280 to i32
  call void @__asan_store4_noabort(i32 %175)
  store ptr @e1000_reset_task, ptr %func280, align 4
  tail call void @e1000_check_options(ptr noundef %add.ptr.i) #14
  %176 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %mac_type.i, align 4
  %178 = zext i32 %177 to i64
  call void @__sanitizer_cov_trace_switch(i64 %178, ptr @__sancov_gen_cov_switch_values.222)
  switch i32 %177, label %do.body200.sw.default_crit_edge [
    i32 1, label %do.body200.sw.epilog_crit_edge
    i32 2, label %do.body200.sw.epilog_crit_edge702
    i32 3, label %do.body200.sw.epilog_crit_edge703
    i32 4, label %do.body200.sw.epilog.sink.split_crit_edge
    i32 8, label %do.body200.sw.bb286_crit_edge
    i32 10, label %do.body200.sw.bb286_crit_edge704
  ]

do.body200.sw.bb286_crit_edge704:                 ; preds = %do.body200
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb286

do.body200.sw.bb286_crit_edge:                    ; preds = %do.body200
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb286

do.body200.sw.epilog.sink.split_crit_edge:        ; preds = %do.body200
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.sink.split

do.body200.sw.epilog_crit_edge703:                ; preds = %do.body200
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

do.body200.sw.epilog_crit_edge702:                ; preds = %do.body200
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

do.body200.sw.epilog_crit_edge:                   ; preds = %do.body200
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

do.body200.sw.default_crit_edge:                  ; preds = %do.body200
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.default

sw.bb286:                                         ; preds = %do.body200.sw.bb286_crit_edge, %do.body200.sw.bb286_crit_edge704
  %179 = ptrtoint ptr %hw27 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %hw27, align 4
  %add.ptr = getelementptr i8, ptr %180, i32 8
  %181 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !520
  %182 = and i32 %181, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %182)
  %tobool296.not = icmp eq i32 %182, 0
  br i1 %tobool296.not, label %sw.bb286.sw.default_crit_edge, label %sw.bb286.sw.epilog.sink.split_crit_edge

sw.bb286.sw.epilog.sink.split_crit_edge:          ; preds = %sw.bb286
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.sink.split

sw.bb286.sw.default_crit_edge:                    ; preds = %sw.bb286
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.default

sw.default:                                       ; preds = %sw.bb286.sw.default_crit_edge, %do.body200.sw.default_crit_edge
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.default, %sw.bb286.sw.epilog.sink.split_crit_edge, %do.body200.sw.epilog.sink.split_crit_edge
  %.sink = phi i16 [ 36, %sw.default ], [ 15, %do.body200.sw.epilog.sink.split_crit_edge ], [ 20, %sw.bb286.sw.epilog.sink.split_crit_edge ]
  %eeprom_apme_mask.0.ph = phi i32 [ 1024, %sw.default ], [ %177, %do.body200.sw.epilog.sink.split_crit_edge ], [ 1024, %sw.bb286.sw.epilog.sink.split_crit_edge ]
  %call300 = call i32 @e1000_read_eeprom(ptr noundef %hw27, i16 noundef zeroext %.sink, i16 noundef zeroext 1, ptr noundef nonnull %eeprom_data) #14
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %do.body200.sw.epilog_crit_edge, %do.body200.sw.epilog_crit_edge702, %do.body200.sw.epilog_crit_edge703
  %eeprom_apme_mask.0 = phi i32 [ 1024, %do.body200.sw.epilog_crit_edge ], [ 1024, %do.body200.sw.epilog_crit_edge702 ], [ 1024, %do.body200.sw.epilog_crit_edge703 ], [ %eeprom_apme_mask.0.ph, %sw.epilog.sink.split ]
  %183 = ptrtoint ptr %eeprom_data to i32
  call void @__asan_load2_noabort(i32 %183)
  %184 = load i16, ptr %eeprom_data, align 2
  %conv301 = zext i16 %184 to i32
  %and303 = and i32 %eeprom_apme_mask.0, %conv301
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and303)
  %tobool304.not = icmp eq i32 %and303, 0
  br i1 %tobool304.not, label %sw.epilog.if.end307_crit_edge, label %if.then305

sw.epilog.if.end307_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end307

if.then305:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %eeprom_wol = getelementptr i8, ptr %call16, i32 4244
  %185 = ptrtoint ptr %eeprom_wol to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %eeprom_wol, align 4
  %or306 = or i32 %186, 2
  store i32 %or306, ptr %eeprom_wol, align 4
  br label %if.end307

if.end307:                                        ; preds = %if.then305, %sw.epilog.if.end307_crit_edge
  %187 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %187)
  %188 = load i16, ptr %device.i, align 2
  %189 = zext i16 %188 to i64
  call void @__sanitizer_cov_trace_switch(i64 %189, ptr @__sancov_gen_cov_switch_values.223)
  switch i16 %188, label %if.end307.sw.epilog340_crit_edge [
    i16 4234, label %sw.bb309
    i16 4114, label %if.end307.sw.bb311_crit_edge
    i16 4218, label %if.end307.sw.bb311_crit_edge705
    i16 4277, label %sw.bb328
  ]

if.end307.sw.bb311_crit_edge705:                  ; preds = %if.end307
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb311

if.end307.sw.bb311_crit_edge:                     ; preds = %if.end307
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb311

if.end307.sw.epilog340_crit_edge:                 ; preds = %if.end307
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog340

sw.bb309:                                         ; preds = %if.end307
  call void @__sanitizer_cov_trace_pc() #16
  %eeprom_wol310 = getelementptr i8, ptr %call16, i32 4244
  %190 = ptrtoint ptr %eeprom_wol310 to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 0, ptr %eeprom_wol310, align 4
  br label %sw.epilog340

sw.bb311:                                         ; preds = %if.end307.sw.bb311_crit_edge, %if.end307.sw.bb311_crit_edge705
  %191 = ptrtoint ptr %hw27 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %hw27, align 4
  %add.ptr319 = getelementptr i8, ptr %192, i32 8
  %193 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr319) #14, !srcloc !422
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !521
  %194 = and i32 %193, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %194)
  %tobool324.not = icmp eq i32 %194, 0
  br i1 %tobool324.not, label %sw.bb311.sw.epilog340_crit_edge, label %if.then325

sw.bb311.sw.epilog340_crit_edge:                  ; preds = %sw.bb311
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog340

if.then325:                                       ; preds = %sw.bb311
  call void @__sanitizer_cov_trace_pc() #16
  %eeprom_wol326 = getelementptr i8, ptr %call16, i32 4244
  %195 = ptrtoint ptr %eeprom_wol326 to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 0, ptr %eeprom_wol326, align 4
  br label %sw.epilog340

sw.bb328:                                         ; preds = %if.end307
  %196 = load i32, ptr @e1000_probe.global_quad_port_a, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %196)
  %cmp329.not = icmp eq i32 %196, 0
  br i1 %cmp329.not, label %if.else333, label %if.then331

if.then331:                                       ; preds = %sw.bb328
  call void @__sanitizer_cov_trace_pc() #16
  %eeprom_wol332 = getelementptr i8, ptr %call16, i32 4244
  %197 = ptrtoint ptr %eeprom_wol332 to i32
  call void @__asan_store4_noabort(i32 %197)
  store i32 0, ptr %eeprom_wol332, align 4
  br label %if.end334

if.else333:                                       ; preds = %sw.bb328
  call void @__sanitizer_cov_trace_pc() #16
  %quad_port_a = getelementptr i8, ptr %call16, i32 4238
  %198 = ptrtoint ptr %quad_port_a to i32
  call void @__asan_store1_noabort(i32 %198)
  store i8 1, ptr %quad_port_a, align 2
  br label %if.end334

if.end334:                                        ; preds = %if.else333, %if.then331
  %inc335 = add i32 %196, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %inc335)
  %cmp336 = icmp eq i32 %inc335, 4
  %spec.store.select = select i1 %cmp336, i32 0, i32 %inc335
  store i32 %spec.store.select, ptr @e1000_probe.global_quad_port_a, align 4
  br label %sw.epilog340

sw.epilog340:                                     ; preds = %if.end334, %if.then325, %sw.bb311.sw.epilog340_crit_edge, %sw.bb309, %if.end307.sw.epilog340_crit_edge
  %eeprom_wol341 = getelementptr i8, ptr %call16, i32 4244
  %199 = ptrtoint ptr %eeprom_wol341 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %eeprom_wol341, align 4
  %wol = getelementptr i8, ptr %call16, i32 2828
  %201 = ptrtoint ptr %wol to i32
  call void @__asan_store4_noabort(i32 %201)
  store i32 %200, ptr %wol, align 4
  %202 = ptrtoint ptr %pdev23 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %pdev23, align 4
  %dev343 = getelementptr inbounds %struct.pci_dev, ptr %203, i32 0, i32 44
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %200)
  %tobool345 = icmp ne i32 %200, 0
  %call346 = call i32 @device_set_wakeup_enable(ptr noundef %dev343, i1 noundef zeroext %tobool345) #14
  %204 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %205)
  %cmp348 = icmp eq i32 %205, 9
  br i1 %cmp348, label %for.cond351.preheader, label %sw.epilog340.if.end372_crit_edge

sw.epilog340.if.end372_crit_edge:                 ; preds = %sw.epilog340
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end372

for.cond351.preheader:                            ; preds = %sw.epilog340
  %phy_addr = getelementptr i8, ptr %call16, i32 3404
  br label %for.body354

for.body354:                                      ; preds = %for.inc365.for.body354_crit_edge, %for.cond351.preheader
  %i.1676 = phi i32 [ 0, %for.cond351.preheader ], [ %inc366, %for.inc365.for.body354_crit_edge ]
  %206 = ptrtoint ptr %phy_addr to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 %i.1676, ptr %phy_addr, align 4
  %call355 = call i32 @e1000_read_phy_reg(ptr noundef %hw27, i32 noundef 3, ptr noundef nonnull %tmp) #14
  %207 = ptrtoint ptr %tmp to i32
  call void @__asan_load2_noabort(i32 %207)
  %208 = load i16, ptr %tmp, align 2
  %209 = zext i16 %208 to i64
  call void @__sanitizer_cov_trace_switch(i64 %209, ptr @__sancov_gen_cov_switch_values.224)
  switch i16 %208, label %for.body354.if.end372_crit_edge [
    i16 0, label %for.body354.for.inc365_crit_edge
    i16 255, label %for.body354.for.inc365_crit_edge706
  ]

for.body354.for.inc365_crit_edge706:              ; preds = %for.body354
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc365

for.body354.for.inc365_crit_edge:                 ; preds = %for.body354
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc365

for.body354.if.end372_crit_edge:                  ; preds = %for.body354
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end372

for.inc365:                                       ; preds = %for.body354.for.inc365_crit_edge, %for.body354.for.inc365_crit_edge706
  %inc366 = add nuw nsw i32 %i.1676, 1
  %exitcond.not = icmp eq i32 %inc366, 32
  br i1 %exitcond.not, label %for.inc365.err_eeprom_crit_edge, label %for.inc365.for.body354_crit_edge

for.inc365.for.body354_crit_edge:                 ; preds = %for.inc365
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body354

for.inc365.err_eeprom_crit_edge:                  ; preds = %for.inc365
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_eeprom

if.end372:                                        ; preds = %for.body354.if.end372_crit_edge, %sw.epilog340.if.end372_crit_edge
  call void @e1000_reset(ptr noundef %add.ptr.i)
  %210 = call ptr @memcpy(ptr %call16, ptr @.str.39, i32 6)
  %call376 = call i32 @register_netdev(ptr noundef %call16) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call376)
  %tobool377.not = icmp eq i32 %call376, 0
  br i1 %tobool377.not, label %if.end379, label %if.end372.err_eeprom_crit_edge

if.end372.err_eeprom_crit_edge:                   ; preds = %if.end372
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_eeprom

if.end379:                                        ; preds = %if.end372
  call fastcc void @e1000_vlan_filter_on_off(ptr noundef %add.ptr.i, i1 noundef zeroext false)
  %211 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %msg_enable, align 8
  %and382 = and i32 %212, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and382)
  %tobool383.not = icmp eq i32 %and382, 0
  br i1 %tobool383.not, label %if.end379.do.end420_crit_edge, label %if.then384

if.end379.do.end420_crit_edge:                    ; preds = %if.end379
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end420

if.then384:                                       ; preds = %if.end379
  %213 = ptrtoint ptr %netdev22 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %netdev22, align 8
  %215 = ptrtoint ptr %bus_type to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %bus_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %216)
  %cmp387 = icmp eq i32 %216, 2
  %cond389 = select i1 %cmp387, ptr @.str.41, ptr @.str.42
  %bus_speed = getelementptr i8, ptr %call16, i32 3344
  %217 = ptrtoint ptr %bus_speed to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %bus_speed, align 4
  %switch.tableidx = add i32 %218, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %219 = icmp ult i32 %switch.tableidx, 3
  br i1 %219, label %switch.lookup, label %cond.false403

cond.false403:                                    ; preds = %if.then384
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %218)
  %cmp405 = icmp eq i32 %218, 2
  %cond407 = select i1 %cmp405, i32 66, i32 33
  br label %cond.end412

switch.lookup:                                    ; preds = %if.then384
  call void @__sanitizer_cov_trace_pc() #16
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.e1000_probe, i32 0, i32 %switch.tableidx
  %220 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %220)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %cond.end412

cond.end412:                                      ; preds = %switch.lookup, %cond.false403
  %cond413 = phi i32 [ %cond407, %cond.false403 ], [ %switch.load, %switch.lookup ]
  %bus_width = getelementptr i8, ptr %call16, i32 3348
  %221 = ptrtoint ptr %bus_width to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %bus_width, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %222)
  %cmp414 = icmp eq i32 %222, 2
  %cond416 = select i1 %cmp414, i32 64, i32 32
  %223 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %dev_addr, align 64
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %214, ptr noundef nonnull @.str.40, ptr noundef nonnull %cond389, i32 noundef %cond413, i32 noundef %cond416, ptr noundef %224) #17
  br label %do.end420

do.end420:                                        ; preds = %cond.end412, %if.end379.do.end420_crit_edge
  call void @netif_carrier_off(ptr noundef %call16) #14
  %225 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %msg_enable, align 8
  %and423 = and i32 %226, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and423)
  %tobool424.not = icmp eq i32 %and423, 0
  br i1 %tobool424.not, label %do.end420.do.end429_crit_edge, label %if.then425

do.end420.do.end429_crit_edge:                    ; preds = %do.end420
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end429

if.then425:                                       ; preds = %do.end420
  call void @__sanitizer_cov_trace_pc() #16
  %227 = ptrtoint ptr %netdev22 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %netdev22, align 8
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %228, ptr noundef nonnull @.str.43) #17
  br label %do.end429

do.end429:                                        ; preds = %if.then425, %do.end420.do.end429_crit_edge
  %229 = load i32, ptr @e1000_probe.cards_found, align 4
  %inc430 = add i32 %229, 1
  store i32 %inc430, ptr @e1000_probe.cards_found, align 4
  br label %cleanup

err_eeprom:                                       ; preds = %if.end372.err_eeprom_crit_edge, %for.inc365.err_eeprom_crit_edge, %if.then148, %do.body144.err_eeprom_crit_edge
  %err.1 = phi i32 [ -5, %if.then148 ], [ -5, %do.body144.err_eeprom_crit_edge ], [ %call376, %if.end372.err_eeprom_crit_edge ], [ -5, %for.inc365.err_eeprom_crit_edge ]
  %call431 = call i32 @e1000_phy_hw_reset(ptr noundef %hw27) #14
  %flash_address = getelementptr i8, ptr %call16, i32 3300
  %230 = ptrtoint ptr %flash_address to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %flash_address, align 4
  %tobool432.not = icmp eq ptr %231, null
  br i1 %tobool432.not, label %err_eeprom.if.end435_crit_edge, label %if.then433

err_eeprom.if.end435_crit_edge:                   ; preds = %err_eeprom
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end435

if.then433:                                       ; preds = %err_eeprom
  call void @__sanitizer_cov_trace_pc() #16
  call void @iounmap(ptr noundef nonnull %231) #14
  br label %if.end435

if.end435:                                        ; preds = %if.then433, %err_eeprom.if.end435_crit_edge
  %tx_ring = getelementptr i8, ptr %call16, i32 2920
  %232 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %tx_ring, align 8
  call void @kfree(ptr noundef %233) #14
  %rx_ring = getelementptr i8, ptr %call16, i32 3004
  %234 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %rx_ring, align 4
  call void @kfree(ptr noundef %235) #14
  br label %err_mdio_ioremap

err_mdio_ioremap:                                 ; preds = %if.end435, %if.then79.err_mdio_ioremap_crit_edge, %pci_name.exit.err_mdio_ioremap_crit_edge, %do.end, %if.then5.i, %do.body.i.err_mdio_ioremap_crit_edge
  %err.2 = phi i32 [ %call65, %do.end ], [ %call74, %pci_name.exit.err_mdio_ioremap_crit_edge ], [ %err.1, %if.end435 ], [ -5, %if.then79.err_mdio_ioremap_crit_edge ], [ -5, %if.then5.i ], [ -5, %do.body.i.err_mdio_ioremap_crit_edge ]
  %ce4100_gbe_mdio_base_virt436 = getelementptr i8, ptr %call16, i32 3304
  %236 = ptrtoint ptr %ce4100_gbe_mdio_base_virt436 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %ce4100_gbe_mdio_base_virt436, align 4
  call void @iounmap(ptr noundef %237) #14
  %238 = ptrtoint ptr %hw27 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %hw27, align 4
  call void @iounmap(ptr noundef %239) #14
  br label %err_pci_reg

err_pci_reg.thread668:                            ; preds = %if.end15.err_pci_reg.thread668_crit_edge, %if.end11.err_pci_reg.thread668_crit_edge
  %err.4.ph = phi i32 [ -12, %if.end15.err_pci_reg.thread668_crit_edge ], [ %call12, %if.end11.err_pci_reg.thread668_crit_edge ]
  tail call void @pci_release_selected_regions(ptr noundef %pdev, i32 noundef %bars.0) #14
  br label %if.then445

err_pci_reg:                                      ; preds = %err_mdio_ioremap, %netif_msg_init.exit.err_pci_reg_crit_edge
  %err.3 = phi i32 [ %err.2, %err_mdio_ioremap ], [ -5, %netif_msg_init.exit.err_pci_reg_crit_edge ]
  %flags438 = getelementptr i8, ptr %call16, i32 4240
  %call439 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %flags438) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call439)
  %tobool440.not = icmp eq i32 %call439, 0
  call void @free_netdev(ptr noundef %call16) #14
  call void @pci_release_selected_regions(ptr noundef %pdev, i32 noundef %bars.0) #14
  %tobool441.not = icmp eq ptr %add.ptr.i, null
  %brmerge = select i1 %tobool441.not, i1 true, i1 %tobool440.not
  br i1 %brmerge, label %err_pci_reg.if.then445_crit_edge, label %err_pci_reg.cleanup_crit_edge

err_pci_reg.cleanup_crit_edge:                    ; preds = %err_pci_reg
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

err_pci_reg.if.then445_crit_edge:                 ; preds = %err_pci_reg
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then445

if.then445:                                       ; preds = %err_pci_reg.if.then445_crit_edge, %err_pci_reg.thread668, %if.end7.if.then445_crit_edge
  %err.5667 = phi i32 [ %err.3, %err_pci_reg.if.then445_crit_edge ], [ %err.4.ph, %err_pci_reg.thread668 ], [ %call8, %if.end7.if.then445_crit_edge ]
  call void @pci_disable_device(ptr noundef %pdev) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then445, %err_pci_reg.cleanup_crit_edge, %do.end429, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end429 ], [ %err.0, %if.end.cleanup_crit_edge ], [ %err.3, %err_pci_reg.cleanup_crit_edge ], [ %err.5667, %if.then445 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %tmp) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %eeprom_data) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_remove(ptr noundef %pdev) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %hw2 = getelementptr i8, ptr %1, i32 3296
  %flags.i = getelementptr i8, ptr %1, i32 4240
  tail call void @_set_bit(i32 noundef 2, ptr noundef %flags.i) #14
  %watchdog_task.i = getelementptr i8, ptr %1, i32 4304
  %call.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %watchdog_task.i) #14
  %phy_info_task.i = getelementptr i8, ptr %1, i32 4504
  %call1.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %phy_info_task.i) #14
  %fifo_stall_task.i = getelementptr i8, ptr %1, i32 4404
  %call2.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %fifo_stall_task.i) #14
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.e1000_down_and_stop.exit_crit_edge

entry.e1000_down_and_stop.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_down_and_stop.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %reset_task.i = getelementptr i8, ptr %1, i32 4260
  %call5.i = tail call zeroext i1 @cancel_work_sync(ptr noundef %reset_task.i) #14
  br label %e1000_down_and_stop.exit

e1000_down_and_stop.exit:                         ; preds = %if.then.i, %entry.e1000_down_and_stop.exit_crit_edge
  %en_mng_pt.i = getelementptr i8, ptr %1, i32 2836
  %5 = ptrtoint ptr %en_mng_pt.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %en_mng_pt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i27 = icmp eq i32 %6, 0
  br i1 %tobool.not.i27, label %e1000_down_and_stop.exit.e1000_release_manageability.exit_crit_edge, label %if.then.i29

e1000_down_and_stop.exit.e1000_release_manageability.exit_crit_edge: ; preds = %e1000_down_and_stop.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_release_manageability.exit

if.then.i29:                                      ; preds = %e1000_down_and_stop.exit
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw2, align 4
  %add.ptr.i28 = getelementptr i8, ptr %8, i32 22560
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i28) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !452
  %10 = or i32 %9, 2097152
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !453
  tail call void @arm_heavy_mb() #14
  %11 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hw2, align 4
  %add.ptr7.i = getelementptr i8, ptr %12, i32 22560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7.i, i32 %10) #14, !srcloc !421
  br label %e1000_release_manageability.exit

e1000_release_manageability.exit:                 ; preds = %if.then.i29, %e1000_down_and_stop.exit.e1000_release_manageability.exit_crit_edge
  tail call void @unregister_netdev(ptr noundef %1) #14
  %call3 = tail call i32 @e1000_phy_hw_reset(ptr noundef %hw2) #14
  %tx_ring = getelementptr i8, ptr %1, i32 2920
  %13 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tx_ring, align 8
  tail call void @kfree(ptr noundef %14) #14
  %rx_ring = getelementptr i8, ptr %1, i32 3004
  %15 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rx_ring, align 4
  tail call void @kfree(ptr noundef %16) #14
  %mac_type = getelementptr i8, ptr %1, i32 3308
  %17 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %18)
  %cmp = icmp eq i32 %18, 9
  br i1 %cmp, label %if.then, label %e1000_release_manageability.exit.if.end_crit_edge

e1000_release_manageability.exit.if.end_crit_edge: ; preds = %e1000_release_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %e1000_release_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  %ce4100_gbe_mdio_base_virt = getelementptr i8, ptr %1, i32 3304
  %19 = ptrtoint ptr %ce4100_gbe_mdio_base_virt to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ce4100_gbe_mdio_base_virt, align 4
  tail call void @iounmap(ptr noundef %20) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %e1000_release_manageability.exit.if.end_crit_edge
  %21 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw2, align 4
  tail call void @iounmap(ptr noundef %22) #14
  %flash_address = getelementptr i8, ptr %1, i32 3300
  %23 = ptrtoint ptr %flash_address to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %flash_address, align 4
  %tobool.not = icmp eq ptr %24, null
  br i1 %tobool.not, label %if.end.if.end6_crit_edge, label %if.then4

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @iounmap(ptr noundef nonnull %24) #14
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end.if.end6_crit_edge
  %bars = getelementptr i8, ptr %1, i32 4248
  %25 = ptrtoint ptr %bars to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %bars, align 8
  tail call void @pci_release_selected_regions(ptr noundef %pdev, i32 noundef %26) #14
  %call7 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %flags.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  tail call void @free_netdev(ptr noundef %1) #14
  br i1 %tobool8.not, label %if.then10, label %if.end6.if.end11_crit_edge

if.end6.if.end11_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then10:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end6.if.end11_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_shutdown(ptr noundef %pdev) #4 align 64 {
entry:
  %wake = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %wake) #14
  %0 = ptrtoint ptr %wake to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %wake, align 1, !annotation !460
  call fastcc void @__e1000_shutdown(ptr noundef %pdev, ptr noundef nonnull %wake)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %1 = load i32, ptr @system_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %1)
  %cmp = icmp eq i32 %1, 5
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %2 = ptrtoint ptr %wake to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %wake, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool = icmp ne i8 %3, 0
  %call1 = tail call i32 @pci_wake_from_d3(ptr noundef %pdev, i1 noundef zeroext %tobool) #14
  %call2 = tail call i32 @pci_set_power_state(ptr noundef %pdev, i32 noundef 3) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %wake) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_select_bars(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device_mem(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_request_selected_regions(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_set_master(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_save_state(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_etherdev_mqs(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_ioremap_bar(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @dma_set_mask_and_coherent(ptr noundef %dev, i64 noundef %mask) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @dma_set_mask(ptr noundef %dev, i64 noundef %mask) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1 = tail call i32 @dma_set_coherent_mask(ptr noundef %dev, i64 noundef %mask) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_set_ethtool_ops(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_napi_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_clean(ptr noundef %napi, i32 noundef %budget) #4 align 64 {
entry:
  %regs.i.i.i = alloca [38 x i32], align 4
  %work_done = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %napi, i32 -704
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %work_done) #14
  %0 = ptrtoint ptr %work_done to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %work_done, align 4
  %tx_ring = getelementptr i8, ptr %napi, i32 -88
  %1 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %tx_ring, align 8
  %hw1.i = getelementptr i8, ptr %napi, i32 288
  %netdev2.i = getelementptr i8, ptr %napi, i32 280
  %3 = ptrtoint ptr %netdev2.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %netdev2.i, align 8
  %next_to_clean.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %2, i32 0, i32 5
  %5 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %next_to_clean.i, align 4
  %buffer_info3.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %2, i32 0, i32 6
  %7 = ptrtoint ptr %buffer_info3.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %buffer_info3.i, align 4
  %next_to_watch.i = getelementptr %struct.e1000_tx_buffer, ptr %8, i32 %6, i32 4
  %9 = ptrtoint ptr %next_to_watch.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %next_to_watch.i, align 2
  %conv.i = zext i16 %10 to i32
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %2, align 4
  %count5.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %2, i32 0, i32 3
  %upper262.i = getelementptr %struct.e1000_tx_desc, ptr %12, i32 %conv.i, i32 2
  %13 = ptrtoint ptr %upper262.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %upper262.i, align 4
  %and263.i = and i32 %14, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and263.i)
  %tobool.not264.i = icmp eq i32 %and263.i, 0
  br i1 %tobool.not264.i, label %entry.do.end43.i_crit_edge, label %land.rhs.lr.ph.i

entry.do.end43.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end43.i

land.rhs.lr.ph.i:                                 ; preds = %entry
  %pdev4.i.i = getelementptr i8, ptr %napi, i32 284
  %15 = ptrtoint ptr %count5.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %count5.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i52.not = icmp eq i32 %16, 0
  br i1 %cmp.i52.not, label %land.rhs.lr.ph.i.do.end43.i_crit_edge, label %land.rhs.lr.ph.i.while.body.i_crit_edge

land.rhs.lr.ph.i.while.body.i_crit_edge:          ; preds = %land.rhs.lr.ph.i
  br label %while.body.i

land.rhs.lr.ph.i.do.end43.i_crit_edge:            ; preds = %land.rhs.lr.ph.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end43.i

land.rhs.i:                                       ; preds = %for.end.i
  %17 = ptrtoint ptr %count5.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %count5.i, align 4
  %cmp.i = icmp ult i32 %inc32.i, %18
  br i1 %cmp.i, label %land.rhs.i.while.body.i_crit_edge, label %land.rhs.i.do.end43.i.loopexit_crit_edge

land.rhs.i.do.end43.i.loopexit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end43.i.loopexit

land.rhs.i.while.body.i_crit_edge:                ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

while.body.i:                                     ; preds = %land.rhs.i.while.body.i_crit_edge, %land.rhs.lr.ph.i.while.body.i_crit_edge
  %bytes_compl.0266.i58 = phi i32 [ %bytes_compl.2.i, %land.rhs.i.while.body.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.while.body.i_crit_edge ]
  %total_tx_packets.0267.i57 = phi i32 [ %total_tx_packets.2.i, %land.rhs.i.while.body.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.while.body.i_crit_edge ]
  %total_tx_bytes.0268.i56 = phi i32 [ %total_tx_bytes.2.i, %land.rhs.i.while.body.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.while.body.i_crit_edge ]
  %count.0269.i55 = phi i32 [ %inc32.i, %land.rhs.i.while.body.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.while.body.i_crit_edge ]
  %eop.0270.i54 = phi i32 [ %conv36.i, %land.rhs.i.while.body.i_crit_edge ], [ %conv.i, %land.rhs.lr.ph.i.while.body.i_crit_edge ]
  %i.0271.i53 = phi i32 [ %i.2.i, %land.rhs.i.while.body.i_crit_edge ], [ %6, %land.rhs.lr.ph.i.while.body.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !522
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %while.body.i
  %i.1261.i = phi i32 [ %i.0271.i53, %while.body.i ], [ %i.2.i, %for.inc.i.for.body.i_crit_edge ]
  %count.1260.i = phi i32 [ %count.0269.i55, %while.body.i ], [ %inc32.i, %for.inc.i.for.body.i_crit_edge ]
  %total_tx_bytes.1259.i = phi i32 [ %total_tx_bytes.0268.i56, %while.body.i ], [ %total_tx_bytes.2.i, %for.inc.i.for.body.i_crit_edge ]
  %total_tx_packets.1258.i = phi i32 [ %total_tx_packets.0267.i57, %while.body.i ], [ %total_tx_packets.2.i, %for.inc.i.for.body.i_crit_edge ]
  %bytes_compl.1257.i = phi i32 [ %bytes_compl.0266.i58, %while.body.i ], [ %bytes_compl.2.i, %for.inc.i.for.body.i_crit_edge ]
  %19 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %2, align 4
  %21 = ptrtoint ptr %buffer_info3.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %buffer_info3.i, align 4
  %arrayidx11.i = getelementptr %struct.e1000_tx_buffer, ptr %22, i32 %i.1261.i
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1261.i, i32 %eop.0270.i54)
  %cmp12.i = icmp eq i32 %i.1261.i, %eop.0270.i54
  br i1 %cmp12.i, label %if.then.i, label %for.body.i.if.end21.i_crit_edge

for.body.i.if.end21.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21.i

if.then.i:                                        ; preds = %for.body.i
  %segs.i = getelementptr %struct.e1000_tx_buffer, ptr %22, i32 %eop.0270.i54, i32 6
  %23 = ptrtoint ptr %segs.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %segs.i, align 2
  %conv15.i = zext i16 %24 to i32
  %add.i = add i32 %total_tx_packets.1258.i, %conv15.i
  %bytecount.i = getelementptr %struct.e1000_tx_buffer, ptr %22, i32 %eop.0270.i54, i32 7
  %25 = ptrtoint ptr %bytecount.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %bytecount.i, align 4
  %add16.i = add i32 %26, %total_tx_bytes.1259.i
  %27 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx11.i, align 4
  %tobool17.not.i = icmp eq ptr %28, null
  br i1 %tobool17.not.i, label %if.then.i.if.end21.i_crit_edge, label %if.then18.i

if.then.i.if.end21.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21.i

if.then18.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 6
  %29 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %len.i, align 4
  %add20.i = add i32 %30, %bytes_compl.1257.i
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.then18.i, %if.then.i.if.end21.i_crit_edge, %for.body.i.if.end21.i_crit_edge
  %bytes_compl.2.i = phi i32 [ %add20.i, %if.then18.i ], [ %bytes_compl.1257.i, %if.then.i.if.end21.i_crit_edge ], [ %bytes_compl.1257.i, %for.body.i.if.end21.i_crit_edge ]
  %total_tx_packets.2.i = phi i32 [ %add.i, %if.then18.i ], [ %add.i, %if.then.i.if.end21.i_crit_edge ], [ %total_tx_packets.1258.i, %for.body.i.if.end21.i_crit_edge ]
  %total_tx_bytes.2.i = phi i32 [ %add16.i, %if.then18.i ], [ %add16.i, %if.then.i.if.end21.i_crit_edge ], [ %total_tx_bytes.1259.i, %for.body.i.if.end21.i_crit_edge ]
  %dma.i.i = getelementptr %struct.e1000_tx_buffer, ptr %22, i32 %i.1261.i, i32 1
  %31 = ptrtoint ptr %dma.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %dma.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i.i = icmp eq i32 %32, 0
  br i1 %tobool.not.i.i, label %if.end21.i.if.end10.i.i_crit_edge, label %if.then.i.i

if.end21.i.if.end10.i.i_crit_edge:                ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.i.i

if.then.i.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  %33 = ptrtoint ptr %pdev4.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pdev4.i.i, align 4
  %dev5.i.i = getelementptr inbounds %struct.pci_dev, ptr %34, i32 0, i32 44
  %length7.i.i = getelementptr %struct.e1000_tx_buffer, ptr %22, i32 %i.1261.i, i32 3
  %35 = ptrtoint ptr %length7.i.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %length7.i.i, align 4
  %conv8.i.i = zext i16 %36 to i32
  tail call void @dma_unmap_page_attrs(ptr noundef %dev5.i.i, i32 noundef %32, i32 noundef %conv8.i.i, i32 noundef 1, i32 noundef 0) #14
  %37 = ptrtoint ptr %dma.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %dma.i.i, align 4
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.then.i.i, %if.end21.i.if.end10.i.i_crit_edge
  %38 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx11.i, align 4
  %tobool11.not.i.i = icmp eq ptr %39, null
  br i1 %tobool11.not.i.i, label %if.end10.i.i.e1000_unmap_and_free_tx_resource.exit.i_crit_edge, label %if.then12.i.i

if.end10.i.i.e1000_unmap_and_free_tx_resource.exit.i_crit_edge: ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_unmap_and_free_tx_resource.exit.i

if.then12.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @napi_consume_skb(ptr noundef nonnull %39, i32 noundef 64) #14
  %40 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %arrayidx11.i, align 4
  br label %e1000_unmap_and_free_tx_resource.exit.i

e1000_unmap_and_free_tx_resource.exit.i:          ; preds = %if.then12.i.i, %if.end10.i.i.e1000_unmap_and_free_tx_resource.exit.i_crit_edge
  %time_stamp.i.i = getelementptr %struct.e1000_tx_buffer, ptr %22, i32 %i.1261.i, i32 2
  %41 = ptrtoint ptr %time_stamp.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %time_stamp.i.i, align 4
  %upper22.i = getelementptr %struct.e1000_tx_desc, ptr %20, i32 %i.1261.i, i32 2
  %42 = ptrtoint ptr %upper22.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %upper22.i, align 4
  %inc23.i = add i32 %i.1261.i, 1
  %43 = ptrtoint ptr %count5.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %count5.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc23.i, i32 %44)
  %cmp25.i = icmp eq i32 %inc23.i, %44
  br i1 %cmp25.i, label %if.then30.i, label %e1000_unmap_and_free_tx_resource.exit.i.for.inc.i_crit_edge, !prof !456

e1000_unmap_and_free_tx_resource.exit.i.for.inc.i_crit_edge: ; preds = %e1000_unmap_and_free_tx_resource.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then30.i:                                      ; preds = %e1000_unmap_and_free_tx_resource.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then30.i, %e1000_unmap_and_free_tx_resource.exit.i.for.inc.i_crit_edge
  %i.2.i = phi i32 [ 0, %if.then30.i ], [ %inc23.i, %e1000_unmap_and_free_tx_resource.exit.i.for.inc.i_crit_edge ]
  %inc32.i = add i32 %count.1260.i, 1
  br i1 %cmp12.i, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  %45 = ptrtoint ptr %buffer_info3.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %buffer_info3.i, align 4
  %next_to_watch35.i = getelementptr %struct.e1000_tx_buffer, ptr %46, i32 %i.2.i, i32 4
  %47 = ptrtoint ptr %next_to_watch35.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %next_to_watch35.i, align 2
  %conv36.i = zext i16 %48 to i32
  %49 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %2, align 4
  %upper.i = getelementptr %struct.e1000_tx_desc, ptr %50, i32 %conv36.i, i32 2
  %51 = ptrtoint ptr %upper.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %upper.i, align 4
  %and.i = and i32 %52, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.end.i.do.end43.i.loopexit_crit_edge, label %land.rhs.i

for.end.i.do.end43.i.loopexit_crit_edge:          ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end43.i.loopexit

do.end43.i.loopexit:                              ; preds = %for.end.i.do.end43.i.loopexit_crit_edge, %land.rhs.i.do.end43.i.loopexit_crit_edge
  %conv36.i.le = zext i16 %48 to i32
  br label %do.end43.i

do.end43.i:                                       ; preds = %do.end43.i.loopexit, %land.rhs.lr.ph.i.do.end43.i_crit_edge, %entry.do.end43.i_crit_edge
  %bytes_compl.0.lcssa.i = phi i32 [ 0, %entry.do.end43.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.do.end43.i_crit_edge ], [ %bytes_compl.2.i, %do.end43.i.loopexit ]
  %total_tx_packets.0.lcssa.i = phi i32 [ 0, %entry.do.end43.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.do.end43.i_crit_edge ], [ %total_tx_packets.2.i, %do.end43.i.loopexit ]
  %total_tx_bytes.0.lcssa.i = phi i32 [ 0, %entry.do.end43.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.do.end43.i_crit_edge ], [ %total_tx_bytes.2.i, %do.end43.i.loopexit ]
  %count.0.lcssa.i = phi i32 [ 0, %entry.do.end43.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.do.end43.i_crit_edge ], [ %inc32.i, %do.end43.i.loopexit ]
  %eop.0.lcssa.i = phi i32 [ %conv.i, %entry.do.end43.i_crit_edge ], [ %conv.i, %land.rhs.lr.ph.i.do.end43.i_crit_edge ], [ %conv36.i.le, %do.end43.i.loopexit ]
  %i.0.lcssa.i = phi i32 [ %6, %entry.do.end43.i_crit_edge ], [ %6, %land.rhs.lr.ph.i.do.end43.i_crit_edge ], [ %i.2.i, %do.end43.i.loopexit ]
  %upper.lcssa.i = phi ptr [ %upper262.i, %entry.do.end43.i_crit_edge ], [ %upper262.i, %land.rhs.lr.ph.i.do.end43.i_crit_edge ], [ %upper.i, %do.end43.i.loopexit ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !523
  %53 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile i32 %i.0.lcssa.i, ptr %next_to_clean.i, align 4
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 103
  %54 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %_tx.i.i.i, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bytes_compl.0.lcssa.i)
  %tobool.not.i.i.i = icmp eq i32 %bytes_compl.0.lcssa.i, 0
  br i1 %tobool.not.i.i.i, label %do.end43.i.netdev_completed_queue.exit.i_crit_edge, label %if.end.i.i.i, !prof !456

do.end43.i.netdev_completed_queue.exit.i_crit_edge: ; preds = %do.end43.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netdev_completed_queue.exit.i

if.end.i.i.i:                                     ; preds = %do.end43.i
  %dql.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %55, i32 0, i32 15
  tail call void @dql_completed(ptr noundef %dql.i.i.i, i32 noundef %bytes_compl.0.lcssa.i) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !524
  %adj_limit.i.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %55, i32 0, i32 15, i32 1
  %56 = ptrtoint ptr %adj_limit.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %adj_limit.i.i.i.i, align 4
  %58 = ptrtoint ptr %dql.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %dql.i.i.i, align 128
  %sub.i.i.i.i = sub i32 %57, %59
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %sub.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.end.i.i.i.netdev_completed_queue.exit.i_crit_edge, label %if.end14.i.i.i, !prof !456

if.end.i.i.i.netdev_completed_queue.exit.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netdev_completed_queue.exit.i

if.end14.i.i.i:                                   ; preds = %if.end.i.i.i
  %state.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %55, i32 0, i32 13
  %call15.i.i.i = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %state.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i.i.i)
  %tobool16.not.i.i.i = icmp eq i32 %call15.i.i.i, 0
  br i1 %tobool16.not.i.i.i, label %if.end14.i.i.i.netdev_completed_queue.exit.i_crit_edge, label %if.then17.i.i.i

if.end14.i.i.i.netdev_completed_queue.exit.i_crit_edge: ; preds = %if.end14.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netdev_completed_queue.exit.i

if.then17.i.i.i:                                  ; preds = %if.end14.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @netif_schedule_queue(ptr noundef %55) #14
  br label %netdev_completed_queue.exit.i

netdev_completed_queue.exit.i:                    ; preds = %if.then17.i.i.i, %if.end14.i.i.i.netdev_completed_queue.exit.i_crit_edge, %if.end.i.i.i.netdev_completed_queue.exit.i_crit_edge, %do.end43.i.netdev_completed_queue.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.0.lcssa.i)
  %tobool58.not.i = icmp eq i32 %count.0.lcssa.i, 0
  br i1 %tobool58.not.i, label %netdev_completed_queue.exit.i.if.end103.i_crit_edge, label %land.lhs.true.i

netdev_completed_queue.exit.i.if.end103.i_crit_edge: ; preds = %netdev_completed_queue.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end103.i

land.lhs.true.i:                                  ; preds = %netdev_completed_queue.exit.i
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 6
  %60 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %state.i.i, align 4
  %62 = and i32 %61, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i247.i = icmp eq i32 %62, 0
  br i1 %tobool.not.i247.i, label %land.rhs60.i, label %land.lhs.true.i.if.end103.i_crit_edge

land.lhs.true.i.if.end103.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end103.i

land.rhs60.i:                                     ; preds = %land.lhs.true.i
  %63 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %next_to_clean.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !525
  %next_to_use.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %2, i32 0, i32 4
  %65 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %next_to_use.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %66)
  %cmp74.i = icmp ugt i32 %64, %66
  br i1 %cmp74.i, label %land.rhs60.i.cond.end.i_crit_edge, label %cond.false.i

land.rhs60.i.cond.end.i_crit_edge:                ; preds = %land.rhs60.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i

cond.false.i:                                     ; preds = %land.rhs60.i
  call void @__sanitizer_cov_trace_pc() #16
  %67 = ptrtoint ptr %count5.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %count5.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %land.rhs60.i.cond.end.i_crit_edge
  %cond.i = phi i32 [ %68, %cond.false.i ], [ 0, %land.rhs60.i.cond.end.i_crit_edge ]
  %69 = xor i32 %66, -1
  %add77.i = add i32 %64, %69
  %sub78.i = add i32 %add77.i, %cond.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %sub78.i)
  %cmp79.i = icmp ugt i32 %sub78.i, 31
  br i1 %cmp79.i, label %do.end92.i, label %cond.end.i.if.end103.i_crit_edge, !prof !456

cond.end.i.if.end103.i_crit_edge:                 ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end103.i

do.end92.i:                                       ; preds = %cond.end.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !526
  %70 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %_tx.i.i.i, align 128
  %state.i.i249.i = getelementptr inbounds %struct.netdev_queue, ptr %71, i32 0, i32 13
  %72 = ptrtoint ptr %state.i.i249.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %state.i.i249.i, align 4
  %and1.i.i.i.i = and i32 %73, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool.i.i.not.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool.i.i.not.i, label %do.end92.i.if.end103.i_crit_edge, label %land.lhs.true97.i

do.end92.i.if.end103.i_crit_edge:                 ; preds = %do.end92.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end103.i

land.lhs.true97.i:                                ; preds = %do.end92.i
  %flags.i = getelementptr i8, ptr %napi, i32 1232
  %74 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %flags.i, align 4
  %76 = and i32 %75, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %tobool99.not.i = icmp eq i32 %76, 0
  br i1 %tobool99.not.i, label %if.then100.i, label %land.lhs.true97.i.if.end103.i_crit_edge

land.lhs.true97.i.if.end103.i_crit_edge:          ; preds = %land.lhs.true97.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end103.i

if.then100.i:                                     ; preds = %land.lhs.true97.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @netif_tx_wake_queue(ptr noundef %71) #14
  %restart_queue.i = getelementptr i8, ptr %napi, i32 -84
  %77 = ptrtoint ptr %restart_queue.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %restart_queue.i, align 4
  %inc101.i = add i32 %78, 1
  store i32 %inc101.i, ptr %restart_queue.i, align 4
  br label %if.end103.i

if.end103.i:                                      ; preds = %if.then100.i, %land.lhs.true97.i.if.end103.i_crit_edge, %do.end92.i.if.end103.i_crit_edge, %cond.end.i.if.end103.i_crit_edge, %land.lhs.true.i.if.end103.i_crit_edge, %netdev_completed_queue.exit.i.if.end103.i_crit_edge
  %detect_tx_hung.i = getelementptr i8, ptr %napi, i32 -15
  %79 = ptrtoint ptr %detect_tx_hung.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %detect_tx_hung.i, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %80)
  %tobool104.not.i = icmp eq i8 %80, 0
  br i1 %tobool104.not.i, label %if.end103.i.e1000_clean_tx_irq.exit_crit_edge, label %if.then105.i

if.end103.i.e1000_clean_tx_irq.exit_crit_edge:    ; preds = %if.end103.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_clean_tx_irq.exit

if.then105.i:                                     ; preds = %if.end103.i
  %81 = ptrtoint ptr %detect_tx_hung.i to i32
  call void @__asan_store1_noabort(i32 %81)
  store i8 0, ptr %detect_tx_hung.i, align 1
  %82 = ptrtoint ptr %buffer_info3.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %buffer_info3.i, align 4
  %time_stamp.i = getelementptr %struct.e1000_tx_buffer, ptr %83, i32 %eop.0.lcssa.i, i32 2
  %84 = ptrtoint ptr %time_stamp.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %time_stamp.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool109.not.i = icmp eq i32 %85, 0
  br i1 %tobool109.not.i, label %if.then105.i.e1000_clean_tx_irq.exit_crit_edge, label %land.lhs.true110.i

if.then105.i.e1000_clean_tx_irq.exit_crit_edge:   ; preds = %if.then105.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_clean_tx_irq.exit

land.lhs.true110.i:                               ; preds = %if.then105.i
  %tx_timeout_factor.i = getelementptr i8, ptr %napi, i32 -24
  %86 = ptrtoint ptr %tx_timeout_factor.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %tx_timeout_factor.i, align 8
  %conv114.i = zext i8 %87 to i32
  %mul.i = mul nuw nsw i32 %conv114.i, 100
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %88 = load volatile i32, ptr @jiffies, align 128
  %add115.i = sub i32 %85, %88
  %sub116.i = add i32 %add115.i, %mul.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub116.i)
  %cmp117.i = icmp slt i32 %sub116.i, 0
  br i1 %cmp117.i, label %land.lhs.true119.i, label %land.lhs.true110.i.e1000_clean_tx_irq.exit_crit_edge

land.lhs.true110.i.e1000_clean_tx_irq.exit_crit_edge: ; preds = %land.lhs.true110.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_clean_tx_irq.exit

land.lhs.true119.i:                               ; preds = %land.lhs.true110.i
  %89 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i = getelementptr i8, ptr %90, i32 8
  %91 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !527
  %92 = and i32 %91, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %tobool127.not.i = icmp eq i32 %92, 0
  br i1 %tobool127.not.i, label %do.body129.i, label %land.lhs.true119.i.e1000_clean_tx_irq.exit_crit_edge

land.lhs.true119.i.e1000_clean_tx_irq.exit_crit_edge: ; preds = %land.lhs.true119.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_clean_tx_irq.exit

do.body129.i:                                     ; preds = %land.lhs.true119.i
  %msg_enable.i = getelementptr i8, ptr %napi, i32 1224
  %93 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %msg_enable.i, align 8
  %and130.i = and i32 %94, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and130.i)
  %tobool131.not.i = icmp eq i32 %and130.i, 0
  br i1 %tobool131.not.i, label %do.body129.i.do.end160.i_crit_edge, label %if.then132.i

do.body129.i.do.end160.i_crit_edge:               ; preds = %do.body129.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end160.i

if.then132.i:                                     ; preds = %do.body129.i
  call void @__sanitizer_cov_trace_pc() #16
  %95 = ptrtoint ptr %netdev2.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %netdev2.i, align 8
  %97 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %tx_ring, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %2 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %98 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  %99 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %hw1.i, align 4
  %tdh.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %2, i32 0, i32 7
  %101 = ptrtoint ptr %tdh.i to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %tdh.i, align 4
  %conv138.i = zext i16 %102 to i32
  %add.ptr139.i = getelementptr i8, ptr %100, i32 %conv138.i
  %103 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr139.i) #14, !srcloc !422
  %104 = tail call i32 @llvm.bswap.i32(i32 %103) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !528
  %105 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %hw1.i, align 4
  %tdt.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %2, i32 0, i32 8
  %107 = ptrtoint ptr %tdt.i to i32
  call void @__asan_load2_noabort(i32 %107)
  %108 = load i16, ptr %tdt.i, align 2
  %conv146.i = zext i16 %108 to i32
  %add.ptr147.i = getelementptr i8, ptr %106, i32 %conv146.i
  %109 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr147.i) #14, !srcloc !422
  %110 = tail call i32 @llvm.bswap.i32(i32 %109) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !529
  %next_to_use151.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %2, i32 0, i32 4
  %111 = ptrtoint ptr %next_to_use151.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %next_to_use151.i, align 4
  %113 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %next_to_clean.i, align 4
  %115 = ptrtoint ptr %buffer_info3.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %buffer_info3.i, align 4
  %time_stamp155.i = getelementptr %struct.e1000_tx_buffer, ptr %116, i32 %eop.0.lcssa.i, i32 2
  %117 = ptrtoint ptr %time_stamp155.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %time_stamp155.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %119 = load volatile i32, ptr @jiffies, align 128
  %120 = ptrtoint ptr %upper.lcssa.i to i32
  call void @__asan_load1_noabort(i32 %120)
  %121 = load i8, ptr %upper.lcssa.i, align 4
  %conv157.i = zext i8 %121 to i32
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %96, ptr noundef nonnull @.str.63, i32 noundef %sub.ptr.div.i, i32 noundef %104, i32 noundef %110, i32 noundef %112, i32 noundef %114, i32 noundef %118, i32 noundef %eop.0.lcssa.i, i32 noundef %119, i32 noundef %conv157.i) #17
  br label %do.end160.i

do.end160.i:                                      ; preds = %if.then132.i, %do.body129.i.do.end160.i_crit_edge
  %122 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %tx_ring, align 8
  %rx_ring2.i.i = getelementptr i8, ptr %napi, i32 -4
  %124 = ptrtoint ptr %rx_ring2.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %rx_ring2.i.i, align 4
  %126 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %msg_enable.i, align 8
  %and.i.i = and i32 %127, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i251.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i251.i, label %do.end160.i.e1000_dump.exit.i_crit_edge, label %if.end.i.i

do.end160.i.e1000_dump.exit.i_crit_edge:          ; preds = %do.end160.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_dump.exit.i

if.end.i.i:                                       ; preds = %do.end160.i
  call void @llvm.lifetime.start.p0(i64 152, ptr nonnull %regs.i.i.i) #14
  %128 = getelementptr inbounds i8, ptr %regs.i.i.i, i32 116
  %129 = call ptr @memset(ptr %128, i32 255, i32 36)
  %130 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %hw1.i, align 4
  %mac_type.i.i.i = getelementptr i8, ptr %napi, i32 300
  %132 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %131) #14, !srcloc !422
  %133 = tail call i32 @llvm.bswap.i32(i32 %132) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !530
  %134 = ptrtoint ptr %regs.i.i.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %133, ptr %regs.i.i.i, align 4
  %135 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %hw1.i, align 4
  %add.ptr9.i.i.i = getelementptr i8, ptr %136, i32 8
  %137 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr9.i.i.i) #14, !srcloc !422
  %138 = tail call i32 @llvm.bswap.i32(i32 %137) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !531
  %arrayidx13.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 1
  %139 = ptrtoint ptr %arrayidx13.i.i.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 %138, ptr %arrayidx13.i.i.i, align 4
  %140 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %hw1.i, align 4
  %add.ptr20.i.i.i = getelementptr i8, ptr %141, i32 256
  %142 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr20.i.i.i) #14, !srcloc !422
  %143 = tail call i32 @llvm.bswap.i32(i32 %142) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !532
  %arrayidx24.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 2
  %144 = ptrtoint ptr %arrayidx24.i.i.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %143, ptr %arrayidx24.i.i.i, align 4
  %145 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %hw1.i, align 4
  %147 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %148)
  %cmp29.i.i.i = icmp ugt i32 %148, 2
  %cond30.i.i.i = select i1 %cmp29.i.i.i, i32 10248, i32 280
  %add.ptr31.i.i.i = getelementptr i8, ptr %146, i32 %cond30.i.i.i
  %149 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr31.i.i.i) #14, !srcloc !422
  %150 = tail call i32 @llvm.bswap.i32(i32 %149) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !533
  %arrayidx35.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 3
  %151 = ptrtoint ptr %arrayidx35.i.i.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %150, ptr %arrayidx35.i.i.i, align 4
  %152 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %hw1.i, align 4
  %154 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %155)
  %cmp40.i.i.i = icmp ugt i32 %155, 2
  %cond41.i.i.i = select i1 %cmp40.i.i.i, i32 10256, i32 288
  %add.ptr42.i.i.i = getelementptr i8, ptr %153, i32 %cond41.i.i.i
  %156 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr42.i.i.i) #14, !srcloc !422
  %157 = tail call i32 @llvm.bswap.i32(i32 %156) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !534
  %arrayidx46.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 4
  %158 = ptrtoint ptr %arrayidx46.i.i.i to i32
  call void @__asan_store4_noabort(i32 %158)
  store i32 %157, ptr %arrayidx46.i.i.i, align 4
  %159 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %hw1.i, align 4
  %161 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %162)
  %cmp51.i.i.i = icmp ugt i32 %162, 2
  %cond52.i.i.i = select i1 %cmp51.i.i.i, i32 10264, i32 296
  %add.ptr53.i.i.i = getelementptr i8, ptr %160, i32 %cond52.i.i.i
  %163 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr53.i.i.i) #14, !srcloc !422
  %164 = tail call i32 @llvm.bswap.i32(i32 %163) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !535
  %arrayidx57.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 5
  %165 = ptrtoint ptr %arrayidx57.i.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 %164, ptr %arrayidx57.i.i.i, align 4
  %166 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %hw1.i, align 4
  %168 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %169)
  %cmp62.i.i.i = icmp ugt i32 %169, 2
  %cond63.i.i.i = select i1 %cmp62.i.i.i, i32 10272, i32 264
  %add.ptr64.i.i.i = getelementptr i8, ptr %167, i32 %cond63.i.i.i
  %170 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr64.i.i.i) #14, !srcloc !422
  %171 = tail call i32 @llvm.bswap.i32(i32 %170) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !536
  %arrayidx68.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 6
  %172 = ptrtoint ptr %arrayidx68.i.i.i to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %171, ptr %arrayidx68.i.i.i, align 4
  %173 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %hw1.i, align 4
  %add.ptr75.i.i.i = getelementptr i8, ptr %174, i32 1024
  %175 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr75.i.i.i) #14, !srcloc !422
  %176 = tail call i32 @llvm.bswap.i32(i32 %175) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !537
  %arrayidx79.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 7
  %177 = ptrtoint ptr %arrayidx79.i.i.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 %176, ptr %arrayidx79.i.i.i, align 4
  %178 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %hw1.i, align 4
  %180 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %181)
  %cmp84.i.i.i = icmp ugt i32 %181, 2
  %cond85.i.i.i = select i1 %cmp84.i.i.i, i32 14336, i32 1056
  %add.ptr86.i.i.i = getelementptr i8, ptr %179, i32 %cond85.i.i.i
  %182 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr86.i.i.i) #14, !srcloc !422
  %183 = tail call i32 @llvm.bswap.i32(i32 %182) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !538
  %arrayidx90.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 8
  %184 = ptrtoint ptr %arrayidx90.i.i.i to i32
  call void @__asan_store4_noabort(i32 %184)
  store i32 %183, ptr %arrayidx90.i.i.i, align 4
  %185 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %hw1.i, align 4
  %187 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %188)
  %cmp95.i.i.i = icmp ugt i32 %188, 2
  %cond96.i.i.i = select i1 %cmp95.i.i.i, i32 14340, i32 1060
  %add.ptr97.i.i.i = getelementptr i8, ptr %186, i32 %cond96.i.i.i
  %189 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr97.i.i.i) #14, !srcloc !422
  %190 = tail call i32 @llvm.bswap.i32(i32 %189) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !539
  %arrayidx101.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 9
  %191 = ptrtoint ptr %arrayidx101.i.i.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 %190, ptr %arrayidx101.i.i.i, align 4
  %192 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %hw1.i, align 4
  %194 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %195)
  %cmp106.i.i.i = icmp ugt i32 %195, 2
  %cond107.i.i.i = select i1 %cmp106.i.i.i, i32 14344, i32 1064
  %add.ptr108.i.i.i = getelementptr i8, ptr %193, i32 %cond107.i.i.i
  %196 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr108.i.i.i) #14, !srcloc !422
  %197 = tail call i32 @llvm.bswap.i32(i32 %196) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !540
  %arrayidx112.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 10
  %198 = ptrtoint ptr %arrayidx112.i.i.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 %197, ptr %arrayidx112.i.i.i, align 4
  %199 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %hw1.i, align 4
  %201 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %202)
  %cmp117.i.i.i = icmp ugt i32 %202, 2
  %cond118.i.i.i = select i1 %cmp117.i.i.i, i32 14352, i32 1072
  %add.ptr119.i.i.i = getelementptr i8, ptr %200, i32 %cond118.i.i.i
  %203 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr119.i.i.i) #14, !srcloc !422
  %204 = tail call i32 @llvm.bswap.i32(i32 %203) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !541
  %arrayidx123.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 11
  %205 = ptrtoint ptr %arrayidx123.i.i.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %204, ptr %arrayidx123.i.i.i, align 4
  %206 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %hw1.i, align 4
  %208 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %209)
  %cmp128.i.i.i = icmp ugt i32 %209, 2
  %cond129.i.i.i = select i1 %cmp128.i.i.i, i32 14360, i32 1080
  %add.ptr130.i.i.i = getelementptr i8, ptr %207, i32 %cond129.i.i.i
  %210 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr130.i.i.i) #14, !srcloc !422
  %211 = tail call i32 @llvm.bswap.i32(i32 %210) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !542
  %arrayidx134.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 12
  %212 = ptrtoint ptr %arrayidx134.i.i.i to i32
  call void @__asan_store4_noabort(i32 %212)
  store i32 %211, ptr %arrayidx134.i.i.i, align 4
  %213 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %hw1.i, align 4
  %215 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %216)
  %cmp139.i.i.i = icmp ugt i32 %216, 2
  %cond140.i.i.i = select i1 %cmp139.i.i.i, i32 14368, i32 1088
  %add.ptr141.i.i.i = getelementptr i8, ptr %214, i32 %cond140.i.i.i
  %217 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr141.i.i.i) #14, !srcloc !422
  %218 = tail call i32 @llvm.bswap.i32(i32 %217) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !543
  %arrayidx145.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 13
  %219 = ptrtoint ptr %arrayidx145.i.i.i to i32
  call void @__asan_store4_noabort(i32 %219)
  store i32 %218, ptr %arrayidx145.i.i.i, align 4
  %220 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %hw1.i, align 4
  %add.ptr152.i.i.i = getelementptr i8, ptr %221, i32 14376
  %222 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr152.i.i.i) #14, !srcloc !422
  %223 = tail call i32 @llvm.bswap.i32(i32 %222) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !544
  %arrayidx156.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 14
  %224 = ptrtoint ptr %arrayidx156.i.i.i to i32
  call void @__asan_store4_noabort(i32 %224)
  store i32 %223, ptr %arrayidx156.i.i.i, align 4
  %225 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %hw1.i, align 4
  %add.ptr163.i.i.i = getelementptr i8, ptr %226, i32 14380
  %227 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr163.i.i.i) #14, !srcloc !422
  %228 = tail call i32 @llvm.bswap.i32(i32 %227) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !545
  %arrayidx167.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 15
  %229 = ptrtoint ptr %arrayidx167.i.i.i to i32
  call void @__asan_store4_noabort(i32 %229)
  store i32 %228, ptr %arrayidx167.i.i.i, align 4
  %230 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %hw1.i, align 4
  %add.ptr174.i.i.i = getelementptr i8, ptr %231, i32 14400
  %232 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr174.i.i.i) #14, !srcloc !422
  %233 = tail call i32 @llvm.bswap.i32(i32 %232) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !546
  %arrayidx178.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 16
  %234 = ptrtoint ptr %arrayidx178.i.i.i to i32
  call void @__asan_store4_noabort(i32 %234)
  store i32 %233, ptr %arrayidx178.i.i.i, align 4
  %235 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load ptr, ptr %hw1.i, align 4
  %add.ptr185.i.i.i = getelementptr i8, ptr %236, i32 14592
  %237 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr185.i.i.i) #14, !srcloc !422
  %238 = tail call i32 @llvm.bswap.i32(i32 %237) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !547
  %arrayidx189.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 17
  %239 = ptrtoint ptr %arrayidx189.i.i.i to i32
  call void @__asan_store4_noabort(i32 %239)
  store i32 %238, ptr %arrayidx189.i.i.i, align 4
  %240 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %hw1.i, align 4
  %add.ptr196.i.i.i = getelementptr i8, ptr %241, i32 14596
  %242 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr196.i.i.i) #14, !srcloc !422
  %243 = tail call i32 @llvm.bswap.i32(i32 %242) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !548
  %arrayidx200.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 18
  %244 = ptrtoint ptr %arrayidx200.i.i.i to i32
  call void @__asan_store4_noabort(i32 %244)
  store i32 %243, ptr %arrayidx200.i.i.i, align 4
  %245 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %hw1.i, align 4
  %add.ptr207.i.i.i = getelementptr i8, ptr %246, i32 14600
  %247 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr207.i.i.i) #14, !srcloc !422
  %248 = tail call i32 @llvm.bswap.i32(i32 %247) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !549
  %arrayidx211.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 19
  %249 = ptrtoint ptr %arrayidx211.i.i.i to i32
  call void @__asan_store4_noabort(i32 %249)
  store i32 %248, ptr %arrayidx211.i.i.i, align 4
  %250 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %hw1.i, align 4
  %add.ptr218.i.i.i = getelementptr i8, ptr %251, i32 14608
  %252 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr218.i.i.i) #14, !srcloc !422
  %253 = tail call i32 @llvm.bswap.i32(i32 %252) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !550
  %arrayidx222.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 20
  %254 = ptrtoint ptr %arrayidx222.i.i.i to i32
  call void @__asan_store4_noabort(i32 %254)
  store i32 %253, ptr %arrayidx222.i.i.i, align 4
  %255 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %hw1.i, align 4
  %add.ptr229.i.i.i = getelementptr i8, ptr %256, i32 14616
  %257 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr229.i.i.i) #14, !srcloc !422
  %258 = tail call i32 @llvm.bswap.i32(i32 %257) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !551
  %arrayidx233.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 21
  %259 = ptrtoint ptr %arrayidx233.i.i.i to i32
  call void @__asan_store4_noabort(i32 %259)
  store i32 %258, ptr %arrayidx233.i.i.i, align 4
  %260 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %hw1.i, align 4
  %add.ptr240.i.i.i = getelementptr i8, ptr %261, i32 14632
  %262 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr240.i.i.i) #14, !srcloc !422
  %263 = tail call i32 @llvm.bswap.i32(i32 %262) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !552
  %arrayidx244.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 22
  %264 = ptrtoint ptr %arrayidx244.i.i.i to i32
  call void @__asan_store4_noabort(i32 %264)
  store i32 %263, ptr %arrayidx244.i.i.i, align 4
  %265 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %hw1.i, align 4
  %add.ptr251.i.i.i = getelementptr i8, ptr %266, i32 14656
  %267 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr251.i.i.i) #14, !srcloc !422
  %268 = tail call i32 @llvm.bswap.i32(i32 %267) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !553
  %arrayidx255.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 23
  %269 = ptrtoint ptr %arrayidx255.i.i.i to i32
  call void @__asan_store4_noabort(i32 %269)
  store i32 %268, ptr %arrayidx255.i.i.i, align 4
  %270 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %hw1.i, align 4
  %add.ptr262.i.i.i = getelementptr i8, ptr %271, i32 24
  %272 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr262.i.i.i) #14, !srcloc !422
  %273 = tail call i32 @llvm.bswap.i32(i32 %272) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !554
  %arrayidx266.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 24
  %274 = ptrtoint ptr %arrayidx266.i.i.i to i32
  call void @__asan_store4_noabort(i32 %274)
  store i32 %273, ptr %arrayidx266.i.i.i, align 4
  %275 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %hw1.i, align 4
  %add.ptr273.i.i.i = getelementptr i8, ptr %276, i32 8200
  %277 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr273.i.i.i) #14, !srcloc !422
  %278 = tail call i32 @llvm.bswap.i32(i32 %277) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !555
  %arrayidx277.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 25
  %279 = ptrtoint ptr %arrayidx277.i.i.i to i32
  call void @__asan_store4_noabort(i32 %279)
  store i32 %278, ptr %arrayidx277.i.i.i, align 4
  %280 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %hw1.i, align 4
  %282 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %283)
  %cmp282.i.i.i = icmp ugt i32 %283, 2
  %cond283.i.i.i = select i1 %cmp282.i.i.i, i32 10240, i32 272
  %add.ptr284.i.i.i = getelementptr i8, ptr %281, i32 %cond283.i.i.i
  %284 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr284.i.i.i) #14, !srcloc !422
  %285 = tail call i32 @llvm.bswap.i32(i32 %284) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !556
  %arrayidx288.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 26
  %286 = ptrtoint ptr %arrayidx288.i.i.i to i32
  call void @__asan_store4_noabort(i32 %286)
  store i32 %285, ptr %arrayidx288.i.i.i, align 4
  %287 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %hw1.i, align 4
  %289 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %290)
  %cmp293.i.i.i = icmp ugt i32 %290, 2
  %cond294.i.i.i = select i1 %cmp293.i.i.i, i32 10244, i32 276
  %add.ptr295.i.i.i = getelementptr i8, ptr %288, i32 %cond294.i.i.i
  %291 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr295.i.i.i) #14, !srcloc !422
  %292 = tail call i32 @llvm.bswap.i32(i32 %291) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !557
  %arrayidx299.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 27
  %293 = ptrtoint ptr %arrayidx299.i.i.i to i32
  call void @__asan_store4_noabort(i32 %293)
  store i32 %292, ptr %arrayidx299.i.i.i, align 4
  %294 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %hw1.i, align 4
  %296 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %297)
  %cmp304.i.i.i = icmp ugt i32 %297, 2
  %cond305.i.i.i = select i1 %cmp304.i.i.i, i32 13328, i32 32784
  %add.ptr306.i.i.i = getelementptr i8, ptr %295, i32 %cond305.i.i.i
  %298 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr306.i.i.i) #14, !srcloc !422
  %299 = tail call i32 @llvm.bswap.i32(i32 %298) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !558
  %arrayidx310.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 28
  %300 = ptrtoint ptr %arrayidx310.i.i.i to i32
  call void @__asan_store4_noabort(i32 %300)
  store i32 %299, ptr %arrayidx310.i.i.i, align 4
  %301 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load ptr, ptr %hw1.i, align 4
  %303 = ptrtoint ptr %mac_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load i32, ptr %mac_type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %304)
  %cmp315.i.i.i = icmp ugt i32 %304, 2
  %cond316.i.i.i = select i1 %cmp315.i.i.i, i32 13336, i32 32792
  %add.ptr317.i.i.i = getelementptr i8, ptr %302, i32 %cond316.i.i.i
  %305 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr317.i.i.i) #14, !srcloc !422
  %306 = tail call i32 @llvm.bswap.i32(i32 %305) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !559
  %307 = ptrtoint ptr %128 to i32
  call void @__asan_store4_noabort(i32 %307)
  store i32 %306, ptr %128, align 4
  %308 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %hw1.i, align 4
  %add.ptr328.i.i.i = getelementptr i8, ptr %309, i32 13344
  %310 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr328.i.i.i) #14, !srcloc !422
  %311 = tail call i32 @llvm.bswap.i32(i32 %310) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !560
  %arrayidx332.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 30
  %312 = ptrtoint ptr %arrayidx332.i.i.i to i32
  call void @__asan_store4_noabort(i32 %312)
  store i32 %311, ptr %arrayidx332.i.i.i, align 4
  %313 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %hw1.i, align 4
  %add.ptr339.i.i.i = getelementptr i8, ptr %314, i32 13352
  %315 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr339.i.i.i) #14, !srcloc !422
  %316 = tail call i32 @llvm.bswap.i32(i32 %315) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !561
  %arrayidx343.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 31
  %317 = ptrtoint ptr %arrayidx343.i.i.i to i32
  call void @__asan_store4_noabort(i32 %317)
  store i32 %316, ptr %arrayidx343.i.i.i, align 4
  %318 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %hw1.i, align 4
  %add.ptr350.i.i.i = getelementptr i8, ptr %319, i32 13360
  %320 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr350.i.i.i) #14, !srcloc !422
  %321 = tail call i32 @llvm.bswap.i32(i32 %320) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !562
  %arrayidx354.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 32
  %322 = ptrtoint ptr %arrayidx354.i.i.i to i32
  call void @__asan_store4_noabort(i32 %322)
  store i32 %321, ptr %arrayidx354.i.i.i, align 4
  %323 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load ptr, ptr %hw1.i, align 4
  %add.ptr361.i.i.i = getelementptr i8, ptr %324, i32 9232
  %325 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr361.i.i.i) #14, !srcloc !422
  %326 = tail call i32 @llvm.bswap.i32(i32 %325) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !563
  %arrayidx365.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 33
  %327 = ptrtoint ptr %arrayidx365.i.i.i to i32
  call void @__asan_store4_noabort(i32 %327)
  store i32 %326, ptr %arrayidx365.i.i.i, align 4
  %328 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %hw1.i, align 4
  %add.ptr372.i.i.i = getelementptr i8, ptr %329, i32 9240
  %330 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr372.i.i.i) #14, !srcloc !422
  %331 = tail call i32 @llvm.bswap.i32(i32 %330) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !564
  %arrayidx376.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 34
  %332 = ptrtoint ptr %arrayidx376.i.i.i to i32
  call void @__asan_store4_noabort(i32 %332)
  store i32 %331, ptr %arrayidx376.i.i.i, align 4
  %333 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %hw1.i, align 4
  %add.ptr383.i.i.i = getelementptr i8, ptr %334, i32 9248
  %335 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr383.i.i.i) #14, !srcloc !422
  %336 = tail call i32 @llvm.bswap.i32(i32 %335) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !565
  %arrayidx387.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 35
  %337 = ptrtoint ptr %arrayidx387.i.i.i to i32
  call void @__asan_store4_noabort(i32 %337)
  store i32 %336, ptr %arrayidx387.i.i.i, align 4
  %338 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load ptr, ptr %hw1.i, align 4
  %add.ptr394.i.i.i = getelementptr i8, ptr %339, i32 9256
  %340 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr394.i.i.i) #14, !srcloc !422
  %341 = tail call i32 @llvm.bswap.i32(i32 %340) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !566
  %arrayidx398.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 36
  %342 = ptrtoint ptr %arrayidx398.i.i.i to i32
  call void @__asan_store4_noabort(i32 %342)
  store i32 %341, ptr %arrayidx398.i.i.i, align 4
  %343 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load ptr, ptr %hw1.i, align 4
  %add.ptr405.i.i.i = getelementptr i8, ptr %344, i32 9264
  %345 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr405.i.i.i) #14, !srcloc !422
  %346 = tail call i32 @llvm.bswap.i32(i32 %345) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !567
  %arrayidx409.i.i.i = getelementptr inbounds i32, ptr %regs.i.i.i, i32 37
  %347 = ptrtoint ptr %arrayidx409.i.i.i to i32
  call void @__asan_store4_noabort(i32 %347)
  store i32 %346, ptr %arrayidx409.i.i.i, align 4
  %call411.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.137) #17
  br label %do.end415.i.i.i

do.end415.i.i.i:                                  ; preds = %do.end415.i.i.i.do.end415.i.i.i_crit_edge, %if.end.i.i
  %i.0536.i.i.i = phi i32 [ 0, %if.end.i.i ], [ %inc.i.i.i, %do.end415.i.i.i.do.end415.i.i.i_crit_edge ]
  %arrayidx417.i.i.i = getelementptr [38 x ptr], ptr @e1000_regdump.reg_name, i32 0, i32 %i.0536.i.i.i
  %348 = ptrtoint ptr %arrayidx417.i.i.i to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load ptr, ptr %arrayidx417.i.i.i, align 4
  %arrayidx418.i.i.i = getelementptr i32, ptr %regs.i.i.i, i32 %i.0536.i.i.i
  %350 = ptrtoint ptr %arrayidx418.i.i.i to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load i32, ptr %arrayidx418.i.i.i, align 4
  %call419.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.140, ptr noundef %349, i32 noundef %351) #17
  %inc.i.i.i = add nuw nsw i32 %i.0536.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, 38
  br i1 %exitcond.not.i.i.i, label %e1000_regdump.exit.i.i, label %do.end415.i.i.i.do.end415.i.i.i_crit_edge

do.end415.i.i.i.do.end415.i.i.i_crit_edge:        ; preds = %do.end415.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end415.i.i.i

e1000_regdump.exit.i.i:                           ; preds = %do.end415.i.i.i
  call void @llvm.lifetime.end.p0(i64 152, ptr nonnull %regs.i.i.i) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.64) #17
  %call7.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67) #17
  %call12.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70) #17
  %352 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load i32, ptr %msg_enable.i, align 8
  %and14.i.i = and i32 %353, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i.i)
  %tobool15.not.i.i = icmp eq i32 %and14.i.i, 0
  br i1 %tobool15.not.i.i, label %e1000_regdump.exit.i.i.do.end49.i.i_crit_edge, label %for.cond.preheader.i.i

e1000_regdump.exit.i.i.do.end49.i.i_crit_edge:    ; preds = %e1000_regdump.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end49.i.i

for.cond.preheader.i.i:                           ; preds = %e1000_regdump.exit.i.i
  %count.i.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %123, i32 0, i32 3
  %354 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load ptr, ptr %123, align 4
  %tobool18.not266.i.i = icmp eq ptr %355, null
  br i1 %tobool18.not266.i.i, label %for.cond.preheader.i.i.do.end49.i.i_crit_edge, label %land.rhs.lr.ph.i.i

for.cond.preheader.i.i.do.end49.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end49.i.i

land.rhs.lr.ph.i.i:                               ; preds = %for.cond.preheader.i.i
  %buffer_info20.i.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %123, i32 0, i32 6
  %next_to_use.i.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %123, i32 0, i32 4
  %next_to_clean29.i.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %123, i32 0, i32 5
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %for.body.i.i.land.rhs.i.i_crit_edge, %land.rhs.lr.ph.i.i
  %356 = phi ptr [ %355, %land.rhs.lr.ph.i.i ], [ %382, %for.body.i.i.land.rhs.i.i_crit_edge ]
  %i.0267.i.i = phi i32 [ 0, %land.rhs.lr.ph.i.i ], [ %inc.i.i, %for.body.i.i.land.rhs.i.i_crit_edge ]
  %357 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %count.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0267.i.i, i32 %358)
  %cmp.i.i = icmp ult i32 %i.0267.i.i, %358
  br i1 %cmp.i.i, label %for.body.i.i, label %land.rhs.i.i.do.end49.i.i_crit_edge

land.rhs.i.i.do.end49.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end49.i.i

for.body.i.i:                                     ; preds = %land.rhs.i.i
  %arrayidx.i.i = getelementptr %struct.e1000_tx_desc, ptr %356, i32 %i.0267.i.i
  %359 = ptrtoint ptr %buffer_info20.i.i to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load ptr, ptr %buffer_info20.i.i, align 4
  %arrayidx21.i.i = getelementptr %struct.e1000_tx_buffer, ptr %360, i32 %i.0267.i.i
  %361 = ptrtoint ptr %next_to_use.i.i to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load i32, ptr %next_to_use.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0267.i.i, i32 %362)
  %cmp22.i.i = icmp eq i32 %i.0267.i.i, %362
  %363 = ptrtoint ptr %next_to_clean29.i.i to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load i32, ptr %next_to_clean29.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0267.i.i, i32 %364)
  %cmp23.i.i = icmp eq i32 %i.0267.i.i, %364
  %.str.74..str.42.i.i = select i1 %cmp23.i.i, ptr @.str.74, ptr @.str.42
  %spec.select.i.i = select i1 %cmp23.i.i, ptr @.str.72, ptr @.str.73
  %type.0.i.i = select i1 %cmp22.i.i, ptr %spec.select.i.i, ptr %.str.74..str.42.i.i
  %b.i.i = getelementptr inbounds %struct.my_u, ptr %arrayidx.i.i, i32 0, i32 1
  %365 = ptrtoint ptr %b.i.i to i32
  call void @__asan_load8_noabort(i32 %365)
  %366 = load i64, ptr %b.i.i, align 8
  %367 = tail call i64 @llvm.bswap.i64(i64 %366) #14
  %and40.i.i = and i64 %367, 1048576
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and40.i.i)
  %tobool41.not.i.i = icmp eq i64 %and40.i.i, 0
  %cond.i.i = select i1 %tobool41.not.i.i, i32 99, i32 100
  %368 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load8_noabort(i32 %368)
  %369 = load i64, ptr %arrayidx.i.i, align 8
  %370 = tail call i64 @llvm.bswap.i64(i64 %369) #14
  %dma.i252.i = getelementptr %struct.e1000_tx_buffer, ptr %360, i32 %i.0267.i.i, i32 1
  %371 = ptrtoint ptr %dma.i252.i to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load i32, ptr %dma.i252.i, align 4
  %conv.i.i = zext i32 %372 to i64
  %length.i.i = getelementptr %struct.e1000_tx_buffer, ptr %360, i32 %i.0267.i.i, i32 3
  %373 = ptrtoint ptr %length.i.i to i32
  call void @__asan_load2_noabort(i32 %373)
  %374 = load i16, ptr %length.i.i, align 4
  %conv43.i.i = zext i16 %374 to i32
  %next_to_watch.i.i = getelementptr %struct.e1000_tx_buffer, ptr %360, i32 %i.0267.i.i, i32 4
  %375 = ptrtoint ptr %next_to_watch.i.i to i32
  call void @__asan_load2_noabort(i32 %375)
  %376 = load i16, ptr %next_to_watch.i.i, align 2
  %conv44.i.i = zext i16 %376 to i32
  %time_stamp.i253.i = getelementptr %struct.e1000_tx_buffer, ptr %360, i32 %i.0267.i.i, i32 2
  %377 = ptrtoint ptr %time_stamp.i253.i to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %time_stamp.i253.i, align 4
  %conv45.i.i = zext i32 %378 to i64
  %379 = ptrtoint ptr %arrayidx21.i.i to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load ptr, ptr %arrayidx21.i.i, align 4
  %call46.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.76, i32 noundef %cond.i.i, i32 noundef %i.0267.i.i, i64 noundef %370, i64 noundef %367, i64 noundef %conv.i.i, i32 noundef %conv43.i.i, i32 noundef %conv44.i.i, i64 noundef %conv45.i.i, ptr noundef %380, ptr noundef nonnull %type.0.i.i) #17
  %inc.i.i = add nuw i32 %i.0267.i.i, 1
  %381 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %381)
  %382 = load ptr, ptr %123, align 4
  %tobool18.not.i.i = icmp eq ptr %382, null
  br i1 %tobool18.not.i.i, label %for.body.i.i.do.end49.i.i_crit_edge, label %for.body.i.i.land.rhs.i.i_crit_edge

for.body.i.i.land.rhs.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i

for.body.i.i.do.end49.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end49.i.i

do.end49.i.i:                                     ; preds = %for.body.i.i.do.end49.i.i_crit_edge, %land.rhs.i.i.do.end49.i.i_crit_edge, %for.cond.preheader.i.i.do.end49.i.i_crit_edge, %e1000_regdump.exit.i.i.do.end49.i.i_crit_edge
  %call51.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.79) #17
  %call56.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.82) #17
  %383 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load i32, ptr %msg_enable.i, align 8
  %and58.i.i = and i32 %384, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58.i.i)
  %tobool59.not.i.i = icmp eq i32 %and58.i.i, 0
  br i1 %tobool59.not.i.i, label %do.end49.i.i.e1000_dump.exit.i_crit_edge, label %for.cond62.preheader.i.i

do.end49.i.i.e1000_dump.exit.i_crit_edge:         ; preds = %do.end49.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_dump.exit.i

for.cond62.preheader.i.i:                         ; preds = %do.end49.i.i
  %count66.i.i = getelementptr inbounds %struct.e1000_rx_ring, ptr %125, i32 0, i32 3
  %385 = ptrtoint ptr %125 to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load ptr, ptr %125, align 4
  %tobool64.not268.i.i = icmp eq ptr %386, null
  br i1 %tobool64.not268.i.i, label %for.cond62.preheader.i.i.do.end104.i.i_crit_edge, label %land.rhs65.lr.ph.i.i

for.cond62.preheader.i.i.do.end104.i.i_crit_edge: ; preds = %for.cond62.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end104.i.i

land.rhs65.lr.ph.i.i:                             ; preds = %for.cond62.preheader.i.i
  %buffer_info74.i.i = getelementptr inbounds %struct.e1000_rx_ring, ptr %125, i32 0, i32 6
  %next_to_use78.i.i = getelementptr inbounds %struct.e1000_rx_ring, ptr %125, i32 0, i32 4
  %next_to_clean83.i.i = getelementptr inbounds %struct.e1000_rx_ring, ptr %125, i32 0, i32 5
  br label %land.rhs65.i.i

land.rhs65.i.i:                                   ; preds = %do.end92.i.i.land.rhs65.i.i_crit_edge, %land.rhs65.lr.ph.i.i
  %387 = phi ptr [ %386, %land.rhs65.lr.ph.i.i ], [ %407, %do.end92.i.i.land.rhs65.i.i_crit_edge ]
  %i.1269.i.i = phi i32 [ 0, %land.rhs65.lr.ph.i.i ], [ %inc100.i.i, %do.end92.i.i.land.rhs65.i.i_crit_edge ]
  %388 = ptrtoint ptr %count66.i.i to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load i32, ptr %count66.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1269.i.i, i32 %389)
  %cmp67.i.i = icmp ult i32 %i.1269.i.i, %389
  br i1 %cmp67.i.i, label %for.body70.i.i, label %land.rhs65.i.i.do.end104.i.i_crit_edge

land.rhs65.i.i.do.end104.i.i_crit_edge:           ; preds = %land.rhs65.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end104.i.i

for.body70.i.i:                                   ; preds = %land.rhs65.i.i
  %arrayidx72.i.i = getelementptr %struct.e1000_rx_desc, ptr %387, i32 %i.1269.i.i
  %390 = ptrtoint ptr %buffer_info74.i.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load ptr, ptr %buffer_info74.i.i, align 4
  %arrayidx75.i.i = getelementptr %struct.e1000_rx_buffer, ptr %391, i32 %i.1269.i.i
  %392 = ptrtoint ptr %next_to_use78.i.i to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %next_to_use78.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1269.i.i, i32 %393)
  %cmp79.i.i = icmp eq i32 %i.1269.i.i, %393
  br i1 %cmp79.i.i, label %for.body70.i.i.do.end92.i.i_crit_edge, label %if.else82.i.i

for.body70.i.i.do.end92.i.i_crit_edge:            ; preds = %for.body70.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end92.i.i

if.else82.i.i:                                    ; preds = %for.body70.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %394 = ptrtoint ptr %next_to_clean83.i.i to i32
  call void @__asan_load4_noabort(i32 %394)
  %395 = load i32, ptr %next_to_clean83.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1269.i.i, i32 %395)
  %cmp84.i.i = icmp eq i32 %i.1269.i.i, %395
  %.str.74..str.42265.i.i = select i1 %cmp84.i.i, ptr @.str.74, ptr @.str.42
  br label %do.end92.i.i

do.end92.i.i:                                     ; preds = %if.else82.i.i, %for.body70.i.i.do.end92.i.i_crit_edge
  %type77.0.i.i = phi ptr [ @.str.73, %for.body70.i.i.do.end92.i.i_crit_edge ], [ %.str.74..str.42265.i.i, %if.else82.i.i ]
  %396 = ptrtoint ptr %arrayidx72.i.i to i32
  call void @__asan_load8_noabort(i32 %396)
  %397 = load i64, ptr %arrayidx72.i.i, align 8
  %398 = tail call i64 @llvm.bswap.i64(i64 %397) #14
  %b95.i.i = getelementptr inbounds %struct.my_u.169, ptr %arrayidx72.i.i, i32 0, i32 1
  %399 = ptrtoint ptr %b95.i.i to i32
  call void @__asan_load8_noabort(i32 %399)
  %400 = load i64, ptr %b95.i.i, align 8
  %401 = tail call i64 @llvm.bswap.i64(i64 %400) #14
  %dma96.i.i = getelementptr %struct.e1000_rx_buffer, ptr %391, i32 %i.1269.i.i, i32 1
  %402 = ptrtoint ptr %dma96.i.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %dma96.i.i, align 4
  %conv97.i.i = zext i32 %403 to i64
  %404 = ptrtoint ptr %arrayidx75.i.i to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load ptr, ptr %arrayidx75.i.i, align 4
  %call98.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.85, i32 noundef %i.1269.i.i, i64 noundef %398, i64 noundef %401, i64 noundef %conv97.i.i, ptr noundef %405, ptr noundef nonnull %type77.0.i.i) #17
  %inc100.i.i = add nuw i32 %i.1269.i.i, 1
  %406 = ptrtoint ptr %125 to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load ptr, ptr %125, align 4
  %tobool64.not.i.i = icmp eq ptr %407, null
  br i1 %tobool64.not.i.i, label %do.end92.i.i.do.end104.i.i_crit_edge, label %do.end92.i.i.land.rhs65.i.i_crit_edge

do.end92.i.i.land.rhs65.i.i_crit_edge:            ; preds = %do.end92.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs65.i.i

do.end92.i.i.do.end104.i.i_crit_edge:             ; preds = %do.end92.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end104.i.i

do.end104.i.i:                                    ; preds = %do.end92.i.i.do.end104.i.i_crit_edge, %land.rhs65.i.i.do.end104.i.i_crit_edge, %for.cond62.preheader.i.i.do.end104.i.i_crit_edge
  %call106.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.88) #17
  br label %do.end113.i.i

do.end113.i.i:                                    ; preds = %do.end113.i.i.do.end113.i.i_crit_edge, %do.end104.i.i
  %i.2270.i.i = phi i32 [ 24576, %do.end104.i.i ], [ %add.i.i, %do.end113.i.i.do.end113.i.i_crit_edge ]
  %408 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load ptr, ptr %hw1.i, align 8
  %add.ptr.i.i = getelementptr i8, ptr %409, i32 4
  %add.ptr115.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %i.2270.i.i
  %410 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr115.i.i) #14, !srcloc !422
  %411 = tail call i32 @llvm.bswap.i32(i32 %410) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !568
  %412 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %412)
  %413 = load ptr, ptr %hw1.i, align 8
  %add.ptr123.i.i = getelementptr i8, ptr %413, i32 %i.2270.i.i
  %414 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr123.i.i) #14, !srcloc !422
  %415 = tail call i32 @llvm.bswap.i32(i32 %414) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !569
  %416 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load ptr, ptr %hw1.i, align 8
  %add.ptr131.i.i = getelementptr i8, ptr %417, i32 12
  %add.ptr132.i.i = getelementptr i8, ptr %add.ptr131.i.i, i32 %i.2270.i.i
  %418 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr132.i.i) #14, !srcloc !422
  %419 = tail call i32 @llvm.bswap.i32(i32 %418) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !570
  %420 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load ptr, ptr %hw1.i, align 8
  %add.ptr140.i.i = getelementptr i8, ptr %421, i32 8
  %add.ptr141.i.i = getelementptr i8, ptr %add.ptr140.i.i, i32 %i.2270.i.i
  %422 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr141.i.i) #14, !srcloc !422
  %423 = tail call i32 @llvm.bswap.i32(i32 %422) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !571
  %call145.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.91, i32 noundef %i.2270.i.i, i32 noundef %411, i32 noundef %415, i32 noundef %419, i32 noundef %423) #17
  %add.i.i = add nuw nsw i32 %i.2270.i.i, 16
  %cmp108.i.i = icmp ult i32 %i.2270.i.i, 25584
  br i1 %cmp108.i.i, label %do.end113.i.i.do.end113.i.i_crit_edge, label %do.end150.i.i

do.end113.i.i.do.end113.i.i_crit_edge:            ; preds = %do.end113.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end113.i.i

do.end150.i.i:                                    ; preds = %do.end113.i.i
  %call152.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.94) #17
  br label %do.end159.i.i

do.end159.i.i:                                    ; preds = %do.end159.i.i.do.end159.i.i_crit_edge, %do.end150.i.i
  %i.3271.i.i = phi i32 [ 28672, %do.end150.i.i ], [ %add198.i.i, %do.end159.i.i.do.end159.i.i_crit_edge ]
  %424 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load ptr, ptr %hw1.i, align 8
  %add.ptr165.i.i = getelementptr i8, ptr %425, i32 4
  %add.ptr166.i.i = getelementptr i8, ptr %add.ptr165.i.i, i32 %i.3271.i.i
  %426 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr166.i.i) #14, !srcloc !422
  %427 = tail call i32 @llvm.bswap.i32(i32 %426) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !572
  %428 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %428)
  %429 = load ptr, ptr %hw1.i, align 8
  %add.ptr174.i.i = getelementptr i8, ptr %429, i32 %i.3271.i.i
  %430 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr174.i.i) #14, !srcloc !422
  %431 = tail call i32 @llvm.bswap.i32(i32 %430) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !573
  %432 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load ptr, ptr %hw1.i, align 8
  %add.ptr182.i.i = getelementptr i8, ptr %433, i32 12
  %add.ptr183.i.i = getelementptr i8, ptr %add.ptr182.i.i, i32 %i.3271.i.i
  %434 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr183.i.i) #14, !srcloc !422
  %435 = tail call i32 @llvm.bswap.i32(i32 %434) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !574
  %436 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %436)
  %437 = load ptr, ptr %hw1.i, align 8
  %add.ptr191.i.i = getelementptr i8, ptr %437, i32 8
  %add.ptr192.i.i = getelementptr i8, ptr %add.ptr191.i.i, i32 %i.3271.i.i
  %438 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr192.i.i) #14, !srcloc !422
  %439 = tail call i32 @llvm.bswap.i32(i32 %438) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !575
  %call196.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.97, i32 noundef %i.3271.i.i, i32 noundef %427, i32 noundef %431, i32 noundef %435, i32 noundef %439) #17
  %add198.i.i = add nuw nsw i32 %i.3271.i.i, 16
  %cmp154.i.i = icmp ult i32 %i.3271.i.i, 29680
  br i1 %cmp154.i.i, label %do.end159.i.i.do.end159.i.i_crit_edge, label %do.end159.i.i.e1000_dump.exit.i_crit_edge

do.end159.i.i.e1000_dump.exit.i_crit_edge:        ; preds = %do.end159.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_dump.exit.i

do.end159.i.i.do.end159.i.i_crit_edge:            ; preds = %do.end159.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end159.i.i

e1000_dump.exit.i:                                ; preds = %do.end159.i.i.e1000_dump.exit.i_crit_edge, %do.end49.i.i.e1000_dump.exit.i_crit_edge, %do.end160.i.e1000_dump.exit.i_crit_edge
  %440 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load ptr, ptr %_tx.i.i.i, align 128
  %state.i.i255.i = getelementptr inbounds %struct.netdev_queue, ptr %441, i32 0, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i255.i) #14
  br label %e1000_clean_tx_irq.exit

e1000_clean_tx_irq.exit:                          ; preds = %e1000_dump.exit.i, %land.lhs.true119.i.e1000_clean_tx_irq.exit_crit_edge, %land.lhs.true110.i.e1000_clean_tx_irq.exit_crit_edge, %if.then105.i.e1000_clean_tx_irq.exit_crit_edge, %if.end103.i.e1000_clean_tx_irq.exit_crit_edge
  %total_tx_bytes163.i = getelementptr i8, ptr %napi, i32 -120
  %442 = ptrtoint ptr %total_tx_bytes163.i to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load i32, ptr %total_tx_bytes163.i, align 8
  %add164.i = add i32 %443, %total_tx_bytes.0.lcssa.i
  store i32 %add164.i, ptr %total_tx_bytes163.i, align 8
  %total_tx_packets165.i = getelementptr i8, ptr %napi, i32 -116
  %444 = ptrtoint ptr %total_tx_packets165.i to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load i32, ptr %total_tx_packets165.i, align 4
  %add166.i = add i32 %445, %total_tx_packets.0.lcssa.i
  store i32 %add166.i, ptr %total_tx_packets165.i, align 4
  %tx_bytes.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 36, i32 3
  %446 = ptrtoint ptr %tx_bytes.i to i32
  call void @__asan_load4_noabort(i32 %446)
  %447 = load i32, ptr %tx_bytes.i, align 4
  %add167.i = add i32 %447, %total_tx_bytes.0.lcssa.i
  store i32 %add167.i, ptr %tx_bytes.i, align 4
  %tx_packets.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 36, i32 1
  %448 = ptrtoint ptr %tx_packets.i to i32
  call void @__asan_load4_noabort(i32 %448)
  %449 = load i32, ptr %tx_packets.i, align 4
  %add169.i = add i32 %449, %total_tx_packets.0.lcssa.i
  store i32 %add169.i, ptr %tx_packets.i, align 4
  %450 = ptrtoint ptr %count5.i to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load i32, ptr %count5.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %count.0.lcssa.i, i32 %451)
  %cmp171.i = icmp ult i32 %count.0.lcssa.i, %451
  %clean_rx = getelementptr i8, ptr %napi, i32 -12
  %452 = ptrtoint ptr %clean_rx to i32
  call void @__asan_load4_noabort(i32 %452)
  %453 = load ptr, ptr %clean_rx, align 4
  %rx_ring = getelementptr i8, ptr %napi, i32 -4
  %454 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load ptr, ptr %rx_ring, align 4
  %call2 = call zeroext i1 %453(ptr noundef %add.ptr, ptr noundef %455, ptr noundef nonnull %work_done, i32 noundef %budget) #14
  br i1 %cmp171.i, label %lor.lhs.false, label %e1000_clean_tx_irq.exit.cleanup_crit_edge

e1000_clean_tx_irq.exit.cleanup_crit_edge:        ; preds = %e1000_clean_tx_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %e1000_clean_tx_irq.exit
  %456 = ptrtoint ptr %work_done to i32
  call void @__asan_load4_noabort(i32 %456)
  %457 = load i32, ptr %work_done, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %457, i32 %budget)
  %cmp = icmp eq i32 %457, %budget
  br i1 %cmp, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call4 = call zeroext i1 @napi_complete_done(ptr noundef %napi, i32 noundef %457) #14
  br i1 %call4, label %if.then7, label %if.end.if.end21_crit_edge, !prof !576

if.end.if.end21_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21

if.then7:                                         ; preds = %if.end
  %itr_setting = getelementptr i8, ptr %napi, i32 -100
  %458 = ptrtoint ptr %itr_setting to i32
  call void @__asan_load4_noabort(i32 %458)
  %459 = load i32, ptr %itr_setting, align 4
  %and = and i32 %459, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %if.then7.if.end16_crit_edge, label %if.then15, !prof !456

if.then7.if.end16_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then15:                                        ; preds = %if.then7
  %itr.i = getelementptr i8, ptr %napi, i32 -104
  %460 = ptrtoint ptr %itr.i to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load i32, ptr %itr.i, align 8
  %mac_type.i = getelementptr i8, ptr %napi, i32 300
  %462 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %462)
  %463 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %463)
  %cmp.i36 = icmp ult i32 %463, 5
  br i1 %cmp.i36, label %if.then15.if.end16_crit_edge, label %if.end.i, !prof !456

if.then15.if.end16_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.end.i:                                         ; preds = %if.then15
  %link_speed.i = getelementptr i8, ptr %napi, i32 -168
  %464 = ptrtoint ptr %link_speed.i to i32
  call void @__asan_load2_noabort(i32 %464)
  %465 = load i16, ptr %link_speed.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1000, i16 %465)
  %cmp3.not.i = icmp eq i16 %465, 1000
  br i1 %cmp3.not.i, label %if.end12.i, label %if.end.i.set_itr_now.i_crit_edge, !prof !576

if.end.i.set_itr_now.i_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_itr_now.i

if.end12.i:                                       ; preds = %if.end.i
  %tx_itr.i = getelementptr i8, ptr %napi, i32 -96
  %466 = ptrtoint ptr %tx_itr.i to i32
  call void @__asan_load2_noabort(i32 %466)
  %467 = load i16, ptr %tx_itr.i, align 8
  %468 = ptrtoint ptr %total_tx_packets165.i to i32
  call void @__asan_load4_noabort(i32 %468)
  %469 = load i32, ptr %total_tx_packets165.i, align 4
  %470 = ptrtoint ptr %total_tx_bytes163.i to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load i32, ptr %total_tx_bytes163.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %469)
  %cmp5.i.i = icmp eq i32 %469, 0
  br i1 %cmp5.i.i, label %if.end12.i.e1000_update_itr.exit.i_crit_edge, label %if.end8.i.i, !prof !577

if.end12.i.e1000_update_itr.exit.i_crit_edge:     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit.i

if.end8.i.i:                                      ; preds = %if.end12.i
  %472 = zext i16 %467 to i64
  call void @__sanitizer_cov_trace_switch(i64 %472, ptr @__sancov_gen_cov_switch_values.225)
  switch i16 %467, label %if.end8.i.i.e1000_update_itr.exit.i_crit_edge [
    i16 0, label %sw.bb.i.i
    i16 1, label %sw.bb20.i.i
    i16 2, label %sw.bb57.i.i
  ]

if.end8.i.i.e1000_update_itr.exit.i_crit_edge:    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit.i

sw.bb.i.i:                                        ; preds = %if.end8.i.i
  %div.i.i = sdiv i32 %471, %469
  call void @__sanitizer_cov_trace_const_cmp4(i32 8000, i32 %div.i.i)
  %cmp10.i.i = icmp sgt i32 %div.i.i, 8000
  br i1 %cmp10.i.i, label %sw.bb.i.i.e1000_update_itr.exit.i_crit_edge, label %if.else.i.i

sw.bb.i.i.e1000_update_itr.exit.i_crit_edge:      ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit.i

if.else.i.i:                                      ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %469)
  %cmp13.i.i = icmp slt i32 %469, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %471)
  %cmp15.i.i = icmp sgt i32 %471, 512
  %or.cond89.i.i = and i1 %cmp13.i.i, %cmp15.i.i
  %spec.select94.i.i = zext i1 %or.cond89.i.i to i16
  br label %e1000_update_itr.exit.i

sw.bb20.i.i:                                      ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 10000, i32 %471)
  %cmp21.i.i = icmp sgt i32 %471, 10000
  %div24.i.i = sdiv i32 %471, %469
  br i1 %cmp21.i.i, label %if.then23.i.i, label %if.else42.i.i

if.then23.i.i:                                    ; preds = %sw.bb20.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8000, i32 %div24.i.i)
  %cmp25.i.i = icmp sgt i32 %div24.i.i, 8000
  br i1 %cmp25.i.i, label %if.then23.i.i.e1000_update_itr.exit.i_crit_edge, label %if.else28.i.i

if.then23.i.i.e1000_update_itr.exit.i_crit_edge:  ; preds = %if.then23.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit.i

if.else28.i.i:                                    ; preds = %if.then23.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %469)
  %cmp29.i.i = icmp slt i32 %469, 10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1200, i32 %div24.i.i)
  %cmp32.i.i = icmp sgt i32 %div24.i.i, 1200
  %or.cond90.i.i = or i1 %cmp29.i.i, %cmp32.i.i
  br i1 %or.cond90.i.i, label %if.else28.i.i.e1000_update_itr.exit.i_crit_edge, label %if.else35.i.i

if.else28.i.i.e1000_update_itr.exit.i_crit_edge:  ; preds = %if.else28.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit.i

if.else35.i.i:                                    ; preds = %if.else28.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %469)
  %cmp36.i.i = icmp ult i32 %469, 36
  %spec.select.i.i37 = zext i1 %cmp36.i.i to i16
  br label %e1000_update_itr.exit.i

if.else42.i.i:                                    ; preds = %sw.bb20.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2000, i32 %div24.i.i)
  %cmp44.i.i = icmp sgt i32 %div24.i.i, 2000
  br i1 %cmp44.i.i, label %if.else42.i.i.e1000_update_itr.exit.i_crit_edge, label %if.else47.i.i

if.else42.i.i.e1000_update_itr.exit.i_crit_edge:  ; preds = %if.else42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit.i

if.else47.i.i:                                    ; preds = %if.else42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %469)
  %cmp48.i.i = icmp sgt i32 %469, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 511, i32 %471)
  %cmp51.i.i = icmp sgt i32 %471, 511
  %not.or.cond91.i.i = or i1 %cmp48.i.i, %cmp51.i.i
  %spec.select95.i.i = zext i1 %not.or.cond91.i.i to i16
  br label %e1000_update_itr.exit.i

sw.bb57.i.i:                                      ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 25000, i32 %471)
  %cmp58.i.i = icmp sgt i32 %471, 25000
  br i1 %cmp58.i.i, label %if.then60.i.i, label %if.else65.i.i

if.then60.i.i:                                    ; preds = %sw.bb57.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 35, i32 %469)
  %cmp61.i.i = icmp sgt i32 %469, 35
  %spec.select92.i.i = select i1 %cmp61.i.i, i16 1, i16 2
  br label %e1000_update_itr.exit.i

if.else65.i.i:                                    ; preds = %sw.bb57.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 6000, i32 %471)
  %cmp66.i.i = icmp slt i32 %471, 6000
  %spec.select93.i.i = select i1 %cmp66.i.i, i16 1, i16 2
  br label %e1000_update_itr.exit.i

e1000_update_itr.exit.i:                          ; preds = %if.else65.i.i, %if.then60.i.i, %if.else47.i.i, %if.else42.i.i.e1000_update_itr.exit.i_crit_edge, %if.else35.i.i, %if.else28.i.i.e1000_update_itr.exit.i_crit_edge, %if.then23.i.i.e1000_update_itr.exit.i_crit_edge, %if.else.i.i, %sw.bb.i.i.e1000_update_itr.exit.i_crit_edge, %if.end8.i.i.e1000_update_itr.exit.i_crit_edge, %if.end12.i.e1000_update_itr.exit.i_crit_edge
  %retval1.0.shrunk.i.i = phi i16 [ %467, %if.end12.i.e1000_update_itr.exit.i_crit_edge ], [ %467, %if.end8.i.i.e1000_update_itr.exit.i_crit_edge ], [ 2, %sw.bb.i.i.e1000_update_itr.exit.i_crit_edge ], [ 2, %if.then23.i.i.e1000_update_itr.exit.i_crit_edge ], [ 2, %if.else28.i.i.e1000_update_itr.exit.i_crit_edge ], [ %spec.select.i.i37, %if.else35.i.i ], [ 2, %if.else42.i.i.e1000_update_itr.exit.i_crit_edge ], [ %spec.select92.i.i, %if.then60.i.i ], [ %spec.select93.i.i, %if.else65.i.i ], [ %spec.select94.i.i, %if.else.i.i ], [ %spec.select95.i.i, %if.else47.i.i ]
  %473 = ptrtoint ptr %itr_setting to i32
  call void @__asan_load4_noabort(i32 %473)
  %474 = load i32, ptr %itr_setting, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %474)
  %cmp15.i = icmp eq i32 %474, 3
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %retval1.0.shrunk.i.i)
  %cmp19.i = icmp eq i16 %retval1.0.shrunk.i.i, 0
  %or.cond.i = select i1 %cmp15.i, i1 %cmp19.i, i1 false
  %spec.store.select.i = select i1 %or.cond.i, i16 1, i16 %retval1.0.shrunk.i.i
  %475 = ptrtoint ptr %tx_itr.i to i32
  call void @__asan_store2_noabort(i32 %475)
  store i16 %spec.store.select.i, ptr %tx_itr.i, align 8
  %rx_itr.i = getelementptr i8, ptr %napi, i32 -94
  %476 = ptrtoint ptr %rx_itr.i to i32
  call void @__asan_load2_noabort(i32 %476)
  %477 = load i16, ptr %rx_itr.i, align 2
  %total_rx_packets.i = getelementptr i8, ptr %napi, i32 -108
  %478 = ptrtoint ptr %total_rx_packets.i to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load i32, ptr %total_rx_packets.i, align 4
  %total_rx_bytes.i = getelementptr i8, ptr %napi, i32 -112
  %480 = ptrtoint ptr %total_rx_bytes.i to i32
  call void @__asan_load4_noabort(i32 %480)
  %481 = load i32, ptr %total_rx_bytes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %479)
  %cmp5.i117.i = icmp eq i32 %479, 0
  br i1 %cmp5.i117.i, label %e1000_update_itr.exit.i.e1000_update_itr.exit157.i_crit_edge, label %if.end8.i119.i, !prof !577

e1000_update_itr.exit.i.e1000_update_itr.exit157.i_crit_edge: ; preds = %e1000_update_itr.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit157.i

if.end8.i119.i:                                   ; preds = %e1000_update_itr.exit.i
  %482 = zext i16 %477 to i64
  call void @__sanitizer_cov_trace_switch(i64 %482, ptr @__sancov_gen_cov_switch_values.226)
  switch i16 %477, label %if.end8.i119.i.e1000_update_itr.exit157.i_crit_edge [
    i16 0, label %sw.bb.i122.i
    i16 1, label %sw.bb20.i130.i
    i16 2, label %sw.bb57.i148.i
  ]

if.end8.i119.i.e1000_update_itr.exit157.i_crit_edge: ; preds = %if.end8.i119.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit157.i

sw.bb.i122.i:                                     ; preds = %if.end8.i119.i
  %div.i120.i = sdiv i32 %481, %479
  call void @__sanitizer_cov_trace_const_cmp4(i32 8000, i32 %div.i120.i)
  %cmp10.i121.i = icmp sgt i32 %div.i120.i, 8000
  br i1 %cmp10.i121.i, label %sw.bb.i122.i.e1000_update_itr.exit157.i_crit_edge, label %if.else.i127.i

sw.bb.i122.i.e1000_update_itr.exit157.i_crit_edge: ; preds = %sw.bb.i122.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit157.i

if.else.i127.i:                                   ; preds = %sw.bb.i122.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %479)
  %cmp13.i123.i = icmp slt i32 %479, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %481)
  %cmp15.i124.i = icmp sgt i32 %481, 512
  %or.cond89.i125.i = and i1 %cmp13.i123.i, %cmp15.i124.i
  %spec.select94.i126.i = zext i1 %or.cond89.i125.i to i16
  br label %e1000_update_itr.exit157.i

sw.bb20.i130.i:                                   ; preds = %if.end8.i119.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 10000, i32 %481)
  %cmp21.i128.i = icmp sgt i32 %481, 10000
  %div24.i129.i = sdiv i32 %481, %479
  br i1 %cmp21.i128.i, label %if.then23.i132.i, label %if.else42.i141.i

if.then23.i132.i:                                 ; preds = %sw.bb20.i130.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8000, i32 %div24.i129.i)
  %cmp25.i131.i = icmp sgt i32 %div24.i129.i, 8000
  br i1 %cmp25.i131.i, label %if.then23.i132.i.e1000_update_itr.exit157.i_crit_edge, label %if.else28.i136.i

if.then23.i132.i.e1000_update_itr.exit157.i_crit_edge: ; preds = %if.then23.i132.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit157.i

if.else28.i136.i:                                 ; preds = %if.then23.i132.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %479)
  %cmp29.i133.i = icmp slt i32 %479, 10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1200, i32 %div24.i129.i)
  %cmp32.i134.i = icmp sgt i32 %div24.i129.i, 1200
  %or.cond90.i135.i = or i1 %cmp29.i133.i, %cmp32.i134.i
  br i1 %or.cond90.i135.i, label %if.else28.i136.i.e1000_update_itr.exit157.i_crit_edge, label %if.else35.i139.i

if.else28.i136.i.e1000_update_itr.exit157.i_crit_edge: ; preds = %if.else28.i136.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit157.i

if.else35.i139.i:                                 ; preds = %if.else28.i136.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %479)
  %cmp36.i137.i = icmp ult i32 %479, 36
  %spec.select.i138.i = zext i1 %cmp36.i137.i to i16
  br label %e1000_update_itr.exit157.i

if.else42.i141.i:                                 ; preds = %sw.bb20.i130.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2000, i32 %div24.i129.i)
  %cmp44.i140.i = icmp sgt i32 %div24.i129.i, 2000
  br i1 %cmp44.i140.i, label %if.else42.i141.i.e1000_update_itr.exit157.i_crit_edge, label %if.else47.i146.i

if.else42.i141.i.e1000_update_itr.exit157.i_crit_edge: ; preds = %if.else42.i141.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_update_itr.exit157.i

if.else47.i146.i:                                 ; preds = %if.else42.i141.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %479)
  %cmp48.i142.i = icmp sgt i32 %479, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 511, i32 %481)
  %cmp51.i143.i = icmp sgt i32 %481, 511
  %not.or.cond91.i144.i = or i1 %cmp48.i142.i, %cmp51.i143.i
  %spec.select95.i145.i = zext i1 %not.or.cond91.i144.i to i16
  br label %e1000_update_itr.exit157.i

sw.bb57.i148.i:                                   ; preds = %if.end8.i119.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 25000, i32 %481)
  %cmp58.i147.i = icmp sgt i32 %481, 25000
  br i1 %cmp58.i147.i, label %if.then60.i151.i, label %if.else65.i154.i

if.then60.i151.i:                                 ; preds = %sw.bb57.i148.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 35, i32 %479)
  %cmp61.i149.i = icmp sgt i32 %479, 35
  %spec.select92.i150.i = select i1 %cmp61.i149.i, i16 1, i16 2
  br label %e1000_update_itr.exit157.i

if.else65.i154.i:                                 ; preds = %sw.bb57.i148.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 6000, i32 %481)
  %cmp66.i152.i = icmp slt i32 %481, 6000
  %spec.select93.i153.i = select i1 %cmp66.i152.i, i16 1, i16 2
  br label %e1000_update_itr.exit157.i

e1000_update_itr.exit157.i:                       ; preds = %if.else65.i154.i, %if.then60.i151.i, %if.else47.i146.i, %if.else42.i141.i.e1000_update_itr.exit157.i_crit_edge, %if.else35.i139.i, %if.else28.i136.i.e1000_update_itr.exit157.i_crit_edge, %if.then23.i132.i.e1000_update_itr.exit157.i_crit_edge, %if.else.i127.i, %sw.bb.i122.i.e1000_update_itr.exit157.i_crit_edge, %if.end8.i119.i.e1000_update_itr.exit157.i_crit_edge, %e1000_update_itr.exit.i.e1000_update_itr.exit157.i_crit_edge
  %retval1.0.shrunk.i155.i = phi i16 [ %477, %e1000_update_itr.exit.i.e1000_update_itr.exit157.i_crit_edge ], [ %477, %if.end8.i119.i.e1000_update_itr.exit157.i_crit_edge ], [ 2, %sw.bb.i122.i.e1000_update_itr.exit157.i_crit_edge ], [ 2, %if.then23.i132.i.e1000_update_itr.exit157.i_crit_edge ], [ 2, %if.else28.i136.i.e1000_update_itr.exit157.i_crit_edge ], [ %spec.select.i138.i, %if.else35.i139.i ], [ 2, %if.else42.i141.i.e1000_update_itr.exit157.i_crit_edge ], [ %spec.select92.i150.i, %if.then60.i151.i ], [ %spec.select93.i153.i, %if.else65.i154.i ], [ %spec.select94.i126.i, %if.else.i127.i ], [ %spec.select95.i145.i, %if.else47.i146.i ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %retval1.0.shrunk.i155.i)
  %cmp33.i = icmp eq i16 %retval1.0.shrunk.i155.i, 0
  %or.cond113.i = select i1 %cmp15.i, i1 %cmp33.i, i1 false
  %spec.store.select114.i = select i1 %or.cond113.i, i16 1, i16 %retval1.0.shrunk.i155.i
  %483 = ptrtoint ptr %rx_itr.i to i32
  call void @__asan_store2_noabort(i32 %483)
  store i16 %spec.store.select114.i, ptr %rx_itr.i, align 2
  %484 = call i16 @llvm.umax.i16(i16 %spec.store.select114.i, i16 %spec.store.select.i) #14
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %484)
  %485 = icmp ult i16 %484, 3
  br i1 %485, label %switch.lookup, label %e1000_update_itr.exit157.i.if.end16_crit_edge

e1000_update_itr.exit157.i.if.end16_crit_edge:    ; preds = %e1000_update_itr.exit157.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

switch.lookup:                                    ; preds = %e1000_update_itr.exit157.i
  call void @__sanitizer_cov_trace_pc() #16
  %486 = sext i16 %484 to i32
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.e1000_clean, i32 0, i32 %486
  %487 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %487)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %set_itr_now.i

set_itr_now.i:                                    ; preds = %switch.lookup, %if.end.i.set_itr_now.i_crit_edge
  %new_itr.0.i = phi i32 [ 4000, %if.end.i.set_itr_now.i_crit_edge ], [ %switch.load, %switch.lookup ]
  call void @__sanitizer_cov_trace_cmp4(i32 %new_itr.0.i, i32 %461)
  %cmp51.not.i = icmp eq i32 %new_itr.0.i, %461
  br i1 %cmp51.not.i, label %set_itr_now.i.if.end16_crit_edge, label %if.then53.i

set_itr_now.i.if.end16_crit_edge:                 ; preds = %set_itr_now.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then53.i:                                      ; preds = %set_itr_now.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_cmp4(i32 %new_itr.0.i, i32 %461)
  %cmp55.i = icmp ugt i32 %new_itr.0.i, %461
  %shr.i38 = lshr exact i32 %new_itr.0.i, 2
  %add.i39 = add i32 %shr.i38, %461
  %488 = call i32 @llvm.umin.i32(i32 %add.i39, i32 %new_itr.0.i) #14
  %cond68.i = select i1 %cmp55.i, i32 %488, i32 %new_itr.0.i
  %489 = ptrtoint ptr %itr.i to i32
  call void @__asan_store4_noabort(i32 %489)
  store i32 %cond68.i, ptr %itr.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !578
  call void @arm_heavy_mb() #14
  %mul.i40 = shl nuw nsw i32 %cond68.i, 8
  %div.i = udiv i32 1000000000, %mul.i40
  %490 = call i32 @llvm.bswap.i32(i32 %div.i) #14
  %491 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %491)
  %492 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i41 = getelementptr i8, ptr %492, i32 196
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i41, i32 %490) #14, !srcloc !421
  br label %if.end16

if.end16:                                         ; preds = %if.then53.i, %set_itr_now.i.if.end16_crit_edge, %e1000_update_itr.exit157.i.if.end16_crit_edge, %if.then15.if.end16_crit_edge, %if.then7.if.end16_crit_edge
  %flags = getelementptr i8, ptr %napi, i32 1232
  %493 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %493)
  %494 = load volatile i32, ptr %flags, align 4
  %495 = and i32 %494, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %495)
  %tobool18.not = icmp eq i32 %495, 0
  br i1 %tobool18.not, label %if.then19, label %if.end16.if.end21_crit_edge

if.end16.if.end21_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  call void @arm_heavy_mb() #14
  %496 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %496)
  %497 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i43 = getelementptr i8, ptr %497, i32 208
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i43, i32 -1660944384) #14, !srcloc !421
  %498 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %498)
  %499 = load ptr, ptr %hw1.i, align 4
  %add.ptr6.i = getelementptr i8, ptr %499, i32 8
  %500 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i) #14, !srcloc !422
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end16.if.end21_crit_edge, %if.end.if.end21_crit_edge
  %501 = ptrtoint ptr %work_done to i32
  call void @__asan_load4_noabort(i32 %501)
  %502 = load i32, ptr %work_done, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %lor.lhs.false.cleanup_crit_edge, %e1000_clean_tx_irq.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %502, %if.end21 ], [ %budget, %lor.lhs.false.cleanup_crit_edge ], [ %budget, %e1000_clean_tx_irq.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %work_done) #14
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @e1000_sw_init(ptr noundef %adapter) unnamed_addr #4 align 64 {
kcalloc.exit.i:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_buffer_len = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 3
  %0 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 1522, ptr %rx_buffer_len, align 8
  %num_tx_queues = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 41
  %1 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %num_tx_queues, align 8
  %num_rx_queues = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 42
  %2 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %num_rx_queues, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 36) #19
  %tx_ring.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 19
  %4 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call7.i.i.i.i, ptr %tx_ring.i, align 8
  %tobool.not.i = icmp eq ptr %call7.i.i.i.i, null
  br i1 %tobool.not.i, label %kcalloc.exit.i.do.body_crit_edge, label %if.end.i

kcalloc.exit.i.do.body_crit_edge:                 ; preds = %kcalloc.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end.i:                                         ; preds = %kcalloc.exit.i
  %5 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_rx_queues, align 4
  %7 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %6, i32 40) #14
  %8 = extractvalue { i32, i1 } %7, 1
  br i1 %8, label %kcalloc.exit46.thread.i, label %if.end7.i.i44.i, !prof !456

kcalloc.exit46.thread.i:                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %rx_ring56.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  %9 = ptrtoint ptr %rx_ring56.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %rx_ring56.i, align 4
  br label %if.then5.i

if.end7.i.i44.i:                                  ; preds = %if.end.i
  %10 = extractvalue { i32, i1 } %7, 0
  %call8.i.i43.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %10, i32 noundef 3520) #18
  %rx_ring.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  %11 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call8.i.i43.i, ptr %rx_ring.i, align 4
  %tobool4.not.i = icmp eq ptr %call8.i.i43.i, null
  br i1 %tobool4.not.i, label %if.end7.i.i44.i.if.then5.i_crit_edge, label %if.end3

if.end7.i.i44.i.if.then5.i_crit_edge:             ; preds = %if.end7.i.i44.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5.i

if.then5.i:                                       ; preds = %if.end7.i.i44.i.if.then5.i_crit_edge, %kcalloc.exit46.thread.i
  %12 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tx_ring.i, align 8
  tail call void @kfree(ptr noundef %13) #14
  br label %do.body

do.body:                                          ; preds = %if.then5.i, %kcalloc.exit.i.do.body_crit_edge
  %msg_enable = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 60
  %14 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %msg_enable, align 8
  %and = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.return_crit_edge, label %if.then2

do.body.return_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.then2:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %16 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %netdev, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %17, ptr noundef nonnull @.str.142) #17
  br label %return

if.end3:                                          ; preds = %if.end7.i.i44.i
  call void @__sanitizer_cov_trace_pc() #16
  %hw1.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !443
  tail call void @arm_heavy_mb() #14
  %18 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i = getelementptr i8, ptr %19, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 -1) #14, !srcloc !421
  %20 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hw1.i, align 4
  %add.ptr6.i = getelementptr i8, ptr %21, i32 8
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !444
  %pdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %23 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pdev.i, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 46
  %25 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %irq.i, align 4
  tail call void @synchronize_irq(i32 noundef %26) #14
  %stats_lock = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 9
  tail call void @__raw_spin_lock_init(ptr noundef %stats_lock, ptr noundef nonnull @.str.143, ptr noundef nonnull @e1000_sw_init.__key, i16 noundef signext 3) #14
  %flags = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 64
  tail call void @_set_bit(i32 noundef 2, ptr noundef %flags) #14
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %do.body.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end3 ], [ -12, %do.body.return_crit_edge ], [ -12, %if.then2 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_enable_mng_pass_thru(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_init_eeprom_params(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_validate_eeprom_checksum(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_dump_eeprom(ptr nocapture noundef readonly %adapter) unnamed_addr #4 align 64 {
entry:
  %eeprom = alloca %struct.ethtool_eeprom, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %eeprom) #14
  %2 = getelementptr inbounds %struct.ethtool_eeprom, ptr %eeprom, i32 0, i32 2
  %3 = getelementptr inbounds %struct.ethtool_eeprom, ptr %eeprom, i32 0, i32 3
  %ethtool_ops = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 44
  %4 = ptrtoint ptr %eeprom to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 -1, ptr %eeprom, align 8
  %5 = ptrtoint ptr %ethtool_ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ethtool_ops, align 16
  %get_eeprom_len = getelementptr inbounds %struct.ethtool_ops, ptr %6, i32 0, i32 13
  %7 = ptrtoint ptr %get_eeprom_len to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %get_eeprom_len, align 4
  %call = tail call i32 %8(ptr noundef %1) #14
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call, ptr %3, align 4
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %2, align 8
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %call, i32 noundef 3264) #18
  %tobool.not = icmp eq ptr %call9.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %get_eeprom = getelementptr inbounds %struct.ethtool_ops, ptr %6, i32 0, i32 14
  %11 = ptrtoint ptr %get_eeprom to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %get_eeprom, align 4
  %call4 = call i32 %12(ptr noundef %1, ptr noundef nonnull %eeprom, ptr noundef nonnull %call9.i) #14
  %arrayidx = getelementptr i8, ptr %call9.i, i32 126
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx, align 2
  %arrayidx5 = getelementptr i8, ptr %call9.i, i32 127
  %15 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx5, align 1
  %conv6 = zext i8 %16 to i32
  %shl = shl nuw nsw i32 %conv6, 8
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end
  %i.0125 = phi i32 [ 0, %if.end ], [ %add19, %for.body.for.body_crit_edge ]
  %csum_new.0124 = phi i32 [ 0, %if.end ], [ %phi.cast, %for.body.for.body_crit_edge ]
  %arrayidx9 = getelementptr i8, ptr %call9.i, i32 %i.0125
  %17 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx9, align 2
  %conv10 = zext i8 %18 to i32
  %add11 = or i32 %i.0125, 1
  %arrayidx12 = getelementptr i8, ptr %call9.i, i32 %add11
  %19 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx12, align 1
  %conv13 = zext i8 %20 to i32
  %shl14 = shl nuw nsw i32 %conv13, 8
  %add15 = or i32 %shl14, %conv10
  %add17 = add nuw nsw i32 %add15, %csum_new.0124
  %add19 = add nuw nsw i32 %i.0125, 2
  %phi.cast = and i32 %add17, 65535
  %cmp = icmp ult i32 %i.0125, 124
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i8 %14 to i32
  %add = or i32 %shl, %conv
  %conv21 = sub nsw i32 47802, %add17
  %call22 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.144) #17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, i32 noundef %add) #17
  %conv33 = and i32 %conv21, 65535
  %call34 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.150, i32 noundef %conv33) #17
  %call39 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153) #17
  %call44 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.156) #17
  call void @print_hex_dump(ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.42, i32 noundef 2, i32 noundef 16, i32 noundef 1, ptr noundef nonnull %call9.i, i32 noundef 128, i1 noundef zeroext false) #14
  %call49 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.159) #17
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.162) #17
  %call59 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.165) #17
  %call64 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.168) #17
  %call69 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.171) #17
  %call74 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.174) #17
  %call79 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.177) #17
  %call84 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.180) #17
  %call89 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.183) #17
  %call94 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.186) #17
  %call99 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.144) #17
  call void @kfree(ptr noundef nonnull %call9.i) #14
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %eeprom) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_read_mac_addr(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_watchdog(ptr noundef %work) #4 align 64 {
entry:
  %phy_status.i = alloca i16, align 2
  %phy_ctrl.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -2000
  %hw1 = getelementptr i8, ptr %work, i32 -1008
  %netdev2 = getelementptr i8, ptr %work, i32 -1016
  %0 = ptrtoint ptr %netdev2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev2, align 8
  %tx_ring = getelementptr i8, ptr %work, i32 -1384
  %2 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tx_ring, align 8
  %media_type.i = getelementptr i8, ptr %work, i32 -984
  %4 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %media_type.i, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.227)
  switch i32 %5, label %if.end.thread [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb7.i
    i32 2, label %sw.bb17.i
  ]

if.end.thread:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %state.i313 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %7 = ptrtoint ptr %state.i313 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i313, align 4
  br label %if.else

sw.bb.i:                                          ; preds = %entry
  %mac_type.i = getelementptr i8, ptr %work, i32 -996
  %9 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %10)
  %cmp.i = icmp eq i32 %10, 9
  br i1 %cmp.i, label %if.then.i, label %sw.bb.i.if.end.i_crit_edge

sw.bb.i.if.end.i_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  %get_link_status.i = getelementptr i8, ptr %work, i32 -768
  %11 = ptrtoint ptr %get_link_status.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 1, ptr %get_link_status.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %sw.bb.i.if.end.i_crit_edge
  %get_link_status2.i = getelementptr i8, ptr %work, i32 -768
  %12 = ptrtoint ptr %get_link_status2.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %get_link_status2.i, align 4, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i, label %e1000_has_link.exit.thread, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 @e1000_check_for_link(ptr noundef %hw1) #14
  %14 = ptrtoint ptr %get_link_status2.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %get_link_status2.i, align 4, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool5.not.i = icmp eq i8 %15, 0
  br label %e1000_has_link.exit

sw.bb7.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call8.i = tail call i32 @e1000_check_for_link(ptr noundef %hw1) #14
  %16 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw1, align 4
  %add.ptr.i = getelementptr i8, ptr %17, i32 8
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !459
  %19 = and i32 %18, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool13.i = icmp ne i32 %19, 0
  br label %e1000_has_link.exit

sw.bb17.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call18.i = tail call i32 @e1000_check_for_link(ptr noundef %hw1) #14
  %serdes_has_link.i = getelementptr i8, ptr %work, i32 -767
  %20 = ptrtoint ptr %serdes_has_link.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %serdes_has_link.i, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %extract.t.i = icmp ne i8 %21, 0
  br label %e1000_has_link.exit

e1000_has_link.exit:                              ; preds = %sw.bb17.i, %sw.bb7.i, %if.then3.i
  %link_active.0.off0.i = phi i1 [ %extract.t.i, %sw.bb17.i ], [ %tobool13.i, %sw.bb7.i ], [ %tobool5.not.i, %if.then3.i ]
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %22 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %state.i, align 4
  %24 = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i297 = icmp ne i32 %24, 0
  %call.not = xor i1 %link_active.0.off0.i, true
  %brmerge = select i1 %tobool.not.i297, i1 true, i1 %call.not
  br i1 %brmerge, label %if.end, label %e1000_has_link.exit.link_up_crit_edge

e1000_has_link.exit.link_up_crit_edge:            ; preds = %e1000_has_link.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %link_up

e1000_has_link.exit.thread:                       ; preds = %if.end.i
  %state.i325 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %25 = ptrtoint ptr %state.i325 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %state.i325, align 4
  %27 = and i32 %26, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i297326.not = icmp eq i32 %27, 0
  br i1 %tobool.not.i297326.not, label %e1000_has_link.exit.thread.link_up_crit_edge, label %e1000_has_link.exit.thread.if.then6_crit_edge

e1000_has_link.exit.thread.if.then6_crit_edge:    ; preds = %e1000_has_link.exit.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6

e1000_has_link.exit.thread.link_up_crit_edge:     ; preds = %e1000_has_link.exit.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %link_up

if.end:                                           ; preds = %e1000_has_link.exit
  br i1 %link_active.0.off0.i, label %if.end.if.then6_crit_edge, label %if.end.if.else_crit_edge

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.end.if.then6_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6

if.then6:                                         ; preds = %if.end.if.then6_crit_edge, %e1000_has_link.exit.thread.if.then6_crit_edge
  %state.i330334 = phi ptr [ %state.i, %if.end.if.then6_crit_edge ], [ %state.i325, %e1000_has_link.exit.thread.if.then6_crit_edge ]
  %28 = ptrtoint ptr %state.i330334 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %state.i330334, align 4
  %30 = and i32 %29, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not.i299 = icmp eq i32 %30, 0
  br i1 %tobool.not.i299, label %if.then6.link_up_crit_edge, label %if.then8

if.then6.link_up_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %link_up

if.then8:                                         ; preds = %if.then6
  %link_speed = getelementptr i8, ptr %work, i32 -1464
  %link_duplex = getelementptr i8, ptr %work, i32 -1462
  %call9 = tail call i32 @e1000_get_speed_and_duplex(ptr noundef %hw1, ptr noundef %link_speed, ptr noundef %link_duplex) #14
  %31 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %hw1, align 4
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %32) #14, !srcloc !422
  %34 = tail call i32 @llvm.bswap.i32(i32 %33)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !579
  %35 = ptrtoint ptr %link_speed to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %link_speed, align 8
  %conv17 = zext i16 %36 to i32
  %37 = ptrtoint ptr %link_duplex to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %link_duplex, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %38)
  %cmp20 = icmp eq i16 %38, 2
  %cond22 = select i1 %cmp20, ptr @.str.192, ptr @.str.193
  %and = and i32 %34, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool23.not = icmp eq i32 %and, 0
  %and25 = and i32 %34, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  %39 = and i32 %34, 402653184
  call void @__sanitizer_cov_trace_const_cmp4(i32 402653184, i32 %39)
  %.not = icmp eq i32 %39, 402653184
  %cond33 = select i1 %tobool23.not, ptr @.str.197, ptr @.str.196
  %spec.select = select i1 %tobool26.not, ptr %cond33, ptr @.str.195
  %cond36 = select i1 %.not, ptr @.str.194, ptr %spec.select
  %call37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.190, ptr noundef %1, i32 noundef %conv17, ptr noundef nonnull %cond22, ptr noundef nonnull %cond36) #17
  %tx_timeout_factor = getelementptr i8, ptr %work, i32 -1320
  %40 = ptrtoint ptr %link_speed to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %link_speed, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %41)
  %cond207 = icmp eq i16 %41, 10
  %spec.store.select = select i1 %cond207, i8 16, i8 1
  %42 = ptrtoint ptr %tx_timeout_factor to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %spec.store.select, ptr %tx_timeout_factor, align 8
  %43 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hw1, align 4
  %add.ptr48 = getelementptr i8, ptr %44, i32 1024
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr48) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !580
  %46 = or i32 %45, 33554432
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !581
  tail call void @arm_heavy_mb() #14
  %47 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %hw1, align 4
  %add.ptr60 = getelementptr i8, ptr %48, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr60, i32 %46) #14, !srcloc !421
  tail call void @netif_carrier_on(ptr noundef %1) #14
  %flags = getelementptr i8, ptr %work, i32 -64
  %49 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %flags, align 4
  %51 = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool62.not = icmp eq i32 %51, 0
  br i1 %tobool62.not, label %if.then63, label %if.then8.if.end65_crit_edge

if.then8.if.end65_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end65

if.then63:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  %phy_info_task = getelementptr i8, ptr %work, i32 200
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %52 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %52, ptr noundef %phy_info_task, i32 noundef 200) #14
  br label %if.end65

if.end65:                                         ; preds = %if.then63, %if.then8.if.end65_crit_edge
  %smartspeed = getelementptr i8, ptr %work, i32 -1472
  %53 = ptrtoint ptr %smartspeed to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %smartspeed, align 8
  br label %link_up

if.else:                                          ; preds = %if.end.if.else_crit_edge, %if.end.thread
  %state.i319323 = phi ptr [ %state.i313, %if.end.thread ], [ %state.i, %if.end.if.else_crit_edge ]
  %54 = ptrtoint ptr %state.i319323 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %state.i319323, align 4
  %56 = and i32 %55, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.not.i301 = icmp eq i32 %56, 0
  br i1 %tobool.not.i301, label %if.then68, label %if.else.if.end85_crit_edge

if.else.if.end85_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end85

if.then68:                                        ; preds = %if.else
  %link_speed69 = getelementptr i8, ptr %work, i32 -1464
  %57 = ptrtoint ptr %link_speed69 to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 0, ptr %link_speed69, align 8
  %link_duplex70 = getelementptr i8, ptr %work, i32 -1462
  %58 = ptrtoint ptr %link_duplex70 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 0, ptr %link_duplex70, align 2
  %call77 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.199, ptr noundef %1) #17
  tail call void @netif_carrier_off(ptr noundef %1) #14
  %flags78 = getelementptr i8, ptr %work, i32 -64
  %59 = ptrtoint ptr %flags78 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %flags78, align 4
  %61 = and i32 %60, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool80.not = icmp eq i32 %61, 0
  br i1 %tobool80.not, label %if.then81, label %if.then68.if.end85_crit_edge

if.then68.if.end85_crit_edge:                     ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end85

if.then81:                                        ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #16
  %phy_info_task82 = getelementptr i8, ptr %work, i32 200
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %62 = load ptr, ptr @system_wq, align 4
  %call.i.i302 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %62, ptr noundef %phy_info_task82, i32 noundef 200) #14
  br label %if.end85

if.end85:                                         ; preds = %if.then81, %if.then68.if.end85_crit_edge, %if.else.if.end85_crit_edge
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_status.i) #14
  %63 = ptrtoint ptr %phy_status.i to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 -1, ptr %phy_status.i, align 2, !annotation !460
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %phy_ctrl.i) #14
  %64 = ptrtoint ptr %phy_ctrl.i to i32
  call void @__asan_store2_noabort(i32 %64)
  store i16 -1, ptr %phy_ctrl.i, align 2, !annotation !460
  %phy_type.i = getelementptr i8, ptr %work, i32 -992
  %65 = ptrtoint ptr %phy_type.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %phy_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %66)
  %cmp.not.i = icmp eq i32 %66, 1
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.end85.e1000_smartspeed.exit_crit_edge

if.end85.e1000_smartspeed.exit_crit_edge:         ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_smartspeed.exit

lor.lhs.false.i:                                  ; preds = %if.end85
  %autoneg.i = getelementptr i8, ptr %work, i32 -797
  %67 = ptrtoint ptr %autoneg.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %autoneg.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool.not.i304 = icmp eq i8 %68, 0
  br i1 %tobool.not.i304, label %lor.lhs.false.i.e1000_smartspeed.exit_crit_edge, label %lor.lhs.false2.i

lor.lhs.false.i.e1000_smartspeed.exit_crit_edge:  ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_smartspeed.exit

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i
  %autoneg_advertised.i = getelementptr i8, ptr %work, i32 -826
  %69 = ptrtoint ptr %autoneg_advertised.i to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %autoneg_advertised.i, align 2
  %71 = and i16 %70, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %71)
  %tobool3.not.i = icmp eq i16 %71, 0
  br i1 %tobool3.not.i, label %lor.lhs.false2.i.e1000_smartspeed.exit_crit_edge, label %if.end.i305

lor.lhs.false2.i.e1000_smartspeed.exit_crit_edge: ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_smartspeed.exit

if.end.i305:                                      ; preds = %lor.lhs.false2.i
  %smartspeed.i = getelementptr i8, ptr %work, i32 -1472
  %72 = ptrtoint ptr %smartspeed.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %smartspeed.i, align 8
  %74 = zext i32 %73 to i64
  call void @__sanitizer_cov_trace_switch(i64 %74, ptr @__sancov_gen_cov_switch_values.228)
  switch i32 %73, label %if.end.i305.if.end59.i_crit_edge [
    i32 0, label %if.then6.i
    i32 3, label %if.then41.i
  ]

if.end.i305.if.end59.i_crit_edge:                 ; preds = %if.end.i305
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end59.i

if.then6.i:                                       ; preds = %if.end.i305
  %call.i306 = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 10, ptr noundef nonnull %phy_status.i) #14
  %75 = ptrtoint ptr %phy_status.i to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %phy_status.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %76)
  %tobool9.not.i = icmp sgt i16 %76, -1
  br i1 %tobool9.not.i, label %if.then6.i.e1000_smartspeed.exit_crit_edge, label %if.end11.i

if.then6.i.e1000_smartspeed.exit_crit_edge:       ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_smartspeed.exit

if.end11.i:                                       ; preds = %if.then6.i
  %call12.i = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 10, ptr noundef nonnull %phy_status.i) #14
  %77 = ptrtoint ptr %phy_status.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %phy_status.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %78)
  %tobool15.not.i = icmp sgt i16 %78, -1
  br i1 %tobool15.not.i, label %if.end11.i.e1000_smartspeed.exit_crit_edge, label %if.end17.i

if.end11.i.e1000_smartspeed.exit_crit_edge:       ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_smartspeed.exit

if.end17.i:                                       ; preds = %if.end11.i
  %call18.i307 = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 9, ptr noundef nonnull %phy_ctrl.i) #14
  %79 = ptrtoint ptr %phy_ctrl.i to i32
  call void @__asan_load2_noabort(i32 %79)
  %80 = load i16, ptr %phy_ctrl.i, align 2
  %81 = and i16 %80, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %81)
  %tobool21.not.i = icmp eq i16 %81, 0
  br i1 %tobool21.not.i, label %if.end17.i.e1000_smartspeed.exit_crit_edge, label %if.then22.i

if.end17.i.e1000_smartspeed.exit_crit_edge:       ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_smartspeed.exit

if.then22.i:                                      ; preds = %if.end17.i
  %and24.i = and i16 %80, -4097
  %82 = ptrtoint ptr %phy_ctrl.i to i32
  call void @__asan_store2_noabort(i32 %82)
  store i16 %and24.i, ptr %phy_ctrl.i, align 2
  %call26.i = call i32 @e1000_write_phy_reg(ptr noundef %hw1, i32 noundef 9, i16 noundef zeroext %and24.i) #14
  %83 = ptrtoint ptr %smartspeed.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %smartspeed.i, align 8
  %inc.i = add i32 %84, 1
  store i32 %inc.i, ptr %smartspeed.i, align 8
  %call28.i = call i32 @e1000_phy_setup_autoneg(ptr noundef %hw1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i)
  %tobool29.not.i = icmp eq i32 %call28.i, 0
  br i1 %tobool29.not.i, label %land.lhs.true.i, label %if.then22.i.e1000_smartspeed.exit_crit_edge

if.then22.i.e1000_smartspeed.exit_crit_edge:      ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_smartspeed.exit

land.lhs.true.i:                                  ; preds = %if.then22.i
  %call30.i = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 0, ptr noundef nonnull %phy_ctrl.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i)
  %tobool31.not.i = icmp eq i32 %call30.i, 0
  br i1 %tobool31.not.i, label %if.then32.i, label %land.lhs.true.i.e1000_smartspeed.exit_crit_edge

land.lhs.true.i.e1000_smartspeed.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_smartspeed.exit

if.then32.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  %85 = ptrtoint ptr %phy_ctrl.i to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %phy_ctrl.i, align 2
  %87 = or i16 %86, 4608
  store i16 %87, ptr %phy_ctrl.i, align 2
  %call35.i = call i32 @e1000_write_phy_reg(ptr noundef %hw1, i32 noundef 0, i16 noundef zeroext %87) #14
  br label %e1000_smartspeed.exit

if.then41.i:                                      ; preds = %if.end.i305
  %call42.i = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 9, ptr noundef nonnull %phy_ctrl.i) #14
  %88 = ptrtoint ptr %phy_ctrl.i to i32
  call void @__asan_load2_noabort(i32 %88)
  %89 = load i16, ptr %phy_ctrl.i, align 2
  %90 = or i16 %89, 4096
  store i16 %90, ptr %phy_ctrl.i, align 2
  %call46.i = call i32 @e1000_write_phy_reg(ptr noundef %hw1, i32 noundef 9, i16 noundef zeroext %90) #14
  %call47.i = call i32 @e1000_phy_setup_autoneg(ptr noundef %hw1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47.i)
  %tobool48.not.i = icmp eq i32 %call47.i, 0
  br i1 %tobool48.not.i, label %land.lhs.true49.i, label %if.then41.i.if.end59.i_crit_edge

if.then41.i.if.end59.i_crit_edge:                 ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end59.i

land.lhs.true49.i:                                ; preds = %if.then41.i
  %call50.i = call i32 @e1000_read_phy_reg(ptr noundef %hw1, i32 noundef 0, ptr noundef nonnull %phy_ctrl.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50.i)
  %tobool51.not.i = icmp eq i32 %call50.i, 0
  br i1 %tobool51.not.i, label %if.then52.i, label %land.lhs.true49.i.if.end59.i_crit_edge

land.lhs.true49.i.if.end59.i_crit_edge:           ; preds = %land.lhs.true49.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end59.i

if.then52.i:                                      ; preds = %land.lhs.true49.i
  call void @__sanitizer_cov_trace_pc() #16
  %91 = ptrtoint ptr %phy_ctrl.i to i32
  call void @__asan_load2_noabort(i32 %91)
  %92 = load i16, ptr %phy_ctrl.i, align 2
  %93 = or i16 %92, 4608
  store i16 %93, ptr %phy_ctrl.i, align 2
  %call56.i = call i32 @e1000_write_phy_reg(ptr noundef %hw1, i32 noundef 0, i16 noundef zeroext %93) #14
  br label %if.end59.i

if.end59.i:                                       ; preds = %if.then52.i, %land.lhs.true49.i.if.end59.i_crit_edge, %if.then41.i.if.end59.i_crit_edge, %if.end.i305.if.end59.i_crit_edge
  %94 = ptrtoint ptr %smartspeed.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %smartspeed.i, align 8
  %inc61.i = add i32 %95, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %95)
  %cmp62.i = icmp eq i32 %95, 15
  %spec.select.i = select i1 %cmp62.i, i32 0, i32 %inc61.i
  %96 = ptrtoint ptr %smartspeed.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %spec.select.i, ptr %smartspeed.i, align 8
  br label %e1000_smartspeed.exit

e1000_smartspeed.exit:                            ; preds = %if.end59.i, %if.then32.i, %land.lhs.true.i.e1000_smartspeed.exit_crit_edge, %if.then22.i.e1000_smartspeed.exit_crit_edge, %if.end17.i.e1000_smartspeed.exit_crit_edge, %if.end11.i.e1000_smartspeed.exit_crit_edge, %if.then6.i.e1000_smartspeed.exit_crit_edge, %lor.lhs.false2.i.e1000_smartspeed.exit_crit_edge, %lor.lhs.false.i.e1000_smartspeed.exit_crit_edge, %if.end85.e1000_smartspeed.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_ctrl.i) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %phy_status.i) #14
  br label %link_up

link_up:                                          ; preds = %e1000_smartspeed.exit, %if.end65, %if.then6.link_up_crit_edge, %e1000_has_link.exit.thread.link_up_crit_edge, %e1000_has_link.exit.link_up_crit_edge
  %state.i320 = phi ptr [ %state.i, %e1000_has_link.exit.link_up_crit_edge ], [ %state.i319323, %e1000_smartspeed.exit ], [ %state.i330334, %if.end65 ], [ %state.i330334, %if.then6.link_up_crit_edge ], [ %state.i325, %e1000_has_link.exit.thread.link_up_crit_edge ]
  call void @e1000_update_stats(ptr noundef %add.ptr)
  %tpt = getelementptr i8, ptr %work, i32 -352
  %97 = ptrtoint ptr %tpt to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %tpt, align 8
  %tpt_old = getelementptr i8, ptr %work, i32 -1352
  %99 = ptrtoint ptr %tpt_old to i32
  call void @__asan_load8_noabort(i32 %99)
  %100 = load i64, ptr %tpt_old, align 8
  %sub = sub i64 %98, %100
  %conv87 = trunc i64 %sub to i32
  %tx_packet_delta = getelementptr i8, ptr %work, i32 -864
  %101 = ptrtoint ptr %tx_packet_delta to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %conv87, ptr %tx_packet_delta, align 4
  store i64 %98, ptr %tpt_old, align 8
  %colc = getelementptr i8, ptr %work, i32 -664
  %102 = ptrtoint ptr %colc to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %colc, align 8
  %colc_old = getelementptr i8, ptr %work, i32 -1344
  %104 = ptrtoint ptr %colc_old to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %colc_old, align 8
  %sub92 = sub i64 %103, %105
  %conv93 = trunc i64 %sub92 to i32
  %collision_delta = getelementptr i8, ptr %work, i32 -868
  %106 = ptrtoint ptr %collision_delta to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %conv93, ptr %collision_delta, align 4
  store i64 %103, ptr %colc_old, align 8
  %gorcl = getelementptr i8, ptr %work, i32 -496
  %107 = ptrtoint ptr %gorcl to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %gorcl, align 8
  %gorcl_old = getelementptr i8, ptr %work, i32 -1024
  %109 = ptrtoint ptr %gorcl_old to i32
  call void @__asan_load8_noabort(i32 %109)
  %110 = load i64, ptr %gorcl_old, align 8
  %sub98 = sub i64 %108, %110
  %conv99 = trunc i64 %sub98 to i32
  %gorcl100 = getelementptr i8, ptr %work, i32 -1032
  %111 = ptrtoint ptr %gorcl100 to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 %conv99, ptr %gorcl100, align 8
  store i64 %108, ptr %gorcl_old, align 8
  %gotcl = getelementptr i8, ptr %work, i32 -480
  %112 = ptrtoint ptr %gotcl to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %gotcl, align 8
  %gotcl_old = getelementptr i8, ptr %work, i32 -1360
  %114 = ptrtoint ptr %gotcl_old to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %gotcl_old, align 8
  %sub105 = sub i64 %113, %115
  %conv106 = trunc i64 %sub105 to i32
  %gotcl107 = getelementptr i8, ptr %work, i32 -1364
  %116 = ptrtoint ptr %gotcl107 to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %conv106, ptr %gotcl107, align 4
  store i64 %113, ptr %gotcl_old, align 8
  call void @e1000_update_adaptive(ptr noundef %hw1) #14
  %117 = ptrtoint ptr %state.i320 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load volatile i32, ptr %state.i320, align 4
  %119 = and i32 %118, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %119)
  %tobool.not.i309 = icmp eq i32 %119, 0
  br i1 %tobool.not.i309, label %link_up.if.end141_crit_edge, label %if.then112

link_up.if.end141_crit_edge:                      ; preds = %link_up
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end141

if.then112:                                       ; preds = %link_up
  %next_to_clean = getelementptr inbounds %struct.e1000_tx_ring, ptr %3, i32 0, i32 5
  %120 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %next_to_clean, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !582
  %next_to_use = getelementptr inbounds %struct.e1000_tx_ring, ptr %3, i32 0, i32 4
  %122 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile i32, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %121, i32 %123)
  %cmp126 = icmp ugt i32 %121, %123
  br i1 %cmp126, label %if.then112.cond.end130_crit_edge, label %cond.false129

if.then112.cond.end130_crit_edge:                 ; preds = %if.then112
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end130

cond.false129:                                    ; preds = %if.then112
  call void @__sanitizer_cov_trace_pc() #16
  %count = getelementptr inbounds %struct.e1000_tx_ring, ptr %3, i32 0, i32 3
  %124 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %count, align 4
  br label %cond.end130

cond.end130:                                      ; preds = %cond.false129, %if.then112.cond.end130_crit_edge
  %cond131 = phi i32 [ %125, %cond.false129 ], [ 0, %if.then112.cond.end130_crit_edge ]
  %add = sub i32 %121, %123
  %sub132 = add i32 %add, %cond131
  %count135 = getelementptr inbounds %struct.e1000_tx_ring, ptr %3, i32 0, i32 3
  %126 = ptrtoint ptr %count135 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %count135, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub132, i32 %127)
  %cmp136 = icmp ult i32 %sub132, %127
  br i1 %cmp136, label %if.then138, label %cond.end130.if.end141_crit_edge

cond.end130.if.end141_crit_edge:                  ; preds = %cond.end130
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end141

if.then138:                                       ; preds = %cond.end130
  call void @__sanitizer_cov_trace_pc() #16
  %tx_timeout_count = getelementptr i8, ptr %work, i32 -1336
  %128 = ptrtoint ptr %tx_timeout_count to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %tx_timeout_count, align 8
  %inc = add i32 %129, 1
  store i32 %inc, ptr %tx_timeout_count, align 8
  %reset_task = getelementptr i8, ptr %work, i32 -44
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %130 = load ptr, ptr @system_wq, align 4
  %call.i.i310 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %130, ptr noundef %reset_task) #14
  br label %cleanup

if.end141:                                        ; preds = %cond.end130.if.end141_crit_edge, %link_up.if.end141_crit_edge
  %mac_type142 = getelementptr i8, ptr %work, i32 -996
  %131 = ptrtoint ptr %mac_type142 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %mac_type142, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %132)
  %cmp143 = icmp ugt i32 %132, 4
  br i1 %cmp143, label %land.lhs.true145, label %if.end141.do.body187_crit_edge

if.end141.do.body187_crit_edge:                   ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body187

land.lhs.true145:                                 ; preds = %if.end141
  %itr_setting = getelementptr i8, ptr %work, i32 -1396
  %133 = ptrtoint ptr %itr_setting to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %itr_setting, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %134)
  %cmp146 = icmp eq i32 %134, 4
  br i1 %cmp146, label %if.then148, label %land.lhs.true145.do.body187_crit_edge

land.lhs.true145.do.body187_crit_edge:            ; preds = %land.lhs.true145
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body187

if.then148:                                       ; preds = %land.lhs.true145
  %135 = ptrtoint ptr %gotcl107 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %gotcl107, align 4
  %137 = ptrtoint ptr %gorcl100 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %gorcl100, align 8
  %add151 = add i32 %138, %136
  call void @__sanitizer_cov_trace_const_cmp4(i32 10000, i32 %add151)
  %139 = icmp ult i32 %add151, 10000
  br i1 %139, label %if.then148.cond.end173_crit_edge, label %cond.true169

if.then148.cond.end173_crit_edge:                 ; preds = %if.then148
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end173

cond.true169:                                     ; preds = %if.then148
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_cmp4(i32 %136, i32 %138)
  %cmp154 = icmp ugt i32 %136, %138
  %sub159 = sub i32 %136, %138
  %sub163 = sub i32 %138, %136
  %cond165 = select i1 %cmp154, i32 %sub159, i32 %sub163
  %div = udiv i32 %add151, 10000
  %div166 = udiv i32 %cond165, 10000
  %mul = mul nuw i32 %div166, 6000
  %div170 = udiv i32 %mul, %div
  %add171 = shl i32 %div170, 8
  %phi.bo = add i32 %add171, 512000
  br label %cond.end173

cond.end173:                                      ; preds = %cond.true169, %if.then148.cond.end173_crit_edge
  %cond174 = phi i32 [ %phi.bo, %cond.true169 ], [ 2048000, %if.then148.cond.end173_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !583
  call void @arm_heavy_mb() #14
  %div179 = udiv i32 1000000000, %cond174
  %140 = call i32 @llvm.bswap.i32(i32 %div179)
  %141 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %hw1, align 4
  %add.ptr185 = getelementptr i8, ptr %142, i32 196
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr185, i32 %140) #14, !srcloc !421
  br label %do.body187

do.body187:                                       ; preds = %cond.end173, %land.lhs.true145.do.body187_crit_edge, %if.end141.do.body187_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !584
  call void @arm_heavy_mb() #14
  %143 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %hw1, align 4
  %add.ptr195 = getelementptr i8, ptr %144, i32 200
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr195, i32 268435456) #14, !srcloc !421
  %detect_tx_hung = getelementptr i8, ptr %work, i32 -1311
  %145 = ptrtoint ptr %detect_tx_hung to i32
  call void @__asan_store1_noabort(i32 %145)
  store i8 1, ptr %detect_tx_hung, align 1
  %flags196 = getelementptr i8, ptr %work, i32 -64
  %146 = ptrtoint ptr %flags196 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load volatile i32, ptr %flags196, align 4
  %148 = and i32 %147, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %148)
  %tobool198.not = icmp eq i32 %148, 0
  br i1 %tobool198.not, label %if.then199, label %do.body187.cleanup_crit_edge

do.body187.cleanup_crit_edge:                     ; preds = %do.body187
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then199:                                       ; preds = %do.body187
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %149 = load ptr, ptr @system_wq, align 4
  %call.i.i311 = call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %149, ptr noundef %work, i32 noundef 200) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then199, %do.body187.cleanup_crit_edge, %if.then138
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_82547_tx_fifo_stall_task(ptr noundef %work) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr i8, ptr %work, i32 -1108
  %netdev2 = getelementptr i8, ptr %work, i32 -1116
  %0 = ptrtoint ptr %netdev2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev2, align 8
  %tx_fifo_stall = getelementptr i8, ptr %work, i32 -1416
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %tx_fifo_stall, i32 noundef 4) #14
  %2 = ptrtoint ptr %tx_fifo_stall to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %tx_fifo_stall, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %entry.if.end136_crit_edge, label %if.then

entry.if.end136_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end136

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw1, align 4
  %mac_type = getelementptr i8, ptr %work, i32 -1096
  %6 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %cmp = icmp ugt i32 %7, 2
  %cond = select i1 %cmp, i32 14360, i32 1080
  %add.ptr3 = getelementptr i8, ptr %5, i32 %cond
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr3) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !585
  %9 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw1, align 4
  %11 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %12)
  %cmp11 = icmp ugt i32 %12, 2
  %cond12 = select i1 %cmp11, i32 14352, i32 1072
  %add.ptr13 = getelementptr i8, ptr %10, i32 %cond12
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr13) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !586
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %13)
  %cmp17 = icmp eq i32 %8, %13
  br i1 %cmp17, label %land.lhs.true, label %if.then.if.else_crit_edge

if.then.if.else_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %if.then
  %14 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw1, align 4
  %16 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %17)
  %cmp22 = icmp ugt i32 %17, 2
  %cond23 = select i1 %cmp22, i32 13336, i32 32792
  %add.ptr24 = getelementptr i8, ptr %15, i32 %cond23
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr24) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !587
  %19 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw1, align 4
  %21 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %22)
  %cmp32 = icmp ugt i32 %22, 2
  %cond33 = select i1 %cmp32, i32 13328, i32 32784
  %add.ptr34 = getelementptr i8, ptr %20, i32 %cond33
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr34) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !588
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %23)
  %cmp38 = icmp eq i32 %18, %23
  br i1 %cmp38, label %land.lhs.true39, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true39:                                  ; preds = %land.lhs.true
  %24 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw1, align 4
  %add.ptr46 = getelementptr i8, ptr %25, i32 13352
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr46) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !589
  %27 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw1, align 4
  %add.ptr56 = getelementptr i8, ptr %28, i32 13344
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr56) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !590
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %29)
  %cmp60 = icmp eq i32 %26, %29
  br i1 %cmp60, label %if.then61, label %land.lhs.true39.if.else_crit_edge

land.lhs.true39.if.else_crit_edge:                ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then61:                                        ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #16
  %30 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw1, align 4
  %add.ptr68 = getelementptr i8, ptr %31, i32 1024
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr68) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !591
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !592
  tail call void @arm_heavy_mb() #14
  %33 = and i32 %32, -33554433
  %34 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hw1, align 4
  %add.ptr76 = getelementptr i8, ptr %35, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr76, i32 %33) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !593
  tail call void @arm_heavy_mb() #14
  %tx_head_addr = getelementptr i8, ptr %work, i32 -1428
  %36 = ptrtoint ptr %tx_head_addr to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %tx_head_addr, align 8
  %38 = tail call i32 @llvm.bswap.i32(i32 %37)
  %39 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw1, align 4
  %41 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %42)
  %cmp82 = icmp ugt i32 %42, 2
  %cond83 = select i1 %cmp82, i32 13336, i32 32792
  %add.ptr84 = getelementptr i8, ptr %40, i32 %cond83
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr84, i32 %38) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !594
  tail call void @arm_heavy_mb() #14
  %43 = ptrtoint ptr %tx_head_addr to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %tx_head_addr, align 8
  %45 = tail call i32 @llvm.bswap.i32(i32 %44)
  %46 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hw1, align 4
  %48 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %49)
  %cmp91 = icmp ugt i32 %49, 2
  %cond92 = select i1 %cmp91, i32 13328, i32 32784
  %add.ptr93 = getelementptr i8, ptr %47, i32 %cond92
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr93, i32 %45) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !595
  tail call void @arm_heavy_mb() #14
  %50 = ptrtoint ptr %tx_head_addr to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %tx_head_addr, align 8
  %52 = tail call i32 @llvm.bswap.i32(i32 %51)
  %53 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %hw1, align 4
  %add.ptr102 = getelementptr i8, ptr %54, i32 13352
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr102, i32 %52) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !596
  tail call void @arm_heavy_mb() #14
  %55 = ptrtoint ptr %tx_head_addr to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %tx_head_addr, align 8
  %57 = tail call i32 @llvm.bswap.i32(i32 %56)
  %58 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %hw1, align 4
  %add.ptr111 = getelementptr i8, ptr %59, i32 13344
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr111, i32 %57) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !597
  tail call void @arm_heavy_mb() #14
  %60 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %hw1, align 4
  %add.ptr119 = getelementptr i8, ptr %61, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr119, i32 %32) #14, !srcloc !421
  %62 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %hw1, align 4
  %add.ptr126 = getelementptr i8, ptr %63, i32 8
  %64 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr126) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !598
  %tx_fifo_head = getelementptr i8, ptr %work, i32 -1432
  %65 = ptrtoint ptr %tx_fifo_head to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 0, ptr %tx_fifo_head, align 4
  %call.i.i175 = tail call zeroext i1 @__kasan_check_write(ptr noundef %tx_fifo_stall, i32 noundef 4) #14
  %66 = ptrtoint ptr %tx_fifo_stall to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile i32 0, ptr %tx_fifo_stall, align 4
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 103
  %67 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %_tx.i.i, align 128
  tail call void @netif_tx_wake_queue(ptr noundef %68) #14
  br label %if.end136

if.else:                                          ; preds = %land.lhs.true39.if.else_crit_edge, %land.lhs.true.if.else_crit_edge, %if.then.if.else_crit_edge
  %flags = getelementptr i8, ptr %work, i32 -164
  %69 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %flags, align 4
  %71 = and i32 %70, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool132.not = icmp eq i32 %71, 0
  br i1 %tobool132.not, label %if.then133, label %if.else.if.end136_crit_edge

if.else.if.end136_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end136

if.then133:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %72 = load ptr, ptr @system_wq, align 4
  %call.i.i176 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %72, ptr noundef %work, i32 noundef 1) #14
  br label %if.end136

if.end136:                                        ; preds = %if.then133, %if.else.if.end136_crit_edge, %if.then61, %entry.if.end136_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_update_phy_info_task(ptr noundef %work) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw = getelementptr i8, ptr %work, i32 -1208
  %phy_info = getelementptr i8, ptr %work, i32 -392
  %call = tail call i32 @e1000_phy_get_info(ptr noundef %hw, ptr noundef %phy_info) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_reset_task(ptr noundef %work) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %msg_enable = getelementptr i8, ptr %work, i32 -28
  %0 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %msg_enable, align 8
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end_crit_edge, label %if.then

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %netdev = getelementptr i8, ptr %work, i32 -972
  %2 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %netdev, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %3, ptr noundef nonnull @.str.201) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry.do.end_crit_edge
  %add.ptr = getelementptr i8, ptr %work, i32 -1956
  tail call void @e1000_reinit_locked(ptr noundef %add.ptr)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_check_options(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_read_eeprom(ptr noundef, i16 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_set_wakeup_enable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_vlan_filter_on_off(ptr noundef %adapter, i1 noundef zeroext %filter_on) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %flags = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 64
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !443
  tail call void @arm_heavy_mb() #14
  %3 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw1, align 4
  %add.ptr.i = getelementptr i8, ptr %4, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 -1) #14, !srcloc !421
  %5 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hw1, align 4
  %add.ptr6.i = getelementptr i8, ptr %6, i32 8
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !444
  %pdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %8 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev.i, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 46
  %10 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %irq.i, align 4
  tail call void @synchronize_irq(i32 noundef %11) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %12 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %netdev, align 8
  %features = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 23
  %14 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %features, align 16
  %16 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw1, align 4
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %17) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !599
  %19 = and i32 %18, -65
  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #14
  %21 = trunc i64 %15 to i32
  %22 = shl i32 %21, 22
  %23 = and i32 %22, 1073741824
  %ctrl.0.i = or i32 %20, %23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !600
  tail call void @arm_heavy_mb() #14
  %24 = tail call i32 @llvm.bswap.i32(i32 %ctrl.0.i) #14
  %25 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hw1, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %26, i32 %24) #14, !srcloc !421
  %27 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %28, i32 256
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14
  br i1 %filter_on, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %30 = and i32 %29, -2049
  %31 = tail call i32 @llvm.bswap.i32(i32 %30)
  %32 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %netdev, align 8
  %flags7 = getelementptr inbounds %struct.net_device, ptr %33, i32 0, i32 14
  %34 = ptrtoint ptr %flags7 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags7, align 8
  %and8 = shl i32 %35, 10
  %36 = and i32 %and8, 262144
  %37 = xor i32 %36, 262144
  %38 = or i32 %37, %31
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !601
  tail call void @arm_heavy_mb() #14
  %39 = tail call i32 @llvm.bswap.i32(i32 %38)
  %40 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hw1, align 4
  %add.ptr16 = getelementptr i8, ptr %41, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr16, i32 %39) #14, !srcloc !421
  tail call fastcc void @e1000_update_mng_vlan(ptr noundef %adapter)
  br label %if.end36

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %42 = and i32 %29, -1025
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !602
  tail call void @arm_heavy_mb() #14
  %43 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hw1, align 4
  %add.ptr35 = getelementptr i8, ptr %44, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr35, i32 %42) #14, !srcloc !421
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then3
  %45 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %flags, align 4
  %47 = and i32 %46, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool39.not = icmp eq i32 %47, 0
  br i1 %tobool39.not, label %if.then40, label %if.end36.if.end41_crit_edge

if.end36.if.end41_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41

if.then40:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  tail call void @arm_heavy_mb() #14
  %48 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %hw1, align 4
  %add.ptr.i65 = getelementptr i8, ptr %49, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i65, i32 -1660944384) #14, !srcloc !421
  %50 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hw1, align 4
  %add.ptr6.i66 = getelementptr i8, ptr %51, i32 8
  %52 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i66) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.end36.if.end41_crit_edge
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_phy_hw_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @iounmap(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_release_selected_regions(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_set_mac_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_set_media_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_get_bus_info(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_mask(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_coherent_mask(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_xmit_frame(ptr noundef %skb, ptr noundef %netdev) #4 align 64 {
entry:
  %vhdr.i.i = alloca %struct.vlan_hdr, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1 = getelementptr i8, ptr %netdev, i32 3296
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i345 = sub i32 %1, %3
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %4 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %protocol.i, align 8
  %mac_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %6 = ptrtoint ptr %mac_len.i.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %mac_len.i.i, align 4
  %conv.i.i = zext i16 %7 to i32
  %8 = zext i16 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.229)
  switch i16 %5, label %entry.vlan_get_protocol.exit_crit_edge [
    i16 -30552, label %entry.if.then.i.i_crit_edge
    i16 -32512, label %entry.if.then.i.i_crit_edge534
  ]

entry.if.then.i.i_crit_edge534:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

entry.if.then.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

entry.vlan_get_protocol.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %vlan_get_protocol.exit

if.then.i.i:                                      ; preds = %entry.if.then.i.i_crit_edge, %entry.if.then.i.i_crit_edge534
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not.i.i = icmp eq i16 %7, 0
  br i1 %tobool.not.i.i, label %if.then.i.i.if.end26.i.i_crit_edge, label %if.then1.i.i

if.then.i.i.if.end26.i.i_crit_edge:               ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26.i.i

if.then1.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %7)
  %cmp.i.i = icmp ult i16 %7, 4
  br i1 %cmp.i.i, label %do.end.i.i, label %if.end25.i.i, !prof !456

do.end.i.i:                                       ; preds = %if.then1.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.46, i32 noundef 598, i32 noundef 9, ptr noundef null) #14
  br label %vlan_get_protocol.exit

if.end25.i.i:                                     ; preds = %if.then1.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add nsw i32 %conv.i.i, -4
  br label %if.end26.i.i

if.end26.i.i:                                     ; preds = %if.end25.i.i, %if.then.i.i.if.end26.i.i_crit_edge
  %vlan_depth.0.i.i = phi i32 [ %sub.i.i, %if.end25.i.i ], [ 14, %if.then.i.i.if.end26.i.i_crit_edge ]
  %9 = getelementptr inbounds %struct.vlan_hdr, ptr %vhdr.i.i, i32 0, i32 1
  %tobool2.not.i.i.i.i = icmp eq ptr %skb, null
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  br label %do.body27.i.i

do.body27.i.i:                                    ; preds = %do.body27.backedge.i.i, %if.end26.i.i
  %vlan_depth.1.i.i = phi i32 [ %vlan_depth.0.i.i, %if.end26.i.i ], [ %add.i.i, %do.body27.backedge.i.i ]
  %parse_depth.0.i.i = phi i32 [ 8, %if.end26.i.i ], [ %dec.i.i, %do.body27.backedge.i.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vhdr.i.i) #14
  %10 = ptrtoint ptr %vhdr.i.i to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 -1, ptr %vhdr.i.i, align 2, !annotation !460
  %11 = ptrtoint ptr %9 to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 -1, ptr %9, align 2, !annotation !460
  %12 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %len.i, align 4
  %14 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %data_len.i, align 8
  %16 = add i32 %vlan_depth.1.i.i, %15
  %sub.i1.i.i.i = sub i32 %13, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.i1.i.i.i)
  %cmp.i.i.i.i = icmp sgt i32 %sub.i1.i.i.i, 3
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.end.i.i.i.i, !prof !576

if.then.i.i.i.i:                                  ; preds = %do.body27.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %17 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %18, i32 %vlan_depth.1.i.i
  br label %skb_header_pointer.exit.i.i

if.end.i.i.i.i:                                   ; preds = %do.body27.i.i
  br i1 %tobool2.not.i.i.i.i, label %if.end.i.i.i.i.cleanup.thread.i.i_crit_edge, label %lor.lhs.false.i.i.i.i

if.end.i.i.i.i.cleanup.thread.i.i_crit_edge:      ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %vlan_depth.1.i.i, ptr noundef nonnull %vhdr.i.i, i32 noundef 4) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp3.i.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  %spec.select.i.i.i.i = select i1 %cmp3.i.i.i.i, ptr null, ptr %vhdr.i.i, !prof !456
  br label %skb_header_pointer.exit.i.i

skb_header_pointer.exit.i.i:                      ; preds = %lor.lhs.false.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i, %if.then.i.i.i.i ], [ %spec.select.i.i.i.i, %lor.lhs.false.i.i.i.i ]
  %tobool29.not.i.i = icmp eq ptr %retval.0.i.i.i.i, null
  %dec.i.i = add nsw i32 %parse_depth.0.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool30.not.i.i = icmp eq i32 %dec.i.i, 0
  %19 = select i1 %tobool29.not.i.i, i1 true, i1 %tobool30.not.i.i, !prof !456
  br i1 %19, label %skb_header_pointer.exit.i.i.cleanup.thread.i.i_crit_edge, label %do.cond42.i.i, !prof !456

skb_header_pointer.exit.i.i.cleanup.thread.i.i_crit_edge: ; preds = %skb_header_pointer.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i.i

cleanup.thread.i.i:                               ; preds = %skb_header_pointer.exit.i.i.cleanup.thread.i.i_crit_edge, %if.end.i.i.i.i.cleanup.thread.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vhdr.i.i) #14
  br label %vlan_get_protocol.exit

do.cond42.i.i:                                    ; preds = %skb_header_pointer.exit.i.i
  %h_vlan_encapsulated_proto.i.i = getelementptr inbounds %struct.vlan_hdr, ptr %retval.0.i.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %h_vlan_encapsulated_proto.i.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %h_vlan_encapsulated_proto.i.i, align 2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vhdr.i.i) #14
  %22 = zext i16 %21 to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.230)
  switch i16 %21, label %do.cond42.i.i.vlan_get_protocol.exit_crit_edge [
    i16 -30552, label %do.cond42.i.i.do.body27.backedge.i.i_crit_edge
    i16 -32512, label %do.cond42.i.i.do.body27.backedge.i.i_crit_edge535
  ]

do.cond42.i.i.do.body27.backedge.i.i_crit_edge535: ; preds = %do.cond42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body27.backedge.i.i

do.cond42.i.i.do.body27.backedge.i.i_crit_edge:   ; preds = %do.cond42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body27.backedge.i.i

do.cond42.i.i.vlan_get_protocol.exit_crit_edge:   ; preds = %do.cond42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %vlan_get_protocol.exit

do.body27.backedge.i.i:                           ; preds = %do.cond42.i.i.do.body27.backedge.i.i_crit_edge, %do.cond42.i.i.do.body27.backedge.i.i_crit_edge535
  %add.i.i = add nsw i32 %vlan_depth.1.i.i, 4
  br label %do.body27.i.i

vlan_get_protocol.exit:                           ; preds = %do.cond42.i.i.vlan_get_protocol.exit_crit_edge, %cleanup.thread.i.i, %do.end.i.i, %entry.vlan_get_protocol.exit_crit_edge
  %retval.2.i.i = phi i16 [ 0, %do.end.i.i ], [ %5, %entry.vlan_get_protocol.exit_crit_edge ], [ 0, %cleanup.thread.i.i ], [ %21, %do.cond42.i.i.vlan_get_protocol.exit_crit_edge ]
  %tx_ring4 = getelementptr i8, ptr %netdev, i32 2920
  %23 = ptrtoint ptr %tx_ring4 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %tx_ring4, align 8
  %25 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %len.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 60, i32 %26)
  %cmp.i.i.i = icmp ult i32 %26, 60
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %vlan_get_protocol.exit.if.end_crit_edge, !prof !456

vlan_get_protocol.exit.if.end_crit_edge:          ; preds = %vlan_get_protocol.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then.i.i.i:                                    ; preds = %vlan_get_protocol.exit
  %sub.i.i.i = sub nuw nsw i32 60, %26
  %call.i.i.i = call i32 @__skb_pad(ptr noundef %skb, i32 noundef %sub.i.i.i, i1 noundef zeroext true) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i.cleanup221_crit_edge

if.then.i.i.i.cleanup221_crit_edge:               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup221

if.end.i.i.i:                                     ; preds = %if.then.i.i.i
  %27 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.i.not.i.i.i.i = icmp eq i32 %28, 0
  br i1 %tobool.i.not.i.i.i.i, label %__skb_put.exit.i.i.i, label %do.body3.i.i.i.i, !prof !576

do.body3.i.i.i.i:                                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #14, !srcloc !603
  unreachable

__skb_put.exit.i.i.i:                             ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %tail.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %29 = ptrtoint ptr %tail.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %tail.i.i.i.i.i, align 8
  %add.ptr.i.i.i.i346 = getelementptr i8, ptr %30, i32 %sub.i.i.i
  store ptr %add.ptr.i.i.i.i346, ptr %tail.i.i.i.i.i, align 8
  %31 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %len.i, align 4
  %add.i.i.i.i = add i32 %32, %sub.i.i.i
  store i32 %add.i.i.i.i, ptr %len.i, align 4
  br label %if.end

if.end:                                           ; preds = %__skb_put.exit.i.i.i, %vlan_get_protocol.exit.if.end_crit_edge
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %33 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %end.i, align 4
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %gso_size, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %36)
  %tobool7.not = icmp eq i16 %36, 0
  br i1 %tobool7.not, label %lor.lhs.false, label %if.then8

if.then8:                                         ; preds = %if.end
  %conv = zext i16 %36 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %36)
  %cmp = icmp ult i16 %36, 1024
  %shl = shl nuw nsw i32 %conv, 2
  %cond = select i1 %cmp, i32 %shl, i32 4096
  %37 = call i32 @llvm.ctlz.i32(i32 %cond, i1 true) #14, !range !604
  %sub = xor i32 %37, 31
  %38 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool14.not = icmp eq i32 %39, 0
  br i1 %tobool14.not, label %if.then8.if.then49_crit_edge, label %land.lhs.true

if.then8.if.then49_crit_edge:                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then49

land.lhs.true:                                    ; preds = %if.then8
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %40 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %head.i.i, align 8
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %42 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %transport_header.i.i, align 2
  %conv.i.i347 = zext i16 %43 to i32
  %add.ptr.i.i = getelementptr i8, ptr %41, i32 %conv.i.i347
  %doff.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i, i32 0, i32 4
  %44 = ptrtoint ptr %doff.i.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %bf.load.i.i = load i16, ptr %doff.i.i, align 4
  %45 = lshr i16 %bf.load.i.i, 10
  %46 = and i16 %45, 60
  %mul.i.i = zext i16 %46 to i32
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %47 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %data.i, align 4
  %sub.ptr.rhs.cast.i = ptrtoint ptr %48 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %add = add i32 %sub.ptr.sub.i, %mul.i.i
  %conv15 = and i32 %add, 255
  call void @__sanitizer_cov_trace_cmp4(i32 %conv15, i32 %sub.i345)
  %cmp16 = icmp eq i32 %conv15, %sub.i345
  br i1 %cmp16, label %if.then18, label %land.lhs.true.if.then49_crit_edge

land.lhs.true.if.then49_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then49

if.then18:                                        ; preds = %land.lhs.true
  %mac_type = getelementptr i8, ptr %netdev, i32 3308
  %49 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %50)
  %cond236 = icmp eq i32 %50, 4
  br i1 %cond236, label %sw.bb, label %if.then18.if.then49_crit_edge

if.then18.if.then49_crit_edge:                    ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then49

sw.bb:                                            ; preds = %if.then18
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %51 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %tail.i, align 8
  %add.ptr = getelementptr i8, ptr %52, i32 -1
  %53 = ptrtoint ptr %add.ptr to i32
  %and = and i32 %53, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool20.not = icmp eq i32 %and, 0
  br i1 %tobool20.not, label %if.end22, label %sw.bb.if.then49_crit_edge

sw.bb.if.then49_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then49

if.end22:                                         ; preds = %sw.bb
  %54 = call i32 @llvm.umin.i32(i32 %39, i32 4)
  %call31 = call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %54) #14
  %tobool32.not = icmp eq ptr %call31, null
  br i1 %tobool32.not, label %do.body, label %if.end39

do.body:                                          ; preds = %if.end22
  %msg_enable = getelementptr i8, ptr %netdev, i32 4232
  %55 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %msg_enable, align 8
  %and34 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %do.body.cleanup42_crit_edge, label %if.then36

do.body.cleanup42_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup42

if.then36:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %netdev37 = getelementptr i8, ptr %netdev, i32 3288
  %57 = ptrtoint ptr %netdev37 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %netdev37, align 8
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %58, ptr noundef nonnull @.str.45) #17
  br label %cleanup42

if.end39:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  %59 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %len.i, align 4
  %61 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %data_len.i, align 8
  %sub.i350 = sub i32 %60, %62
  br label %if.then49

cleanup42:                                        ; preds = %if.then36, %do.body.cleanup42_crit_edge
  call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #14
  br label %cleanup221

lor.lhs.false:                                    ; preds = %if.end
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %63 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %63)
  %bf.load = load i16, ptr %ip_summed, align 8
  %64 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %64)
  %cmp47 = icmp eq i16 %64, 1536
  br i1 %cmp47, label %lor.lhs.false.if.then49_crit_edge, label %lor.lhs.false.if.end50_crit_edge

lor.lhs.false.if.end50_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

lor.lhs.false.if.then49_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then49

if.then49:                                        ; preds = %lor.lhs.false.if.then49_crit_edge, %if.end39, %sw.bb.if.then49_crit_edge, %if.then18.if.then49_crit_edge, %land.lhs.true.if.then49_crit_edge, %if.then8.if.then49_crit_edge
  %len.3466 = phi i32 [ %sub.i345, %lor.lhs.false.if.then49_crit_edge ], [ %sub.i345, %if.then8.if.then49_crit_edge ], [ %sub.i345, %land.lhs.true.if.then49_crit_edge ], [ %sub.i345, %if.then18.if.then49_crit_edge ], [ %sub.i345, %sw.bb.if.then49_crit_edge ], [ %sub.i350, %if.end39 ]
  %max_txd_pwr.0463 = phi i32 [ 12, %lor.lhs.false.if.then49_crit_edge ], [ %sub, %if.then8.if.then49_crit_edge ], [ %sub, %land.lhs.true.if.then49_crit_edge ], [ %sub, %if.then18.if.then49_crit_edge ], [ %sub, %sw.bb.if.then49_crit_edge ], [ %sub, %if.end39 ]
  %max_per_txd.0459 = phi i32 [ 4096, %lor.lhs.false.if.then49_crit_edge ], [ %cond, %if.then8.if.then49_crit_edge ], [ %cond, %land.lhs.true.if.then49_crit_edge ], [ %cond, %if.then18.if.then49_crit_edge ], [ %cond, %sw.bb.if.then49_crit_edge ], [ %cond, %if.end39 ]
  br label %if.end50

if.end50:                                         ; preds = %if.then49, %lor.lhs.false.if.end50_crit_edge
  %len.3465 = phi i32 [ %len.3466, %if.then49 ], [ %sub.i345, %lor.lhs.false.if.end50_crit_edge ]
  %max_txd_pwr.0462 = phi i32 [ %max_txd_pwr.0463, %if.then49 ], [ 12, %lor.lhs.false.if.end50_crit_edge ]
  %max_per_txd.0458 = phi i32 [ %max_per_txd.0459, %if.then49 ], [ 4096, %lor.lhs.false.if.end50_crit_edge ]
  %count.0 = phi i32 [ 2, %if.then49 ], [ 1, %lor.lhs.false.if.end50_crit_edge ]
  %65 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool53.not = icmp eq i32 %66, 0
  br i1 %tobool53.not, label %land.lhs.true54, label %if.end50.if.end61_crit_edge

if.end50.if.end61_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end61

land.lhs.true54:                                  ; preds = %if.end50
  %last_tx_tso = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 9
  %67 = ptrtoint ptr %last_tx_tso to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %last_tx_tso, align 4, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool55.not = icmp eq i8 %68, 0
  br i1 %tobool55.not, label %land.lhs.true54.if.end61_crit_edge, label %land.lhs.true57

land.lhs.true54.if.end61_crit_edge:               ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end61

land.lhs.true57:                                  ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #16
  %69 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %end.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %70, i32 0, i32 4
  %71 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %gso_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %72)
  %tobool.i.not = icmp eq i16 %72, 0
  %inc60 = zext i1 %tobool.i.not to i32
  %spec.select = add nuw nsw i32 %count.0, %inc60
  br label %if.end61

if.end61:                                         ; preds = %land.lhs.true57, %land.lhs.true54.if.end61_crit_edge, %if.end50.if.end61_crit_edge
  %count.1 = phi i32 [ %count.0, %if.end50.if.end61_crit_edge ], [ %count.0, %land.lhs.true54.if.end61_crit_edge ], [ %spec.select, %land.lhs.true57 ]
  %notmask = shl nsw i32 -1, %max_txd_pwr.0462
  %sub63 = xor i32 %notmask, -1
  %add64 = add i32 %len.3465, %sub63
  %shr = lshr i32 %add64, %max_txd_pwr.0462
  %add65 = add i32 %count.1, %shr
  %pcix_82544 = getelementptr i8, ptr %netdev, i32 2992
  %73 = ptrtoint ptr %pcix_82544 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %pcix_82544, align 8, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %74)
  %tobool66.not = icmp eq i8 %74, 0
  %not.tobool66.not = xor i1 %tobool66.not, true
  %inc68 = zext i1 %not.tobool66.not to i32
  %spec.select340 = add i32 %add65, %inc68
  %bus_type = getelementptr i8, ptr %netdev, i32 3352
  %75 = ptrtoint ptr %bus_type to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %bus_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %76)
  %cmp70 = icmp eq i32 %76, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2015, i32 %len.3465)
  %cmp72 = icmp ugt i32 %len.3465, 2015
  %77 = select i1 %cmp70, i1 %cmp72, i1 false
  br i1 %77, label %if.then76, label %if.end61.if.end78_crit_edge, !prof !456

if.end61.if.end78_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end78

if.then76:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #16
  %inc77 = add i32 %spec.select340, 1
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %if.end61.if.end78_crit_edge
  %count.3 = phi i32 [ %inc77, %if.then76 ], [ %spec.select340, %if.end61.if.end78_crit_edge ]
  %78 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %end.i, align 4
  %nr_frags80 = getelementptr inbounds %struct.skb_shared_info, ptr %79, i32 0, i32 2
  %80 = ptrtoint ptr %nr_frags80 to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %nr_frags80, align 2
  %conv81 = zext i8 %81 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %cmp82490.not = icmp eq i8 %81, 0
  br i1 %cmp82490.not, label %if.end78.for.end_crit_edge, label %if.end78.for.body_crit_edge

if.end78.for.body_crit_edge:                      ; preds = %if.end78
  br label %for.body

if.end78.for.end_crit_edge:                       ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end78.for.body_crit_edge
  %f.0492 = phi i32 [ %inc91, %for.body.for.body_crit_edge ], [ 0, %if.end78.for.body_crit_edge ]
  %count.4491 = phi i32 [ %add90, %for.body.for.body_crit_edge ], [ %count.3, %if.end78.for.body_crit_edge ]
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %79, i32 0, i32 12, i32 %f.0492, i32 1
  %82 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %bv_len.i, align 4
  %add88 = add i32 %83, %sub63
  %shr89 = lshr i32 %add88, %max_txd_pwr.0462
  %add90 = add i32 %shr89, %count.4491
  %inc91 = add nuw nsw i32 %f.0492, 1
  %exitcond.not = icmp eq i32 %inc91, %conv81
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end78.for.end_crit_edge
  %count.4.lcssa = phi i32 [ %count.3, %if.end78.for.end_crit_edge ], [ %add90, %for.body.for.end_crit_edge ]
  %conv81.op = add nuw nsw i32 %conv81, 2
  %spec.select341 = select i1 %tobool66.not, i32 2, i32 %conv81.op
  %add97 = add i32 %spec.select341, %count.4.lcssa
  %next_to_clean.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 5
  %84 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %next_to_clean.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !605
  %next_to_use.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 4
  %86 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %next_to_use.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %85, i32 %87)
  %cmp.i = icmp ugt i32 %85, %87
  br i1 %cmp.i, label %for.end.cond.end.i_crit_edge, label %cond.false.i

for.end.cond.end.i_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i

cond.false.i:                                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %count.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 3
  %88 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %count.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %for.end.cond.end.i_crit_edge
  %cond.i = phi i32 [ %89, %cond.false.i ], [ 0, %for.end.cond.end.i_crit_edge ]
  %90 = xor i32 %87, -1
  %add.i = add i32 %85, %90
  %sub10.i = add i32 %add.i, %cond.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub10.i, i32 %add97)
  %cmp11.not.i = icmp ult i32 %sub10.i, %add97
  br i1 %cmp11.not.i, label %e1000_maybe_stop_tx.exit, label %cond.end.i.if.end107_crit_edge, !prof !456

cond.end.i.if.end107_crit_edge:                   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end107

e1000_maybe_stop_tx.exit:                         ; preds = %cond.end.i
  %call.i = call fastcc i32 @__e1000_maybe_stop_tx(ptr noundef %netdev, i32 noundef %add97) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool99.not = icmp eq i32 %call.i, 0
  br i1 %tobool99.not, label %e1000_maybe_stop_tx.exit.if.end107_crit_edge, label %e1000_maybe_stop_tx.exit.cleanup221_crit_edge, !prof !576

e1000_maybe_stop_tx.exit.cleanup221_crit_edge:    ; preds = %e1000_maybe_stop_tx.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup221

e1000_maybe_stop_tx.exit.if.end107_crit_edge:     ; preds = %e1000_maybe_stop_tx.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end107

if.end107:                                        ; preds = %e1000_maybe_stop_tx.exit.if.end107_crit_edge, %cond.end.i.if.end107_crit_edge
  %mac_type108 = getelementptr i8, ptr %netdev, i32 3308
  %91 = ptrtoint ptr %mac_type108 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %mac_type108, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %92)
  %cmp109 = icmp eq i32 %92, 13
  br i1 %cmp109, label %land.rhs111, label %if.end107.if.end127_crit_edge

if.end107.if.end127_crit_edge:                    ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end127

land.rhs111:                                      ; preds = %if.end107
  %tx_fifo_size.i = getelementptr i8, ptr %netdev, i32 2980
  %93 = ptrtoint ptr %tx_fifo_size.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %tx_fifo_size.i, align 4
  %tx_fifo_head.i = getelementptr i8, ptr %netdev, i32 2972
  %95 = ptrtoint ptr %tx_fifo_head.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %tx_fifo_head.i, align 4
  %97 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %len.i, align 4
  %add1.i = add i32 %98, 31
  %and.i = and i32 %add1.i, -16
  %link_duplex.i = getelementptr i8, ptr %netdev, i32 2842
  %99 = ptrtoint ptr %link_duplex.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %link_duplex.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %100)
  %cmp.not.i = icmp eq i16 %100, 1
  br i1 %cmp.not.i, label %if.end.i355, label %land.rhs111.no_fifo_stall_required.i_crit_edge

land.rhs111.no_fifo_stall_required.i_crit_edge:   ; preds = %land.rhs111
  call void @__sanitizer_cov_trace_pc() #16
  br label %no_fifo_stall_required.i

if.end.i355:                                      ; preds = %land.rhs111
  %tx_fifo_stall.i = getelementptr i8, ptr %netdev, i32 2988
  %call.i.i.i354 = call zeroext i1 @__kasan_check_read(ptr noundef %tx_fifo_stall.i, i32 noundef 4) #14
  %101 = ptrtoint ptr %tx_fifo_stall.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile i32, ptr %tx_fifo_stall.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %102)
  %tobool.not.i = icmp eq i32 %102, 0
  br i1 %tobool.not.i, label %if.end4.i, label %if.end.i355.if.then121_crit_edge

if.end.i355.if.then121_crit_edge:                 ; preds = %if.end.i355
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then121

if.end4.i:                                        ; preds = %if.end.i355
  %sub.i356 = add i32 %94, 992
  %add5.i = sub i32 %sub.i356, %96
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i, i32 %add5.i)
  %cmp6.not.i = icmp ult i32 %and.i, %add5.i
  br i1 %cmp6.not.i, label %if.end4.i.no_fifo_stall_required.i_crit_edge, label %if.then8.i

if.end4.i.no_fifo_stall_required.i_crit_edge:     ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %no_fifo_stall_required.i

if.then8.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i34.i = call zeroext i1 @__kasan_check_write(ptr noundef %tx_fifo_stall.i, i32 noundef 4) #14
  %103 = ptrtoint ptr %tx_fifo_stall.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store volatile i32 1, ptr %tx_fifo_stall.i, align 4
  br label %if.then121

no_fifo_stall_required.i:                         ; preds = %if.end4.i.no_fifo_stall_required.i_crit_edge, %land.rhs111.no_fifo_stall_required.i_crit_edge
  %104 = ptrtoint ptr %tx_fifo_head.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %tx_fifo_head.i, align 4
  %add12.i = add i32 %105, %and.i
  store i32 %add12.i, ptr %tx_fifo_head.i, align 4
  %106 = ptrtoint ptr %tx_fifo_size.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %tx_fifo_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add12.i, i32 %107)
  %cmp15.not.i = icmp ult i32 %add12.i, %107
  br i1 %cmp15.not.i, label %no_fifo_stall_required.i.if.end127_crit_edge, label %if.then17.i

no_fifo_stall_required.i.if.end127_crit_edge:     ; preds = %no_fifo_stall_required.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end127

if.then17.i:                                      ; preds = %no_fifo_stall_required.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub20.i = sub i32 %add12.i, %107
  %108 = ptrtoint ptr %tx_fifo_head.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %sub20.i, ptr %tx_fifo_head.i, align 4
  br label %if.end127

if.then121:                                       ; preds = %if.then8.i, %if.end.i355.if.then121_crit_edge
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 103
  %109 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr inbounds %struct.netdev_queue, ptr %110, i32 0, i32 13
  call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  %flags = getelementptr i8, ptr %netdev, i32 4240
  %111 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %flags, align 4
  %113 = and i32 %112, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %113)
  %tobool123.not = icmp eq i32 %113, 0
  br i1 %tobool123.not, label %if.then124, label %if.then121.cleanup221_crit_edge

if.then121.cleanup221_crit_edge:                  ; preds = %if.then121
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup221

if.then124:                                       ; preds = %if.then121
  call void @__sanitizer_cov_trace_pc() #16
  %fifo_stall_task = getelementptr i8, ptr %netdev, i32 4404
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %114 = load ptr, ptr @system_wq, align 4
  %call.i.i = call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %114, ptr noundef %fifo_stall_task, i32 noundef 1) #14
  br label %cleanup221

if.end127:                                        ; preds = %if.then17.i, %no_fifo_stall_required.i.if.end127_crit_edge, %if.end107.if.end127_crit_edge
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %115 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %115, i32 4)
  %bf.load128 = load i32, ptr %vlan_present, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load128)
  %tobool131.not = icmp sgt i32 %bf.load128, -1
  br i1 %tobool131.not, label %if.end127.if.end136_crit_edge, label %if.then132

if.end127.if.end136_crit_edge:                    ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end136

if.then132:                                       ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #16
  %vlan_tci = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %116 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %116)
  %117 = load i16, ptr %vlan_tci, align 2
  %conv133 = zext i16 %117 to i32
  %shl134 = shl nuw i32 %conv133, 16
  %or135 = or i32 %shl134, 2
  br label %if.end136

if.end136:                                        ; preds = %if.then132, %if.end127.if.end136_crit_edge
  %tx_flags.0 = phi i32 [ %or135, %if.then132 ], [ 0, %if.end127.if.end136_crit_edge ]
  %118 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %next_to_use.i, align 4
  %120 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %end.i, align 4
  %gso_size.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %121, i32 0, i32 4
  %122 = ptrtoint ptr %gso_size.i.i to i32
  call void @__asan_load2_noabort(i32 %122)
  %123 = load i16, ptr %gso_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %123)
  %tobool.i.not.i = icmp eq i16 %123, 0
  br i1 %tobool.i.not.i, label %if.else, label %if.then.i

if.then.i:                                        ; preds = %if.end136
  %cloned.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %124 = ptrtoint ptr %cloned.i.i.i to i32
  call void @__asan_load1_noabort(i32 %124)
  %bf.load.i.i.i = load i8, ptr %cloned.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i.i)
  %tobool.not.i.i.i = icmp sgt i8 %bf.load.i.i.i, -1
  br i1 %tobool.not.i.i.i, label %if.then.i.if.end.i366_crit_edge, label %skb_header_cloned.exit.i.i

if.then.i.if.end.i366_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i366

skb_header_cloned.exit.i.i:                       ; preds = %if.then.i
  %dataref1.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %121, i32 0, i32 10
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i.i, i32 noundef 4) #14
  %125 = ptrtoint ptr %dataref1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile i32, ptr %dataref1.i.i.i, align 4
  %and.i.i.i = and i32 %126, 65535
  %shr.i.i.i = ashr i32 %126, 16
  %sub.i.i.i358 = sub nsw i32 %and.i.i.i, %shr.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i.i358)
  %cmp.i.not.i.i = icmp eq i32 %sub.i.i.i358, 1
  br i1 %cmp.i.not.i.i, label %skb_header_cloned.exit.i.i.if.end.i366_crit_edge, label %skb_cow_head.exit.i

skb_header_cloned.exit.i.i.if.end.i366_crit_edge: ; preds = %skb_header_cloned.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i366

skb_cow_head.exit.i:                              ; preds = %skb_header_cloned.exit.i.i
  %call4.i.i.i = call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %cmp.i359 = icmp slt i32 %call4.i.i.i, 0
  br i1 %cmp.i359, label %if.then140, label %skb_cow_head.exit.i.if.end.i366_crit_edge

skb_cow_head.exit.i.if.end.i366_crit_edge:        ; preds = %skb_cow_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i366

if.end.i366:                                      ; preds = %skb_cow_head.exit.i.if.end.i366_crit_edge, %skb_header_cloned.exit.i.i.if.end.i366_crit_edge, %if.then.i.if.end.i366_crit_edge
  %head.i.i.i360 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %127 = ptrtoint ptr %head.i.i.i360 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %head.i.i.i360, align 8
  %transport_header.i.i.i361 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %129 = ptrtoint ptr %transport_header.i.i.i361 to i32
  call void @__asan_load2_noabort(i32 %129)
  %130 = load i16, ptr %transport_header.i.i.i361, align 2
  %conv.i.i.i362 = zext i16 %130 to i32
  %add.ptr.i.i.i363 = getelementptr i8, ptr %128, i32 %conv.i.i.i362
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %131 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %data.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %add.ptr.i.i.i363 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %132 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %doff.i.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i.i363, i32 0, i32 4
  %133 = ptrtoint ptr %doff.i.i.i to i32
  call void @__asan_load2_noabort(i32 %133)
  %bf.load.i.i1.i = load i16, ptr %doff.i.i.i, align 4
  %134 = lshr i16 %bf.load.i.i1.i, 10
  %135 = and i16 %134, 60
  %mul.i.i.i = zext i16 %135 to i32
  %add.i364 = add i32 %sub.ptr.sub.i.i, %mul.i.i.i
  %conv.i = trunc i32 %add.i364 to i8
  %136 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %end.i, align 4
  %gso_size.i365 = getelementptr inbounds %struct.skb_shared_info, ptr %137, i32 0, i32 4
  %138 = ptrtoint ptr %gso_size.i365 to i32
  call void @__asan_load2_noabort(i32 %138)
  %139 = load i16, ptr %gso_size.i365, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %retval.2.i.i)
  %cmp7.i = icmp eq i16 %retval.2.i.i, 2048
  br i1 %cmp7.i, label %if.then9.i, label %if.else.i

if.then9.i:                                       ; preds = %if.end.i366
  call void @__sanitizer_cov_trace_pc() #16
  %network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %140 = ptrtoint ptr %network_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %140)
  %141 = load i16, ptr %network_header.i.i.i, align 4
  %conv.i.i3.i = zext i16 %141 to i32
  %add.ptr.i.i4.i = getelementptr i8, ptr %128, i32 %conv.i.i3.i
  %tot_len.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i4.i, i32 0, i32 2
  %142 = ptrtoint ptr %tot_len.i to i32
  call void @__asan_store2_noabort(i32 %142)
  store i16 0, ptr %tot_len.i, align 2
  %check.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i4.i, i32 0, i32 7
  %143 = ptrtoint ptr %check.i to i32
  call void @__asan_store2_noabort(i32 %143)
  store i16 0, ptr %check.i, align 2
  %saddr.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i4.i, i32 0, i32 8
  %144 = ptrtoint ptr %saddr.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %saddr.i, align 4
  %daddr.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i4.i, i32 0, i32 9
  %146 = ptrtoint ptr %daddr.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %daddr.i, align 4
  %148 = call i32 asm "adds\09$0, $1, $2\09@ csum_tcpudp_nofold0\09\0A\09adcs\09$0, $0, $3\09\09\09\09\0A\09adc\09$0, $0, #0", "=&r,r,r,r,~{cc}"(i32 %147, i32 %145, i32 6) #20, !srcloc !606
  %149 = call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %148) #20, !srcloc !607
  %neg.i.i.i = xor i32 %149, -1
  %shr.i.i5.i = lshr i32 %neg.i.i.i, 16
  %conv.i.i6.i = trunc i32 %shr.i.i5.i to i16
  %neg.i = xor i16 %conv.i.i6.i, -1
  %150 = ptrtoint ptr %head.i.i.i360 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %head.i.i.i360, align 8
  %152 = ptrtoint ptr %transport_header.i.i.i361 to i32
  call void @__asan_load2_noabort(i32 %152)
  %153 = load i16, ptr %transport_header.i.i.i361, align 2
  %conv.i.i9.i = zext i16 %153 to i32
  %add.ptr.i.i10.i = getelementptr i8, ptr %151, i32 %conv.i.i9.i
  %check15.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i10.i, i32 0, i32 6
  %154 = ptrtoint ptr %check15.i to i32
  call void @__asan_store2_noabort(i32 %154)
  store i16 %neg.i, ptr %check15.i, align 4
  %155 = load ptr, ptr %head.i.i.i360, align 8
  %156 = load i16, ptr %transport_header.i.i.i361, align 2
  %conv.i.i13.i = zext i16 %156 to i32
  %add.ptr.i.i14.i = getelementptr i8, ptr %155, i32 %conv.i.i13.i
  %157 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %data.i.i, align 4
  %sub.ptr.lhs.cast.i16.i = ptrtoint ptr %add.ptr.i.i14.i to i32
  %sub.ptr.rhs.cast.i17.i = ptrtoint ptr %158 to i32
  %sub.ptr.sub.i18.i = sub i32 %sub.ptr.lhs.cast.i16.i, %sub.ptr.rhs.cast.i17.i
  %159 = trunc i32 %sub.ptr.sub.i18.i to i16
  %conv17.i = add i16 %159, -1
  br label %if.then149

if.else.i:                                        ; preds = %if.end.i366
  %gso_type.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %137, i32 0, i32 8
  %160 = ptrtoint ptr %gso_type.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %gso_type.i.i, align 8
  %and.i.i = and i32 %161, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i20.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i20.not.i, label %if.else.i.if.then149_crit_edge, label %if.then19.i

if.else.i.if.then149_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then149

if.then19.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %network_header.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %162 = ptrtoint ptr %network_header.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %162)
  %163 = load i16, ptr %network_header.i.i.i.i, align 4
  %conv.i.i.i22.i = zext i16 %163 to i32
  %add.ptr.i.i.i23.i = getelementptr i8, ptr %128, i32 %conv.i.i.i22.i
  %payload_len.i.i = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i.i23.i, i32 0, i32 2
  %164 = ptrtoint ptr %payload_len.i.i to i32
  call void @__asan_store2_noabort(i32 %164)
  store i16 0, ptr %payload_len.i.i, align 4
  %saddr.i.i = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i.i23.i, i32 0, i32 5
  %daddr.i.i = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i.i23.i, i32 0, i32 6
  %call.i.i.i.i367 = call i32 @__csum_ipv6_magic(ptr noundef %saddr.i.i, ptr noundef %daddr.i.i, i32 noundef 0, i32 noundef 6, i32 noundef 0) #14
  %165 = call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %call.i.i.i.i367) #20, !srcloc !607
  %neg.i.i.i.i.i = xor i32 %165, -1
  %shr.i.i.i.i.i = lshr i32 %neg.i.i.i.i.i, 16
  %conv.i.i.i.i.i = trunc i32 %shr.i.i.i.i.i to i16
  %neg.i.i = xor i16 %conv.i.i.i.i.i, -1
  %check.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i.i363, i32 0, i32 6
  %166 = ptrtoint ptr %check.i.i to i32
  call void @__asan_store2_noabort(i32 %166)
  store i16 %neg.i.i, ptr %check.i.i, align 4
  br label %if.then149

if.then140:                                       ; preds = %skb_cow_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #14
  br label %cleanup221

if.then149:                                       ; preds = %if.then19.i, %if.else.i.if.then149_crit_edge, %if.then9.i
  %cmd_length.0.i = phi i32 [ 654311424, %if.then9.i ], [ 620756992, %if.then19.i ], [ 620756992, %if.else.i.if.then149_crit_edge ]
  %ipcse.0.i = phi i16 [ %conv17.i, %if.then9.i ], [ 0, %if.then19.i ], [ 0, %if.else.i.if.then149_crit_edge ]
  %167 = ptrtoint ptr %head.i.i.i360 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %head.i.i.i360, align 8
  %network_header.i.i26.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %169 = ptrtoint ptr %network_header.i.i26.i to i32
  call void @__asan_load2_noabort(i32 %169)
  %170 = load i16, ptr %network_header.i.i26.i, align 4
  %conv.i.i27.i = zext i16 %170 to i32
  %add.ptr.i.i28.i = getelementptr i8, ptr %168, i32 %conv.i.i27.i
  %171 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %data.i.i, align 4
  %sub.ptr.lhs.cast.i30.i = ptrtoint ptr %add.ptr.i.i28.i to i32
  %sub.ptr.rhs.cast.i31.i = ptrtoint ptr %172 to i32
  %sub.ptr.sub.i32.i = sub i32 %sub.ptr.lhs.cast.i30.i, %sub.ptr.rhs.cast.i31.i
  %conv23.i = trunc i32 %sub.ptr.sub.i32.i to i8
  %check25.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i28.i, i32 0, i32 7
  %sub.ptr.lhs.cast.i368 = ptrtoint ptr %check25.i to i32
  %sub.ptr.sub.i369 = sub i32 %sub.ptr.lhs.cast.i368, %sub.ptr.rhs.cast.i31.i
  %conv26.i = trunc i32 %sub.ptr.sub.i369 to i8
  %173 = ptrtoint ptr %transport_header.i.i.i361 to i32
  call void @__asan_load2_noabort(i32 %173)
  %174 = load i16, ptr %transport_header.i.i.i361, align 2
  %conv.i.i39.i = zext i16 %174 to i32
  %add.ptr.i.i40.i = getelementptr i8, ptr %168, i32 %conv.i.i39.i
  %sub.ptr.lhs.cast.i42.i = ptrtoint ptr %add.ptr.i.i40.i to i32
  %sub.ptr.sub.i44.i = sub i32 %sub.ptr.lhs.cast.i42.i, %sub.ptr.rhs.cast.i31.i
  %conv28.i = trunc i32 %sub.ptr.sub.i44.i to i8
  %check30.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i40.i, i32 0, i32 6
  %sub.ptr.lhs.cast32.i = ptrtoint ptr %check30.i to i32
  %sub.ptr.sub34.i = sub i32 %sub.ptr.lhs.cast32.i, %sub.ptr.rhs.cast.i31.i
  %conv35.i = trunc i32 %sub.ptr.sub34.i to i8
  %175 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %len.i, align 4
  %conv36.i = and i32 %add.i364, 255
  %sub37.i = sub i32 %176, %conv36.i
  %or38.i = or i32 %sub37.i, %cmd_length.0.i
  %177 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %next_to_use.i, align 4
  %179 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %24, align 4
  %arrayidx.i = getelementptr %struct.e1000_context_desc, ptr %180, i32 %178
  %buffer_info39.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 6
  %181 = ptrtoint ptr %buffer_info39.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %buffer_info39.i, align 4
  %183 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %183)
  store i8 %conv23.i, ptr %arrayidx.i, align 4
  %ipcso43.i = getelementptr inbounds %struct.anon.158, ptr %arrayidx.i, i32 0, i32 1
  %184 = ptrtoint ptr %ipcso43.i to i32
  call void @__asan_store1_noabort(i32 %184)
  store i8 %conv26.i, ptr %ipcso43.i, align 1
  %185 = call i16 @llvm.bswap.i16(i16 %ipcse.0.i) #14
  %ipcse45.i = getelementptr inbounds %struct.anon.158, ptr %arrayidx.i, i32 0, i32 2
  %186 = ptrtoint ptr %ipcse45.i to i32
  call void @__asan_store2_noabort(i32 %186)
  store i16 %185, ptr %ipcse45.i, align 2
  %upper_setup.i = getelementptr %struct.e1000_context_desc, ptr %180, i32 %178, i32 1
  %187 = ptrtoint ptr %upper_setup.i to i32
  call void @__asan_store1_noabort(i32 %187)
  store i8 %conv28.i, ptr %upper_setup.i, align 4
  %tucso48.i = getelementptr inbounds %struct.anon.160, ptr %upper_setup.i, i32 0, i32 1
  %188 = ptrtoint ptr %tucso48.i to i32
  call void @__asan_store1_noabort(i32 %188)
  store i8 %conv35.i, ptr %tucso48.i, align 1
  %tucse50.i = getelementptr inbounds %struct.anon.160, ptr %upper_setup.i, i32 0, i32 2
  %189 = ptrtoint ptr %tucse50.i to i32
  call void @__asan_store2_noabort(i32 %189)
  store i16 0, ptr %tucse50.i, align 2
  %190 = call i16 @llvm.bswap.i16(i16 %139) #14
  %tcp_seg_setup.i = getelementptr %struct.e1000_context_desc, ptr %180, i32 %178, i32 3
  %mss51.i = getelementptr inbounds %struct.anon.162, ptr %tcp_seg_setup.i, i32 0, i32 2
  %191 = ptrtoint ptr %mss51.i to i32
  call void @__asan_store2_noabort(i32 %191)
  store i16 %190, ptr %mss51.i, align 2
  %hdr_len53.i = getelementptr inbounds %struct.anon.162, ptr %tcp_seg_setup.i, i32 0, i32 1
  %192 = ptrtoint ptr %hdr_len53.i to i32
  call void @__asan_store1_noabort(i32 %192)
  store i8 %conv.i, ptr %hdr_len53.i, align 1
  %193 = call i32 @llvm.bswap.i32(i32 %or38.i) #14
  %cmd_and_length.i = getelementptr %struct.e1000_context_desc, ptr %180, i32 %178, i32 2
  %194 = ptrtoint ptr %cmd_and_length.i to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 %193, ptr %cmd_and_length.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %195 = load volatile i32, ptr @jiffies, align 128
  %time_stamp.i = getelementptr %struct.e1000_tx_buffer, ptr %182, i32 %178, i32 2
  %196 = ptrtoint ptr %time_stamp.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store i32 %195, ptr %time_stamp.i, align 4
  %conv54.i = trunc i32 %178 to i16
  %next_to_watch.i = getelementptr %struct.e1000_tx_buffer, ptr %182, i32 %178, i32 4
  %197 = ptrtoint ptr %next_to_watch.i to i32
  call void @__asan_store2_noabort(i32 %197)
  store i16 %conv54.i, ptr %next_to_watch.i, align 2
  %inc.i = add i32 %178, 1
  %count.i372 = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 3
  %198 = ptrtoint ptr %count.i372 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %count.i372, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %199)
  %cmp55.i = icmp eq i32 %inc.i, %199
  %spec.store.select.i = select i1 %cmp55.i, i32 0, i32 %inc.i
  %200 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %spec.store.select.i, ptr %next_to_use.i, align 4
  %201 = ptrtoint ptr %mac_type108 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %mac_type108, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %202)
  %cmp151.not = icmp eq i32 %202, 4
  br i1 %cmp151.not, label %if.then149.if.end173_crit_edge, label %if.then159, !prof !456

if.then149.if.end173_crit_edge:                   ; preds = %if.then149
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end173

if.then159:                                       ; preds = %if.then149
  call void @__sanitizer_cov_trace_pc() #16
  %last_tx_tso160 = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 9
  %203 = ptrtoint ptr %last_tx_tso160 to i32
  call void @__asan_store1_noabort(i32 %203)
  store i8 1, ptr %last_tx_tso160, align 4
  br label %if.end173

if.else:                                          ; preds = %if.end136
  call void @__sanitizer_cov_trace_pc() #16
  %call163 = call fastcc zeroext i1 @e1000_tx_csum(ptr noundef %add.ptr.i, ptr noundef %24, ptr noundef %skb, i16 noundef zeroext %retval.2.i.i)
  %or171 = zext i1 %call163 to i32
  br label %if.end173

if.end173:                                        ; preds = %if.else, %if.then159, %if.then149.if.end173_crit_edge
  %or171.sink = phi i32 [ %or171, %if.else ], [ 4, %if.then159 ], [ 4, %if.then149.if.end173_crit_edge ]
  %spec.select342 = or i32 %tx_flags.0, %or171.sink
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %retval.2.i.i)
  %cmp175 = icmp eq i16 %retval.2.i.i, 2048
  %or178 = or i32 %spec.select342, 8
  %spec.select343 = select i1 %cmp175, i32 %or178, i32 %spec.select342
  %no_fcs = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %204 = ptrtoint ptr %no_fcs to i32
  call void @__asan_load2_noabort(i32 %204)
  %bf.load180 = load i16, ptr %no_fcs, align 8
  %205 = and i16 %bf.load180, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %205)
  %tobool184.not = icmp eq i16 %205, 0
  br i1 %tobool184.not, label %if.end173.if.end193_crit_edge, label %if.then191, !prof !576

if.end173.if.end193_crit_edge:                    ; preds = %if.end173
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end193

if.then191:                                       ; preds = %if.end173
  call void @__sanitizer_cov_trace_pc() #16
  %or192 = or i32 %spec.select343, 16
  br label %if.end193

if.end193:                                        ; preds = %if.then191, %if.end173.if.end193_crit_edge
  %tx_flags.3 = phi i32 [ %or192, %if.then191 ], [ %spec.select343, %if.end173.if.end193_crit_edge ]
  %pdev2.i = getelementptr i8, ptr %netdev, i32 3292
  %206 = ptrtoint ptr %pdev2.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %pdev2.i, align 4
  %208 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %len.i, align 4
  %210 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %data_len.i, align 8
  %sub.i.i373 = sub i32 %209, %211
  %212 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %next_to_use.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i373)
  %tobool.not381.i = icmp eq i32 %sub.i.i373, 0
  br i1 %tobool.not381.i, label %if.end193.for.cond.preheader.i_crit_edge, label %while.body.lr.ph.i

if.end193.for.cond.preheader.i_crit_edge:         ; preds = %if.end193
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader.i

while.body.lr.ph.i:                               ; preds = %if.end193
  %buffer_info3.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 6
  %last_tx_tso.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 9
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %36)
  %tobool9.not.i = icmp ne i16 %36, 0
  %or.cond.i = and i1 %tobool9.not.i, %cmp82490.not
  %data.i376 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %207, i32 0, i32 44
  %init_name.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %207, i32 0, i32 44, i32 3
  %count65.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 3
  br label %while.body.i

for.cond.preheader.i:                             ; preds = %if.end59.i.for.cond.preheader.i_crit_edge, %if.end193.for.cond.preheader.i_crit_edge
  %count.0.lcssa.i = phi i32 [ 0, %if.end193.for.cond.preheader.i_crit_edge ], [ %inc.i398, %if.end59.i.for.cond.preheader.i_crit_edge ]
  %i.0.lcssa.i = phi i32 [ %213, %if.end193.for.cond.preheader.i_crit_edge ], [ %i.0385.i, %if.end59.i.for.cond.preheader.i_crit_edge ]
  br i1 %cmp82490.not, label %for.cond.preheader.i.e1000_tx_map.exit_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.e1000_tx_map.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_tx_map.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %count86.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 3
  %buffer_info97.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 6
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %36)
  %tobool106.not.i = icmp ne i16 %36, 0
  %sub108.i = add nsw i32 %conv81, -1
  %dev155.i = getelementptr inbounds %struct.pci_dev, ptr %207, i32 0, i32 44
  br label %for.body.i

while.body.i:                                     ; preds = %while.body.i.backedge, %while.body.lr.ph.i
  %i.0385.i = phi i32 [ %213, %while.body.lr.ph.i ], [ %i.0385.i.be, %while.body.i.backedge ]
  %count.0384.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc.i398, %while.body.i.backedge ]
  %offset.0383.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %add.i397, %while.body.i.backedge ]
  %len.0382.i = phi i32 [ %sub.i.i373, %while.body.lr.ph.i ], [ %sub61.i, %while.body.i.backedge ]
  %214 = ptrtoint ptr %buffer_info3.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %buffer_info3.i, align 4
  %216 = call i32 @llvm.umin.i32(i32 %len.0382.i, i32 %max_per_txd.0458) #14
  %217 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %218)
  %tobool4.not.i = icmp eq i32 %218, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i, label %while.body.i.if.end.i382_crit_edge

while.body.i.if.end.i382_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i382

land.lhs.true.i:                                  ; preds = %while.body.i
  %219 = ptrtoint ptr %last_tx_tso.i to i32
  call void @__asan_load1_noabort(i32 %219)
  %220 = load i8, ptr %last_tx_tso.i, align 4, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %220)
  %tobool5.not.i = icmp eq i8 %220, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i.if.end.i382_crit_edge, label %land.lhs.true6.i

land.lhs.true.i.if.end.i382_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i382

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i
  %221 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %end.i, align 4
  %gso_size.i.i378 = getelementptr inbounds %struct.skb_shared_info, ptr %222, i32 0, i32 4
  %223 = ptrtoint ptr %gso_size.i.i378 to i32
  call void @__asan_load2_noabort(i32 %223)
  %224 = load i16, ptr %gso_size.i.i378, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %224)
  %tobool.i.not.i379 = icmp eq i16 %224, 0
  br i1 %tobool.i.not.i379, label %if.then.i381, label %land.lhs.true6.i.if.end.i382_crit_edge

land.lhs.true6.i.if.end.i382_crit_edge:           ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i382

if.then.i381:                                     ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #16
  %225 = ptrtoint ptr %last_tx_tso.i to i32
  call void @__asan_store1_noabort(i32 %225)
  store i8 0, ptr %last_tx_tso.i, align 4
  %sub.i380 = add i32 %216, -4
  br label %if.end.i382

if.end.i382:                                      ; preds = %if.then.i381, %land.lhs.true6.i.if.end.i382_crit_edge, %land.lhs.true.i.if.end.i382_crit_edge, %while.body.i.if.end.i382_crit_edge
  %size.0.i = phi i32 [ %216, %while.body.i.if.end.i382_crit_edge ], [ %216, %land.lhs.true6.i.if.end.i382_crit_edge ], [ %sub.i380, %if.then.i381 ], [ %216, %land.lhs.true.i.if.end.i382_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %size.0.i, i32 %len.0382.i)
  %cmp13.i = icmp eq i32 %size.0.i, %len.0382.i
  %or.cond343.i = select i1 %or.cond.i, i1 %cmp13.i, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %size.0.i)
  %cmp14.i = icmp ugt i32 %size.0.i, 8
  %or.cond349.i = select i1 %or.cond343.i, i1 %cmp14.i, i1 false
  br i1 %or.cond349.i, label %if.then17.i383, label %if.end.i382.if.end19.i_crit_edge, !prof !608

if.end.i382.if.end19.i_crit_edge:                 ; preds = %if.end.i382
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

if.then17.i383:                                   ; preds = %if.end.i382
  call void @__sanitizer_cov_trace_pc() #16
  %sub18.i = add i32 %len.0382.i, -4
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then17.i383, %if.end.i382.if.end19.i_crit_edge
  %size.1.i = phi i32 [ %sub18.i, %if.then17.i383 ], [ %size.0.i, %if.end.i382.if.end19.i_crit_edge ]
  %226 = ptrtoint ptr %bus_type to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %bus_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %227)
  %cmp20.i = icmp eq i32 %227, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2015, i32 %size.1.i)
  %cmp22.i = icmp ugt i32 %size.1.i, 2015
  %or.cond344.i = select i1 %cmp20.i, i1 %cmp22.i, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.0384.i)
  %cmp24.i = icmp eq i32 %count.0384.i, 0
  %or.cond350.i = select i1 %or.cond344.i, i1 %cmp24.i, i1 false
  br i1 %or.cond350.i, label %if.then32.i, label %if.end19.i.if.end33.i_crit_edge, !prof !608

if.end19.i.if.end33.i_crit_edge:                  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33.i

if.then32.i:                                      ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33.i

if.end33.i:                                       ; preds = %if.then32.i, %if.end19.i.if.end33.i_crit_edge
  %size.2.i = phi i32 [ 2015, %if.then32.i ], [ %size.1.i, %if.end19.i.if.end33.i_crit_edge ]
  %228 = ptrtoint ptr %pcix_82544 to i32
  call void @__asan_load1_noabort(i32 %228)
  %229 = load i8, ptr %pcix_82544, align 8, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %229)
  %tobool34.not.i = icmp eq i8 %229, 0
  br i1 %tobool34.not.i, label %if.end33.i.if.end50.i_crit_edge, label %land.lhs.true35.i

if.end33.i.if.end50.i_crit_edge:                  ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.i

land.lhs.true35.i:                                ; preds = %if.end33.i
  %230 = ptrtoint ptr %data.i376 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %data.i376, align 4
  %add.ptr.i384 = getelementptr i8, ptr %231, i32 -1
  %add.ptr36.i = getelementptr i8, ptr %add.ptr.i384, i32 %offset.0383.i
  %add.ptr37.i = getelementptr i8, ptr %add.ptr36.i, i32 %size.2.i
  %232 = ptrtoint ptr %add.ptr37.i to i32
  %and.i385 = and i32 %232, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i385)
  %tobool38.not.i = icmp eq i32 %and.i385, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %size.2.i)
  %cmp40.i = icmp ugt i32 %size.2.i, 4
  %spec.select.i = select i1 %tobool38.not.i, i1 %cmp40.i, i1 false
  br i1 %spec.select.i, label %if.then48.i, label %land.lhs.true35.i.if.end50.i_crit_edge, !prof !456

land.lhs.true35.i.if.end50.i_crit_edge:           ; preds = %land.lhs.true35.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.i

if.then48.i:                                      ; preds = %land.lhs.true35.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub49.i = add i32 %size.2.i, -4
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.then48.i, %land.lhs.true35.i.if.end50.i_crit_edge, %if.end33.i.if.end50.i_crit_edge
  %size.3.i = phi i32 [ %sub49.i, %if.then48.i ], [ %size.2.i, %land.lhs.true35.i.if.end50.i_crit_edge ], [ %size.2.i, %if.end33.i.if.end50.i_crit_edge ]
  %conv.i386 = trunc i32 %size.3.i to i16
  %length.i = getelementptr %struct.e1000_tx_buffer, ptr %215, i32 %i.0385.i, i32 3
  %233 = ptrtoint ptr %length.i to i32
  call void @__asan_store2_noabort(i32 %233)
  store i16 %conv.i386, ptr %length.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %234 = load volatile i32, ptr @jiffies, align 128
  %time_stamp.i387 = getelementptr %struct.e1000_tx_buffer, ptr %215, i32 %i.0385.i, i32 2
  %235 = ptrtoint ptr %time_stamp.i387 to i32
  call void @__asan_store4_noabort(i32 %235)
  store i32 %234, ptr %time_stamp.i387, align 4
  %mapped_as_page.i = getelementptr %struct.e1000_tx_buffer, ptr %215, i32 %i.0385.i, i32 5
  %236 = ptrtoint ptr %mapped_as_page.i to i32
  call void @__asan_store1_noabort(i32 %236)
  store i8 0, ptr %mapped_as_page.i, align 4
  %237 = ptrtoint ptr %data.i376 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %data.i376, align 4
  %add.ptr52.i = getelementptr i8, ptr %238, i32 %offset.0383.i
  %call.i.i388 = call zeroext i1 @is_vmalloc_addr(ptr noundef %add.ptr52.i) #14
  br i1 %call.i.i388, label %land.rhs.i.i, label %if.end39.i.i

land.rhs.i.i:                                     ; preds = %if.end50.i
  %.b1.i.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge, label %if.then.i.i390, !prof !576

land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dma_map_single_attrs.exit.i

if.then.i.i390:                                   ; preds = %land.rhs.i.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i.i = call ptr @dev_driver_string(ptr noundef %dev.i) #14
  %239 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i389 = icmp eq ptr %240, null
  br i1 %tobool.not.i.i.i389, label %if.end.i.i.i391, label %if.then.i.i390.dev_name.exit.i.i_crit_edge

if.then.i.i390.dev_name.exit.i.i_crit_edge:       ; preds = %if.then.i.i390
  call void @__sanitizer_cov_trace_pc() #16
  br label %dev_name.exit.i.i

if.end.i.i.i391:                                  ; preds = %if.then.i.i390
  call void @__sanitizer_cov_trace_pc() #16
  %241 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %dev.i, align 4
  br label %dev_name.exit.i.i

dev_name.exit.i.i:                                ; preds = %if.end.i.i.i391, %if.then.i.i390.dev_name.exit.i.i_crit_edge
  %retval.0.i.i.i392 = phi ptr [ %242, %if.end.i.i.i391 ], [ %240, %if.then.i.i390.dev_name.exit.i.i_crit_edge ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.50, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.51, ptr noundef %call16.i.i, ptr noundef %retval.0.i.i.i392) #14
  br label %dma_map_single_attrs.exit.i

if.end39.i.i:                                     ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @debug_dma_map_single(ptr noundef %dev.i, ptr noundef %add.ptr52.i, i32 noundef %size.3.i) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %243 = load ptr, ptr @mem_map, align 4
  %244 = ptrtoint ptr %add.ptr52.i to i32
  %sub.i352.i = add i32 %244, 1073741824
  %shr.i.i = lshr i32 %sub.i352.i, 12
  %add.ptr.i.i393 = getelementptr %struct.page, ptr %243, i32 %shr.i.i
  %and.i.i394 = and i32 %244, 4095
  %call41.i.i = call i32 @dma_map_page_attrs(ptr noundef %dev.i, ptr noundef %add.ptr.i.i393, i32 noundef %and.i.i394, i32 noundef %size.3.i, i32 noundef 1, i32 noundef 0) #14
  br label %dma_map_single_attrs.exit.i

dma_map_single_attrs.exit.i:                      ; preds = %if.end39.i.i, %dev_name.exit.i.i, %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %call41.i.i, %if.end39.i.i ], [ -1, %dev_name.exit.i.i ], [ -1, %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge ]
  %dma.i = getelementptr %struct.e1000_tx_buffer, ptr %215, i32 %i.0385.i, i32 1
  %245 = ptrtoint ptr %dma.i to i32
  call void @__asan_store4_noabort(i32 %245)
  store i32 %retval.0.i.i, ptr %dma.i, align 4
  call void @debug_dma_mapping_error(ptr noundef %dev.i, i32 noundef %retval.0.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i.i)
  %cmp.i.i395 = icmp eq i32 %retval.0.i.i, -1
  br i1 %cmp.i.i395, label %do.end.loopexit373.i, label %if.end59.i

if.end59.i:                                       ; preds = %dma_map_single_attrs.exit.i
  %conv60.i = trunc i32 %i.0385.i to i16
  %next_to_watch.i396 = getelementptr %struct.e1000_tx_buffer, ptr %215, i32 %i.0385.i, i32 4
  %246 = ptrtoint ptr %next_to_watch.i396 to i32
  call void @__asan_store2_noabort(i32 %246)
  store i16 %conv60.i, ptr %next_to_watch.i396, align 2
  %sub61.i = sub i32 %len.0382.i, %size.3.i
  %add.i397 = add i32 %size.3.i, %offset.0383.i
  %inc.i398 = add i32 %count.0384.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub61.i)
  %tobool62.not.i = icmp eq i32 %sub61.i, 0
  br i1 %tobool62.not.i, label %if.end59.i.for.cond.preheader.i_crit_edge, label %if.then63.i

if.end59.i.for.cond.preheader.i_crit_edge:        ; preds = %if.end59.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader.i

if.then63.i:                                      ; preds = %if.end59.i
  %inc64.i = add i32 %i.0385.i, 1
  %247 = ptrtoint ptr %count65.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %count65.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc64.i, i32 %248)
  %cmp66.i = icmp eq i32 %inc64.i, %248
  br i1 %cmp66.i, label %if.then74.i, label %if.then63.i.while.body.i.backedge_crit_edge, !prof !456

if.then63.i.while.body.i.backedge_crit_edge:      ; preds = %if.then63.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.backedge

if.then74.i:                                      ; preds = %if.then63.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.backedge

while.body.i.backedge:                            ; preds = %if.then74.i, %if.then63.i.while.body.i.backedge_crit_edge
  %i.0385.i.be = phi i32 [ 0, %if.then74.i ], [ %inc64.i, %if.then63.i.while.body.i.backedge_crit_edge ]
  br label %while.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %f.0399.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc173.i, %for.inc.i.for.body.i_crit_edge ]
  %i.2398.i = phi i32 [ %i.0.lcssa.i, %for.body.lr.ph.i ], [ %i.3.lcssa.i, %for.inc.i.for.body.i_crit_edge ]
  %count.1397.i = phi i32 [ %count.0.lcssa.i, %for.body.lr.ph.i ], [ %count.2.lcssa.i, %for.inc.i.for.body.i_crit_edge ]
  %249 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %end.i, align 4
  %arrayidx80.i = getelementptr %struct.skb_shared_info, ptr %250, i32 0, i32 12, i32 %f.0399.i
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %250, i32 0, i32 12, i32 %f.0399.i, i32 1
  %251 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %bv_len.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %252)
  %tobool83.not389.i = icmp eq i32 %252, 0
  br i1 %tobool83.not389.i, label %for.body.i.for.inc.i_crit_edge, label %while.body84.lr.ph.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

while.body84.lr.ph.i:                             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_cmp4(i32 %f.0399.i, i32 %sub108.i)
  %cmp109.i = icmp eq i32 %f.0399.i, %sub108.i
  %or.cond345.i = select i1 %tobool106.not.i, i1 %cmp109.i, i1 false
  %bv_offset.i.i.i = getelementptr %struct.skb_shared_info, ptr %250, i32 0, i32 12, i32 %f.0399.i, i32 2
  br label %while.body84.i

while.body84.i:                                   ; preds = %cleanup.i.while.body84.i_crit_edge, %while.body84.lr.ph.i
  %i.3393.i = phi i32 [ %i.2398.i, %while.body84.lr.ph.i ], [ %i.4.i, %cleanup.i.while.body84.i_crit_edge ]
  %count.2392.i = phi i32 [ %count.1397.i, %while.body84.lr.ph.i ], [ %inc168.i, %cleanup.i.while.body84.i_crit_edge ]
  %offset.1391.i = phi i32 [ 0, %while.body84.lr.ph.i ], [ %add167.i, %cleanup.i.while.body84.i_crit_edge ]
  %len.1390.i = phi i32 [ %252, %while.body84.lr.ph.i ], [ %sub166.i, %cleanup.i.while.body84.i_crit_edge ]
  %inc85.i = add i32 %i.3393.i, 1
  %253 = ptrtoint ptr %count86.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %count86.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc85.i, i32 %254)
  %cmp87.i = icmp eq i32 %inc85.i, %254
  br i1 %cmp87.i, label %if.then95.i, label %while.body84.i.if.end96.i_crit_edge, !prof !456

while.body84.i.if.end96.i_crit_edge:              ; preds = %while.body84.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end96.i

if.then95.i:                                      ; preds = %while.body84.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end96.i

if.end96.i:                                       ; preds = %if.then95.i, %while.body84.i.if.end96.i_crit_edge
  %i.4.i = phi i32 [ 0, %if.then95.i ], [ %inc85.i, %while.body84.i.if.end96.i_crit_edge ]
  %255 = ptrtoint ptr %buffer_info97.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %buffer_info97.i, align 4
  %257 = call i32 @llvm.umin.i32(i32 %len.1390.i, i32 %max_per_txd.0458) #14
  call void @__sanitizer_cov_trace_cmp4(i32 %len.1390.i, i32 %max_per_txd.0458)
  %cmp112.i = icmp ule i32 %len.1390.i, %max_per_txd.0458
  %or.cond346.i = select i1 %or.cond345.i, i1 %cmp112.i, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %257)
  %cmp115.i = icmp ugt i32 %257, 8
  %or.cond351.i = select i1 %or.cond346.i, i1 %cmp115.i, i1 false
  br i1 %or.cond351.i, label %if.then124.i, label %if.end96.i.if.end126.i_crit_edge, !prof !608

if.end96.i.if.end126.i_crit_edge:                 ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end126.i

if.then124.i:                                     ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub125.i = add i32 %257, -4
  br label %if.end126.i

if.end126.i:                                      ; preds = %if.then124.i, %if.end96.i.if.end126.i_crit_edge
  %size.4.i = phi i32 [ %sub125.i, %if.then124.i ], [ %257, %if.end96.i.if.end126.i_crit_edge ]
  %258 = ptrtoint ptr %pcix_82544 to i32
  call void @__asan_load1_noabort(i32 %258)
  %259 = load i8, ptr %pcix_82544, align 8, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %259)
  %tobool133.not.i = icmp eq i8 %259, 0
  br i1 %tobool133.not.i, label %if.end126.i.if.end150.i_crit_edge, label %land.lhs.true135.i

if.end126.i.if.end150.i_crit_edge:                ; preds = %if.end126.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end150.i

land.lhs.true135.i:                               ; preds = %if.end126.i
  %add129.i = add i32 %offset.1391.i, 7
  %sub130.i = add i32 %add129.i, %size.4.i
  %and136.i = and i32 %sub130.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and136.i)
  %tobool137.not.i = icmp eq i32 %and136.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %size.4.i)
  %cmp139.i = icmp ugt i32 %size.4.i, 4
  %spec.select347.i = select i1 %tobool137.not.i, i1 %cmp139.i, i1 false
  br i1 %spec.select347.i, label %if.then148.i, label %land.lhs.true135.i.if.end150.i_crit_edge, !prof !456

land.lhs.true135.i.if.end150.i_crit_edge:         ; preds = %land.lhs.true135.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end150.i

if.then148.i:                                     ; preds = %land.lhs.true135.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub149.i = add i32 %size.4.i, -4
  br label %if.end150.i

if.end150.i:                                      ; preds = %if.then148.i, %land.lhs.true135.i.if.end150.i_crit_edge, %if.end126.i.if.end150.i_crit_edge
  %size.5.i = phi i32 [ %sub149.i, %if.then148.i ], [ %size.4.i, %land.lhs.true135.i.if.end150.i_crit_edge ], [ %size.4.i, %if.end126.i.if.end150.i_crit_edge ]
  %conv151.i = trunc i32 %size.5.i to i16
  %length152.i = getelementptr %struct.e1000_tx_buffer, ptr %256, i32 %i.4.i, i32 3
  %260 = ptrtoint ptr %length152.i to i32
  call void @__asan_store2_noabort(i32 %260)
  store i16 %conv151.i, ptr %length152.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %261 = load volatile i32, ptr @jiffies, align 128
  %time_stamp153.i = getelementptr %struct.e1000_tx_buffer, ptr %256, i32 %i.4.i, i32 2
  %262 = ptrtoint ptr %time_stamp153.i to i32
  call void @__asan_store4_noabort(i32 %262)
  store i32 %261, ptr %time_stamp153.i, align 4
  %mapped_as_page154.i = getelementptr %struct.e1000_tx_buffer, ptr %256, i32 %i.4.i, i32 5
  %263 = ptrtoint ptr %mapped_as_page154.i to i32
  call void @__asan_store1_noabort(i32 %263)
  store i8 1, ptr %mapped_as_page154.i, align 4
  %264 = ptrtoint ptr %arrayidx80.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %arrayidx80.i, align 4
  %266 = ptrtoint ptr %bv_offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %bv_offset.i.i.i, align 4
  %add.i.i399 = add i32 %267, %offset.1391.i
  %call2.i.i = call i32 @dma_map_page_attrs(ptr noundef %dev155.i, ptr noundef %265, i32 noundef %add.i.i399, i32 noundef %size.5.i, i32 noundef 1, i32 noundef 0) #14
  %dma157.i = getelementptr %struct.e1000_tx_buffer, ptr %256, i32 %i.4.i, i32 1
  %268 = ptrtoint ptr %dma157.i to i32
  call void @__asan_store4_noabort(i32 %268)
  store i32 %call2.i.i, ptr %dma157.i, align 4
  call void @debug_dma_mapping_error(ptr noundef %dev155.i, i32 noundef %call2.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i.i)
  %cmp.i353.not.i = icmp eq i32 %call2.i.i, -1
  br i1 %cmp.i353.not.i, label %do.end.loopexit.i, label %cleanup.i

cleanup.i:                                        ; preds = %if.end150.i
  %conv164.i = trunc i32 %i.4.i to i16
  %next_to_watch165.i = getelementptr %struct.e1000_tx_buffer, ptr %256, i32 %i.4.i, i32 4
  %269 = ptrtoint ptr %next_to_watch165.i to i32
  call void @__asan_store2_noabort(i32 %269)
  store i16 %conv164.i, ptr %next_to_watch165.i, align 2
  %sub166.i = sub i32 %len.1390.i, %size.5.i
  %add167.i = add i32 %size.5.i, %offset.1391.i
  %inc168.i = add i32 %count.2392.i, 1
  %tobool83.not.i = icmp eq i32 %sub166.i, 0
  br i1 %tobool83.not.i, label %cleanup.i.for.inc.i_crit_edge, label %cleanup.i.while.body84.i_crit_edge

cleanup.i.while.body84.i_crit_edge:               ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body84.i

cleanup.i.for.inc.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %cleanup.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %count.2.lcssa.i = phi i32 [ %count.1397.i, %for.body.i.for.inc.i_crit_edge ], [ %inc168.i, %cleanup.i.for.inc.i_crit_edge ]
  %i.3.lcssa.i = phi i32 [ %i.2398.i, %for.body.i.for.inc.i_crit_edge ], [ %i.4.i, %cleanup.i.for.inc.i_crit_edge ]
  %inc173.i = add nuw nsw i32 %f.0399.i, 1
  %exitcond.not.i = icmp eq i32 %inc173.i, %conv81
  br i1 %exitcond.not.i, label %for.inc.i.e1000_tx_map.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.e1000_tx_map.exit_crit_edge:            ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_tx_map.exit

do.end.loopexit.i:                                ; preds = %if.end150.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx98.le.i = getelementptr %struct.e1000_tx_buffer, ptr %256, i32 %i.4.i
  br label %do.end.i

do.end.loopexit373.i:                             ; preds = %dma_map_single_attrs.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.le.i = getelementptr %struct.e1000_tx_buffer, ptr %215, i32 %i.0385.i
  br label %do.end.i

do.end.i:                                         ; preds = %do.end.loopexit373.i, %do.end.loopexit.i
  %buffer_info.4.i = phi ptr [ %arrayidx98.le.i, %do.end.loopexit.i ], [ %arrayidx.le.i, %do.end.loopexit373.i ]
  %count.5.i = phi i32 [ %count.2392.i, %do.end.loopexit.i ], [ %count.0384.i, %do.end.loopexit373.i ]
  %i.6.i = phi i32 [ %i.4.i, %do.end.loopexit.i ], [ %i.0385.i, %do.end.loopexit373.i ]
  %dev199.i = getelementptr inbounds %struct.pci_dev, ptr %207, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev199.i, ptr noundef nonnull @.str.48) #17
  %dma200.i = getelementptr inbounds %struct.e1000_tx_buffer, ptr %buffer_info.4.i, i32 0, i32 1
  %270 = ptrtoint ptr %dma200.i to i32
  call void @__asan_store4_noabort(i32 %270)
  store i32 0, ptr %dma200.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %count.5.i)
  %271 = icmp ult i32 %count.5.i, 2
  br i1 %271, label %do.end.i.if.else217_crit_edge, label %while.body207.lr.ph.i

do.end.i.if.else217_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else217

while.body207.lr.ph.i:                            ; preds = %do.end.i
  %dec.i = add i32 %count.5.i, -1
  %count211.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 3
  %buffer_info215.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 6
  br label %while.body207.i

while.body207.i:                                  ; preds = %e1000_unmap_and_free_tx_resource.exit.i.while.body207.i_crit_edge, %while.body207.lr.ph.i
  %dec205406.in.i = phi i32 [ %dec.i, %while.body207.lr.ph.i ], [ %dec205406.i, %e1000_unmap_and_free_tx_resource.exit.i.while.body207.i_crit_edge ]
  %i.7405.i = phi i32 [ %i.6.i, %while.body207.lr.ph.i ], [ %dec214.i, %e1000_unmap_and_free_tx_resource.exit.i.while.body207.i_crit_edge ]
  %dec205406.i = add i32 %dec205406.in.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.7405.i)
  %cmp208.i = icmp eq i32 %i.7405.i, 0
  br i1 %cmp208.i, label %if.then210.i, label %while.body207.i.if.end213.i_crit_edge

while.body207.i.if.end213.i_crit_edge:            ; preds = %while.body207.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end213.i

if.then210.i:                                     ; preds = %while.body207.i
  call void @__sanitizer_cov_trace_pc() #16
  %272 = ptrtoint ptr %count211.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %count211.i, align 4
  br label %if.end213.i

if.end213.i:                                      ; preds = %if.then210.i, %while.body207.i.if.end213.i_crit_edge
  %i.8.i = phi i32 [ %273, %if.then210.i ], [ %i.7405.i, %while.body207.i.if.end213.i_crit_edge ]
  %dec214.i = add i32 %i.8.i, -1
  %274 = ptrtoint ptr %buffer_info215.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %buffer_info215.i, align 4
  %arrayidx216.i = getelementptr %struct.e1000_tx_buffer, ptr %275, i32 %dec214.i
  %dma.i.i = getelementptr %struct.e1000_tx_buffer, ptr %275, i32 %dec214.i, i32 1
  %276 = ptrtoint ptr %dma.i.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %dma.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %277)
  %tobool.not.i.i400 = icmp eq i32 %277, 0
  br i1 %tobool.not.i.i400, label %if.end213.i.if.end10.i.i_crit_edge, label %if.then.i359.i

if.end213.i.if.end10.i.i_crit_edge:               ; preds = %if.end213.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.i.i

if.then.i359.i:                                   ; preds = %if.end213.i
  call void @__sanitizer_cov_trace_pc() #16
  %278 = ptrtoint ptr %pdev2.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load ptr, ptr %pdev2.i, align 4
  %dev5.i.i = getelementptr inbounds %struct.pci_dev, ptr %279, i32 0, i32 44
  %length7.i.i = getelementptr %struct.e1000_tx_buffer, ptr %275, i32 %dec214.i, i32 3
  %280 = ptrtoint ptr %length7.i.i to i32
  call void @__asan_load2_noabort(i32 %280)
  %281 = load i16, ptr %length7.i.i, align 4
  %conv8.i.i = zext i16 %281 to i32
  call void @dma_unmap_page_attrs(ptr noundef %dev5.i.i, i32 noundef %277, i32 noundef %conv8.i.i, i32 noundef 1, i32 noundef 0) #14
  %282 = ptrtoint ptr %dma.i.i to i32
  call void @__asan_store4_noabort(i32 %282)
  store i32 0, ptr %dma.i.i, align 4
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.then.i359.i, %if.end213.i.if.end10.i.i_crit_edge
  %283 = ptrtoint ptr %arrayidx216.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %arrayidx216.i, align 4
  %tobool11.not.i.i = icmp eq ptr %284, null
  br i1 %tobool11.not.i.i, label %if.end10.i.i.e1000_unmap_and_free_tx_resource.exit.i_crit_edge, label %if.then12.i.i

if.end10.i.i.e1000_unmap_and_free_tx_resource.exit.i_crit_edge: ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_unmap_and_free_tx_resource.exit.i

if.then12.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @napi_consume_skb(ptr noundef nonnull %284, i32 noundef 0) #14
  %285 = ptrtoint ptr %arrayidx216.i to i32
  call void @__asan_store4_noabort(i32 %285)
  store ptr null, ptr %arrayidx216.i, align 4
  br label %e1000_unmap_and_free_tx_resource.exit.i

e1000_unmap_and_free_tx_resource.exit.i:          ; preds = %if.then12.i.i, %if.end10.i.i.e1000_unmap_and_free_tx_resource.exit.i_crit_edge
  %time_stamp.i.i = getelementptr %struct.e1000_tx_buffer, ptr %275, i32 %dec214.i, i32 2
  %286 = ptrtoint ptr %time_stamp.i.i to i32
  call void @__asan_store4_noabort(i32 %286)
  store i32 0, ptr %time_stamp.i.i, align 4
  %tobool206.not.i = icmp eq i32 %dec205406.i, 0
  br i1 %tobool206.not.i, label %e1000_unmap_and_free_tx_resource.exit.i.if.else217_crit_edge, label %e1000_unmap_and_free_tx_resource.exit.i.while.body207.i_crit_edge

e1000_unmap_and_free_tx_resource.exit.i.while.body207.i_crit_edge: ; preds = %e1000_unmap_and_free_tx_resource.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body207.i

e1000_unmap_and_free_tx_resource.exit.i.if.else217_crit_edge: ; preds = %e1000_unmap_and_free_tx_resource.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else217

e1000_tx_map.exit:                                ; preds = %for.inc.i.e1000_tx_map.exit_crit_edge, %for.cond.preheader.i.e1000_tx_map.exit_crit_edge
  %count.1.lcssa.i = phi i32 [ %count.0.lcssa.i, %for.cond.preheader.i.e1000_tx_map.exit_crit_edge ], [ %count.2.lcssa.i, %for.inc.i.e1000_tx_map.exit_crit_edge ]
  %i.2.lcssa.i = phi i32 [ %i.0.lcssa.i, %for.cond.preheader.i.e1000_tx_map.exit_crit_edge ], [ %i.3.lcssa.i, %for.inc.i.e1000_tx_map.exit_crit_edge ]
  %287 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %end.i, align 4
  %gso_segs.i = getelementptr inbounds %struct.skb_shared_info, ptr %288, i32 0, i32 5
  %289 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_load2_noabort(i32 %289)
  %290 = load i16, ptr %gso_segs.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %290)
  %tobool176.not.i = icmp eq i16 %290, 0
  %narrow.i = select i1 %tobool176.not.i, i16 1, i16 %290
  %conv175..i = zext i16 %narrow.i to i32
  %sub181.i = add nsw i32 %conv175..i, -1
  %291 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load i32, ptr %len.i, align 4
  %293 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %data_len.i, align 8
  %sub.i358.i = sub i32 %292, %294
  %mul.i = mul i32 %sub181.i, %sub.i358.i
  %add184.i = add i32 %mul.i, %292
  %buffer_info185.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 6
  %295 = ptrtoint ptr %buffer_info185.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load ptr, ptr %buffer_info185.i, align 4
  %arrayidx186.i = getelementptr %struct.e1000_tx_buffer, ptr %296, i32 %i.2.lcssa.i
  %297 = ptrtoint ptr %arrayidx186.i to i32
  call void @__asan_store4_noabort(i32 %297)
  store ptr %skb, ptr %arrayidx186.i, align 4
  %298 = load ptr, ptr %buffer_info185.i, align 4
  %segs191.i = getelementptr %struct.e1000_tx_buffer, ptr %298, i32 %i.2.lcssa.i, i32 6
  %299 = ptrtoint ptr %segs191.i to i32
  call void @__asan_store2_noabort(i32 %299)
  store i16 %narrow.i, ptr %segs191.i, align 2
  %300 = load ptr, ptr %buffer_info185.i, align 4
  %bytecount194.i = getelementptr %struct.e1000_tx_buffer, ptr %300, i32 %i.2.lcssa.i, i32 7
  %301 = ptrtoint ptr %bytecount194.i to i32
  call void @__asan_store4_noabort(i32 %301)
  store i32 %add184.i, ptr %bytecount194.i, align 4
  %conv195.i = trunc i32 %i.2.lcssa.i to i16
  %302 = load ptr, ptr %buffer_info185.i, align 4
  %next_to_watch198.i = getelementptr %struct.e1000_tx_buffer, ptr %302, i32 %119, i32 4
  %303 = ptrtoint ptr %next_to_watch198.i to i32
  call void @__asan_store2_noabort(i32 %303)
  store i16 %conv195.i, ptr %next_to_watch198.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.1.lcssa.i)
  %tobool195.not = icmp eq i32 %count.1.lcssa.i, 0
  br i1 %tobool195.not, label %e1000_tx_map.exit.if.else217_crit_edge, label %if.then196

e1000_tx_map.exit.if.else217_crit_edge:           ; preds = %e1000_tx_map.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else217

if.then196:                                       ; preds = %e1000_tx_map.exit
  %304 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %len.i, align 4
  %_tx.i.i402 = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 103
  %306 = ptrtoint ptr %_tx.i.i402 to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load ptr, ptr %_tx.i.i402, align 128
  %dql.i.i = getelementptr inbounds %struct.netdev_queue, ptr %307, i32 0, i32 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 268435455, i32 %305)
  %cmp.i.i.i403 = icmp ugt i32 %305, 268435455
  br i1 %cmp.i.i.i403, label %do.body2.i.i.i, label %dql_queued.exit.i.i, !prof !456

do.body2.i.i.i:                                   ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/dynamic_queue_limits.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 77, 0\0A.popsection", ""() #14, !srcloc !609
  unreachable

dql_queued.exit.i.i:                              ; preds = %if.then196
  %last_obj_cnt.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %307, i32 0, i32 15, i32 2
  %308 = ptrtoint ptr %last_obj_cnt.i.i.i to i32
  call void @__asan_store4_noabort(i32 %308)
  store i32 %305, ptr %last_obj_cnt.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !610
  %309 = ptrtoint ptr %dql.i.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load i32, ptr %dql.i.i, align 128
  %add.i.i.i = add i32 %310, %305
  store i32 %add.i.i.i, ptr %dql.i.i, align 128
  %adj_limit.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %307, i32 0, i32 15, i32 1
  %311 = ptrtoint ptr %adj_limit.i.i.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load volatile i32, ptr %adj_limit.i.i.i, align 4
  %313 = load volatile i32, ptr %dql.i.i, align 128
  %sub.i.i.i404 = sub i32 %312, %313
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i.i.i404)
  %cmp.i.i405 = icmp sgt i32 %sub.i.i.i404, -1
  br i1 %cmp.i.i405, label %dql_queued.exit.i.i.netdev_sent_queue.exit_crit_edge, label %if.end.i.i, !prof !576

dql_queued.exit.i.i.netdev_sent_queue.exit_crit_edge: ; preds = %dql_queued.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netdev_sent_queue.exit

if.end.i.i:                                       ; preds = %dql_queued.exit.i.i
  %state.i.i406 = getelementptr inbounds %struct.netdev_queue, ptr %307, i32 0, i32 13
  call void @_set_bit(i32 noundef 1, ptr noundef %state.i.i406) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !611
  %314 = ptrtoint ptr %adj_limit.i.i.i to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load volatile i32, ptr %adj_limit.i.i.i, align 4
  %316 = ptrtoint ptr %dql.i.i to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load volatile i32, ptr %dql.i.i, align 128
  %sub.i22.i.i = sub i32 %315, %317
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i22.i.i)
  %cmp7.i.i = icmp sgt i32 %sub.i22.i.i, -1
  br i1 %cmp7.i.i, label %if.then14.i.i, label %if.end.i.i.netdev_sent_queue.exit_crit_edge, !prof !456

if.end.i.i.netdev_sent_queue.exit_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netdev_sent_queue.exit

if.then14.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @_clear_bit(i32 noundef 1, ptr noundef %state.i.i406) #14
  br label %netdev_sent_queue.exit

netdev_sent_queue.exit:                           ; preds = %if.then14.i.i, %if.end.i.i.netdev_sent_queue.exit_crit_edge, %dql_queued.exit.i.i.netdev_sent_queue.exit_crit_edge
  call void @skb_clone_tx_timestamp(ptr noundef %skb) #14
  %318 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %end.i, align 4
  %tx_flags.i = getelementptr inbounds %struct.skb_shared_info, ptr %319, i32 0, i32 3
  %320 = ptrtoint ptr %tx_flags.i to i32
  call void @__asan_load1_noabort(i32 %320)
  %321 = load i8, ptr %tx_flags.i, align 1
  %322 = and i8 %321, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %322)
  %tobool.not.i408 = icmp eq i8 %322, 0
  br i1 %tobool.not.i408, label %netdev_sent_queue.exit.skb_tx_timestamp.exit_crit_edge, label %if.then.i409

netdev_sent_queue.exit.skb_tx_timestamp.exit_crit_edge: ; preds = %netdev_sent_queue.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %skb_tx_timestamp.exit

if.then.i409:                                     ; preds = %netdev_sent_queue.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @skb_tstamp_tx(ptr noundef %skb, ptr noundef null) #14
  br label %skb_tx_timestamp.exit

skb_tx_timestamp.exit:                            ; preds = %if.then.i409, %netdev_sent_queue.exit.skb_tx_timestamp.exit_crit_edge
  %and.i411 = and i32 %tx_flags.3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i411)
  %tobool.not.i412 = icmp eq i32 %and.i411, 0
  %and4.i = and i32 %tx_flags.3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i413 = icmp eq i32 %and4.i, 0
  %spec.select.i414 = select i1 %tobool5.not.i413, i32 512, i32 768
  %txd_upper.0.i = select i1 %tobool.not.i412, i32 0, i32 %spec.select.i414, !prof !456
  %txd_lower.0.i = select i1 %tobool.not.i412, i32 33554432, i32 638582784, !prof !456
  %and15.i = and i32 %tx_flags.3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i)
  %tobool16.not.i = icmp eq i32 %and15.i, 0
  %or24.i = or i32 %txd_lower.0.i, 537919488
  %323 = shl nuw nsw i32 %and15.i, 9
  %324 = or i32 %txd_upper.0.i, %323
  %txd_lower.1.i = select i1 %tobool16.not.i, i32 %txd_lower.0.i, i32 %or24.i, !prof !456
  %and27.i = and i32 %tx_flags.3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i)
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  br i1 %tobool28.not.i, label %skb_tx_timestamp.exit.if.end39.i_crit_edge, label %if.then35.i, !prof !576

skb_tx_timestamp.exit.if.end39.i_crit_edge:       ; preds = %skb_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end39.i

if.then35.i:                                      ; preds = %skb_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #16
  %or36.i = or i32 %txd_lower.1.i, 1073741824
  %and37.i = and i32 %tx_flags.3, -65536
  %or38.i415 = or i32 %324, %and37.i
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then35.i, %skb_tx_timestamp.exit.if.end39.i_crit_edge
  %txd_upper.2.i = phi i32 [ %or38.i415, %if.then35.i ], [ %324, %skb_tx_timestamp.exit.if.end39.i_crit_edge ]
  %txd_lower.2.i = phi i32 [ %or36.i, %if.then35.i ], [ %txd_lower.1.i, %skb_tx_timestamp.exit.if.end39.i_crit_edge ]
  %and40.i = and i32 %tx_flags.3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40.i)
  %tobool41.not.i = icmp eq i32 %and40.i, 0
  br i1 %tobool41.not.i, label %if.end39.i.while.body.lr.ph.i419_crit_edge, label %if.then48.i416, !prof !576

if.end39.i.while.body.lr.ph.i419_crit_edge:       ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.lr.ph.i419

if.then48.i416:                                   ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #16
  %and49.i = and i32 %txd_lower.2.i, -33554433
  br label %while.body.lr.ph.i419

while.body.lr.ph.i419:                            ; preds = %if.then48.i416, %if.end39.i.while.body.lr.ph.i419_crit_edge
  %txd_lower.3.i = phi i32 [ %and49.i, %if.then48.i416 ], [ %txd_lower.2.i, %if.end39.i.while.body.lr.ph.i419_crit_edge ]
  %325 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load i32, ptr %next_to_use.i, align 4
  %327 = call i32 @llvm.bswap.i32(i32 %txd_upper.2.i) #14
  %count56.i = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 3
  br label %while.body.i426

while.body.i426:                                  ; preds = %if.end65.i.while.body.i426_crit_edge, %while.body.lr.ph.i419
  %dec110.in.i = phi i32 [ %count.1.lcssa.i, %while.body.lr.ph.i419 ], [ %dec110.i, %if.end65.i.while.body.i426_crit_edge ]
  %i.0109.i = phi i32 [ %326, %while.body.lr.ph.i419 ], [ %i.1.i427, %if.end65.i.while.body.i426_crit_edge ]
  %dec110.i = add i32 %dec110.in.i, -1
  %328 = ptrtoint ptr %buffer_info185.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %buffer_info185.i, align 4
  %330 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %24, align 4
  %arrayidx53.i = getelementptr %struct.e1000_tx_desc, ptr %331, i32 %i.0109.i
  %dma.i420 = getelementptr %struct.e1000_tx_buffer, ptr %329, i32 %i.0109.i, i32 1
  %332 = ptrtoint ptr %dma.i420 to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %dma.i420, align 4
  %conv.i421 = zext i32 %333 to i64
  %334 = call i64 @llvm.bswap.i64(i64 %conv.i421) #14
  %335 = ptrtoint ptr %arrayidx53.i to i32
  call void @__asan_store8_noabort(i32 %335)
  store i64 %334, ptr %arrayidx53.i, align 8
  %length.i422 = getelementptr %struct.e1000_tx_buffer, ptr %329, i32 %i.0109.i, i32 3
  %336 = ptrtoint ptr %length.i422 to i32
  call void @__asan_load2_noabort(i32 %336)
  %337 = load i16, ptr %length.i422, align 4
  %conv54.i423 = zext i16 %337 to i32
  %or55.i = or i32 %txd_lower.3.i, %conv54.i423
  %338 = call i32 @llvm.bswap.i32(i32 %or55.i) #14
  %lower.i = getelementptr %struct.e1000_tx_desc, ptr %331, i32 %i.0109.i, i32 1
  %339 = ptrtoint ptr %lower.i to i32
  call void @__asan_store4_noabort(i32 %339)
  store i32 %338, ptr %lower.i, align 8
  %upper.i = getelementptr %struct.e1000_tx_desc, ptr %331, i32 %i.0109.i, i32 2
  %340 = ptrtoint ptr %upper.i to i32
  call void @__asan_store4_noabort(i32 %340)
  store i32 %327, ptr %upper.i, align 4
  %inc.i424 = add i32 %i.0109.i, 1
  %341 = ptrtoint ptr %count56.i to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load i32, ptr %count56.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i424, i32 %342)
  %cmp.i425 = icmp eq i32 %inc.i424, %342
  br i1 %cmp.i425, label %if.then64.i, label %while.body.i426.if.end65.i_crit_edge, !prof !456

while.body.i426.if.end65.i_crit_edge:             ; preds = %while.body.i426
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end65.i

if.then64.i:                                      ; preds = %while.body.i426
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end65.i

if.end65.i:                                       ; preds = %if.then64.i, %while.body.i426.if.end65.i_crit_edge
  %i.1.i427 = phi i32 [ 0, %if.then64.i ], [ %inc.i424, %while.body.i426.if.end65.i_crit_edge ]
  %tobool51.not.i = icmp eq i32 %dec110.i, 0
  br i1 %tobool51.not.i, label %while.end.i, label %if.end65.i.while.body.i426_crit_edge

if.end65.i.while.body.i426_crit_edge:             ; preds = %if.end65.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i426

while.end.i:                                      ; preds = %if.end65.i
  %txd_cmd.i = getelementptr i8, ptr %netdev, i32 2928
  %343 = ptrtoint ptr %txd_cmd.i to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load i32, ptr %txd_cmd.i, align 8
  %345 = call i32 @llvm.bswap.i32(i32 %344) #14
  %346 = ptrtoint ptr %lower.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load i32, ptr %lower.i, align 8
  %or67.i = or i32 %347, %345
  br i1 %tobool41.not.i, label %while.end.i.e1000_tx_queue.exit_crit_edge, label %if.then76.i, !prof !576

while.end.i.e1000_tx_queue.exit_crit_edge:        ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_tx_queue.exit

if.then76.i:                                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %and78.i = and i32 %or67.i, -3
  br label %e1000_tx_queue.exit

e1000_tx_queue.exit:                              ; preds = %if.then76.i, %while.end.i.e1000_tx_queue.exit_crit_edge
  %storemerge.i = phi i32 [ %and78.i, %if.then76.i ], [ %or67.i, %while.end.i.e1000_tx_queue.exit_crit_edge ]
  %348 = ptrtoint ptr %lower.i to i32
  call void @__asan_store4_noabort(i32 %348)
  store i32 %storemerge.i, ptr %lower.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !612
  %349 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_store4_noabort(i32 %349)
  store i32 %i.1.i427, ptr %next_to_use.i, align 4
  %350 = ptrtoint ptr %pcix_82544 to i32
  call void @__asan_load1_noabort(i32 %350)
  %351 = load i8, ptr %pcix_82544, align 8, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %351)
  %tobool199.not = icmp eq i8 %351, 0
  %spec.select344 = select i1 %tobool199.not, i32 24, i32 42
  %352 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load volatile i32, ptr %next_to_clean.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !605
  %354 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load volatile i32, ptr %next_to_use.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %353, i32 %355)
  %cmp.i431 = icmp ugt i32 %353, %355
  br i1 %cmp.i431, label %e1000_tx_queue.exit.cond.end.i438_crit_edge, label %cond.false.i433

e1000_tx_queue.exit.cond.end.i438_crit_edge:      ; preds = %e1000_tx_queue.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i438

cond.false.i433:                                  ; preds = %e1000_tx_queue.exit
  call void @__sanitizer_cov_trace_pc() #16
  %356 = ptrtoint ptr %count56.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %count56.i, align 4
  br label %cond.end.i438

cond.end.i438:                                    ; preds = %cond.false.i433, %e1000_tx_queue.exit.cond.end.i438_crit_edge
  %cond.i434 = phi i32 [ %357, %cond.false.i433 ], [ 0, %e1000_tx_queue.exit.cond.end.i438_crit_edge ]
  %358 = xor i32 %355, -1
  %add.i435 = add i32 %353, %358
  %sub10.i436 = add i32 %add.i435, %cond.i434
  call void @__sanitizer_cov_trace_cmp4(i32 %sub10.i436, i32 %spec.select344)
  %cmp11.not.i437 = icmp ult i32 %sub10.i436, %spec.select344
  br i1 %cmp11.not.i437, label %if.end.i440, label %cond.end.i438.e1000_maybe_stop_tx.exit442_crit_edge, !prof !456

cond.end.i438.e1000_maybe_stop_tx.exit442_crit_edge: ; preds = %cond.end.i438
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_maybe_stop_tx.exit442

if.end.i440:                                      ; preds = %cond.end.i438
  call void @__sanitizer_cov_trace_pc() #16
  %call.i439 = call fastcc i32 @__e1000_maybe_stop_tx(ptr noundef %netdev, i32 noundef %spec.select344) #14
  br label %e1000_maybe_stop_tx.exit442

e1000_maybe_stop_tx.exit442:                      ; preds = %if.end.i440, %cond.end.i438.e1000_maybe_stop_tx.exit442_crit_edge
  %359 = call i32 @llvm.read_register.i32(metadata !410) #14
  %and.i.i443 = and i32 %359, -16384
  %360 = inttoptr i32 %and.i.i443 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %360, i32 0, i32 3
  %361 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load i32, ptr %cpu.i, align 4
  %arrayidx.i444 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %362
  %363 = ptrtoint ptr %arrayidx.i444 to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load i32, ptr %arrayidx.i444, align 4
  %add.i445 = add i32 %364, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11, i32 1) to i32)
  %365 = inttoptr i32 %add.i445 to ptr
  %366 = ptrtoint ptr %365 to i32
  call void @__asan_load1_noabort(i32 %366)
  %367 = load i8, ptr %365, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %367)
  %tobool.i446.not = icmp eq i8 %367, 0
  br i1 %tobool.i446.not, label %e1000_maybe_stop_tx.exit442.do.body210_crit_edge, label %lor.lhs.false205

e1000_maybe_stop_tx.exit442.do.body210_crit_edge: ; preds = %e1000_maybe_stop_tx.exit442
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body210

lor.lhs.false205:                                 ; preds = %e1000_maybe_stop_tx.exit442
  %368 = ptrtoint ptr %_tx.i.i402 to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %_tx.i.i402, align 128
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %369, i32 0, i32 13
  %370 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load i32, ptr %state.i, align 4
  %and.i447 = and i32 %371, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i447)
  %tobool.i448.not = icmp eq i32 %and.i447, 0
  br i1 %tobool.i448.not, label %lor.lhs.false205.cleanup221_crit_edge, label %lor.lhs.false205.do.body210_crit_edge

lor.lhs.false205.do.body210_crit_edge:            ; preds = %lor.lhs.false205
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body210

lor.lhs.false205.cleanup221_crit_edge:            ; preds = %lor.lhs.false205
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup221

do.body210:                                       ; preds = %lor.lhs.false205.do.body210_crit_edge, %e1000_maybe_stop_tx.exit442.do.body210_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !613
  call void @arm_heavy_mb() #14
  %372 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load i32, ptr %next_to_use.i, align 4
  %374 = call i32 @llvm.bswap.i32(i32 %373)
  %375 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load ptr, ptr %hw1, align 4
  %tdt = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 8
  %377 = ptrtoint ptr %tdt to i32
  call void @__asan_load2_noabort(i32 %377)
  %378 = load i16, ptr %tdt, align 2
  %conv214 = zext i16 %378 to i32
  %add.ptr215 = getelementptr i8, ptr %376, i32 %conv214
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr215, i32 %374) #14, !srcloc !421
  br label %cleanup221

if.else217:                                       ; preds = %e1000_tx_map.exit.if.else217_crit_edge, %e1000_unmap_and_free_tx_resource.exit.i.if.else217_crit_edge, %do.end.i.if.else217_crit_edge
  call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #14
  %buffer_info = getelementptr inbounds %struct.e1000_tx_ring, ptr %24, i32 0, i32 6
  %379 = ptrtoint ptr %buffer_info to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load ptr, ptr %buffer_info, align 4
  %time_stamp = getelementptr %struct.e1000_tx_buffer, ptr %380, i32 %119, i32 2
  %381 = ptrtoint ptr %time_stamp to i32
  call void @__asan_store4_noabort(i32 %381)
  store i32 0, ptr %time_stamp, align 4
  %382 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_store4_noabort(i32 %382)
  store i32 %119, ptr %next_to_use.i, align 4
  br label %cleanup221

cleanup221:                                       ; preds = %if.else217, %do.body210, %lor.lhs.false205.cleanup221_crit_edge, %if.then140, %if.then124, %if.then121.cleanup221_crit_edge, %e1000_maybe_stop_tx.exit.cleanup221_crit_edge, %cleanup42, %if.then.i.i.i.cleanup221_crit_edge
  %retval.3 = phi i32 [ 0, %if.then140 ], [ 0, %cleanup42 ], [ 16, %e1000_maybe_stop_tx.exit.cleanup221_crit_edge ], [ 16, %if.then124 ], [ 16, %if.then121.cleanup221_crit_edge ], [ 0, %lor.lhs.false205.cleanup221_crit_edge ], [ 0, %do.body210 ], [ 0, %if.else217 ], [ 0, %if.then.i.i.i.cleanup221_crit_edge ]
  ret i32 %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_set_rx_mode(ptr noundef %netdev) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1 = getelementptr i8, ptr %netdev, i32 3296
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 2848, i32 noundef 512) #19
  %tobool.not = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %hw1, align 4
  %mac_type = getelementptr i8, ptr %netdev, i32 3308
  %add.ptr = getelementptr i8, ptr %2, i32 256
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  %4 = tail call i32 @llvm.bswap.i32(i32 %3)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !614
  %flags = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 14
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 8
  %and = and i32 %6, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %or = and i32 %4, -262169
  %and7 = or i32 %or, 24
  br label %if.end20

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %and14 = and i32 %4, -17
  %and9 = lshr i32 %6, 5
  %7 = and i32 %and9, 16
  %rctl.0 = or i32 %7, %and14
  %call.i = tail call i32 @_find_next_bit_be(ptr noundef %add.ptr.i, i32 noundef 4096, i32 noundef 0) #14
  %conv1.i = and i32 %call.i, 61440
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv1.i)
  %cmp.i = icmp eq i32 %conv1.i, 0
  %or18 = or i32 %rctl.0, 262144
  %spec.select243 = select i1 %cmp.i, i32 %or18, i32 %rctl.0
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then6
  %rctl.1 = phi i32 [ %and7, %if.then6 ], [ %spec.select243, %if.else ]
  %uc = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 65
  %count = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 65, i32 1
  %8 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %9)
  %cmp21 = icmp sgt i32 %9, 14
  br i1 %cmp21, label %if.then22, label %if.else24

if.then22:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  %or23 = or i32 %rctl.1, 8
  br label %do.body

if.else24:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 8
  %and26 = and i32 %11, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  %and29 = and i32 %rctl.1, -9
  %spec.select = select i1 %tobool27.not, i32 %and29, i32 %rctl.1
  br label %do.body

do.body:                                          ; preds = %if.else24, %if.then22
  %rctl.2 = phi i32 [ %or23, %if.then22 ], [ %spec.select, %if.else24 ]
  %use_uc.0.off0 = phi i1 [ false, %if.then22 ], [ %tobool27.not, %if.else24 ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !615
  tail call void @arm_heavy_mb() #14
  %12 = tail call i32 @llvm.bswap.i32(i32 %rctl.2)
  %13 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hw1, align 4
  %add.ptr36 = getelementptr i8, ptr %14, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr36, i32 %12) #14, !srcloc !421
  %15 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp38 = icmp eq i32 %16, 1
  br i1 %cmp38, label %if.then39, label %do.body.if.end40_crit_edge

do.body.if.end40_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.then39:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @e1000_enter_82542_rst(ptr noundef %add.ptr.i)
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %do.body.if.end40_crit_edge
  br i1 %use_uc.0.off0, label %for.cond.preheader, label %if.end40.if.end58_crit_edge

if.end40.if.end58_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.cond.preheader:                               ; preds = %if.end40
  %17 = ptrtoint ptr %uc to i32
  call void @__asan_load4_noabort(i32 %17)
  %ha.0244 = load ptr, ptr %uc, align 4
  %cmp49.not245 = icmp eq ptr %ha.0244, %uc
  br i1 %cmp49.not245, label %for.cond.preheader.if.end58_crit_edge, label %for.body.preheader

for.cond.preheader.if.end58_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.preheader:                               ; preds = %for.cond.preheader
  %addr = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0244, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr, i32 noundef 1) #14
  %18 = ptrtoint ptr %ha.0244 to i32
  call void @__asan_load4_noabort(i32 %18)
  %ha.0 = load ptr, ptr %ha.0244, align 4
  %cmp49.not = icmp eq ptr %ha.0, %uc
  br i1 %cmp49.not, label %for.body.preheader.if.end58_crit_edge, label %for.body.1

for.body.preheader.if.end58_crit_edge:            ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.1:                                       ; preds = %for.body.preheader
  %addr.1 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.1, i32 noundef 2) #14
  %19 = ptrtoint ptr %ha.0 to i32
  call void @__asan_load4_noabort(i32 %19)
  %ha.0.1 = load ptr, ptr %ha.0, align 4
  %cmp49.not.1 = icmp eq ptr %ha.0.1, %uc
  br i1 %cmp49.not.1, label %for.body.1.if.end58_crit_edge, label %for.body.2

for.body.1.if.end58_crit_edge:                    ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.2:                                       ; preds = %for.body.1
  %addr.2 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.1, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.2, i32 noundef 3) #14
  %20 = ptrtoint ptr %ha.0.1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %ha.0.2 = load ptr, ptr %ha.0.1, align 4
  %cmp49.not.2 = icmp eq ptr %ha.0.2, %uc
  br i1 %cmp49.not.2, label %for.body.2.if.end58_crit_edge, label %for.body.3

for.body.2.if.end58_crit_edge:                    ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.3:                                       ; preds = %for.body.2
  %addr.3 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.2, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.3, i32 noundef 4) #14
  %21 = ptrtoint ptr %ha.0.2 to i32
  call void @__asan_load4_noabort(i32 %21)
  %ha.0.3 = load ptr, ptr %ha.0.2, align 4
  %cmp49.not.3 = icmp eq ptr %ha.0.3, %uc
  br i1 %cmp49.not.3, label %for.body.3.if.end58_crit_edge, label %for.body.4

for.body.3.if.end58_crit_edge:                    ; preds = %for.body.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.4:                                       ; preds = %for.body.3
  %addr.4 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.3, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.4, i32 noundef 5) #14
  %22 = ptrtoint ptr %ha.0.3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %ha.0.4 = load ptr, ptr %ha.0.3, align 4
  %cmp49.not.4 = icmp eq ptr %ha.0.4, %uc
  br i1 %cmp49.not.4, label %for.body.4.if.end58_crit_edge, label %for.body.5

for.body.4.if.end58_crit_edge:                    ; preds = %for.body.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.5:                                       ; preds = %for.body.4
  %addr.5 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.4, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.5, i32 noundef 6) #14
  %23 = ptrtoint ptr %ha.0.4 to i32
  call void @__asan_load4_noabort(i32 %23)
  %ha.0.5 = load ptr, ptr %ha.0.4, align 4
  %cmp49.not.5 = icmp eq ptr %ha.0.5, %uc
  br i1 %cmp49.not.5, label %for.body.5.if.end58_crit_edge, label %for.body.6

for.body.5.if.end58_crit_edge:                    ; preds = %for.body.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.6:                                       ; preds = %for.body.5
  %addr.6 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.5, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.6, i32 noundef 7) #14
  %24 = ptrtoint ptr %ha.0.5 to i32
  call void @__asan_load4_noabort(i32 %24)
  %ha.0.6 = load ptr, ptr %ha.0.5, align 4
  %cmp49.not.6 = icmp eq ptr %ha.0.6, %uc
  br i1 %cmp49.not.6, label %for.body.6.if.end58_crit_edge, label %for.body.7

for.body.6.if.end58_crit_edge:                    ; preds = %for.body.6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.7:                                       ; preds = %for.body.6
  %addr.7 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.6, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.7, i32 noundef 8) #14
  %25 = ptrtoint ptr %ha.0.6 to i32
  call void @__asan_load4_noabort(i32 %25)
  %ha.0.7 = load ptr, ptr %ha.0.6, align 4
  %cmp49.not.7 = icmp eq ptr %ha.0.7, %uc
  br i1 %cmp49.not.7, label %for.body.7.if.end58_crit_edge, label %for.body.8

for.body.7.if.end58_crit_edge:                    ; preds = %for.body.7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.8:                                       ; preds = %for.body.7
  %addr.8 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.7, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.8, i32 noundef 9) #14
  %26 = ptrtoint ptr %ha.0.7 to i32
  call void @__asan_load4_noabort(i32 %26)
  %ha.0.8 = load ptr, ptr %ha.0.7, align 4
  %cmp49.not.8 = icmp eq ptr %ha.0.8, %uc
  br i1 %cmp49.not.8, label %for.body.8.if.end58_crit_edge, label %for.body.9

for.body.8.if.end58_crit_edge:                    ; preds = %for.body.8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.9:                                       ; preds = %for.body.8
  %addr.9 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.8, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.9, i32 noundef 10) #14
  %27 = ptrtoint ptr %ha.0.8 to i32
  call void @__asan_load4_noabort(i32 %27)
  %ha.0.9 = load ptr, ptr %ha.0.8, align 4
  %cmp49.not.9 = icmp eq ptr %ha.0.9, %uc
  br i1 %cmp49.not.9, label %for.body.9.if.end58_crit_edge, label %for.body.10

for.body.9.if.end58_crit_edge:                    ; preds = %for.body.9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.10:                                      ; preds = %for.body.9
  %addr.10 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.9, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.10, i32 noundef 11) #14
  %28 = ptrtoint ptr %ha.0.9 to i32
  call void @__asan_load4_noabort(i32 %28)
  %ha.0.10 = load ptr, ptr %ha.0.9, align 4
  %cmp49.not.10 = icmp eq ptr %ha.0.10, %uc
  br i1 %cmp49.not.10, label %for.body.10.if.end58_crit_edge, label %for.body.11

for.body.10.if.end58_crit_edge:                   ; preds = %for.body.10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.11:                                      ; preds = %for.body.10
  %addr.11 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.10, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.11, i32 noundef 12) #14
  %29 = ptrtoint ptr %ha.0.10 to i32
  call void @__asan_load4_noabort(i32 %29)
  %ha.0.11 = load ptr, ptr %ha.0.10, align 4
  %cmp49.not.11 = icmp eq ptr %ha.0.11, %uc
  br i1 %cmp49.not.11, label %for.body.11.if.end58_crit_edge, label %for.body.12

for.body.11.if.end58_crit_edge:                   ; preds = %for.body.11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.12:                                      ; preds = %for.body.11
  %addr.12 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.11, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.12, i32 noundef 13) #14
  %30 = ptrtoint ptr %ha.0.11 to i32
  call void @__asan_load4_noabort(i32 %30)
  %ha.0.12 = load ptr, ptr %ha.0.11, align 4
  %cmp49.not.12 = icmp eq ptr %ha.0.12, %uc
  br i1 %cmp49.not.12, label %for.body.12.if.end58_crit_edge, label %for.body.13

for.body.12.if.end58_crit_edge:                   ; preds = %for.body.12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.body.13:                                      ; preds = %for.body.12
  call void @__sanitizer_cov_trace_pc() #16
  %addr.13 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0.12, i32 0, i32 2
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr.13, i32 noundef 14) #14
  br label %if.end58

if.end58:                                         ; preds = %for.body.13, %for.body.12.if.end58_crit_edge, %for.body.11.if.end58_crit_edge, %for.body.10.if.end58_crit_edge, %for.body.9.if.end58_crit_edge, %for.body.8.if.end58_crit_edge, %for.body.7.if.end58_crit_edge, %for.body.6.if.end58_crit_edge, %for.body.5.if.end58_crit_edge, %for.body.4.if.end58_crit_edge, %for.body.3.if.end58_crit_edge, %for.body.2.if.end58_crit_edge, %for.body.1.if.end58_crit_edge, %for.body.preheader.if.end58_crit_edge, %for.cond.preheader.if.end58_crit_edge, %if.end40.if.end58_crit_edge
  %i.1 = phi i32 [ 1, %if.end40.if.end58_crit_edge ], [ 1, %for.cond.preheader.if.end58_crit_edge ], [ 2, %for.body.preheader.if.end58_crit_edge ], [ 3, %for.body.1.if.end58_crit_edge ], [ 4, %for.body.2.if.end58_crit_edge ], [ 5, %for.body.3.if.end58_crit_edge ], [ 6, %for.body.4.if.end58_crit_edge ], [ 7, %for.body.5.if.end58_crit_edge ], [ 8, %for.body.6.if.end58_crit_edge ], [ 9, %for.body.7.if.end58_crit_edge ], [ 10, %for.body.8.if.end58_crit_edge ], [ 11, %for.body.9.if.end58_crit_edge ], [ 12, %for.body.10.if.end58_crit_edge ], [ 13, %for.body.11.if.end58_crit_edge ], [ 14, %for.body.12.if.end58_crit_edge ], [ 15, %for.body.13 ]
  %mc = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 66
  %31 = ptrtoint ptr %mc to i32
  call void @__asan_load4_noabort(i32 %31)
  %ha.1249 = load ptr, ptr %mc, align 4
  %cmp68.not250 = icmp eq ptr %ha.1249, %mc
  br i1 %cmp68.not250, label %if.end58.for.cond91.preheader_crit_edge, label %if.end58.for.body70_crit_edge

if.end58.for.body70_crit_edge:                    ; preds = %if.end58
  br label %for.body70

if.end58.for.cond91.preheader_crit_edge:          ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond91.preheader

for.cond91.preheader:                             ; preds = %for.inc84.for.cond91.preheader_crit_edge, %if.end58.for.cond91.preheader_crit_edge
  %i.2.lcssa = phi i32 [ %i.1, %if.end58.for.cond91.preheader_crit_edge ], [ %i.3, %for.inc84.for.cond91.preheader_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %i.2.lcssa)
  %cmp92254 = icmp slt i32 %i.2.lcssa, 15
  br i1 %cmp92254, label %for.cond91.preheader.do.body94_crit_edge, label %for.cond91.preheader.do.body143.preheader_crit_edge

for.cond91.preheader.do.body143.preheader_crit_edge: ; preds = %for.cond91.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body143.preheader

for.cond91.preheader.do.body94_crit_edge:         ; preds = %for.cond91.preheader
  br label %do.body94

for.body70:                                       ; preds = %for.inc84.for.body70_crit_edge, %if.end58.for.body70_crit_edge
  %ha.1252 = phi ptr [ %ha.1, %for.inc84.for.body70_crit_edge ], [ %ha.1249, %if.end58.for.body70_crit_edge ]
  %i.2251 = phi i32 [ %i.3, %for.inc84.for.body70_crit_edge ], [ %i.1, %if.end58.for.body70_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %i.2251)
  %cmp71 = icmp eq i32 %i.2251, 15
  %addr73 = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.1252, i32 0, i32 2
  br i1 %cmp71, label %if.then72, label %if.else79

if.then72:                                        ; preds = %for.body70
  call void @__sanitizer_cov_trace_pc() #16
  %call75 = tail call i32 @e1000_hash_mc_addr(ptr noundef %hw1, ptr noundef %addr73) #14
  %shr = lshr i32 %call75, 5
  %and76 = and i32 %shr, 127
  %and77 = and i32 %call75, 31
  %shl = shl nuw i32 1, %and77
  %arrayidx = getelementptr i32, ptr %call7.i.i.i, i32 %and76
  %32 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx, align 4
  %or78 = or i32 %shl, %33
  store i32 %or78, ptr %arrayidx, align 4
  br label %for.inc84

if.else79:                                        ; preds = %for.body70
  call void @__sanitizer_cov_trace_pc() #16
  %inc82 = add i32 %i.2251, 1
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %addr73, i32 noundef %i.2251) #14
  br label %for.inc84

for.inc84:                                        ; preds = %if.else79, %if.then72
  %i.3 = phi i32 [ 15, %if.then72 ], [ %inc82, %if.else79 ]
  %34 = ptrtoint ptr %ha.1252 to i32
  call void @__asan_load4_noabort(i32 %34)
  %ha.1 = load ptr, ptr %ha.1252, align 4
  %cmp68.not = icmp eq ptr %ha.1, %mc
  br i1 %cmp68.not, label %for.inc84.for.cond91.preheader_crit_edge, label %for.inc84.for.body70_crit_edge

for.inc84.for.body70_crit_edge:                   ; preds = %for.inc84
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body70

for.inc84.for.cond91.preheader_crit_edge:         ; preds = %for.inc84
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond91.preheader

do.body94:                                        ; preds = %do.body94.do.body94_crit_edge, %for.cond91.preheader.do.body94_crit_edge
  %i.4255 = phi i32 [ %inc137, %do.body94.do.body94_crit_edge ], [ %i.2.lcssa, %for.cond91.preheader.do.body94_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !616
  tail call void @arm_heavy_mb() #14
  %35 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %hw1, align 4
  %37 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %38)
  %cmp99 = icmp ugt i32 %38, 2
  %cond100 = select i1 %cmp99, i32 21504, i32 64
  %add.ptr101 = getelementptr i8, ptr %36, i32 %cond100
  %shl102 = shl i32 %i.4255, 3
  %add.ptr104 = getelementptr i8, ptr %add.ptr101, i32 %shl102
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr104, i32 0) #14, !srcloc !421
  %39 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw1, align 4
  %add.ptr111 = getelementptr i8, ptr %40, i32 8
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr111) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !617
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !618
  tail call void @arm_heavy_mb() #14
  %42 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hw1, align 4
  %44 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %45)
  %cmp120 = icmp ugt i32 %45, 2
  %cond121 = select i1 %cmp120, i32 21504, i32 64
  %add.ptr122 = getelementptr i8, ptr %43, i32 %cond121
  %add = or i32 %shl102, 4
  %add.ptr125 = getelementptr i8, ptr %add.ptr122, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr125, i32 0) #14, !srcloc !421
  %46 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hw1, align 4
  %add.ptr132 = getelementptr i8, ptr %47, i32 8
  %48 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr132) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !619
  %inc137 = add i32 %i.4255, 1
  %exitcond.not = icmp eq i32 %inc137, 15
  br i1 %exitcond.not, label %do.body94.do.body143.preheader_crit_edge, label %do.body94.do.body94_crit_edge

do.body94.do.body94_crit_edge:                    ; preds = %do.body94
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body94

do.body94.do.body143.preheader_crit_edge:         ; preds = %do.body94
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body143.preheader

do.body143.preheader:                             ; preds = %do.body94.do.body143.preheader_crit_edge, %for.cond91.preheader.do.body143.preheader_crit_edge
  br label %do.body143

do.body143:                                       ; preds = %do.body143.do.body143_crit_edge, %do.body143.preheader
  %i.5256 = phi i32 [ %dec, %do.body143.do.body143_crit_edge ], [ 127, %do.body143.preheader ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !620
  tail call void @arm_heavy_mb() #14
  %arrayidx146 = getelementptr i32, ptr %call7.i.i.i, i32 %i.5256
  %49 = ptrtoint ptr %arrayidx146 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx146, align 4
  %51 = tail call i32 @llvm.bswap.i32(i32 %50)
  %52 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %hw1, align 4
  %54 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %55)
  %cmp149 = icmp ugt i32 %55, 2
  %cond150 = select i1 %cmp149, i32 20992, i32 512
  %add.ptr151 = getelementptr i8, ptr %53, i32 %cond150
  %shl152 = shl i32 %i.5256, 2
  %add.ptr153 = getelementptr i8, ptr %add.ptr151, i32 %shl152
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr153, i32 %51) #14, !srcloc !421
  %dec = add nsw i32 %i.5256, -1
  %cmp141.not = icmp eq i32 %i.5256, 0
  br i1 %cmp141.not, label %for.end155, label %do.body143.do.body143_crit_edge

do.body143.do.body143_crit_edge:                  ; preds = %do.body143
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body143

for.end155:                                       ; preds = %do.body143
  %56 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hw1, align 4
  %add.ptr162 = getelementptr i8, ptr %57, i32 8
  %58 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr162) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !621
  %59 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %60)
  %cmp167 = icmp eq i32 %60, 1
  br i1 %cmp167, label %if.then168, label %for.end155.if.end169_crit_edge

for.end155.if.end169_crit_edge:                   ; preds = %for.end155
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end169

if.then168:                                       ; preds = %for.end155
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @e1000_leave_82542_rst(ptr noundef %add.ptr.i)
  br label %if.end169

if.end169:                                        ; preds = %if.then168, %for.end155.if.end169_crit_edge
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end169, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_set_mac(ptr noundef %netdev, ptr noundef %p) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1 = getelementptr i8, ptr %netdev, i32 3296
  %sa_data = getelementptr inbounds %struct.sockaddr, ptr %p, i32 0, i32 1
  %0 = ptrtoint ptr %sa_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sa_data, align 4
  %2 = and i32 %1, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not.i = icmp eq i32 %2, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

is_valid_ether_addr.exit:                         ; preds = %entry
  %add.ptr.i.i = getelementptr %struct.sockaddr, ptr %p, i32 0, i32 1, i32 4
  %3 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %4 to i32
  %or.i.i = or i32 %1, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.cleanup_crit_edge, label %if.end

is_valid_ether_addr.exit.cleanup_crit_edge:       ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %is_valid_ether_addr.exit
  %mac_type = getelementptr i8, ptr %netdev, i32 3308
  %5 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp = icmp eq i32 %6, 1
  br i1 %cmp, label %if.then3, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @e1000_enter_82542_rst(ptr noundef %add.ptr.i)
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end.if.end4_crit_edge
  tail call void @dev_addr_mod(ptr noundef %netdev, i32 noundef 0, ptr noundef %sa_data, i32 noundef 6) #14
  %mac_addr = getelementptr i8, ptr %netdev, i32 3512
  %addr_len = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 56
  %7 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %addr_len, align 1
  %conv = zext i8 %8 to i32
  %9 = call ptr @memcpy(ptr %mac_addr, ptr %sa_data, i32 %conv)
  tail call void @e1000_rar_set(ptr noundef %hw1, ptr noundef %mac_addr, i32 noundef 0) #14
  %10 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp13 = icmp eq i32 %11, 1
  br i1 %cmp13, label %if.then15, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then15:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @e1000_leave_82542_rst(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %if.then15, %if.end4.cleanup_crit_edge, %is_valid_ether_addr.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -99, %is_valid_ether_addr.exit.cleanup_crit_edge ], [ 0, %if.then15 ], [ 0, %if.end4.cleanup_crit_edge ], [ -99, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_validate_addr(ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_ioctl(ptr noundef %netdev, ptr noundef %ifr, i32 noundef %cmd) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %cmd.off = add i32 %cmd, -35143
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %cmd.off)
  %switch = icmp ult i32 %cmd.off, 3
  br i1 %switch, label %sw.bb, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

sw.bb:                                            ; preds = %entry
  %add.ptr.i.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1.i = getelementptr i8, ptr %netdev, i32 3296
  %ifr_ifru.i.i = getelementptr inbounds %struct.ifreq, ptr %ifr, i32 0, i32 1
  %media_type.i = getelementptr i8, ptr %netdev, i32 3320
  %0 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not.i = icmp eq i32 %1, 0
  br i1 %cmp.not.i, label %if.end.i, label %sw.bb.return_crit_edge

sw.bb.return_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.i:                                         ; preds = %sw.bb
  %2 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.231)
  switch i32 %cmd, label %if.end.i.return_crit_edge [
    i32 35143, label %sw.bb.i
    i32 35144, label %do.body5.i
    i32 35145, label %sw.bb18.i
  ]

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

sw.bb.i:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %phy_addr.i = getelementptr i8, ptr %netdev, i32 3404
  %3 = ptrtoint ptr %phy_addr.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %phy_addr.i, align 4
  %conv.i = trunc i32 %4 to i16
  %5 = ptrtoint ptr %ifr_ifru.i.i to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv.i, ptr %ifr_ifru.i.i, align 2
  br label %sw.epilog110.i

do.body5.i:                                       ; preds = %if.end.i
  %stats_lock.i = getelementptr i8, ptr %netdev, i32 2844
  %call9.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %stats_lock.i) #14
  %reg_num.i = getelementptr inbounds %struct.mii_ioctl_data, ptr %ifr_ifru.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %reg_num.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %reg_num.i, align 2
  %8 = and i16 %7, 31
  %and.i = zext i16 %8 to i32
  %val_out.i = getelementptr inbounds %struct.mii_ioctl_data, ptr %ifr_ifru.i.i, i32 0, i32 3
  %call13.i = tail call i32 @e1000_read_phy_reg(ptr noundef %hw1.i, i32 noundef %and.i, ptr noundef %val_out.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool.not.i = icmp eq i32 %call13.i, 0
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %stats_lock.i, i32 noundef %call9.i) #14
  br i1 %tobool.not.i, label %do.body5.i.sw.epilog110.i_crit_edge, label %do.body5.i.return_crit_edge

do.body5.i.return_crit_edge:                      ; preds = %do.body5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

do.body5.i.sw.epilog110.i_crit_edge:              ; preds = %do.body5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog110.i

sw.bb18.i:                                        ; preds = %if.end.i
  %reg_num19.i = getelementptr inbounds %struct.mii_ioctl_data, ptr %ifr_ifru.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %reg_num19.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %reg_num19.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 32, i16 %10)
  %tobool22.not.i = icmp ult i16 %10, 32
  br i1 %tobool22.not.i, label %if.end24.i, label %sw.bb18.i.return_crit_edge

sw.bb18.i.return_crit_edge:                       ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end24.i:                                       ; preds = %sw.bb18.i
  %val_in.i = getelementptr inbounds %struct.ifreq, ptr %ifr, i32 0, i32 1, i32 0, i32 1
  %11 = ptrtoint ptr %val_in.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %val_in.i, align 2
  %stats_lock32.i = getelementptr i8, ptr %netdev, i32 2844
  %call34.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %stats_lock32.i) #14
  %13 = ptrtoint ptr %reg_num19.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %reg_num19.i, align 2
  %conv40.i = zext i16 %14 to i32
  %call41.i = tail call i32 @e1000_write_phy_reg(ptr noundef %hw1.i, i32 noundef %conv40.i, i16 noundef zeroext %12) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41.i)
  %tobool42.not.i = icmp eq i32 %call41.i, 0
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %stats_lock32.i, i32 noundef %call34.i) #14
  br i1 %tobool42.not.i, label %if.end45.i, label %if.end24.i.return_crit_edge

if.end24.i.return_crit_edge:                      ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end45.i:                                       ; preds = %if.end24.i
  %15 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp48.i = icmp eq i32 %16, 0
  %17 = ptrtoint ptr %reg_num19.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %reg_num19.i, align 2
  br i1 %cmp48.i, label %if.then50.i, label %if.else94.i

if.then50.i:                                      ; preds = %if.end45.i
  %19 = zext i16 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.232)
  switch i16 %18, label %if.then50.i.sw.epilog110.i_crit_edge [
    i16 0, label %sw.bb53.i
    i16 16, label %if.then50.i.sw.bb89.i_crit_edge
    i16 20, label %if.then50.i.sw.bb89.i_crit_edge12
  ]

if.then50.i.sw.bb89.i_crit_edge12:                ; preds = %if.then50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb89.i

if.then50.i.sw.bb89.i_crit_edge:                  ; preds = %if.then50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb89.i

if.then50.i.sw.epilog110.i_crit_edge:             ; preds = %if.then50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog110.i

sw.bb53.i:                                        ; preds = %if.then50.i
  %conv54.i = zext i16 %12 to i32
  %and55.i = and i32 %conv54.i, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and55.i)
  %tobool56.not.i = icmp eq i32 %and55.i, 0
  br i1 %tobool56.not.i, label %if.end58.i, label %sw.bb53.i.sw.epilog110.i_crit_edge

sw.bb53.i.sw.epilog110.i_crit_edge:               ; preds = %sw.bb53.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog110.i

if.end58.i:                                       ; preds = %sw.bb53.i
  %and60.i = and i32 %conv54.i, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and60.i)
  %tobool61.not.i = icmp eq i32 %and60.i, 0
  br i1 %tobool61.not.i, label %if.else.i, label %if.then62.i

if.then62.i:                                      ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #16
  %autoneg.i = getelementptr i8, ptr %netdev, i32 3507
  %20 = ptrtoint ptr %autoneg.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 1, ptr %autoneg.i, align 1
  %autoneg_advertised.i = getelementptr i8, ptr %netdev, i32 3478
  %21 = ptrtoint ptr %autoneg_advertised.i to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 47, ptr %autoneg_advertised.i, align 2
  br label %if.end83.i

if.else.i:                                        ; preds = %if.end58.i
  %and64.i = and i32 %conv54.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and64.i)
  %tobool65.not.i = icmp eq i32 %and64.i, 0
  %and69.i = and i32 %conv54.i, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69.i)
  %tobool70.not.i = icmp eq i32 %and69.i, 0
  %..i = select i1 %tobool70.not.i, i32 10, i32 100
  %speed.0.i = select i1 %tobool65.not.i, i32 %..i, i32 1000
  %and76.i = lshr i16 %12, 8
  %22 = trunc i16 %and76.i to i8
  %23 = and i8 %22, 1
  %autoneg.i2 = getelementptr i8, ptr %netdev, i32 3507
  %24 = ptrtoint ptr %autoneg.i2 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %autoneg.i2, align 1
  %25 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %26)
  %cmp.i = icmp ne i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %speed.0.i)
  %cmp5.not.i = icmp eq i32 %speed.0.i, 1000
  %or.cond.i5 = or i1 %cmp5.not.i, %cmp.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %cmp9.not.i = icmp ne i8 %23, 0
  %or.cond41.i = or i1 %cmp9.not.i, %or.cond.i5
  br i1 %or.cond41.i, label %if.end12.i, label %if.else.i.do.body.i_crit_edge

if.else.i.do.body.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

if.end12.i:                                       ; preds = %if.else.i
  %conv.i3 = zext i8 %23 to i32
  %add.i = or i32 %speed.0.i, %conv.i3
  %27 = zext i32 %add.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.233)
  switch i32 %add.i, label %if.end12.i.do.body.i_crit_edge [
    i32 10, label %sw.bb.i7
    i32 11, label %sw.bb14.i
    i32 100, label %sw.bb16.i
    i32 101, label %sw.bb18.i8
    i32 1001, label %sw.bb20.i
  ]

if.end12.i.do.body.i_crit_edge:                   ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

sw.bb.i7:                                         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  %forced_speed_duplex.i = getelementptr i8, ptr %netdev, i32 3509
  %28 = ptrtoint ptr %forced_speed_duplex.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %forced_speed_duplex.i, align 1
  br label %e1000_set_spd_dplx.exit

sw.bb14.i:                                        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  %forced_speed_duplex15.i = getelementptr i8, ptr %netdev, i32 3509
  %29 = ptrtoint ptr %forced_speed_duplex15.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 1, ptr %forced_speed_duplex15.i, align 1
  br label %e1000_set_spd_dplx.exit

sw.bb16.i:                                        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  %forced_speed_duplex17.i = getelementptr i8, ptr %netdev, i32 3509
  %30 = ptrtoint ptr %forced_speed_duplex17.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 2, ptr %forced_speed_duplex17.i, align 1
  br label %e1000_set_spd_dplx.exit

sw.bb18.i8:                                       ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  %forced_speed_duplex19.i = getelementptr i8, ptr %netdev, i32 3509
  %31 = ptrtoint ptr %forced_speed_duplex19.i to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 3, ptr %forced_speed_duplex19.i, align 1
  br label %e1000_set_spd_dplx.exit

sw.bb20.i:                                        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  %32 = ptrtoint ptr %autoneg.i2 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 1, ptr %autoneg.i2, align 1
  %autoneg_advertised.i9 = getelementptr i8, ptr %netdev, i32 3478
  %33 = ptrtoint ptr %autoneg_advertised.i9 to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 32, ptr %autoneg_advertised.i9, align 2
  br label %e1000_set_spd_dplx.exit

do.body.i:                                        ; preds = %if.end12.i.do.body.i_crit_edge, %if.else.i.do.body.i_crit_edge
  %msg_enable.i = getelementptr i8, ptr %netdev, i32 4232
  %34 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %msg_enable.i, align 8
  %and23.i = and i32 %35, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i)
  %tobool24.not.i = icmp eq i32 %and23.i, 0
  br i1 %tobool24.not.i, label %do.body.i.return_crit_edge, label %if.then25.i

do.body.i.return_crit_edge:                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.then25.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %netdev.i = getelementptr i8, ptr %netdev, i32 3288
  %36 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %netdev.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %37, ptr noundef nonnull @.str.8) #17
  br label %return

e1000_set_spd_dplx.exit:                          ; preds = %sw.bb20.i, %sw.bb18.i8, %sw.bb16.i, %sw.bb14.i, %sw.bb.i7
  %mdix.i = getelementptr i8, ptr %netdev, i32 3508
  %38 = ptrtoint ptr %mdix.i to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 0, ptr %mdix.i, align 4
  br label %if.end83.i

if.end83.i:                                       ; preds = %e1000_set_spd_dplx.exit, %if.then62.i
  %netdev84.i = getelementptr i8, ptr %netdev, i32 3288
  %39 = ptrtoint ptr %netdev84.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %netdev84.i, align 8
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %40, i32 0, i32 6
  %41 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %if.else87.i, label %if.then86.i

if.then86.i:                                      ; preds = %if.end83.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_reinit_locked(ptr noundef %add.ptr.i.i) #14
  br label %sw.epilog110.i

if.else87.i:                                      ; preds = %if.end83.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_reset(ptr noundef %add.ptr.i.i) #14
  br label %sw.epilog110.i

sw.bb89.i:                                        ; preds = %if.then50.i.sw.bb89.i_crit_edge, %if.then50.i.sw.bb89.i_crit_edge12
  %call90.i = tail call i32 @e1000_phy_reset(ptr noundef %hw1.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call90.i)
  %tobool91.not.i = icmp eq i32 %call90.i, 0
  br i1 %tobool91.not.i, label %sw.bb89.i.sw.epilog110.i_crit_edge, label %sw.bb89.i.return_crit_edge

sw.bb89.i.return_crit_edge:                       ; preds = %sw.bb89.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

sw.bb89.i.sw.epilog110.i_crit_edge:               ; preds = %sw.bb89.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog110.i

if.else94.i:                                      ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %cond117.i = icmp eq i16 %18, 0
  %43 = and i16 %12, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %43)
  %tobool100.not.i = icmp eq i16 %43, 0
  %or.cond.i = select i1 %cond117.i, i1 %tobool100.not.i, i1 false
  br i1 %or.cond.i, label %if.end102.i, label %if.else94.i.sw.epilog110.i_crit_edge

if.else94.i.sw.epilog110.i_crit_edge:             ; preds = %if.else94.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog110.i

if.end102.i:                                      ; preds = %if.else94.i
  %netdev103.i = getelementptr i8, ptr %netdev, i32 3288
  %44 = ptrtoint ptr %netdev103.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %netdev103.i, align 8
  %state.i156.i = getelementptr inbounds %struct.net_device, ptr %45, i32 0, i32 6
  %46 = ptrtoint ptr %state.i156.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %state.i156.i, align 4
  %and1.i.i157.i = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i157.i)
  %tobool.i158.not.i = icmp eq i32 %and1.i.i157.i, 0
  br i1 %tobool.i158.not.i, label %if.else106.i, label %if.then105.i

if.then105.i:                                     ; preds = %if.end102.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_reinit_locked(ptr noundef %add.ptr.i.i) #14
  br label %sw.epilog110.i

if.else106.i:                                     ; preds = %if.end102.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_reset(ptr noundef %add.ptr.i.i) #14
  br label %sw.epilog110.i

sw.epilog110.i:                                   ; preds = %if.else106.i, %if.then105.i, %if.else94.i.sw.epilog110.i_crit_edge, %sw.bb89.i.sw.epilog110.i_crit_edge, %if.else87.i, %if.then86.i, %sw.bb53.i.sw.epilog110.i_crit_edge, %if.then50.i.sw.epilog110.i_crit_edge, %do.body5.i.sw.epilog110.i_crit_edge, %sw.bb.i
  br label %return

return:                                           ; preds = %sw.epilog110.i, %sw.bb89.i.return_crit_edge, %if.then25.i, %do.body.i.return_crit_edge, %if.end24.i.return_crit_edge, %sw.bb18.i.return_crit_edge, %do.body5.i.return_crit_edge, %if.end.i.return_crit_edge, %sw.bb.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -95, %entry.return_crit_edge ], [ 0, %sw.epilog110.i ], [ -95, %sw.bb.return_crit_edge ], [ -14, %sw.bb18.i.return_crit_edge ], [ -5, %sw.bb89.i.return_crit_edge ], [ -95, %if.end.i.return_crit_edge ], [ -5, %do.body5.i.return_crit_edge ], [ -5, %if.end24.i.return_crit_edge ], [ -22, %if.then25.i ], [ -22, %do.body.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_change_mtu(ptr noundef %netdev, i32 noundef %new_mtu) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %add2 = add i32 %new_mtu, 18
  %mac_type = getelementptr i8, ptr %netdev, i32 3308
  %0 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %switch = icmp ult i32 %1, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1518, i32 %add2)
  %cmp = icmp sgt i32 %add2, 1518
  %or.cond = and i1 %cmp, %switch
  br i1 %or.cond, label %do.body, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  %flags = getelementptr i8, ptr %netdev, i32 4240
  %call671 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %flags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call671)
  %tobool7.not72 = icmp eq i32 %call671, 0
  br i1 %tobool7.not72, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

do.body:                                          ; preds = %entry
  %msg_enable = getelementptr i8, ptr %netdev, i32 4232
  %2 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %msg_enable, align 8
  %and = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body.cleanup_crit_edge, label %if.then3

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %netdev4 = getelementptr i8, ptr %netdev, i32 3288
  %4 = ptrtoint ptr %netdev4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %netdev4, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %5, ptr noundef nonnull @.str.60) #17
  br label %cleanup

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  tail call void @msleep(i32 noundef 1) #14
  %call6 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %flags) #14
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %max_frame_size = getelementptr i8, ptr %netdev, i32 3420
  %6 = ptrtoint ptr %max_frame_size to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %add2, ptr %max_frame_size, align 4
  %state.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 6
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %while.end.if.end10_crit_edge, label %if.then9

while.end.if.end10_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.then9:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %alloc_rx_buf = getelementptr i8, ptr %netdev, i32 3000
  %9 = ptrtoint ptr %alloc_rx_buf to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @e1000_alloc_dummy_rx_buffers, ptr %alloc_rx_buf, align 8
  tail call void @e1000_down(ptr noundef %add.ptr.i)
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %while.end.if.end10_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %add2)
  %cmp11.inv = icmp sgt i32 %add2, 2048
  %spec.select = select i1 %cmp11.inv, i32 4096, i32 2048
  %10 = getelementptr i8, ptr %netdev, i32 2824
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %spec.select, ptr %10, align 8
  %tbi_compatibility_on = getelementptr i8, ptr %netdev, i32 3539
  %12 = ptrtoint ptr %tbi_compatibility_on to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %tbi_compatibility_on, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool15.not = icmp eq i8 %13, 0
  br i1 %tobool15.not, label %land.lhs.true, label %if.end10.do.body22_crit_edge

if.end10.do.body22_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body22

land.lhs.true:                                    ; preds = %if.end10
  %14 = zext i32 %new_mtu to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.234)
  switch i32 %new_mtu, label %land.lhs.true.do.body22_crit_edge [
    i32 1500, label %land.lhs.true.if.then18_crit_edge
    i32 1504, label %land.lhs.true.if.then18_crit_edge73
  ]

land.lhs.true.if.then18_crit_edge73:              ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18

land.lhs.true.if.then18_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18

land.lhs.true.do.body22_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body22

if.then18:                                        ; preds = %land.lhs.true.if.then18_crit_edge, %land.lhs.true.if.then18_crit_edge73
  %15 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 1522, ptr %10, align 8
  br label %do.body22

do.body22:                                        ; preds = %if.then18, %land.lhs.true.do.body22_crit_edge, %if.end10.do.body22_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_change_mtu.__UNIQUE_ID_ddebug563, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_change_mtu, %if.then27)) #14
          to label %do.end32 [label %if.then27], !srcloc !622

if.then27:                                        ; preds = %do.body22
  call void @__sanitizer_cov_trace_pc() #16
  %mtu = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 20
  %16 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mtu, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_change_mtu.__UNIQUE_ID_ddebug563, ptr noundef %netdev, ptr noundef nonnull @.str.62, i32 noundef %17, i32 noundef %new_mtu) #14
  br label %do.end32

do.end32:                                         ; preds = %if.then27, %do.body22
  %mtu33 = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 20
  %18 = ptrtoint ptr %mtu33 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %new_mtu, ptr %mtu33, align 4
  %19 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %state.i, align 4
  %and1.i.i67 = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i67)
  %tobool.i68.not = icmp eq i32 %and1.i.i67, 0
  br i1 %tobool.i68.not, label %if.else37, label %if.then35

if.then35:                                        ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #16
  %hw1.i = getelementptr i8, ptr %netdev, i32 3296
  tail call fastcc void @e1000_configure(ptr noundef %add.ptr.i) #14
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %flags) #14
  %napi.i = getelementptr i8, ptr %netdev, i32 3008
  tail call void @napi_enable(ptr noundef %napi.i) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  tail call void @arm_heavy_mb() #14
  %21 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %22, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 -1660944384) #14, !srcloc !421
  %23 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %hw1.i, align 4
  %add.ptr6.i.i = getelementptr i8, ptr %24, i32 8
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  %netdev.i = getelementptr i8, ptr %netdev, i32 3288
  %26 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %netdev.i, align 8
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %27, i32 0, i32 103
  %28 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %_tx.i.i.i, align 128
  tail call void @netif_tx_wake_queue(ptr noundef %29) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !424
  tail call void @arm_heavy_mb() #14
  %30 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i69 = getelementptr i8, ptr %31, i32 200
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i69, i32 67108864) #14, !srcloc !421
  br label %if.end38

if.else37:                                        ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_reset(ptr noundef %add.ptr.i)
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then35
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %flags) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %if.then3, %do.body.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end38 ], [ -22, %if.then3 ], [ -22, %do.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_tx_timeout(ptr noundef %netdev, i32 noundef %txqueue) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tx_timeout_count = getelementptr i8, ptr %netdev, i32 2968
  %0 = ptrtoint ptr %tx_timeout_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tx_timeout_count, align 8
  %inc = add i32 %1, 1
  store i32 %inc, ptr %tx_timeout_count, align 8
  %reset_task = getelementptr i8, ptr %netdev, i32 4260
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %2 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %2, ptr noundef %reset_task) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_vlan_rx_add_vid(ptr noundef %netdev, i16 noundef zeroext %proto, i16 noundef zeroext %vid) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1 = getelementptr i8, ptr %netdev, i32 3296
  %status = getelementptr i8, ptr %netdev, i32 3467
  %0 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %status, align 1
  %2 = and i8 %1, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %mng_vlan_id = getelementptr i8, ptr %netdev, i32 2816
  %3 = ptrtoint ptr %mng_vlan_id to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %mng_vlan_id, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %4, i16 %vid)
  %cmp = icmp eq i16 %4, %vid
  br i1 %cmp, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call.i = tail call i32 @_find_next_bit_be(ptr noundef %add.ptr.i, i32 noundef 4096, i32 noundef 0) #14
  %conv1.i = and i32 %call.i, 61440
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv1.i)
  %cmp.i = icmp eq i32 %conv1.i, 0
  br i1 %cmp.i, label %if.end.if.end7_crit_edge, label %if.then6

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @e1000_vlan_filter_on_off(ptr noundef %add.ptr.i, i1 noundef zeroext true)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end.if.end7_crit_edge
  %conv8 = zext i16 %vid to i32
  %5 = lshr i32 %conv8, 5
  %and9 = and i32 %5, 127
  %6 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw1, align 4
  %mac_type = getelementptr i8, ptr %netdev, i32 3308
  %8 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %9)
  %cmp10 = icmp ugt i32 %9, 2
  %cond = select i1 %cmp10, i32 22016, i32 1536
  %add.ptr = getelementptr i8, ptr %7, i32 %cond
  %shl = shl nuw nsw i32 %and9, 2
  %add.ptr12 = getelementptr i8, ptr %add.ptr, i32 %shl
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr12) #14, !srcloc !422
  %11 = tail call i32 @llvm.bswap.i32(i32 %10)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !623
  %and16 = and i32 %conv8, 31
  %shl17 = shl nuw i32 1, %and16
  %or = or i32 %11, %shl17
  tail call void @e1000_write_vfta(ptr noundef %hw1, i32 noundef %and9, i32 noundef %or) #14
  tail call void @_set_bit(i32 noundef %conv8, ptr noundef %add.ptr.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %land.lhs.true.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_netpoll(ptr noundef %netdev) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr i8, ptr %netdev, i32 3292
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %irq = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 46
  %2 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %irq, align 4
  %call1 = tail call zeroext i1 @disable_hardirq(i32 noundef %3) #14
  br i1 %call1, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %irq3 = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 46
  %6 = ptrtoint ptr %irq3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %irq3, align 4
  %call4 = tail call i32 @e1000_intr(i32 noundef %7, ptr noundef %netdev)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %8 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev, align 4
  %irq6 = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 46
  %10 = ptrtoint ptr %irq6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %irq6, align 4
  tail call void @enable_irq(i32 noundef %11) #14
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @e1000_fix_features(ptr nocapture noundef readnone %netdev, i64 noundef %features) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and1 = and i64 %features, -129
  %and = lshr i64 %features, 1
  %0 = and i64 %and, 128
  %features.addr.0 = or i64 %0, %and1
  ret i64 %features.addr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_set_features(ptr noundef %netdev, i64 noundef %features) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %features1 = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 23
  %0 = ptrtoint ptr %features1 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %features1, align 16
  %xor = xor i64 %1, %features
  %and = and i64 %xor, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %flags.i = getelementptr i8, ptr %netdev, i32 4240
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags.i, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then.if.end.i_crit_edge

if.then.if.end.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %hw1.i.i = getelementptr i8, ptr %netdev, i32 3296
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !443
  tail call void @arm_heavy_mb() #14
  %5 = ptrtoint ptr %hw1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hw1.i.i, align 4
  %add.ptr.i13.i = getelementptr i8, ptr %6, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i13.i, i32 -1) #14, !srcloc !421
  %7 = ptrtoint ptr %hw1.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw1.i.i, align 4
  %add.ptr6.i.i = getelementptr i8, ptr %8, i32 8
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !444
  %pdev.i.i = getelementptr i8, ptr %netdev, i32 3292
  %10 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev.i.i, align 4
  %irq.i.i = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 46
  %12 = ptrtoint ptr %irq.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %irq.i.i, align 4
  tail call void @synchronize_irq(i32 noundef %13) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then.if.end.i_crit_edge
  %hw1.i14.i = getelementptr i8, ptr %netdev, i32 3296
  %14 = ptrtoint ptr %hw1.i14.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw1.i14.i, align 4
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %15) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !599
  %17 = and i32 %16, -65
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #14
  %19 = trunc i64 %features to i32
  %20 = shl i32 %19, 22
  %21 = and i32 %20, 1073741824
  %ctrl.0.i.i = or i32 %18, %21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !600
  tail call void @arm_heavy_mb() #14
  %22 = tail call i32 @llvm.bswap.i32(i32 %ctrl.0.i.i) #14
  %23 = ptrtoint ptr %hw1.i14.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %hw1.i14.i, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %24, i32 %22) #14, !srcloc !421
  %25 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %flags.i, align 4
  %27 = and i32 %26, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool4.not.i = icmp eq i32 %27, 0
  br i1 %tobool4.not.i, label %if.then5.i, label %if.end.i.if.end_crit_edge

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  tail call void @arm_heavy_mb() #14
  %28 = ptrtoint ptr %hw1.i14.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw1.i14.i, align 4
  %add.ptr.i16.i = getelementptr i8, ptr %29, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i16.i, i32 -1660944384) #14, !srcloc !421
  %30 = ptrtoint ptr %hw1.i14.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw1.i14.i, align 4
  %add.ptr6.i17.i = getelementptr i8, ptr %31, i32 8
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i17.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  br label %if.end

if.end:                                           ; preds = %if.then5.i, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %and2 = and i64 %xor, 18691697672192
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2)
  %tobool3.not = icmp eq i64 %and2, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %33 = ptrtoint ptr %features1 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %features, ptr %features1, align 16
  %rx_csum = getelementptr i8, ptr %netdev, i32 3268
  %and7 = lshr i64 %features, 40
  %34 = trunc i64 %and7 to i8
  %35 = and i8 %34, 1
  %36 = ptrtoint ptr %rx_csum to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %35, ptr %rx_csum, align 4
  %state.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 6
  %37 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_reinit_locked(ptr noundef %add.ptr.i)
  br label %cleanup

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_reset(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then11, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end.cleanup_crit_edge ], [ 1, %if.else ], [ 1, %if.then11 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__pskb_pull_tail(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @e1000_tx_csum(ptr nocapture noundef readonly %adapter, ptr nocapture noundef %tx_ring, ptr nocapture noundef readonly %skb, i16 noundef zeroext %protocol) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %ip_summed, align 8
  %1 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %1)
  %cmp.not = icmp eq i16 %1, 1536
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = zext i16 %protocol to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.235)
  switch i16 %protocol, label %sw.default [
    i16 2048, label %sw.bb
    i16 -31011, label %sw.bb9
  ]

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %3 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %5 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %6 to i32
  %add.ptr.i.i = getelementptr i8, ptr %4, i32 %conv.i.i
  %protocol3 = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i, i32 0, i32 6
  %7 = ptrtoint ptr %protocol3 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %protocol3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %8)
  %cmp5 = icmp eq i8 %8, 6
  %spec.select = select i1 %cmp5, i32 33, i32 32
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %head.i.i76 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %9 = ptrtoint ptr %head.i.i76 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %head.i.i76, align 8
  %network_header.i.i77 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %11 = ptrtoint ptr %network_header.i.i77 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %network_header.i.i77, align 4
  %conv.i.i78 = zext i16 %12 to i32
  %add.ptr.i.i79 = getelementptr i8, ptr %10, i32 %conv.i.i78
  %nexthdr = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i79, i32 0, i32 3
  %13 = ptrtoint ptr %nexthdr to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %nexthdr, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %14)
  %cmp12 = icmp eq i8 %14, 6
  %spec.select75 = select i1 %cmp12, i32 33, i32 32
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %call17 = tail call i32 @net_ratelimit() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool.not = icmp eq i32 %call17, 0
  br i1 %tobool.not, label %sw.default.sw.epilog_crit_edge, label %do.body, !prof !576

sw.default.sw.epilog_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

do.body:                                          ; preds = %sw.default
  %msg_enable = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 60
  %15 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %msg_enable, align 8
  %and = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool21.not = icmp eq i32 %and, 0
  br i1 %tobool21.not, label %do.body.sw.epilog_crit_edge, label %if.then22

do.body.sw.epilog_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

if.then22:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %17 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %netdev, align 8
  %protocol23 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %19 = ptrtoint ptr %protocol23 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %protocol23, align 8
  %conv24 = zext i16 %20 to i32
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %18, ptr noundef nonnull @.str.47, i32 noundef %conv24) #17
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then22, %do.body.sw.epilog_crit_edge, %sw.default.sw.epilog_crit_edge, %sw.bb9, %sw.bb
  %cmd_len.0 = phi i32 [ 32, %if.then22 ], [ 32, %do.body.sw.epilog_crit_edge ], [ 32, %sw.default.sw.epilog_crit_edge ], [ %spec.select, %sw.bb ], [ %spec.select75, %sw.bb9 ]
  %21 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %21, align 8
  %conv.i = zext i16 %23 to i32
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %24 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %data.i.i, align 4
  %head.i.i80 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %26 = ptrtoint ptr %head.i.i80 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %head.i.i80, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %25 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %27 to i32
  %sub.ptr.sub.i.neg.i = sub i32 %conv.i, %sub.ptr.lhs.cast.i.i
  %sub.i = add i32 %sub.ptr.sub.i.neg.i, %sub.ptr.rhs.cast.i.i
  %conv28 = trunc i32 %sub.i to i8
  %next_to_use = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 4
  %28 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %next_to_use, align 4
  %buffer_info29 = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 6
  %30 = ptrtoint ptr %buffer_info29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %buffer_info29, align 4
  %32 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %tx_ring, align 4
  %arrayidx30 = getelementptr %struct.e1000_context_desc, ptr %33, i32 %29
  %34 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %arrayidx30, align 4
  %upper_setup = getelementptr %struct.e1000_context_desc, ptr %33, i32 %29, i32 1
  %35 = ptrtoint ptr %upper_setup to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %conv28, ptr %upper_setup, align 4
  %csum_offset = getelementptr inbounds %struct.anon.60, ptr %21, i32 0, i32 1
  %36 = ptrtoint ptr %csum_offset to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %csum_offset, align 2
  %conv32 = zext i16 %37 to i32
  %add = add i32 %sub.i, %conv32
  %conv33 = trunc i32 %add to i8
  %tucso = getelementptr inbounds %struct.anon.160, ptr %upper_setup, i32 0, i32 1
  %38 = ptrtoint ptr %tucso to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %conv33, ptr %tucso, align 1
  %tucse = getelementptr inbounds %struct.anon.160, ptr %upper_setup, i32 0, i32 2
  %39 = ptrtoint ptr %tucse to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 0, ptr %tucse, align 2
  %tcp_seg_setup = getelementptr %struct.e1000_context_desc, ptr %33, i32 %29, i32 3
  %40 = ptrtoint ptr %tcp_seg_setup to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %tcp_seg_setup, align 4
  %cmd_and_length = getelementptr %struct.e1000_context_desc, ptr %33, i32 %29, i32 2
  %41 = ptrtoint ptr %cmd_and_length to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %cmd_len.0, ptr %cmd_and_length, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %42 = load volatile i32, ptr @jiffies, align 128
  %time_stamp = getelementptr %struct.e1000_tx_buffer, ptr %31, i32 %29, i32 2
  %43 = ptrtoint ptr %time_stamp to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %time_stamp, align 4
  %conv36 = trunc i32 %29 to i16
  %next_to_watch = getelementptr %struct.e1000_tx_buffer, ptr %31, i32 %29, i32 4
  %44 = ptrtoint ptr %next_to_watch to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %conv36, ptr %next_to_watch, align 2
  %inc = add i32 %29, 1
  %count = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 3
  %45 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %count, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %46)
  %cmp37 = icmp eq i32 %inc, %46
  br i1 %cmp37, label %if.then45, label %sw.epilog.if.end46_crit_edge, !prof !456

sw.epilog.if.end46_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.then45:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %sw.epilog.if.end46_crit_edge
  %i.0 = phi i32 [ 0, %if.then45 ], [ %inc, %sw.epilog.if.end46_crit_edge ]
  %47 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %i.0, ptr %next_to_use, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end46, %entry.cleanup_crit_edge
  ret i1 %cmp.not
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__skb_pad(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_any(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__e1000_maybe_stop_tx(ptr nocapture noundef %netdev, i32 noundef %size) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tx_ring1 = getelementptr i8, ptr %netdev, i32 2920
  %0 = ptrtoint ptr %tx_ring1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tx_ring1, align 8
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 103
  %2 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr inbounds %struct.netdev_queue, ptr %3, i32 0, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !624
  %next_to_clean = getelementptr inbounds %struct.e1000_tx_ring, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %next_to_clean, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !625
  %next_to_use = getelementptr inbounds %struct.e1000_tx_ring, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp = icmp ugt i32 %5, %7
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %count = getelementptr inbounds %struct.e1000_tx_ring, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %count, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond = phi i32 [ %9, %cond.false ], [ 0, %entry.cond.end_crit_edge ]
  %10 = xor i32 %7, -1
  %add = add i32 %5, %10
  %sub17 = add i32 %add, %cond
  call void @__sanitizer_cov_trace_cmp4(i32 %sub17, i32 %size)
  %cmp18 = icmp ult i32 %sub17, %size
  br i1 %cmp18, label %cond.end.cleanup_crit_edge, label %if.end, !prof !576

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i29 = getelementptr inbounds %struct.netdev_queue, ptr %12, i32 0, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i29) #14
  %restart_queue = getelementptr i8, ptr %netdev, i32 2924
  %13 = ptrtoint ptr %restart_queue to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %restart_queue, align 4
  %inc = add i32 %14, 1
  store i32 %inc, ptr %restart_queue, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %cond.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -16, %cond.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pskb_expand_head(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__csum_ipv6_magic(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_ratelimit() local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_map_single(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_map_page_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_mapping_error(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_unmap_page_attrs(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_consume_skb(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_clone_tx_timestamp(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_tstamp_tx(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #5

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_enter_82542_rst(ptr nocapture noundef %adapter) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %netdev2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev2, align 8
  %back.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 7
  %2 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back.i, align 4
  %pdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %3, i32 0, i32 52
  %4 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev.i, align 4
  tail call void @pci_clear_mwi(ptr noundef %5) #14
  %6 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %7, i32 256
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !626
  %9 = or i32 %8, 16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !627
  tail call void @arm_heavy_mb() #14
  %10 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw1, align 4
  %add.ptr8 = getelementptr i8, ptr %11, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8, i32 %9) #14, !srcloc !421
  %12 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw1, align 4
  %add.ptr15 = getelementptr i8, ptr %13, i32 8
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !628
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %15 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %15(i32 noundef 214748000) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %16 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %16(i32 noundef 214748000) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %17 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %17(i32 noundef 214748000) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %18 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %18(i32 noundef 214748000) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %19 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %19(i32 noundef 214748000) #14
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %20 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %num_rx_queues.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 42
  %22 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_rx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp5.i = icmp sgt i32 %23, 0
  br i1 %cmp5.i, label %for.body.lr.ph.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body.lr.ph.i:                                 ; preds = %if.then
  %rx_ring.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.06.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %24 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.e1000_rx_ring, ptr %25, i32 %i.06.i
  tail call fastcc void @e1000_clean_rx_ring(ptr noundef %adapter, ptr noundef %arrayidx.i) #14
  %inc.i = add nuw nsw i32 %i.06.i, 1
  %26 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %num_rx_queues.i, align 4
  %cmp.i = icmp slt i32 %inc.i, %27
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

if.end:                                           ; preds = %for.body.i.if.end_crit_edge, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_rar_set(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_hash_mc_addr(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_leave_82542_rst(ptr noundef %adapter) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %netdev2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev2, align 8
  %2 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %3, i32 256
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !629
  %5 = and i32 %4, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !630
  tail call void @arm_heavy_mb() #14
  %6 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw1, align 4
  %add.ptr8 = getelementptr i8, ptr %7, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8, i32 %5) #14, !srcloc !421
  %8 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw1, align 4
  %add.ptr15 = getelementptr i8, ptr %9, i32 8
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !631
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %11 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %11(i32 noundef 214748000) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %12 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %12(i32 noundef 214748000) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %13 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %13(i32 noundef 214748000) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %14 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %14(i32 noundef 214748000) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %15 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %15(i32 noundef 214748000) #14
  %pci_cmd_word = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 41
  %16 = ptrtoint ptr %pci_cmd_word to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %pci_cmd_word, align 4
  %18 = and i16 %17, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %tobool20.not = icmp eq i16 %18, 0
  br i1 %tobool20.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %back.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 7
  %19 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %back.i, align 4
  %pdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %20, i32 0, i32 52
  %21 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pdev.i, align 4
  %call.i = tail call i32 @pci_set_mwi(ptr noundef %22) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %do.body.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body.i:                                        ; preds = %if.then
  %msg_enable.i = getelementptr inbounds %struct.e1000_adapter, ptr %20, i32 0, i32 60
  %23 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %msg_enable.i, align 8
  %and.i = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %do.body.i.if.end_crit_edge, label %if.then2.i

do.body.i.if.end_crit_edge:                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then2.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %netdev.i = getelementptr inbounds %struct.e1000_adapter, ptr %20, i32 0, i32 51
  %25 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %netdev.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %26, ptr noundef nonnull @.str.7) #17
  br label %if.end

if.end:                                           ; preds = %if.then2.i, %do.body.i.if.end_crit_edge, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %27 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end.if.end40_crit_edge, label %if.then22

if.end.if.end40_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.then22:                                        ; preds = %if.end
  %rx_ring = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  %29 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %rx_ring, align 4
  tail call fastcc void @e1000_configure_rx(ptr noundef %adapter)
  %alloc_rx_buf = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 38
  %31 = ptrtoint ptr %alloc_rx_buf to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %alloc_rx_buf, align 8
  %next_to_clean = getelementptr inbounds %struct.e1000_rx_ring, ptr %30, i32 0, i32 5
  %33 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %next_to_clean, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !632
  %next_to_use = getelementptr inbounds %struct.e1000_rx_ring, ptr %30, i32 0, i32 4
  %35 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %36)
  %cmp36 = icmp ugt i32 %34, %36
  br i1 %cmp36, label %if.then22.cond.end_crit_edge, label %cond.false

if.then22.cond.end_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.false:                                       ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  %count = getelementptr inbounds %struct.e1000_rx_ring, ptr %30, i32 0, i32 3
  %37 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %count, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.then22.cond.end_crit_edge
  %cond38 = phi i32 [ %38, %cond.false ], [ 0, %if.then22.cond.end_crit_edge ]
  %39 = xor i32 %36, -1
  %add = add i32 %34, %39
  %sub39 = add i32 %add, %cond38
  tail call void %32(ptr noundef %adapter, ptr noundef %30, i32 noundef %sub39) #14
  br label %if.end40

if.end40:                                         ; preds = %cond.end, %if.end.if.end40_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #5

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_configure_rx(ptr nocapture noundef %adapter) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev, align 8
  %mtu = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 20
  %2 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mtu, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1500, i32 %3)
  %cmp = icmp ugt i32 %3, 1500
  %spec.select = select i1 %cmp, ptr @e1000_clean_jumbo_rx_irq, ptr @e1000_clean_rx_irq
  %spec.select200 = select i1 %cmp, ptr @e1000_alloc_jumbo_rx_buffers, ptr @e1000_alloc_rx_buffers
  %.pn.in = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  %4 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn = load ptr, ptr %.pn.in, align 4
  %rdlen.0.in.in = getelementptr inbounds %struct.e1000_rx_ring, ptr %.pn, i32 0, i32 3
  %5 = ptrtoint ptr %rdlen.0.in.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %rdlen.0.in = load i32, ptr %rdlen.0.in.in, align 4
  %6 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 37
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %spec.select, ptr %6, align 4
  %8 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 38
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %spec.select200, ptr %8, align 8
  %rdlen.0 = shl i32 %rdlen.0.in, 4
  %10 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw1, align 4
  %mac_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %add.ptr = getelementptr i8, ptr %11, i32 256
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  %13 = tail call i32 @llvm.bswap.i32(i32 %12)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !633
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !634
  tail call void @arm_heavy_mb() #14
  %and = and i32 %13, -3
  %14 = tail call i32 @llvm.bswap.i32(i32 %and)
  %15 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw1, align 4
  %add.ptr14 = getelementptr i8, ptr %16, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr14, i32 %14) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !635
  tail call void @arm_heavy_mb() #14
  %rx_int_delay = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 46
  %17 = ptrtoint ptr %rx_int_delay to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rx_int_delay, align 4
  %19 = tail call i32 @llvm.bswap.i32(i32 %18)
  %20 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hw1, align 4
  %22 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %23)
  %cmp20 = icmp ugt i32 %23, 2
  %cond21 = select i1 %cmp20, i32 10272, i32 264
  %add.ptr22 = getelementptr i8, ptr %21, i32 %cond21
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr22, i32 %19) #14, !srcloc !421
  %24 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %25)
  %cmp24 = icmp ugt i32 %25, 4
  br i1 %cmp24, label %do.body26, label %entry.if.end46_crit_edge

entry.if.end46_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

do.body26:                                        ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !636
  tail call void @arm_heavy_mb() #14
  %rx_abs_int_delay = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 47
  %26 = ptrtoint ptr %rx_abs_int_delay to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rx_abs_int_delay, align 8
  %28 = tail call i32 @llvm.bswap.i32(i32 %27)
  %29 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hw1, align 4
  %add.ptr33 = getelementptr i8, ptr %30, i32 10284
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr33, i32 %28) #14, !srcloc !421
  %itr_setting = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 15
  %31 = ptrtoint ptr %itr_setting to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %itr_setting, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp34.not = icmp eq i32 %32, 0
  br i1 %cmp34.not, label %do.body26.if.end46_crit_edge, label %do.body36

do.body26.if.end46_crit_edge:                     ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

do.body36:                                        ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !637
  tail call void @arm_heavy_mb() #14
  %itr = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 14
  %33 = ptrtoint ptr %itr to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %itr, align 8
  %mul39 = shl i32 %34, 8
  %div = udiv i32 1000000000, %mul39
  %35 = tail call i32 @llvm.bswap.i32(i32 %div)
  %36 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hw1, align 4
  %add.ptr44 = getelementptr i8, ptr %37, i32 196
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr44, i32 %35) #14, !srcloc !421
  br label %if.end46

if.end46:                                         ; preds = %do.body36, %do.body26.if.end46_crit_edge, %entry.if.end46_crit_edge
  %rx_ring47 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 39
  %38 = ptrtoint ptr %rx_ring47 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %rx_ring47, align 4
  %dma = getelementptr inbounds %struct.e1000_rx_ring, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %dma, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !638
  tail call void @arm_heavy_mb() #14
  %42 = tail call i32 @llvm.bswap.i32(i32 %rdlen.0)
  %43 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hw1, align 4
  %45 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %46)
  %cmp54 = icmp ugt i32 %46, 2
  %cond56 = select i1 %cmp54, i32 10248, i32 280
  %add.ptr57 = getelementptr i8, ptr %44, i32 %cond56
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr57, i32 %42) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !639
  tail call void @arm_heavy_mb() #14
  %47 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %hw1, align 4
  %49 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %50)
  %cmp64 = icmp ugt i32 %50, 2
  %cond66 = select i1 %cmp64, i32 10244, i32 276
  %add.ptr67 = getelementptr i8, ptr %48, i32 %cond66
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr67, i32 0) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !640
  tail call void @arm_heavy_mb() #14
  %51 = tail call i32 @llvm.bswap.i32(i32 %41)
  %52 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %hw1, align 4
  %54 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %55)
  %cmp75 = icmp ugt i32 %55, 2
  %cond77 = select i1 %cmp75, i32 10240, i32 272
  %add.ptr78 = getelementptr i8, ptr %53, i32 %cond77
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr78, i32 %51) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !641
  tail call void @arm_heavy_mb() #14
  %56 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hw1, align 4
  %58 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %59)
  %cmp84 = icmp ugt i32 %59, 2
  %cond86 = select i1 %cmp84, i32 10264, i32 296
  %add.ptr87 = getelementptr i8, ptr %57, i32 %cond86
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr87, i32 0) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !642
  tail call void @arm_heavy_mb() #14
  %60 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %hw1, align 4
  %62 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %63)
  %cmp93 = icmp ugt i32 %63, 2
  %cond95 = select i1 %cmp93, i32 10256, i32 288
  %add.ptr96 = getelementptr i8, ptr %61, i32 %cond95
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr96, i32 0) #14, !srcloc !421
  %64 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %65)
  %cmp98 = icmp ugt i32 %65, 2
  %conv101 = select i1 %cmp98, i16 10256, i16 288
  %66 = ptrtoint ptr %rx_ring47 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %rx_ring47, align 4
  %rdh = getelementptr inbounds %struct.e1000_rx_ring, ptr %67, i32 0, i32 9
  %68 = ptrtoint ptr %rdh to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %conv101, ptr %rdh, align 4
  %69 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %70)
  %cmp105 = icmp ugt i32 %70, 2
  %conv108 = select i1 %cmp105, i16 10264, i16 296
  %71 = ptrtoint ptr %rx_ring47 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %rx_ring47, align 4
  %rdt = getelementptr inbounds %struct.e1000_rx_ring, ptr %72, i32 0, i32 10
  %73 = ptrtoint ptr %rdt to i32
  call void @__asan_store2_noabort(i32 %73)
  store i16 %conv108, ptr %rdt, align 2
  %74 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %75)
  %cmp112 = icmp ugt i32 %75, 2
  br i1 %cmp112, label %if.then114, label %if.end46.do.body140_crit_edge

if.end46.do.body140_crit_edge:                    ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body140

if.then114:                                       ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #16
  %76 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %hw1, align 4
  %add.ptr122 = getelementptr i8, ptr %77, i32 20480
  %78 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr122) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !643
  %rx_csum = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 48
  %79 = ptrtoint ptr %rx_csum to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %rx_csum, align 4, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %80)
  %tobool.not = icmp eq i8 %80, 0
  %81 = and i32 %78, -131073
  %82 = tail call i32 @llvm.bswap.i32(i32 %81)
  %masksel = select i1 %tobool.not, i32 0, i32 512
  %rxcsum.0 = or i32 %masksel, %82
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !644
  tail call void @arm_heavy_mb() #14
  %83 = tail call i32 @llvm.bswap.i32(i32 %rxcsum.0)
  %84 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %hw1, align 4
  %add.ptr138 = getelementptr i8, ptr %85, i32 20480
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr138, i32 %83) #14, !srcloc !421
  br label %do.body140

do.body140:                                       ; preds = %if.then114, %if.end46.do.body140_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !645
  tail call void @arm_heavy_mb() #14
  %or143 = or i32 %13, 2
  %86 = tail call i32 @llvm.bswap.i32(i32 %or143)
  %87 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %hw1, align 4
  %add.ptr149 = getelementptr i8, ptr %88, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr149, i32 %86) #14, !srcloc !421
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @e1000_clean_jumbo_rx_irq(ptr noundef %adapter, ptr noundef %rx_ring, ptr nocapture noundef %work_done, i32 noundef %work_to_do) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev1, align 8
  %next_to_clean = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 5
  %2 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %next_to_clean, align 4
  %4 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rx_ring, align 4
  %buffer_info3 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 6
  %status485 = getelementptr %struct.e1000_rx_desc, ptr %5, i32 %3, i32 3
  %6 = ptrtoint ptr %status485 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %status485, align 4
  %8 = and i8 %7, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not486 = icmp eq i8 %8, 0
  br i1 %tobool.not486, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %pdev2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %9 = ptrtoint ptr %pdev2 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pdev2, align 4
  %count = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  %dev = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  %rx_buffer_len = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 3
  %features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 23
  %rx_skb_top = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 7
  %napi.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 40
  %mac_type.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %hw_csum_err.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 43
  %hw_csum_good.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 44
  %alloc_rx_buf = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 38
  %11 = ptrtoint ptr %work_done to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %work_done, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %work_to_do)
  %cmp.not529 = icmp slt i32 %12, %work_to_do
  br i1 %cmp.not529, label %if.end.lr.ph, label %while.body.lr.ph.while.end_crit_edge

while.body.lr.ph.while.end_crit_edge:             ; preds = %while.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end.lr.ph:                                     ; preds = %while.body.lr.ph
  %13 = ptrtoint ptr %buffer_info3 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %buffer_info3, align 4
  %arrayidx4 = getelementptr %struct.e1000_rx_buffer, ptr %14, i32 %3
  %arrayidx = getelementptr %struct.e1000_rx_desc, ptr %5, i32 %3
  br label %if.end

while.body:                                       ; preds = %cleanup174
  %15 = ptrtoint ptr %work_done to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %work_done, align 4
  %cmp.not = icmp slt i32 %16, %work_to_do
  br i1 %cmp.not, label %while.body.if.end_crit_edge, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %while.body.if.end_crit_edge, %if.end.lr.ph
  %17 = phi i32 [ %12, %if.end.lr.ph ], [ %16, %while.body.if.end_crit_edge ]
  %cleaned_count.0487541 = phi i32 [ 0, %if.end.lr.ph ], [ %cleaned_count.2, %while.body.if.end_crit_edge ]
  %total_rx_bytes.0489538 = phi i32 [ 0, %if.end.lr.ph ], [ %total_rx_bytes.4, %while.body.if.end_crit_edge ]
  %total_rx_packets.0492535 = phi i32 [ 0, %if.end.lr.ph ], [ %total_rx_packets.4, %while.body.if.end_crit_edge ]
  %i.0495534 = phi i32 [ %3, %if.end.lr.ph ], [ %spec.store.select, %while.body.if.end_crit_edge ]
  %buffer_info.0496532 = phi ptr [ %arrayidx4, %if.end.lr.ph ], [ %arrayidx16, %while.body.if.end_crit_edge ]
  %rx_desc.0497531 = phi ptr [ %arrayidx, %if.end.lr.ph ], [ %arrayidx14, %while.body.if.end_crit_edge ]
  %status499530 = phi ptr [ %status485, %if.end.lr.ph ], [ %status, %while.body.if.end_crit_edge ]
  %inc = add nsw i32 %17, 1
  %18 = ptrtoint ptr %work_done to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %inc, ptr %work_done, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !646
  %19 = ptrtoint ptr %status499530 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %status499530, align 4
  %inc8 = add i32 %i.0495534, 1
  %21 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %count, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc8, i32 %22)
  %cmp9 = icmp eq i32 %inc8, %22
  %spec.store.select = select i1 %cmp9, i32 0, i32 %inc8
  %23 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %rx_ring, align 4
  %arrayidx14 = getelementptr %struct.e1000_rx_desc, ptr %24, i32 %spec.store.select
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %arrayidx14) #14, !srcloc !647
  %25 = ptrtoint ptr %buffer_info3 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %buffer_info3, align 4
  %arrayidx16 = getelementptr %struct.e1000_rx_buffer, ptr %26, i32 %spec.store.select
  %inc17 = add nsw i32 %cleaned_count.0487541, 1
  %dma = getelementptr inbounds %struct.e1000_rx_buffer, ptr %buffer_info.0496532, i32 0, i32 1
  %27 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %dma, align 4
  %29 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rx_buffer_len, align 8
  tail call void @dma_unmap_page_attrs(ptr noundef %dev, i32 noundef %28, i32 noundef %30, i32 noundef 2, i32 noundef 0) #14
  %31 = ptrtoint ptr %dma to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %dma, align 4
  %length19 = getelementptr inbounds %struct.e1000_rx_desc, ptr %rx_desc.0497531, i32 0, i32 1
  %32 = ptrtoint ptr %length19 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %length19, align 8
  %34 = tail call i16 @llvm.bswap.i16(i16 %33)
  %conv20 = zext i16 %34 to i32
  %conv21 = zext i8 %20 to i32
  %and22 = and i32 %conv21, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %if.then43, label %land.rhs

land.rhs:                                         ; preds = %if.end
  %errors = getelementptr inbounds %struct.e1000_rx_desc, ptr %rx_desc.0497531, i32 0, i32 4
  %35 = ptrtoint ptr %errors to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %errors, align 1
  %37 = and i8 %36, -105
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool26.not = icmp eq i8 %37, 0
  br i1 %tobool26.not, label %land.rhs.if.else64_crit_edge, label %if.then29, !prof !576

land.rhs.if.else64_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else64

if.then29:                                        ; preds = %land.rhs
  %38 = ptrtoint ptr %buffer_info.0496532 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %buffer_info.0496532, align 4
  %call = tail call ptr @page_address(ptr noundef %39) #14
  %40 = ptrtoint ptr %errors to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %errors, align 1
  %call31 = tail call fastcc zeroext i1 @e1000_tbi_should_accept(ptr noundef %adapter, i8 noundef zeroext %20, i8 noundef zeroext %41, i32 noundef %conv20, ptr noundef %call)
  br i1 %call31, label %if.then32, label %if.else

if.then32:                                        ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #16
  %dec = add nsw i32 %conv20, -1
  br label %if.else64

if.else:                                          ; preds = %if.then29
  %42 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %features, align 16
  %and33 = and i64 %43, 17592186044416
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and33)
  %tobool34.not = icmp eq i64 %and33, 0
  br i1 %tobool34.not, label %cleanup, label %if.else.if.else64_crit_edge

if.else.if.else64_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else64

cleanup:                                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %44 = ptrtoint ptr %rx_skb_top to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %rx_skb_top, align 4
  tail call void @consume_skb(ptr noundef %45) #14
  %46 = ptrtoint ptr %rx_skb_top to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %rx_skb_top, align 4
  br label %next_desc

if.then43:                                        ; preds = %if.end
  %47 = ptrtoint ptr %rx_skb_top to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %rx_skb_top, align 4
  %tobool45.not = icmp eq ptr %48, null
  br i1 %tobool45.not, label %if.then46, label %if.else55

if.then46:                                        ; preds = %if.then43
  %call47 = tail call ptr @napi_get_frags(ptr noundef %napi.i) #14
  %49 = ptrtoint ptr %rx_skb_top to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %call47, ptr %rx_skb_top, align 4
  %tobool50.not = icmp eq ptr %call47, null
  br i1 %tobool50.not, label %if.then46.while.end_crit_edge, label %if.end52

if.then46.while.end_crit_edge:                    ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end52:                                         ; preds = %if.then46
  %50 = ptrtoint ptr %buffer_info.0496532 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %buffer_info.0496532, align 4
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call47, i32 0, i32 17
  %52 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %end.i.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.skb_shared_info, ptr %53, i32 0, i32 12, i32 0
  %54 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %51, ptr %arrayidx.i.i, align 4
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %53, i32 0, i32 12, i32 0, i32 2
  %55 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %bv_offset.i.i, align 4
  %bv_len.i.i.i = getelementptr %struct.skb_shared_info, ptr %53, i32 0, i32 12, i32 0, i32 1
  %56 = ptrtoint ptr %bv_len.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %conv20, ptr %bv_len.i.i.i, align 4
  %57 = getelementptr inbounds %struct.page, ptr %51, i32 0, i32 1
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  %and.i.i.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !576

if.then.i.i.i:                                    ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %59, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #16
  %60 = ptrtoint ptr %51 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %60, %if.end.i.i.i ]
  %61 = inttoptr i32 %retval.0.i.i.i to ptr
  %62 = getelementptr inbounds %struct.page, ptr %61, i32 0, i32 1
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %62, align 4
  %65 = ptrtoint ptr %64 to i32
  %and.i1.i.i = and i32 %65, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i1.i.i, 0
  br i1 %tobool.i.not.i.i, label %_compound_head.exit.i.i.if.end61_crit_edge, label %if.then.i.i

_compound_head.exit.i.i.if.end61_crit_edge:       ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end61

if.then.i.i:                                      ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %call47, i32 0, i32 12
  %66 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %bf.set.i.i = or i8 %bf.load.i.i, 2
  store i8 %bf.set.i.i, ptr %pfmemalloc.i.i, align 2
  br label %if.end61

if.else55:                                        ; preds = %if.then43
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %48, i32 0, i32 17
  %67 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %68, i32 0, i32 2
  %69 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %nr_frags, align 2
  %conv59 = zext i8 %70 to i32
  %71 = ptrtoint ptr %buffer_info.0496532 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %buffer_info.0496532, align 4
  %arrayidx.i.i350 = getelementptr %struct.skb_shared_info, ptr %68, i32 0, i32 12, i32 %conv59
  %73 = ptrtoint ptr %arrayidx.i.i350 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %72, ptr %arrayidx.i.i350, align 4
  %bv_offset.i.i351 = getelementptr %struct.skb_shared_info, ptr %68, i32 0, i32 12, i32 %conv59, i32 2
  %74 = ptrtoint ptr %bv_offset.i.i351 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 0, ptr %bv_offset.i.i351, align 4
  %bv_len.i.i.i352 = getelementptr %struct.skb_shared_info, ptr %68, i32 0, i32 12, i32 %conv59, i32 1
  %75 = ptrtoint ptr %bv_len.i.i.i352 to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %conv20, ptr %bv_len.i.i.i352, align 4
  %76 = getelementptr inbounds %struct.page, ptr %72, i32 0, i32 1
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %76, align 4
  %and.i.i.i353 = and i32 %78, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i353)
  %tobool.not.i.i.i354 = icmp eq i32 %and.i.i.i353, 0
  br i1 %tobool.not.i.i.i354, label %if.end.i.i.i357, label %if.then.i.i.i356, !prof !576

if.then.i.i.i356:                                 ; preds = %if.else55
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i355 = add i32 %78, -1
  br label %_compound_head.exit.i.i361

if.end.i.i.i357:                                  ; preds = %if.else55
  call void @__sanitizer_cov_trace_pc() #16
  %79 = ptrtoint ptr %72 to i32
  br label %_compound_head.exit.i.i361

_compound_head.exit.i.i361:                       ; preds = %if.end.i.i.i357, %if.then.i.i.i356
  %retval.0.i.i.i358 = phi i32 [ %sub.i.i.i355, %if.then.i.i.i356 ], [ %79, %if.end.i.i.i357 ]
  %80 = inttoptr i32 %retval.0.i.i.i358 to ptr
  %81 = getelementptr inbounds %struct.page, ptr %80, i32 0, i32 1
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %81, align 4
  %84 = ptrtoint ptr %83 to i32
  %and.i1.i.i359 = and i32 %84, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1.i.i359)
  %tobool.i.not.i.i360 = icmp eq i32 %and.i1.i.i359, 0
  br i1 %tobool.i.not.i.i360, label %_compound_head.exit.i.i361.skb_fill_page_desc.exit367_crit_edge, label %if.then.i.i365

_compound_head.exit.i.i361.skb_fill_page_desc.exit367_crit_edge: ; preds = %_compound_head.exit.i.i361
  call void @__sanitizer_cov_trace_pc() #16
  br label %skb_fill_page_desc.exit367

if.then.i.i365:                                   ; preds = %_compound_head.exit.i.i361
  call void @__sanitizer_cov_trace_pc() #16
  %pfmemalloc.i.i362 = getelementptr inbounds %struct.sk_buff, ptr %48, i32 0, i32 12
  %85 = ptrtoint ptr %pfmemalloc.i.i362 to i32
  call void @__asan_load1_noabort(i32 %85)
  %bf.load.i.i363 = load i8, ptr %pfmemalloc.i.i362, align 2
  %bf.set.i.i364 = or i8 %bf.load.i.i363, 2
  store i8 %bf.set.i.i364, ptr %pfmemalloc.i.i362, align 2
  br label %skb_fill_page_desc.exit367

skb_fill_page_desc.exit367:                       ; preds = %if.then.i.i365, %_compound_head.exit.i.i361.skb_fill_page_desc.exit367_crit_edge
  %conv.i = add i8 %70, 1
  br label %if.end61

if.end61:                                         ; preds = %skb_fill_page_desc.exit367, %if.then.i.i, %_compound_head.exit.i.i.if.end61_crit_edge
  %end.i.sink = phi ptr [ %end.i, %skb_fill_page_desc.exit367 ], [ %end.i.i.i, %_compound_head.exit.i.i.if.end61_crit_edge ], [ %end.i.i.i, %if.then.i.i ]
  %conv.i.sink = phi i8 [ %conv.i, %skb_fill_page_desc.exit367 ], [ 1, %_compound_head.exit.i.i.if.end61_crit_edge ], [ 1, %if.then.i.i ]
  %86 = ptrtoint ptr %end.i.sink to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %end.i.sink, align 4
  %nr_frags.i366 = getelementptr inbounds %struct.skb_shared_info, ptr %87, i32 0, i32 2
  %88 = ptrtoint ptr %nr_frags.i366 to i32
  call void @__asan_store1_noabort(i32 %88)
  store i8 %conv.i.sink, ptr %nr_frags.i366, align 2
  %89 = ptrtoint ptr %rx_skb_top to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %rx_skb_top, align 4
  %91 = ptrtoint ptr %buffer_info.0496532 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr null, ptr %buffer_info.0496532, align 4
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %90, i32 0, i32 6
  %92 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %len.i, align 4
  %add.i = add i32 %93, %conv20
  store i32 %add.i, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %90, i32 0, i32 7
  %94 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %data_len.i, align 8
  %add2.i = add i32 %95, %conv20
  store i32 %add2.i, ptr %data_len.i, align 8
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %90, i32 0, i32 20
  %96 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %truesize.i, align 8
  %add3.i = add i32 %97, 4096
  store i32 %add3.i, ptr %truesize.i, align 8
  br label %next_desc

if.else64:                                        ; preds = %if.else.if.else64_crit_edge, %if.then32, %land.rhs.if.else64_crit_edge
  %length.1.ph = phi i32 [ %conv20, %land.rhs.if.else64_crit_edge ], [ %conv20, %if.else.if.else64_crit_edge ], [ %dec, %if.then32 ]
  %98 = ptrtoint ptr %rx_skb_top to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %rx_skb_top, align 4
  %tobool66.not = icmp eq ptr %99, null
  br i1 %tobool66.not, label %if.else77, label %if.then67

if.then67:                                        ; preds = %if.else64
  %end.i369 = getelementptr inbounds %struct.sk_buff, ptr %99, i32 0, i32 17
  %100 = ptrtoint ptr %end.i369 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %end.i369, align 4
  %nr_frags71 = getelementptr inbounds %struct.skb_shared_info, ptr %101, i32 0, i32 2
  %102 = ptrtoint ptr %nr_frags71 to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %nr_frags71, align 2
  %conv72 = zext i8 %103 to i32
  %104 = ptrtoint ptr %buffer_info.0496532 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %buffer_info.0496532, align 4
  %arrayidx.i.i371 = getelementptr %struct.skb_shared_info, ptr %101, i32 0, i32 12, i32 %conv72
  %106 = ptrtoint ptr %arrayidx.i.i371 to i32
  call void @__asan_store4_noabort(i32 %106)
  store ptr %105, ptr %arrayidx.i.i371, align 4
  %bv_offset.i.i372 = getelementptr %struct.skb_shared_info, ptr %101, i32 0, i32 12, i32 %conv72, i32 2
  %107 = ptrtoint ptr %bv_offset.i.i372 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 0, ptr %bv_offset.i.i372, align 4
  %bv_len.i.i.i373 = getelementptr %struct.skb_shared_info, ptr %101, i32 0, i32 12, i32 %conv72, i32 1
  %108 = ptrtoint ptr %bv_len.i.i.i373 to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %length.1.ph, ptr %bv_len.i.i.i373, align 4
  %109 = getelementptr inbounds %struct.page, ptr %105, i32 0, i32 1
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %109, align 4
  %and.i.i.i374 = and i32 %111, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i374)
  %tobool.not.i.i.i375 = icmp eq i32 %and.i.i.i374, 0
  br i1 %tobool.not.i.i.i375, label %if.end.i.i.i378, label %if.then.i.i.i377, !prof !576

if.then.i.i.i377:                                 ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i376 = add i32 %111, -1
  br label %_compound_head.exit.i.i382

if.end.i.i.i378:                                  ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #16
  %112 = ptrtoint ptr %105 to i32
  br label %_compound_head.exit.i.i382

_compound_head.exit.i.i382:                       ; preds = %if.end.i.i.i378, %if.then.i.i.i377
  %retval.0.i.i.i379 = phi i32 [ %sub.i.i.i376, %if.then.i.i.i377 ], [ %112, %if.end.i.i.i378 ]
  %113 = inttoptr i32 %retval.0.i.i.i379 to ptr
  %114 = getelementptr inbounds %struct.page, ptr %113, i32 0, i32 1
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %114, align 4
  %117 = ptrtoint ptr %116 to i32
  %and.i1.i.i380 = and i32 %117, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1.i.i380)
  %tobool.i.not.i.i381 = icmp eq i32 %and.i1.i.i380, 0
  br i1 %tobool.i.not.i.i381, label %_compound_head.exit.i.i382.skb_fill_page_desc.exit389_crit_edge, label %if.then.i.i386

_compound_head.exit.i.i382.skb_fill_page_desc.exit389_crit_edge: ; preds = %_compound_head.exit.i.i382
  call void @__sanitizer_cov_trace_pc() #16
  br label %skb_fill_page_desc.exit389

if.then.i.i386:                                   ; preds = %_compound_head.exit.i.i382
  call void @__sanitizer_cov_trace_pc() #16
  %pfmemalloc.i.i383 = getelementptr inbounds %struct.sk_buff, ptr %99, i32 0, i32 12
  %118 = ptrtoint ptr %pfmemalloc.i.i383 to i32
  call void @__asan_load1_noabort(i32 %118)
  %bf.load.i.i384 = load i8, ptr %pfmemalloc.i.i383, align 2
  %bf.set.i.i385 = or i8 %bf.load.i.i384, 2
  store i8 %bf.set.i.i385, ptr %pfmemalloc.i.i383, align 2
  br label %skb_fill_page_desc.exit389

skb_fill_page_desc.exit389:                       ; preds = %if.then.i.i386, %_compound_head.exit.i.i382.skb_fill_page_desc.exit389_crit_edge
  %conv.i387 = add i8 %103, 1
  %119 = ptrtoint ptr %end.i369 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %end.i369, align 4
  %nr_frags.i388 = getelementptr inbounds %struct.skb_shared_info, ptr %120, i32 0, i32 2
  %121 = ptrtoint ptr %nr_frags.i388 to i32
  call void @__asan_store1_noabort(i32 %121)
  store i8 %conv.i387, ptr %nr_frags.i388, align 2
  %122 = ptrtoint ptr %rx_skb_top to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %rx_skb_top, align 4
  store ptr null, ptr %rx_skb_top, align 4
  br label %if.end124

if.else77:                                        ; preds = %if.else64
  %124 = ptrtoint ptr %buffer_info.0496532 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %buffer_info.0496532, align 4
  %126 = load i32, ptr @copybreak, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %length.1.ph, i32 %126)
  %cmp79.not = icmp ugt i32 %length.1.ph, %126
  br i1 %cmp79.not, label %if.else111, label %if.then81

if.then81:                                        ; preds = %if.else77
  %127 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %features, align 16
  %and83 = and i64 %128, 8796093022208
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and83)
  %tobool84.not = icmp eq i64 %and83, 0
  %sub = add nsw i32 %length.1.ph, -4
  %spec.select = select i1 %tobool84.not, i32 %sub, i32 %length.1.ph, !prof !576
  %call.i.i = tail call ptr @__napi_alloc_skb(ptr noundef %napi.i, i32 noundef %spec.select, i32 noundef 2592) #14
  %tobool.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i, label %if.then81.while.end.sink.split_crit_edge, label %if.end98, !prof !456

if.then81.while.end.sink.split_crit_edge:         ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.sink.split

if.end98:                                         ; preds = %if.then81
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %129 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %129, 512
  %130 = tail call i32 @llvm.read_register.i32(metadata !410) #14
  %and.i.i.i.i.i = and i32 %130, -16384
  %131 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %131, i32 0, i32 1
  %132 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %133, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !648
  %134 = tail call i32 @llvm.read_register.i32(metadata !410) #14
  %and.i.i.i1.i.i = and i32 %134, -16384
  %135 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %135, i32 0, i32 2
  %136 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %137, i32 0, i32 213
  %138 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %139, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !649
  %call.i.i397 = tail call ptr @__kmap_local_page_prot(ptr noundef %125, i32 noundef %or.i) #14
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 16
  %140 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %tail.i, align 8
  %142 = call ptr @memcpy(ptr %141, ptr %call.i.i397, i32 %spec.select)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i397) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !650
  %143 = tail call i32 @llvm.read_register.i32(metadata !410) #14
  %and.i.i.i1.i = and i32 %143, -16384
  %144 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %144, i32 0, i32 2
  %145 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %146, i32 0, i32 213
  %147 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %148, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !651
  %149 = tail call i32 @llvm.read_register.i32(metadata !410) #14
  %and.i.i.i.i = and i32 %149, -16384
  %150 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %150, i32 0, i32 1
  %151 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %152, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %call104 = tail call ptr @skb_put(ptr noundef nonnull %call.i.i, i32 noundef %spec.select) #14
  %153 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %154)
  %cmp.i = icmp ugt i32 %154, 2
  %and.i = and i32 %conv21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool6.not.i = icmp eq i32 %and.i, 0
  %or.cond.i = and i1 %tobool6.not.i, %cmp.i
  br i1 %or.cond.i, label %if.end14.i, label %if.end98.e1000_rx_checksum.exit_crit_edge, !prof !652

if.end98.e1000_rx_checksum.exit_crit_edge:        ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_rx_checksum.exit

if.end14.i:                                       ; preds = %if.end98
  %155 = ptrtoint ptr %errors to i32
  call void @__asan_load1_noabort(i32 %155)
  %156 = load i8, ptr %errors, align 1
  %157 = and i8 %156, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %157)
  %tobool17.not.i = icmp eq i8 %157, 0
  br i1 %tobool17.not.i, label %if.end25.i, label %if.end14.i.cleanup.sink.split.i_crit_edge, !prof !576

if.end14.i.cleanup.sink.split.i_crit_edge:        ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i

if.end25.i:                                       ; preds = %if.end14.i
  %and27.i = and i32 %conv21, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i)
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  br i1 %tobool28.not.i, label %if.end25.i.e1000_rx_checksum.exit_crit_edge, label %if.then40.i

if.end25.i.e1000_rx_checksum.exit_crit_edge:      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_rx_checksum.exit

if.then40.i:                                      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 15
  %158 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %158)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.clear.i = and i16 %bf.load.i, -1537
  %bf.set.i = or i16 %bf.clear.i, 512
  store i16 %bf.set.i, ptr %ip_summed.i, align 8
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.then40.i, %if.end14.i.cleanup.sink.split.i_crit_edge
  %hw_csum_good.sink1.i = phi ptr [ %hw_csum_good.i, %if.then40.i ], [ %hw_csum_err.i, %if.end14.i.cleanup.sink.split.i_crit_edge ]
  %159 = ptrtoint ptr %hw_csum_good.sink1.i to i32
  call void @__asan_load8_noabort(i32 %159)
  %160 = load i64, ptr %hw_csum_good.sink1.i, align 8
  %inc42.i = add i64 %160, 1
  store i64 %inc42.i, ptr %hw_csum_good.sink1.i, align 8
  br label %e1000_rx_checksum.exit

e1000_rx_checksum.exit:                           ; preds = %cleanup.sink.split.i, %if.end25.i.e1000_rx_checksum.exit_crit_edge, %if.end98.e1000_rx_checksum.exit_crit_edge
  %len = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 6
  %161 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %len, align 4
  %add = add i32 %162, %total_rx_bytes.0489538
  %inc109 = add i32 %total_rx_packets.0492535, 1
  %special = getelementptr inbounds %struct.e1000_rx_desc, ptr %rx_desc.0497531, i32 0, i32 5
  %163 = ptrtoint ptr %special to i32
  call void @__asan_load2_noabort(i32 %163)
  %164 = load i16, ptr %special, align 2
  %165 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %netdev1, align 8
  %call.i = tail call zeroext i16 @eth_type_trans(ptr noundef nonnull %call.i.i, ptr noundef %166) #14
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 15, i32 0, i32 18
  %167 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %167)
  store i16 %call.i, ptr %protocol.i, align 8
  %168 = and i8 %20, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %168)
  %tobool.not.i398 = icmp eq i8 %168, 0
  br i1 %tobool.not.i398, label %e1000_rx_checksum.exit.cleanup120_crit_edge, label %if.then.i401

e1000_rx_checksum.exit.cleanup120_crit_edge:      ; preds = %e1000_rx_checksum.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup120

if.then.i401:                                     ; preds = %e1000_rx_checksum.exit
  call void @__sanitizer_cov_trace_pc() #16
  %169 = and i16 %164, -241
  %170 = tail call i16 @llvm.bswap.i16(i16 %169) #14
  %vlan_proto1.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 15, i32 0, i32 9
  %171 = ptrtoint ptr %vlan_proto1.i.i to i32
  call void @__asan_store2_noabort(i32 %171)
  store i16 -32512, ptr %vlan_proto1.i.i, align 8
  %vlan_tci2.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 15, i32 0, i32 10
  %172 = ptrtoint ptr %vlan_tci2.i.i to i32
  call void @__asan_store2_noabort(i32 %172)
  store i16 %170, ptr %vlan_tci2.i.i, align 2
  %vlan_present.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 15, i32 0, i32 3
  %173 = ptrtoint ptr %vlan_present.i.i to i32
  call void @__asan_loadN_noabort(i32 %173, i32 4)
  %bf.load.i.i399 = load i32, ptr %vlan_present.i.i, align 2
  %bf.set.i.i400 = or i32 %bf.load.i.i399, -2147483648
  store i32 %bf.set.i.i400, ptr %vlan_present.i.i, align 2
  br label %cleanup120

if.else111:                                       ; preds = %if.else77
  %call113 = tail call ptr @napi_get_frags(ptr noundef %napi.i) #14
  %tobool114.not = icmp eq ptr %call113, null
  br i1 %tobool114.not, label %if.else111.while.end.sink.split_crit_edge, label %if.end117

if.else111.while.end.sink.split_crit_edge:        ; preds = %if.else111
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.sink.split

if.end117:                                        ; preds = %if.else111
  %end.i.i.i403 = getelementptr inbounds %struct.sk_buff, ptr %call113, i32 0, i32 17
  %174 = ptrtoint ptr %end.i.i.i403 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %end.i.i.i403, align 4
  %arrayidx.i.i404 = getelementptr %struct.skb_shared_info, ptr %175, i32 0, i32 12, i32 0
  %176 = ptrtoint ptr %arrayidx.i.i404 to i32
  call void @__asan_store4_noabort(i32 %176)
  store ptr %125, ptr %arrayidx.i.i404, align 4
  %bv_offset.i.i405 = getelementptr %struct.skb_shared_info, ptr %175, i32 0, i32 12, i32 0, i32 2
  %177 = ptrtoint ptr %bv_offset.i.i405 to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 0, ptr %bv_offset.i.i405, align 4
  %bv_len.i.i.i406 = getelementptr %struct.skb_shared_info, ptr %175, i32 0, i32 12, i32 0, i32 1
  %178 = ptrtoint ptr %bv_len.i.i.i406 to i32
  call void @__asan_store4_noabort(i32 %178)
  store i32 %length.1.ph, ptr %bv_len.i.i.i406, align 4
  %179 = getelementptr inbounds %struct.page, ptr %125, i32 0, i32 1
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load volatile i32, ptr %179, align 4
  %and.i.i.i407 = and i32 %181, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i407)
  %tobool.not.i.i.i408 = icmp eq i32 %and.i.i.i407, 0
  br i1 %tobool.not.i.i.i408, label %if.end.i.i.i411, label %if.then.i.i.i410, !prof !576

if.then.i.i.i410:                                 ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i409 = add i32 %181, -1
  br label %_compound_head.exit.i.i415

if.end.i.i.i411:                                  ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #16
  %182 = ptrtoint ptr %125 to i32
  br label %_compound_head.exit.i.i415

_compound_head.exit.i.i415:                       ; preds = %if.end.i.i.i411, %if.then.i.i.i410
  %retval.0.i.i.i412 = phi i32 [ %sub.i.i.i409, %if.then.i.i.i410 ], [ %182, %if.end.i.i.i411 ]
  %183 = inttoptr i32 %retval.0.i.i.i412 to ptr
  %184 = getelementptr inbounds %struct.page, ptr %183, i32 0, i32 1
  %185 = ptrtoint ptr %184 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %184, align 4
  %187 = ptrtoint ptr %186 to i32
  %and.i1.i.i413 = and i32 %187, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1.i.i413)
  %tobool.i.not.i.i414 = icmp eq i32 %and.i1.i.i413, 0
  br i1 %tobool.i.not.i.i414, label %_compound_head.exit.i.i415.cleanup120.thread464_crit_edge, label %if.then.i.i419

_compound_head.exit.i.i415.cleanup120.thread464_crit_edge: ; preds = %_compound_head.exit.i.i415
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup120.thread464

if.then.i.i419:                                   ; preds = %_compound_head.exit.i.i415
  call void @__sanitizer_cov_trace_pc() #16
  %pfmemalloc.i.i416 = getelementptr inbounds %struct.sk_buff, ptr %call113, i32 0, i32 12
  %188 = ptrtoint ptr %pfmemalloc.i.i416 to i32
  call void @__asan_load1_noabort(i32 %188)
  %bf.load.i.i417 = load i8, ptr %pfmemalloc.i.i416, align 2
  %bf.set.i.i418 = or i8 %bf.load.i.i417, 2
  store i8 %bf.set.i.i418, ptr %pfmemalloc.i.i416, align 2
  br label %cleanup120.thread464

cleanup120.thread464:                             ; preds = %if.then.i.i419, %_compound_head.exit.i.i415.cleanup120.thread464_crit_edge
  %189 = ptrtoint ptr %end.i.i.i403 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %end.i.i.i403, align 4
  %nr_frags.i420 = getelementptr inbounds %struct.skb_shared_info, ptr %190, i32 0, i32 2
  %191 = ptrtoint ptr %nr_frags.i420 to i32
  call void @__asan_store1_noabort(i32 %191)
  store i8 1, ptr %nr_frags.i420, align 2
  br label %if.end124

cleanup120:                                       ; preds = %if.then.i401, %e1000_rx_checksum.exit.cleanup120_crit_edge
  %call4.i = tail call i32 @napi_gro_receive(ptr noundef %napi.i, ptr noundef nonnull %call.i.i) #14
  br label %next_desc

if.end124:                                        ; preds = %cleanup120.thread464, %skb_fill_page_desc.exit389
  %call113.sink = phi ptr [ %call113, %cleanup120.thread464 ], [ %123, %skb_fill_page_desc.exit389 ]
  %192 = ptrtoint ptr %buffer_info.0496532 to i32
  call void @__asan_store4_noabort(i32 %192)
  store ptr null, ptr %buffer_info.0496532, align 4
  %conv.i422 = and i32 %length.1.ph, 65535
  %len.i423 = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 6
  %193 = ptrtoint ptr %len.i423 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %len.i423, align 4
  %add.i424 = add i32 %194, %conv.i422
  store i32 %add.i424, ptr %len.i423, align 4
  %data_len.i425 = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 7
  %195 = ptrtoint ptr %data_len.i425 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %data_len.i425, align 8
  %add2.i426 = add i32 %196, %conv.i422
  store i32 %add2.i426, ptr %data_len.i425, align 8
  %truesize.i427 = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 20
  %197 = ptrtoint ptr %truesize.i427 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %truesize.i427, align 8
  %add3.i428 = add i32 %198, 4096
  store i32 %add3.i428, ptr %truesize.i427, align 8
  %199 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %200)
  %cmp.i430 = icmp ugt i32 %200, 2
  %and.i431 = and i32 %conv21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i431)
  %tobool6.not.i432 = icmp eq i32 %and.i431, 0
  %or.cond.i433 = and i1 %tobool6.not.i432, %cmp.i430
  br i1 %or.cond.i433, label %if.end14.i435, label %if.end124.e1000_rx_checksum.exit450_crit_edge, !prof !652

if.end124.e1000_rx_checksum.exit450_crit_edge:    ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_rx_checksum.exit450

if.end14.i435:                                    ; preds = %if.end124
  %201 = ptrtoint ptr %errors to i32
  call void @__asan_load1_noabort(i32 %201)
  %202 = load i8, ptr %errors, align 1
  %203 = and i8 %202, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %203)
  %tobool17.not.i434 = icmp eq i8 %203, 0
  br i1 %tobool17.not.i434, label %if.end25.i440, label %if.end14.i435.cleanup.sink.split.i449_crit_edge, !prof !576

if.end14.i435.cleanup.sink.split.i449_crit_edge:  ; preds = %if.end14.i435
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i449

if.end25.i440:                                    ; preds = %if.end14.i435
  %and27.i438 = and i32 %conv21, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i438)
  %tobool28.not.i439 = icmp eq i32 %and27.i438, 0
  br i1 %tobool28.not.i439, label %if.end25.i440.e1000_rx_checksum.exit450_crit_edge, label %if.then40.i446

if.end25.i440.e1000_rx_checksum.exit450_crit_edge: ; preds = %if.end25.i440
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_rx_checksum.exit450

if.then40.i446:                                   ; preds = %if.end25.i440
  call void @__sanitizer_cov_trace_pc() #16
  %ip_summed.i441 = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 15
  %204 = ptrtoint ptr %ip_summed.i441 to i32
  call void @__asan_load2_noabort(i32 %204)
  %bf.load.i442 = load i16, ptr %ip_summed.i441, align 8
  %bf.clear.i443 = and i16 %bf.load.i442, -1537
  %bf.set.i444 = or i16 %bf.clear.i443, 512
  store i16 %bf.set.i444, ptr %ip_summed.i441, align 8
  br label %cleanup.sink.split.i449

cleanup.sink.split.i449:                          ; preds = %if.then40.i446, %if.end14.i435.cleanup.sink.split.i449_crit_edge
  %hw_csum_good.sink1.i447 = phi ptr [ %hw_csum_good.i, %if.then40.i446 ], [ %hw_csum_err.i, %if.end14.i435.cleanup.sink.split.i449_crit_edge ]
  %205 = ptrtoint ptr %hw_csum_good.sink1.i447 to i32
  call void @__asan_load8_noabort(i32 %205)
  %206 = load i64, ptr %hw_csum_good.sink1.i447, align 8
  %inc42.i448 = add i64 %206, 1
  store i64 %inc42.i448, ptr %hw_csum_good.sink1.i447, align 8
  br label %e1000_rx_checksum.exit450

e1000_rx_checksum.exit450:                        ; preds = %cleanup.sink.split.i449, %if.end25.i440.e1000_rx_checksum.exit450_crit_edge, %if.end124.e1000_rx_checksum.exit450_crit_edge
  %len132 = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 6
  %207 = ptrtoint ptr %len132 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %len132, align 4
  %sub133 = add i32 %208, -4
  %add134 = add i32 %sub133, %total_rx_bytes.0489538
  %209 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %209)
  %210 = load i64, ptr %features, align 16
  %and136 = and i64 %210, 8796093022208
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and136)
  %tobool137.not = icmp eq i64 %and136, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %208)
  %cmp.i451 = icmp ugt i32 %208, 3
  %or.cond = select i1 %tobool137.not, i1 %cmp.i451, i1 false
  br i1 %or.cond, label %cond.true.i, label %e1000_rx_checksum.exit450.if.end150_crit_edge, !prof !653

e1000_rx_checksum.exit450.if.end150_crit_edge:    ; preds = %e1000_rx_checksum.exit450
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end150

cond.true.i:                                      ; preds = %e1000_rx_checksum.exit450
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 7
  %211 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %212)
  %tobool.not.i.i = icmp eq i32 %212, 0
  br i1 %tobool.not.i.i, label %__skb_trim.exit.i.i, label %if.then.i.i453

if.then.i.i453:                                   ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i452 = tail call i32 @___pskb_trim(ptr noundef %call113.sink, i32 noundef %sub133) #14
  br label %if.end150

__skb_trim.exit.i.i:                              ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #16
  %213 = ptrtoint ptr %len132 to i32
  call void @__asan_store4_noabort(i32 %213)
  store i32 %sub133, ptr %len132, align 4
  %data.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 19
  %214 = ptrtoint ptr %data.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %data.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %215, i32 %sub133
  %tail.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 16
  %216 = ptrtoint ptr %tail.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %216)
  store ptr %add.ptr.i.i.i.i.i, ptr %tail.i.i.i.i.i, align 8
  br label %if.end150

if.end150:                                        ; preds = %__skb_trim.exit.i.i, %if.then.i.i453, %e1000_rx_checksum.exit450.if.end150_crit_edge
  %inc151 = add i32 %total_rx_packets.0492535, 1
  %and153 = and i32 %conv21, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and153)
  %tobool154.not = icmp eq i32 %and153, 0
  br i1 %tobool154.not, label %if.end150.if.end160_crit_edge, label %if.then155

if.end150.if.end160_crit_edge:                    ; preds = %if.end150
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end160

if.then155:                                       ; preds = %if.end150
  call void @__sanitizer_cov_trace_pc() #16
  %special156 = getelementptr inbounds %struct.e1000_rx_desc, ptr %rx_desc.0497531, i32 0, i32 5
  %217 = ptrtoint ptr %special156 to i32
  call void @__asan_load2_noabort(i32 %217)
  %218 = load i16, ptr %special156, align 2
  %219 = and i16 %218, -241
  %220 = tail call i16 @llvm.bswap.i16(i16 %219)
  %vlan_proto1.i = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 15, i32 0, i32 9
  %221 = ptrtoint ptr %vlan_proto1.i to i32
  call void @__asan_store2_noabort(i32 %221)
  store i16 -32512, ptr %vlan_proto1.i, align 8
  %vlan_tci2.i = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 15, i32 0, i32 10
  %222 = ptrtoint ptr %vlan_tci2.i to i32
  call void @__asan_store2_noabort(i32 %222)
  store i16 %220, ptr %vlan_tci2.i, align 2
  %vlan_present.i = getelementptr inbounds %struct.sk_buff, ptr %call113.sink, i32 0, i32 15, i32 0, i32 3
  %223 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %223, i32 4)
  %bf.load.i454 = load i32, ptr %vlan_present.i, align 2
  %bf.set.i455 = or i32 %bf.load.i454, -2147483648
  store i32 %bf.set.i455, ptr %vlan_present.i, align 2
  br label %if.end160

if.end160:                                        ; preds = %if.then155, %if.end150.if.end160_crit_edge
  %call162 = tail call i32 @napi_gro_frags(ptr noundef %napi.i) #14
  br label %next_desc

next_desc:                                        ; preds = %if.end160, %cleanup120, %if.end61, %cleanup
  %total_rx_bytes.4 = phi i32 [ %total_rx_bytes.0489538, %cleanup ], [ %add134, %if.end160 ], [ %add, %cleanup120 ], [ %total_rx_bytes.0489538, %if.end61 ]
  %total_rx_packets.4 = phi i32 [ %total_rx_packets.0492535, %cleanup ], [ %inc151, %if.end160 ], [ %inc109, %cleanup120 ], [ %total_rx_packets.0492535, %if.end61 ]
  %224 = ptrtoint ptr %status499530 to i32
  call void @__asan_store1_noabort(i32 %224)
  store i8 0, ptr %status499530, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %cleaned_count.0487541)
  %cmp164 = icmp sgt i32 %cleaned_count.0487541, 14
  br i1 %cmp164, label %if.then172, label %next_desc.cleanup174_crit_edge, !prof !456

next_desc.cleanup174_crit_edge:                   ; preds = %next_desc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup174

if.then172:                                       ; preds = %next_desc
  call void @__sanitizer_cov_trace_pc() #16
  %225 = ptrtoint ptr %alloc_rx_buf to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %alloc_rx_buf, align 8
  tail call void %226(ptr noundef %adapter, ptr noundef %rx_ring, i32 noundef %inc17) #14
  br label %cleanup174

cleanup174:                                       ; preds = %if.then172, %next_desc.cleanup174_crit_edge
  %cleaned_count.2 = phi i32 [ 0, %if.then172 ], [ %inc17, %next_desc.cleanup174_crit_edge ]
  %status = getelementptr %struct.e1000_rx_desc, ptr %24, i32 %spec.store.select, i32 3
  %227 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %227)
  %228 = load i8, ptr %status, align 4
  %229 = and i8 %228, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %229)
  %tobool.not = icmp eq i8 %229, 0
  br i1 %tobool.not, label %cleanup174.while.end_crit_edge, label %while.body

cleanup174.while.end_crit_edge:                   ; preds = %cleanup174
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end.sink.split:                             ; preds = %if.else111.while.end.sink.split_crit_edge, %if.then81.while.end.sink.split_crit_edge
  %alloc_rx_buff_failed = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 45
  %230 = ptrtoint ptr %alloc_rx_buff_failed to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %alloc_rx_buff_failed, align 8
  %inc.i = add i32 %231, 1
  store i32 %inc.i, ptr %alloc_rx_buff_failed, align 8
  br label %while.end

while.end:                                        ; preds = %while.end.sink.split, %cleanup174.while.end_crit_edge, %if.then46.while.end_crit_edge, %while.body.while.end_crit_edge, %while.body.lr.ph.while.end_crit_edge, %entry.while.end_crit_edge
  %total_rx_bytes.0484 = phi i32 [ 0, %entry.while.end_crit_edge ], [ %total_rx_bytes.0489538, %while.end.sink.split ], [ 0, %while.body.lr.ph.while.end_crit_edge ], [ %total_rx_bytes.4, %cleanup174.while.end_crit_edge ], [ %total_rx_bytes.4, %while.body.while.end_crit_edge ], [ %total_rx_bytes.0489538, %if.then46.while.end_crit_edge ]
  %total_rx_packets.0481 = phi i32 [ 0, %entry.while.end_crit_edge ], [ %total_rx_packets.0492535, %while.end.sink.split ], [ 0, %while.body.lr.ph.while.end_crit_edge ], [ %total_rx_packets.4, %cleanup174.while.end_crit_edge ], [ %total_rx_packets.4, %while.body.while.end_crit_edge ], [ %total_rx_packets.0492535, %if.then46.while.end_crit_edge ]
  %cleaned.2.off0 = phi i1 [ false, %entry.while.end_crit_edge ], [ true, %while.end.sink.split ], [ %cmp.not529, %while.body.lr.ph.while.end_crit_edge ], [ %cmp.not529, %cleanup174.while.end_crit_edge ], [ %cmp.not529, %while.body.while.end_crit_edge ], [ %cmp.not529, %if.then46.while.end_crit_edge ]
  %i.2 = phi i32 [ %3, %entry.while.end_crit_edge ], [ %spec.store.select, %while.end.sink.split ], [ %3, %while.body.lr.ph.while.end_crit_edge ], [ %spec.store.select, %cleanup174.while.end_crit_edge ], [ %spec.store.select, %while.body.while.end_crit_edge ], [ %spec.store.select, %if.then46.while.end_crit_edge ]
  %232 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_store4_noabort(i32 %232)
  store i32 %i.2, ptr %next_to_clean, align 4
  %233 = load volatile i32, ptr %next_to_clean, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !654
  %next_to_use = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 4
  %234 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load volatile i32, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %233, i32 %235)
  %cmp192 = icmp ugt i32 %233, %235
  br i1 %cmp192, label %while.end.cond.end_crit_edge, label %cond.false

while.end.cond.end_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.false:                                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %count194 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  %236 = ptrtoint ptr %count194 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %count194, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %while.end.cond.end_crit_edge
  %cond = phi i32 [ %237, %cond.false ], [ 0, %while.end.cond.end_crit_edge ]
  %238 = xor i32 %235, -1
  %add195 = add i32 %233, %238
  %sub197 = add i32 %add195, %cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub197)
  %tobool198.not = icmp eq i32 %sub197, 0
  br i1 %tobool198.not, label %cond.end.if.end201_crit_edge, label %if.then199

cond.end.if.end201_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end201

if.then199:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %alloc_rx_buf200 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 38
  %239 = ptrtoint ptr %alloc_rx_buf200 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load ptr, ptr %alloc_rx_buf200, align 8
  tail call void %240(ptr noundef %adapter, ptr noundef %rx_ring, i32 noundef %sub197) #14
  br label %if.end201

if.end201:                                        ; preds = %if.then199, %cond.end.if.end201_crit_edge
  %total_rx_packets202 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 13
  %241 = ptrtoint ptr %total_rx_packets202 to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %total_rx_packets202, align 4
  %add203 = add i32 %242, %total_rx_packets.0481
  store i32 %add203, ptr %total_rx_packets202, align 4
  %total_rx_bytes204 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 12
  %243 = ptrtoint ptr %total_rx_bytes204 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %total_rx_bytes204, align 8
  %add205 = add i32 %244, %total_rx_bytes.0484
  store i32 %add205, ptr %total_rx_bytes204, align 8
  %stats = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36
  %rx_bytes = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 2
  %245 = ptrtoint ptr %rx_bytes to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %rx_bytes, align 8
  %add206 = add i32 %246, %total_rx_bytes.0484
  store i32 %add206, ptr %rx_bytes, align 8
  %247 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %stats, align 8
  %add208 = add i32 %248, %total_rx_packets.0481
  store i32 %add208, ptr %stats, align 8
  ret i1 %cleaned.2.off0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_alloc_jumbo_rx_buffers(ptr nocapture noundef %adapter, ptr nocapture noundef %rx_ring, i32 noundef %cleaned_count) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %next_to_use = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 4
  %0 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %next_to_use, align 4
  %buffer_info2 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cleaned_count)
  %tobool.not104 = icmp eq i32 %cleaned_count, 0
  br i1 %tobool.not104, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %2 = ptrtoint ptr %buffer_info2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buffer_info2, align 4
  %arrayidx = getelementptr %struct.e1000_rx_buffer, ptr %3, i32 %1
  %pdev1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %4 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev1, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %rx_buffer_len = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 3
  %count = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  br label %while.body

while.body:                                       ; preds = %if.end40.while.body_crit_edge, %while.body.lr.ph
  %dec108.in = phi i32 [ %cleaned_count, %while.body.lr.ph ], [ %dec108, %if.end40.while.body_crit_edge ]
  %i.0106 = phi i32 [ %1, %while.body.lr.ph ], [ %i.1, %if.end40.while.body_crit_edge ]
  %buffer_info.0105 = phi ptr [ %arrayidx, %while.body.lr.ph ], [ %arrayidx42, %if.end40.while.body_crit_edge ]
  %dec108 = add i32 %dec108.in, -1
  %6 = ptrtoint ptr %buffer_info.0105 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %buffer_info.0105, align 4
  %tobool3.not = icmp eq ptr %7, null
  br i1 %tobool3.not, label %if.then, label %while.body.if.end11_crit_edge

while.body.if.end11_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then:                                          ; preds = %while.body
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 2592, i32 noundef 0, i32 noundef 0, ptr noundef null) #14
  %8 = ptrtoint ptr %buffer_info.0105 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call38.i.i.i, ptr %buffer_info.0105, align 4
  %tobool6.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool6.not, label %if.then.while.end.sink.split_crit_edge, label %if.then.if.end11_crit_edge, !prof !456

if.then.if.end11_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then.while.end.sink.split_crit_edge:           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.sink.split

if.end11:                                         ; preds = %if.then.if.end11_crit_edge, %while.body.if.end11_crit_edge
  %dma = getelementptr inbounds %struct.e1000_rx_buffer, ptr %buffer_info.0105, i32 0, i32 1
  %9 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %dma, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool12.not = icmp eq i32 %10, 0
  br i1 %tobool12.not, label %if.then13, label %if.end11.if.end28_crit_edge

if.end11.if.end28_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

if.then13:                                        ; preds = %if.end11
  %11 = ptrtoint ptr %buffer_info.0105 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %buffer_info.0105, align 4
  %13 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rx_buffer_len, align 8
  %call15 = tail call i32 @dma_map_page_attrs(ptr noundef %dev, ptr noundef %12, i32 noundef 0, i32 noundef %14, i32 noundef 2, i32 noundef 0) #14
  %15 = ptrtoint ptr %dma to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %call15, ptr %dma, align 4
  tail call void @debug_dma_mapping_error(ptr noundef %dev, i32 noundef %call15) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call15)
  %cmp.i.not = icmp eq i32 %call15, -1
  br i1 %cmp.i.not, label %if.then21, label %if.then13.if.end28_crit_edge

if.then13.if.end28_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

if.then21:                                        ; preds = %if.then13
  %16 = ptrtoint ptr %buffer_info.0105 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %buffer_info.0105, align 4
  %18 = getelementptr inbounds %struct.page, ptr %17, i32 0, i32 1
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %18, align 4
  %and.i.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !576

if.then.i.i:                                      ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %20, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #16
  %21 = ptrtoint ptr %17 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %21, %if.end.i.i ]
  %22 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %22, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %23 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp.i.i.i.i = icmp eq i32 %24, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !456

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %22, ptr noundef nonnull @.str.55) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !655
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !656
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %25 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !657
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %25, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !658
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@e1000_alloc_jumbo_rx_buffers, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !622

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %22, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %22) #14
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %26 = ptrtoint ptr %buffer_info.0105 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %buffer_info.0105, align 4
  %27 = ptrtoint ptr %dma to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %dma, align 4
  br label %while.end.sink.split

if.end28:                                         ; preds = %if.then13.if.end28_crit_edge, %if.end11.if.end28_crit_edge
  %28 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %rx_ring, align 4
  %arrayidx29 = getelementptr %struct.e1000_rx_desc, ptr %29, i32 %i.0106
  %30 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %dma, align 4
  %conv = zext i32 %31 to i64
  %32 = tail call i64 @llvm.bswap.i64(i64 %conv)
  %33 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %arrayidx29, align 8
  %inc31 = add i32 %i.0106, 1
  %34 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %count, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc31, i32 %35)
  %cmp = icmp eq i32 %inc31, %35
  br i1 %cmp, label %if.then39, label %if.end28.if.end40_crit_edge, !prof !456

if.end28.if.end40_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.then39:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.end28.if.end40_crit_edge
  %i.1 = phi i32 [ 0, %if.then39 ], [ %inc31, %if.end28.if.end40_crit_edge ]
  %36 = ptrtoint ptr %buffer_info2 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %buffer_info2, align 4
  %arrayidx42 = getelementptr %struct.e1000_rx_buffer, ptr %37, i32 %i.1
  %tobool.not = icmp eq i32 %dec108, 0
  br i1 %tobool.not, label %if.end40.while.end_crit_edge, label %if.end40.while.body_crit_edge

if.end40.while.body_crit_edge:                    ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end40.while.end_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end.sink.split:                             ; preds = %put_page.exit, %if.then.while.end.sink.split_crit_edge
  %alloc_rx_buff_failed = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 45
  %38 = ptrtoint ptr %alloc_rx_buff_failed to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %alloc_rx_buff_failed, align 8
  %inc26 = add i32 %39, 1
  store i32 %inc26, ptr %alloc_rx_buff_failed, align 8
  br label %while.end

while.end:                                        ; preds = %while.end.sink.split, %if.end40.while.end_crit_edge, %entry.while.end_crit_edge
  %i.0100 = phi i32 [ %1, %entry.while.end_crit_edge ], [ %i.0106, %while.end.sink.split ], [ %i.1, %if.end40.while.end_crit_edge ]
  %40 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %41, i32 %i.0100)
  %cmp44.not = icmp eq i32 %41, %i.0100
  br i1 %cmp44.not, label %while.end.if.end67_crit_edge, label %if.then52, !prof !456

while.end.if.end67_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.then52:                                        ; preds = %while.end
  %42 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %i.0100, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0100)
  %cmp55 = icmp eq i32 %i.0100, 0
  br i1 %cmp55, label %if.then63, label %if.then52.if.end65_crit_edge, !prof !456

if.then52.if.end65_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end65

if.then63:                                        ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  %count64 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  %43 = ptrtoint ptr %count64 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %count64, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.then63, %if.then52.if.end65_crit_edge
  %i.2.in = phi i32 [ %44, %if.then63 ], [ %i.0100, %if.then52.if.end65_crit_edge ]
  %i.2 = add i32 %i.2.in, -1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !659
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !660
  tail call void @arm_heavy_mb() #14
  %45 = tail call i32 @llvm.bswap.i32(i32 %i.2)
  %hw = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %46 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hw, align 8
  %rdt = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 10
  %48 = ptrtoint ptr %rdt to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %rdt, align 2
  %conv66 = zext i16 %49 to i32
  %add.ptr = getelementptr i8, ptr %47, i32 %conv66
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %45) #14, !srcloc !421
  br label %if.end67

if.end67:                                         ; preds = %if.end65, %while.end.if.end67_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @e1000_clean_rx_irq(ptr noundef %adapter, ptr noundef %rx_ring, ptr nocapture noundef %work_done, i32 noundef %work_to_do) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %0 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev1, align 8
  %pdev2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %next_to_clean = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 5
  %2 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %next_to_clean, align 4
  %4 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rx_ring, align 4
  %buffer_info3 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 6
  %status281 = getelementptr %struct.e1000_rx_desc, ptr %5, i32 %3, i32 3
  %6 = ptrtoint ptr %status281 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %status281, align 4
  %8 = and i8 %7, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not282 = icmp eq i8 %8, 0
  br i1 %tobool.not282, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %arrayidx = getelementptr %struct.e1000_rx_desc, ptr %5, i32 %3
  %9 = ptrtoint ptr %buffer_info3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %buffer_info3, align 4
  %arrayidx4 = getelementptr %struct.e1000_rx_buffer, ptr %10, i32 %3
  %11 = ptrtoint ptr %pdev2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pdev2, align 4
  %napi.i.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 40
  %alloc_rx_buff_failed.i.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 45
  %rx_buffer_len.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 3
  %dev = getelementptr inbounds %struct.pci_dev, ptr %12, i32 0, i32 44
  %count = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  %discarding = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 68
  %features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 23
  %mac_type.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %hw_csum_err.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 43
  %hw_csum_good.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 44
  %alloc_rx_buf = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 38
  br label %while.body

while.body:                                       ; preds = %cleanup118.while.body_crit_edge, %while.body.lr.ph
  %status297 = phi ptr [ %status281, %while.body.lr.ph ], [ %status, %cleanup118.while.body_crit_edge ]
  %rx_desc.0296 = phi ptr [ %arrayidx, %while.body.lr.ph ], [ %arrayidx27, %cleanup118.while.body_crit_edge ]
  %buffer_info.0293 = phi ptr [ %arrayidx4, %while.body.lr.ph ], [ %arrayidx29, %cleanup118.while.body_crit_edge ]
  %i.0291 = phi i32 [ %3, %while.body.lr.ph ], [ %spec.store.select, %cleanup118.while.body_crit_edge ]
  %total_rx_packets.0288 = phi i32 [ 0, %while.body.lr.ph ], [ %total_rx_packets.1, %cleanup118.while.body_crit_edge ]
  %total_rx_bytes.0285 = phi i32 [ 0, %while.body.lr.ph ], [ %total_rx_bytes.1, %cleanup118.while.body_crit_edge ]
  %cleaned.0.off0284 = phi i1 [ false, %while.body.lr.ph ], [ true, %cleanup118.while.body_crit_edge ]
  %cleaned_count.0283 = phi i32 [ 0, %while.body.lr.ph ], [ %cleaned_count.2, %cleanup118.while.body_crit_edge ]
  %13 = ptrtoint ptr %work_done to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %work_done, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %work_to_do)
  %cmp.not = icmp slt i32 %14, %work_to_do
  br i1 %cmp.not, label %if.end, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end:                                           ; preds = %while.body
  %inc = add nsw i32 %14, 1
  %15 = ptrtoint ptr %work_done to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %inc, ptr %work_done, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !661
  %16 = ptrtoint ptr %status297 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %status297, align 4
  %length8 = getelementptr inbounds %struct.e1000_rx_desc, ptr %rx_desc.0296, i32 0, i32 1
  %18 = ptrtoint ptr %length8 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %length8, align 8
  %20 = tail call i16 @llvm.bswap.i16(i16 %19)
  %conv9 = zext i16 %20 to i32
  %21 = ptrtoint ptr %buffer_info.0293 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %buffer_info.0293, align 4
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %22) #14, !srcloc !647
  %23 = load i32, ptr @copybreak, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %23, i32 %conv9)
  %cmp.i = icmp ult i32 %23, %conv9
  br i1 %cmp.i, label %if.end.if.then11_crit_edge, label %if.end.i

if.end.if.then11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11

if.end.i:                                         ; preds = %if.end
  %call.i.i.i = tail call ptr @__napi_alloc_skb(ptr noundef %napi.i.i, i32 noundef %conv9, i32 noundef 2592) #14
  %tobool.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i, label %e1000_alloc_rx_skb.exit.thread.i, label %e1000_copybreak.exit, !prof !456

e1000_alloc_rx_skb.exit.thread.i:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %alloc_rx_buff_failed.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %alloc_rx_buff_failed.i.i, align 8
  %inc.i.i = add i32 %25, 1
  store i32 %inc.i.i, ptr %alloc_rx_buff_failed.i.i, align 8
  br label %if.then11

e1000_copybreak.exit:                             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %26 = ptrtoint ptr %pdev2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pdev2, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  %dma.i = getelementptr inbounds %struct.e1000_rx_buffer, ptr %buffer_info.0293, i32 0, i32 1
  %28 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %dma.i, align 4
  tail call void @dma_sync_single_for_cpu(ptr noundef %dev.i, i32 noundef %29, i32 noundef %conv9, i32 noundef 2) #14
  %call.i.i = tail call ptr @skb_put(ptr noundef nonnull %call.i.i.i, i32 noundef %conv9) #14
  %30 = call ptr @memcpy(ptr %call.i.i, ptr %22, i32 %conv9)
  br label %if.end20

if.then11:                                        ; preds = %e1000_alloc_rx_skb.exit.thread.i, %if.end.if.then11_crit_edge
  %31 = ptrtoint ptr %rx_buffer_len.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rx_buffer_len.i, align 8
  %33 = add i32 %32, 513
  %add2.i = and i32 %33, -128
  %add.ptr = getelementptr i8, ptr %22, i32 -130
  %call13 = tail call ptr @napi_build_skb(ptr noundef %add.ptr, i32 noundef %add2.i) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %alloc_rx_buff_failed.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %alloc_rx_buff_failed.i.i, align 8
  %inc16 = add i32 %35, 1
  store i32 %inc16, ptr %alloc_rx_buff_failed.i.i, align 8
  br label %while.end

cleanup:                                          ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #16
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %call13, i32 0, i32 19
  %36 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %37, i32 130
  store ptr %add.ptr.i, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call13, i32 0, i32 16
  %38 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %39, i32 130
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %dma = getelementptr inbounds %struct.e1000_rx_buffer, ptr %buffer_info.0293, i32 0, i32 1
  %40 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %dma, align 4
  %42 = ptrtoint ptr %rx_buffer_len.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rx_buffer_len.i, align 8
  tail call void @dma_unmap_page_attrs(ptr noundef %dev, i32 noundef %41, i32 noundef %43, i32 noundef 2, i32 noundef 0) #14
  %44 = ptrtoint ptr %dma to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %dma, align 4
  %45 = ptrtoint ptr %buffer_info.0293 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %buffer_info.0293, align 4
  br label %if.end20

if.end20:                                         ; preds = %cleanup, %e1000_copybreak.exit
  %skb.0 = phi ptr [ %call.i.i.i, %e1000_copybreak.exit ], [ %call13, %cleanup ]
  %inc21 = add i32 %i.0291, 1
  %46 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %count, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc21, i32 %47)
  %cmp22 = icmp eq i32 %inc21, %47
  %spec.store.select = select i1 %cmp22, i32 0, i32 %inc21
  %48 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rx_ring, align 4
  %arrayidx27 = getelementptr %struct.e1000_rx_desc, ptr %49, i32 %spec.store.select
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %arrayidx27) #14, !srcloc !647
  %50 = ptrtoint ptr %buffer_info3 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %buffer_info3, align 4
  %arrayidx29 = getelementptr %struct.e1000_rx_buffer, ptr %51, i32 %spec.store.select
  %inc30 = add nsw i32 %cleaned_count.0283, 1
  %conv31 = zext i8 %17 to i32
  %and32 = and i32 %conv31, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.end38.thread, label %if.end38, !prof !456

if.end38.thread:                                  ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  %52 = ptrtoint ptr %discarding to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 1, ptr %discarding, align 8
  br label %do.body42

if.end38:                                         ; preds = %if.end20
  %53 = ptrtoint ptr %discarding to i32
  call void @__asan_load1_noabort(i32 %53)
  %.pr = load i8, ptr %discarding, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool40.not = icmp eq i8 %.pr, 0
  br i1 %tobool40.not, label %if.end61, label %if.end38.do.body42_crit_edge

if.end38.do.body42_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body42

do.body42:                                        ; preds = %if.end38.do.body42_crit_edge, %if.end38.thread
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @e1000_clean_rx_irq.__UNIQUE_ID_ddebug577, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@e1000_clean_rx_irq, %if.then51)) #14
          to label %do.end54 [label %if.then51], !srcloc !622

if.then51:                                        ; preds = %do.body42
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @e1000_clean_rx_irq.__UNIQUE_ID_ddebug577, ptr noundef %1, ptr noundef nonnull @.str.57) #14
  br label %do.end54

do.end54:                                         ; preds = %if.then51, %do.body42
  tail call void @consume_skb(ptr noundef nonnull %skb.0) #14
  br i1 %tobool33.not, label %do.end54.next_desc_crit_edge, label %if.then58

do.end54.next_desc_crit_edge:                     ; preds = %do.end54
  call void @__sanitizer_cov_trace_pc() #16
  br label %next_desc

if.then58:                                        ; preds = %do.end54
  call void @__sanitizer_cov_trace_pc() #16
  %54 = ptrtoint ptr %discarding to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 0, ptr %discarding, align 8
  br label %next_desc

if.end61:                                         ; preds = %if.end38
  %errors = getelementptr inbounds %struct.e1000_rx_desc, ptr %rx_desc.0296, i32 0, i32 4
  %55 = ptrtoint ptr %errors to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %errors, align 1
  %57 = and i8 %56, -105
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %57)
  %tobool64.not = icmp eq i8 %57, 0
  br i1 %tobool64.not, label %if.end61.process_skb_crit_edge, label %if.then71, !prof !576

if.end61.process_skb_crit_edge:                   ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #16
  br label %process_skb

if.then71:                                        ; preds = %if.end61
  %call73 = tail call fastcc zeroext i1 @e1000_tbi_should_accept(ptr noundef %adapter, i8 noundef zeroext %17, i8 noundef zeroext %56, i32 noundef %conv9, ptr noundef %22)
  br i1 %call73, label %if.then74, label %if.else

if.then74:                                        ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #16
  %dec = add nsw i32 %conv9, -1
  br label %process_skb

if.else:                                          ; preds = %if.then71
  %58 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %features, align 16
  %and75 = and i64 %59, 17592186044416
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and75)
  %tobool76.not = icmp eq i64 %and75, 0
  br i1 %tobool76.not, label %if.else78, label %if.else.process_skb_crit_edge

if.else.process_skb_crit_edge:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %process_skb

if.else78:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @consume_skb(ptr noundef nonnull %skb.0) #14
  br label %next_desc

process_skb:                                      ; preds = %if.else.process_skb_crit_edge, %if.then74, %if.end61.process_skb_crit_edge
  %length.0 = phi i32 [ %dec, %if.then74 ], [ %conv9, %if.else.process_skb_crit_edge ], [ %conv9, %if.end61.process_skb_crit_edge ]
  %sub = add nsw i32 %length.0, -4
  %add = add i32 %sub, %total_rx_bytes.0285
  %inc81 = add i32 %total_rx_packets.0288, 1
  %60 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %features, align 16
  %and83 = and i64 %61, 8796093022208
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and83)
  %tobool84.not = icmp eq i64 %and83, 0
  %spec.select = select i1 %tobool84.not, i32 %sub, i32 %length.0, !prof !576
  %62 = ptrtoint ptr %buffer_info.0293 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %buffer_info.0293, align 4
  %cmp97 = icmp eq ptr %63, null
  br i1 %cmp97, label %if.then99, label %if.else101

if.then99:                                        ; preds = %process_skb
  call void @__sanitizer_cov_trace_pc() #16
  %call100 = tail call ptr @skb_put(ptr noundef nonnull %skb.0, i32 noundef %spec.select) #14
  br label %if.end102

if.else101:                                       ; preds = %process_skb
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @skb_trim(ptr noundef nonnull %skb.0, i32 noundef %spec.select) #14
  br label %if.end102

if.end102:                                        ; preds = %if.else101, %if.then99
  %64 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %mac_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %65)
  %cmp.i258 = icmp ugt i32 %65, 2
  %and.i = and i32 %conv31, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool6.not.i = icmp eq i32 %and.i, 0
  %or.cond.i = and i1 %tobool6.not.i, %cmp.i258
  br i1 %or.cond.i, label %if.end14.i, label %if.end102.e1000_rx_checksum.exit_crit_edge, !prof !652

if.end102.e1000_rx_checksum.exit_crit_edge:       ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_rx_checksum.exit

if.end14.i:                                       ; preds = %if.end102
  %66 = ptrtoint ptr %errors to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %errors, align 1
  %68 = and i8 %67, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool17.not.i = icmp eq i8 %68, 0
  br i1 %tobool17.not.i, label %if.end25.i, label %if.end14.i.cleanup.sink.split.i_crit_edge, !prof !576

if.end14.i.cleanup.sink.split.i_crit_edge:        ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i

if.end25.i:                                       ; preds = %if.end14.i
  %and27.i = and i32 %conv31, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i)
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  br i1 %tobool28.not.i, label %if.end25.i.e1000_rx_checksum.exit_crit_edge, label %if.then40.i

if.end25.i.e1000_rx_checksum.exit_crit_edge:      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_rx_checksum.exit

if.then40.i:                                      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 15
  %69 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %69)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.clear.i = and i16 %bf.load.i, -1537
  %bf.set.i = or i16 %bf.clear.i, 512
  store i16 %bf.set.i, ptr %ip_summed.i, align 8
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.then40.i, %if.end14.i.cleanup.sink.split.i_crit_edge
  %hw_csum_good.sink1.i = phi ptr [ %hw_csum_good.i, %if.then40.i ], [ %hw_csum_err.i, %if.end14.i.cleanup.sink.split.i_crit_edge ]
  %70 = ptrtoint ptr %hw_csum_good.sink1.i to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %hw_csum_good.sink1.i, align 8
  %inc42.i = add i64 %71, 1
  store i64 %inc42.i, ptr %hw_csum_good.sink1.i, align 8
  br label %e1000_rx_checksum.exit

e1000_rx_checksum.exit:                           ; preds = %cleanup.sink.split.i, %if.end25.i.e1000_rx_checksum.exit_crit_edge, %if.end102.e1000_rx_checksum.exit_crit_edge
  %special = getelementptr inbounds %struct.e1000_rx_desc, ptr %rx_desc.0296, i32 0, i32 5
  %72 = ptrtoint ptr %special to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %special, align 2
  %74 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %netdev1, align 8
  %call.i = tail call zeroext i16 @eth_type_trans(ptr noundef nonnull %skb.0, ptr noundef %75) #14
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 15, i32 0, i32 18
  %76 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 %call.i, ptr %protocol.i, align 8
  %77 = and i8 %17, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool.not.i = icmp eq i8 %77, 0
  br i1 %tobool.not.i, label %e1000_rx_checksum.exit.e1000_receive_skb.exit_crit_edge, label %if.then.i

e1000_rx_checksum.exit.e1000_receive_skb.exit_crit_edge: ; preds = %e1000_rx_checksum.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_receive_skb.exit

if.then.i:                                        ; preds = %e1000_rx_checksum.exit
  call void @__sanitizer_cov_trace_pc() #16
  %78 = and i16 %73, -241
  %79 = tail call i16 @llvm.bswap.i16(i16 %78) #14
  %vlan_proto1.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 15, i32 0, i32 9
  %80 = ptrtoint ptr %vlan_proto1.i.i to i32
  call void @__asan_store2_noabort(i32 %80)
  store i16 -32512, ptr %vlan_proto1.i.i, align 8
  %vlan_tci2.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 15, i32 0, i32 10
  %81 = ptrtoint ptr %vlan_tci2.i.i to i32
  call void @__asan_store2_noabort(i32 %81)
  store i16 %79, ptr %vlan_tci2.i.i, align 2
  %vlan_present.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 15, i32 0, i32 3
  %82 = ptrtoint ptr %vlan_present.i.i to i32
  call void @__asan_loadN_noabort(i32 %82, i32 4)
  %bf.load.i.i = load i32, ptr %vlan_present.i.i, align 2
  %bf.set.i.i = or i32 %bf.load.i.i, -2147483648
  store i32 %bf.set.i.i, ptr %vlan_present.i.i, align 2
  br label %e1000_receive_skb.exit

e1000_receive_skb.exit:                           ; preds = %if.then.i, %e1000_rx_checksum.exit.e1000_receive_skb.exit_crit_edge
  %call4.i = tail call i32 @napi_gro_receive(ptr noundef %napi.i.i, ptr noundef nonnull %skb.0) #14
  br label %next_desc

next_desc:                                        ; preds = %e1000_receive_skb.exit, %if.else78, %if.then58, %do.end54.next_desc_crit_edge
  %total_rx_bytes.1 = phi i32 [ %total_rx_bytes.0285, %if.then58 ], [ %total_rx_bytes.0285, %do.end54.next_desc_crit_edge ], [ %add, %e1000_receive_skb.exit ], [ %total_rx_bytes.0285, %if.else78 ]
  %total_rx_packets.1 = phi i32 [ %total_rx_packets.0288, %if.then58 ], [ %total_rx_packets.0288, %do.end54.next_desc_crit_edge ], [ %inc81, %e1000_receive_skb.exit ], [ %total_rx_packets.0288, %if.else78 ]
  %83 = ptrtoint ptr %status297 to i32
  call void @__asan_store1_noabort(i32 %83)
  store i8 0, ptr %status297, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %cleaned_count.0283)
  %cmp108 = icmp sgt i32 %cleaned_count.0283, 14
  br i1 %cmp108, label %if.then116, label %next_desc.cleanup118_crit_edge, !prof !456

next_desc.cleanup118_crit_edge:                   ; preds = %next_desc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup118

if.then116:                                       ; preds = %next_desc
  call void @__sanitizer_cov_trace_pc() #16
  %84 = ptrtoint ptr %alloc_rx_buf to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %alloc_rx_buf, align 8
  tail call void %85(ptr noundef %adapter, ptr noundef %rx_ring, i32 noundef %inc30) #14
  br label %cleanup118

cleanup118:                                       ; preds = %if.then116, %next_desc.cleanup118_crit_edge
  %cleaned_count.2 = phi i32 [ 0, %if.then116 ], [ %inc30, %next_desc.cleanup118_crit_edge ]
  %status = getelementptr %struct.e1000_rx_desc, ptr %49, i32 %spec.store.select, i32 3
  %86 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %status, align 4
  %88 = and i8 %87, 1
  %tobool.not = icmp eq i8 %88, 0
  br i1 %tobool.not, label %cleanup118.while.end_crit_edge, label %cleanup118.while.body_crit_edge

cleanup118.while.body_crit_edge:                  ; preds = %cleanup118
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup118.while.end_crit_edge:                   ; preds = %cleanup118
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %cleanup118.while.end_crit_edge, %cleanup.thread, %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  %cleaned.0.off0280 = phi i1 [ %cleaned.0.off0284, %cleanup.thread ], [ false, %entry.while.end_crit_edge ], [ true, %cleanup118.while.end_crit_edge ], [ %cleaned.0.off0284, %while.body.while.end_crit_edge ]
  %total_rx_bytes.0278 = phi i32 [ %total_rx_bytes.0285, %cleanup.thread ], [ 0, %entry.while.end_crit_edge ], [ %total_rx_bytes.1, %cleanup118.while.end_crit_edge ], [ %total_rx_bytes.0285, %while.body.while.end_crit_edge ]
  %total_rx_packets.0276 = phi i32 [ %total_rx_packets.0288, %cleanup.thread ], [ 0, %entry.while.end_crit_edge ], [ %total_rx_packets.1, %cleanup118.while.end_crit_edge ], [ %total_rx_packets.0288, %while.body.while.end_crit_edge ]
  %i.0274 = phi i32 [ %i.0291, %cleanup.thread ], [ %3, %entry.while.end_crit_edge ], [ %spec.store.select, %cleanup118.while.end_crit_edge ], [ %i.0291, %while.body.while.end_crit_edge ]
  %89 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %i.0274, ptr %next_to_clean, align 4
  %90 = load volatile i32, ptr %next_to_clean, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !662
  %next_to_use = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 4
  %91 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %90, i32 %92)
  %cmp138 = icmp ugt i32 %90, %92
  br i1 %cmp138, label %while.end.cond.end_crit_edge, label %cond.false

while.end.cond.end_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.false:                                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %count140 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  %93 = ptrtoint ptr %count140 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %count140, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %while.end.cond.end_crit_edge
  %cond = phi i32 [ %94, %cond.false ], [ 0, %while.end.cond.end_crit_edge ]
  %95 = xor i32 %92, -1
  %add141 = add i32 %90, %95
  %sub143 = add i32 %add141, %cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub143)
  %tobool144.not = icmp eq i32 %sub143, 0
  br i1 %tobool144.not, label %cond.end.if.end147_crit_edge, label %if.then145

cond.end.if.end147_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end147

if.then145:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %alloc_rx_buf146 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 38
  %96 = ptrtoint ptr %alloc_rx_buf146 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %alloc_rx_buf146, align 8
  tail call void %97(ptr noundef %adapter, ptr noundef %rx_ring, i32 noundef %sub143) #14
  br label %if.end147

if.end147:                                        ; preds = %if.then145, %cond.end.if.end147_crit_edge
  %total_rx_packets148 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 13
  %98 = ptrtoint ptr %total_rx_packets148 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %total_rx_packets148, align 4
  %add149 = add i32 %99, %total_rx_packets.0276
  store i32 %add149, ptr %total_rx_packets148, align 4
  %total_rx_bytes150 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 12
  %100 = ptrtoint ptr %total_rx_bytes150 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %total_rx_bytes150, align 8
  %add151 = add i32 %101, %total_rx_bytes.0278
  store i32 %add151, ptr %total_rx_bytes150, align 8
  %stats = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36
  %rx_bytes = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 2
  %102 = ptrtoint ptr %rx_bytes to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %rx_bytes, align 8
  %add152 = add i32 %103, %total_rx_bytes.0278
  store i32 %add152, ptr %rx_bytes, align 8
  %104 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %stats, align 8
  %add154 = add i32 %105, %total_rx_packets.0276
  store i32 %add154, ptr %stats, align 8
  ret i1 %cleaned.0.off0280
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_alloc_rx_buffers(ptr nocapture noundef %adapter, ptr nocapture noundef %rx_ring, i32 noundef %cleaned_count) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %pdev2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %0 = ptrtoint ptr %pdev2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev2, align 4
  %rx_buffer_len = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 3
  %2 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_buffer_len, align 8
  %next_to_use = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 4
  %4 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %next_to_use, align 4
  %buffer_info3 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cleaned_count)
  %tobool.not236 = icmp eq i32 %cleaned_count, 0
  br i1 %tobool.not236, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %6 = ptrtoint ptr %buffer_info3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %buffer_info3, align 4
  %arrayidx = getelementptr %struct.e1000_rx_buffer, ptr %7, i32 %5
  %mac_type.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 3
  %add.i = add i32 %3, -1
  %msg_enable = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 60
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %dev = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44
  %count = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  br label %while.body

while.body:                                       ; preds = %cleanup70.while.body_crit_edge, %while.body.lr.ph
  %dec243.in = phi i32 [ %cleaned_count, %while.body.lr.ph ], [ %dec243, %cleanup70.while.body_crit_edge ]
  %i.0240 = phi i32 [ %5, %while.body.lr.ph ], [ %i.1, %cleanup70.while.body_crit_edge ]
  %buffer_info.0237 = phi ptr [ %arrayidx, %while.body.lr.ph ], [ %arrayidx69, %cleanup70.while.body_crit_edge ]
  %dec243 = add i32 %dec243.in, -1
  %8 = ptrtoint ptr %buffer_info.0237 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %buffer_info.0237, align 4
  %tobool4.not = icmp eq ptr %9, null
  br i1 %tobool4.not, label %if.end, label %while.body.skip_crit_edge

while.body.skip_crit_edge:                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %skip

if.end:                                           ; preds = %while.body
  %10 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rx_buffer_len, align 8
  %12 = add i32 %11, 513
  %add2.i.i = and i32 %12, -128
  %call.i.i = tail call ptr @__netdev_alloc_frag_align(i32 noundef %add2.i.i, i32 noundef -1) #14
  %tobool.not.i = icmp eq ptr %call.i.i, null
  %add.ptr.i = getelementptr i8, ptr %call.i.i, i32 130
  %tobool5.not206 = icmp eq ptr %add.ptr.i, null
  %tobool5.not = or i1 %tobool.not.i, %tobool5.not206
  br i1 %tobool5.not, label %if.end.while.end.sink.split_crit_edge, label %if.end7

if.end.while.end.sink.split_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.sink.split

if.end7:                                          ; preds = %if.end
  %13 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mac_type.i, align 4
  %15 = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.236)
  switch i32 %14, label %if.end7.if.end24_crit_edge [
    i32 6, label %if.end7.e1000_check_64k_bound.exit_crit_edge
    i32 9, label %if.end7.e1000_check_64k_bound.exit_crit_edge368
    i32 8, label %if.end7.e1000_check_64k_bound.exit_crit_edge369
  ]

if.end7.e1000_check_64k_bound.exit_crit_edge369:  ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit

if.end7.e1000_check_64k_bound.exit_crit_edge368:  ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit

if.end7.e1000_check_64k_bound.exit_crit_edge:     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit

if.end7.if.end24_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

e1000_check_64k_bound.exit:                       ; preds = %if.end7.e1000_check_64k_bound.exit_crit_edge, %if.end7.e1000_check_64k_bound.exit_crit_edge368, %if.end7.e1000_check_64k_bound.exit_crit_edge369
  %16 = ptrtoint ptr %add.ptr.i to i32
  %sub.i = add i32 %add.i, %16
  %xor.i = xor i32 %sub.i, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %xor.i)
  %cmp7.i = icmp ult i32 %xor.i, 65536
  br i1 %cmp7.i, label %e1000_check_64k_bound.exit.if.end24_crit_edge, label %if.then9

e1000_check_64k_bound.exit.if.end24_crit_edge:    ; preds = %e1000_check_64k_bound.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then9:                                         ; preds = %e1000_check_64k_bound.exit
  %17 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %msg_enable, align 8
  %and = and i32 %18, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool10.not = icmp eq i32 %and, 0
  br i1 %tobool10.not, label %if.then9.do.end_crit_edge, label %if.then11

if.then9.do.end_crit_edge:                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then11:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  %19 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %netdev, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %20, ptr noundef nonnull @.str.58, i32 noundef %3, ptr noundef nonnull %add.ptr.i) #17
  br label %do.end

do.end:                                           ; preds = %if.then11, %if.then9.do.end_crit_edge
  %21 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %rx_buffer_len, align 8
  %23 = add i32 %22, 513
  %add2.i.i164 = and i32 %23, -128
  %call.i.i165 = tail call ptr @__netdev_alloc_frag_align(i32 noundef %add2.i.i164, i32 noundef -1) #14
  %tobool.not.i166 = icmp eq ptr %call.i.i165, null
  %add.ptr.i167 = getelementptr i8, ptr %call.i.i165, i32 130
  %tobool14.not207 = icmp eq ptr %add.ptr.i167, null
  %tobool14.not = or i1 %tobool.not.i166, %tobool14.not207
  br i1 %tobool14.not, label %if.then15, label %if.end18

if.then15:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @page_frag_free(ptr noundef nonnull %add.ptr.i) #14
  br label %while.end.sink.split

if.end18:                                         ; preds = %do.end
  %24 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %mac_type.i, align 4
  %26 = zext i32 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.237)
  switch i32 %25, label %if.end18.cleanup_crit_edge [
    i32 6, label %if.end18.e1000_check_64k_bound.exit176_crit_edge
    i32 9, label %if.end18.e1000_check_64k_bound.exit176_crit_edge370
    i32 8, label %if.end18.e1000_check_64k_bound.exit176_crit_edge371
  ]

if.end18.e1000_check_64k_bound.exit176_crit_edge371: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit176

if.end18.e1000_check_64k_bound.exit176_crit_edge370: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit176

if.end18.e1000_check_64k_bound.exit176_crit_edge: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit176

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

e1000_check_64k_bound.exit176:                    ; preds = %if.end18.e1000_check_64k_bound.exit176_crit_edge, %if.end18.e1000_check_64k_bound.exit176_crit_edge370, %if.end18.e1000_check_64k_bound.exit176_crit_edge371
  %27 = ptrtoint ptr %add.ptr.i167 to i32
  %sub.i171 = add i32 %add.i, %27
  %xor.i172 = xor i32 %sub.i171, %27
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %xor.i172)
  %cmp7.i173 = icmp ult i32 %xor.i172, 65536
  br i1 %cmp7.i173, label %e1000_check_64k_bound.exit176.cleanup_crit_edge, label %if.then20

e1000_check_64k_bound.exit176.cleanup_crit_edge:  ; preds = %e1000_check_64k_bound.exit176
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then20:                                        ; preds = %e1000_check_64k_bound.exit176
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @page_frag_free(ptr noundef nonnull %add.ptr.i167) #14
  tail call void @page_frag_free(ptr noundef nonnull %add.ptr.i) #14
  br label %while.end.sink.split

cleanup:                                          ; preds = %e1000_check_64k_bound.exit176.cleanup_crit_edge, %if.end18.cleanup_crit_edge
  tail call void @page_frag_free(ptr noundef nonnull %add.ptr.i) #14
  br label %if.end24

if.end24:                                         ; preds = %cleanup, %e1000_check_64k_bound.exit.if.end24_crit_edge, %if.end7.if.end24_crit_edge
  %data.0 = phi ptr [ %add.ptr.i, %e1000_check_64k_bound.exit.if.end24_crit_edge ], [ %add.ptr.i167, %cleanup ], [ %add.ptr.i, %if.end7.if.end24_crit_edge ]
  %28 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rx_buffer_len, align 8
  %call.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef nonnull %data.0) #14
  br i1 %call.i, label %land.rhs.i, label %dma_map_single_attrs.exit

land.rhs.i:                                       ; preds = %if.end24
  %.b1.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.dma_map_single_attrs.exit.thread_crit_edge, label %if.then.i177, !prof !576

land.rhs.i.dma_map_single_attrs.exit.thread_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dma_map_single_attrs.exit.thread

if.then.i177:                                     ; preds = %land.rhs.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i = tail call ptr @dev_driver_string(ptr noundef %dev) #14
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 3
  %30 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %31, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i177.dev_name.exit.i_crit_edge

if.then.i177.dev_name.exit.i_crit_edge:           ; preds = %if.then.i177
  call void @__sanitizer_cov_trace_pc() #16
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then.i177
  call void @__sanitizer_cov_trace_pc() #16
  %32 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dev, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then.i177.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %33, %if.end.i.i ], [ %31, %if.then.i177.dev_name.exit.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.50, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.51, ptr noundef %call16.i, ptr noundef %retval.0.i.i) #14
  br label %dma_map_single_attrs.exit.thread

dma_map_single_attrs.exit.thread:                 ; preds = %dev_name.exit.i, %land.rhs.i.dma_map_single_attrs.exit.thread_crit_edge
  %dma194 = getelementptr inbounds %struct.e1000_rx_buffer, ptr %buffer_info.0237, i32 0, i32 1
  %34 = ptrtoint ptr %dma194 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 -1, ptr %dma194, align 4
  tail call void @debug_dma_mapping_error(ptr noundef %dev, i32 noundef -1) #14
  br label %if.then31

dma_map_single_attrs.exit:                        ; preds = %if.end24
  tail call void @debug_dma_map_single(ptr noundef %dev, ptr noundef nonnull %data.0, i32 noundef %29) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %35 = load ptr, ptr @mem_map, align 4
  %36 = ptrtoint ptr %data.0 to i32
  %sub.i178 = add i32 %36, 1073741824
  %shr.i = lshr i32 %sub.i178, 12
  %add.ptr.i179 = getelementptr %struct.page, ptr %35, i32 %shr.i
  %and.i = and i32 %36, 4095
  %call41.i = tail call i32 @dma_map_page_attrs(ptr noundef %dev, ptr noundef %add.ptr.i179, i32 noundef %and.i, i32 noundef %29, i32 noundef 2, i32 noundef 0) #14
  %dma = getelementptr inbounds %struct.e1000_rx_buffer, ptr %buffer_info.0237, i32 0, i32 1
  %37 = ptrtoint ptr %dma to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %call41.i, ptr %dma, align 4
  tail call void @debug_dma_mapping_error(ptr noundef %dev, i32 noundef %call41.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call41.i)
  %cmp.i = icmp eq i32 %call41.i, -1
  br i1 %cmp.i, label %dma_map_single_attrs.exit.if.then31_crit_edge, label %if.end35

dma_map_single_attrs.exit.if.then31_crit_edge:    ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then31

if.then31:                                        ; preds = %dma_map_single_attrs.exit.if.then31_crit_edge, %dma_map_single_attrs.exit.thread
  %dma197 = phi ptr [ %dma194, %dma_map_single_attrs.exit.thread ], [ %dma, %dma_map_single_attrs.exit.if.then31_crit_edge ]
  tail call void @page_frag_free(ptr noundef nonnull %data.0) #14
  %38 = ptrtoint ptr %dma197 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %dma197, align 4
  br label %while.end.sink.split

if.end35:                                         ; preds = %dma_map_single_attrs.exit
  %39 = ptrtoint ptr %mac_type.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %mac_type.i, align 4
  %41 = zext i32 %40 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.238)
  switch i32 %40, label %if.end35.if.end58_crit_edge [
    i32 6, label %if.end35.e1000_check_64k_bound.exit188_crit_edge
    i32 9, label %if.end35.e1000_check_64k_bound.exit188_crit_edge372
    i32 8, label %if.end35.e1000_check_64k_bound.exit188_crit_edge373
  ]

if.end35.e1000_check_64k_bound.exit188_crit_edge373: ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit188

if.end35.e1000_check_64k_bound.exit188_crit_edge372: ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit188

if.end35.e1000_check_64k_bound.exit188_crit_edge: ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_check_64k_bound.exit188

if.end35.if.end58_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

e1000_check_64k_bound.exit188:                    ; preds = %if.end35.e1000_check_64k_bound.exit188_crit_edge, %if.end35.e1000_check_64k_bound.exit188_crit_edge372, %if.end35.e1000_check_64k_bound.exit188_crit_edge373
  %42 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rx_buffer_len, align 8
  %44 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %dma, align 4
  %add.i182 = add i32 %45, -1
  %sub.i183 = add i32 %add.i182, %43
  %xor.i184 = xor i32 %sub.i183, %45
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %xor.i184)
  %cmp7.i185 = icmp ult i32 %xor.i184, 65536
  br i1 %cmp7.i185, label %e1000_check_64k_bound.exit188.if.end58_crit_edge, label %do.body40

e1000_check_64k_bound.exit188.if.end58_crit_edge: ; preds = %e1000_check_64k_bound.exit188
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

do.body40:                                        ; preds = %e1000_check_64k_bound.exit188
  %46 = ptrtoint ptr %msg_enable to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %msg_enable, align 8
  %and42 = and i32 %47, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42)
  %tobool43.not = icmp eq i32 %and42, 0
  br i1 %tobool43.not, label %do.body40.do.end50_crit_edge, label %if.then44

do.body40.do.end50_crit_edge:                     ; preds = %do.body40
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end50

if.then44:                                        ; preds = %do.body40
  call void @__sanitizer_cov_trace_pc() #16
  %48 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %netdev, align 8
  %50 = inttoptr i32 %45 to ptr
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %49, ptr noundef nonnull @.str.59, i32 noundef %43, ptr noundef %50) #17
  br label %do.end50

do.end50:                                         ; preds = %if.then44, %do.body40.do.end50_crit_edge
  %51 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %dma, align 4
  %53 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rx_buffer_len, align 8
  tail call void @dma_unmap_page_attrs(ptr noundef %dev, i32 noundef %52, i32 noundef %54, i32 noundef 2, i32 noundef 0) #14
  tail call void @page_frag_free(ptr noundef nonnull %data.0) #14
  %55 = ptrtoint ptr %buffer_info.0237 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %buffer_info.0237, align 4
  %56 = ptrtoint ptr %dma to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %dma, align 4
  br label %while.end.sink.split

if.end58:                                         ; preds = %e1000_check_64k_bound.exit188.if.end58_crit_edge, %if.end35.if.end58_crit_edge
  %57 = ptrtoint ptr %buffer_info.0237 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %data.0, ptr %buffer_info.0237, align 4
  br label %skip

skip:                                             ; preds = %if.end58, %while.body.skip_crit_edge
  %58 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %rx_ring, align 4
  %arrayidx60 = getelementptr %struct.e1000_rx_desc, ptr %59, i32 %i.0240
  %dma61 = getelementptr inbounds %struct.e1000_rx_buffer, ptr %buffer_info.0237, i32 0, i32 1
  %60 = ptrtoint ptr %dma61 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %dma61, align 4
  %conv = zext i32 %61 to i64
  %62 = tail call i64 @llvm.bswap.i64(i64 %conv)
  %63 = ptrtoint ptr %arrayidx60 to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %62, ptr %arrayidx60, align 8
  %inc62 = add i32 %i.0240, 1
  %64 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %count, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc62, i32 %65)
  %cmp = icmp eq i32 %inc62, %65
  br i1 %cmp, label %if.then66, label %skip.cleanup70_crit_edge, !prof !456

skip.cleanup70_crit_edge:                         ; preds = %skip
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup70

if.then66:                                        ; preds = %skip
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup70

cleanup70:                                        ; preds = %if.then66, %skip.cleanup70_crit_edge
  %i.1 = phi i32 [ 0, %if.then66 ], [ %inc62, %skip.cleanup70_crit_edge ]
  %66 = ptrtoint ptr %buffer_info3 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %buffer_info3, align 4
  %arrayidx69 = getelementptr %struct.e1000_rx_buffer, ptr %67, i32 %i.1
  %tobool.not = icmp eq i32 %dec243, 0
  br i1 %tobool.not, label %cleanup70.while.end_crit_edge, label %cleanup70.while.body_crit_edge

cleanup70.while.body_crit_edge:                   ; preds = %cleanup70
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup70.while.end_crit_edge:                    ; preds = %cleanup70
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end.sink.split:                             ; preds = %do.end50, %if.then31, %if.then20, %if.then15, %if.end.while.end.sink.split_crit_edge
  %alloc_rx_buff_failed33 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 45
  %68 = ptrtoint ptr %alloc_rx_buff_failed33 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %alloc_rx_buff_failed33, align 8
  %inc17 = add i32 %69, 1
  store i32 %inc17, ptr %alloc_rx_buff_failed33, align 8
  br label %while.end

while.end:                                        ; preds = %while.end.sink.split, %cleanup70.while.end_crit_edge, %entry.while.end_crit_edge
  %i.0215 = phi i32 [ %5, %entry.while.end_crit_edge ], [ %i.0240, %while.end.sink.split ], [ %i.1, %cleanup70.while.end_crit_edge ]
  %70 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %i.0215)
  %cmp74.not = icmp eq i32 %71, %i.0215
  br i1 %cmp74.not, label %while.end.if.end100_crit_edge, label %if.then82, !prof !456

while.end.if.end100_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end100

if.then82:                                        ; preds = %while.end
  %72 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %i.0215, ptr %next_to_use, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0215)
  %cmp85 = icmp eq i32 %i.0215, 0
  br i1 %cmp85, label %if.then93, label %if.then82.if.end95_crit_edge, !prof !456

if.then82.if.end95_crit_edge:                     ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end95

if.then93:                                        ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #16
  %count94 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  %73 = ptrtoint ptr %count94 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %count94, align 4
  br label %if.end95

if.end95:                                         ; preds = %if.then93, %if.then82.if.end95_crit_edge
  %i.4.in = phi i32 [ %74, %if.then93 ], [ %i.0215, %if.then82.if.end95_crit_edge ]
  %i.4 = add i32 %i.4.in, -1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !663
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !664
  tail call void @arm_heavy_mb() #14
  %75 = tail call i32 @llvm.bswap.i32(i32 %i.4)
  %76 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %hw1, align 4
  %rdt = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 10
  %78 = ptrtoint ptr %rdt to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %rdt, align 2
  %conv99 = zext i16 %79 to i32
  %add.ptr = getelementptr i8, ptr %77, i32 %conv99
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %75) #14, !srcloc !421
  br label %if.end100

if.end100:                                        ; preds = %if.end95, %while.end.if.end100_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @e1000_tbi_should_accept(ptr noundef %adapter, i8 noundef zeroext %status, i8 noundef zeroext %errors, i32 noundef %length, ptr nocapture noundef readonly %data) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %data, i32 %length
  %add.ptr2 = getelementptr i8, ptr %add.ptr, i32 -1
  %0 = ptrtoint ptr %add.ptr2 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %add.ptr2, align 1
  %tbi_compatibility_on = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 69
  %2 = ptrtoint ptr %tbi_compatibility_on to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %tbi_compatibility_on, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp ne i8 %3, 0
  %4 = and i8 %errors, -105
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %4)
  %cmp = icmp eq i8 %4, 1
  %or.cond = and i1 %cmp, %tobool.not
  call void @__sanitizer_cov_trace_const_cmp1(i8 15, i8 %1)
  %cmp6 = icmp eq i8 %1, 15
  %or.cond48 = select i1 %or.cond, i1 %cmp6, i1 false
  br i1 %or.cond48, label %land.lhs.true8, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true8:                                   ; preds = %entry
  %5 = and i8 %status, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool11.not = icmp eq i8 %5, 0
  %min_frame_size17 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 29
  %6 = ptrtoint ptr %min_frame_size17 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %min_frame_size17, align 4
  br i1 %tobool11.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true8
  %sub = add i32 %7, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %length)
  %cmp12 = icmp ult i32 %sub, %length
  br i1 %cmp12, label %land.lhs.true14, label %cond.true.cleanup_crit_edge

cond.true.cleanup_crit_edge:                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true14:                                  ; preds = %cond.true
  %max_frame_size = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 28
  %8 = ptrtoint ptr %max_frame_size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %max_frame_size, align 4
  %add = add i32 %9, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %length)
  %cmp15.not = icmp ult i32 %add, %length
  br i1 %cmp15.not, label %land.lhs.true14.cleanup_crit_edge, label %land.lhs.true14.if.then_crit_edge

land.lhs.true14.if.then_crit_edge:                ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true14.cleanup_crit_edge:                ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cond.false:                                       ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %length)
  %cmp18 = icmp ult i32 %7, %length
  br i1 %cmp18, label %land.lhs.true20, label %cond.false.cleanup_crit_edge

cond.false.cleanup_crit_edge:                     ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true20:                                  ; preds = %cond.false
  %max_frame_size21 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 28
  %10 = ptrtoint ptr %max_frame_size21 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_frame_size21, align 4
  %add23 = add i32 %11, 5
  call void @__sanitizer_cov_trace_cmp4(i32 %add23, i32 %length)
  %cmp24.not = icmp ult i32 %add23, %length
  br i1 %cmp24.not, label %land.lhs.true20.cleanup_crit_edge, label %land.lhs.true20.if.then_crit_edge

land.lhs.true20.if.then_crit_edge:                ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true20.cleanup_crit_edge:                ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then:                                          ; preds = %land.lhs.true20.if.then_crit_edge, %land.lhs.true14.if.then_crit_edge
  %stats_lock = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 9
  %call29 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %stats_lock) #14
  %stats = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54
  %dec.i = add i32 %length, -1
  %12 = ptrtoint ptr %stats to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %stats, align 8
  %dec1.i = add i64 %13, -1
  store i64 %dec1.i, ptr %stats, align 8
  %gprc.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 27
  %14 = ptrtoint ptr %gprc.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %gprc.i, align 8
  %inc.i = add i64 %15, 1
  store i64 %inc.i, ptr %gprc.i, align 8
  %gorcl.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 31
  %16 = ptrtoint ptr %gorcl.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %gorcl.i, align 8
  %and.i = and i64 %17, 2147483648
  %conv.i = zext i32 %dec.i to i64
  %add.i = add i64 %17, %conv.i
  store i64 %add.i, ptr %gorcl.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp ne i64 %and.i, 0
  %and4.i = and i64 %add.i, 2147483648
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4.i)
  %cmp.i = icmp eq i64 %and4.i, 0
  %or.cond.i = select i1 %tobool.not.i, i1 %cmp.i, i1 false
  br i1 %or.cond.i, label %if.then.i, label %if.then.if.end.i_crit_edge

if.then.if.end.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %gorch.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 32
  %18 = ptrtoint ptr %gorch.i to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %gorch.i, align 8
  %inc6.i = add i64 %19, 1
  store i64 %inc6.i, ptr %gorch.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then.if.end.i_crit_edge
  %20 = ptrtoint ptr %data to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %data, align 2
  %add.ptr1.i.i = getelementptr i8, ptr %data, i32 2
  %22 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %add.ptr1.i.i, align 2
  %and9.i.i = and i16 %23, %21
  %add.ptr3.i.i = getelementptr i8, ptr %data, i32 4
  %24 = ptrtoint ptr %add.ptr3.i.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %add.ptr3.i.i, align 2
  %and510.i.i = and i16 %and9.i.i, %25
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i.i)
  %cmp.i.i = icmp eq i16 %and510.i.i, -1
  br i1 %cmp.i.i, label %if.then7.i, label %if.else.i

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %bprc.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 28
  br label %if.end13.sink.split.i

if.else.i:                                        ; preds = %if.end.i
  %26 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %data, align 4
  %28 = and i32 %27, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.i.not.i = icmp eq i32 %28, 0
  br i1 %tobool.i.not.i, label %if.else.i.if.end13.i_crit_edge, label %if.then10.i

if.else.i.if.end13.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13.i

if.then10.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %mprc.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 29
  br label %if.end13.sink.split.i

if.end13.sink.split.i:                            ; preds = %if.then10.i, %if.then7.i
  %mprc.sink98.i = phi ptr [ %mprc.i, %if.then10.i ], [ %bprc.i, %if.then7.i ]
  %29 = ptrtoint ptr %mprc.sink98.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %mprc.sink98.i, align 8
  %inc11.i = add i64 %30, 1
  store i64 %inc11.i, ptr %mprc.sink98.i, align 8
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.end13.sink.split.i, %if.else.i.if.end13.i_crit_edge
  %max_frame_size.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 28
  %31 = ptrtoint ptr %max_frame_size.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %max_frame_size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %dec.i, i32 %32)
  %cmp14.i = icmp eq i32 %dec.i, %32
  br i1 %cmp14.i, label %if.then16.i, label %if.end13.i.if.end23.i_crit_edge

if.end13.i.if.end23.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23.i

if.then16.i:                                      ; preds = %if.end13.i
  %roc.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 38
  %33 = ptrtoint ptr %roc.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %roc.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %34)
  %cmp17.not.i = icmp eq i64 %34, 0
  br i1 %cmp17.not.i, label %if.then16.i.if.end23.i_crit_edge, label %if.then19.i

if.then16.i.if.end23.i_crit_edge:                 ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23.i

if.then19.i:                                      ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #16
  %dec21.i = add i64 %34, -1
  %35 = ptrtoint ptr %roc.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %dec21.i, ptr %roc.i, align 8
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then19.i, %if.then16.i.if.end23.i_crit_edge, %if.end13.i.if.end23.i_crit_edge
  %36 = zext i32 %length to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.239)
  switch i32 %length, label %if.end23.i.e1000_tbi_adjust_stats.exit_crit_edge [
    i32 65, label %if.then26.i
    i32 128, label %if.then32.i
    i32 256, label %if.then39.i
    i32 512, label %if.then46.i
    i32 1024, label %if.then53.i
    i32 1523, label %if.then60.i
  ]

if.end23.i.e1000_tbi_adjust_stats.exit_crit_edge: ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_tbi_adjust_stats.exit

if.then26.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  %prc64.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 21
  %37 = ptrtoint ptr %prc64.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %prc64.i, align 8
  %inc27.i = add i64 %38, 1
  store i64 %inc27.i, ptr %prc64.i, align 8
  %prc127.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 22
  br label %if.end68.sink.split.i

if.then32.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  %prc12733.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 22
  %39 = ptrtoint ptr %prc12733.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %prc12733.i, align 8
  %inc34.i = add i64 %40, 1
  store i64 %inc34.i, ptr %prc12733.i, align 8
  %prc255.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 23
  br label %if.end68.sink.split.i

if.then39.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  %prc25540.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 23
  %41 = ptrtoint ptr %prc25540.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %prc25540.i, align 8
  %inc41.i = add i64 %42, 1
  store i64 %inc41.i, ptr %prc25540.i, align 8
  %prc511.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 24
  br label %if.end68.sink.split.i

if.then46.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  %prc51147.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 24
  %43 = ptrtoint ptr %prc51147.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %prc51147.i, align 8
  %inc48.i = add i64 %44, 1
  store i64 %inc48.i, ptr %prc51147.i, align 8
  %prc1023.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 25
  br label %if.end68.sink.split.i

if.then53.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  %prc102354.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 25
  %45 = ptrtoint ptr %prc102354.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %prc102354.i, align 8
  %inc55.i = add i64 %46, 1
  store i64 %inc55.i, ptr %prc102354.i, align 8
  %prc1522.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 26
  br label %if.end68.sink.split.i

if.then60.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  %prc152261.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 54, i32 26
  br label %if.end68.sink.split.i

if.end68.sink.split.i:                            ; preds = %if.then60.i, %if.then53.i, %if.then46.i, %if.then39.i, %if.then32.i, %if.then26.i
  %prc255.sink100.i = phi ptr [ %prc255.i, %if.then32.i ], [ %prc1023.i, %if.then46.i ], [ %prc152261.i, %if.then60.i ], [ %prc1522.i, %if.then53.i ], [ %prc511.i, %if.then39.i ], [ %prc127.i, %if.then26.i ]
  %.sink99.i = phi i64 [ -1, %if.then32.i ], [ -1, %if.then46.i ], [ 1, %if.then60.i ], [ -1, %if.then53.i ], [ -1, %if.then39.i ], [ -1, %if.then26.i ]
  %47 = ptrtoint ptr %prc255.sink100.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %prc255.sink100.i, align 8
  %dec35.i = add i64 %48, %.sink99.i
  store i64 %dec35.i, ptr %prc255.sink100.i, align 8
  br label %e1000_tbi_adjust_stats.exit

e1000_tbi_adjust_stats.exit:                      ; preds = %if.end68.sink.split.i, %if.end23.i.e1000_tbi_adjust_stats.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %stats_lock, i32 noundef %call29) #14
  br label %cleanup

cleanup:                                          ; preds = %e1000_tbi_adjust_stats.exit, %land.lhs.true20.cleanup_crit_edge, %cond.false.cleanup_crit_edge, %land.lhs.true14.cleanup_crit_edge, %cond.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %e1000_tbi_adjust_stats.exit ], [ false, %land.lhs.true20.cleanup_crit_edge ], [ false, %cond.false.cleanup_crit_edge ], [ false, %land.lhs.true14.cleanup_crit_edge ], [ false, %cond.true.cleanup_crit_edge ], [ false, %entry.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @napi_get_frags(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @napi_gro_frags(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__napi_alloc_skb(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_local_page_prot(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_local_indexed(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @napi_gro_receive(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___pskb_trim(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @napi_build_skb(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_netdev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_trim(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_cpu(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__netdev_alloc_frag_align(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_frag_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_phy_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @e1000_alloc_dummy_rx_buffers(ptr nocapture noundef %adapter, ptr nocapture noundef %rx_ring, i32 noundef %cleaned_count) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_write_vfta(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @disable_hardirq(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_intr(i32 noundef %irq, ptr noundef %data) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %data, i32 2304
  %hw1 = getelementptr i8, ptr %data, i32 3296
  %0 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 192
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !665
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !456

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags = getelementptr i8, ptr %data, i32 4240
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %flags, align 4
  %5 = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool8.not = icmp eq i32 %5, 0
  br i1 %tobool8.not, label %if.end16, label %if.end.cleanup_crit_edge, !prof !576

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %6 = and i32 %2, 201326592
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool17.not = icmp eq i32 %6, 0
  br i1 %tobool17.not, label %if.end16.do.body_crit_edge, label %if.then24, !prof !576

if.end16.do.body_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.then24:                                        ; preds = %if.end16
  %get_link_status = getelementptr i8, ptr %data, i32 3536
  %7 = ptrtoint ptr %get_link_status to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 1, ptr %get_link_status, align 4
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %flags, align 4
  %10 = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool27.not = icmp eq i32 %10, 0
  br i1 %tobool27.not, label %if.then28, label %if.then24.do.body_crit_edge

if.then24.do.body_crit_edge:                      ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.then28:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  %watchdog_task = getelementptr i8, ptr %data, i32 4304
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %11 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %11, ptr noundef %watchdog_task, i32 noundef 1) #14
  br label %do.body

do.body:                                          ; preds = %if.then28, %if.then24.do.body_crit_edge, %if.end16.do.body_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !666
  tail call void @arm_heavy_mb() #14
  %12 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw1, align 4
  %add.ptr36 = getelementptr i8, ptr %13, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr36, i32 -1) #14, !srcloc !421
  %14 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw1, align 4
  %add.ptr43 = getelementptr i8, ptr %15, i32 8
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr43) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !667
  %napi = getelementptr i8, ptr %data, i32 3008
  %call47 = tail call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #14
  br i1 %call47, label %if.then54, label %if.else, !prof !576

if.then54:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %total_tx_bytes = getelementptr i8, ptr %data, i32 2888
  %17 = call ptr @memset(ptr %total_tx_bytes, i32 0, i32 16)
  tail call void @__napi_schedule(ptr noundef %napi) #14
  br label %cleanup

if.else:                                          ; preds = %do.body
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %flags, align 4
  %20 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool58.not = icmp eq i32 %20, 0
  br i1 %tobool58.not, label %if.then59, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then59:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @e1000_irq_enable(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %if.then59, %if.else.cleanup_crit_edge, %if.then54, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 1, %if.end.cleanup_crit_edge ], [ 1, %if.else.cleanup_crit_edge ], [ 1, %if.then59 ], [ 1, %if.then54 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @enable_irq(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_schedule_prep(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__napi_schedule(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_complete_done(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dql_completed(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_schedule_queue(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @print_hex_dump(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_get_speed_and_duplex(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_update_adaptive(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @e1000_phy_setup_autoneg(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__e1000_shutdown(ptr noundef %pdev, ptr nocapture noundef writeonly %enable_wake) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %hw2 = getelementptr i8, ptr %1, i32 3296
  %wol = getelementptr i8, ptr %1, i32 2828
  %2 = ptrtoint ptr %wol to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %wol, align 4
  tail call void @netif_device_detach(ptr noundef %1) #14
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.if.end29_crit_edge, label %while.cond.preheader

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

while.cond.preheader:                             ; preds = %entry
  %flags = getelementptr i8, ptr %1, i32 4240
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %flags, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not8 = icmp eq i32 %8, 0
  br i1 %tobool.not8, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %count.09 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ 50, %while.cond.preheader.while.body_crit_edge ]
  %dec = add nsw i32 %count.09, -1
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #14
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags, align 4
  %11 = and i32 %10, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not = icmp eq i32 %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool5.not = icmp eq i32 %dec, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %tobool5.not
  br i1 %or.cond, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %flags, align 4
  %14 = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool8.not = icmp eq i32 %14, 0
  br i1 %tobool8.not, label %while.end.if.end_crit_edge, label %do.end, !prof !576

while.end.if.end_crit_edge:                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 5077, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %while.end.if.end_crit_edge
  tail call void @e1000_down(ptr noundef %add.ptr.i)
  br label %if.end29

if.end29:                                         ; preds = %if.end, %entry.if.end29_crit_edge
  %15 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hw2, align 4
  %add.ptr = getelementptr i8, ptr %16, i32 8
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !668
  %18 = and i32 %17, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool33.not = icmp eq i32 %18, 0
  %and35 = and i32 %3, -2
  %spec.select = select i1 %tobool33.not, i32 %3, i32 %and35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select)
  %tobool37 = icmp ne i32 %spec.select, 0
  br i1 %tobool37, label %if.then38, label %do.body125

if.then38:                                        ; preds = %if.end29
  %mac_type = getelementptr i8, ptr %1, i32 3308
  tail call fastcc void @e1000_setup_rctl(ptr noundef %add.ptr.i)
  tail call void @e1000_set_rx_mode(ptr noundef %1)
  %19 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw2, align 4
  %add.ptr45 = getelementptr i8, ptr %20, i32 256
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr45) #14, !srcloc !422
  %22 = tail call i32 @llvm.bswap.i32(i32 %21)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !669
  %and49 = shl i32 %spec.select, 1
  %23 = and i32 %and49, 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !670
  tail call void @arm_heavy_mb() #14
  %24 = or i32 %23, %22
  %or56 = or i32 %24, 2
  %25 = tail call i32 @llvm.bswap.i32(i32 %or56)
  %26 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hw2, align 4
  %add.ptr61 = getelementptr i8, ptr %27, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr61, i32 %25) #14, !srcloc !421
  %28 = ptrtoint ptr %mac_type to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mac_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %29)
  %cmp63 = icmp ugt i32 %29, 4
  br i1 %cmp63, label %if.then64, label %if.then38.if.end84_crit_edge

if.then38.if.end84_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end84

if.then64:                                        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #16
  %30 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw2, align 4
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %31) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !671
  %33 = or i32 %32, 12288
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !672
  tail call void @arm_heavy_mb() #14
  %34 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hw2, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %35, i32 %33) #14, !srcloc !421
  br label %if.end84

if.end84:                                         ; preds = %if.then64, %if.then38.if.end84_crit_edge
  %media_type = getelementptr i8, ptr %1, i32 3320
  %36 = ptrtoint ptr %media_type to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %media_type, align 4
  %.off = add i32 %37, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then88, label %if.end84.do.body109_crit_edge

if.end84.do.body109_crit_edge:                    ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body109

if.then88:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #16
  %38 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hw2, align 4
  %add.ptr95 = getelementptr i8, ptr %39, i32 24
  %40 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr95) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !673
  %41 = or i32 %40, -2147483648
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !674
  tail call void @arm_heavy_mb() #14
  %42 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hw2, align 4
  %add.ptr107 = getelementptr i8, ptr %43, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr107, i32 %41) #14, !srcloc !421
  br label %do.body109

do.body109:                                       ; preds = %if.then88, %if.end84.do.body109_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !675
  tail call void @arm_heavy_mb() #14
  %44 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %hw2, align 4
  %add.ptr116 = getelementptr i8, ptr %45, i32 22528
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr116, i32 33554432) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !676
  tail call void @arm_heavy_mb() #14
  %46 = tail call i32 @llvm.bswap.i32(i32 %spec.select)
  %47 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %hw2, align 4
  %add.ptr124 = getelementptr i8, ptr %48, i32 22536
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr124, i32 %46) #14, !srcloc !421
  br label %if.end141

do.body125:                                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !677
  tail call void @arm_heavy_mb() #14
  %49 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hw2, align 4
  %add.ptr132 = getelementptr i8, ptr %50, i32 22528
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr132, i32 0) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !678
  tail call void @arm_heavy_mb() #14
  %51 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %hw2, align 4
  %add.ptr140 = getelementptr i8, ptr %52, i32 22536
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr140, i32 0) #14, !srcloc !421
  br label %if.end141

if.end141:                                        ; preds = %do.body125, %do.body109
  %en_mng_pt.i = getelementptr i8, ptr %1, i32 2836
  %53 = ptrtoint ptr %en_mng_pt.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %en_mng_pt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.i = icmp eq i32 %54, 0
  br i1 %tobool.not.i, label %if.end141.e1000_release_manageability.exit_crit_edge, label %if.then.i

if.end141.e1000_release_manageability.exit_crit_edge: ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_release_manageability.exit

if.then.i:                                        ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #16
  %55 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %hw2, align 4
  %add.ptr.i4 = getelementptr i8, ptr %56, i32 22560
  %57 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i4) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !452
  %58 = or i32 %57, 2097152
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !453
  tail call void @arm_heavy_mb() #14
  %59 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hw2, align 4
  %add.ptr7.i = getelementptr i8, ptr %60, i32 22560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7.i, i32 %58) #14, !srcloc !421
  br label %e1000_release_manageability.exit

e1000_release_manageability.exit:                 ; preds = %if.then.i, %if.end141.e1000_release_manageability.exit_crit_edge
  %frombool = zext i1 %tobool37 to i8
  %61 = ptrtoint ptr %enable_wake to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %frombool, ptr %enable_wake, align 1
  %62 = ptrtoint ptr %en_mng_pt.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %en_mng_pt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool147.not = icmp eq i32 %63, 0
  %spec.store.select = select i1 %tobool147.not, i8 %frombool, i8 1
  %64 = ptrtoint ptr %enable_wake to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %spec.store.select, ptr %enable_wake, align 1
  %65 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %state.i, align 4
  %and1.i.i6 = and i32 %66, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i6)
  %tobool.i7.not = icmp eq i32 %and1.i.i6, 0
  br i1 %tobool.i7.not, label %e1000_release_manageability.exit.if.end152_crit_edge, label %if.then151

e1000_release_manageability.exit.if.end152_crit_edge: ; preds = %e1000_release_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end152

if.then151:                                       ; preds = %e1000_release_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  %netdev1.i = getelementptr i8, ptr %1, i32 3288
  %67 = ptrtoint ptr %netdev1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %netdev1.i, align 8
  %pdev.i = getelementptr i8, ptr %1, i32 3292
  %69 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %pdev.i, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %70, i32 0, i32 46
  %71 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %irq.i, align 4
  %call.i = tail call ptr @free_irq(i32 noundef %72, ptr noundef %68) #14
  br label %if.end152

if.end152:                                        ; preds = %if.then151, %e1000_release_manageability.exit.if.end152_crit_edge
  %flags153 = getelementptr i8, ptr %1, i32 4240
  %call154 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %flags153) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call154)
  %tobool155.not = icmp eq i32 %call154, 0
  br i1 %tobool155.not, label %if.then156, label %if.end152.if.end157_crit_edge

if.end152.if.end157_crit_edge:                    ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end157

if.then156:                                       ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  br label %if.end157

if.end157:                                        ; preds = %if.then156, %if.end152.if.end157_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_wake_from_d3(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_set_power_state(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_detach(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_setup_rctl(ptr nocapture noundef readonly %adapter) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %0 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw1, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 256
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !679
  %mc_filter_type = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 30
  %3 = ptrtoint ptr %mc_filter_type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %mc_filter_type, align 4
  %shl = shl i32 %4, 12
  %tbi_compatibility_on = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53, i32 69
  %5 = ptrtoint ptr %tbi_compatibility_on to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %tbi_compatibility_on, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  %masksel = select i1 %tobool.not, i32 0, i32 4
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %7 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %netdev, align 8
  %mtu = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 20
  %9 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mtu, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1501, i32 %10)
  %cmp8 = icmp ult i32 %10, 1501
  %11 = and i32 %2, -615514113
  %masksel61 = select i1 %cmp8, i32 0, i32 32
  %12 = or i32 %11, 8388608
  %13 = call i32 @llvm.bswap.i32(i32 %12)
  %and7.masked = or i32 %13, %shl
  %and11 = or i32 %and7.masked, %masksel
  %rctl.1 = or i32 %and11, %masksel61
  %and15 = and i32 %rctl.1, -33751041
  %rx_buffer_len = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 3
  %14 = ptrtoint ptr %rx_buffer_len to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rx_buffer_len, align 8
  %16 = add i32 %15, -2048
  %17 = tail call i32 @llvm.fshl.i32(i32 %16, i32 %16, i32 21)
  %18 = zext i32 %17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.240)
  switch i32 %17, label %entry.sw.epilog_crit_edge [
    i32 7, label %sw.bb23
    i32 1, label %sw.bb19
    i32 3, label %sw.bb21
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb19:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %or20 = or i32 %rctl.1, 33751040
  br label %sw.epilog

sw.bb21:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %or22 = or i32 %and15, 33685504
  br label %sw.epilog

sw.bb23:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %or24 = or i32 %and15, 33619968
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb23, %sw.bb21, %sw.bb19, %entry.sw.epilog_crit_edge
  %rctl.2 = phi i32 [ %or22, %sw.bb21 ], [ %or20, %sw.bb19 ], [ %or24, %sw.bb23 ], [ %and15, %entry.sw.epilog_crit_edge ]
  %features = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 23
  %19 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %features, align 16
  %and26 = and i64 %20, 17592186044416
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and26)
  %tobool27.not = icmp eq i64 %and26, 0
  %or29 = and i32 %rctl.2, -13402117
  %and30 = or i32 %or29, 8421380
  %rctl.3 = select i1 %tobool27.not, i32 %rctl.2, i32 %and30
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !680
  tail call void @arm_heavy_mb() #14
  %21 = tail call i32 @llvm.bswap.i32(i32 %rctl.3)
  %22 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw1, align 4
  %add.ptr37 = getelementptr i8, ptr %23, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr37, i32 %21) #14, !srcloc !421
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_io_error_detected(ptr noundef %pdev, i32 noundef %state) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  tail call void @netif_device_detach(ptr noundef %1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %state)
  %cmp = icmp eq i32 %state, 3
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end.if.end4_crit_edge, label %if.then3

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @e1000_down(ptr noundef %add.ptr.i)
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end.if.end4_crit_edge
  %flags = getelementptr i8, ptr %1, i32 4240
  %call5 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %flags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %if.then6, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %if.end4.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 4, %entry.cleanup_crit_edge ], [ 3, %if.then6 ], [ 3, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_io_slot_reset(ptr noundef %pdev) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %hw2 = getelementptr i8, ptr %1, i32 3296
  %need_ioport = getelementptr i8, ptr %1, i32 4252
  %2 = ptrtoint ptr %need_ioport to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %need_ioport, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call3 = tail call i32 @pci_enable_device(ptr noundef %pdev) #14
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call i32 @pci_enable_device_mem(ptr noundef %pdev) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %err.0 = phi i32 [ %call3, %if.then ], [ %call4, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool5.not = icmp eq i32 %err.0, 0
  br i1 %tobool5.not, label %do.end12, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.202) #17
  br label %cleanup

do.end12:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !681
  %flags = getelementptr i8, ptr %1, i32 4240
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %flags) #14
  tail call void @pci_set_master(ptr noundef %pdev) #14
  %call15 = tail call i32 @pci_enable_wake(ptr noundef %pdev, i32 noundef 3, i1 noundef zeroext false) #14
  %call16 = tail call i32 @pci_enable_wake(ptr noundef %pdev, i32 noundef 4, i1 noundef zeroext false) #14
  tail call void @e1000_reset(ptr noundef %add.ptr.i)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !682
  tail call void @arm_heavy_mb() #14
  %4 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw2, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 22544
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 -1) #14, !srcloc !421
  br label %cleanup

cleanup:                                          ; preds = %do.end12, %do.end
  %retval.0 = phi i32 [ 4, %do.end ], [ 5, %do.end12 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @e1000_io_resume(ptr nocapture noundef readonly %pdev) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %en_mng_pt.i = getelementptr i8, ptr %1, i32 2836
  %2 = ptrtoint ptr %en_mng_pt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %en_mng_pt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %entry.e1000_init_manageability.exit_crit_edge, label %if.then.i

entry.e1000_init_manageability.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_init_manageability.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %hw1.i = getelementptr i8, ptr %1, i32 3296
  %4 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw1.i, align 4
  %add.ptr.i11 = getelementptr i8, ptr %5, i32 22560
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i11) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !425
  %7 = and i32 %6, -2097153
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !426
  tail call void @arm_heavy_mb() #14
  %8 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw1.i, align 4
  %add.ptr7.i = getelementptr i8, ptr %9, i32 22560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7.i, i32 %7) #14, !srcloc !421
  br label %e1000_init_manageability.exit

e1000_init_manageability.exit:                    ; preds = %if.then.i, %entry.e1000_init_manageability.exit_crit_edge
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %e1000_init_manageability.exit.if.end6_crit_edge, label %if.then

e1000_init_manageability.exit.if.end6_crit_edge:  ; preds = %e1000_init_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then:                                          ; preds = %e1000_init_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  %hw1.i12 = getelementptr i8, ptr %1, i32 3296
  tail call fastcc void @e1000_configure(ptr noundef %add.ptr.i) #14
  %flags.i = getelementptr i8, ptr %1, i32 4240
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %flags.i) #14
  %napi.i = getelementptr i8, ptr %1, i32 3008
  tail call void @napi_enable(ptr noundef %napi.i) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  tail call void @arm_heavy_mb() #14
  %12 = ptrtoint ptr %hw1.i12 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw1.i12, align 4
  %add.ptr.i.i = getelementptr i8, ptr %13, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 -1660944384) #14, !srcloc !421
  %14 = ptrtoint ptr %hw1.i12 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw1.i12, align 4
  %add.ptr6.i.i = getelementptr i8, ptr %15, i32 8
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i.i) #14, !srcloc !422
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  %netdev.i = getelementptr i8, ptr %1, i32 3288
  %17 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %netdev.i, align 8
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 103
  %19 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %_tx.i.i.i, align 128
  tail call void @netif_tx_wake_queue(ptr noundef %20) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !424
  tail call void @arm_heavy_mb() #14
  %21 = ptrtoint ptr %hw1.i12 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw1.i12, align 4
  %add.ptr.i13 = getelementptr i8, ptr %22, i32 200
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i13, i32 67108864) #14, !srcloc !421
  br label %if.end6

if.end6:                                          ; preds = %if.then, %e1000_init_manageability.exit.if.end6_crit_edge
  tail call void @netif_device_attach(ptr noundef %1) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_wake(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_attach(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_suspend(ptr noundef %dev) #4 align 64 {
entry:
  %wake = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -136
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %wake) #14
  %0 = ptrtoint ptr %wake to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %wake, align 1, !annotation !460
  call fastcc void @__e1000_shutdown(ptr noundef %add.ptr, ptr noundef nonnull %wake)
  %1 = ptrtoint ptr %wake to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %wake, align 1, !range !458
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool = icmp ne i8 %2, 0
  %call2 = tail call i32 @device_set_wakeup_enable(ptr noundef %dev, i1 noundef zeroext %tobool) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %wake) #14
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @e1000_resume(ptr noundef %dev) #4 align 64 {
entry:
  %mii_reg.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -136
  %driver_data.i.i = getelementptr i8, ptr %dev, i32 164
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %hw2 = getelementptr i8, ptr %1, i32 3296
  %need_ioport = getelementptr i8, ptr %1, i32 4252
  %2 = ptrtoint ptr %need_ioport to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %need_ioport, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call3 = tail call i32 @pci_enable_device(ptr noundef %add.ptr) #14
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call i32 @pci_enable_device_mem(ptr noundef %add.ptr) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %err.0 = phi i32 [ %call3, %if.then ], [ %call4, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool5.not = icmp eq i32 %err.0, 0
  br i1 %tobool5.not, label %do.end13, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.206) #17
  br label %cleanup

do.end13:                                         ; preds = %if.end
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !683
  %flags = getelementptr i8, ptr %1, i32 4240
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %flags) #14
  tail call void @pci_set_master(ptr noundef %add.ptr) #14
  %call16 = tail call i32 @pci_enable_wake(ptr noundef %add.ptr, i32 noundef 3, i1 noundef zeroext false) #14
  %call17 = tail call i32 @pci_enable_wake(ptr noundef %add.ptr, i32 noundef 4, i1 noundef zeroext false) #14
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %do.end13.if.end24_crit_edge, label %if.then19

do.end13.if.end24_crit_edge:                      ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then19:                                        ; preds = %do.end13
  %netdev1.i = getelementptr i8, ptr %1, i32 3288
  %6 = ptrtoint ptr %netdev1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %netdev1.i, align 8
  %pdev.i = getelementptr i8, ptr %1, i32 3292
  %8 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev.i, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 46
  %10 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %irq.i, align 4
  %call.i.i = tail call i32 @request_threaded_irq(i32 noundef %11, ptr noundef nonnull @e1000_intr, ptr noundef null, i32 noundef 128, ptr noundef %7, ptr noundef %7) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.then19.if.end24_crit_edge, label %do.body.i

if.then19.if.end24_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

do.body.i:                                        ; preds = %if.then19
  %msg_enable.i = getelementptr i8, ptr %1, i32 4232
  %12 = ptrtoint ptr %msg_enable.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %msg_enable.i, align 8
  %and.i = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %do.body.i.cleanup_crit_edge, label %if.then3.i

do.body.i.cleanup_crit_edge:                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %14 = ptrtoint ptr %netdev1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %netdev1.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %15, ptr noundef nonnull @.str.208, i32 noundef %call.i.i) #17
  br label %cleanup

if.end24:                                         ; preds = %if.then19.if.end24_crit_edge, %do.end13.if.end24_crit_edge
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mii_reg.i) #14
  %16 = ptrtoint ptr %mii_reg.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 0, ptr %mii_reg.i, align 2
  %media_type.i = getelementptr i8, ptr %1, i32 3320
  %17 = ptrtoint ptr %media_type.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %media_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i = icmp eq i32 %18, 0
  br i1 %cmp.i, label %if.then.i, label %if.end24.e1000_power_up_phy.exit_crit_edge

if.end24.e1000_power_up_phy.exit_crit_edge:       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_power_up_phy.exit

if.then.i:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = call i32 @e1000_read_phy_reg(ptr noundef %hw2, i32 noundef 0, ptr noundef nonnull %mii_reg.i) #14
  %19 = ptrtoint ptr %mii_reg.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %mii_reg.i, align 2
  %21 = and i16 %20, -2049
  store i16 %21, ptr %mii_reg.i, align 2
  %call3.i = call i32 @e1000_write_phy_reg(ptr noundef %hw2, i32 noundef 0, i16 noundef zeroext %21) #14
  br label %e1000_power_up_phy.exit

e1000_power_up_phy.exit:                          ; preds = %if.then.i, %if.end24.e1000_power_up_phy.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mii_reg.i) #14
  call void @e1000_reset(ptr noundef %add.ptr.i)
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !684
  call void @arm_heavy_mb() #14
  %22 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hw2, align 4
  %add.ptr28 = getelementptr i8, ptr %23, i32 22544
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr28, i32 -1) #14, !srcloc !421
  %en_mng_pt.i = getelementptr i8, ptr %1, i32 2836
  %24 = ptrtoint ptr %en_mng_pt.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %en_mng_pt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i56 = icmp eq i32 %25, 0
  br i1 %tobool.not.i56, label %e1000_power_up_phy.exit.e1000_init_manageability.exit_crit_edge, label %if.then.i59

e1000_power_up_phy.exit.e1000_init_manageability.exit_crit_edge: ; preds = %e1000_power_up_phy.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_init_manageability.exit

if.then.i59:                                      ; preds = %e1000_power_up_phy.exit
  call void @__sanitizer_cov_trace_pc() #16
  %26 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hw2, align 4
  %add.ptr.i58 = getelementptr i8, ptr %27, i32 22560
  %28 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i58) #14, !srcloc !422
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !425
  %29 = and i32 %28, -2097153
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !426
  call void @arm_heavy_mb() #14
  %30 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hw2, align 4
  %add.ptr7.i = getelementptr i8, ptr %31, i32 22560
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7.i, i32 %29) #14, !srcloc !421
  br label %e1000_init_manageability.exit

e1000_init_manageability.exit:                    ; preds = %if.then.i59, %e1000_power_up_phy.exit.e1000_init_manageability.exit_crit_edge
  %32 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %state.i, align 4
  %and1.i.i61 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i61)
  %tobool.i62.not = icmp eq i32 %and1.i.i61, 0
  br i1 %tobool.i62.not, label %e1000_init_manageability.exit.if.end32_crit_edge, label %if.then30

e1000_init_manageability.exit.if.end32_crit_edge: ; preds = %e1000_init_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

if.then30:                                        ; preds = %e1000_init_manageability.exit
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @e1000_configure(ptr noundef %add.ptr.i) #14
  call void @_clear_bit(i32 noundef 2, ptr noundef %flags) #14
  %napi.i = getelementptr i8, ptr %1, i32 3008
  call void @napi_enable(ptr noundef %napi.i) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !420
  call void @arm_heavy_mb() #14
  %34 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hw2, align 4
  %add.ptr.i.i = getelementptr i8, ptr %35, i32 208
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 -1660944384) #14, !srcloc !421
  %36 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hw2, align 4
  %add.ptr6.i.i = getelementptr i8, ptr %37, i32 8
  %38 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr6.i.i) #14, !srcloc !422
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !423
  %netdev.i = getelementptr i8, ptr %1, i32 3288
  %39 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %netdev.i, align 8
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %40, i32 0, i32 103
  %41 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %_tx.i.i.i, align 128
  call void @netif_tx_wake_queue(ptr noundef %42) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !424
  call void @arm_heavy_mb() #14
  %43 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %hw2, align 4
  %add.ptr.i64 = getelementptr i8, ptr %44, i32 200
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i64, i32 67108864) #14, !srcloc !421
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %e1000_init_manageability.exit.if.end32_crit_edge
  call void @netif_device_attach(ptr noundef %1) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end32, %if.then3.i, %do.body.i.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ %err.0, %do.end ], [ 0, %if.end32 ], [ %call.i.i, %do.body.i.cleanup_crit_edge ], [ %call.i.i, %if.then3.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @e1000_config_collision_dist(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_wake_queue(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #14
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_irq(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_work_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_threaded_irq(i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @vzalloc(i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dma_alloc_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_free_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_clean_tx_ring(ptr nocapture noundef readonly %adapter, ptr nocapture noundef %tx_ring) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %count = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 3
  %0 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp27.not = icmp eq i32 %1, 0
  br i1 %cmp27.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %buffer_info2 = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 6
  %pdev4.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  br label %for.body

for.body:                                         ; preds = %e1000_unmap_and_free_tx_resource.exit.for.body_crit_edge, %for.body.lr.ph
  %i.028 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %e1000_unmap_and_free_tx_resource.exit.for.body_crit_edge ]
  %2 = ptrtoint ptr %buffer_info2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buffer_info2, align 4
  %arrayidx = getelementptr %struct.e1000_tx_buffer, ptr %3, i32 %i.028
  %dma.i = getelementptr %struct.e1000_tx_buffer, ptr %3, i32 %i.028, i32 1
  %4 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %dma.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %for.body.if.end10.i_crit_edge, label %if.then.i

for.body.if.end10.i_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.i

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %pdev4.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pdev4.i, align 4
  %dev5.i = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  %length7.i = getelementptr %struct.e1000_tx_buffer, ptr %3, i32 %i.028, i32 3
  %8 = ptrtoint ptr %length7.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %length7.i, align 4
  %conv8.i = zext i16 %9 to i32
  tail call void @dma_unmap_page_attrs(ptr noundef %dev5.i, i32 noundef %5, i32 noundef %conv8.i, i32 noundef 1, i32 noundef 0) #14
  %10 = ptrtoint ptr %dma.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %dma.i, align 4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then.i, %for.body.if.end10.i_crit_edge
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx, align 4
  %tobool11.not.i = icmp eq ptr %12, null
  br i1 %tobool11.not.i, label %if.end10.i.e1000_unmap_and_free_tx_resource.exit_crit_edge, label %if.then12.i

if.end10.i.e1000_unmap_and_free_tx_resource.exit_crit_edge: ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %e1000_unmap_and_free_tx_resource.exit

if.then12.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @napi_consume_skb(ptr noundef nonnull %12, i32 noundef 0) #14
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %arrayidx, align 4
  br label %e1000_unmap_and_free_tx_resource.exit

e1000_unmap_and_free_tx_resource.exit:            ; preds = %if.then12.i, %if.end10.i.e1000_unmap_and_free_tx_resource.exit_crit_edge
  %time_stamp.i = getelementptr %struct.e1000_tx_buffer, ptr %3, i32 %i.028, i32 2
  %14 = ptrtoint ptr %time_stamp.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %time_stamp.i, align 4
  %inc = add nuw i32 %i.028, 1
  %15 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %count, align 4
  %cmp = icmp ult i32 %inc, %16
  br i1 %cmp, label %e1000_unmap_and_free_tx_resource.exit.for.body_crit_edge, label %e1000_unmap_and_free_tx_resource.exit.for.end_crit_edge

e1000_unmap_and_free_tx_resource.exit.for.end_crit_edge: ; preds = %e1000_unmap_and_free_tx_resource.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

e1000_unmap_and_free_tx_resource.exit.for.body_crit_edge: ; preds = %e1000_unmap_and_free_tx_resource.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %e1000_unmap_and_free_tx_resource.exit.for.end_crit_edge, %entry.for.end_crit_edge
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %netdev = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 51
  %17 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %netdev, align 8
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 103
  %19 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr inbounds %struct.netdev_queue, ptr %20, i32 0, i32 13
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %state.i.i) #14
  %dql.i.i = getelementptr inbounds %struct.netdev_queue, ptr %20, i32 0, i32 15
  tail call void @dql_reset(ptr noundef %dql.i.i) #14
  %21 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %count, align 4
  %mul = mul i32 %22, 24
  %buffer_info4 = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 6
  %23 = ptrtoint ptr %buffer_info4 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %buffer_info4, align 4
  %25 = call ptr @memset(ptr %24, i32 0, i32 %mul)
  %26 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %tx_ring, align 4
  %size5 = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 2
  %28 = ptrtoint ptr %size5 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %size5, align 4
  %30 = call ptr @memset(ptr %27, i32 0, i32 %29)
  %next_to_use = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 4
  %31 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %next_to_use, align 4
  %next_to_clean = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 5
  %32 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %next_to_clean, align 4
  %last_tx_tso = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 9
  %33 = ptrtoint ptr %last_tx_tso to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 0, ptr %last_tx_tso, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !685
  tail call void @arm_heavy_mb() #14
  %34 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hw1, align 4
  %tdh = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 7
  %36 = ptrtoint ptr %tdh to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %tdh, align 4
  %conv = zext i16 %37 to i32
  %add.ptr = getelementptr i8, ptr %35, i32 %conv
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 0) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !686
  tail call void @arm_heavy_mb() #14
  %38 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hw1, align 4
  %tdt = getelementptr inbounds %struct.e1000_tx_ring, ptr %tx_ring, i32 0, i32 8
  %40 = ptrtoint ptr %tdt to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %tdt, align 2
  %conv10 = zext i16 %41 to i32
  %add.ptr11 = getelementptr i8, ptr %39, i32 %conv10
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr11, i32 0) #14, !srcloc !421
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dql_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @e1000_clean_rx_ring(ptr nocapture noundef %adapter, ptr nocapture noundef %rx_ring) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %count = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 3
  %0 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp75.not = icmp eq i32 %1, 0
  br i1 %cmp75.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %pdev2 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 52
  %2 = ptrtoint ptr %pdev2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev2, align 4
  %buffer_info3 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 6
  %clean_rx = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 37
  %dev18 = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  %rx_buffer_len20 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %if.end29.for.body_crit_edge, %for.body.lr.ph
  %i.076 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end29.for.body_crit_edge ]
  %4 = ptrtoint ptr %buffer_info3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %buffer_info3, align 4
  %arrayidx = getelementptr %struct.e1000_rx_buffer, ptr %5, i32 %i.076
  %6 = ptrtoint ptr %clean_rx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %clean_rx, align 4
  %cmp4 = icmp eq ptr %7, @e1000_clean_rx_irq
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %dma = getelementptr %struct.e1000_rx_buffer, ptr %5, i32 %i.076, i32 1
  %8 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dma, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %if.then.if.end_crit_edge, label %if.then5

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %rx_buffer_len20 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rx_buffer_len20, align 8
  tail call void @dma_unmap_page_attrs(ptr noundef %dev18, i32 noundef %9, i32 noundef %11, i32 noundef 2, i32 noundef 0) #14
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then.if.end_crit_edge
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 4
  %tobool7.not = icmp eq ptr %13, null
  br i1 %tobool7.not, label %if.end.if.end29_crit_edge, label %if.then8

if.end.if.end29_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @page_frag_free(ptr noundef nonnull %13) #14
  br label %if.end29.sink.split

if.else:                                          ; preds = %for.body
  %cmp13 = icmp eq ptr %7, @e1000_clean_jumbo_rx_irq
  br i1 %cmp13, label %if.then14, label %if.else.if.end29_crit_edge

if.else.if.end29_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then14:                                        ; preds = %if.else
  %dma15 = getelementptr %struct.e1000_rx_buffer, ptr %5, i32 %i.076, i32 1
  %14 = ptrtoint ptr %dma15 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %dma15, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool16.not = icmp eq i32 %15, 0
  br i1 %tobool16.not, label %if.then14.if.end21_crit_edge, label %if.then17

if.then14.if.end21_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21

if.then17:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %rx_buffer_len20 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %rx_buffer_len20, align 8
  tail call void @dma_unmap_page_attrs(ptr noundef %dev18, i32 noundef %15, i32 noundef %17, i32 noundef 2, i32 noundef 0) #14
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %if.then14.if.end21_crit_edge
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx, align 4
  %tobool23.not = icmp eq ptr %19, null
  br i1 %tobool23.not, label %if.end21.if.end29_crit_edge, label %if.then24

if.end21.if.end29_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then24:                                        ; preds = %if.end21
  %20 = getelementptr inbounds %struct.page, ptr %19, i32 0, i32 1
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  %and.i.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !576

if.then.i.i:                                      ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %22, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  %23 = ptrtoint ptr %19 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %23, %if.end.i.i ]
  %24 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %24, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %25 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp.i.i.i.i = icmp eq i32 %26, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !456

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %27 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %27, ptr noundef nonnull @.str.55) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !655
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !656
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %28 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !657
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %28, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !658
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@e1000_clean_rx_ring, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !622

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %24, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.if.end29.sink.split_crit_edge

folio_put_testzero.exit.i.i.if.end29.sink.split_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29.sink.split

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %24) #14
  br label %if.end29.sink.split

if.end29.sink.split:                              ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.if.end29.sink.split_crit_edge, %if.then8
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %arrayidx, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.end29.sink.split, %if.end21.if.end29_crit_edge, %if.else.if.end29_crit_edge, %if.end.if.end29_crit_edge
  %dma30 = getelementptr %struct.e1000_rx_buffer, ptr %5, i32 %i.076, i32 1
  %30 = ptrtoint ptr %dma30 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %dma30, align 4
  %inc = add nuw i32 %i.076, 1
  %31 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %count, align 4
  %cmp = icmp ult i32 %inc, %32
  br i1 %cmp, label %if.end29.for.body_crit_edge, label %if.end29.for.end_crit_edge

if.end29.for.end_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end29.for.body_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %if.end29.for.end_crit_edge, %entry.for.end_crit_edge
  %hw1 = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 53
  %skb.i = getelementptr inbounds %struct.e1000_adapter, ptr %adapter, i32 0, i32 40, i32 9
  %33 = ptrtoint ptr %skb.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %skb.i, align 4
  tail call void @kfree_skb_reason(ptr noundef %34, i32 noundef 0) #14
  %35 = ptrtoint ptr %skb.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %skb.i, align 4
  %rx_skb_top = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 7
  %36 = ptrtoint ptr %rx_skb_top to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %rx_skb_top, align 4
  %37 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %count, align 4
  %mul = shl i32 %38, 3
  %buffer_info32 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 6
  %39 = ptrtoint ptr %buffer_info32 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %buffer_info32, align 4
  %41 = call ptr @memset(ptr %40, i32 0, i32 %mul)
  %42 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %rx_ring, align 4
  %size33 = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 2
  %44 = ptrtoint ptr %size33 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %size33, align 4
  %46 = call ptr @memset(ptr %43, i32 0, i32 %45)
  %next_to_clean = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 5
  %47 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %next_to_clean, align 4
  %next_to_use = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 4
  %48 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %next_to_use, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !687
  tail call void @arm_heavy_mb() #14
  %49 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hw1, align 4
  %rdh = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 9
  %51 = ptrtoint ptr %rdh to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %rdh, align 4
  %conv = zext i16 %52 to i32
  %add.ptr = getelementptr i8, ptr %50, i32 %conv
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 0) #14, !srcloc !421
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !688
  tail call void @arm_heavy_mb() #14
  %53 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %hw1, align 4
  %rdt = getelementptr inbounds %struct.e1000_rx_ring, ptr %rx_ring, i32 0, i32 10
  %55 = ptrtoint ptr %rdt to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %rdt, align 2
  %conv38 = zext i16 %56 to i32
  %add.ptr39 = getelementptr i8, ptr %54, i32 %conv38
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr39, i32 0) #14, !srcloc !421
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umax.i16(i16, i16) #5

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 207)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 207)
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nounwind readonly }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { cold nounwind }
attributes #18 = { nounwind allocsize(0) }
attributes #19 = { nounwind allocsize(2) }
attributes #20 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !5, !7, !9, !11, !13, !14, !16, !17, !19, !21, !23, !25, !26, !27, !28, !29, !30, !31, !33, !35, !37, !39, !40, !42, !43, !45, !47, !48, !49, !50, !52, !53, !55, !57, !58, !59, !61, !62, !63, !65, !67, !69, !71, !73, !75, !77, !78, !79, !80, !82, !84, !86, !88, !90, !91, !92, !93, !95, !96, !97, !98, !100, !101, !102, !103, !105, !106, !108, !110, !111, !112, !114, !116, !118, !120, !122, !124, !126, !127, !128, !129, !131, !132, !133, !135, !137, !139, !141, !143, !144, !145, !147, !149, !151, !153, !154, !155, !157, !159, !160, !161, !162, !164, !165, !166, !168, !169, !170, !172, !174, !176, !178, !179, !180, !182, !183, !184, !186, !187, !188, !190, !191, !192, !194, !195, !196, !198, !199, !200, !202, !203, !204, !206, !207, !208, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !264, !266, !268, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !289, !290, !291, !293, !294, !295, !297, !299, !300, !302, !303, !304, !305, !307, !308, !309, !311, !312, !313, !315, !316, !317, !319, !320, !321, !323, !324, !325, !327, !328, !329, !331, !332, !333, !335, !336, !337, !339, !340, !341, !343, !344, !345, !347, !348, !349, !351, !352, !353, !355, !356, !357, !359, !360, !361, !363, !364, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !377, !378, !379, !381, !383, !385, !386, !387, !388, !390, !391, !392, !393, !395, !397, !398, !399, !400, !402, !404, !406, !408}
!llvm.named.register.sp = !{!410}
!llvm.module.flags = !{!411, !412, !413, !414, !415, !416, !417, !418}
!llvm.ident = !{!419}

!0 = !{ptr @e1000_driver_name, !1, !"e1000_driver_name", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 11, i32 6}
!2 = !{ptr @__param_copybreak, !3, !"__param_copybreak", i1 false, i1 false}
!3 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 163, i32 1}
!4 = !{ptr @__UNIQUE_ID_copybreaktype521, !3, !"__UNIQUE_ID_copybreaktype521", i1 false, i1 false}
!5 = !{ptr @__UNIQUE_ID_copybreak522, !6, !"__UNIQUE_ID_copybreak522", i1 false, i1 false}
!6 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 164, i32 1}
!7 = !{ptr @__UNIQUE_ID_author523, !8, !"__UNIQUE_ID_author523", i1 false, i1 false}
!8 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 192, i32 1}
!9 = !{ptr @__UNIQUE_ID_description524, !10, !"__UNIQUE_ID_description524", i1 false, i1 false}
!10 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 193, i32 1}
!11 = !{ptr @__UNIQUE_ID_file525, !12, !"__UNIQUE_ID_file525", i1 false, i1 false}
!12 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 194, i32 1}
!13 = !{ptr @__UNIQUE_ID_license526, !12, !"__UNIQUE_ID_license526", i1 false, i1 false}
!14 = !{ptr @__param_debug, !15, !"__param_debug", i1 false, i1 false}
!15 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 198, i32 1}
!16 = !{ptr @__UNIQUE_ID_debugtype527, !15, !"__UNIQUE_ID_debugtype527", i1 false, i1 false}
!17 = !{ptr @__UNIQUE_ID_debug528, !18, !"__UNIQUE_ID_debug528", i1 false, i1 false}
!18 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 199, i32 1}
!19 = !{ptr @__initcall__kmod_e1000__529_238_e1000_init_module6, !20, !"__initcall__kmod_e1000__529_238_e1000_init_module6", i1 false, i1 false}
!20 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 238, i32 1}
!21 = !{ptr @__exitcall_e1000_exit_module, !22, !"__exitcall_e1000_exit_module", i1 false, i1 false}
!22 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 251, i32 1}
!23 = !{ptr @.str, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 681, i32 3}
!25 = !{ptr @.str.1, !24, !"<string literal>", i1 false, i1 false}
!26 = !{ptr @.str.2, !24, !"<string literal>", i1 false, i1 false}
!27 = !{ptr @.str.3, !24, !"<string literal>", i1 false, i1 false}
!28 = !{ptr @.str.4, !24, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @e1000_reset._entry, !24, !"_entry", i1 false, i1 false}
!30 = !{ptr @e1000_reset._entry_ptr, !24, !"_entry_ptr", i1 false, i1 false}
!31 = !{ptr @.str.5, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1576, i32 4}
!33 = !{ptr @.str.6, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1768, i32 4}
!35 = !{ptr @.str.7, !36, !"<string literal>", i1 false, i1 false}
!36 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 4852, i32 3}
!37 = !{ptr @.str.8, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 5057, i32 2}
!39 = !{ptr @__param_str_copybreak, !3, !"__param_str_copybreak", i1 false, i1 false}
!40 = !{ptr @copybreak, !41, !"copybreak", i1 false, i1 false}
!41 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 162, i32 21}
!42 = !{ptr @__param_str_debug, !15, !"__param_str_debug", i1 false, i1 false}
!43 = !{ptr @debug, !44, !"debug", i1 false, i1 false}
!44 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 197, i32 12}
!45 = !{ptr @.str.9, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 223, i32 2}
!47 = !{ptr @.str.10, !46, !"<string literal>", i1 false, i1 false}
!48 = !{ptr @e1000_init_module._entry, !46, !"_entry", i1 false, i1 false}
!49 = !{ptr @e1000_init_module._entry_ptr, !46, !"_entry_ptr", i1 false, i1 false}
!50 = !{ptr @e1000_init_module._entry.11, !51, !"_entry", i1 false, i1 false}
!51 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 225, i32 2}
!52 = !{ptr @e1000_init_module._entry_ptr.12, !51, !"_entry_ptr", i1 false, i1 false}
!53 = !{ptr @.str.13, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 227, i32 8}
!55 = !{ptr @.str.15, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 230, i32 4}
!57 = !{ptr @e1000_init_module._entry.14, !56, !"_entry", i1 false, i1 false}
!58 = !{ptr @e1000_init_module._entry_ptr.16, !56, !"_entry_ptr", i1 false, i1 false}
!59 = !{ptr @.str.18, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 232, i32 4}
!61 = !{ptr @e1000_init_module._entry.17, !60, !"_entry", i1 false, i1 false}
!62 = !{ptr @e1000_init_module._entry_ptr.19, !60, !"_entry_ptr", i1 false, i1 false}
!63 = !{ptr @e1000_driver_string, !64, !"e1000_driver_string", i1 false, i1 false}
!64 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 12, i32 13}
!65 = !{ptr @e1000_copyright, !66, !"e1000_copyright", i1 false, i1 false}
!66 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 13, i32 19}
!67 = !{ptr @e1000_driver, !68, !"e1000_driver", i1 false, i1 false}
!68 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 180, i32 26}
!69 = !{ptr @e1000_pci_tbl, !70, !"e1000_pci_tbl", i1 false, i1 false}
!70 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 22, i32 35}
!71 = !{ptr @e1000_probe.cards_found, !72, !"cards_found", i1 false, i1 false}
!72 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 927, i32 13}
!73 = !{ptr @e1000_probe.global_quad_port_a, !74, !"global_quad_port_a", i1 false, i1 false}
!74 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 928, i32 13}
!75 = !{ptr @.str.20, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1007, i32 4}
!77 = !{ptr @.str.21, !76, !"<string literal>", i1 false, i1 false}
!78 = !{ptr @e1000_probe._entry, !76, !"_entry", i1 false, i1 false}
!79 = !{ptr @e1000_probe._entry_ptr, !76, !"_entry_ptr", i1 false, i1 false}
!80 = !{ptr @.str.22, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1078, i32 3}
!82 = !{ptr @.str.23, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1090, i32 3}
!84 = !{ptr @.str.24, !85, !"<string literal>", i1 false, i1 false}
!85 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1103, i32 4}
!86 = !{ptr @.str.25, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1109, i32 3}
!88 = !{ptr @e1000_probe.__key, !89, !"__key", i1 false, i1 false}
!89 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1112, i32 2}
!90 = !{ptr @.str.26, !89, !"<string literal>", i1 false, i1 false}
!91 = !{ptr @e1000_probe.__key.27, !89, !"__key", i1 false, i1 false}
!92 = !{ptr @.str.28, !89, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @e1000_probe.__key.29, !94, !"__key", i1 false, i1 false}
!94 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1113, i32 2}
!95 = !{ptr @.str.30, !94, !"<string literal>", i1 false, i1 false}
!96 = !{ptr @e1000_probe.__key.31, !94, !"__key", i1 false, i1 false}
!97 = !{ptr @.str.32, !94, !"<string literal>", i1 false, i1 false}
!98 = !{ptr @e1000_probe.__key.33, !99, !"__key", i1 false, i1 false}
!99 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1115, i32 2}
!100 = !{ptr @.str.34, !99, !"<string literal>", i1 false, i1 false}
!101 = !{ptr @e1000_probe.__key.35, !99, !"__key", i1 false, i1 false}
!102 = !{ptr @.str.36, !99, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @e1000_probe.__key.37, !104, !"__key", i1 false, i1 false}
!104 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1116, i32 2}
!105 = !{ptr @.str.38, !104, !"<string literal>", i1 false, i1 false}
!106 = !{ptr @.str.39, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1200, i32 23}
!108 = !{ptr @.str.40, !109, !"<string literal>", i1 false, i1 false}
!109 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1208, i32 2}
!110 = !{ptr @.str.41, !109, !"<string literal>", i1 false, i1 false}
!111 = !{ptr @.str.42, !109, !"<string literal>", i1 false, i1 false}
!112 = !{ptr @.str.43, !113, !"<string literal>", i1 false, i1 false}
!113 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1220, i32 2}
!114 = !{ptr @.str.44, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 877, i32 3}
!116 = !{ptr @e1000_netdev_ops, !117, !"e1000_netdev_ops", i1 false, i1 false}
!117 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 827, i32 36}
!118 = !{ptr @.str.45, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3160, i32 6}
!120 = !{ptr @.str.46, !121, !"<string literal>", i1 false, i1 false}
!121 = !{!"../include/linux/if_vlan.h", i32 598, i32 8}
!122 = !{ptr @.str.47, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 2788, i32 4}
!124 = !{ptr @.str.48, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 2952, i32 2}
!126 = !{ptr @.str.49, !125, !"<string literal>", i1 false, i1 false}
!127 = !{ptr @e1000_tx_map._entry, !125, !"_entry", i1 false, i1 false}
!128 = !{ptr @e1000_tx_map._entry_ptr, !125, !"_entry_ptr", i1 false, i1 false}
!129 = distinct !{null, !130, !"__already_done", i1 false, i1 false}
!130 = !{!"../include/linux/dma-mapping.h", i32 326, i32 6}
!131 = !{ptr @.str.50, !130, !"<string literal>", i1 false, i1 false}
!132 = !{ptr @.str.51, !130, !"<string literal>", i1 false, i1 false}
!133 = distinct !{null, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../include/linux/netdevice.h", i32 4690, i32 9}
!135 = distinct !{null, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../include/linux/skbuff.h", i32 2789, i32 6}
!137 = distinct !{null, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!139 = !{ptr @.str.55, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../include/linux/mm.h", i32 717, i32 2}
!141 = !{ptr @.str.56, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 4423, i32 4}
!143 = !{ptr @.str.57, !142, !"<string literal>", i1 false, i1 false}
!144 = !{ptr @e1000_clean_rx_irq.__UNIQUE_ID_ddebug577, !142, !"__UNIQUE_ID_ddebug577", i1 false, i1 false}
!145 = !{ptr @.str.58, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 4593, i32 4}
!147 = !{ptr @.str.59, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 4634, i32 4}
!149 = !{ptr @.str.60, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3530, i32 4}
!151 = !{ptr @.str.61, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3572, i32 2}
!153 = !{ptr @.str.62, !152, !"<string literal>", i1 false, i1 false}
!154 = !{ptr @e1000_change_mtu.__UNIQUE_ID_ddebug563, !152, !"__UNIQUE_ID_ddebug563", i1 false, i1 false}
!155 = !{ptr @.str.63, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3905, i32 4}
!157 = !{ptr @.str.64, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3369, i32 2}
!159 = !{ptr @.str.65, !158, !"<string literal>", i1 false, i1 false}
!160 = !{ptr @e1000_dump._entry, !158, !"_entry", i1 false, i1 false}
!161 = !{ptr @e1000_dump._entry_ptr, !158, !"_entry_ptr", i1 false, i1 false}
!162 = !{ptr @.str.67, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3398, i32 2}
!164 = !{ptr @e1000_dump._entry.66, !163, !"_entry", i1 false, i1 false}
!165 = !{ptr @e1000_dump._entry_ptr.68, !163, !"_entry_ptr", i1 false, i1 false}
!166 = !{ptr @.str.70, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3399, i32 2}
!168 = !{ptr @e1000_dump._entry.69, !167, !"_entry", i1 false, i1 false}
!169 = !{ptr @e1000_dump._entry_ptr.71, !167, !"_entry_ptr", i1 false, i1 false}
!170 = !{ptr @.str.72, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3412, i32 11}
!172 = !{ptr @.str.73, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3414, i32 11}
!174 = !{ptr @.str.74, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3416, i32 11}
!176 = !{ptr @.str.76, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3420, i32 3}
!178 = !{ptr @e1000_dump._entry.75, !177, !"_entry", i1 false, i1 false}
!179 = !{ptr @e1000_dump._entry_ptr.77, !177, !"_entry_ptr", i1 false, i1 false}
!180 = !{ptr @.str.79, !181, !"<string literal>", i1 false, i1 false}
!181 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3430, i32 2}
!182 = !{ptr @e1000_dump._entry.78, !181, !"_entry", i1 false, i1 false}
!183 = !{ptr @e1000_dump._entry_ptr.80, !181, !"_entry_ptr", i1 false, i1 false}
!184 = !{ptr @.str.82, !185, !"<string literal>", i1 false, i1 false}
!185 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3441, i32 2}
!186 = !{ptr @e1000_dump._entry.81, !185, !"_entry", i1 false, i1 false}
!187 = !{ptr @e1000_dump._entry_ptr.83, !185, !"_entry_ptr", i1 false, i1 false}
!188 = !{ptr @.str.85, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3460, i32 3}
!190 = !{ptr @e1000_dump._entry.84, !189, !"_entry", i1 false, i1 false}
!191 = !{ptr @e1000_dump._entry_ptr.86, !189, !"_entry_ptr", i1 false, i1 false}
!192 = !{ptr @.str.88, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3467, i32 2}
!194 = !{ptr @e1000_dump._entry.87, !193, !"_entry", i1 false, i1 false}
!195 = !{ptr @e1000_dump._entry_ptr.89, !193, !"_entry_ptr", i1 false, i1 false}
!196 = !{ptr @.str.91, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3469, i32 3}
!198 = !{ptr @e1000_dump._entry.90, !197, !"_entry", i1 false, i1 false}
!199 = !{ptr @e1000_dump._entry_ptr.92, !197, !"_entry_ptr", i1 false, i1 false}
!200 = !{ptr @.str.94, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3477, i32 2}
!202 = !{ptr @e1000_dump._entry.93, !201, !"_entry", i1 false, i1 false}
!203 = !{ptr @e1000_dump._entry_ptr.95, !201, !"_entry_ptr", i1 false, i1 false}
!204 = !{ptr @.str.97, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3479, i32 3}
!206 = !{ptr @e1000_dump._entry.96, !205, !"_entry", i1 false, i1 false}
!207 = !{ptr @e1000_dump._entry_ptr.98, !205, !"_entry_ptr", i1 false, i1 false}
!208 = !{ptr @.str.99, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3294, i32 3}
!210 = !{ptr @.str.100, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3294, i32 12}
!212 = !{ptr @.str.101, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3295, i32 3}
!214 = !{ptr @.str.102, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3295, i32 11}
!216 = !{ptr @.str.103, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3295, i32 20}
!218 = !{ptr @.str.104, !219, !"<string literal>", i1 false, i1 false}
!219 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3295, i32 27}
!220 = !{ptr @.str.105, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3295, i32 34}
!222 = !{ptr @.str.106, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3296, i32 3}
!224 = !{ptr @.str.107, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3296, i32 11}
!226 = !{ptr @.str.108, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3296, i32 20}
!228 = !{ptr @.str.109, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3296, i32 29}
!230 = !{ptr @.str.110, !231, !"<string literal>", i1 false, i1 false}
!231 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3296, i32 38}
!232 = !{ptr @.str.111, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3296, i32 45}
!234 = !{ptr @.str.112, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3297, i32 3}
!236 = !{ptr @.str.113, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3297, i32 11}
!238 = !{ptr @.str.114, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3297, i32 21}
!240 = !{ptr @.str.115, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3297, i32 29}
!242 = !{ptr @.str.116, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3298, i32 3}
!244 = !{ptr @.str.117, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3298, i32 13}
!246 = !{ptr @.str.118, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3298, i32 23}
!248 = !{ptr @.str.119, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3298, i32 33}
!250 = !{ptr @.str.120, !251, !"<string literal>", i1 false, i1 false}
!251 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3298, i32 41}
!252 = !{ptr @.str.121, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3299, i32 3}
!254 = !{ptr @.str.122, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3299, i32 14}
!256 = !{ptr @.str.123, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3300, i32 3}
!258 = !{ptr @.str.124, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3300, i32 15}
!260 = !{ptr @.str.125, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3300, i32 22}
!262 = !{ptr @.str.126, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3300, i32 31}
!264 = !{ptr @.str.127, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3301, i32 3}
!266 = !{ptr @.str.128, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3301, i32 11}
!268 = !{ptr @.str.129, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3301, i32 19}
!270 = !{ptr @.str.130, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3301, i32 28}
!272 = !{ptr @.str.131, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3301, i32 37}
!274 = !{ptr @.str.132, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3302, i32 3}
!276 = !{ptr @.str.133, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3302, i32 11}
!278 = !{ptr @.str.134, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3302, i32 19}
!280 = !{ptr @.str.135, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3302, i32 28}
!282 = !{ptr @.str.136, !283, !"<string literal>", i1 false, i1 false}
!283 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3302, i32 37}
!284 = !{ptr @e1000_regdump.reg_name, !285, !"reg_name", i1 false, i1 false}
!285 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3293, i32 28}
!286 = !{ptr @.str.137, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3347, i32 2}
!288 = !{ptr @.str.138, !287, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @e1000_regdump._entry, !287, !"_entry", i1 false, i1 false}
!290 = !{ptr @e1000_regdump._entry_ptr, !287, !"_entry_ptr", i1 false, i1 false}
!291 = !{ptr @.str.140, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3349, i32 3}
!293 = !{ptr @e1000_regdump._entry.139, !292, !"_entry", i1 false, i1 false}
!294 = !{ptr @e1000_regdump._entry_ptr.141, !292, !"_entry_ptr", i1 false, i1 false}
!295 = !{ptr @.str.142, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1304, i32 3}
!297 = !{ptr @e1000_sw_init.__key, !298, !"__key", i1 false, i1 false}
!298 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1311, i32 2}
!299 = !{ptr @.str.143, !298, !"<string literal>", i1 false, i1 false}
!300 = !{ptr @.str.144, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 731, i32 2}
!302 = !{ptr @.str.145, !301, !"<string literal>", i1 false, i1 false}
!303 = !{ptr @e1000_dump_eeprom._entry, !301, !"_entry", i1 false, i1 false}
!304 = !{ptr @e1000_dump_eeprom._entry_ptr, !301, !"_entry_ptr", i1 false, i1 false}
!305 = !{ptr @.str.147, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 732, i32 2}
!307 = !{ptr @e1000_dump_eeprom._entry.146, !306, !"_entry", i1 false, i1 false}
!308 = !{ptr @e1000_dump_eeprom._entry_ptr.148, !306, !"_entry_ptr", i1 false, i1 false}
!309 = !{ptr @.str.150, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 733, i32 2}
!311 = !{ptr @e1000_dump_eeprom._entry.149, !310, !"_entry", i1 false, i1 false}
!312 = !{ptr @e1000_dump_eeprom._entry_ptr.151, !310, !"_entry_ptr", i1 false, i1 false}
!313 = !{ptr @.str.153, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 735, i32 2}
!315 = !{ptr @e1000_dump_eeprom._entry.152, !314, !"_entry", i1 false, i1 false}
!316 = !{ptr @e1000_dump_eeprom._entry_ptr.154, !314, !"_entry_ptr", i1 false, i1 false}
!317 = !{ptr @.str.156, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 736, i32 2}
!319 = !{ptr @e1000_dump_eeprom._entry.155, !318, !"_entry", i1 false, i1 false}
!320 = !{ptr @e1000_dump_eeprom._entry_ptr.157, !318, !"_entry_ptr", i1 false, i1 false}
!321 = !{ptr @.str.159, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 739, i32 2}
!323 = !{ptr @e1000_dump_eeprom._entry.158, !322, !"_entry", i1 false, i1 false}
!324 = !{ptr @e1000_dump_eeprom._entry_ptr.160, !322, !"_entry_ptr", i1 false, i1 false}
!325 = !{ptr @.str.162, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 740, i32 2}
!327 = !{ptr @e1000_dump_eeprom._entry.161, !326, !"_entry", i1 false, i1 false}
!328 = !{ptr @e1000_dump_eeprom._entry_ptr.163, !326, !"_entry_ptr", i1 false, i1 false}
!329 = !{ptr @.str.165, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 741, i32 2}
!331 = !{ptr @e1000_dump_eeprom._entry.164, !330, !"_entry", i1 false, i1 false}
!332 = !{ptr @e1000_dump_eeprom._entry_ptr.166, !330, !"_entry_ptr", i1 false, i1 false}
!333 = !{ptr @.str.168, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 742, i32 2}
!335 = !{ptr @e1000_dump_eeprom._entry.167, !334, !"_entry", i1 false, i1 false}
!336 = !{ptr @e1000_dump_eeprom._entry_ptr.169, !334, !"_entry_ptr", i1 false, i1 false}
!337 = !{ptr @.str.171, !338, !"<string literal>", i1 false, i1 false}
!338 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 743, i32 2}
!339 = !{ptr @e1000_dump_eeprom._entry.170, !338, !"_entry", i1 false, i1 false}
!340 = !{ptr @e1000_dump_eeprom._entry_ptr.172, !338, !"_entry_ptr", i1 false, i1 false}
!341 = !{ptr @.str.174, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 744, i32 2}
!343 = !{ptr @e1000_dump_eeprom._entry.173, !342, !"_entry", i1 false, i1 false}
!344 = !{ptr @e1000_dump_eeprom._entry_ptr.175, !342, !"_entry_ptr", i1 false, i1 false}
!345 = !{ptr @.str.177, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 745, i32 2}
!347 = !{ptr @e1000_dump_eeprom._entry.176, !346, !"_entry", i1 false, i1 false}
!348 = !{ptr @e1000_dump_eeprom._entry_ptr.178, !346, !"_entry_ptr", i1 false, i1 false}
!349 = !{ptr @.str.180, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 746, i32 2}
!351 = !{ptr @e1000_dump_eeprom._entry.179, !350, !"_entry", i1 false, i1 false}
!352 = !{ptr @e1000_dump_eeprom._entry_ptr.181, !350, !"_entry_ptr", i1 false, i1 false}
!353 = !{ptr @.str.183, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 747, i32 2}
!355 = !{ptr @e1000_dump_eeprom._entry.182, !354, !"_entry", i1 false, i1 false}
!356 = !{ptr @e1000_dump_eeprom._entry_ptr.184, !354, !"_entry_ptr", i1 false, i1 false}
!357 = !{ptr @.str.186, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 748, i32 2}
!359 = !{ptr @e1000_dump_eeprom._entry.185, !358, !"_entry", i1 false, i1 false}
!360 = !{ptr @e1000_dump_eeprom._entry_ptr.187, !358, !"_entry_ptr", i1 false, i1 false}
!361 = !{ptr @e1000_dump_eeprom._entry.188, !362, !"_entry", i1 false, i1 false}
!362 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 749, i32 2}
!363 = !{ptr @e1000_dump_eeprom._entry_ptr.189, !362, !"_entry_ptr", i1 false, i1 false}
!364 = !{ptr @.str.190, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 2449, i32 4}
!366 = !{ptr @.str.191, !365, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @e1000_watchdog._entry, !365, !"_entry", i1 false, i1 false}
!368 = !{ptr @e1000_watchdog._entry_ptr, !365, !"_entry_ptr", i1 false, i1 false}
!369 = !{ptr @.str.192, !365, !"<string literal>", i1 false, i1 false}
!370 = !{ptr @.str.193, !365, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @.str.194, !365, !"<string literal>", i1 false, i1 false}
!372 = !{ptr @.str.195, !365, !"<string literal>", i1 false, i1 false}
!373 = !{ptr @.str.196, !365, !"<string literal>", i1 false, i1 false}
!374 = !{ptr @.str.197, !365, !"<string literal>", i1 false, i1 false}
!375 = !{ptr @.str.199, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 2486, i32 4}
!377 = !{ptr @e1000_watchdog._entry.198, !376, !"_entry", i1 false, i1 false}
!378 = !{ptr @e1000_watchdog._entry_ptr.200, !376, !"_entry_ptr", i1 false, i1 false}
!379 = !{ptr @.str.201, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 3509, i32 2}
!381 = !{ptr @e1000_err_handler, !382, !"e1000_err_handler", i1 false, i1 false}
!382 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 172, i32 40}
!383 = !{ptr @.str.202, !384, !"<string literal>", i1 false, i1 false}
!384 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 5273, i32 3}
!385 = !{ptr @.str.203, !384, !"<string literal>", i1 false, i1 false}
!386 = !{ptr @e1000_io_slot_reset._entry, !384, !"_entry", i1 false, i1 false}
!387 = !{ptr @e1000_io_slot_reset._entry_ptr, !384, !"_entry_ptr", i1 false, i1 false}
!388 = !{ptr @.str.204, !389, !"<string literal>", i1 false, i1 false}
!389 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 5308, i32 4}
!390 = !{ptr @.str.205, !389, !"<string literal>", i1 false, i1 false}
!391 = !{ptr @e1000_io_resume._entry, !389, !"_entry", i1 false, i1 false}
!392 = !{ptr @e1000_io_resume._entry_ptr, !389, !"_entry_ptr", i1 false, i1 false}
!393 = !{ptr @e1000_pm_ops, !394, !"e1000_pm_ops", i1 false, i1 false}
!394 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 178, i32 8}
!395 = !{ptr @.str.206, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 5166, i32 3}
!397 = !{ptr @.str.207, !396, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @e1000_resume._entry, !396, !"_entry", i1 false, i1 false}
!399 = !{ptr @e1000_resume._entry_ptr, !396, !"_entry_ptr", i1 false, i1 false}
!400 = !{ptr @.str.208, !401, !"<string literal>", i1 false, i1 false}
!401 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 263, i32 3}
!402 = !{ptr @.str.209, !403, !"<string literal>", i1 false, i1 false}
!403 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1526, i32 3}
!404 = !{ptr @.str.210, !405, !"<string literal>", i1 false, i1 false}
!405 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1544, i32 4}
!406 = !{ptr @.str.211, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1718, i32 3}
!408 = !{ptr @.str.212, !409, !"<string literal>", i1 false, i1 false}
!409 = !{!"../drivers/net/ethernet/intel/e1000/e1000_main.c", i32 1736, i32 4}
!410 = !{!"sp"}
!411 = !{i32 1, !"wchar_size", i32 2}
!412 = !{i32 1, !"min_enum_size", i32 4}
!413 = !{i32 8, !"branch-target-enforcement", i32 0}
!414 = !{i32 8, !"sign-return-address", i32 0}
!415 = !{i32 8, !"sign-return-address-all", i32 0}
!416 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!417 = !{i32 7, !"uwtable", i32 1}
!418 = !{i32 7, !"frame-pointer", i32 2}
!419 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!420 = !{i64 2158493686}
!421 = !{i64 6543166}
!422 = !{i64 6543584}
!423 = !{i64 2158495045}
!424 = !{i64 2158512763}
!425 = !{i64 2158496160}
!426 = !{i64 2158496628}
!427 = !{i64 2158582100}
!428 = !{i64 2158582818}
!429 = !{i64 2158583593}
!430 = !{i64 2158584356}
!431 = !{i64 2158585032}
!432 = !{i64 2158585783}
!433 = !{i64 2158586512}
!434 = !{i64 2158591372}
!435 = !{i64 2158592585}
!436 = !{i64 2158593135}
!437 = !{i64 2158505026}
!438 = !{i64 2158515007}
!439 = !{i64 2158515505}
!440 = !{i64 2158516700}
!441 = !{i64 2158517168}
!442 = !{i64 2158518341}
!443 = !{i64 2158491676}
!444 = !{i64 2158492843}
!445 = !{i64 2158519136}
!446 = !{i64 2158520278}
!447 = !{i64 2158521263}
!448 = !{i64 2158523866}
!449 = !{i64 2158526637}
!450 = !{i64 2158527105}
!451 = !{i64 2158527817}
!452 = !{i64 2158497778}
!453 = !{i64 2158498246}
!454 = !{i64 2158577723}
!455 = !{i64 2158513948}
!456 = !{!"branch_weights", i32 1, i32 2000}
!457 = !{i64 2158935127}
!458 = !{i8 0, i8 2}
!459 = !{i64 2158664674}
!460 = !{!"auto-init"}
!461 = !{i64 2158805226}
!462 = !{i64 2158806127}
!463 = !{i64 2158807033}
!464 = !{i64 2158807939}
!465 = !{i64 2158808840}
!466 = !{i64 2158809741}
!467 = !{i64 2158810637}
!468 = !{i64 2158811543}
!469 = !{i64 2158812454}
!470 = !{i64 2158813365}
!471 = !{i64 2158814276}
!472 = !{i64 2158815192}
!473 = !{i64 2158816108}
!474 = !{i64 2158817024}
!475 = !{i64 2158817920}
!476 = !{i64 2158818816}
!477 = !{i64 2158819717}
!478 = !{i64 2158820613}
!479 = !{i64 2158821529}
!480 = !{i64 2158822420}
!481 = !{i64 2158823316}
!482 = !{i64 2158824217}
!483 = !{i64 2158825128}
!484 = !{i64 2158826039}
!485 = !{i64 2158826955}
!486 = !{i64 2158827871}
!487 = !{i64 2158828777}
!488 = !{i64 2158829678}
!489 = !{i64 2158830584}
!490 = !{i64 2158831490}
!491 = !{i64 2158832391}
!492 = !{i64 2158833287}
!493 = !{i64 2158834183}
!494 = !{i64 2158835079}
!495 = !{i64 2158835980}
!496 = !{i64 2158836881}
!497 = !{i64 2158837782}
!498 = !{i64 2158838683}
!499 = !{i64 2158839579}
!500 = !{i64 2158840485}
!501 = !{i64 2158841396}
!502 = !{i64 2158842307}
!503 = !{i64 2158843218}
!504 = !{i64 2158844134}
!505 = !{i64 2158849111}
!506 = !{i64 2158850012}
!507 = !{i64 2158850913}
!508 = !{i64 2158851809}
!509 = !{i64 2158852710}
!510 = !{i64 2158853631}
!511 = !{i64 2158854542}
!512 = !{i64 2158855448}
!513 = !{i64 2158856364}
!514 = !{i64 2158857270}
!515 = !{i64 2158858181}
!516 = !{i64 2158859116}
!517 = !{i64 2158860027}
!518 = !{i64 2158860938}
!519 = !{i64 2158927164}
!520 = !{i64 2158572208}
!521 = !{i64 2158573209}
!522 = !{i64 2158865382}
!523 = !{i64 2158867924}
!524 = !{i64 2156249203}
!525 = !{i64 2158882494}
!526 = !{i64 2158883900}
!527 = !{i64 2158885416}
!528 = !{i64 2158888546}
!529 = !{i64 2158889068}
!530 = !{i64 2158734391}
!531 = !{i64 2158735302}
!532 = !{i64 2158736203}
!533 = !{i64 2158737097}
!534 = !{i64 2158737983}
!535 = !{i64 2158738869}
!536 = !{i64 2158739759}
!537 = !{i64 2158740660}
!538 = !{i64 2158741554}
!539 = !{i64 2158742448}
!540 = !{i64 2158743342}
!541 = !{i64 2158744228}
!542 = !{i64 2158745114}
!543 = !{i64 2158746004}
!544 = !{i64 2158746915}
!545 = !{i64 2158747816}
!546 = !{i64 2158748722}
!547 = !{i64 2158749633}
!548 = !{i64 2158750544}
!549 = !{i64 2158751455}
!550 = !{i64 2158752356}
!551 = !{i64 2158753257}
!552 = !{i64 2158754173}
!553 = !{i64 2158755079}
!554 = !{i64 2158756000}
!555 = !{i64 2158756896}
!556 = !{i64 2158757824}
!557 = !{i64 2158758752}
!558 = !{i64 2158759642}
!559 = !{i64 2158760532}
!560 = !{i64 2158761438}
!561 = !{i64 2158762344}
!562 = !{i64 2158763250}
!563 = !{i64 2158764151}
!564 = !{i64 2158765052}
!565 = !{i64 2158765958}
!566 = !{i64 2158766864}
!567 = !{i64 2158767770}
!568 = !{i64 2158791217}
!569 = !{i64 2158791727}
!570 = !{i64 2158792249}
!571 = !{i64 2158792767}
!572 = !{i64 2158797148}
!573 = !{i64 2158797658}
!574 = !{i64 2158798180}
!575 = !{i64 2158798698}
!576 = !{!"branch_weights", i32 2000, i32 1}
!577 = !{!"branch_weights", i32 2002, i32 2000}
!578 = !{i64 2158688048}
!579 = !{i64 2158666882}
!580 = !{i64 2158670558}
!581 = !{i64 2158671026}
!582 = !{i64 2158679517}
!583 = !{i64 2158683074}
!584 = !{i64 2158683875}
!585 = !{i64 2158652796}
!586 = !{i64 2158653682}
!587 = !{i64 2158654572}
!588 = !{i64 2158655462}
!589 = !{i64 2158656368}
!590 = !{i64 2158657274}
!591 = !{i64 2158658175}
!592 = !{i64 2158658673}
!593 = !{i64 2158659447}
!594 = !{i64 2158660227}
!595 = !{i64 2158661023}
!596 = !{i64 2158661819}
!597 = !{i64 2158662576}
!598 = !{i64 2158663749}
!599 = !{i64 2158928631}
!600 = !{i64 2158929277}
!601 = !{i64 2158930932}
!602 = !{i64 2158932550}
!603 = !{i64 2155546664, i64 2155547152, i64 2155546701, i64 2155546757, i64 2155546791, i64 2155546815, i64 2155546856, i64 2155546877, i64 2155546905, i64 2155546939}
!604 = !{i32 0, i32 33}
!605 = !{i64 2158726966}
!606 = !{i64 7889546, i64 7889587, i64 7889632}
!607 = !{i64 7888444}
!608 = !{!"branch_weights", i32 1, i32 4001}
!609 = !{i64 2154746871, i64 2154747371, i64 2154746908, i64 2154746964, i64 2154746998, i64 2154747022, i64 2154747063, i64 2154747084, i64 2154747112, i64 2154747146}
!610 = !{i64 2154748215}
!611 = !{i64 2156248132}
!612 = !{i64 2158696980}
!613 = !{i64 2158733252}
!614 = !{i64 2158636201}
!615 = !{i64 2158636857}
!616 = !{i64 2158644590}
!617 = !{i64 2158645794}
!618 = !{i64 2158646330}
!619 = !{i64 2158647540}
!620 = !{i64 2158648076}
!621 = !{i64 2158649302}
!622 = !{i64 2149109875, i64 2149109880, i64 2149109893, i64 2149109937, i64 2149109971, i64 2149109992}
!623 = !{i64 2158933917}
!624 = !{i64 2158697413}
!625 = !{i64 2158709530}
!626 = !{i64 2158618764}
!627 = !{i64 2158619232}
!628 = !{i64 2158620405}
!629 = !{i64 2158622594}
!630 = !{i64 2158623062}
!631 = !{i64 2158624235}
!632 = !{i64 2158632059}
!633 = !{i64 2158598896}
!634 = !{i64 2158599394}
!635 = !{i64 2158600168}
!636 = !{i64 2158600967}
!637 = !{i64 2158601789}
!638 = !{i64 2158602577}
!639 = !{i64 2158603295}
!640 = !{i64 2158604070}
!641 = !{i64 2158604833}
!642 = !{i64 2158605509}
!643 = !{i64 2158606692}
!644 = !{i64 2158607185}
!645 = !{i64 2158607934}
!646 = !{i64 2158890955}
!647 = !{i64 994786}
!648 = !{i64 2155267613}
!649 = !{i64 2153122261}
!650 = !{i64 2153122468}
!651 = !{i64 2155270384}
!652 = !{!"branch_weights", i32 4000000, i32 4001}
!653 = !{!"branch_weights", i32 2000, i32 2002}
!654 = !{i64 2158901634}
!655 = !{i64 2153473365, i64 2153473848, i64 2153473402, i64 2153473458, i64 2153473492, i64 2153473516, i64 2153473557, i64 2153473578, i64 2153473606, i64 2153473640}
!656 = !{i64 2148584974}
!657 = !{i64 2148499683, i64 2148499715, i64 2148499744, i64 2148499778, i64 2148499809, i64 2148499832}
!658 = !{i64 2148585203}
!659 = !{i64 2158922336}
!660 = !{i64 2158922565}
!661 = !{i64 2158905011}
!662 = !{i64 2158918274}
!663 = !{i64 2158924977}
!664 = !{i64 2158925198}
!665 = !{i64 2158861834}
!666 = !{i64 2158862500}
!667 = !{i64 2158863667}
!668 = !{i64 2158937866}
!669 = !{i64 2158938789}
!670 = !{i64 2158939305}
!671 = !{i64 2158940494}
!672 = !{i64 2158940973}
!673 = !{i64 2158942143}
!674 = !{i64 2158942639}
!675 = !{i64 2158943375}
!676 = !{i64 2158944099}
!677 = !{i64 2158944794}
!678 = !{i64 2158945485}
!679 = !{i64 2158596905}
!680 = !{i64 2158597741}
!681 = !{i64 2158953184}
!682 = !{i64 2158953814}
!683 = !{i64 2158950173}
!684 = !{i64 2158950803}
!685 = !{i64 2158608695}
!686 = !{i64 2158609094}
!687 = !{i64 2158617286}
!688 = !{i64 2158617685}
