; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c_pt.bc'
source_filename = "../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.virtchnl_pf_event = type { i32, %union.anon.217, i32 }
%union.anon.217 = type { %struct.anon.218 }
%struct.anon.218 = type { i32, i8 }
%struct.i40e_pf = type { ptr, %struct.i40e_hw, [2 x i32], ptr, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i8, i8, %struct.hlist_head, i16, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.list_head, %struct.list_head, %struct.udp_tunnel_nic_shared, %struct.udp_tunnel_nic_info, %struct.hlist_head, i16, i32, i16, i16, i32, [32 x i8], i16, i32, i32, %struct.timer_list, %struct.work_struct, i32, i32, ptr, i8, %struct.i40e_hw_port_stats, %struct.i40e_hw_port_stats, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, %struct.mutex, i16, i16, i16, ptr, [16 x ptr], ptr, ptr, i16, i16, i16, ptr, ptr, i8, i16, ptr, i32, i32, i32, i16, %struct.i40e_filter_control_settings, %struct.i40e_rx_pb_config, %struct.i40e_dcbx_config, ptr, %struct.ptp_clock_info, ptr, i32, %struct.hwtstamp_config, %struct.timespec64, %struct.work_struct, %struct.work_struct, %struct.work_struct, i64, %struct.mutex, i32, i32, i32, i32, i32, i64, i32, %struct.spinlock, [3 x %struct.ptp_pin_desc], [4 x i32], i8, i8, ptr, i16, i32, i32, i32, i32, i16, i16, i16, i16, %struct.list_head }
%struct.i40e_hw = type { ptr, ptr, %struct.i40e_phy_info, %struct.i40e_mac_info, %struct.i40e_bus_info, %struct.i40e_nvm_info, %struct.i40e_fc_info, i16, i16, i16, i16, i8, i8, i8, %struct.i40e_hw_capabilities, %struct.i40e_hw_capabilities, i16, i8, i16, i16, i16, i16, i16, %struct.i40e_adminq_info, i32, %struct.i40e_aq_desc, %struct.i40e_aq_desc, %struct.i40e_virt_mem, i8, i16, %struct.i40e_hmc_info, i16, %struct.i40e_dcbx_config, %struct.i40e_dcbx_config, %struct.i40e_dcbx_config, i64, i16, i16, i16, i32, [16 x i8] }
%struct.i40e_phy_info = type { %struct.i40e_link_status, %struct.i40e_link_status, i8, i32, i64 }
%struct.i40e_link_status = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, [3 x i8] }
%struct.i40e_mac_info = type { i32, [6 x i8], [6 x i8], [6 x i8], [6 x i8], i16 }
%struct.i40e_bus_info = type { i32, i32, i32, i16, i16, i16, i16 }
%struct.i40e_nvm_info = type { i64, i32, i16, i8, i16, i32, i32 }
%struct.i40e_fc_info = type { i32, i32 }
%struct.i40e_hw_capabilities = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i32, i32, [30 x i8], [30 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i64 }
%struct.i40e_adminq_info = type { %struct.i40e_adminq_ring, %struct.i40e_adminq_ring, i32, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.mutex, %struct.mutex, i32, i32 }
%struct.i40e_adminq_ring = type { %struct.i40e_virt_mem, %struct.i40e_dma_mem, %struct.i40e_virt_mem, %union.anon.180, i16, i16, i16, i16, i32, i32, i32, i32, i32 }
%struct.i40e_dma_mem = type { ptr, i32, i32 }
%union.anon.180 = type { ptr }
%struct.i40e_aq_desc = type { i16, i16, i16, i16, i32, i32, %union.anon.181 }
%union.anon.181 = type { %struct.anon.182 }
%struct.anon.182 = type { i32, i32, i32, i32 }
%struct.i40e_virt_mem = type { ptr, i32 }
%struct.i40e_hmc_info = type { i32, i8, i16, ptr, %struct.i40e_virt_mem, %struct.i40e_hmc_sd_table }
%struct.i40e_hmc_sd_table = type { %struct.i40e_virt_mem, i32, i32, ptr }
%struct.udp_tunnel_nic_shared = type { ptr, %struct.list_head }
%struct.udp_tunnel_nic_info = type { ptr, ptr, ptr, ptr, i32, [4 x %struct.udp_tunnel_nic_table_info] }
%struct.udp_tunnel_nic_table_info = type { i32, i32 }
%struct.hlist_head = type { ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.i40e_hw_port_stats = type { %struct.i40e_eth_stats, i64, i64, i64, i64, i64, i64, i64, i64, i64, [8 x i64], [8 x i64], i64, i64, [8 x i64], [8 x i64], [8 x i64], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i64, i64 }
%struct.i40e_eth_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.i40e_filter_control_settings = type { i32, i32, i32, i32, i32, i8, i8, i8 }
%struct.i40e_rx_pb_config = type { i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], [8 x i32], [8 x i32] }
%struct.i40e_dcbx_config = type { i8, i8, i32, i32, %struct.i40e_dcb_ets_config, %struct.i40e_dcb_ets_config, %struct.i40e_dcb_pfc_config, [32 x %struct.i40e_dcb_app_priority_table] }
%struct.i40e_dcb_ets_config = type { i8, i8, i8, [8 x i8], [8 x i8], [8 x i8] }
%struct.i40e_dcb_pfc_config = type { i8, i8, i8, i8 }
%struct.i40e_dcb_app_priority_table = type { i8, i8, i16 }
%struct.ptp_clock_info = type { ptr, [32 x i8], i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.timespec64 = type { i64, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.ptp_pin_desc = type { [64 x i8], i32, i32, i32, [5 x i32] }
%struct.list_head = type { ptr, ptr }
%struct.i40e_vf = type { ptr, i16, i32, %struct.virtchnl_version_info, i32, i16, %struct.virtchnl_ether_addr, i16, i8, i8, i16, i16, i8, i8, i64, i32, i32, i32, i8, i8, i8, i16, i8, i8, [4 x %struct.i40evf_channel], %struct.hlist_head, i16, ptr }
%struct.virtchnl_version_info = type { i32, i32 }
%struct.virtchnl_ether_addr = type { [6 x i8], i8, i8 }
%struct.i40evf_channel = type { i16, i16, i16, i64 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.179, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.179 = type { ptr }
%struct.i40e_vsi = type { ptr, [128 x i32], i8, i8, i32, [1 x i32], i32, %struct.spinlock, [256 x %struct.hlist_head], i8, %struct.rtnl_link_stats64, %struct.rtnl_link_stats64, %struct.i40e_eth_stats, %struct.i40e_eth_stats, i64, i64, i64, i64, i64, i64, ptr, ptr, ptr, i32, i32, i16, i16, i16, i16, ptr, ptr, i16, i16, ptr, ptr, i32, i32, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, %struct.tc_mqprio_qopt_offload, %struct.i40e_tc_configuration, %struct.i40e_aqc_vsi_properties_data, i16, i8, [8 x i8], [8 x i16], [8 x i8], ptr, i16, i16, ptr, i8, i32, i16, i16, i16, i8, i16, %struct.list_head, [8 x i16], [4 x i32], %struct.list_head, i32, ptr, ptr, ptr, [88 x i8] }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.tc_mqprio_qopt_offload = type { %struct.tc_mqprio_qopt, i16, i16, i32, [16 x i64], [16 x i64] }
%struct.tc_mqprio_qopt = type { i8, [16 x i8], i8, [16 x i16], [16 x i16] }
%struct.i40e_tc_configuration = type { i8, i8, [8 x %struct.i40e_tc_info] }
%struct.i40e_tc_info = type { i16, i16, i8 }
%struct.i40e_aqc_vsi_properties_data = type { i16, i16, [2 x i8], i8, i8, i16, i16, i8, [3 x i8], i32, i32, i16, i8, i8, i16, [16 x i16], [8 x i16], i8, [3 x i8], i8, i8, i32, [8 x i8], [8 x i16], i16, i16, [12 x i8] }
%struct.virtchnl_vsi_queue_config_info = type { i16, i16, i32, [1 x %struct.virtchnl_queue_pair_info] }
%struct.virtchnl_queue_pair_info = type { %struct.virtchnl_txq_info, %struct.virtchnl_rxq_info }
%struct.virtchnl_txq_info = type { i16, i16, i16, i16, i64, i64 }
%struct.virtchnl_rxq_info = type { i16, i16, i32, i16, i16, i32, i32, i32, i64, i32, i32 }
%struct.virtchnl_ether_addr_list = type { i16, i16, [1 x %struct.virtchnl_ether_addr] }
%struct.virtchnl_vlan_filter_list = type { i16, i16, [1 x i16] }
%struct.virtchnl_rss_key = type { i16, i16, [1 x i8] }
%struct.virtchnl_rss_lut = type { i16, i16, [1 x i8] }
%struct.virtchnl_vlan_filter_list_v2 = type { i16, i16, [4 x i8], [1 x %struct.virtchnl_vlan_filter] }
%struct.virtchnl_vlan_filter = type { %struct.virtchnl_vlan, %struct.virtchnl_vlan, [16 x i8] }
%struct.virtchnl_vlan = type { i16, i16, i16, [2 x i8] }
%struct.virtchnl_vf_resource = type { i16, i16, i16, i16, i32, i32, i32, [1 x %struct.virtchnl_vsi_resource] }
%struct.virtchnl_vsi_resource = type { i16, i16, i32, i16, [6 x i8] }
%struct.virtchnl_promisc_info = type { i16, i16 }
%struct.i40e_hmc_obj_txq = type { i16, i8, i64, i8, i8, i8, i8, i16, i8, i8, i16, i8, i8, i8, i64, i32, i16, i8 }
%struct.i40e_hmc_obj_rxq = type { i16, i16, i64, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i16, i8 }
%struct.virtchnl_irq_map_info = type { i16, [1 x %struct.virtchnl_vector_map] }
%struct.virtchnl_vector_map = type { i16, i16, i16, i16, i16, i16 }
%struct.virtchnl_queue_select = type { i16, i16, i32, i32 }
%struct.i40e_mac_filter = type { %struct.hlist_node, [6 x i8], i16, i32 }
%struct.virtchnl_iwarp_qvlist_info = type { i32, [1 x %struct.virtchnl_iwarp_qv_info] }
%struct.virtchnl_iwarp_qv_info = type { i32, i16, i16, i8, [3 x i8] }
%struct.i40e_lump_tracking = type { i16, [0 x i16] }
%struct.virtchnl_tc_info = type { i32, i32, [1 x %struct.virtchnl_channel_info] }
%struct.virtchnl_channel_info = type { i16, i16, i32, i64 }
%struct.virtchnl_filter = type { %union.virtchnl_flow_spec, %union.virtchnl_flow_spec, i32, i32, i32, i8, [3 x i8] }
%union.virtchnl_flow_spec = type { %struct.virtchnl_l4_spec, [76 x i8] }
%struct.virtchnl_l4_spec = type { [6 x i8], [6 x i8], i16, i16, [4 x i32], [4 x i32], i16, i16 }
%struct.i40e_cloud_filter = type { %struct.hlist_node, i32, [6 x i8], [6 x i8], i16, i16, i16, i16, i32, %union.anon.221, i16, i8, i8, i8 }
%union.anon.221 = type { %struct.anon.223 }
%struct.anon.223 = type { %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.72 }
%union.anon.72 = type { [4 x i32] }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.i40e_vsi_context = type { i16, i16, i16, i16, i16, i16, i8, i8, i8, %struct.i40e_aqc_vsi_properties_data }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }

@i40e_reset_vf._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 1569, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"VF reset check timeout on VF %d\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"i40e_reset_vf\00", [18 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c\00", [45 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@i40e_reset_vf._entry_ptr = internal global ptr @i40e_reset_vf._entry, section ".printk_index", align 4
@i40e_reset_all_vfs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.5, ptr @.str.2, i32 1648, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"i40e_reset_all_vfs\00", [45 x i8] zeroinitializer }, align 32
@i40e_reset_all_vfs._entry_ptr = internal global ptr @i40e_reset_all_vfs._entry, section ".printk_index", align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@i40e_free_vfs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.6, ptr @.str.7, ptr @.str.2, i32 1716, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"VFs are assigned - not disabling SR-IOV\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"i40e_free_vfs\00", [18 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@i40e_free_vfs._entry_ptr = internal global ptr @i40e_free_vfs._entry, section ".printk_index", align 4
@i40e_pci_sriov_configure._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.10, ptr @.str.2, i32 1890, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Unable to configure VFs, other operation is pending.\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_pci_sriov_configure\00", [39 x i8] zeroinitializer }, align 32
@i40e_pci_sriov_configure._entry_ptr = internal global ptr @i40e_pci_sriov_configure._entry, section ".printk_index", align 4
@i40e_pci_sriov_configure._entry.11 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.12, ptr @.str.10, ptr @.str.2, i32 1908, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Unable to free VFs because some are assigned to VMs.\0A\00", [42 x i8] zeroinitializer }, align 32
@i40e_pci_sriov_configure._entry_ptr.13 = internal global ptr @i40e_pci_sriov_configure._entry.11, section ".printk_index", align 4
@i40e_vc_process_vf_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.15, ptr @.str.2, i32 4016, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Invalid message from VF %d, opcode %d, len %d\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"i40e_vc_process_vf_msg\00", [41 x i8] zeroinitializer }, align 32
@i40e_vc_process_vf_msg._entry_ptr = internal global ptr @i40e_vc_process_vf_msg._entry, section ".printk_index", align 4
@i40e_vc_process_vf_msg._entry.16 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.15, ptr @.str.2, i32 4113, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Unsupported opcode %d from VF %d\0A\00", [62 x i8] zeroinitializer }, align 32
@i40e_vc_process_vf_msg._entry_ptr.18 = internal global ptr @i40e_vc_process_vf_msg._entry.16, section ".printk_index", align 4
@i40e_ndo_set_vf_mac._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.19, ptr @.str.2, i32 4214, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"i40e_ndo_set_vf_mac\00", [44 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_mac._entry_ptr = internal global ptr @i40e_ndo_set_vf_mac._entry, section ".printk_index", align 4
@i40e_ndo_set_vf_mac._entry.20 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.19, ptr @.str.2, i32 4238, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"VF %d still in reset. Try again.\0A\00", [62 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_mac._entry_ptr.22 = internal global ptr @i40e_ndo_set_vf_mac._entry.20, section ".printk_index", align 4
@i40e_ndo_set_vf_mac._entry.23 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.19, ptr @.str.2, i32 4246, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Invalid Ethernet address %pM for VF %d\0A\00", [56 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_mac._entry_ptr.25 = internal global ptr @i40e_ndo_set_vf_mac._entry.23, section ".printk_index", align 4
@i40e_ndo_set_vf_mac._entry.26 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.19, ptr @.str.2, i32 4270, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Unable to program ucast filters\0A\00", [63 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_mac._entry_ptr.28 = internal global ptr @i40e_ndo_set_vf_mac._entry.26, section ".printk_index", align 4
@i40e_ndo_set_vf_mac._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.19, ptr @.str.2, i32 4278, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Removing MAC on VF %d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_mac._entry_ptr.32 = internal global ptr @i40e_ndo_set_vf_mac._entry.29, section ".printk_index", align 4
@i40e_ndo_set_vf_mac._entry.33 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.19, ptr @.str.2, i32 4282, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Setting MAC %pM on VF %d\0A\00", [38 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_mac._entry_ptr.35 = internal global ptr @i40e_ndo_set_vf_mac._entry.33, section ".printk_index", align 4
@i40e_ndo_set_vf_mac._entry.36 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @.str.19, ptr @.str.2, i32 4289, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"Bring down and up the VF interface to make this change effective.\0A\00", [61 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_mac._entry_ptr.38 = internal global ptr @i40e_ndo_set_vf_mac._entry.36, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.39, ptr @.str.2, i32 4318, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"i40e_ndo_set_vf_port_vlan\00", [38 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr = internal global ptr @i40e_ndo_set_vf_port_vlan._entry, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.40 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.39, ptr @.str.2, i32 4328, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Invalid VF Parameters\0A\00", [41 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.42 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.40, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.43 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.39, ptr @.str.2, i32 4334, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VF VLAN protocol is not supported\0A\00", [61 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.45 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.43, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.46 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.39, ptr @.str.2, i32 4343, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.47 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.46, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.48 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.39, ptr @.str.2, i32 4373, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"add VF VLAN failed, ret=%d aq_err=%d\0A\00", [58 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.50 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.48, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.51 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.52, ptr @.str.39, ptr @.str.2, i32 4391, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Unable to config VF promiscuous mode\0A\00", [58 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.53 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.51, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.54 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.39, ptr @.str.2, i32 4403, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Setting VLAN %d, QOS 0x%x on VF %d\0A\00", [60 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.56 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.54, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.57 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.39, ptr @.str.2, i32 4410, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.58 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.57, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.59 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.60, ptr @.str.39, ptr @.str.2, i32 4431, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Unable to update VF vsi context\0A\00", [63 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.61 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.59, section ".printk_index", align 4
@i40e_ndo_set_vf_port_vlan._entry.62 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.39, ptr @.str.2, i32 4442, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Unable to config vf promiscuous mode\0A\00", [58 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_port_vlan._entry_ptr.64 = internal global ptr @i40e_ndo_set_vf_port_vlan._entry.62, section ".printk_index", align 4
@i40e_ndo_set_vf_bw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.65, ptr @.str.2, i32 4472, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"i40e_ndo_set_vf_bw\00", [45 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_bw._entry_ptr = internal global ptr @i40e_ndo_set_vf_bw._entry, section ".printk_index", align 4
@i40e_ndo_set_vf_bw._entry.66 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.65, ptr @.str.2, i32 4483, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"Invalid min tx rate (%d) (greater than 0) specified for VF %d.\0A\00", [32 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_bw._entry_ptr.68 = internal global ptr @i40e_ndo_set_vf_bw._entry.66, section ".printk_index", align 4
@i40e_ndo_set_vf_bw._entry.69 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.65, ptr @.str.2, i32 4492, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_bw._entry_ptr.70 = internal global ptr @i40e_ndo_set_vf_bw._entry.69, section ".printk_index", align 4
@i40e_ndo_get_vf_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.71, ptr @.str.2, i32 4525, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"i40e_ndo_get_vf_config\00", [41 x i8] zeroinitializer }, align 32
@i40e_ndo_get_vf_config._entry_ptr = internal global ptr @i40e_ndo_get_vf_config._entry, section ".printk_index", align 4
@i40e_ndo_set_vf_link_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.72, ptr @.str.2, i32 4586, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"i40e_ndo_set_vf_link_state\00", [37 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_link_state._entry_ptr = internal global ptr @i40e_ndo_set_vf_link_state._entry, section ".printk_index", align 4
@i40e_ndo_set_vf_link_state._entry.73 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.74, ptr @.str.72, ptr @.str.2, i32 4592, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Invalid VF Identifier %d\0A\00", [38 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_link_state._entry_ptr.75 = internal global ptr @i40e_ndo_set_vf_link_state._entry.73, section ".printk_index", align 4
@i40e_ndo_set_vf_spoofchk._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.76, ptr @.str.2, i32 4650, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_ndo_set_vf_spoofchk\00", [39 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_spoofchk._entry_ptr = internal global ptr @i40e_ndo_set_vf_spoofchk._entry, section ".printk_index", align 4
@i40e_ndo_set_vf_spoofchk._entry.77 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.74, ptr @.str.76, ptr @.str.2, i32 4656, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_spoofchk._entry_ptr.78 = internal global ptr @i40e_ndo_set_vf_spoofchk._entry.77, section ".printk_index", align 4
@i40e_ndo_set_vf_spoofchk._entry.79 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.76, ptr @.str.2, i32 4664, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_spoofchk._entry_ptr.80 = internal global ptr @i40e_ndo_set_vf_spoofchk._entry.79, section ".printk_index", align 4
@i40e_ndo_set_vf_spoofchk._entry.81 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.82, ptr @.str.76, ptr @.str.2, i32 4683, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Error %d updating VSI parameters\0A\00", [62 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_spoofchk._entry_ptr.83 = internal global ptr @i40e_ndo_set_vf_spoofchk._entry.81, section ".printk_index", align 4
@i40e_ndo_set_vf_trust._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.84, ptr @.str.2, i32 4707, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"i40e_ndo_set_vf_trust\00", [42 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_trust._entry_ptr = internal global ptr @i40e_ndo_set_vf_trust._entry, section ".printk_index", align 4
@i40e_ndo_set_vf_trust._entry.85 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.74, ptr @.str.84, ptr @.str.2, i32 4713, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_trust._entry_ptr.86 = internal global ptr @i40e_ndo_set_vf_trust._entry.85, section ".printk_index", align 4
@i40e_ndo_set_vf_trust._entry.87 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.88, ptr @.str.84, ptr @.str.2, i32 4719, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Trusted VF not supported in MFP mode.\0A\00", [57 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_trust._entry_ptr.89 = internal global ptr @i40e_ndo_set_vf_trust._entry.87, section ".printk_index", align 4
@i40e_ndo_set_vf_trust._entry.90 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.91, ptr @.str.84, ptr @.str.2, i32 4732, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"VF %u is now %strusted\0A\00", [40 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_trust._entry_ptr.92 = internal global ptr @i40e_ndo_set_vf_trust._entry.90, section ".printk_index", align 4
@.str.93 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.94 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"un\00", [29 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_trust._entry.95 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.96, ptr @.str.84, ptr @.str.2, i32 4738, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"VF %u no longer Trusted, deleting all cloud filters\0A\00", [43 x i8] zeroinitializer }, align 32
@i40e_ndo_set_vf_trust._entry_ptr.97 = internal global ptr @i40e_ndo_set_vf_trust._entry.95, section ".printk_index", align 4
@i40e_get_vf_stats._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.99, ptr @.str.2, i32 4769, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"VF %d in reset. Try again.\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"i40e_get_vf_stats\00", [46 x i8] zeroinitializer }, align 32
@i40e_get_vf_stats._entry_ptr = internal global ptr @i40e_get_vf_stats._entry, section ".printk_index", align 4
@i40e_trigger_vf_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.100, ptr @.str.101, ptr @.str.2, i32 1445, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Reset VF %d never finished\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"i40e_trigger_vf_reset\00", [42 x i8] zeroinitializer }, align 32
@i40e_trigger_vf_reset._entry_ptr = internal global ptr @i40e_trigger_vf_reset._entry, section ".printk_index", align 4
@i40e_trigger_vf_reset._entry.102 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.103, ptr @.str.101, ptr @.str.2, i32 1463, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"VF %d PCI transactions stuck\0A\00", [34 x i8] zeroinitializer }, align 32
@i40e_trigger_vf_reset._entry_ptr.104 = internal global ptr @i40e_trigger_vf_reset._entry.102, section ".printk_index", align 4
@i40e_alloc_vf_res._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.105, ptr @.str.106, ptr @.str.2, i32 1108, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"VF %d: Not enough queues to allocate, disabling ADq\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"i40e_alloc_vf_res\00", [46 x i8] zeroinitializer }, align 32
@i40e_alloc_vf_res._entry_ptr = internal global ptr @i40e_alloc_vf_res._entry, section ".printk_index", align 4
@i40e_alloc_vsi_res._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.108, ptr @.str.2, i32 785, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"add vsi failed for VF %d, aq_err %d\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"i40e_alloc_vsi_res\00", [45 x i8] zeroinitializer }, align 32
@i40e_alloc_vsi_res._entry_ptr = internal global ptr @i40e_alloc_vsi_res._entry, section ".printk_index", align 4
@i40e_alloc_vsi_res._entry.109 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.110, ptr @.str.108, ptr @.str.2, i32 812, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Could not add MAC filter %pM for VF %d\0A\00", [56 x i8] zeroinitializer }, align 32
@i40e_alloc_vsi_res._entry_ptr.111 = internal global ptr @i40e_alloc_vsi_res._entry.109, section ".printk_index", align 4
@i40e_alloc_vsi_res._entry.112 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.113, ptr @.str.108, ptr @.str.2, i32 818, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Could not allocate VF broadcast filter\0A\00", [56 x i8] zeroinitializer }, align 32
@i40e_alloc_vsi_res._entry_ptr.114 = internal global ptr @i40e_alloc_vsi_res._entry.112, section ".printk_index", align 4
@i40e_alloc_vsi_res._entry.115 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.108, ptr @.str.2, i32 825, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_alloc_vsi_res._entry_ptr.116 = internal global ptr @i40e_alloc_vsi_res._entry.115, section ".printk_index", align 4
@i40e_alloc_vsi_res._entry.117 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.118, ptr @.str.108, ptr @.str.2, i32 847, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Unable to set tx rate, VF %d, error code %d.\0A\00", [50 x i8] zeroinitializer }, align 32
@i40e_alloc_vsi_res._entry_ptr.119 = internal global ptr @i40e_alloc_vsi_res._entry.117, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@i40e_pci_sriov_enable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.120, ptr @.str.121, ptr @.str.2, i32 1843, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [90 x i8], [38 x i8] } { [90 x i8] c"Cannot enable SR-IOV virtual functions while the device is undergoing diagnostic testing\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"i40e_pci_sriov_enable\00", [42 x i8] zeroinitializer }, align 32
@i40e_pci_sriov_enable._entry_ptr = internal global ptr @i40e_pci_sriov_enable._entry, section ".printk_index", align 4
@i40e_pci_sriov_enable._entry.122 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.123, ptr @.str.121, ptr @.str.2, i32 1855, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"Unable to enable %d VFs. Limited to %d VFs due to device resource constraints.\0A\00", [48 x i8] zeroinitializer }, align 32
@i40e_pci_sriov_enable._entry_ptr.124 = internal global ptr @i40e_pci_sriov_enable._entry.122, section ".printk_index", align 4
@i40e_pci_sriov_enable._entry.125 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.121, ptr @.str.2, i32 1860, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Allocating %d VFs.\0A\00", [44 x i8] zeroinitializer }, align 32
@i40e_pci_sriov_enable._entry_ptr.127 = internal global ptr @i40e_pci_sriov_enable._entry.125, section ".printk_index", align 4
@i40e_pci_sriov_enable._entry.128 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.121, ptr @.str.2, i32 1863, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Failed to enable SR-IOV: %d\0A\00", [35 x i8] zeroinitializer }, align 32
@i40e_pci_sriov_enable._entry_ptr.130 = internal global ptr @i40e_pci_sriov_enable._entry.128, section ".printk_index", align 4
@i40e_vc_send_msg_to_vf._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.131, ptr @.str.132, ptr @.str.2, i32 1950, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Unable to send the message to VF %d aq_err %d\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"i40e_vc_send_msg_to_vf\00", [41 x i8] zeroinitializer }, align 32
@i40e_vc_send_msg_to_vf._entry_ptr = internal global ptr @i40e_vc_send_msg_to_vf._entry, section ".printk_index", align 4
@i40e_vc_get_vf_resources_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.133, ptr @.str.134, ptr @.str.2, i32 2118, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [128 x i8], [32 x i8] } { [128 x i8] c"VF %d requested polling mode: this feature is supported only when the device is running in single function per port (SFP) mode\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"i40e_vc_get_vf_resources_msg\00", [35 x i8] zeroinitializer }, align 32
@i40e_vc_get_vf_resources_msg._entry_ptr = internal global ptr @i40e_vc_get_vf_resources_msg._entry, section ".printk_index", align 4
@i40e_vc_reset_vf._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.136, ptr @.str.2, i32 218, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"Failed to initiate reset for VF %d after 200 milliseconds\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"i40e_vc_reset_vf\00", [47 x i8] zeroinitializer }, align 32
@i40e_vc_reset_vf._entry_ptr = internal global ptr @i40e_vc_reset_vf._entry, section ".printk_index", align 4
@i40e_vc_config_promiscuous_mode_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.139, ptr @.str.2, i32 2188, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"Unprivileged VF %d is attempting to configure promiscuous mode\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"i40e_vc_config_promiscuous_mode_msg\00", [60 x i8] zeroinitializer }, align 32
@i40e_vc_config_promiscuous_mode_msg._entry_ptr = internal global ptr @i40e_vc_config_promiscuous_mode_msg._entry, section ".printk_index", align 4
@i40e_vc_config_promiscuous_mode_msg._entry.140 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.139, ptr @.str.2, i32 2223, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"VF %d successfully set multicast promiscuous mode\0A\00", [45 x i8] zeroinitializer }, align 32
@i40e_vc_config_promiscuous_mode_msg._entry_ptr.142 = internal global ptr @i40e_vc_config_promiscuous_mode_msg._entry.140, section ".printk_index", align 4
@i40e_vc_config_promiscuous_mode_msg._entry.143 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.139, ptr @.str.2, i32 2228, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"VF %d successfully unset multicast promiscuous mode\0A\00", [43 x i8] zeroinitializer }, align 32
@i40e_vc_config_promiscuous_mode_msg._entry_ptr.145 = internal global ptr @i40e_vc_config_promiscuous_mode_msg._entry.143, section ".printk_index", align 4
@i40e_vc_config_promiscuous_mode_msg._entry.146 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.139, ptr @.str.2, i32 2235, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"VF %d successfully set unicast promiscuous mode\0A\00", [47 x i8] zeroinitializer }, align 32
@i40e_vc_config_promiscuous_mode_msg._entry_ptr.148 = internal global ptr @i40e_vc_config_promiscuous_mode_msg._entry.146, section ".printk_index", align 4
@i40e_vc_config_promiscuous_mode_msg._entry.149 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.139, ptr @.str.2, i32 2240, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"VF %d successfully unset unicast promiscuous mode\0A\00", [45 x i8] zeroinitializer }, align 32
@i40e_vc_config_promiscuous_mode_msg._entry_ptr.151 = internal global ptr @i40e_vc_config_promiscuous_mode_msg._entry.149, section ".printk_index", align 4
@i40e_config_vsi_rx_queue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.152, ptr @.str.153, ptr @.str.2, i32 745, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"Failed to clear VF LAN Rx queue context %d, error: %d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_config_vsi_rx_queue\00", [39 x i8] zeroinitializer }, align 32
@i40e_config_vsi_rx_queue._entry_ptr = internal global ptr @i40e_config_vsi_rx_queue._entry, section ".printk_index", align 4
@i40e_config_vsi_rx_queue._entry.154 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.155, ptr @.str.153, ptr @.str.2, i32 755, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Failed to set VF LAN Rx queue context %d error: %d\0A\00", [44 x i8] zeroinitializer }, align 32
@i40e_config_vsi_rx_queue._entry_ptr.156 = internal global ptr @i40e_config_vsi_rx_queue._entry.154, section ".printk_index", align 4
@i40e_config_vsi_tx_queue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.157, ptr @.str.158, ptr @.str.2, i32 641, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"Failed to clear VF LAN Tx queue context %d, error: %d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_config_vsi_tx_queue\00", [39 x i8] zeroinitializer }, align 32
@i40e_config_vsi_tx_queue._entry_ptr = internal global ptr @i40e_config_vsi_tx_queue._entry, section ".printk_index", align 4
@i40e_config_vsi_tx_queue._entry.159 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.160, ptr @.str.158, ptr @.str.2, i32 651, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Failed to set VF LAN Tx queue context %d error: %d\0A\00", [44 x i8] zeroinitializer }, align 32
@i40e_config_vsi_tx_queue._entry_ptr.161 = internal global ptr @i40e_config_vsi_tx_queue._entry.159, section ".printk_index", align 4
@i40e_vc_add_mac_addr_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.162, ptr @.str.163, ptr @.str.2, i32 2915, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Unable to add MAC filter %pM for VF %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_vc_add_mac_addr_msg\00", [39 x i8] zeroinitializer }, align 32
@i40e_vc_add_mac_addr_msg._entry_ptr = internal global ptr @i40e_vc_add_mac_addr_msg._entry, section ".printk_index", align 4
@i40e_vc_add_mac_addr_msg._entry.164 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.165, ptr @.str.163, ptr @.str.2, i32 2932, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Unable to program VF %d MAC filters, error %d\0A\00", [49 x i8] zeroinitializer }, align 32
@i40e_vc_add_mac_addr_msg._entry_ptr.166 = internal global ptr @i40e_vc_add_mac_addr_msg._entry.164, section ".printk_index", align 4
@i40e_check_vf_permission._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.167, ptr @.str.168, ptr @.str.2, i32 2816, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"invalid VF MAC addr %pM\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_check_vf_permission\00", [39 x i8] zeroinitializer }, align 32
@i40e_check_vf_permission._entry_ptr = internal global ptr @i40e_check_vf_permission._entry, section ".printk_index", align 4
@i40e_check_vf_permission._entry.169 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.170, ptr @.str.168, ptr @.str.2, i32 2831, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [123 x i8], [37 x i8] } { [123 x i8] c"VF attempting to override administratively set MAC address, bring down and up the VF interface to resume normal operation\0A\00", [37 x i8] zeroinitializer }, align 32
@i40e_check_vf_permission._entry_ptr.171 = internal global ptr @i40e_check_vf_permission._entry.169, section ".printk_index", align 4
@i40e_check_vf_permission._entry.172 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.173, ptr @.str.168, ptr @.str.2, i32 2849, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [102 x i8], [58 x i8] } { [102 x i8] c"Cannot add more MAC addresses, VF is not trusted, switch the VF to trusted to add more functionality\0A\00", [58 x i8] zeroinitializer }, align 32
@i40e_check_vf_permission._entry_ptr.174 = internal global ptr @i40e_check_vf_permission._entry.172, section ".printk_index", align 4
@i40e_check_vf_permission._entry.175 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.176, ptr @.str.168, ptr @.str.2, i32 2862, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"Cannot add more MAC addresses, trusted VF exhausted it's resources\0A\00", [60 x i8] zeroinitializer }, align 32
@i40e_check_vf_permission._entry_ptr.177 = internal global ptr @i40e_check_vf_permission._entry.175, section ".printk_index", align 4
@i40e_vc_del_mac_addr_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.178, ptr @.str.179, ptr @.str.2, i32 2967, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Invalid MAC addr %pM for VF %d\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_vc_del_mac_addr_msg\00", [39 x i8] zeroinitializer }, align 32
@i40e_vc_del_mac_addr_msg._entry_ptr = internal global ptr @i40e_vc_del_mac_addr_msg._entry, section ".printk_index", align 4
@i40e_vc_del_mac_addr_msg._entry.180 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.165, ptr @.str.179, ptr @.str.2, i32 2991, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_vc_del_mac_addr_msg._entry_ptr.181 = internal global ptr @i40e_vc_del_mac_addr_msg._entry.180, section ".printk_index", align 4
@i40e_vc_add_vlan_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.182, ptr @.str.183, ptr @.str.2, i32 3033, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VF is not trusted, switch the VF to trusted to add more VLAN addresses\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"i40e_vc_add_vlan_msg\00", [43 x i8] zeroinitializer }, align 32
@i40e_vc_add_vlan_msg._entry_ptr = internal global ptr @i40e_vc_add_vlan_msg._entry, section ".printk_index", align 4
@i40e_vc_add_vlan_msg._entry.184 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.185, ptr @.str.183, ptr @.str.2, i32 3046, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"invalid VF VLAN id %d\0A\00", [41 x i8] zeroinitializer }, align 32
@i40e_vc_add_vlan_msg._entry_ptr.186 = internal global ptr @i40e_vc_add_vlan_msg._entry.184, section ".printk_index", align 4
@i40e_vc_add_vlan_msg._entry.187 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.188, ptr @.str.183, ptr @.str.2, i32 3077, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Unable to add VLAN filter %d for VF %d, error %d\0A\00", [46 x i8] zeroinitializer }, align 32
@i40e_vc_add_vlan_msg._entry_ptr.189 = internal global ptr @i40e_vc_add_vlan_msg._entry.187, section ".printk_index", align 4
@i40e_config_iwarp_qvlist._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.190, ptr @.str.191, ptr @.str.2, i32 517, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"Incorrect number of iwarp vectors %u. Maximum %u allowed.\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_config_iwarp_qvlist\00", [39 x i8] zeroinitializer }, align 32
@i40e_config_iwarp_qvlist._entry_ptr = internal global ptr @i40e_config_iwarp_qvlist._entry, section ".printk_index", align 4
@i40e_vc_request_queues_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.192, ptr @.str.193, ptr @.str.2, i32 2700, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"VF %d tried to request more than %d queues.\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"i40e_vc_request_queues_msg\00", [37 x i8] zeroinitializer }, align 32
@i40e_vc_request_queues_msg._entry_ptr = internal global ptr @i40e_vc_request_queues_msg._entry, section ".printk_index", align 4
@i40e_vc_request_queues_msg._entry.194 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.193, ptr @.str.2, i32 2707, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"VF %d requested %d more queues, but only %d left.\0A\00", [45 x i8] zeroinitializer }, align 32
@i40e_vc_request_queues_msg._entry_ptr.196 = internal global ptr @i40e_vc_request_queues_msg._entry.194, section ".printk_index", align 4
@i40e_vc_request_queues_msg._entry.197 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.193, ptr @.str.2, i32 2713, ptr @.str.8, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"VF %d requested %d more queues, but there is not enough for it.\0A\00", [63 x i8] zeroinitializer }, align 32
@i40e_vc_request_queues_msg._entry_ptr.199 = internal global ptr @i40e_vc_request_queues_msg._entry.197, section ".printk_index", align 4
@i40e_vc_add_qch_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.200, ptr @.str.201, ptr @.str.2, i32 3849, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Spoof check is ON, turn it OFF to enable ADq\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"i40e_vc_add_qch_msg\00", [44 x i8] zeroinitializer }, align 32
@i40e_vc_add_qch_msg._entry_ptr = internal global ptr @i40e_vc_add_qch_msg._entry, section ".printk_index", align 4
@i40e_vc_add_qch_msg._entry.202 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.203, ptr @.str.201, ptr @.str.2, i32 3857, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"VF %d attempting to enable ADq, but hasn't properly negotiated that capability\0A\00", [48 x i8] zeroinitializer }, align 32
@i40e_vc_add_qch_msg._entry_ptr.204 = internal global ptr @i40e_vc_add_qch_msg._entry.202, section ".printk_index", align 4
@i40e_vc_add_qch_msg._entry.205 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.206, ptr @.str.201, ptr @.str.2, i32 3866, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"VF %d trying to set %u TCs, valid range 1-%u TCs per VF\0A\00", [39 x i8] zeroinitializer }, align 32
@i40e_vc_add_qch_msg._entry_ptr.207 = internal global ptr @i40e_vc_add_qch_msg._entry.205, section ".printk_index", align 4
@i40e_vc_add_qch_msg._entry.208 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.209, ptr @.str.201, ptr @.str.2, i32 3878, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"VF %d: TC %d trying to set %u queues, valid range 1-%u queues per TC\0A\00", [58 x i8] zeroinitializer }, align 32
@i40e_vc_add_qch_msg._entry_ptr.210 = internal global ptr @i40e_vc_add_qch_msg._entry.208, section ".printk_index", align 4
@i40e_vc_add_qch_msg._entry.211 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.212, ptr @.str.201, ptr @.str.2, i32 3889, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"No queues left to allocate to VF %d\0A\00", [59 x i8] zeroinitializer }, align 32
@i40e_vc_add_qch_msg._entry_ptr.213 = internal global ptr @i40e_vc_add_qch_msg._entry.211, section ".printk_index", align 4
@i40e_vc_add_qch_msg._entry.214 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.215, ptr @.str.201, ptr @.str.2, i32 3904, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Cannot detect link speed\0A\00", [38 x i8] zeroinitializer }, align 32
@i40e_vc_add_qch_msg._entry_ptr.216 = internal global ptr @i40e_vc_add_qch_msg._entry.214, section ".printk_index", align 4
@i40e_vc_add_qch_msg._entry.217 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.218, ptr @.str.201, ptr @.str.2, i32 3917, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Invalid max tx rate %llu specified for VF %d.\00", [50 x i8] zeroinitializer }, align 32
@i40e_vc_add_qch_msg._entry_ptr.219 = internal global ptr @i40e_vc_add_qch_msg._entry.217, section ".printk_index", align 4
@i40e_vc_del_qch_msg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.221, ptr @.str.2, i32 3964, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"Deleting Queue Channels and cloud filters for ADq on VF %d\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"i40e_vc_del_qch_msg\00", [44 x i8] zeroinitializer }, align 32
@i40e_vc_del_qch_msg._entry_ptr = internal global ptr @i40e_vc_del_qch_msg._entry, section ".printk_index", align 4
@i40e_vc_del_qch_msg._entry.222 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.223, ptr @.str.221, ptr @.str.2, i32 3967, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"VF %d trying to delete queue channels but ADq isn't enabled\0A\00", [35 x i8] zeroinitializer }, align 32
@i40e_vc_del_qch_msg._entry_ptr.224 = internal global ptr @i40e_vc_del_qch_msg._entry.222, section ".printk_index", align 4
@i40e_vc_add_cloud_filter._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.225, ptr @.str.226, ptr @.str.2, i32 3740, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"VF %d: ADq is not enabled, can't apply cloud filter\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_vc_add_cloud_filter\00", [39 x i8] zeroinitializer }, align 32
@i40e_vc_add_cloud_filter._entry_ptr = internal global ptr @i40e_vc_add_cloud_filter._entry, section ".printk_index", align 4
@i40e_vc_add_cloud_filter._entry.227 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.228, ptr @.str.226, ptr @.str.2, i32 3748, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"VF %d: Invalid input/s, can't apply cloud filter\0A\00", [46 x i8] zeroinitializer }, align 32
@i40e_vc_add_cloud_filter._entry_ptr.229 = internal global ptr @i40e_vc_add_cloud_filter._entry.227, section ".printk_index", align 4
@i40e_vc_add_cloud_filter._entry.230 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.231, ptr @.str.226, ptr @.str.2, i32 3793, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"VF %d: Flow type not configured\0A\00", [63 x i8] zeroinitializer }, align 32
@i40e_vc_add_cloud_filter._entry_ptr.232 = internal global ptr @i40e_vc_add_cloud_filter._entry.230, section ".printk_index", align 4
@i40e_vc_add_cloud_filter._entry.233 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.234, ptr @.str.226, ptr @.str.2, i32 3810, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"VF %d: Failed to add cloud filter, err %s aq_err %s\0A\00", [43 x i8] zeroinitializer }, align 32
@i40e_vc_add_cloud_filter._entry_ptr.235 = internal global ptr @i40e_vc_add_cloud_filter._entry.233, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.236, ptr @.str.237, ptr @.str.2, i32 3410, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"VF %d: Currently ADq doesn't support Drop Action\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"i40e_validate_cloud_filter\00", [37 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr = internal global ptr @i40e_validate_cloud_filter._entry, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.238 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.237, ptr @.str.2, i32 3418, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"VF %d: Invalid TC number %u\0A\00", [35 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.240 = internal global ptr @i40e_validate_cloud_filter._entry.238, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.241 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.237, ptr @.str.2, i32 3438, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Destination MAC %pM doesn't belong to VF %d\0A\00", [51 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.243 = internal global ptr @i40e_validate_cloud_filter._entry.241, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.244 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.245, ptr @.str.237, ptr @.str.2, i32 3453, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VF %d doesn't have any VLAN id %u\0A\00", [61 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.246 = internal global ptr @i40e_validate_cloud_filter._entry.244, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.247 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.248, ptr @.str.237, ptr @.str.2, i32 3462, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"VF %d not trusted, make VF trusted to add advanced mode ADq cloud filters\0A\00", [53 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.249 = internal global ptr @i40e_validate_cloud_filter._entry.247, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.250 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.251, ptr @.str.237, ptr @.str.2, i32 3471, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"VF %d: Invalid Dest MAC addr %pM\0A\00", [62 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.252 = internal global ptr @i40e_validate_cloud_filter._entry.250, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.253 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.254, ptr @.str.237, ptr @.str.2, i32 3480, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"VF %d: Invalid Source MAC addr %pM\0A\00", [60 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.255 = internal global ptr @i40e_validate_cloud_filter._entry.253, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.256 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.257, ptr @.str.237, ptr @.str.2, i32 3488, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"VF %d: Invalid Dest port\0A\00", [38 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.258 = internal global ptr @i40e_validate_cloud_filter._entry.256, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.259 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.260, ptr @.str.237, ptr @.str.2, i32 3496, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"VF %d: Invalid Source port\0A\00", [36 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.261 = internal global ptr @i40e_validate_cloud_filter._entry.259, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.262 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.263, ptr @.str.237, ptr @.str.2, i32 3504, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"VF %d: Invalid Flow type\0A\00", [38 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.264 = internal global ptr @i40e_validate_cloud_filter._entry.262, section ".printk_index", align 4
@i40e_validate_cloud_filter._entry.265 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.266, ptr @.str.237, ptr @.str.2, i32 3511, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"VF %d: invalid VLAN ID\0A\00", [40 x i8] zeroinitializer }, align 32
@i40e_validate_cloud_filter._entry_ptr.267 = internal global ptr @i40e_validate_cloud_filter._entry.265, section ".printk_index", align 4
@i40e_vc_del_cloud_filter._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.268, ptr @.str.269, ptr @.str.2, i32 3609, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"VF %d: ADq not enabled, can't apply cloud filter\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"i40e_vc_del_cloud_filter\00", [39 x i8] zeroinitializer }, align 32
@i40e_vc_del_cloud_filter._entry_ptr = internal global ptr @i40e_vc_del_cloud_filter._entry, section ".printk_index", align 4
@i40e_vc_del_cloud_filter._entry.270 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.271, ptr @.str.269, ptr @.str.2, i32 3617, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"VF %d: Invalid input, can't apply cloud filter\0A\00", [48 x i8] zeroinitializer }, align 32
@i40e_vc_del_cloud_filter._entry_ptr.272 = internal global ptr @i40e_vc_del_cloud_filter._entry.270, section ".printk_index", align 4
@i40e_vc_del_cloud_filter._entry.273 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.231, ptr @.str.269, ptr @.str.2, i32 3659, ptr @.str.31, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_vc_del_cloud_filter._entry_ptr.274 = internal global ptr @i40e_vc_del_cloud_filter._entry.273, section ".printk_index", align 4
@i40e_vc_del_cloud_filter._entry.275 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.276, ptr @.str.269, ptr @.str.2, i32 3676, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"VF %d: Failed to delete cloud filter, err %s aq_err %s\0A\00", [40 x i8] zeroinitializer }, align 32
@i40e_vc_del_cloud_filter._entry_ptr.277 = internal global ptr @i40e_vc_del_cloud_filter._entry.275, section ".printk_index", align 4
@i40e_validate_vf._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.74, ptr @.str.278, ptr @.str.2, i32 4181, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"i40e_validate_vf\00", [47 x i8] zeroinitializer }, align 32
@i40e_validate_vf._entry_ptr = internal global ptr @i40e_validate_vf._entry, section ".printk_index", align 4
@i40e_set_vsi_promisc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.279, ptr @.str.280, ptr @.str.2, i32 1270, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"VF %d failed to set multicast promiscuous mode err %s aq_err %s\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"i40e_set_vsi_promisc\00", [43 x i8] zeroinitializer }, align 32
@i40e_set_vsi_promisc._entry_ptr = internal global ptr @i40e_set_vsi_promisc._entry, section ".printk_index", align 4
@i40e_set_vsi_promisc._entry.281 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.282, ptr @.str.280, ptr @.str.2, i32 1286, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"VF %d failed to set unicast promiscuous mode err %s aq_err %s\0A\00", [33 x i8] zeroinitializer }, align 32
@i40e_set_vsi_promisc._entry_ptr.283 = internal global ptr @i40e_set_vsi_promisc._entry.281, section ".printk_index", align 4
@i40e_set_vsi_promisc._entry.284 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.279, ptr @.str.280, ptr @.str.2, i32 1303, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_set_vsi_promisc._entry_ptr.285 = internal global ptr @i40e_set_vsi_promisc._entry.284, section ".printk_index", align 4
@i40e_set_vsi_promisc._entry.286 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.282, ptr @.str.280, ptr @.str.2, i32 1319, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_set_vsi_promisc._entry_ptr.287 = internal global ptr @i40e_set_vsi_promisc._entry.286, section ".printk_index", align 4
@i40e_del_all_cloud_filters._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.288, ptr @.str.289, ptr @.str.2, i32 3560, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"VF %d: no VSI found for matching %u seid, can't delete cloud filter\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"i40e_del_all_cloud_filters\00", [37 x i8] zeroinitializer }, align 32
@i40e_del_all_cloud_filters._entry_ptr = internal global ptr @i40e_del_all_cloud_filters._entry, section ".printk_index", align 4
@i40e_del_all_cloud_filters._entry.290 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.276, ptr @.str.289, ptr @.str.2, i32 3574, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@i40e_del_all_cloud_filters._entry_ptr.291 = internal global ptr @i40e_del_all_cloud_filters._entry.290, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [42 x i64] [i64 40, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 20, i64 21, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33, i64 45, i64 46, i64 47, i64 48, i64 51, i64 52, i64 53, i64 54, i64 55, i64 56, i64 57]
@__sancov_gen_cov_switch_values.292 = internal global [29 x i64] [i64 27, i64 32, i64 1, i64 2, i64 3, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 20, i64 21, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33]
@__sancov_gen_cov_switch_values.293 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.294 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 1, i64 2, i64 4, i64 8, i64 16, i64 32, i64 64, i64 128]
@__sancov_gen_cov_switch_values.295 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.296 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.297 = internal global [4 x i64] [i64 2, i64 16, i64 2048, i64 34525]
@__sancov_gen_cov_switch_values.298 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.299 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 1, i64 2, i64 4, i64 8, i64 16, i64 32, i64 64, i64 128]
@__sancov_gen_cov_switch_values.300 = internal global [10 x i64] [i64 8, i64 32, i64 1, i64 2, i64 4, i64 8, i64 16, i64 32, i64 64, i64 128]
@___asan_gen_.318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1568, i32 3 }
@___asan_gen_.324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1647, i32 3 }
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1716, i32 3 }
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1890, i32 3 }
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1908, i32 3 }
@___asan_gen_.360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4015, i32 3 }
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4112, i32 3 }
@___asan_gen_.372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4214, i32 3 }
@___asan_gen_.378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4237, i32 3 }
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4245, i32 3 }
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4270, i32 3 }
@___asan_gen_.399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4278, i32 3 }
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4281, i32 3 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4289, i32 2 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4318, i32 3 }
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4328, i32 3 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4334, i32 3 }
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4342, i32 3 }
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4371, i32 4 }
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4391, i32 3 }
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4402, i32 3 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4408, i32 4 }
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4431, i32 3 }
@___asan_gen_.465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4442, i32 3 }
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4472, i32 3 }
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4482, i32 3 }
@___asan_gen_.480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4491, i32 3 }
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4525, i32 3 }
@___asan_gen_.492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4586, i32 3 }
@___asan_gen_.498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4592, i32 3 }
@___asan_gen_.504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4650, i32 3 }
@___asan_gen_.507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4656, i32 3 }
@___asan_gen_.510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4663, i32 3 }
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4682, i32 3 }
@___asan_gen_.522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4707, i32 3 }
@___asan_gen_.525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4713, i32 3 }
@___asan_gen_.531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4719, i32 3 }
@___asan_gen_.543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4731, i32 2 }
@___asan_gen_.549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4736, i32 4 }
@___asan_gen_.558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4769, i32 3 }
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1443, i32 5 }
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1462, i32 3 }
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1107, i32 4 }
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 783, i32 3 }
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 810, i32 5 }
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 817, i32 4 }
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 825, i32 4 }
@___asan_gen_.612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 846, i32 4 }
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1842, i32 3 }
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1854, i32 3 }
@___asan_gen_.633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1860, i32 2 }
@___asan_gen_.639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1863, i32 3 }
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1948, i32 3 }
@___asan_gen_.657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2116, i32 4 }
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 216, i32 3 }
@___asan_gen_.675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2186, i32 3 }
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2221, i32 4 }
@___asan_gen_.687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2226, i32 3 }
@___asan_gen_.693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2233, i32 4 }
@___asan_gen_.699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2238, i32 3 }
@___asan_gen_.708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 743, i32 3 }
@___asan_gen_.714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 753, i32 3 }
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 639, i32 3 }
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 649, i32 3 }
@___asan_gen_.738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2913, i32 5 }
@___asan_gen_.744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2931, i32 3 }
@___asan_gen_.753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2815, i32 4 }
@___asan_gen_.759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2830, i32 4 }
@___asan_gen_.765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2848, i32 4 }
@___asan_gen_.771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2861, i32 4 }
@___asan_gen_.780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2966, i32 4 }
@___asan_gen_.783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2990, i32 3 }
@___asan_gen_.792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3032, i32 3 }
@___asan_gen_.798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3045, i32 4 }
@___asan_gen_.804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3075, i32 4 }
@___asan_gen_.813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 514, i32 3 }
@___asan_gen_.822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2697, i32 3 }
@___asan_gen_.828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2703, i32 3 }
@___asan_gen_.834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 2710, i32 3 }
@___asan_gen_.843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3848, i32 3 }
@___asan_gen_.849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3855, i32 3 }
@___asan_gen_.855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3864, i32 3 }
@___asan_gen_.861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3875, i32 4 }
@___asan_gen_.867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3887, i32 3 }
@___asan_gen_.873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3903, i32 3 }
@___asan_gen_.879 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3914, i32 5 }
@___asan_gen_.888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3962, i32 3 }
@___asan_gen_.894 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3966, i32 3 }
@___asan_gen_.903 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3738, i32 3 }
@___asan_gen_.909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3746, i32 3 }
@___asan_gen_.915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3792, i32 3 }
@___asan_gen_.921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3807, i32 3 }
@___asan_gen_.930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3408, i32 3 }
@___asan_gen_.936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3417, i32 3 }
@___asan_gen_.942 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3436, i32 4 }
@___asan_gen_.948 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3451, i32 5 }
@___asan_gen_.954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3460, i32 4 }
@___asan_gen_.960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3470, i32 4 }
@___asan_gen_.966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3479, i32 4 }
@___asan_gen_.972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3487, i32 4 }
@___asan_gen_.978 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3495, i32 4 }
@___asan_gen_.984 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3503, i32 3 }
@___asan_gen_.990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3510, i32 4 }
@___asan_gen_.999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3607, i32 3 }
@___asan_gen_.1005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3615, i32 3 }
@___asan_gen_.1008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3658, i32 3 }
@___asan_gen_.1014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3673, i32 3 }
@___asan_gen_.1020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 4180, i32 3 }
@___asan_gen_.1029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1266, i32 4 }
@___asan_gen_.1035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1282, i32 4 }
@___asan_gen_.1038 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1299, i32 4 }
@___asan_gen_.1041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 1315, i32 4 }
@___asan_gen_.1048 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1050 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3559, i32 4 }
@___asan_gen_.1051 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1052 = private constant [54 x i8] c"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c\00", align 1
@___asan_gen_.1053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1052, i32 3570, i32 4 }
@llvm.compiler.used = appending global [365 x ptr] [ptr @i40e_alloc_vf_res._entry, ptr @i40e_alloc_vf_res._entry_ptr, ptr @i40e_alloc_vsi_res._entry, ptr @i40e_alloc_vsi_res._entry.109, ptr @i40e_alloc_vsi_res._entry.112, ptr @i40e_alloc_vsi_res._entry.115, ptr @i40e_alloc_vsi_res._entry.117, ptr @i40e_alloc_vsi_res._entry_ptr, ptr @i40e_alloc_vsi_res._entry_ptr.111, ptr @i40e_alloc_vsi_res._entry_ptr.114, ptr @i40e_alloc_vsi_res._entry_ptr.116, ptr @i40e_alloc_vsi_res._entry_ptr.119, ptr @i40e_check_vf_permission._entry, ptr @i40e_check_vf_permission._entry.169, ptr @i40e_check_vf_permission._entry.172, ptr @i40e_check_vf_permission._entry.175, ptr @i40e_check_vf_permission._entry_ptr, ptr @i40e_check_vf_permission._entry_ptr.171, ptr @i40e_check_vf_permission._entry_ptr.174, ptr @i40e_check_vf_permission._entry_ptr.177, ptr @i40e_config_iwarp_qvlist._entry, ptr @i40e_config_iwarp_qvlist._entry_ptr, ptr @i40e_config_vsi_rx_queue._entry, ptr @i40e_config_vsi_rx_queue._entry.154, ptr @i40e_config_vsi_rx_queue._entry_ptr, ptr @i40e_config_vsi_rx_queue._entry_ptr.156, ptr @i40e_config_vsi_tx_queue._entry, ptr @i40e_config_vsi_tx_queue._entry.159, ptr @i40e_config_vsi_tx_queue._entry_ptr, ptr @i40e_config_vsi_tx_queue._entry_ptr.161, ptr @i40e_del_all_cloud_filters._entry, ptr @i40e_del_all_cloud_filters._entry.290, ptr @i40e_del_all_cloud_filters._entry_ptr, ptr @i40e_del_all_cloud_filters._entry_ptr.291, ptr @i40e_free_vfs._entry, ptr @i40e_free_vfs._entry_ptr, ptr @i40e_get_vf_stats._entry, ptr @i40e_get_vf_stats._entry_ptr, ptr @i40e_ndo_get_vf_config._entry, ptr @i40e_ndo_get_vf_config._entry_ptr, ptr @i40e_ndo_set_vf_bw._entry, ptr @i40e_ndo_set_vf_bw._entry.66, ptr @i40e_ndo_set_vf_bw._entry.69, ptr @i40e_ndo_set_vf_bw._entry_ptr, ptr @i40e_ndo_set_vf_bw._entry_ptr.68, ptr @i40e_ndo_set_vf_bw._entry_ptr.70, ptr @i40e_ndo_set_vf_link_state._entry, ptr @i40e_ndo_set_vf_link_state._entry.73, ptr @i40e_ndo_set_vf_link_state._entry_ptr, ptr @i40e_ndo_set_vf_link_state._entry_ptr.75, ptr @i40e_ndo_set_vf_mac._entry, ptr @i40e_ndo_set_vf_mac._entry.20, ptr @i40e_ndo_set_vf_mac._entry.23, ptr @i40e_ndo_set_vf_mac._entry.26, ptr @i40e_ndo_set_vf_mac._entry.29, ptr @i40e_ndo_set_vf_mac._entry.33, ptr @i40e_ndo_set_vf_mac._entry.36, ptr @i40e_ndo_set_vf_mac._entry_ptr, ptr @i40e_ndo_set_vf_mac._entry_ptr.22, ptr @i40e_ndo_set_vf_mac._entry_ptr.25, ptr @i40e_ndo_set_vf_mac._entry_ptr.28, ptr @i40e_ndo_set_vf_mac._entry_ptr.32, ptr @i40e_ndo_set_vf_mac._entry_ptr.35, ptr @i40e_ndo_set_vf_mac._entry_ptr.38, ptr @i40e_ndo_set_vf_port_vlan._entry, ptr @i40e_ndo_set_vf_port_vlan._entry.40, ptr @i40e_ndo_set_vf_port_vlan._entry.43, ptr @i40e_ndo_set_vf_port_vlan._entry.46, ptr @i40e_ndo_set_vf_port_vlan._entry.48, ptr @i40e_ndo_set_vf_port_vlan._entry.51, ptr @i40e_ndo_set_vf_port_vlan._entry.54, ptr @i40e_ndo_set_vf_port_vlan._entry.57, ptr @i40e_ndo_set_vf_port_vlan._entry.59, ptr @i40e_ndo_set_vf_port_vlan._entry.62, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.42, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.45, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.47, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.50, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.53, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.56, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.58, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.61, ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.64, ptr @i40e_ndo_set_vf_spoofchk._entry, ptr @i40e_ndo_set_vf_spoofchk._entry.77, ptr @i40e_ndo_set_vf_spoofchk._entry.79, ptr @i40e_ndo_set_vf_spoofchk._entry.81, ptr @i40e_ndo_set_vf_spoofchk._entry_ptr, ptr @i40e_ndo_set_vf_spoofchk._entry_ptr.78, ptr @i40e_ndo_set_vf_spoofchk._entry_ptr.80, ptr @i40e_ndo_set_vf_spoofchk._entry_ptr.83, ptr @i40e_ndo_set_vf_trust._entry, ptr @i40e_ndo_set_vf_trust._entry.85, ptr @i40e_ndo_set_vf_trust._entry.87, ptr @i40e_ndo_set_vf_trust._entry.90, ptr @i40e_ndo_set_vf_trust._entry.95, ptr @i40e_ndo_set_vf_trust._entry_ptr, ptr @i40e_ndo_set_vf_trust._entry_ptr.86, ptr @i40e_ndo_set_vf_trust._entry_ptr.89, ptr @i40e_ndo_set_vf_trust._entry_ptr.92, ptr @i40e_ndo_set_vf_trust._entry_ptr.97, ptr @i40e_pci_sriov_configure._entry, ptr @i40e_pci_sriov_configure._entry.11, ptr @i40e_pci_sriov_configure._entry_ptr, ptr @i40e_pci_sriov_configure._entry_ptr.13, ptr @i40e_pci_sriov_enable._entry, ptr @i40e_pci_sriov_enable._entry.122, ptr @i40e_pci_sriov_enable._entry.125, ptr @i40e_pci_sriov_enable._entry.128, ptr @i40e_pci_sriov_enable._entry_ptr, ptr @i40e_pci_sriov_enable._entry_ptr.124, ptr @i40e_pci_sriov_enable._entry_ptr.127, ptr @i40e_pci_sriov_enable._entry_ptr.130, ptr @i40e_reset_all_vfs._entry, ptr @i40e_reset_all_vfs._entry_ptr, ptr @i40e_reset_vf._entry, ptr @i40e_reset_vf._entry_ptr, ptr @i40e_set_vsi_promisc._entry, ptr @i40e_set_vsi_promisc._entry.281, ptr @i40e_set_vsi_promisc._entry.284, ptr @i40e_set_vsi_promisc._entry.286, ptr @i40e_set_vsi_promisc._entry_ptr, ptr @i40e_set_vsi_promisc._entry_ptr.283, ptr @i40e_set_vsi_promisc._entry_ptr.285, ptr @i40e_set_vsi_promisc._entry_ptr.287, ptr @i40e_trigger_vf_reset._entry, ptr @i40e_trigger_vf_reset._entry.102, ptr @i40e_trigger_vf_reset._entry_ptr, ptr @i40e_trigger_vf_reset._entry_ptr.104, ptr @i40e_validate_cloud_filter._entry, ptr @i40e_validate_cloud_filter._entry.238, ptr @i40e_validate_cloud_filter._entry.241, ptr @i40e_validate_cloud_filter._entry.244, ptr @i40e_validate_cloud_filter._entry.247, ptr @i40e_validate_cloud_filter._entry.250, ptr @i40e_validate_cloud_filter._entry.253, ptr @i40e_validate_cloud_filter._entry.256, ptr @i40e_validate_cloud_filter._entry.259, ptr @i40e_validate_cloud_filter._entry.262, ptr @i40e_validate_cloud_filter._entry.265, ptr @i40e_validate_cloud_filter._entry_ptr, ptr @i40e_validate_cloud_filter._entry_ptr.240, ptr @i40e_validate_cloud_filter._entry_ptr.243, ptr @i40e_validate_cloud_filter._entry_ptr.246, ptr @i40e_validate_cloud_filter._entry_ptr.249, ptr @i40e_validate_cloud_filter._entry_ptr.252, ptr @i40e_validate_cloud_filter._entry_ptr.255, ptr @i40e_validate_cloud_filter._entry_ptr.258, ptr @i40e_validate_cloud_filter._entry_ptr.261, ptr @i40e_validate_cloud_filter._entry_ptr.264, ptr @i40e_validate_cloud_filter._entry_ptr.267, ptr @i40e_validate_vf._entry, ptr @i40e_validate_vf._entry_ptr, ptr @i40e_vc_add_cloud_filter._entry, ptr @i40e_vc_add_cloud_filter._entry.227, ptr @i40e_vc_add_cloud_filter._entry.230, ptr @i40e_vc_add_cloud_filter._entry.233, ptr @i40e_vc_add_cloud_filter._entry_ptr, ptr @i40e_vc_add_cloud_filter._entry_ptr.229, ptr @i40e_vc_add_cloud_filter._entry_ptr.232, ptr @i40e_vc_add_cloud_filter._entry_ptr.235, ptr @i40e_vc_add_mac_addr_msg._entry, ptr @i40e_vc_add_mac_addr_msg._entry.164, ptr @i40e_vc_add_mac_addr_msg._entry_ptr, ptr @i40e_vc_add_mac_addr_msg._entry_ptr.166, ptr @i40e_vc_add_qch_msg._entry, ptr @i40e_vc_add_qch_msg._entry.202, ptr @i40e_vc_add_qch_msg._entry.205, ptr @i40e_vc_add_qch_msg._entry.208, ptr @i40e_vc_add_qch_msg._entry.211, ptr @i40e_vc_add_qch_msg._entry.214, ptr @i40e_vc_add_qch_msg._entry.217, ptr @i40e_vc_add_qch_msg._entry_ptr, ptr @i40e_vc_add_qch_msg._entry_ptr.204, ptr @i40e_vc_add_qch_msg._entry_ptr.207, ptr @i40e_vc_add_qch_msg._entry_ptr.210, ptr @i40e_vc_add_qch_msg._entry_ptr.213, ptr @i40e_vc_add_qch_msg._entry_ptr.216, ptr @i40e_vc_add_qch_msg._entry_ptr.219, ptr @i40e_vc_add_vlan_msg._entry, ptr @i40e_vc_add_vlan_msg._entry.184, ptr @i40e_vc_add_vlan_msg._entry.187, ptr @i40e_vc_add_vlan_msg._entry_ptr, ptr @i40e_vc_add_vlan_msg._entry_ptr.186, ptr @i40e_vc_add_vlan_msg._entry_ptr.189, ptr @i40e_vc_config_promiscuous_mode_msg._entry, ptr @i40e_vc_config_promiscuous_mode_msg._entry.140, ptr @i40e_vc_config_promiscuous_mode_msg._entry.143, ptr @i40e_vc_config_promiscuous_mode_msg._entry.146, ptr @i40e_vc_config_promiscuous_mode_msg._entry.149, ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr, ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr.142, ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr.145, ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr.148, ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr.151, ptr @i40e_vc_del_cloud_filter._entry, ptr @i40e_vc_del_cloud_filter._entry.270, ptr @i40e_vc_del_cloud_filter._entry.273, ptr @i40e_vc_del_cloud_filter._entry.275, ptr @i40e_vc_del_cloud_filter._entry_ptr, ptr @i40e_vc_del_cloud_filter._entry_ptr.272, ptr @i40e_vc_del_cloud_filter._entry_ptr.274, ptr @i40e_vc_del_cloud_filter._entry_ptr.277, ptr @i40e_vc_del_mac_addr_msg._entry, ptr @i40e_vc_del_mac_addr_msg._entry.180, ptr @i40e_vc_del_mac_addr_msg._entry_ptr, ptr @i40e_vc_del_mac_addr_msg._entry_ptr.181, ptr @i40e_vc_del_qch_msg._entry, ptr @i40e_vc_del_qch_msg._entry.222, ptr @i40e_vc_del_qch_msg._entry_ptr, ptr @i40e_vc_del_qch_msg._entry_ptr.224, ptr @i40e_vc_get_vf_resources_msg._entry, ptr @i40e_vc_get_vf_resources_msg._entry_ptr, ptr @i40e_vc_process_vf_msg._entry, ptr @i40e_vc_process_vf_msg._entry.16, ptr @i40e_vc_process_vf_msg._entry_ptr, ptr @i40e_vc_process_vf_msg._entry_ptr.18, ptr @i40e_vc_request_queues_msg._entry, ptr @i40e_vc_request_queues_msg._entry.194, ptr @i40e_vc_request_queues_msg._entry.197, ptr @i40e_vc_request_queues_msg._entry_ptr, ptr @i40e_vc_request_queues_msg._entry_ptr.196, ptr @i40e_vc_request_queues_msg._entry_ptr.199, ptr @i40e_vc_reset_vf._entry, ptr @i40e_vc_reset_vf._entry_ptr, ptr @i40e_vc_send_msg_to_vf._entry, ptr @i40e_vc_send_msg_to_vf._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.12, ptr @.str.14, ptr @.str.15, ptr @.str.17, ptr @.str.19, ptr @.str.21, ptr @.str.24, ptr @.str.27, ptr @.str.30, ptr @.str.31, ptr @.str.34, ptr @.str.37, ptr @.str.39, ptr @.str.41, ptr @.str.44, ptr @.str.49, ptr @.str.52, ptr @.str.55, ptr @.str.60, ptr @.str.63, ptr @.str.65, ptr @.str.67, ptr @.str.71, ptr @.str.72, ptr @.str.74, ptr @.str.76, ptr @.str.82, ptr @.str.84, ptr @.str.88, ptr @.str.91, ptr @.str.93, ptr @.str.94, ptr @.str.96, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.103, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.110, ptr @.str.113, ptr @.str.118, ptr @.str.120, ptr @.str.121, ptr @.str.123, ptr @.str.126, ptr @.str.129, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.138, ptr @.str.139, ptr @.str.141, ptr @.str.144, ptr @.str.147, ptr @.str.150, ptr @.str.152, ptr @.str.153, ptr @.str.155, ptr @.str.157, ptr @.str.158, ptr @.str.160, ptr @.str.162, ptr @.str.163, ptr @.str.165, ptr @.str.167, ptr @.str.168, ptr @.str.170, ptr @.str.173, ptr @.str.176, ptr @.str.178, ptr @.str.179, ptr @.str.182, ptr @.str.183, ptr @.str.185, ptr @.str.188, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.195, ptr @.str.198, ptr @.str.200, ptr @.str.201, ptr @.str.203, ptr @.str.206, ptr @.str.209, ptr @.str.212, ptr @.str.215, ptr @.str.218, ptr @.str.220, ptr @.str.221, ptr @.str.223, ptr @.str.225, ptr @.str.226, ptr @.str.228, ptr @.str.231, ptr @.str.234, ptr @.str.236, ptr @.str.237, ptr @.str.239, ptr @.str.242, ptr @.str.245, ptr @.str.248, ptr @.str.251, ptr @.str.254, ptr @.str.257, ptr @.str.260, ptr @.str.263, ptr @.str.266, ptr @.str.268, ptr @.str.269, ptr @.str.271, ptr @.str.276, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.282, ptr @.str.288, ptr @.str.289], section "llvm.metadata"
@0 = internal global [251 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_reset_vf._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_reset_all_vfs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_free_vfs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_pci_sriov_configure._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_pci_sriov_configure._entry.11 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_process_vf_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_process_vf_msg._entry.16 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_mac._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_mac._entry.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_mac._entry.23 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_mac._entry.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_mac._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_mac._entry.33 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_mac._entry.36 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.40 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.46 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.48 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.51 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.54 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.57 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.59 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_port_vlan._entry.62 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_bw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_bw._entry.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_bw._entry.69 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_get_vf_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_link_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_link_state._entry.73 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_spoofchk._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_spoofchk._entry.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_spoofchk._entry.79 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_spoofchk._entry.81 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_trust._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_trust._entry.85 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_trust._entry.87 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_trust._entry.90 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_ndo_set_vf_trust._entry.95 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_get_vf_stats._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_trigger_vf_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_trigger_vf_reset._entry.102 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_alloc_vf_res._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_alloc_vsi_res._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_alloc_vsi_res._entry.109 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_alloc_vsi_res._entry.112 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_alloc_vsi_res._entry.115 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_alloc_vsi_res._entry.117 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_pci_sriov_enable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_pci_sriov_enable._entry.122 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_pci_sriov_enable._entry.125 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_pci_sriov_enable._entry.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_send_msg_to_vf._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_get_vf_resources_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_reset_vf._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_config_promiscuous_mode_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_config_promiscuous_mode_msg._entry.140 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_config_promiscuous_mode_msg._entry.143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_config_promiscuous_mode_msg._entry.146 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_config_promiscuous_mode_msg._entry.149 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_config_vsi_rx_queue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_config_vsi_rx_queue._entry.154 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_config_vsi_tx_queue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_config_vsi_tx_queue._entry.159 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_mac_addr_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_mac_addr_msg._entry.164 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_check_vf_permission._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_check_vf_permission._entry.169 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 123, i32 160, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_check_vf_permission._entry.172 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 102, i32 160, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_check_vf_permission._entry.175 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_del_mac_addr_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_del_mac_addr_msg._entry.180 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_vlan_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_vlan_msg._entry.184 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_vlan_msg._entry.187 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_config_iwarp_qvlist._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_request_queues_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_request_queues_msg._entry.194 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_request_queues_msg._entry.197 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_qch_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_qch_msg._entry.202 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_qch_msg._entry.205 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_qch_msg._entry.208 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_qch_msg._entry.211 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_qch_msg._entry.214 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_qch_msg._entry.217 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_del_qch_msg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_del_qch_msg._entry.222 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_cloud_filter._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_cloud_filter._entry.227 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_cloud_filter._entry.230 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_add_cloud_filter._entry.233 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.238 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.241 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.244 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.247 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.250 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.253 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.256 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.259 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.262 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_cloud_filter._entry.265 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_del_cloud_filter._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_del_cloud_filter._entry.270 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_del_cloud_filter._entry.273 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_vc_del_cloud_filter._entry.275 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_validate_vf._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_set_vsi_promisc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_set_vsi_promisc._entry.281 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_set_vsi_promisc._entry.284 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_set_vsi_promisc._entry.286 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_del_all_cloud_filters._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1050 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1050 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1050 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @i40e_del_all_cloud_filters._entry.290 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @i40e_vc_notify_link_state(ptr nocapture noundef readonly %pf) local_unnamed_addr #0 align 64 {
entry:
  %pfe.i = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 86
  %0 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp4 = icmp sgt i32 %1, 0
  br i1 %cmp4, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %vf = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 85
  %2 = getelementptr inbounds i8, ptr %pfe.i, i32 4
  %severity.i = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe.i, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.05 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %3 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %vf, align 8
  %arrayidx = getelementptr %struct.i40e_vf, ptr %4, i32 %i.05
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe.i) #9
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_storeN_noabort(i32 %5, i32 8)
  store i64 -1, ptr %2, align 4
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %hw2.i = getelementptr inbounds %struct.i40e_pf, ptr %7, i32 0, i32 1
  %phy.i = getelementptr inbounds %struct.i40e_pf, ptr %7, i32 0, i32 1, i32 2
  %vf_id.i = getelementptr %struct.i40e_vf, ptr %4, i32 %i.05, i32 1
  %8 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %vf_id.i, align 4
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %7, i32 0, i32 1, i32 15, i32 33
  %10 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vf_base_id.i, align 8
  %12 = ptrtoint ptr %pfe.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %pfe.i, align 4
  %13 = ptrtoint ptr %severity.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %severity.i, align 4
  call fastcc void @i40e_set_vf_link_state(ptr noundef %arrayidx, ptr noundef nonnull %pfe.i, ptr noundef %phy.i) #9
  %14 = trunc i32 %11 to i16
  %conv4.i = add i16 %9, %14
  %call.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw2.i, i16 noundef zeroext %conv4.i, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe.i, i16 noundef zeroext 16, ptr noundef null) #9
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe.i) #9
  %inc = add nuw nsw i32 %i.05, 1
  %15 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %num_alloc_vfs, align 4
  %cmp = icmp slt i32 %inc, %16
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @i40e_vc_notify_vf_link_state(ptr nocapture noundef readonly %vf) unnamed_addr #0 align 64 {
entry:
  %pfe = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe) #9
  %0 = getelementptr inbounds i8, ptr %pfe, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %1, i32 8)
  store i64 -1, ptr %0, align 4
  %2 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vf, align 8
  %hw2 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1
  %phy = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1, i32 2
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %4 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vf_id, align 4
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1, i32 15, i32 33
  %6 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vf_base_id, align 8
  %8 = ptrtoint ptr %pfe to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %pfe, align 4
  %severity = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe, i32 0, i32 2
  %9 = ptrtoint ptr %severity to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %severity, align 4
  call fastcc void @i40e_set_vf_link_state(ptr noundef %vf, ptr noundef nonnull %pfe, ptr noundef %phy)
  %10 = trunc i32 %7 to i16
  %conv4 = add i16 %5, %10
  %call = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw2, i16 noundef zeroext %conv4, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe, i16 noundef zeroext 16, ptr noundef null) #9
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe) #9
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @i40e_vc_notify_reset(ptr noundef %pf) local_unnamed_addr #0 align 64 {
entry:
  %pfe = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe) #9
  %0 = getelementptr inbounds i8, ptr %pfe, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %1, i32 8)
  store i64 -1, ptr %0, align 4
  %2 = ptrtoint ptr %pfe to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2, ptr %pfe, align 4
  %severity = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe, i32 0, i32 2
  %3 = ptrtoint ptr %severity to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 255, ptr %severity, align 4
  %hw1.i = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 1
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 86
  %4 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp3.i = icmp sgt i32 %5, 0
  br i1 %cmp3.i, label %for.body.lr.ph.i, label %entry.i40e_vc_vf_broadcast.exit_crit_edge

entry.i40e_vc_vf_broadcast.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_vf_broadcast.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %vf2.i = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 85
  %6 = ptrtoint ptr %vf2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vf2.i, align 8
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 1, i32 15, i32 33
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %cleanup.i.for.body.i_crit_edge ]
  %vf.04.i = phi ptr [ %7, %for.body.lr.ph.i ], [ %incdec.ptr.i, %cleanup.i.for.body.i_crit_edge ]
  %vf_id.i = getelementptr inbounds %struct.i40e_vf, ptr %vf.04.i, i32 0, i32 1
  %8 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %vf_id.i, align 4
  %10 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vf_base_id.i, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf.04.i, i32 0, i32 16
  %12 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %vf_states.i, align 4
  %and1.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %for.body.i.if.end.i_crit_edge

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %14 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %vf_states.i, align 4
  %16 = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool5.not.i = icmp eq i32 %16, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i.cleanup.i_crit_edge, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i

land.lhs.true.i.cleanup.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %for.body.i.if.end.i_crit_edge
  %17 = trunc i32 %11 to i16
  %conv6.i = add i16 %9, %17
  %call7.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw1.i, i16 noundef zeroext %conv6.i, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe, i16 noundef zeroext 16, ptr noundef null) #9
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end.i, %land.lhs.true.i.cleanup.i_crit_edge
  %inc.i = add nuw nsw i32 %i.05.i, 1
  %incdec.ptr.i = getelementptr %struct.i40e_vf, ptr %vf.04.i, i32 1
  %18 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_alloc_vfs.i, align 4
  %cmp.i = icmp slt i32 %inc.i, %19
  br i1 %cmp.i, label %cleanup.i.for.body.i_crit_edge, label %cleanup.i.i40e_vc_vf_broadcast.exit_crit_edge

cleanup.i.i40e_vc_vf_broadcast.exit_crit_edge:    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_vf_broadcast.exit

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_vc_vf_broadcast.exit:                        ; preds = %cleanup.i.i40e_vc_vf_broadcast.exit_crit_edge, %entry.i40e_vc_vf_broadcast.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @i40e_vc_notify_vf_reset(ptr noundef %vf) local_unnamed_addr #0 align 64 {
entry:
  %pfe = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe) #9
  %0 = getelementptr inbounds i8, ptr %pfe, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %1, i32 8)
  store i64 -1, ptr %0, align 4
  %tobool.not = icmp eq ptr %vf, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %2 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %3 to i32
  %4 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vf, align 8
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %5, i32 0, i32 86
  %6 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %conv)
  %cmp.not = icmp sgt i32 %7, %conv
  br i1 %cmp.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %vf_states = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  %8 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %vf_states, align 4
  %and1.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not, label %land.lhs.true, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %10 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %vf_states, align 4
  %12 = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool5.not = icmp eq i32 %12, 0
  br i1 %tobool5.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end7_crit_edge

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %land.lhs.true.if.end7_crit_edge, %if.end.if.end7_crit_edge
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %5, i32 0, i32 1, i32 15, i32 33
  %13 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vf_base_id, align 8
  %15 = ptrtoint ptr %pfe to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 2, ptr %pfe, align 4
  %severity = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe, i32 0, i32 2
  %16 = ptrtoint ptr %severity to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 255, ptr %severity, align 4
  %hw12 = getelementptr inbounds %struct.i40e_pf, ptr %5, i32 0, i32 1
  %17 = trunc i32 %14 to i16
  %conv13 = add i16 %3, %17
  %call14 = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw12, i16 noundef zeroext %conv13, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe, i16 noundef zeroext 16, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %land.lhs.true.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe) #9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_aq_send_msg_to_vf(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef, ptr noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @i40e_reset_vf(ptr noundef %vf, i1 noundef zeroext %flr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %hw2 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %state = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 2
  %arrayidx.i = getelementptr %struct.i40e_pf, ptr %1, i32 0, i32 2, i32 1
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %arrayidx.i, align 4
  %4 = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  %call5 = tail call i32 @_test_and_set_bit(i32 noundef 27, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end8:                                          ; preds = %if.end
  tail call fastcc void @i40e_trigger_vf_reset(ptr noundef %vf, i1 noundef zeroext %flr)
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %5 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hw2, align 8
  %7 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %vf_id, align 4
  %conv58 = sext i16 %8 to i32
  %mul59 = shl nsw i32 %conv58, 2
  %add60 = add nsw i32 %mul59, 596992
  %add.ptr61 = getelementptr i8, ptr %6, i32 %add60
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr61) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !492
  %10 = and i32 %9, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool12.not62 = icmp eq i32 %10, 0
  br i1 %tobool12.not62, label %if.end8.for.cond_crit_edge, label %if.end8.for.end_crit_edge

if.end8.for.end_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end8.for.cond_crit_edge:                       ; preds = %if.end8
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end8.for.cond_crit_edge
  %i.05663 = phi i32 [ %inc, %for.body.for.cond_crit_edge ], [ 0, %if.end8.for.cond_crit_edge ]
  %inc = add nuw nsw i32 %i.05663, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %inc)
  %exitcond.not = icmp eq i32 %inc, 10
  br i1 %exitcond.not, label %for.cond.for.end.loopexit_crit_edge, label %for.body

for.cond.for.end.loopexit_crit_edge:              ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.loopexit

for.body:                                         ; preds = %for.cond
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %11 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hw2, align 8
  %13 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %14 to i32
  %mul = shl nsw i32 %conv, 2
  %add = add nsw i32 %mul, 596992
  %add.ptr = getelementptr i8, ptr %12, i32 %add
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !492
  %16 = and i32 %15, 16777216
  %tobool12.not = icmp eq i32 %16, 0
  br i1 %tobool12.not, label %for.body.for.cond_crit_edge, label %for.body.for.end.loopexit_crit_edge

for.body.for.end.loopexit_crit_edge:              ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.loopexit

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond

for.end.loopexit:                                 ; preds = %for.body.for.end.loopexit_crit_edge, %for.cond.for.end.loopexit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %i.05663)
  %cmp.le = icmp ult i32 %i.05663, 9
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.end8.for.end_crit_edge
  %cmp.lcssa = phi i1 [ true, %if.end8.for.end_crit_edge ], [ %cmp.le, %for.end.loopexit ]
  br i1 %flr, label %if.then16, label %for.end.if.end17_crit_edge

for.end.if.end17_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then16:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %for.end.if.end17_crit_edge
  br i1 %cmp.lcssa, label %if.end17.if.end22_crit_edge, label %do.end

if.end17.if.end22_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22

do.end:                                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  %19 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %vf_id, align 4
  %conv21 = sext i16 %20 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str, i32 noundef %conv21) #12
  br label %if.end22

if.end22:                                         ; preds = %do.end, %if.end17.if.end22_crit_edge
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %21 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %lan_vsi_idx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %cmp24.not = icmp eq i16 %22, 0
  br i1 %cmp24.not, label %if.end22.if.end28_crit_edge, label %if.then26

if.end22.if.end28_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end28

if.then26:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #11
  %conv23 = zext i16 %22 to i32
  %vsi = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %23 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vsi, align 8
  %arrayidx = getelementptr ptr, ptr %24, i32 %conv23
  %25 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx, align 4
  tail call void @i40e_vsi_stop_rings(ptr noundef %26) #9
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end22.if.end28_crit_edge
  tail call fastcc void @i40e_cleanup_reset_vf(ptr noundef %vf)
  %27 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %hw2, align 8
  %add.ptr32 = getelementptr i8, ptr %28, i32 745772
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr32) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !493
  tail call void @_clear_bit(i32 noundef 27, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i1 true
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @i40e_trigger_vf_reset(ptr noundef %vf, i1 noundef zeroext %flr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %hw2 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %vf_states = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  %call = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %vf_states) #9
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %vf_states) #9
  br i1 %flr, label %entry.if.end47_crit_edge, label %if.then

entry.if.end47_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end47

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp ne i32 %call, 0
  %2 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw2, align 8
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %4 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %5 to i32
  %mul = shl nsw i32 %conv, 2
  %add = add nsw i32 %mul, 180224
  %add.ptr = getelementptr i8, ptr %3, i32 %add
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !494
  %7 = and i32 %6, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool10.not = icmp eq i32 %7, 0
  %or.cond = select i1 %tobool.not, i1 %tobool10.not, i1 false
  br i1 %or.cond, label %if.then11, label %if.then.if.end19_crit_edge

if.then.if.end19_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19

if.then11:                                        ; preds = %if.then
  %8 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %vf_id, align 4
  %conv13 = sext i16 %9 to i32
  %mul.i = shl nsw i32 %conv13, 2
  %add.i = add nsw i32 %mul.i, 180224
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %if.then11
  %i.04.i = phi i32 [ 0, %if.then11 ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %10 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw2, align 8
  %add.ptr.i = getelementptr i8, ptr %11, i32 %add.i
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !495
  %13 = and i32 %12, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end19_crit_edge

for.body.i.if.end19_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 100, i32 noundef 200, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.04.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 100
  br i1 %exitcond.not.i, label %do.end, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

do.end:                                           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  %16 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vf_id, align 4
  %conv18 = sext i16 %17 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.100, i32 noundef %conv18) #12
  br label %if.end19

if.end19:                                         ; preds = %do.end, %for.body.i.if.end19_crit_edge, %if.then.if.end19_crit_edge
  %18 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hw2, align 8
  %20 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vf_id, align 4
  %conv24 = sext i16 %21 to i32
  %mul25 = shl nsw i32 %conv24, 2
  %add26 = add nsw i32 %mul25, 595968
  %add.ptr27 = getelementptr i8, ptr %19, i32 %add26
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr27) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !496
  %23 = or i32 %22, 16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !497
  tail call void @arm_heavy_mb() #9
  %24 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw2, align 8
  %26 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %vf_id, align 4
  %conv36 = sext i16 %27 to i32
  %mul37 = shl nsw i32 %conv36, 2
  %add38 = add nsw i32 %mul37, 595968
  %add.ptr39 = getelementptr i8, ptr %25, i32 %add38
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr39, i32 %23) #9, !srcloc !498
  %28 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hw2, align 8
  %add.ptr43 = getelementptr i8, ptr %29, i32 745772
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr43) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !499
  br label %if.end47

if.end47:                                         ; preds = %if.end19, %entry.if.end47_crit_edge
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 15, i32 33
  %31 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %vf_base_id, align 8
  %vf_id48 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %33 = ptrtoint ptr %vf_id48 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %vf_id48, align 4
  %conv49 = sext i16 %34 to i32
  %add50 = add i32 %32, %conv49
  %rem = and i32 %add50, 31
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !500
  tail call void @arm_heavy_mb() #9
  %shl = shl nuw i32 1, %rem
  %35 = tail call i32 @llvm.bswap.i32(i32 %shl)
  %36 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hw2, align 8
  %38 = lshr i32 %add50, 3
  %mul60 = and i32 %38, 536870908
  %add61 = add nuw nsw i32 %mul60, 599552
  %add.ptr62 = getelementptr i8, ptr %37, i32 %add61
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr62, i32 %35) #9, !srcloc !498
  %39 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw2, align 8
  %add.ptr66 = getelementptr i8, ptr %40, i32 745772
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr66) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !501
  %42 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %vf, align 8
  %hw2.i = getelementptr inbounds %struct.i40e_pf, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %vf_id48 to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %vf_id48, align 4
  %conv.i = sext i16 %45 to i32
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %43, i32 0, i32 1, i32 15, i32 33
  %46 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %vf_base_id.i, align 8
  %add.i104 = add i32 %47, %conv.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !502
  tail call void @arm_heavy_mb() #9
  %shl.i = shl i32 %add.i104, 12
  %or.i = or i32 %shl.i, 170
  %48 = tail call i32 @llvm.bswap.i32(i32 %or.i) #9
  %49 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hw2.i, align 8
  %add.ptr.i105 = getelementptr i8, ptr %50, i32 639104
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i105, i32 %48) #9, !srcloc !498
  br label %for.body.i106

for.body.i106:                                    ; preds = %if.end.i109.for.body.i106_crit_edge, %if.end47
  %i.017.i = phi i32 [ 0, %if.end47 ], [ %inc.i107, %if.end.i109.for.body.i106_crit_edge ]
  %51 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %hw2.i, align 8
  %add.ptr5.i = getelementptr i8, ptr %52, i32 639232
  %53 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !503
  %54 = and i32 %53, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %cmp7.i = icmp eq i32 %54, 0
  br i1 %cmp7.i, label %for.body.i106.if.end80_crit_edge, label %if.end.i109

for.body.i106.if.end80_crit_edge:                 ; preds = %for.body.i106
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end80

if.end.i109:                                      ; preds = %for.body.i106
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %55 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %55(i32 noundef 214748) #9
  %inc.i107 = add nuw nsw i32 %i.017.i, 1
  %exitcond.not.i108 = icmp eq i32 %inc.i107, 100
  br i1 %exitcond.not.i108, label %do.end75, label %if.end.i109.for.body.i106_crit_edge

if.end.i109.for.body.i106_crit_edge:              ; preds = %if.end.i109
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i106

do.end75:                                         ; preds = %if.end.i109
  call void @__sanitizer_cov_trace_pc() #11
  %56 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %1, align 8
  %dev77 = getelementptr inbounds %struct.pci_dev, ptr %57, i32 0, i32 44
  %58 = ptrtoint ptr %vf_id48 to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %vf_id48, align 4
  %conv79 = sext i16 %59 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev77, ptr noundef nonnull @.str.103, i32 noundef %conv79) #12
  br label %if.end80

if.end80:                                         ; preds = %do.end75, %for.body.i106.if.end80_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_vsi_stop_rings(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @i40e_cleanup_reset_vf(ptr noundef %vf) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %hw2 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %lan_vsi_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 11
  %2 = ptrtoint ptr %lan_vsi_id to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %lan_vsi_id, align 8
  %call = tail call fastcc i32 @i40e_config_vf_promiscuous_mode(ptr noundef %vf, i16 noundef zeroext %3, i1 noundef zeroext false, i1 noundef zeroext false)
  tail call fastcc void @i40e_free_vf_res(ptr noundef %vf)
  %4 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw2, align 8
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %6 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %7 to i32
  %mul = shl nsw i32 %conv, 2
  %add = add nsw i32 %mul, 595968
  %add.ptr = getelementptr i8, ptr %5, i32 %add
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !504
  %9 = and i32 %8, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !505
  tail call void @arm_heavy_mb() #9
  %10 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw2, align 8
  %12 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id, align 4
  %conv7 = sext i16 %13 to i32
  %mul8 = shl nsw i32 %conv7, 2
  %add9 = add nsw i32 %mul8, 595968
  %add.ptr10 = getelementptr i8, ptr %11, i32 %add9
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr10, i32 %9) #9, !srcloc !498
  %14 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vf, align 8
  %num_req_queues.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 13
  %16 = ptrtoint ptr %num_req_queues.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %num_req_queues.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.i = icmp eq i8 %17, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.lhs.true.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %conv.i = zext i8 %17 to i32
  %queues_left.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 16
  %18 = ptrtoint ptr %queues_left.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %queues_left.i, align 8
  %add.i = add i32 %19, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i)
  %cmp.not.i = icmp slt i32 %add.i, %conv.i
  %conv6.i = zext i8 %17 to i16
  %spec.select.i = select i1 %cmp.not.i, i16 4, i16 %conv6.i
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i, %entry.if.end.i_crit_edge
  %.sink.i = phi i16 [ 4, %entry.if.end.i_crit_edge ], [ %spec.select.i, %land.lhs.true.i ]
  %num_vf_qps7.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 10
  %20 = ptrtoint ptr %num_vf_qps7.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %.sink.i, ptr %num_vf_qps7.i, align 8
  %call.i = tail call fastcc i32 @i40e_alloc_vsi_res(ptr noundef %vf, i8 noundef zeroext 0) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.not.i, label %if.end10.i, label %if.end.i.i40e_alloc_vf_res.exit_crit_edge

if.end.i.i40e_alloc_vf_res.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_alloc_vf_res.exit

if.end10.i:                                       ; preds = %if.end.i
  %vsi.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 74
  %21 = ptrtoint ptr %vsi.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vsi.i, align 8
  %lan_vsi_idx.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %23 = ptrtoint ptr %lan_vsi_idx.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %lan_vsi_idx.i, align 2
  %idxprom.i = zext i16 %24 to i32
  %arrayidx.i = getelementptr ptr, ptr %22, i32 %idxprom.i
  %25 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx.i, align 4
  %alloc_queue_pairs.i = getelementptr inbounds %struct.i40e_vsi, ptr %26, i32 0, i32 42
  %27 = ptrtoint ptr %alloc_queue_pairs.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %alloc_queue_pairs.i, align 2
  %adq_enabled.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %29 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool13.not.i = icmp eq i8 %30, 0
  br i1 %tobool13.not.i, label %if.end10.i.if.end31.i_crit_edge, label %if.then14.i

if.end10.i.if.end31.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31.i

if.then14.i:                                      ; preds = %if.end10.i
  %queues_left15.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 16
  %31 = ptrtoint ptr %queues_left15.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %queues_left15.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %32)
  %cmp16.i = icmp sgt i32 %32, 11
  br i1 %cmp16.i, label %for.cond.preheader.i, label %do.end.i

for.cond.preheader.i:                             ; preds = %if.then14.i
  %num_tc.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %33 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %num_tc.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %34)
  %cmp2087.i = icmp ugt i8 %34, 1
  br i1 %cmp2087.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.if.then34.i_crit_edge

for.cond.preheader.i.if.then34.i_crit_edge:       ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then34.i

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %idx.088.i, 1
  %35 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %num_tc.i, align 1
  %conv19.i = zext i8 %36 to i32
  %cmp20.i = icmp ult i32 %inc.i, %conv19.i
  br i1 %cmp20.i, label %for.cond.i.for.body.i_crit_edge, label %for.cond.i.if.then34.i_crit_edge

for.cond.i.if.then34.i_crit_edge:                 ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then34.i

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %idx.088.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 1, %for.cond.preheader.i.for.body.i_crit_edge ]
  %conv22.i = trunc i32 %idx.088.i to i8
  %call23.i = tail call fastcc i32 @i40e_alloc_vsi_res(ptr noundef %vf, i8 noundef zeroext %conv22.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %tobool24.not.i = icmp eq i32 %call23.i, 0
  br i1 %tobool24.not.i, label %for.cond.i, label %for.body.i.i40e_alloc_vf_res.exit_crit_edge

for.body.i.i40e_alloc_vf_res.exit_crit_edge:      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_alloc_vf_res.exit

do.end.i:                                         ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #11
  %37 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %15, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %38, i32 0, i32 44
  %39 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %vf_id, align 4
  %conv28.i = sext i16 %40 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.105, i32 noundef %conv28.i) #12
  %41 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 0, ptr %adq_enabled.i, align 2
  br label %if.end31.i

if.end31.i:                                       ; preds = %do.end.i, %if.end10.i.if.end31.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %28)
  %cmp32.i = icmp ugt i16 %28, 4
  %extract.t85.i = trunc i16 %28 to i8
  br i1 %cmp32.i, label %if.end31.i.if.then34.i_crit_edge, label %if.end31.i.if.end37.i_crit_edge

if.end31.i.if.end37.i_crit_edge:                  ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37.i

if.end31.i.if.then34.i_crit_edge:                 ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then34.i

if.then34.i:                                      ; preds = %if.end31.i.if.then34.i_crit_edge, %for.cond.i.if.then34.i_crit_edge, %for.cond.preheader.i.if.then34.i_crit_edge
  %total_queue_pairs.0.shrunk79.i = phi i16 [ %28, %if.end31.i.if.then34.i_crit_edge ], [ 16, %for.cond.preheader.i.if.then34.i_crit_edge ], [ 16, %for.cond.i.if.then34.i_crit_edge ]
  %total_queue_pairs.0.i = zext i16 %total_queue_pairs.0.shrunk79.i to i32
  %queues_left35.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 16
  %42 = ptrtoint ptr %queues_left35.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %queues_left35.i, align 8
  %sub.neg.i = sub nsw i32 4, %total_queue_pairs.0.i
  %sub36.i = add i32 %sub.neg.i, %43
  store i32 %sub36.i, ptr %queues_left35.i, align 8
  %extract.t.i = trunc i16 %total_queue_pairs.0.shrunk79.i to i8
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.then34.i, %if.end31.i.if.end37.i_crit_edge
  %total_queue_pairs.0.shrunk80.off0.i = phi i8 [ %extract.t.i, %if.then34.i ], [ %extract.t85.i, %if.end31.i.if.end37.i_crit_edge ]
  %trusted.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 9
  %44 = ptrtoint ptr %trusted.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %trusted.i, align 1, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool38.not.i = icmp eq i8 %45, 0
  %vf_caps41.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 15
  br i1 %tobool38.not.i, label %if.else40.i, label %if.then39.i

if.then39.i:                                      ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 0, ptr noundef %vf_caps41.i) #9
  br label %if.then

if.else40.i:                                      ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %vf_caps41.i) #9
  br label %if.then

i40e_alloc_vf_res.exit:                           ; preds = %for.body.i.i40e_alloc_vf_res.exit_crit_edge, %if.end.i.i40e_alloc_vf_res.exit_crit_edge
  tail call fastcc void @i40e_free_vf_res(ptr noundef %vf) #9
  br label %do.body21

if.then:                                          ; preds = %if.else40.i, %if.then39.i
  %num_queue_pairs.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 12
  %46 = ptrtoint ptr %num_queue_pairs.i to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %total_queue_pairs.0.shrunk80.off0.i, ptr %num_queue_pairs.i, align 2
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  tail call void @_set_bit(i32 noundef 0, ptr noundef %vf_states.i) #9
  %47 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %vf_id, align 4
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 15, i32 33
  %49 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %vf_base_id, align 8
  %51 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %vf, align 8
  %hw2.i = getelementptr inbounds %struct.i40e_pf, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %lan_vsi_id to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %lan_vsi_id, align 8
  %conv.i48 = zext i16 %54 to i32
  %mul.i = shl nuw nsw i32 %conv.i48, 2
  %add.i49 = add nuw nsw i32 %mul.i, 2148352
  tail call void @i40e_write_rx_ctl(ptr noundef %hw2.i, i32 noundef %add.i49, i32 noundef 2048) #9
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !507
  tail call void @arm_heavy_mb() #9
  %55 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %hw2.i, align 8
  %57 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %vf_id, align 4
  %conv3.i = sext i16 %58 to i32
  %mul4.i = shl nsw i32 %conv3.i, 2
  %add5.i = add nsw i32 %mul4.i, 475136
  %add.ptr.i = getelementptr i8, ptr %56, i32 %add5.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 16777216) #9, !srcloc !498
  %59 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %vf, align 8
  %hw2.i.i = getelementptr inbounds %struct.i40e_pf, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %tobool.not.i.i = icmp eq i8 %62, 0
  br i1 %tobool.not.i.i, label %if.then.for.body.lr.ph.i.i_crit_edge, label %if.end.i.i

if.then.for.body.lr.ph.i.i_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.lr.ph.i.i

if.end.i.i:                                       ; preds = %if.then
  %num_tc3.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %63 = ptrtoint ptr %num_tc3.i.i to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %num_tc3.i.i, align 1
  %conv.i.i = zext i8 %64 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %64)
  %cmp48.not.i.i = icmp eq i8 %64, 0
  br i1 %cmp48.not.i.i, label %if.end.i.i.i40e_map_pf_to_vf_queues.exit.i_crit_edge, label %if.end.i.i.for.body.lr.ph.i.i_crit_edge

if.end.i.i.for.body.lr.ph.i.i_crit_edge:          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.lr.ph.i.i

if.end.i.i.i40e_map_pf_to_vf_queues.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_map_pf_to_vf_queues.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.end.i.i.for.body.lr.ph.i.i_crit_edge, %if.then.for.body.lr.ph.i.i_crit_edge
  %num_tc.055.i.i = phi i32 [ %conv.i.i, %if.end.i.i.for.body.lr.ph.i.i_crit_edge ], [ 1, %if.then.for.body.lr.ph.i.i_crit_edge ]
  %vsi.i.i = getelementptr inbounds %struct.i40e_pf, ptr %60, i32 0, i32 74
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc25.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.050.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc26.i.i, %for.inc25.i.i.for.body.i.i_crit_edge ]
  %total_qps.049.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %total_qps.1.lcssa.i.i, %for.inc25.i.i.for.body.i.i_crit_edge ]
  %65 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %66)
  %tobool6.not.i.i = icmp eq i8 %66, 0
  br i1 %tobool6.not.i.i, label %if.else.i.i, label %if.then7.i.i

if.then7.i.i:                                     ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %num_qps.i.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.050.i.i, i32 2
  %vsi_id11.i.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.050.i.i, i32 1
  br label %if.end14.i.i

if.else.i.i:                                      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %67 = ptrtoint ptr %vsi.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %vsi.i.i, align 8
  %69 = ptrtoint ptr %lan_vsi_idx.i to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %lan_vsi_idx.i, align 2
  %idxprom.i.i = zext i16 %70 to i32
  %arrayidx12.i.i = getelementptr ptr, ptr %68, i32 %idxprom.i.i
  %71 = ptrtoint ptr %arrayidx12.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx12.i.i, align 4
  %alloc_queue_pairs.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %72, i32 0, i32 42
  br label %if.end14.i.i

if.end14.i.i:                                     ; preds = %if.else.i.i, %if.then7.i.i
  %qps.0.in.in.i.i = phi ptr [ %num_qps.i.i, %if.then7.i.i ], [ %alloc_queue_pairs.i.i, %if.else.i.i ]
  %vsi_id.0.in.i.i = phi ptr [ %vsi_id11.i.i, %if.then7.i.i ], [ %lan_vsi_id, %if.else.i.i ]
  %73 = ptrtoint ptr %vsi_id.0.in.i.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %vsi_id.0.i.i = load i16, ptr %vsi_id.0.in.i.i, align 2
  %74 = ptrtoint ptr %qps.0.in.in.i.i to i32
  call void @__asan_load2_noabort(i32 %74)
  %qps.0.in.i.i = load i16, ptr %qps.0.in.in.i.i, align 2
  %qps.0.i.i = zext i16 %qps.0.in.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %qps.0.in.i.i)
  %cmp1644.not.i.i = icmp eq i16 %qps.0.in.i.i, 0
  br i1 %cmp1644.not.i.i, label %if.end14.i.i.for.inc25.i.i_crit_edge, label %if.end14.i.i.for.body18.i.i_crit_edge

if.end14.i.i.for.body18.i.i_crit_edge:            ; preds = %if.end14.i.i
  br label %for.body18.i.i

if.end14.i.i.for.inc25.i.i_crit_edge:             ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc25.i.i

for.body18.i.i:                                   ; preds = %i40e_vc_get_pf_queue_id.exit.i.i.for.body18.i.i_crit_edge, %if.end14.i.i.for.body18.i.i_crit_edge
  %j.046.i.i = phi i32 [ %inc24.i.i, %i40e_vc_get_pf_queue_id.exit.i.i.for.body18.i.i_crit_edge ], [ 0, %if.end14.i.i.for.body18.i.i_crit_edge ]
  %total_qps.145.i.i = phi i32 [ %inc.i.i, %i40e_vc_get_pf_queue_id.exit.i.i.for.body18.i.i_crit_edge ], [ %total_qps.049.i.i, %if.end14.i.i.for.body18.i.i_crit_edge ]
  %75 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %vf, align 8
  %call.i.i.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %76, i16 noundef zeroext %vsi_id.0.i.i) #9
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %for.body18.i.i.i40e_vc_get_pf_queue_id.exit.i.i_crit_edge, label %if.end.i.i.i

for.body18.i.i.i40e_vc_get_pf_queue_id.exit.i.i_crit_edge: ; preds = %for.body18.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_get_pf_queue_id.exit.i.i

if.end.i.i.i:                                     ; preds = %for.body18.i.i
  %mapping_flags.i.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i.i, i32 0, i32 51, i32 14
  %77 = ptrtoint ptr %mapping_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %mapping_flags.i.i.i, align 4
  %79 = and i16 %78, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %79)
  %tobool2.not.i.i.i = icmp eq i16 %79, 0
  br i1 %tobool2.not.i.i.i, label %if.else.i.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %idxprom.i.i.i = and i32 %j.046.i.i, 255
  %arrayidx.i.i.i = getelementptr %struct.i40e_vsi, ptr %call.i.i.i, i32 0, i32 51, i32 15, i32 %idxprom.i.i.i
  %80 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %arrayidx.i.i.i, align 2
  %82 = tail call i16 @llvm.bswap.i16(i16 %81) #9
  br label %i40e_vc_get_pf_queue_id.exit.i.i

if.else.i.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %queue_mapping6.i.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i.i, i32 0, i32 51, i32 15
  %83 = ptrtoint ptr %queue_mapping6.i.i.i to i32
  call void @__asan_load2_noabort(i32 %83)
  %84 = load i16, ptr %queue_mapping6.i.i.i, align 2
  %85 = tail call i16 @llvm.bswap.i16(i16 %84) #9
  %86 = trunc i32 %j.046.i.i to i16
  %conv9.i.i.i = and i16 %86, 255
  %add.i.i.i = add i16 %85, %conv9.i.i.i
  br label %i40e_vc_get_pf_queue_id.exit.i.i

i40e_vc_get_pf_queue_id.exit.i.i:                 ; preds = %if.else.i.i.i, %if.then3.i.i.i, %for.body18.i.i.i40e_vc_get_pf_queue_id.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i16 [ 2047, %for.body18.i.i.i40e_vc_get_pf_queue_id.exit.i.i_crit_edge ], [ %82, %if.then3.i.i.i ], [ %add.i.i.i, %if.else.i.i.i ]
  %87 = and i16 %retval.0.i.i.i, 2047
  %and.i.i = zext i16 %87 to i32
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !508
  tail call void @arm_heavy_mb() #9
  %88 = tail call i32 @llvm.bswap.i32(i32 %and.i.i) #9
  %89 = ptrtoint ptr %hw2.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %hw2.i.i, align 8
  %mul.i.i = shl i32 %total_qps.145.i.i, 10
  %91 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %91)
  %92 = load i16, ptr %vf_id, align 4
  %conv21.i.i = sext i16 %92 to i32
  %mul22.i.i = shl nsw i32 %conv21.i.i, 2
  %add.i.i = add i32 %mul.i.i, 458752
  %add23.i.i = add i32 %add.i.i, %mul22.i.i
  %add.ptr.i.i = getelementptr i8, ptr %90, i32 %add23.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %88) #9, !srcloc !498
  %inc.i.i = add i32 %total_qps.145.i.i, 1
  %inc24.i.i = add nuw nsw i32 %j.046.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc24.i.i, %qps.0.i.i
  br i1 %exitcond.not.i.i, label %i40e_vc_get_pf_queue_id.exit.i.i.for.inc25.i.i_crit_edge, label %i40e_vc_get_pf_queue_id.exit.i.i.for.body18.i.i_crit_edge

i40e_vc_get_pf_queue_id.exit.i.i.for.body18.i.i_crit_edge: ; preds = %i40e_vc_get_pf_queue_id.exit.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body18.i.i

i40e_vc_get_pf_queue_id.exit.i.i.for.inc25.i.i_crit_edge: ; preds = %i40e_vc_get_pf_queue_id.exit.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc25.i.i

for.inc25.i.i:                                    ; preds = %i40e_vc_get_pf_queue_id.exit.i.i.for.inc25.i.i_crit_edge, %if.end14.i.i.for.inc25.i.i_crit_edge
  %total_qps.1.lcssa.i.i = phi i32 [ %total_qps.049.i.i, %if.end14.i.i.for.inc25.i.i_crit_edge ], [ %inc.i.i, %i40e_vc_get_pf_queue_id.exit.i.i.for.inc25.i.i_crit_edge ]
  %inc26.i.i = add nuw nsw i32 %i.050.i.i, 1
  %exitcond52.not.i.i = icmp eq i32 %inc26.i.i, %num_tc.055.i.i
  br i1 %exitcond52.not.i.i, label %for.inc25.i.i.i40e_map_pf_to_vf_queues.exit.i_crit_edge, label %for.inc25.i.i.for.body.i.i_crit_edge

for.inc25.i.i.for.body.i.i_crit_edge:             ; preds = %for.inc25.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i.i

for.inc25.i.i.i40e_map_pf_to_vf_queues.exit.i_crit_edge: ; preds = %for.inc25.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_map_pf_to_vf_queues.exit.i

i40e_map_pf_to_vf_queues.exit.i:                  ; preds = %for.inc25.i.i.i40e_map_pf_to_vf_queues.exit.i_crit_edge, %if.end.i.i.i40e_map_pf_to_vf_queues.exit.i_crit_edge
  %93 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %vf, align 8
  %hw2.i15.i = getelementptr inbounds %struct.i40e_pf, ptr %94, i32 0, i32 1
  %95 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %96)
  %tobool.not.i17.i = icmp eq i8 %96, 0
  br i1 %tobool.not.i17.i, label %i40e_map_pf_to_vf_queues.exit.i.for.body.lr.ph.i24.i_crit_edge, label %if.end.i20.i

i40e_map_pf_to_vf_queues.exit.i.for.body.lr.ph.i24.i_crit_edge: ; preds = %i40e_map_pf_to_vf_queues.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.lr.ph.i24.i

if.end.i20.i:                                     ; preds = %i40e_map_pf_to_vf_queues.exit.i
  %num_tc3.i18.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %97 = ptrtoint ptr %num_tc3.i18.i to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load i8, ptr %num_tc3.i18.i, align 1
  %conv.i19.i = zext i8 %98 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %98)
  %cmp75.not.i.i = icmp eq i8 %98, 0
  br i1 %cmp75.not.i.i, label %if.end.i20.i.i40e_enable_vf_mappings.exit_crit_edge, label %if.end.i20.i.for.body.lr.ph.i24.i_crit_edge

if.end.i20.i.for.body.lr.ph.i24.i_crit_edge:      ; preds = %if.end.i20.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.lr.ph.i24.i

if.end.i20.i.i40e_enable_vf_mappings.exit_crit_edge: ; preds = %if.end.i20.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_enable_vf_mappings.exit

for.body.lr.ph.i24.i:                             ; preds = %if.end.i20.i.for.body.lr.ph.i24.i_crit_edge, %i40e_map_pf_to_vf_queues.exit.i.for.body.lr.ph.i24.i_crit_edge
  %num_tc.081.i.i = phi i32 [ %conv.i19.i, %if.end.i20.i.for.body.lr.ph.i24.i_crit_edge ], [ 1, %i40e_map_pf_to_vf_queues.exit.i.for.body.lr.ph.i24.i_crit_edge ]
  %vsi.i21.i = getelementptr inbounds %struct.i40e_pf, ptr %94, i32 0, i32 74
  br label %for.body.i26.i

for.body.i26.i:                                   ; preds = %for.inc35.i.i.for.body.i26.i_crit_edge, %for.body.lr.ph.i24.i
  %i.076.i.i = phi i32 [ 0, %for.body.lr.ph.i24.i ], [ %inc36.i.i, %for.inc35.i.i.for.body.i26.i_crit_edge ]
  %99 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %100)
  %tobool6.not.i25.i = icmp eq i8 %100, 0
  br i1 %tobool6.not.i25.i, label %if.else.i31.i, label %if.then7.i28.i

if.then7.i28.i:                                   ; preds = %for.body.i26.i
  call void @__sanitizer_cov_trace_pc() #11
  %num_qps.i27.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.076.i.i, i32 2
  %vsi_id10.i.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.076.i.i, i32 1
  br label %if.end12.i.i

if.else.i31.i:                                    ; preds = %for.body.i26.i
  call void @__sanitizer_cov_trace_pc() #11
  %101 = ptrtoint ptr %vsi.i21.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %vsi.i21.i, align 8
  %103 = ptrtoint ptr %lan_vsi_idx.i to i32
  call void @__asan_load2_noabort(i32 %103)
  %104 = load i16, ptr %lan_vsi_idx.i, align 2
  %idxprom.i29.i = zext i16 %104 to i32
  %arrayidx11.i.i = getelementptr ptr, ptr %102, i32 %idxprom.i29.i
  %105 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %arrayidx11.i.i, align 4
  %alloc_queue_pairs.i30.i = getelementptr inbounds %struct.i40e_vsi, ptr %106, i32 0, i32 42
  br label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.else.i31.i, %if.then7.i28.i
  %vsi_id.0.in.i32.i = phi ptr [ %vsi_id10.i.i, %if.then7.i28.i ], [ %lan_vsi_id, %if.else.i31.i ]
  %qps.0.in.i33.i = phi ptr [ %num_qps.i27.i, %if.then7.i28.i ], [ %alloc_queue_pairs.i30.i, %if.else.i31.i ]
  %107 = ptrtoint ptr %qps.0.in.i33.i to i32
  call void @__asan_load2_noabort(i32 %107)
  %qps.0.i34.i = load i16, ptr %qps.0.in.i33.i, align 2
  %108 = ptrtoint ptr %vsi_id.0.in.i32.i to i32
  call void @__asan_load2_noabort(i32 %108)
  %vsi_id.0.i35.i = load i16, ptr %vsi_id.0.in.i32.i, align 2
  %conv17.i.i = zext i16 %qps.0.i34.i to i32
  %conv31.i.i = zext i16 %vsi_id.0.i35.i to i32
  %mul32.i.i = shl nuw nsw i32 %conv31.i.i, 2
  %add33.i.i = or i32 %mul32.i.i, 2097152
  br label %for.body16.i.i

for.body16.i.i:                                   ; preds = %if.end29.i.i.for.body16.i.i_crit_edge, %if.end12.i.i
  %j.074.i.i = phi i32 [ 0, %if.end12.i.i ], [ %inc.i50.i, %if.end29.i.i.for.body16.i.i_crit_edge ]
  %mul.i36.i = shl nuw i32 %j.074.i.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i36.i, i32 %conv17.i.i)
  %cmp18.not.i.i = icmp ult i32 %mul.i36.i, %conv17.i.i
  br i1 %cmp18.not.i.i, label %if.else21.i.i, label %for.body16.i.i.if.end29.i.i_crit_edge

for.body16.i.i.if.end29.i.i_crit_edge:            ; preds = %for.body16.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end29.i.i

if.else21.i.i:                                    ; preds = %for.body16.i.i
  %conv23.i.i = trunc i32 %mul.i36.i to i8
  %109 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %vf, align 8
  %call.i.i37.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %110, i16 noundef zeroext %vsi_id.0.i35.i) #9
  %tobool.not.i.i38.i = icmp eq ptr %call.i.i37.i, null
  br i1 %tobool.not.i.i38.i, label %if.else21.i.i.i40e_vc_get_pf_queue_id.exit.i49.i_crit_edge, label %if.end.i.i41.i

if.else21.i.i.i40e_vc_get_pf_queue_id.exit.i49.i_crit_edge: ; preds = %if.else21.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_get_pf_queue_id.exit.i49.i

if.end.i.i41.i:                                   ; preds = %if.else21.i.i
  %mapping_flags.i.i39.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i37.i, i32 0, i32 51, i32 14
  %111 = ptrtoint ptr %mapping_flags.i.i39.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %mapping_flags.i.i39.i, align 4
  %113 = and i16 %112, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %113)
  %tobool2.not.i.i40.i = icmp eq i16 %113, 0
  br i1 %tobool2.not.i.i40.i, label %if.else.i.i47.i, label %if.then3.i.i43.i

if.then3.i.i43.i:                                 ; preds = %if.end.i.i41.i
  call void @__sanitizer_cov_trace_pc() #11
  %arrayidx.i.i42.i = getelementptr %struct.i40e_vsi, ptr %call.i.i37.i, i32 0, i32 51, i32 15, i32 %mul.i36.i
  %114 = ptrtoint ptr %arrayidx.i.i42.i to i32
  call void @__asan_load2_noabort(i32 %114)
  %115 = load i16, ptr %arrayidx.i.i42.i, align 2
  %116 = tail call i16 @llvm.bswap.i16(i16 %115) #9
  br label %i40e_vc_get_pf_queue_id.exit.i49.i

if.else.i.i47.i:                                  ; preds = %if.end.i.i41.i
  call void @__sanitizer_cov_trace_pc() #11
  %queue_mapping6.i.i44.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i37.i, i32 0, i32 51, i32 15
  %117 = ptrtoint ptr %queue_mapping6.i.i44.i to i32
  call void @__asan_load2_noabort(i32 %117)
  %118 = load i16, ptr %queue_mapping6.i.i44.i, align 2
  %119 = tail call i16 @llvm.bswap.i16(i16 %118) #9
  %120 = trunc i32 %mul.i36.i to i16
  %conv9.i.i45.i = and i16 %120, 254
  %add.i.i46.i = add i16 %119, %conv9.i.i45.i
  br label %i40e_vc_get_pf_queue_id.exit.i49.i

i40e_vc_get_pf_queue_id.exit.i49.i:               ; preds = %if.else.i.i47.i, %if.then3.i.i43.i, %if.else21.i.i.i40e_vc_get_pf_queue_id.exit.i49.i_crit_edge
  %retval.0.i.i48.i = phi i16 [ 2047, %if.else21.i.i.i40e_vc_get_pf_queue_id.exit.i49.i_crit_edge ], [ %116, %if.then3.i.i43.i ], [ %add.i.i46.i, %if.else.i.i47.i ]
  %conv24.i.i = zext i16 %retval.0.i.i48.i to i32
  %conv26.i.i = or i8 %conv23.i.i, 1
  %121 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %vf, align 8
  %call.i60.i.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %122, i16 noundef zeroext %vsi_id.0.i35.i) #9
  %tobool.not.i61.i.i = icmp eq ptr %call.i60.i.i, null
  br i1 %tobool.not.i61.i.i, label %i40e_vc_get_pf_queue_id.exit.i49.i.i40e_vc_get_pf_queue_id.exit73.i.i_crit_edge, label %if.end.i64.i.i

i40e_vc_get_pf_queue_id.exit.i49.i.i40e_vc_get_pf_queue_id.exit73.i.i_crit_edge: ; preds = %i40e_vc_get_pf_queue_id.exit.i49.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_get_pf_queue_id.exit73.i.i

if.end.i64.i.i:                                   ; preds = %i40e_vc_get_pf_queue_id.exit.i49.i
  %mapping_flags.i62.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i60.i.i, i32 0, i32 51, i32 14
  %123 = ptrtoint ptr %mapping_flags.i62.i.i to i32
  call void @__asan_load2_noabort(i32 %123)
  %124 = load i16, ptr %mapping_flags.i62.i.i, align 4
  %125 = and i16 %124, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %125)
  %tobool2.not.i63.i.i = icmp eq i16 %125, 0
  br i1 %tobool2.not.i63.i.i, label %if.else.i71.i.i, label %if.then3.i67.i.i

if.then3.i67.i.i:                                 ; preds = %if.end.i64.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %idxprom.i65.i.i = zext i8 %conv26.i.i to i32
  %arrayidx.i66.i.i = getelementptr %struct.i40e_vsi, ptr %call.i60.i.i, i32 0, i32 51, i32 15, i32 %idxprom.i65.i.i
  %126 = ptrtoint ptr %arrayidx.i66.i.i to i32
  call void @__asan_load2_noabort(i32 %126)
  %127 = load i16, ptr %arrayidx.i66.i.i, align 2
  %128 = tail call i16 @llvm.bswap.i16(i16 %127) #9
  br label %i40e_vc_get_pf_queue_id.exit73.i.i

if.else.i71.i.i:                                  ; preds = %if.end.i64.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %queue_mapping6.i68.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i60.i.i, i32 0, i32 51, i32 15
  %129 = ptrtoint ptr %queue_mapping6.i68.i.i to i32
  call void @__asan_load2_noabort(i32 %129)
  %130 = load i16, ptr %queue_mapping6.i68.i.i, align 2
  %131 = tail call i16 @llvm.bswap.i16(i16 %130) #9
  %conv9.i69.i.i = zext i8 %conv26.i.i to i16
  %add.i70.i.i = add i16 %131, %conv9.i69.i.i
  br label %i40e_vc_get_pf_queue_id.exit73.i.i

i40e_vc_get_pf_queue_id.exit73.i.i:               ; preds = %if.else.i71.i.i, %if.then3.i67.i.i, %i40e_vc_get_pf_queue_id.exit.i49.i.i40e_vc_get_pf_queue_id.exit73.i.i_crit_edge
  %retval.0.i72.i.i = phi i16 [ 2047, %i40e_vc_get_pf_queue_id.exit.i49.i.i40e_vc_get_pf_queue_id.exit73.i.i_crit_edge ], [ %128, %if.then3.i67.i.i ], [ %add.i70.i.i, %if.else.i71.i.i ]
  %conv28.i.i = zext i16 %retval.0.i72.i.i to i32
  %shl.i.i = shl nuw i32 %conv28.i.i, 16
  %or.i.i = or i32 %shl.i.i, %conv24.i.i
  br label %if.end29.i.i

if.end29.i.i:                                     ; preds = %i40e_vc_get_pf_queue_id.exit73.i.i, %for.body16.i.i.if.end29.i.i_crit_edge
  %reg.0.i.i = phi i32 [ %or.i.i, %i40e_vc_get_pf_queue_id.exit73.i.i ], [ 134154239, %for.body16.i.i.if.end29.i.i_crit_edge ]
  %mul30.i.i = shl i32 %j.074.i.i, 11
  %add34.i.i = add nuw nsw i32 %add33.i.i, %mul30.i.i
  tail call void @i40e_write_rx_ctl(ptr noundef %hw2.i15.i, i32 noundef %add34.i.i, i32 noundef %reg.0.i.i) #9
  %inc.i50.i = add nuw nsw i32 %j.074.i.i, 1
  %exitcond.not.i51.i = icmp eq i32 %inc.i50.i, 7
  br i1 %exitcond.not.i51.i, label %for.inc35.i.i, label %if.end29.i.i.for.body16.i.i_crit_edge

if.end29.i.i.for.body16.i.i_crit_edge:            ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body16.i.i

for.inc35.i.i:                                    ; preds = %if.end29.i.i
  %inc36.i.i = add nuw nsw i32 %i.076.i.i, 1
  %exitcond78.not.i.i = icmp eq i32 %inc36.i.i, %num_tc.081.i.i
  br i1 %exitcond78.not.i.i, label %for.inc35.i.i.i40e_enable_vf_mappings.exit_crit_edge, label %for.inc35.i.i.for.body.i26.i_crit_edge

for.inc35.i.i.for.body.i26.i_crit_edge:           ; preds = %for.inc35.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i26.i

for.inc35.i.i.i40e_enable_vf_mappings.exit_crit_edge: ; preds = %for.inc35.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_enable_vf_mappings.exit

i40e_enable_vf_mappings.exit:                     ; preds = %for.inc35.i.i.i40e_enable_vf_mappings.exit_crit_edge, %if.end.i20.i.i40e_enable_vf_mappings.exit_crit_edge
  %132 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %hw2.i, align 8
  %add.ptr7.i = getelementptr i8, ptr %133, i32 745772
  %134 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr7.i) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !509
  tail call void @_set_bit(i32 noundef 1, ptr noundef %vf_states.i) #9
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %vf_states.i) #9
  %call17 = tail call i32 @_test_and_clear_bit(i32 noundef 6, ptr noundef %vf_states.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.then19, label %i40e_enable_vf_mappings.exit.if.end_crit_edge

i40e_enable_vf_mappings.exit.if.end_crit_edge:    ; preds = %i40e_enable_vf_mappings.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.then19:                                        ; preds = %i40e_enable_vf_mappings.exit
  call void @__sanitizer_cov_trace_pc() #11
  %conv13 = sext i16 %48 to i32
  %add14 = add i32 %50, %conv13
  tail call void @i40e_notify_client_of_vf_reset(ptr noundef %1, i32 noundef %add14) #9
  br label %if.end

if.end:                                           ; preds = %if.then19, %i40e_enable_vf_mappings.exit.if.end_crit_edge
  %num_vlan = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 21
  %135 = ptrtoint ptr %num_vlan to i32
  call void @__asan_store2_noabort(i32 %135)
  store i16 0, ptr %num_vlan, align 8
  br label %do.body21

do.body21:                                        ; preds = %if.end, %i40e_alloc_vf_res.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !510
  tail call void @arm_heavy_mb() #9
  %136 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %hw2, align 8
  %138 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %138)
  %139 = load i16, ptr %vf_id, align 4
  %conv26 = sext i16 %139 to i32
  %mul27 = shl nsw i32 %conv26, 2
  %add28 = add nsw i32 %mul27, 476160
  %add.ptr29 = getelementptr i8, ptr %137, i32 %add28
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr29, i32 33554432) #9, !srcloc !498
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @i40e_reset_all_vfs(ptr noundef %pf, i1 noundef zeroext %flr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 1
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 86
  %0 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 2
  %call = tail call i32 @_test_and_set_bit(i32 noundef 27, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %for.cond.preheader, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end
  %2 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp150 = icmp sgt i32 %3, 0
  br i1 %cmp150, label %for.body.lr.ph, label %for.cond.preheader.for.cond8.preheader_crit_edge

for.cond.preheader.for.cond8.preheader_crit_edge: ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond8.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %vf6 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 85
  br label %for.body

for.cond8.preheader:                              ; preds = %for.body.for.cond8.preheader_crit_edge, %for.cond.preheader.for.cond8.preheader_crit_edge
  %vf15 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 85
  br label %land.rhs

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %v.0151 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %4 = ptrtoint ptr %vf6 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vf6, align 8
  %arrayidx = getelementptr %struct.i40e_vf, ptr %5, i32 %v.0151
  tail call fastcc void @i40e_trigger_vf_reset(ptr noundef %arrayidx, i1 noundef zeroext %flr)
  %inc = add nuw nsw i32 %v.0151, 1
  %6 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_alloc_vfs, align 4
  %cmp = icmp slt i32 %inc, %7
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.cond8.preheader_crit_edge

for.body.for.cond8.preheader_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond8.preheader

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

land.rhs:                                         ; preds = %for.inc23.land.rhs_crit_edge, %for.cond8.preheader
  %i.0156 = phi i32 [ 0, %for.cond8.preheader ], [ %inc24, %for.inc23.land.rhs_crit_edge ]
  %v.1155 = phi i32 [ 0, %for.cond8.preheader ], [ %v.2.lcssa, %for.inc23.land.rhs_crit_edge ]
  %8 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %v.1155, i32 %9)
  %cmp11 = icmp slt i32 %v.1155, %9
  br i1 %cmp11, label %for.body12, label %land.rhs.for.end25_crit_edge

land.rhs.for.end25_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end25

for.body12:                                       ; preds = %land.rhs
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %10 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %v.1155, i32 %11)
  %cmp14152 = icmp slt i32 %v.1155, %11
  br i1 %cmp14152, label %for.body12.while.body_crit_edge, label %for.body12.for.inc23_crit_edge

for.body12.for.inc23_crit_edge:                   ; preds = %for.body12
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc23

for.body12.while.body_crit_edge:                  ; preds = %for.body12
  br label %while.body

while.body:                                       ; preds = %if.end21.while.body_crit_edge, %for.body12.while.body_crit_edge
  %v.2153 = phi i32 [ %inc22, %if.end21.while.body_crit_edge ], [ %v.1155, %for.body12.while.body_crit_edge ]
  %12 = ptrtoint ptr %vf15 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vf15, align 8
  %14 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw1, align 8
  %vf_id = getelementptr %struct.i40e_vf, ptr %13, i32 %v.2153, i32 1
  %16 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %17 to i32
  %mul = shl nsw i32 %conv, 2
  %add = add nsw i32 %mul, 596992
  %add.ptr = getelementptr i8, ptr %15, i32 %add
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !511
  %19 = and i32 %18, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool19.not = icmp eq i32 %19, 0
  br i1 %tobool19.not, label %while.body.for.inc23_crit_edge, label %if.end21

while.body.for.inc23_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc23

if.end21:                                         ; preds = %while.body
  %inc22 = add nsw i32 %v.2153, 1
  %20 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_alloc_vfs, align 4
  %cmp14 = icmp slt i32 %inc22, %21
  br i1 %cmp14, label %if.end21.while.body_crit_edge, label %if.end21.for.inc23_crit_edge

if.end21.for.inc23_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc23

if.end21.while.body_crit_edge:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body

for.inc23:                                        ; preds = %if.end21.for.inc23_crit_edge, %while.body.for.inc23_crit_edge, %for.body12.for.inc23_crit_edge
  %v.2.lcssa = phi i32 [ %v.1155, %for.body12.for.inc23_crit_edge ], [ %inc22, %if.end21.for.inc23_crit_edge ], [ %v.2153, %while.body.for.inc23_crit_edge ]
  %inc24 = add nuw nsw i32 %i.0156, 1
  %exitcond.not = icmp eq i32 %inc24, 10
  br i1 %exitcond.not, label %for.inc23.for.end25_crit_edge, label %for.inc23.land.rhs_crit_edge

for.inc23.land.rhs_crit_edge:                     ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.rhs

for.inc23.for.end25_crit_edge:                    ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end25

for.end25:                                        ; preds = %for.inc23.for.end25_crit_edge, %land.rhs.for.end25_crit_edge
  %v.1.lcssa = phi i32 [ %v.2.lcssa, %for.inc23.for.end25_crit_edge ], [ %v.1155, %land.rhs.for.end25_crit_edge ]
  br i1 %flr, label %if.then27, label %for.end25.if.end28_crit_edge

for.end25.if.end28_crit_edge:                     ; preds = %for.end25
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end28

if.then27:                                        ; preds = %for.end25
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %for.end25.if.end28_crit_edge
  %22 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %v.1.lcssa, i32 %23)
  %cmp30 = icmp slt i32 %v.1.lcssa, %23
  br i1 %cmp30, label %do.end, label %if.end28.if.end37_crit_edge

if.end28.if.end37_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

do.end:                                           ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  %24 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pf, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 44
  %26 = ptrtoint ptr %vf15 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vf15, align 8
  %vf_id35 = getelementptr %struct.i40e_vf, ptr %27, i32 %v.1.lcssa, i32 1
  %28 = ptrtoint ptr %vf_id35 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %vf_id35, align 4
  %conv36 = sext i16 %29 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str, i32 noundef %conv36) #12
  br label %if.end37

if.end37:                                         ; preds = %do.end, %if.end28.if.end37_crit_edge
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %30 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp40157 = icmp sgt i32 %31, 0
  br i1 %cmp40157, label %for.body42.lr.ph, label %if.end37.while.body82.preheader_crit_edge

if.end37.while.body82.preheader_crit_edge:        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body82.preheader

for.body42.lr.ph:                                 ; preds = %if.end37
  %vsi = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 74
  br label %for.body42

for.cond57.preheader:                             ; preds = %for.inc54
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %cmp59159 = icmp sgt i32 %41, 0
  br i1 %cmp59159, label %for.body61.lr.ph, label %for.cond57.preheader.while.body82.preheader_crit_edge

for.cond57.preheader.while.body82.preheader_crit_edge: ; preds = %for.cond57.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body82.preheader

while.body82.preheader:                           ; preds = %for.inc77.while.body82.preheader_crit_edge, %for.cond57.preheader.while.body82.preheader_crit_edge, %if.end37.while.body82.preheader_crit_edge
  br label %while.body82

for.body61.lr.ph:                                 ; preds = %for.cond57.preheader
  %vsi70 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 74
  br label %for.body61

for.body42:                                       ; preds = %for.inc54.for.body42_crit_edge, %for.body42.lr.ph
  %v.3158 = phi i32 [ 0, %for.body42.lr.ph ], [ %inc55, %for.inc54.for.body42_crit_edge ]
  %32 = ptrtoint ptr %vf15 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %vf15, align 8
  %lan_vsi_idx = getelementptr %struct.i40e_vf, ptr %33, i32 %v.3158, i32 10
  %34 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %lan_vsi_idx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %35)
  %cmp46 = icmp eq i16 %35, 0
  br i1 %cmp46, label %for.body42.for.inc54_crit_edge, label %if.end49

for.body42.for.inc54_crit_edge:                   ; preds = %for.body42
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc54

if.end49:                                         ; preds = %for.body42
  call void @__sanitizer_cov_trace_pc() #11
  %conv45 = zext i16 %35 to i32
  %36 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vsi, align 8
  %arrayidx53 = getelementptr ptr, ptr %37, i32 %conv45
  %38 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx53, align 4
  tail call void @i40e_vsi_stop_rings_no_wait(ptr noundef %39) #9
  br label %for.inc54

for.inc54:                                        ; preds = %if.end49, %for.body42.for.inc54_crit_edge
  %inc55 = add nuw nsw i32 %v.3158, 1
  %40 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %num_alloc_vfs, align 4
  %cmp40 = icmp slt i32 %inc55, %41
  br i1 %cmp40, label %for.inc54.for.body42_crit_edge, label %for.cond57.preheader

for.inc54.for.body42_crit_edge:                   ; preds = %for.inc54
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body42

for.body61:                                       ; preds = %for.inc77.for.body61_crit_edge, %for.body61.lr.ph
  %v.4160 = phi i32 [ 0, %for.body61.lr.ph ], [ %inc78, %for.inc77.for.body61_crit_edge ]
  %42 = ptrtoint ptr %vf15 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %vf15, align 8
  %lan_vsi_idx64 = getelementptr %struct.i40e_vf, ptr %43, i32 %v.4160, i32 10
  %44 = ptrtoint ptr %lan_vsi_idx64 to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %lan_vsi_idx64, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %45)
  %cmp66 = icmp eq i16 %45, 0
  br i1 %cmp66, label %for.body61.for.inc77_crit_edge, label %if.end69

for.body61.for.inc77_crit_edge:                   ; preds = %for.body61
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc77

if.end69:                                         ; preds = %for.body61
  call void @__sanitizer_cov_trace_pc() #11
  %conv65 = zext i16 %45 to i32
  %46 = ptrtoint ptr %vsi70 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %vsi70, align 8
  %arrayidx75 = getelementptr ptr, ptr %47, i32 %conv65
  %48 = ptrtoint ptr %arrayidx75 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx75, align 4
  %call76 = tail call i32 @i40e_vsi_wait_queues_disabled(ptr noundef %49) #9
  br label %for.inc77

for.inc77:                                        ; preds = %if.end69, %for.body61.for.inc77_crit_edge
  %inc78 = add nuw nsw i32 %v.4160, 1
  %50 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %num_alloc_vfs, align 4
  %cmp59 = icmp slt i32 %inc78, %51
  br i1 %cmp59, label %for.inc77.for.body61_crit_edge, label %for.inc77.while.body82.preheader_crit_edge

for.inc77.while.body82.preheader_crit_edge:       ; preds = %for.inc77
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body82.preheader

for.inc77.for.body61_crit_edge:                   ; preds = %for.inc77
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body61

for.cond84.preheader:                             ; preds = %while.body82
  %52 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp86162 = icmp sgt i32 %53, 0
  br i1 %cmp86162, label %for.cond84.preheader.for.body88_crit_edge, label %for.cond84.preheader.for.end93_crit_edge

for.cond84.preheader.for.end93_crit_edge:         ; preds = %for.cond84.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end93

for.cond84.preheader.for.body88_crit_edge:        ; preds = %for.cond84.preheader
  br label %for.body88

while.body82:                                     ; preds = %while.body82.while.body82_crit_edge, %while.body82.preheader
  %__ms.0161 = phi i32 [ %dec, %while.body82.while.body82_crit_edge ], [ 50, %while.body82.preheader ]
  %dec = add nsw i32 %__ms.0161, -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %54 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %54(i32 noundef 214748000) #9
  %tobool81.not = icmp eq i32 %dec, 0
  br i1 %tobool81.not, label %for.cond84.preheader, label %while.body82.while.body82_crit_edge

while.body82.while.body82_crit_edge:              ; preds = %while.body82
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body82

for.body88:                                       ; preds = %for.body88.for.body88_crit_edge, %for.cond84.preheader.for.body88_crit_edge
  %v.5163 = phi i32 [ %inc92, %for.body88.for.body88_crit_edge ], [ 0, %for.cond84.preheader.for.body88_crit_edge ]
  %55 = ptrtoint ptr %vf15 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %vf15, align 8
  %arrayidx90 = getelementptr %struct.i40e_vf, ptr %56, i32 %v.5163
  tail call fastcc void @i40e_cleanup_reset_vf(ptr noundef %arrayidx90)
  %inc92 = add nuw nsw i32 %v.5163, 1
  %57 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %num_alloc_vfs, align 4
  %cmp86 = icmp slt i32 %inc92, %58
  br i1 %cmp86, label %for.body88.for.body88_crit_edge, label %for.body88.for.end93_crit_edge

for.body88.for.end93_crit_edge:                   ; preds = %for.body88
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end93

for.body88.for.body88_crit_edge:                  ; preds = %for.body88
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body88

for.end93:                                        ; preds = %for.body88.for.end93_crit_edge, %for.cond84.preheader.for.end93_crit_edge
  %59 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hw1, align 8
  %add.ptr97 = getelementptr i8, ptr %60, i32 745772
  %61 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr97) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !512
  tail call void @_clear_bit(i32 noundef 27, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %for.end93, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %for.end93 ], [ false, %entry.cleanup_crit_edge ], [ false, %if.end.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_vsi_stop_rings_no_wait(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_vsi_wait_queues_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @i40e_free_vfs(ptr noundef %pf) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 1
  %vf = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 85
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 37, ptr noundef %state) #9
  %call134 = tail call i32 @_test_and_set_bit(i32 noundef 27, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call134)
  %tobool4.not135 = icmp eq i32 %call134, 0
  br i1 %tobool4.not135, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.end.while.body_crit_edge
  tail call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #9
  %call = tail call i32 @_test_and_set_bit(i32 noundef 27, ptr noundef %state) #9
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %if.end.while.end_crit_edge
  tail call void @i40e_notify_client_of_vf_enable(ptr noundef %pf, i32 noundef 0) #9
  %2 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pf, align 8
  %call5 = tail call i32 @pci_vfs_assigned(ptr noundef %3) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  %4 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pf, align 8
  br i1 %tobool6.not, label %if.then7, label %do.end

if.then7:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @pci_disable_sriov(ptr noundef %5) #9
  br label %if.end10

do.end:                                           ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #11
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.6) #12
  br label %if.end10

if.end10:                                         ; preds = %do.end, %if.then7
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 86
  %6 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp136 = icmp sgt i32 %7, 0
  br i1 %cmp136, label %for.body.lr.ph, label %if.end10.for.end39.thread_crit_edge

if.end10.for.end39.thread_crit_edge:              ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end39.thread

for.body.lr.ph:                                   ; preds = %if.end10
  %vsi = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 74
  br label %for.body

for.cond19.preheader:                             ; preds = %for.inc
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp21139 = icmp sgt i32 %19, 0
  br i1 %cmp21139, label %for.body22.lr.ph, label %for.cond19.preheader.for.end39.thread_crit_edge

for.cond19.preheader.for.end39.thread_crit_edge:  ; preds = %for.cond19.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end39.thread

for.body22.lr.ph:                                 ; preds = %for.cond19.preheader
  %vsi30 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 74
  br label %for.body22

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0137 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %8 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vf, align 8
  %vf_states = getelementptr %struct.i40e_vf, ptr %9, i32 %i.0137, i32 16
  %10 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %vf_states, align 4
  %and1.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool13.not = icmp eq i32 %and1.i, 0
  br i1 %tobool13.not, label %if.end15, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

if.end15:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %12 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vsi, align 8
  %lan_vsi_idx = getelementptr %struct.i40e_vf, ptr %9, i32 %i.0137, i32 10
  %14 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %15 to i32
  %arrayidx18 = getelementptr ptr, ptr %13, i32 %idxprom
  %16 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx18, align 4
  tail call void @i40e_vsi_stop_rings_no_wait(ptr noundef %17) #9
  br label %for.inc

for.inc:                                          ; preds = %if.end15, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0137, 1
  %18 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_alloc_vfs, align 4
  %cmp = icmp slt i32 %inc, %19
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.cond19.preheader

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.body22:                                       ; preds = %for.inc37.for.body22_crit_edge, %for.body22.lr.ph
  %i.1140 = phi i32 [ 0, %for.body22.lr.ph ], [ %inc38, %for.inc37.for.body22_crit_edge ]
  %20 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vf, align 8
  %vf_states25 = getelementptr %struct.i40e_vf, ptr %21, i32 %i.1140, i32 16
  %22 = ptrtoint ptr %vf_states25 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %vf_states25, align 4
  %and1.i132 = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i132)
  %tobool27.not = icmp eq i32 %and1.i132, 0
  br i1 %tobool27.not, label %if.end29, label %for.body22.for.inc37_crit_edge

for.body22.for.inc37_crit_edge:                   ; preds = %for.body22
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc37

if.end29:                                         ; preds = %for.body22
  call void @__sanitizer_cov_trace_pc() #11
  %24 = ptrtoint ptr %vsi30 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vsi30, align 8
  %lan_vsi_idx33 = getelementptr %struct.i40e_vf, ptr %21, i32 %i.1140, i32 10
  %26 = ptrtoint ptr %lan_vsi_idx33 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %lan_vsi_idx33, align 2
  %idxprom34 = zext i16 %27 to i32
  %arrayidx35 = getelementptr ptr, ptr %25, i32 %idxprom34
  %28 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx35, align 4
  %call36 = tail call i32 @i40e_vsi_wait_queues_disabled(ptr noundef %29) #9
  br label %for.inc37

for.inc37:                                        ; preds = %if.end29, %for.body22.for.inc37_crit_edge
  %inc38 = add nuw nsw i32 %i.1140, 1
  %30 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %num_alloc_vfs, align 4
  %cmp21 = icmp slt i32 %inc38, %31
  br i1 %cmp21, label %for.inc37.for.body22_crit_edge, label %for.end39

for.inc37.for.body22_crit_edge:                   ; preds = %for.inc37
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body22

for.end39.thread:                                 ; preds = %for.cond19.preheader.for.end39.thread_crit_edge, %if.end10.for.end39.thread_crit_edge
  %.lcssa.ph = phi i32 [ %19, %for.cond19.preheader.for.end39.thread_crit_edge ], [ %7, %if.end10.for.end39.thread_crit_edge ]
  %32 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %num_alloc_vfs, align 4
  br label %for.end58

for.end39:                                        ; preds = %for.inc37
  %33 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp43142 = icmp sgt i32 %31, 0
  br i1 %cmp43142, label %for.end39.for.body44_crit_edge, label %for.end39.for.end58_crit_edge

for.end39.for.end58_crit_edge:                    ; preds = %for.end39
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end58

for.end39.for.body44_crit_edge:                   ; preds = %for.end39
  br label %for.body44

for.body44:                                       ; preds = %i40e_disable_vf_mappings.exit.for.body44_crit_edge, %for.end39.for.body44_crit_edge
  %i.2143 = phi i32 [ %inc57, %i40e_disable_vf_mappings.exit.for.body44_crit_edge ], [ 0, %for.end39.for.body44_crit_edge ]
  %34 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %vf, align 8
  %vf_states47 = getelementptr %struct.i40e_vf, ptr %35, i32 %i.2143, i32 16
  %36 = ptrtoint ptr %vf_states47 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %vf_states47, align 4
  %and1.i133 = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i133)
  %tobool49.not = icmp eq i32 %and1.i133, 0
  br i1 %tobool49.not, label %for.body44.if.end53_crit_edge, label %if.then50

for.body44.if.end53_crit_edge:                    ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end53

if.then50:                                        ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #11
  %arrayidx52 = getelementptr %struct.i40e_vf, ptr %35, i32 %i.2143
  tail call fastcc void @i40e_free_vf_res(ptr noundef %arrayidx52)
  br label %if.end53

if.end53:                                         ; preds = %if.then50, %for.body44.if.end53_crit_edge
  %38 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %vf, align 8
  %arrayidx55 = getelementptr %struct.i40e_vf, ptr %39, i32 %i.2143
  %40 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx55, align 8
  %hw2.i = getelementptr inbounds %struct.i40e_pf, ptr %41, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !513
  tail call void @arm_heavy_mb() #9
  %42 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hw2.i, align 8
  %vf_id.i = getelementptr %struct.i40e_vf, ptr %39, i32 %i.2143, i32 1
  %44 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %vf_id.i, align 4
  %conv.i = sext i16 %45 to i32
  %mul.i = shl nsw i32 %conv.i, 2
  %add.i = add nsw i32 %mul.i, 475136
  %add.ptr.i = getelementptr i8, ptr %43, i32 %add.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #9, !srcloc !498
  br label %do.body4.i

do.body4.i:                                       ; preds = %do.body4.i.do.body4.i_crit_edge, %if.end53
  %i.024.i = phi i32 [ 0, %if.end53 ], [ %inc.i, %do.body4.i.do.body4.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !514
  tail call void @arm_heavy_mb() #9
  %46 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hw2.i, align 8
  %mul8.i = shl i32 %i.024.i, 10
  %48 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %vf_id.i, align 4
  %conv10.i = sext i16 %49 to i32
  %mul11.i = shl nsw i32 %conv10.i, 2
  %add12.i = add nuw nsw i32 %mul8.i, 458752
  %add13.i = add i32 %add12.i, %mul11.i
  %add.ptr14.i = getelementptr i8, ptr %47, i32 %add13.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr14.i, i32 -16318464) #9, !srcloc !498
  %inc.i = add nuw nsw i32 %i.024.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 16
  br i1 %exitcond.not.i, label %i40e_disable_vf_mappings.exit, label %do.body4.i.do.body4.i_crit_edge

do.body4.i.do.body4.i_crit_edge:                  ; preds = %do.body4.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body4.i

i40e_disable_vf_mappings.exit:                    ; preds = %do.body4.i
  %50 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %hw2.i, align 8
  %add.ptr16.i = getelementptr i8, ptr %51, i32 745772
  %52 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr16.i) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !515
  %inc57 = add nuw nsw i32 %i.2143, 1
  %exitcond.not = icmp eq i32 %inc57, %31
  br i1 %exitcond.not, label %i40e_disable_vf_mappings.exit.for.end58_crit_edge, label %i40e_disable_vf_mappings.exit.for.body44_crit_edge

i40e_disable_vf_mappings.exit.for.body44_crit_edge: ; preds = %i40e_disable_vf_mappings.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body44

i40e_disable_vf_mappings.exit.for.end58_crit_edge: ; preds = %i40e_disable_vf_mappings.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end58

for.end58:                                        ; preds = %i40e_disable_vf_mappings.exit.for.end58_crit_edge, %for.end39.for.end58_crit_edge, %for.end39.thread
  %cmp43142152 = phi i1 [ false, %for.end39.thread ], [ false, %for.end39.for.end58_crit_edge ], [ %cmp43142, %i40e_disable_vf_mappings.exit.for.end58_crit_edge ]
  %.lcssa151 = phi i32 [ %.lcssa.ph, %for.end39.thread ], [ %31, %for.end39.for.end58_crit_edge ], [ %31, %i40e_disable_vf_mappings.exit.for.end58_crit_edge ]
  %53 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %vf, align 8
  tail call void @kfree(ptr noundef %54) #9
  %55 = ptrtoint ptr %vf to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %vf, align 8
  %56 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %pf, align 8
  %call62 = tail call i32 @pci_vfs_assigned(ptr noundef %57) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %tobool63.not = icmp eq i32 %call62, 0
  %or.cond = select i1 %tobool63.not, i1 %cmp43142152, i1 false
  br i1 %or.cond, label %for.body67.lr.ph, label %for.end58.if.end78_crit_edge

for.end58.if.end78_crit_edge:                     ; preds = %for.end58
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end78

for.body67.lr.ph:                                 ; preds = %for.end58
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 1, i32 15, i32 33
  br label %for.body67

for.body67:                                       ; preds = %for.body67.for.body67_crit_edge, %for.body67.lr.ph
  %vf_id.0145 = phi i32 [ 0, %for.body67.lr.ph ], [ %inc76, %for.body67.for.body67_crit_edge ]
  %58 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %vf_base_id, align 8
  %add = add i32 %59, %vf_id.0145
  %rem = and i32 %add, 31
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !516
  tail call void @arm_heavy_mb() #9
  %shl = shl nuw i32 1, %rem
  %60 = tail call i32 @llvm.bswap.i32(i32 %shl)
  %61 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %hw1, align 8
  %63 = lshr i32 %add, 3
  %mul = and i32 %63, 536870908
  %add74 = add nuw nsw i32 %mul, 599552
  %add.ptr = getelementptr i8, ptr %62, i32 %add74
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %60) #9, !srcloc !498
  %inc76 = add nuw nsw i32 %vf_id.0145, 1
  %exitcond147.not = icmp eq i32 %inc76, %.lcssa151
  br i1 %exitcond147.not, label %for.body67.if.end78_crit_edge, label %for.body67.for.body67_crit_edge

for.body67.for.body67_crit_edge:                  ; preds = %for.body67
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body67

for.body67.if.end78_crit_edge:                    ; preds = %for.body67
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end78

if.end78:                                         ; preds = %for.body67.if.end78_crit_edge, %for.end58.if.end78_crit_edge
  tail call void @_clear_bit(i32 noundef 27, ptr noundef %state) #9
  tail call void @_clear_bit(i32 noundef 37, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end78, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_notify_client_of_vf_enable(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_vfs_assigned(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_sriov(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @i40e_free_vf_res(ptr noundef %vf) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %hw2 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %vf_states = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %vf_states) #9
  %num_queue_pairs = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 12
  %2 = ptrtoint ptr %num_queue_pairs to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %num_queue_pairs, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %3)
  %cmp = icmp ugt i8 %3, 4
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %conv = zext i8 %3 to i32
  %sub = add nsw i32 %conv, -4
  %queues_left = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 16
  %4 = ptrtoint ptr %queues_left to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %queues_left, align 8
  %add = add i32 %sub, %5
  store i32 %add, ptr %queues_left, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %6 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %lan_vsi_idx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %if.end.if.end9_crit_edge, label %if.then6

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %vsi = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %8 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vsi, align 8
  %idxprom = zext i16 %7 to i32
  %arrayidx = getelementptr ptr, ptr %9, i32 %idxprom
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 4
  %call = tail call i32 @i40e_vsi_release(ptr noundef %11) #9
  %12 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 0, ptr %lan_vsi_idx, align 2
  %lan_vsi_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 11
  %13 = ptrtoint ptr %lan_vsi_id to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 0, ptr %lan_vsi_id, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.end.if.end9_crit_edge
  %adq_enabled = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %14 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool10.not = icmp eq i8 %15, 0
  br i1 %tobool10.not, label %if.end9.if.end34_crit_edge, label %land.lhs.true

if.end9.if.end34_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

land.lhs.true:                                    ; preds = %if.end9
  %ch = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24
  %16 = ptrtoint ptr %ch to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %ch, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool14.not = icmp eq i16 %17, 0
  br i1 %tobool14.not, label %land.lhs.true.if.end34_crit_edge, label %for.cond.preheader

land.lhs.true.if.end34_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

for.cond.preheader:                               ; preds = %land.lhs.true
  %num_tc = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %18 = ptrtoint ptr %num_tc to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %num_tc, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp17145.not = icmp eq i8 %19, 0
  br i1 %cmp17145.not, label %for.cond.preheader.if.end34_crit_edge, label %if.end28.peel

for.cond.preheader.if.end34_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

if.end28.peel:                                    ; preds = %for.cond.preheader
  %vsi21 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %20 = ptrtoint ptr %ch to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 0, ptr %ch, align 8
  %vsi_id.peel = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 0, i32 1
  %21 = ptrtoint ptr %vsi_id.peel to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 0, ptr %vsi_id.peel, align 2
  %22 = ptrtoint ptr %num_tc to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %num_tc, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %23)
  %cmp17.peel = icmp ugt i8 %23, 1
  br i1 %cmp17.peel, label %if.end28.peel.if.end28_crit_edge, label %if.end28.peel.if.end34_crit_edge

if.end28.peel.if.end34_crit_edge:                 ; preds = %if.end28.peel
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

if.end28.peel.if.end28_crit_edge:                 ; preds = %if.end28.peel
  br label %if.end28

if.end28:                                         ; preds = %if.end28.if.end28_crit_edge, %if.end28.peel.if.end28_crit_edge
  %j.0146 = phi i32 [ %inc, %if.end28.if.end28_crit_edge ], [ 1, %if.end28.peel.if.end28_crit_edge ]
  %24 = ptrtoint ptr %vsi21 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vsi21, align 8
  %arrayidx23 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %j.0146
  %26 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %arrayidx23, align 8
  %idxprom25 = zext i16 %27 to i32
  %arrayidx26 = getelementptr ptr, ptr %25, i32 %idxprom25
  %28 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx26, align 4
  %call27 = tail call i32 @i40e_vsi_release(ptr noundef %29) #9
  %arrayidx30 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %j.0146
  %30 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 0, ptr %arrayidx30, align 8
  %vsi_id = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %j.0146, i32 1
  %31 = ptrtoint ptr %vsi_id to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 0, ptr %vsi_id, align 2
  %inc = add nuw nsw i32 %j.0146, 1
  %32 = ptrtoint ptr %num_tc to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %num_tc, align 1
  %conv16 = zext i8 %33 to i32
  %cmp17 = icmp ult i32 %inc, %conv16
  br i1 %cmp17, label %if.end28.if.end28_crit_edge, label %if.end28.if.end34_crit_edge, !llvm.loop !517

if.end28.if.end34_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

if.end28.if.end28_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end28

if.end34:                                         ; preds = %if.end28.if.end34_crit_edge, %if.end28.peel.if.end34_crit_edge, %for.cond.preheader.if.end34_crit_edge, %land.lhs.true.if.end34_crit_edge, %if.end9.if.end34_crit_edge
  %num_msix_vectors_vf = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 15, i32 39
  %34 = ptrtoint ptr %num_msix_vectors_vf to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %num_msix_vectors_vf, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp37148 = icmp sgt i32 %35, 0
  br i1 %cmp37148, label %do.body.peel, label %if.end34.for.end96_crit_edge

if.end34.for.end96_crit_edge:                     ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end96

do.body.peel:                                     ; preds = %if.end34
  %sub45 = add nuw i32 %35, 1073741823
  %vf_id46 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %36 = ptrtoint ptr %vf_id46 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %vf_id46, align 4
  %conv43.peel = sext i16 %37 to i32
  %mul.peel = shl nsw i32 %conv43.peel, 2
  %add44.peel = add nsw i32 %mul.peel, 173056
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !519
  tail call void @arm_heavy_mb() #9
  %38 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %hw2, align 8
  %add.ptr.peel = getelementptr i8, ptr %39, i32 %add44.peel
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.peel, i32 33554432) #9, !srcloc !498
  %40 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hw2, align 8
  %add.ptr55.peel = getelementptr i8, ptr %41, i32 745772
  %42 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr55.peel) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !520
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %exitcond.peel.not = icmp eq i32 %35, 1
  br i1 %exitcond.peel.not, label %do.body.peel.if.end81.peel_crit_edge, label %do.body.peel.do.body_crit_edge

do.body.peel.do.body_crit_edge:                   ; preds = %do.body.peel
  br label %do.body

do.body.peel.if.end81.peel_crit_edge:             ; preds = %do.body.peel
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end81.peel

for.cond61.preheader:                             ; preds = %do.body
  br i1 %cmp37148, label %for.cond61.preheader.if.end81.peel_crit_edge, label %for.cond61.preheader.for.end96_crit_edge

for.cond61.preheader.for.end96_crit_edge:         ; preds = %for.cond61.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end96

for.cond61.preheader.if.end81.peel_crit_edge:     ; preds = %for.cond61.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end81.peel

if.end81.peel:                                    ; preds = %for.cond61.preheader.if.end81.peel_crit_edge, %do.body.peel.if.end81.peel_crit_edge
  %sub73 = add nuw i32 %35, 1073741823
  %vf_id74 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %43 = ptrtoint ptr %vf_id74 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %vf_id74, align 4
  %conv69.peel = sext i16 %44 to i32
  %mul70.peel = shl nsw i32 %conv69.peel, 2
  %add71.peel = add nsw i32 %mul70.peel, 174080
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !521
  tail call void @arm_heavy_mb() #9
  %45 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hw2, align 8
  %add.ptr86.peel = getelementptr i8, ptr %46, i32 %add71.peel
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr86.peel, i32 -14745600) #9, !srcloc !498
  %47 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %hw2, align 8
  %add.ptr90.peel = getelementptr i8, ptr %48, i32 745772
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr90.peel) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !522
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %exitcond156.peel.not = icmp eq i32 %35, 1
  br i1 %exitcond156.peel.not, label %if.end81.peel.for.end96_crit_edge, label %if.end81.peel.if.end81_crit_edge

if.end81.peel.if.end81_crit_edge:                 ; preds = %if.end81.peel
  br label %if.end81

if.end81.peel.for.end96_crit_edge:                ; preds = %if.end81.peel
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end96

do.body:                                          ; preds = %do.body.do.body_crit_edge, %do.body.peel.do.body_crit_edge
  %i.0149 = phi i32 [ %inc59, %do.body.do.body_crit_edge ], [ 1, %do.body.peel.do.body_crit_edge ]
  %50 = ptrtoint ptr %vf_id46 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %vf_id46, align 4
  %conv47 = sext i16 %51 to i32
  %mul48 = mul i32 %sub45, %conv47
  %sub49 = add nuw i32 %i.0149, 1073741823
  %add50 = add i32 %sub49, %mul48
  %mul51 = shl i32 %add50, 2
  %add52 = add i32 %mul51, 149504
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !519
  tail call void @arm_heavy_mb() #9
  %52 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %hw2, align 8
  %add.ptr = getelementptr i8, ptr %53, i32 %add52
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 33554432) #9, !srcloc !498
  %54 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %hw2, align 8
  %add.ptr55 = getelementptr i8, ptr %55, i32 745772
  %56 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr55) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !520
  %inc59 = add nuw nsw i32 %i.0149, 1
  %exitcond.not = icmp eq i32 %inc59, %35
  br i1 %exitcond.not, label %for.cond61.preheader, label %do.body.do.body_crit_edge, !llvm.loop !523

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body

if.end81:                                         ; preds = %if.end81.if.end81_crit_edge, %if.end81.peel.if.end81_crit_edge
  %i.1152 = phi i32 [ %inc95, %if.end81.if.end81_crit_edge ], [ 1, %if.end81.peel.if.end81_crit_edge ]
  %57 = ptrtoint ptr %vf_id74 to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %vf_id74, align 4
  %conv75 = sext i16 %58 to i32
  %mul76 = mul i32 %sub73, %conv75
  %sub77 = add nuw i32 %i.1152, 1073741823
  %add78 = add i32 %sub77, %mul76
  %mul79 = shl i32 %add78, 2
  %add80 = add i32 %mul79, 151552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !521
  tail call void @arm_heavy_mb() #9
  %59 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hw2, align 8
  %add.ptr86 = getelementptr i8, ptr %60, i32 %add80
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr86, i32 -14745600) #9, !srcloc !498
  %61 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %hw2, align 8
  %add.ptr90 = getelementptr i8, ptr %62, i32 745772
  %63 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr90) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !522
  %inc95 = add nuw nsw i32 %i.1152, 1
  %exitcond156.not = icmp eq i32 %inc95, %35
  br i1 %exitcond156.not, label %if.end81.for.end96_crit_edge, label %if.end81.if.end81_crit_edge, !llvm.loop !524

if.end81.if.end81_crit_edge:                      ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end81

if.end81.for.end96_crit_edge:                     ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end96

for.end96:                                        ; preds = %if.end81.for.end96_crit_edge, %if.end81.peel.for.end96_crit_edge, %for.cond61.preheader.for.end96_crit_edge, %if.end34.for.end96_crit_edge
  %64 = ptrtoint ptr %num_queue_pairs to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 0, ptr %num_queue_pairs, align 2
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %vf_states) #9
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %vf_states) #9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_alloc_vfs(ptr noundef %pf, i16 noundef zeroext %num_alloc_vfs) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @i40e_irq_dynamic_disable_icr0(ptr noundef %pf) #9
  %0 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pf, align 8
  %call = tail call i32 @pci_num_vf(ptr noundef %1) #9
  %conv = zext i16 %num_alloc_vfs to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %call, i32 %conv)
  %cmp.not = icmp eq i32 %call, %conv
  br i1 %cmp.not, label %entry.if.end7.i.i_crit_edge, label %if.then

entry.if.end7.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pf, align 8
  %call4 = tail call i32 @pci_enable_sriov(ptr noundef %3, i32 noundef %conv) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then.if.end7.i.i_crit_edge, label %if.then5

if.then.if.end7.i.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  %flags = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 54
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 8
  %and = and i32 %5, -4097
  store i32 %and, ptr %flags, align 8
  %num_alloc_vfs6 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 86
  %6 = ptrtoint ptr %num_alloc_vfs6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %num_alloc_vfs6, align 4
  br label %err_iov

if.end7.i.i:                                      ; preds = %if.then.if.end7.i.i_crit_edge, %entry.if.end7.i.i_crit_edge
  %7 = mul nuw nsw i32 %conv, 160
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %7, i32 noundef 3520) #13
  %tobool10.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool10.not, label %if.then28, label %if.end12

if.end12:                                         ; preds = %if.end7.i.i
  %vf = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 85
  %8 = ptrtoint ptr %vf to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call8.i.i, ptr %vf, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %num_alloc_vfs)
  %cmp1474.not = icmp eq i16 %num_alloc_vfs, 0
  br i1 %cmp1474.not, label %if.end12.err_alloc_crit_edge, label %if.end12.for.body_crit_edge

if.end12.for.body_crit_edge:                      ; preds = %if.end12
  br label %for.body

if.end12.err_alloc_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_alloc

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end12.for.body_crit_edge
  %i.075 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end12.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.i40e_vf, ptr %call8.i.i, i32 %i.075
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %pf, ptr %arrayidx, align 32
  %parent_type = getelementptr %struct.i40e_vf, ptr %call8.i.i, i32 %i.075, i32 2
  %10 = ptrtoint ptr %parent_type to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 17, ptr %parent_type, align 8
  %conv18 = trunc i32 %i.075 to i16
  %vf_id = getelementptr %struct.i40e_vf, ptr %call8.i.i, i32 %i.075, i32 1
  %11 = ptrtoint ptr %vf_id to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %conv18, ptr %vf_id, align 4
  %vf_caps = getelementptr %struct.i40e_vf, ptr %call8.i.i, i32 %i.075, i32 15
  tail call void @_set_bit(i32 noundef 1, ptr noundef %vf_caps) #9
  %spoofchk = getelementptr %struct.i40e_vf, ptr %call8.i.i, i32 %i.075, i32 20
  %12 = ptrtoint ptr %spoofchk to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %spoofchk, align 2
  %vf_states = getelementptr %struct.i40e_vf, ptr %call8.i.i, i32 %i.075, i32 16
  tail call void @_set_bit(i32 noundef 6, ptr noundef %vf_states) #9
  %inc = add nuw nsw i32 %i.075, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.body.err_alloc_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.body.err_alloc_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_alloc

err_alloc:                                        ; preds = %for.body.err_alloc_crit_edge, %if.end12.err_alloc_crit_edge
  %num_alloc_vfs24 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 86
  %13 = ptrtoint ptr %num_alloc_vfs24 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv, ptr %num_alloc_vfs24, align 4
  %call25 = tail call zeroext i1 @i40e_reset_all_vfs(ptr noundef %pf, i1 noundef zeroext false)
  tail call void @i40e_notify_client_of_vf_enable(ptr noundef %pf, i32 noundef %conv) #9
  br label %err_iov

if.then28:                                        ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @i40e_free_vfs(ptr noundef %pf)
  br label %err_iov

err_iov:                                          ; preds = %if.then28, %err_alloc, %if.then5
  %ret.2 = phi i32 [ %call4, %if.then5 ], [ -12, %if.then28 ], [ 0, %err_alloc ]
  tail call void @i40e_irq_dynamic_enable_icr0(ptr noundef %pf) #9
  ret i32 %ret.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_irq_dynamic_disable_icr0(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_num_vf(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_sriov(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_irq_dynamic_enable_icr0(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_pci_sriov_configure(ptr noundef %pdev, i32 noundef %num_vfs) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %state = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 2
  %call1 = tail call i32 @_test_and_set_bit(i32 noundef 33, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.9) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_vfs)
  %tobool2.not = icmp eq i32 %num_vfs, 0
  br i1 %tobool2.not, label %if.end9, label %if.then3

if.then3:                                         ; preds = %if.end
  %flags = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 54
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 8
  %and = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.then5, label %if.then3.if.end7_crit_edge

if.then3.if.end7_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7

if.then5:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #11
  %or = or i32 %3, 4096
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %flags, align 8
  tail call void @i40e_do_reset_safe(ptr noundef %1, i32 noundef 16384) #9
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.then3.if.end7_crit_edge
  %5 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %driver_data.i.i, align 4
  %call1.i = tail call i32 @pci_num_vf(ptr noundef %pdev) #9
  %state.i = getelementptr inbounds %struct.i40e_pf, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i, ptr noundef nonnull @.str.120) #12
  br label %sriov_configure_out

if.end.i:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool3.not.i = icmp eq i32 %call1.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %call1.i, i32 %num_vfs)
  %cmp.not.i = icmp eq i32 %call1.i, %num_vfs
  %or.cond.i = or i1 %tobool3.not.i, %cmp.not.i
  br i1 %or.cond.i, label %if.else.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @i40e_free_vfs(ptr noundef %6) #9
  br label %if.end10.i

if.else.i:                                        ; preds = %if.end.i
  %tobool3.not.not.i = xor i1 %tobool3.not.i, true
  %or.cond56.i = and i1 %cmp.not.i, %tobool3.not.not.i
  br i1 %or.cond56.i, label %if.else.i.sriov_configure_out_crit_edge, label %if.else.i.if.end10.i_crit_edge

if.else.i.if.end10.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end10.i

if.else.i.sriov_configure_out_crit_edge:          ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sriov_configure_out

if.end10.i:                                       ; preds = %if.else.i.if.end10.i_crit_edge, %if.then4.i
  %num_req_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %6, i32 0, i32 9
  %9 = ptrtoint ptr %num_req_vfs.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %num_req_vfs.i, align 2
  %conv.i = zext i16 %10 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %num_vfs)
  %cmp11.i = icmp slt i32 %conv.i, %num_vfs
  %dev17.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  br i1 %cmp11.i, label %do.end16.i, label %do.end23.i

do.end16.i:                                       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev17.i, ptr noundef nonnull @.str.123, i32 noundef %num_vfs, i32 noundef %conv.i) #12
  br label %sriov_configure_out

do.end23.i:                                       ; preds = %if.end10.i
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev17.i, ptr noundef nonnull @.str.126, i32 noundef %num_vfs) #12
  %conv25.i = trunc i32 %num_vfs to i16
  %call26.i = tail call i32 @i40e_alloc_vfs(ptr noundef %6, i16 noundef zeroext %conv25.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26.i)
  %tobool27.not.i = icmp eq i32 %call26.i, 0
  br i1 %tobool27.not.i, label %do.end23.i.sriov_configure_out_crit_edge, label %do.end31.i

do.end23.i.sriov_configure_out_crit_edge:         ; preds = %do.end23.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sriov_configure_out

do.end31.i:                                       ; preds = %do.end23.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev17.i, ptr noundef nonnull @.str.129, i32 noundef %call26.i) #12
  br label %sriov_configure_out

if.end9:                                          ; preds = %if.end
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %1, align 8
  %call11 = tail call i32 @pci_vfs_assigned(ptr noundef %12) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.then13, label %do.end18

if.then13:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @i40e_free_vfs(ptr noundef %1)
  %flags14 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 54
  %13 = ptrtoint ptr %flags14 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags14, align 8
  %and15 = and i32 %14, -4097
  store i32 %and15, ptr %flags14, align 8
  tail call void @i40e_do_reset_safe(ptr noundef %1, i32 noundef 16384) #9
  br label %sriov_configure_out

do.end18:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev19, ptr noundef nonnull @.str.12) #12
  br label %sriov_configure_out

sriov_configure_out:                              ; preds = %do.end18, %if.then13, %do.end31.i, %do.end23.i.sriov_configure_out_crit_edge, %do.end16.i, %if.else.i.sriov_configure_out_crit_edge, %do.end.i
  %ret.0 = phi i32 [ -22, %do.end18 ], [ 0, %if.then13 ], [ %num_vfs, %if.else.i.sriov_configure_out_crit_edge ], [ %num_vfs, %do.end23.i.sriov_configure_out_crit_edge ], [ -1, %do.end.i ], [ -1, %do.end16.i ], [ %call26.i, %do.end31.i ]
  tail call void @_clear_bit(i32 noundef 33, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %sriov_configure_out, %do.end
  %retval.0 = phi i32 [ -11, %do.end ], [ %ret.0, %sriov_configure_out ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_do_reset_safe(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_vc_process_vf_msg(ptr nocapture noundef %pf, i16 noundef signext %vf_id, i32 noundef %v_opcode, i32 noundef %v_retval, ptr noundef %msg, i16 noundef zeroext %msglen) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = sext i16 %vf_id to i32
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 1, i32 15, i32 33
  %0 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vf_base_id, align 8
  %sext = shl i32 %1, 16
  %conv3 = ashr exact i32 %sext, 16
  %sub = sub nsw i32 %conv, %conv3
  %vf_aq_requests = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 87
  %2 = ptrtoint ptr %vf_aq_requests to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vf_aq_requests, align 8
  %inc = add i32 %3, 1
  store i32 %inc, ptr %vf_aq_requests, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 86
  %4 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %5)
  %cmp5.not = icmp slt i32 %sub, %5
  br i1 %cmp5.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %vf7 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 85
  %6 = ptrtoint ptr %vf7 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vf7, align 8
  %arrayidx = getelementptr %struct.i40e_vf, ptr %7, i32 %sub
  %vf_states = getelementptr %struct.i40e_vf, ptr %7, i32 %sub, i32 16
  %8 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %vf_states, align 4
  %10 = and i32 %9, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %if.end9, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %11 = zext i32 %v_opcode to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values)
  switch i32 %v_opcode, label %if.end9.if.then12_crit_edge [
    i32 1, label %sw.bb.i
    i32 2, label %if.end9.sw.epilog.i_crit_edge
    i32 3, label %sw.bb1.i
    i32 4, label %sw.bb3.i
    i32 5, label %sw.bb4.i
    i32 6, label %sw.bb5.i
    i32 7, label %sw.bb17.i
    i32 8, label %if.end9.sw.bb32.i_crit_edge
    i32 9, label %if.end9.sw.bb32.i_crit_edge159
    i32 10, label %if.end9.sw.bb33.i_crit_edge
    i32 11, label %if.end9.sw.bb33.i_crit_edge160
    i32 12, label %if.end9.sw.bb48.i_crit_edge
    i32 13, label %if.end9.sw.bb48.i_crit_edge161
    i32 14, label %sw.bb64.i
    i32 15, label %sw.bb65.i
    i32 20, label %sw.bb66.i
    i32 22, label %if.end9.sw.epilog.i_crit_edge162
    i32 21, label %sw.bb70.i
    i32 23, label %sw.bb84.i
    i32 24, label %sw.bb93.i
    i32 25, label %if.end9.sw.epilog.i_crit_edge163
    i32 26, label %sw.bb102.i
    i32 27, label %if.end9.sw.epilog.i_crit_edge164
    i32 28, label %if.end9.sw.epilog.i_crit_edge165
    i32 29, label %sw.bb104.i
    i32 30, label %sw.bb105.i
    i32 31, label %if.end9.sw.epilog.i_crit_edge166
    i32 32, label %sw.bb119.i
    i32 33, label %sw.bb120.i
    i32 45, label %if.end9.sw.bb121.i_crit_edge
    i32 46, label %if.end9.sw.bb121.i_crit_edge167
    i32 47, label %sw.bb122.i
    i32 48, label %sw.bb123.i
    i32 51, label %if.end9.sw.epilog.i_crit_edge168
    i32 52, label %if.end9.sw.bb124.i_crit_edge
    i32 53, label %if.end9.sw.bb124.i_crit_edge169
    i32 54, label %if.end9.sw.bb145.i_crit_edge
    i32 55, label %if.end9.sw.bb145.i_crit_edge170
    i32 56, label %if.end9.sw.bb145.i_crit_edge171
    i32 57, label %if.end9.sw.bb145.i_crit_edge172
  ]

if.end9.sw.bb145.i_crit_edge172:                  ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb145.i

if.end9.sw.bb145.i_crit_edge171:                  ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb145.i

if.end9.sw.bb145.i_crit_edge170:                  ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb145.i

if.end9.sw.bb145.i_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb145.i

if.end9.sw.bb124.i_crit_edge169:                  ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb124.i

if.end9.sw.bb124.i_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb124.i

if.end9.sw.epilog.i_crit_edge168:                 ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.end9.sw.bb121.i_crit_edge167:                  ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb121.i

if.end9.sw.bb121.i_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb121.i

if.end9.sw.epilog.i_crit_edge166:                 ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.end9.sw.epilog.i_crit_edge165:                 ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.end9.sw.epilog.i_crit_edge164:                 ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.end9.sw.epilog.i_crit_edge163:                 ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.end9.sw.epilog.i_crit_edge162:                 ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.end9.sw.bb48.i_crit_edge161:                   ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb48.i

if.end9.sw.bb48.i_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb48.i

if.end9.sw.bb33.i_crit_edge160:                   ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb33.i

if.end9.sw.bb33.i_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb33.i

if.end9.sw.bb32.i_crit_edge159:                   ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb32.i

if.end9.sw.bb32.i_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb32.i

if.end9.sw.epilog.i_crit_edge:                    ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.end9.if.then12_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  %.pre = zext i16 %msglen to i32
  br label %if.then12

sw.bb.i:                                          ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb1.i:                                         ; preds = %if.end9
  %vf_ver = getelementptr %struct.i40e_vf, ptr %7, i32 %sub, i32 3
  %12 = ptrtoint ptr %vf_ver to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %vf_ver, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp.i = icmp eq i32 %13, 1
  br i1 %cmp.i, label %land.lhs.true.i, label %sw.bb1.i.sw.epilog.i_crit_edge

sw.bb1.i.sw.epilog.i_crit_edge:                   ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

land.lhs.true.i:                                  ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #11
  %minor.i = getelementptr %struct.i40e_vf, ptr %7, i32 %sub, i32 3, i32 1
  %14 = ptrtoint ptr %minor.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %minor.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %15)
  %cmp2.i = icmp eq i32 %15, 1
  %spec.select.i = select i1 %cmp2.i, i32 4, i32 0
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp2(i16 71, i16 %msglen)
  %cmp6.i = icmp ugt i16 %msglen, 71
  br i1 %cmp6.i, label %if.then8.i, label %sw.bb5.i.sw.epilog.i_crit_edge

sw.bb5.i.sw.epilog.i_crit_edge:                   ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then8.i:                                       ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #11
  %num_queue_pairs.i = getelementptr inbounds %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 1
  %16 = ptrtoint ptr %num_queue_pairs.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %num_queue_pairs.i, align 2
  %conv9.i = zext i16 %17 to i32
  %mul.i = shl nuw nsw i32 %conv9.i, 6
  %add.i = add nuw nsw i32 %mul.i, 72
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %cmp12.i = icmp eq i16 %17, 0
  br label %sw.epilog.i

sw.bb17.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp2(i16 13, i16 %msglen)
  %cmp19.i = icmp ugt i16 %msglen, 13
  br i1 %cmp19.i, label %if.then21.i, label %sw.bb17.i.sw.epilog.i_crit_edge

sw.bb17.i.sw.epilog.i_crit_edge:                  ; preds = %sw.bb17.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then21.i:                                      ; preds = %sw.bb17.i
  call void @__sanitizer_cov_trace_pc() #11
  %18 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %msg, align 2
  %conv22.i = zext i16 %19 to i32
  %mul23.i = mul nuw nsw i32 %conv22.i, 12
  %add24.i = add nuw nsw i32 %mul23.i, 14
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %cmp27.i = icmp eq i16 %19, 0
  br label %sw.epilog.i

sw.bb32.i:                                        ; preds = %if.end9.sw.bb32.i_crit_edge, %if.end9.sw.bb32.i_crit_edge159
  br label %sw.epilog.i

sw.bb33.i:                                        ; preds = %if.end9.sw.bb33.i_crit_edge, %if.end9.sw.bb33.i_crit_edge160
  call void @__sanitizer_cov_trace_const_cmp2(i16 11, i16 %msglen)
  %cmp35.i = icmp ugt i16 %msglen, 11
  br i1 %cmp35.i, label %if.then37.i, label %sw.bb33.i.sw.epilog.i_crit_edge

sw.bb33.i.sw.epilog.i_crit_edge:                  ; preds = %sw.bb33.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then37.i:                                      ; preds = %sw.bb33.i
  call void @__sanitizer_cov_trace_pc() #11
  %num_elements.i = getelementptr inbounds %struct.virtchnl_ether_addr_list, ptr %msg, i32 0, i32 1
  %20 = ptrtoint ptr %num_elements.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %num_elements.i, align 2
  %conv38.i = zext i16 %21 to i32
  %mul39.i = shl nuw nsw i32 %conv38.i, 3
  %add40.i = add nuw nsw i32 %mul39.i, 12
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %cmp43.i = icmp eq i16 %21, 0
  br label %sw.epilog.i

sw.bb48.i:                                        ; preds = %if.end9.sw.bb48.i_crit_edge, %if.end9.sw.bb48.i_crit_edge161
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %msglen)
  %cmp50.i = icmp ugt i16 %msglen, 5
  br i1 %cmp50.i, label %if.then52.i, label %sw.bb48.i.sw.epilog.i_crit_edge

sw.bb48.i.sw.epilog.i_crit_edge:                  ; preds = %sw.bb48.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then52.i:                                      ; preds = %sw.bb48.i
  call void @__sanitizer_cov_trace_pc() #11
  %num_elements53.i = getelementptr inbounds %struct.virtchnl_vlan_filter_list, ptr %msg, i32 0, i32 1
  %22 = ptrtoint ptr %num_elements53.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %num_elements53.i, align 2
  %conv54.i = zext i16 %23 to i32
  %mul55.i = shl nuw nsw i32 %conv54.i, 1
  %add56.i = add nuw nsw i32 %mul55.i, 6
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %cmp59.i = icmp eq i16 %23, 0
  br label %sw.epilog.i

sw.bb64.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb65.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb66.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %msglen)
  %tobool.not.i = icmp eq i16 %msglen, 0
  %conv68.i = zext i16 %msglen to i32
  br label %sw.epilog.i

sw.bb70.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp2(i16 15, i16 %msglen)
  %cmp72.i = icmp ugt i16 %msglen, 15
  br i1 %cmp72.i, label %if.then74.i, label %sw.bb70.i.sw.epilog.i_crit_edge

sw.bb70.i.sw.epilog.i_crit_edge:                  ; preds = %sw.bb70.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then74.i:                                      ; preds = %sw.bb70.i
  call void @__sanitizer_cov_trace_pc() #11
  %24 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %msg, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp76.i = icmp eq i32 %25, 0
  %26 = mul i32 %25, 12
  %add82.i = add i32 %26, 4
  %valid_len.0.i = select i1 %cmp76.i, i32 16, i32 %add82.i
  br label %sw.epilog.i

sw.bb84.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %msglen)
  %cmp86.i = icmp ugt i16 %msglen, 5
  br i1 %cmp86.i, label %if.then88.i, label %sw.bb84.i.sw.epilog.i_crit_edge

sw.bb84.i.sw.epilog.i_crit_edge:                  ; preds = %sw.bb84.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then88.i:                                      ; preds = %sw.bb84.i
  call void @__sanitizer_cov_trace_pc() #11
  %key_len.i = getelementptr inbounds %struct.virtchnl_rss_key, ptr %msg, i32 0, i32 1
  %27 = ptrtoint ptr %key_len.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %key_len.i, align 2
  %conv89.i = zext i16 %28 to i32
  %add91.i = add nuw nsw i32 %conv89.i, 5
  br label %sw.epilog.i

sw.bb93.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %msglen)
  %cmp95.i = icmp ugt i16 %msglen, 5
  br i1 %cmp95.i, label %if.then97.i, label %sw.bb93.i.sw.epilog.i_crit_edge

sw.bb93.i.sw.epilog.i_crit_edge:                  ; preds = %sw.bb93.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then97.i:                                      ; preds = %sw.bb93.i
  call void @__sanitizer_cov_trace_pc() #11
  %lut_entries.i = getelementptr inbounds %struct.virtchnl_rss_lut, ptr %msg, i32 0, i32 1
  %29 = ptrtoint ptr %lut_entries.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %lut_entries.i, align 2
  %conv98.i = zext i16 %30 to i32
  %add100.i = add nuw nsw i32 %conv98.i, 5
  br label %sw.epilog.i

sw.bb102.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb104.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb105.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp2(i16 23, i16 %msglen)
  %cmp107.i = icmp ugt i16 %msglen, 23
  br i1 %cmp107.i, label %if.then109.i, label %sw.bb105.i.sw.epilog.i_crit_edge

sw.bb105.i.sw.epilog.i_crit_edge:                 ; preds = %sw.bb105.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then109.i:                                     ; preds = %sw.bb105.i
  call void @__sanitizer_cov_trace_pc() #11
  %31 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %msg, align 8
  %sub110.i = shl i32 %32, 4
  %add112.i = or i32 %sub110.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp114.i = icmp eq i32 %32, 0
  br label %sw.epilog.i

sw.bb119.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb120.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb121.i:                                       ; preds = %if.end9.sw.bb121.i_crit_edge, %if.end9.sw.bb121.i_crit_edge167
  br label %sw.epilog.i

sw.bb122.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb123.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb124.i:                                       ; preds = %if.end9.sw.bb124.i_crit_edge, %if.end9.sw.bb124.i_crit_edge169
  call void @__sanitizer_cov_trace_const_cmp2(i16 39, i16 %msglen)
  %cmp126.i = icmp ugt i16 %msglen, 39
  br i1 %cmp126.i, label %if.then128.i, label %sw.bb124.i.sw.epilog.i_crit_edge

sw.bb124.i.sw.epilog.i_crit_edge:                 ; preds = %sw.bb124.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

if.then128.i:                                     ; preds = %sw.bb124.i
  call void @__sanitizer_cov_trace_pc() #11
  %num_elements130.i = getelementptr inbounds %struct.virtchnl_vlan_filter_list_v2, ptr %msg, i32 0, i32 1
  %33 = ptrtoint ptr %num_elements130.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %num_elements130.i, align 2
  %conv131.i = zext i16 %34 to i32
  %sub132.i = shl nuw nsw i32 %conv131.i, 5
  %add134.i = or i32 %sub132.i, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %34)
  %cmp137.i = icmp eq i16 %34, 0
  br label %sw.epilog.i

sw.bb145.i:                                       ; preds = %if.end9.sw.bb145.i_crit_edge, %if.end9.sw.bb145.i_crit_edge170, %if.end9.sw.bb145.i_crit_edge171, %if.end9.sw.bb145.i_crit_edge172
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb145.i, %if.then128.i, %sw.bb124.i.sw.epilog.i_crit_edge, %sw.bb123.i, %sw.bb122.i, %sw.bb121.i, %sw.bb120.i, %sw.bb119.i, %if.then109.i, %sw.bb105.i.sw.epilog.i_crit_edge, %sw.bb104.i, %sw.bb102.i, %if.then97.i, %sw.bb93.i.sw.epilog.i_crit_edge, %if.then88.i, %sw.bb84.i.sw.epilog.i_crit_edge, %if.then74.i, %sw.bb70.i.sw.epilog.i_crit_edge, %sw.bb66.i, %sw.bb65.i, %sw.bb64.i, %if.then52.i, %sw.bb48.i.sw.epilog.i_crit_edge, %if.then37.i, %sw.bb33.i.sw.epilog.i_crit_edge, %sw.bb32.i, %if.then21.i, %sw.bb17.i.sw.epilog.i_crit_edge, %if.then8.i, %sw.bb5.i.sw.epilog.i_crit_edge, %sw.bb4.i, %sw.bb3.i, %land.lhs.true.i, %sw.bb1.i.sw.epilog.i_crit_edge, %sw.bb.i, %if.end9.sw.epilog.i_crit_edge, %if.end9.sw.epilog.i_crit_edge162, %if.end9.sw.epilog.i_crit_edge163, %if.end9.sw.epilog.i_crit_edge164, %if.end9.sw.epilog.i_crit_edge165, %if.end9.sw.epilog.i_crit_edge166, %if.end9.sw.epilog.i_crit_edge168
  %valid_len.1.i = phi i32 [ 16, %sw.bb145.i ], [ %add134.i, %if.then128.i ], [ 40, %sw.bb124.i.sw.epilog.i_crit_edge ], [ 12, %sw.bb123.i ], [ 2616, %sw.bb122.i ], [ 2444, %sw.bb121.i ], [ 272, %sw.bb120.i ], [ 272, %sw.bb119.i ], [ %add112.i, %if.then109.i ], [ 24, %sw.bb105.i.sw.epilog.i_crit_edge ], [ 2, %sw.bb104.i ], [ 8, %sw.bb102.i ], [ %add100.i, %if.then97.i ], [ 6, %sw.bb93.i.sw.epilog.i_crit_edge ], [ %add91.i, %if.then88.i ], [ 6, %sw.bb84.i.sw.epilog.i_crit_edge ], [ %valid_len.0.i, %if.then74.i ], [ 16, %sw.bb70.i.sw.epilog.i_crit_edge ], [ 12, %sw.bb65.i ], [ 4, %sw.bb64.i ], [ %add56.i, %if.then52.i ], [ 6, %sw.bb48.i.sw.epilog.i_crit_edge ], [ %add40.i, %if.then37.i ], [ 12, %sw.bb33.i.sw.epilog.i_crit_edge ], [ 12, %sw.bb32.i ], [ %add24.i, %if.then21.i ], [ 14, %sw.bb17.i.sw.epilog.i_crit_edge ], [ %add.i, %if.then8.i ], [ 72, %sw.bb5.i.sw.epilog.i_crit_edge ], [ 40, %sw.bb4.i ], [ 24, %sw.bb3.i ], [ 0, %sw.bb1.i.sw.epilog.i_crit_edge ], [ 0, %if.end9.sw.epilog.i_crit_edge ], [ 0, %if.end9.sw.epilog.i_crit_edge162 ], [ 0, %if.end9.sw.epilog.i_crit_edge163 ], [ 0, %if.end9.sw.epilog.i_crit_edge164 ], [ 0, %if.end9.sw.epilog.i_crit_edge165 ], [ 0, %if.end9.sw.epilog.i_crit_edge166 ], [ 0, %if.end9.sw.epilog.i_crit_edge168 ], [ 8, %sw.bb.i ], [ %spec.select.i, %land.lhs.true.i ], [ %conv68.i, %sw.bb66.i ]
  %err_msg_format.7.off0.i = phi i1 [ false, %sw.bb145.i ], [ %cmp137.i, %if.then128.i ], [ false, %sw.bb124.i.sw.epilog.i_crit_edge ], [ false, %sw.bb123.i ], [ false, %sw.bb122.i ], [ false, %sw.bb121.i ], [ false, %sw.bb120.i ], [ false, %sw.bb119.i ], [ %cmp114.i, %if.then109.i ], [ false, %sw.bb105.i.sw.epilog.i_crit_edge ], [ false, %sw.bb104.i ], [ false, %sw.bb102.i ], [ false, %if.then97.i ], [ false, %sw.bb93.i.sw.epilog.i_crit_edge ], [ false, %if.then88.i ], [ false, %sw.bb84.i.sw.epilog.i_crit_edge ], [ %cmp76.i, %if.then74.i ], [ false, %sw.bb70.i.sw.epilog.i_crit_edge ], [ false, %sw.bb65.i ], [ false, %sw.bb64.i ], [ %cmp59.i, %if.then52.i ], [ false, %sw.bb48.i.sw.epilog.i_crit_edge ], [ %cmp43.i, %if.then37.i ], [ false, %sw.bb33.i.sw.epilog.i_crit_edge ], [ false, %sw.bb32.i ], [ %cmp27.i, %if.then21.i ], [ false, %sw.bb17.i.sw.epilog.i_crit_edge ], [ %cmp12.i, %if.then8.i ], [ false, %sw.bb5.i.sw.epilog.i_crit_edge ], [ false, %sw.bb4.i ], [ false, %sw.bb3.i ], [ false, %sw.bb1.i.sw.epilog.i_crit_edge ], [ false, %if.end9.sw.epilog.i_crit_edge ], [ false, %if.end9.sw.epilog.i_crit_edge162 ], [ false, %if.end9.sw.epilog.i_crit_edge163 ], [ false, %if.end9.sw.epilog.i_crit_edge164 ], [ false, %if.end9.sw.epilog.i_crit_edge165 ], [ false, %if.end9.sw.epilog.i_crit_edge166 ], [ false, %if.end9.sw.epilog.i_crit_edge168 ], [ false, %sw.bb.i ], [ false, %land.lhs.true.i ], [ %tobool.not.i, %sw.bb66.i ]
  %err_msg_format.7.off0.not.i = xor i1 %err_msg_format.7.off0.i, true
  %conv149.i = zext i16 %msglen to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %valid_len.1.i, i32 %conv149.i)
  %cmp150.not.i = icmp eq i32 %valid_len.1.i, %conv149.i
  %or.cond.i = select i1 %err_msg_format.7.off0.not.i, i1 %cmp150.not.i, i1 false
  br i1 %or.cond.i, label %if.end15, label %sw.epilog.i.if.then12_crit_edge

sw.epilog.i.if.then12_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then12

if.then12:                                        ; preds = %sw.epilog.i.if.then12_crit_edge, %if.end9.if.then12_crit_edge
  %conv14.pre-phi = phi i32 [ %.pre, %if.end9.if.then12_crit_edge ], [ %conv149.i, %sw.epilog.i.if.then12_crit_edge ]
  %cond = phi i32 [ -1, %if.end9.if.then12_crit_edge ], [ -22, %sw.epilog.i.if.then12_crit_edge ]
  %call13 = tail call fastcc i32 @i40e_vc_send_resp_to_vf(ptr noundef %arrayidx, i32 noundef %v_opcode, i32 noundef -5)
  %35 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pf, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %36, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.14, i32 noundef %sub, i32 noundef %v_opcode, i32 noundef %conv14.pre-phi) #12
  br label %cleanup

if.end15:                                         ; preds = %sw.epilog.i
  %37 = zext i32 %v_opcode to i64
  call void @__sanitizer_cov_trace_switch(i64 %37, ptr @__sancov_gen_cov_switch_values.292)
  switch i32 %v_opcode, label %do.end73 [
    i32 1, label %sw.bb16
    i32 3, label %sw.bb18
    i32 2, label %sw.bb20
    i32 14, label %sw.bb21
    i32 6, label %sw.bb23
    i32 7, label %sw.bb25
    i32 8, label %sw.bb27
    i32 9, label %sw.bb29
    i32 10, label %sw.bb31
    i32 11, label %sw.bb33
    i32 12, label %sw.bb35
    i32 13, label %sw.bb37
    i32 15, label %sw.bb39
    i32 20, label %sw.bb41
    i32 21, label %sw.bb43
    i32 22, label %sw.bb45
    i32 23, label %sw.bb47
    i32 24, label %sw.bb49
    i32 25, label %sw.bb51
    i32 26, label %sw.bb53
    i32 27, label %sw.bb55
    i32 28, label %sw.bb57
    i32 29, label %sw.bb59
    i32 30, label %sw.bb61
    i32 31, label %sw.bb63
    i32 32, label %sw.bb65
    i32 33, label %sw.bb67
  ]

sw.bb16:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call17 = tail call fastcc i32 @i40e_vc_get_version_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb18:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call19 = tail call fastcc i32 @i40e_vc_get_vf_resources_msg(ptr noundef %arrayidx, ptr noundef %msg)
  tail call fastcc void @i40e_vc_notify_vf_link_state(ptr noundef %arrayidx)
  br label %cleanup

sw.bb20:                                          ; preds = %if.end15
  %38 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx, align 8
  %arrayidx.i.i = getelementptr %struct.i40e_pf, ptr %39, i32 0, i32 2, i32 1
  %40 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %arrayidx.i.i, align 4
  %42 = and i32 %41, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool2.not.i = icmp eq i32 %42, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %sw.bb20.cleanup_crit_edge

sw.bb20.cleanup_crit_edge:                        ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end4.i:                                        ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #11
  %call5.i = tail call zeroext i1 @i40e_reset_vf(ptr noundef %arrayidx, i1 noundef zeroext false) #9
  br label %cleanup

sw.bb21:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call22 = tail call fastcc i32 @i40e_vc_config_promiscuous_mode_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb23:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call24 = tail call fastcc i32 @i40e_vc_config_queues_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb25:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call26 = tail call fastcc i32 @i40e_vc_config_irq_map_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb27:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call28 = tail call fastcc i32 @i40e_vc_enable_queues_msg(ptr noundef %arrayidx, ptr noundef %msg)
  tail call fastcc void @i40e_vc_notify_vf_link_state(ptr noundef %arrayidx)
  br label %cleanup

sw.bb29:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call30 = tail call fastcc i32 @i40e_vc_disable_queues_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb31:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call32 = tail call fastcc i32 @i40e_vc_add_mac_addr_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb33:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call34 = tail call fastcc i32 @i40e_vc_del_mac_addr_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb35:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call36 = tail call fastcc i32 @i40e_vc_add_vlan_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb37:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call38 = tail call fastcc i32 @i40e_vc_remove_vlan_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb39:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call40 = tail call fastcc i32 @i40e_vc_get_stats_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb41:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call42 = tail call fastcc i32 @i40e_vc_iwarp_msg(ptr noundef %arrayidx, ptr noundef %msg, i16 noundef zeroext %msglen)
  br label %cleanup

sw.bb43:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call44 = tail call fastcc i32 @i40e_vc_iwarp_qvmap_msg(ptr noundef %arrayidx, ptr noundef %msg, i1 noundef zeroext true)
  br label %cleanup

sw.bb45:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call46 = tail call fastcc i32 @i40e_vc_iwarp_qvmap_msg(ptr noundef %arrayidx, ptr noundef %msg, i1 noundef zeroext false)
  br label %cleanup

sw.bb47:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call48 = tail call fastcc i32 @i40e_vc_config_rss_key(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb49:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call50 = tail call fastcc i32 @i40e_vc_config_rss_lut(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb51:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call52 = tail call fastcc i32 @i40e_vc_get_rss_hena(ptr noundef %arrayidx)
  br label %cleanup

sw.bb53:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call54 = tail call fastcc i32 @i40e_vc_set_rss_hena(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb55:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call56 = tail call fastcc i32 @i40e_vc_enable_vlan_stripping(ptr noundef %arrayidx)
  br label %cleanup

sw.bb57:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call58 = tail call fastcc i32 @i40e_vc_disable_vlan_stripping(ptr noundef %arrayidx)
  br label %cleanup

sw.bb59:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call60 = tail call fastcc i32 @i40e_vc_request_queues_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb61:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call62 = tail call fastcc i32 @i40e_vc_add_qch_msg(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb63:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call64 = tail call fastcc i32 @i40e_vc_del_qch_msg(ptr noundef %arrayidx)
  br label %cleanup

sw.bb65:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call66 = tail call fastcc i32 @i40e_vc_add_cloud_filter(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

sw.bb67:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %call68 = tail call fastcc i32 @i40e_vc_del_cloud_filter(ptr noundef %arrayidx, ptr noundef %msg)
  br label %cleanup

do.end73:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %43 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pf, align 8
  %dev75 = getelementptr inbounds %struct.pci_dev, ptr %44, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev75, ptr noundef nonnull @.str.17, i32 noundef %v_opcode, i32 noundef %sub) #12
  %call76 = tail call fastcc i32 @i40e_vc_send_resp_to_vf(ptr noundef %arrayidx, i32 noundef %v_opcode, i32 noundef -60)
  br label %cleanup

cleanup:                                          ; preds = %do.end73, %sw.bb67, %sw.bb65, %sw.bb63, %sw.bb61, %sw.bb59, %sw.bb57, %sw.bb55, %sw.bb53, %sw.bb51, %sw.bb49, %sw.bb47, %sw.bb45, %sw.bb43, %sw.bb41, %sw.bb39, %sw.bb37, %sw.bb35, %sw.bb33, %sw.bb31, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %if.end4.i, %sw.bb20.cleanup_crit_edge, %sw.bb18, %sw.bb16, %if.then12, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -5, %if.end.cleanup_crit_edge ], [ %call76, %do.end73 ], [ %call68, %sw.bb67 ], [ %call66, %sw.bb65 ], [ %call64, %sw.bb63 ], [ %call62, %sw.bb61 ], [ %call60, %sw.bb59 ], [ %call58, %sw.bb57 ], [ %call56, %sw.bb55 ], [ %call54, %sw.bb53 ], [ %call52, %sw.bb51 ], [ %call50, %sw.bb49 ], [ %call48, %sw.bb47 ], [ %call46, %sw.bb45 ], [ %call44, %sw.bb43 ], [ %call42, %sw.bb41 ], [ %call40, %sw.bb39 ], [ %call38, %sw.bb37 ], [ %call36, %sw.bb35 ], [ %call34, %sw.bb33 ], [ %call32, %sw.bb31 ], [ %call30, %sw.bb29 ], [ %call28, %sw.bb27 ], [ %call26, %sw.bb25 ], [ %call24, %sw.bb23 ], [ %call22, %sw.bb21 ], [ %call19, %sw.bb18 ], [ %call17, %sw.bb16 ], [ 0, %sw.bb20.cleanup_crit_edge ], [ 0, %if.end4.i ], [ %cond, %if.then12 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_send_resp_to_vf(ptr noundef readonly %vf, i32 noundef %opcode, i32 noundef %retval1) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i, label %entry.i40e_vc_send_msg_to_vf.exit_crit_edge, label %lor.lhs.false.i

entry.i40e_vc_send_msg_to_vf.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

lor.lhs.false.i:                                  ; preds = %entry
  %vf_id.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %0 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %vf_id.i, align 4
  %conv.i = sext i16 %1 to i32
  %2 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 86
  %4 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %conv.i)
  %cmp.not.i = icmp sgt i32 %5, %conv.i
  br i1 %cmp.not.i, label %if.end.i, label %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge

lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  %hw4.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1, i32 15, i32 33
  %6 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vf_base_id.i, align 8
  %8 = trunc i32 %7 to i16
  %conv7.i = add i16 %1, %8
  %call.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i, i16 noundef zeroext %conv7.i, i32 noundef %opcode, i32 noundef %retval1, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.not.i, label %if.end.i.i40e_vc_send_msg_to_vf.exit_crit_edge, label %do.end.i

if.end.i.i40e_vc_send_msg_to_vf.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %3, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  %11 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %vf_id.i, align 4
  %conv11.i = sext i16 %12 to i32
  %asq_last_status.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1, i32 23, i32 14
  %13 = ptrtoint ptr %asq_last_status.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %asq_last_status.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i, i32 noundef %14) #12
  br label %i40e_vc_send_msg_to_vf.exit

i40e_vc_send_msg_to_vf.exit:                      ; preds = %do.end.i, %if.end.i.i40e_vc_send_msg_to_vf.exit_crit_edge, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge, %entry.i40e_vc_send_msg_to_vf.exit_crit_edge
  %retval.0.i = phi i32 [ -5, %do.end.i ], [ -22, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ -22, %entry.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ 0, %if.end.i.i40e_vc_send_msg_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_get_version_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.virtchnl_version_info, align 8
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info) #9
  %0 = ptrtoint ptr %info to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 4294967297, ptr %info, align 8
  %vf_ver = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 3
  %1 = ptrtoint ptr %msg to i32
  call void @__asan_loadN_noabort(i32 %1, i32 8)
  %2 = load i64, ptr %msg, align 4
  %3 = ptrtoint ptr %vf_ver to i32
  call void @__asan_storeN_noabort(i32 %3, i32 8)
  store i64 %2, ptr %vf_ver, align 4
  %.mask = and i64 %2, -4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %.mask)
  %cmp = icmp eq i64 %.mask, 4294967296
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %minor = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 3, i32 1
  %4 = ptrtoint ptr %minor to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %minor, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp3 = icmp eq i32 %5, 0
  br i1 %cmp3, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %minor4 = getelementptr inbounds %struct.virtchnl_version_info, ptr %info, i32 0, i32 1
  %6 = ptrtoint ptr %minor4 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %minor4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i, label %if.end.i40e_vc_send_msg_to_vf.exit_crit_edge, label %lor.lhs.false.i

if.end.i40e_vc_send_msg_to_vf.exit_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

lor.lhs.false.i:                                  ; preds = %if.end
  %vf_id.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %7 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %vf_id.i, align 4
  %conv.i = sext i16 %8 to i32
  %9 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %10, i32 0, i32 86
  %11 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %conv.i)
  %cmp.not.i = icmp sgt i32 %12, %conv.i
  br i1 %cmp.not.i, label %if.end.i, label %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge

lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  %hw4.i = getelementptr inbounds %struct.i40e_pf, ptr %10, i32 0, i32 1
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %10, i32 0, i32 1, i32 15, i32 33
  %13 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vf_base_id.i, align 8
  %15 = trunc i32 %14 to i16
  %conv7.i = add i16 %8, %15
  %call.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i, i16 noundef zeroext %conv7.i, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %info, i16 noundef zeroext 8, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.not.i, label %if.end.i.i40e_vc_send_msg_to_vf.exit_crit_edge, label %do.end.i

if.end.i.i40e_vc_send_msg_to_vf.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %10, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44
  %18 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vf_id.i, align 4
  %conv11.i = sext i16 %19 to i32
  %asq_last_status.i = getelementptr inbounds %struct.i40e_pf, ptr %10, i32 0, i32 1, i32 23, i32 14
  %20 = ptrtoint ptr %asq_last_status.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %asq_last_status.i, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i, i32 noundef %21) #12
  br label %i40e_vc_send_msg_to_vf.exit

i40e_vc_send_msg_to_vf.exit:                      ; preds = %do.end.i, %if.end.i.i40e_vc_send_msg_to_vf.exit_crit_edge, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge, %if.end.i40e_vc_send_msg_to_vf.exit_crit_edge
  %retval.0.i = phi i32 [ -5, %do.end.i ], [ -22, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ -22, %if.end.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ 0, %if.end.i.i40e_vc_send_msg_to_vf.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info) #9
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_get_vf_resources_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 52) #14
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %if.end.err_crit_edge, label %if.end5

if.end.err_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end5:                                          ; preds = %if.end
  %vf_ver = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 3
  %9 = ptrtoint ptr %vf_ver to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vf_ver, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp = icmp eq i32 %10, 1
  br i1 %cmp, label %land.lhs.true, label %if.end5.if.end10_crit_edge

if.end5.if.end10_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end10

land.lhs.true:                                    ; preds = %if.end5
  %minor = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 3, i32 1
  %11 = ptrtoint ptr %minor to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %minor, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp7 = icmp eq i32 %12, 1
  br i1 %cmp7, label %if.then8, label %land.lhs.true.if.end10_crit_edge

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end10

if.then8:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %13 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %msg, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %land.lhs.true.if.end10_crit_edge, %if.end5.if.end10_crit_edge
  %.sink = phi i32 [ %14, %if.then8 ], [ 65553, %land.lhs.true.if.end10_crit_edge ], [ 65553, %if.end5.if.end10_crit_edge ]
  %driver_caps9 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 4
  %15 = ptrtoint ptr %driver_caps9 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %.sink, ptr %driver_caps9, align 4
  %vf_cap_flags = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 4
  %16 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 129, ptr %vf_cap_flags, align 8
  %vsi12 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %17 = ptrtoint ptr %vsi12 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vsi12, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %19 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %20 to i32
  %arrayidx = getelementptr ptr, ptr %18, i32 %idxprom
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx, align 4
  %pvid = getelementptr inbounds %struct.i40e_vsi, ptr %22, i32 0, i32 51, i32 5
  %23 = ptrtoint ptr %pvid to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %pvid, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %tobool13.not = icmp eq i16 %24, 0
  br i1 %tobool13.not, label %if.then14, label %if.end10.if.end17_crit_edge

if.end10.if.end17_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then14:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  %25 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 65665, ptr %vf_cap_flags, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %if.end10.if.end17_crit_edge
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %26 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %27 to i32
  %call18 = tail call i32 @i40e_vf_client_capable(ptr noundef %1, i32 noundef %conv) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end17.if.else26_crit_edge, label %land.lhs.true20

if.end17.if.else26_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else26

land.lhs.true20:                                  ; preds = %if.end17
  %driver_caps21 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 4
  %28 = ptrtoint ptr %driver_caps21 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %driver_caps21, align 4
  %and = and i32 %29, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool22.not = icmp eq i32 %and, 0
  br i1 %tobool22.not, label %land.lhs.true20.if.else26_crit_edge, label %if.then23

land.lhs.true20.if.else26_crit_edge:              ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else26

if.then23:                                        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #11
  %30 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vf_cap_flags, align 8
  %or25 = or i32 %31, 2
  store i32 %or25, ptr %vf_cap_flags, align 8
  tail call void @_set_bit(i32 noundef 2, ptr noundef %vf_states.i) #9
  br label %if.end28

if.else26:                                        ; preds = %land.lhs.true20.if.else26_crit_edge, %if.end17.if.else26_crit_edge
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %vf_states.i) #9
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then23
  %driver_caps29 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 4
  %32 = ptrtoint ptr %driver_caps29 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %driver_caps29, align 4
  %and30 = and i32 %33, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %if.else35, label %if.then32

if.then32:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  %34 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %vf_cap_flags, align 8
  %or34 = or i32 %35, 524288
  br label %if.end49

if.else35:                                        ; preds = %if.end28
  %hw_features = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 53
  %36 = ptrtoint ptr %hw_features to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %hw_features, align 4
  %and36 = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  %and40 = and i32 %33, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  %or.cond = select i1 %tobool37.not, i1 true, i1 %tobool41.not
  %38 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %vf_cap_flags, align 8
  br i1 %or.cond, label %if.else45, label %if.then42

if.then42:                                        ; preds = %if.else35
  call void @__sanitizer_cov_trace_pc() #11
  %or44 = or i32 %39, 8
  br label %if.end49

if.else45:                                        ; preds = %if.else35
  call void @__sanitizer_cov_trace_pc() #11
  %or47 = or i32 %39, 16
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then42, %if.then32
  %or44.sink = phi i32 [ %or44, %if.then42 ], [ %or47, %if.else45 ], [ %or34, %if.then32 ]
  %40 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %or44.sink, ptr %vf_cap_flags, align 8
  %hw_features50 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 53
  %41 = ptrtoint ptr %hw_features50 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %hw_features50, align 4
  %and51 = and i32 %42, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and51)
  %tobool52.not = icmp eq i32 %and51, 0
  %and55 = and i32 %33, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and55)
  %tobool56.not = icmp eq i32 %and55, 0
  %or.cond212 = select i1 %tobool52.not, i1 true, i1 %tobool56.not
  br i1 %or.cond212, label %if.end49.if.end61_crit_edge, label %if.then57

if.end49.if.end61_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end61

if.then57:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #11
  %43 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %vf_cap_flags, align 8
  %or59 = or i32 %44, 262144
  store i32 %or59, ptr %vf_cap_flags, align 8
  br label %if.end61

if.end61:                                         ; preds = %if.then57, %if.end49.if.end61_crit_edge
  %and63 = and i32 %33, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and63)
  %tobool64.not = icmp eq i32 %and63, 0
  br i1 %tobool64.not, label %if.end61.if.end68_crit_edge, label %if.then65

if.end61.if.end68_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end68

if.then65:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #11
  %45 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %vf_cap_flags, align 8
  %or67 = or i32 %46, 1048576
  store i32 %or67, ptr %vf_cap_flags, align 8
  br label %if.end68

if.end68:                                         ; preds = %if.then65, %if.end61.if.end68_crit_edge
  %47 = ptrtoint ptr %hw_features50 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %hw_features50, align 4
  %and70 = and i32 %48, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70)
  %tobool71.not = icmp eq i32 %and70, 0
  %and74 = and i32 %33, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and74)
  %tobool75.not = icmp eq i32 %and74, 0
  %or.cond213 = select i1 %tobool71.not, i1 true, i1 %tobool75.not
  br i1 %or.cond213, label %if.end68.if.end79_crit_edge, label %if.then76

if.end68.if.end79_crit_edge:                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end79

if.then76:                                        ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #11
  %49 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %vf_cap_flags, align 8
  %or78 = or i32 %50, 2097152
  store i32 %or78, ptr %vf_cap_flags, align 8
  br label %if.end79

if.end79:                                         ; preds = %if.then76, %if.end68.if.end79_crit_edge
  %and81 = and i32 %33, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and81)
  %tobool82.not = icmp eq i32 %and81, 0
  br i1 %tobool82.not, label %if.end79.if.end92_crit_edge, label %if.then83

if.end79.if.end92_crit_edge:                      ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end92

if.then83:                                        ; preds = %if.end79
  %flags = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 54
  %51 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %flags, align 8
  %and84 = and i32 %52, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  br i1 %tobool85.not, label %if.end89, label %do.end

do.end:                                           ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #11
  %53 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %54, i32 0, i32 44
  %55 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %vf_id, align 4
  %conv88 = sext i16 %56 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.133, i32 noundef %conv88) #12
  br label %err

if.end89:                                         ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #11
  %57 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %vf_cap_flags, align 8
  %or91 = or i32 %58, 131072
  store i32 %or91, ptr %vf_cap_flags, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.end89, %if.end79.if.end92_crit_edge
  %59 = ptrtoint ptr %hw_features50 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %hw_features50, align 4
  %and94 = and i32 %60, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and94)
  %tobool95.not = icmp eq i32 %and94, 0
  %and98 = and i32 %33, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and98)
  %tobool99.not = icmp eq i32 %and98, 0
  %or.cond214 = select i1 %tobool95.not, i1 true, i1 %tobool99.not
  br i1 %or.cond214, label %if.end92.if.end104_crit_edge, label %if.then100

if.end92.if.end104_crit_edge:                     ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end104

if.then100:                                       ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #11
  %61 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %vf_cap_flags, align 8
  %or102 = or i32 %62, 32
  store i32 %or102, ptr %vf_cap_flags, align 8
  br label %if.end104

if.end104:                                        ; preds = %if.then100, %if.end92.if.end104_crit_edge
  %and106 = and i32 %33, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and106)
  %tobool107.not = icmp eq i32 %and106, 0
  br i1 %tobool107.not, label %if.end104.if.end111_crit_edge, label %if.then108

if.end104.if.end111_crit_edge:                    ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end111

if.then108:                                       ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #11
  %63 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %vf_cap_flags, align 8
  %or110 = or i32 %64, 64
  store i32 %or110, ptr %vf_cap_flags, align 8
  br label %if.end111

if.end111:                                        ; preds = %if.then108, %if.end104.if.end111_crit_edge
  %and113 = and i32 %33, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and113)
  %tobool114.not = icmp eq i32 %and113, 0
  br i1 %tobool114.not, label %if.end111.if.end118_crit_edge, label %if.then115

if.end111.if.end118_crit_edge:                    ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end118

if.then115:                                       ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #11
  %65 = ptrtoint ptr %vf_cap_flags to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %vf_cap_flags, align 8
  %or117 = or i32 %66, 8388608
  store i32 %or117, ptr %vf_cap_flags, align 8
  br label %if.end118

if.end118:                                        ; preds = %if.then115, %if.end111.if.end118_crit_edge
  %67 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 1, ptr %call7.i.i, align 8
  %num_queue_pairs = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 12
  %68 = ptrtoint ptr %num_queue_pairs to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %num_queue_pairs, align 2
  %conv121 = zext i8 %69 to i16
  %num_queue_pairs122 = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 1
  %70 = ptrtoint ptr %num_queue_pairs122 to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 %conv121, ptr %num_queue_pairs122, align 2
  %num_msix_vectors_vf = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 15, i32 39
  %71 = ptrtoint ptr %num_msix_vectors_vf to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %num_msix_vectors_vf, align 8
  %conv123 = trunc i32 %72 to i16
  %max_vectors = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 2
  %73 = ptrtoint ptr %max_vectors to i32
  call void @__asan_store2_noabort(i32 %73)
  store i16 %conv123, ptr %max_vectors, align 4
  %rss_key_size = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 5
  %74 = ptrtoint ptr %rss_key_size to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 52, ptr %rss_key_size, align 4
  %rss_lut_size = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 6
  %75 = ptrtoint ptr %rss_lut_size to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 64, ptr %rss_lut_size, align 8
  %76 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %lan_vsi_idx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %77)
  %tobool125.not = icmp eq i16 %77, 0
  br i1 %tobool125.not, label %if.end118.if.end140_crit_edge, label %if.then126

if.end118.if.end140_crit_edge:                    ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end140

if.then126:                                       ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #11
  %lan_vsi_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 11
  %78 = ptrtoint ptr %lan_vsi_id to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %lan_vsi_id, align 8
  %vsi_res = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 7
  %80 = ptrtoint ptr %vsi_res to i32
  call void @__asan_store2_noabort(i32 %80)
  store i16 %79, ptr %vsi_res, align 4
  %vsi_type = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 7, i32 0, i32 2
  %81 = ptrtoint ptr %vsi_type to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 6, ptr %vsi_type, align 8
  %alloc_queue_pairs = getelementptr inbounds %struct.i40e_vsi, ptr %22, i32 0, i32 42
  %82 = ptrtoint ptr %alloc_queue_pairs to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %alloc_queue_pairs, align 2
  %num_queue_pairs132 = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 7, i32 0, i32 1
  %84 = ptrtoint ptr %num_queue_pairs132 to i32
  call void @__asan_store2_noabort(i32 %84)
  store i16 %83, ptr %num_queue_pairs132, align 2
  %qs_handle = getelementptr inbounds %struct.i40e_vsi, ptr %22, i32 0, i32 51, i32 23
  %85 = ptrtoint ptr %qs_handle to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %qs_handle, align 4
  %87 = tail call i16 @llvm.bswap.i16(i16 %86)
  %qset_handle = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 7, i32 0, i32 3
  %88 = ptrtoint ptr %qset_handle to i32
  call void @__asan_store2_noabort(i32 %88)
  store i16 %87, ptr %qset_handle, align 4
  %default_mac_addr = getelementptr inbounds %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 7, i32 0, i32 4
  %default_lan_addr = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 6
  %89 = ptrtoint ptr %default_lan_addr to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %default_lan_addr, align 4
  %91 = ptrtoint ptr %default_mac_addr to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %90, ptr %default_mac_addr, align 4
  %add.ptr.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 6, i32 0, i32 4
  %92 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %92)
  %93 = load i16, ptr %add.ptr.i, align 2
  %add.ptr1.i = getelementptr %struct.virtchnl_vf_resource, ptr %call7.i.i, i32 0, i32 7, i32 0, i32 4, i32 4
  %94 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %94)
  store i16 %93, ptr %add.ptr1.i, align 2
  br label %if.end140

if.end140:                                        ; preds = %if.then126, %if.end118.if.end140_crit_edge
  tail call void @_set_bit(i32 noundef 1, ptr noundef %vf_states.i) #9
  br label %err

err:                                              ; preds = %if.end140, %do.end, %if.end.err_crit_edge, %i40e_sync_vf_state.exit.err_crit_edge
  %vfres.0 = phi ptr [ %call7.i.i, %do.end ], [ %call7.i.i, %if.end140 ], [ null, %i40e_sync_vf_state.exit.err_crit_edge ], [ null, %if.end.err_crit_edge ]
  %aq_ret.0 = phi i32 [ -5, %do.end ], [ 0, %if.end140 ], [ -5, %i40e_sync_vf_state.exit.err_crit_edge ], [ -18, %if.end.err_crit_edge ]
  %len.0 = phi i16 [ 52, %do.end ], [ 52, %if.end140 ], [ 0, %i40e_sync_vf_state.exit.err_crit_edge ], [ 0, %if.end.err_crit_edge ]
  %tobool.not.i208 = icmp eq ptr %vf, null
  br i1 %tobool.not.i208, label %err.i40e_vc_send_msg_to_vf.exit_crit_edge, label %lor.lhs.false.i

err.i40e_vc_send_msg_to_vf.exit_crit_edge:        ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

lor.lhs.false.i:                                  ; preds = %err
  %vf_id.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %95 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %vf_id.i, align 4
  %conv.i = sext i16 %96 to i32
  %97 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %98, i32 0, i32 86
  %99 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %100, i32 %conv.i)
  %cmp.not.i = icmp sgt i32 %100, %conv.i
  br i1 %cmp.not.i, label %if.end.i209, label %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge

lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

if.end.i209:                                      ; preds = %lor.lhs.false.i
  %hw4.i = getelementptr inbounds %struct.i40e_pf, ptr %98, i32 0, i32 1
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %98, i32 0, i32 1, i32 15, i32 33
  %101 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %vf_base_id.i, align 8
  %103 = trunc i32 %102 to i16
  %conv7.i = add i16 %96, %103
  %call.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i, i16 noundef zeroext %conv7.i, i32 noundef 3, i32 noundef %aq_ret.0, ptr noundef %vfres.0, i16 noundef zeroext %len.0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.not.i, label %if.end.i209.i40e_vc_send_msg_to_vf.exit_crit_edge, label %do.end.i

if.end.i209.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %if.end.i209
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

do.end.i:                                         ; preds = %if.end.i209
  call void @__sanitizer_cov_trace_pc() #11
  %104 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %98, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %105, i32 0, i32 44
  %106 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %106)
  %107 = load i16, ptr %vf_id.i, align 4
  %conv11.i = sext i16 %107 to i32
  %asq_last_status.i = getelementptr inbounds %struct.i40e_pf, ptr %98, i32 0, i32 1, i32 23, i32 14
  %108 = ptrtoint ptr %asq_last_status.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %asq_last_status.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i, i32 noundef %109) #12
  br label %i40e_vc_send_msg_to_vf.exit

i40e_vc_send_msg_to_vf.exit:                      ; preds = %do.end.i, %if.end.i209.i40e_vc_send_msg_to_vf.exit_crit_edge, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge, %err.i40e_vc_send_msg_to_vf.exit_crit_edge
  %retval.0.i210 = phi i32 [ -5, %do.end.i ], [ -22, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ -22, %err.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ 0, %if.end.i209.i40e_vc_send_msg_to_vf.exit_crit_edge ]
  tail call void @kfree(ptr noundef %vfres.0) #9
  ret i32 %retval.0.i210
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @i40e_vc_reset_vf(ptr noundef %vf, i1 noundef zeroext %notify_vf) unnamed_addr #0 align 64 {
entry:
  %pfe.i = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  br i1 %notify_vf, label %if.then, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe.i) #9
  %2 = getelementptr inbounds i8, ptr %pfe.i, i32 4
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_storeN_noabort(i32 %3, i32 8)
  store i64 -1, ptr %2, align 4
  %tobool.not.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i, label %if.then.i40e_vc_notify_vf_reset.exit_crit_edge, label %lor.lhs.false.i

if.then.i40e_vc_notify_vf_reset.exit_crit_edge:   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit

lor.lhs.false.i:                                  ; preds = %if.then
  %vf_id.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %4 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vf_id.i, align 4
  %conv.i = sext i16 %5 to i32
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 86
  %6 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %conv.i)
  %cmp.not.i = icmp sgt i32 %7, %conv.i
  br i1 %cmp.not.i, label %if.end.i, label %lor.lhs.false.i.i40e_vc_notify_vf_reset.exit_crit_edge

lor.lhs.false.i.i40e_vc_notify_vf_reset.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  %8 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %vf_states.i, align 4
  %and1.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool2.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i, label %if.end.i.if.end7.i_crit_edge

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %10 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %vf_states.i, align 4
  %12 = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool5.not.i = icmp eq i32 %12, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i.i40e_vc_notify_vf_reset.exit_crit_edge, label %land.lhs.true.i.if.end7.i_crit_edge

land.lhs.true.i.if.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i

land.lhs.true.i.i40e_vc_notify_vf_reset.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit

if.end7.i:                                        ; preds = %land.lhs.true.i.if.end7.i_crit_edge, %if.end.i.if.end7.i_crit_edge
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 15, i32 33
  %13 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vf_base_id.i, align 8
  %15 = ptrtoint ptr %pfe.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 2, ptr %pfe.i, align 4
  %severity.i = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe.i, i32 0, i32 2
  %16 = ptrtoint ptr %severity.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 255, ptr %severity.i, align 4
  %hw12.i = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %17 = trunc i32 %14 to i16
  %conv13.i = add i16 %5, %17
  %call14.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw12.i, i16 noundef zeroext %conv13.i, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe.i, i16 noundef zeroext 16, ptr noundef null) #9
  br label %i40e_vc_notify_vf_reset.exit

i40e_vc_notify_vf_reset.exit:                     ; preds = %if.end7.i, %land.lhs.true.i.i40e_vc_notify_vf_reset.exit_crit_edge, %lor.lhs.false.i.i40e_vc_notify_vf_reset.exit_crit_edge, %if.then.i40e_vc_notify_vf_reset.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe.i) #9
  br label %for.body

for.body:                                         ; preds = %i40e_vc_notify_vf_reset.exit, %entry.for.body_crit_edge
  %arrayidx.i = getelementptr %struct.i40e_pf, ptr %1, i32 0, i32 2, i32 1
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %arrayidx.i, align 4
  %20 = and i32 %19, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool2.not = icmp eq i32 %20, 0
  br i1 %tobool2.not, label %if.end4, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end4:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %call5 = call zeroext i1 @i40e_reset_vf(ptr noundef %vf, i1 noundef zeroext false)
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %for.body.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_config_promiscuous_mode_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_out_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_out_crit_edge:        ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_out

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %vf_caps = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 15
  %8 = ptrtoint ptr %vf_caps to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %vf_caps, align 4
  %and1.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %do.end, label %if.end4

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %12 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %13 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.138, i32 noundef %conv) #12
  br label %err_out

if.end4:                                          ; preds = %if.end
  %flags = getelementptr inbounds %struct.virtchnl_promisc_info, ptr %msg, i32 0, i32 1
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %flags, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %15)
  %cmp = icmp ugt i16 %15, 3
  br i1 %cmp, label %if.end4.err_out_crit_edge, label %if.end8

if.end4.err_out_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_out

if.end8:                                          ; preds = %if.end4
  %16 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %msg, align 2
  %18 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %19, i16 noundef zeroext %17) #9
  %tobool.not.i110 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i110, label %if.end8.err_out_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

if.end8.err_out_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_out

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %if.end8
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %20 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %22 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %21, i16 %23)
  %cmp.i = icmp eq i16 %21, %23
  br i1 %cmp.i, label %if.end11, label %i40e_vc_isvalid_vsi_id.exit.err_out_crit_edge

i40e_vc_isvalid_vsi_id.exit.err_out_crit_edge:    ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_out

if.end11:                                         ; preds = %i40e_vc_isvalid_vsi_id.exit
  %24 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %flags, align 2
  %26 = and i16 %25, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %26)
  %tobool14.not = icmp eq i16 %26, 0
  %27 = xor i1 %tobool14.not, true
  %28 = and i16 %25, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %28)
  %tobool20.not = icmp eq i16 %28, 0
  %29 = xor i1 %tobool20.not, true
  %30 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %msg, align 2
  %call26 = tail call fastcc i32 @i40e_config_vf_promiscuous_mode(ptr noundef %vf, i16 noundef zeroext %31, i1 noundef zeroext %27, i1 noundef zeroext %29)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end29, label %if.end11.err_out_crit_edge

if.end11.err_out_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_out

if.end29:                                         ; preds = %if.end11
  br i1 %tobool14.not, label %if.else, label %if.then31

if.then31:                                        ; preds = %if.end29
  %call32 = tail call i32 @_test_and_set_bit(i32 noundef 4, ptr noundef %vf_states.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %if.then31.if.end55.sink.split_crit_edge, label %if.then31.if.end55_crit_edge

if.then31.if.end55_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end55

if.then31.if.end55.sink.split_crit_edge:          ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end55.sink.split

if.else:                                          ; preds = %if.end29
  %call44 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %vf_states.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %if.else.if.end55_crit_edge, label %if.else.if.end55.sink.split_crit_edge

if.else.if.end55.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end55.sink.split

if.else.if.end55_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end55

if.end55.sink.split:                              ; preds = %if.else.if.end55.sink.split_crit_edge, %if.then31.if.end55.sink.split_crit_edge
  %.str.144.sink = phi ptr [ @.str.141, %if.then31.if.end55.sink.split_crit_edge ], [ @.str.144, %if.else.if.end55.sink.split_crit_edge ]
  %32 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %1, align 8
  %dev51 = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  %34 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %vf_id2.i, align 4
  %conv53 = sext i16 %35 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev51, ptr noundef nonnull %.str.144.sink, i32 noundef %conv53) #12
  br label %if.end55

if.end55:                                         ; preds = %if.end55.sink.split, %if.else.if.end55_crit_edge, %if.then31.if.end55_crit_edge
  br i1 %tobool20.not, label %if.else70, label %if.then57

if.then57:                                        ; preds = %if.end55
  %call59 = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %vf_states.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %do.end64, label %if.then57.err_out_crit_edge

if.then57.err_out_crit_edge:                      ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_out

do.end64:                                         ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #11
  %36 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %1, align 8
  %dev66 = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  %38 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %vf_id2.i, align 4
  %conv68 = sext i16 %39 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev66, ptr noundef nonnull @.str.147, i32 noundef %conv68) #12
  br label %err_out

if.else70:                                        ; preds = %if.end55
  %call72 = tail call i32 @_test_and_clear_bit(i32 noundef 5, ptr noundef %vf_states.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %if.else70.err_out_crit_edge, label %do.end77

if.else70.err_out_crit_edge:                      ; preds = %if.else70
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_out

do.end77:                                         ; preds = %if.else70
  call void @__sanitizer_cov_trace_pc() #11
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %1, align 8
  %dev79 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  %42 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %vf_id2.i, align 4
  %conv81 = sext i16 %43 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev79, ptr noundef nonnull @.str.150, i32 noundef %conv81) #12
  br label %err_out

err_out:                                          ; preds = %do.end77, %if.else70.err_out_crit_edge, %do.end64, %if.then57.err_out_crit_edge, %if.end11.err_out_crit_edge, %i40e_vc_isvalid_vsi_id.exit.err_out_crit_edge, %if.end8.err_out_crit_edge, %if.end4.err_out_crit_edge, %do.end, %i40e_sync_vf_state.exit.err_out_crit_edge
  %aq_ret.0 = phi i32 [ %call26, %if.end11.err_out_crit_edge ], [ 0, %if.then57.err_out_crit_edge ], [ 0, %do.end64 ], [ 0, %do.end77 ], [ 0, %if.else70.err_out_crit_edge ], [ 0, %do.end ], [ -5, %i40e_sync_vf_state.exit.err_out_crit_edge ], [ -5, %if.end4.err_out_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.err_out_crit_edge ], [ -5, %if.end8.err_out_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %err_out.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

err_out.i40e_vc_send_resp_to_vf.exit_crit_edge:   ; preds = %err_out
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %err_out
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %44 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %45 to i32
  %46 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %47, i32 0, i32 86
  %48 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %49, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %47, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %47, i32 0, i32 1, i32 15, i32 33
  %50 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %vf_base_id.i.i, align 8
  %52 = trunc i32 %51 to i16
  %conv7.i.i = add i16 %45, %52
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 14, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %53 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %47, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %54, i32 0, i32 44
  %55 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %56 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %47, i32 0, i32 1, i32 23, i32 14
  %57 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %58) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %err_out.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %err_out.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_config_queues_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %tx_ctx.i = alloca %struct.i40e_hmc_obj_txq, align 8
  %rx_ctx.i = alloca %struct.i40e_hmc_obj_rxq, align 8
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.error_param_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.error_param_crit_edge:    ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %8 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %msg, align 8
  %10 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %11, i16 noundef zeroext %9) #9
  %tobool.not.i190 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i190, label %if.end.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

if.end.error_param_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %if.end
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %12 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp.i = icmp eq i16 %13, %15
  br i1 %cmp.i, label %if.end5, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end5:                                          ; preds = %i40e_vc_isvalid_vsi_id.exit
  %num_queue_pairs = getelementptr inbounds %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 1
  %16 = ptrtoint ptr %num_queue_pairs to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %num_queue_pairs, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %17)
  %cmp = icmp ugt i16 %17, 16
  br i1 %cmp, label %if.end5.error_param_crit_edge, label %if.end8

if.end5.error_param_crit_edge:                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end8:                                          ; preds = %if.end5
  %adq_enabled = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %18 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool.not = icmp eq i8 %19, 0
  br i1 %tobool.not, label %if.end8.if.end22_crit_edge, label %for.body.preheader

if.end8.if.end22_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22

for.body.preheader:                               ; preds = %if.end8
  %num_qps = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 0, i32 2
  %20 = ptrtoint ptr %num_qps to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %num_qps, align 4
  %num_qps.1 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 1, i32 2
  %22 = ptrtoint ptr %num_qps.1 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %num_qps.1, align 4
  %add.1 = add i16 %23, %21
  %num_qps.2 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 2, i32 2
  %24 = ptrtoint ptr %num_qps.2 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %num_qps.2, align 4
  %add.2 = add i16 %25, %add.1
  %num_qps.3 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 3, i32 2
  %26 = ptrtoint ptr %num_qps.3 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %num_qps.3, align 4
  %add.3 = add i16 %27, %add.2
  call void @__sanitizer_cov_trace_cmp2(i16 %add.3, i16 %17)
  %cmp18.not = icmp eq i16 %add.3, %17
  br i1 %cmp18.not, label %for.body.preheader.if.end22_crit_edge, label %for.body.preheader.error_param_crit_edge

for.body.preheader.error_param_crit_edge:         ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.body.preheader.if.end22_crit_edge:            ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22

if.end22:                                         ; preds = %for.body.preheader.if.end22_crit_edge, %if.end8.if.end22_crit_edge
  %28 = ptrtoint ptr %num_queue_pairs to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %num_queue_pairs, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %cmp27272.not = icmp eq i16 %29, 0
  br i1 %cmp27272.not, label %if.end22.for.end103_crit_edge, label %for.body29.lr.ph

if.end22.for.end103_crit_edge:                    ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end103

for.body29.lr.ph:                                 ; preds = %if.end22
  %30 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %msg, align 8
  %lan_vsi_idx.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %base.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 2
  %qlen.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 3
  %hsplit_0.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 11
  %hbuff.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 5
  %dtype.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 6
  %dbuff.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 4
  %rxmax.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 14
  %dsize.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 7
  %lrxqthresh.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 19
  %crcstrip.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 8
  %prefena.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 20
  %l2tsel.i = getelementptr inbounds %struct.i40e_hmc_obj_rxq, ptr %rx_ctx.i, i32 0, i32 10
  %base.i216 = getelementptr inbounds %struct.i40e_hmc_obj_txq, ptr %tx_ctx.i, i32 0, i32 2
  %qlen.i218 = getelementptr inbounds %struct.i40e_hmc_obj_txq, ptr %tx_ctx.i, i32 0, i32 10
  %rdylist.i = getelementptr inbounds %struct.i40e_hmc_obj_txq, ptr %tx_ctx.i, i32 0, i32 16
  %head_wb_ena.i = getelementptr inbounds %struct.i40e_hmc_obj_txq, ptr %tx_ctx.i, i32 0, i32 9
  %head_wb_addr.i = getelementptr inbounds %struct.i40e_hmc_obj_txq, ptr %tx_ctx.i, i32 0, i32 14
  br label %for.body29

for.body29:                                       ; preds = %for.inc101.for.body29_crit_edge, %for.body29.lr.ph
  %idx.0277 = phi i32 [ 0, %for.body29.lr.ph ], [ %idx.1, %for.inc101.for.body29_crit_edge ]
  %j.0276 = phi i32 [ 0, %for.body29.lr.ph ], [ %j.1, %for.inc101.for.body29_crit_edge ]
  %i.1275 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc102, %for.inc101.for.body29_crit_edge ]
  %vsi_queue_id.0274 = phi i16 [ 0, %for.body29.lr.ph ], [ %vsi_queue_id.2, %for.inc101.for.body29_crit_edge ]
  %vsi_id.0273 = phi i16 [ %31, %for.body29.lr.ph ], [ %vsi_id.1, %for.inc101.for.body29_crit_edge ]
  %arrayidx30 = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275
  %32 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool32.not = icmp eq i8 %33, 0
  br i1 %tobool32.not, label %if.then33, label %for.body29.if.then64_crit_edge

for.body29.if.then64_crit_edge:                   ; preds = %for.body29
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then64

if.then33:                                        ; preds = %for.body29
  %queue_id = getelementptr inbounds %struct.virtchnl_txq_info, ptr %arrayidx30, i32 0, i32 1
  %34 = ptrtoint ptr %queue_id to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %queue_id, align 2
  %36 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vf, align 8
  %call.i191 = call ptr @i40e_find_vsi_from_id(ptr noundef %37, i16 noundef zeroext %vsi_id.0273) #9
  %tobool.not.i192 = icmp eq ptr %call.i191, null
  br i1 %tobool.not.i192, label %if.then33.error_param_crit_edge, label %i40e_vc_isvalid_queue_id.exit

if.then33.error_param_crit_edge:                  ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_queue_id.exit:                    ; preds = %if.then33
  %alloc_queue_pairs.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i191, i32 0, i32 42
  %38 = ptrtoint ptr %alloc_queue_pairs.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %alloc_queue_pairs.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %39, i16 %35)
  %cmp.i193 = icmp ugt i16 %39, %35
  br i1 %cmp.i193, label %if.end36, label %i40e_vc_isvalid_queue_id.exit.error_param_crit_edge

i40e_vc_isvalid_queue_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_queue_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end36:                                         ; preds = %i40e_vc_isvalid_queue_id.exit
  %40 = ptrtoint ptr %queue_id to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %queue_id, align 2
  %42 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %arrayidx30, align 8
  %44 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %msg, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %43, i16 %45)
  %cmp44.not = icmp eq i16 %43, %45
  br i1 %cmp44.not, label %lor.lhs.false, label %if.end36.error_param_crit_edge

if.end36.error_param_crit_edge:                   ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false:                                    ; preds = %if.end36
  %rxq = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275, i32 1
  %46 = ptrtoint ptr %rxq to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %rxq, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %47, i16 %43)
  %cmp50.not = icmp eq i16 %47, %43
  br i1 %cmp50.not, label %lor.lhs.false52, label %lor.lhs.false.error_param_crit_edge

lor.lhs.false.error_param_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %queue_id54 = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275, i32 1, i32 1
  %48 = ptrtoint ptr %queue_id54 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %queue_id54, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %49, i16 %41)
  %cmp57.not = icmp eq i16 %49, %41
  br i1 %cmp57.not, label %if.end61, label %lor.lhs.false52.error_param_crit_edge

lor.lhs.false52.error_param_crit_edge:            ; preds = %lor.lhs.false52
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end61:                                         ; preds = %lor.lhs.false52
  %50 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %50)
  %.pr = load i8, ptr %adq_enabled, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool63.not = icmp eq i8 %.pr, 0
  br i1 %tobool63.not, label %if.end61.if.end72_crit_edge, label %if.end61.if.then64_crit_edge

if.end61.if.then64_crit_edge:                     ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then64

if.end61.if.end72_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end72

if.then64:                                        ; preds = %if.end61.if.then64_crit_edge, %for.body29.if.then64_crit_edge
  %vsi_queue_id.1231 = phi i16 [ %41, %if.end61.if.then64_crit_edge ], [ %vsi_queue_id.0274, %for.body29.if.then64_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %idx.0277)
  %cmp65 = icmp ugt i32 %idx.0277, 3
  br i1 %cmp65, label %if.then64.error_param_crit_edge, label %if.end68

if.then64.error_param_crit_edge:                  ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end68:                                         ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #11
  %vsi_id71 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %idx.0277, i32 1
  %51 = ptrtoint ptr %vsi_id71 to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %vsi_id71, align 2
  br label %if.end72

if.end72:                                         ; preds = %if.end68, %if.end61.if.end72_crit_edge
  %vsi_queue_id.1232 = phi i16 [ %vsi_queue_id.1231, %if.end68 ], [ %41, %if.end61.if.end72_crit_edge ]
  %vsi_id.1 = phi i16 [ %52, %if.end68 ], [ %vsi_id.0273, %if.end61.if.end72_crit_edge ]
  %53 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %vf, align 8
  %call.i.i = call ptr @i40e_find_vsi_from_id(ptr noundef %54, i16 noundef zeroext %vsi_id.1) #9
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end72.i40e_vc_get_pf_queue_id.exit.i_crit_edge, label %if.end.i.i

if.end72.i40e_vc_get_pf_queue_id.exit.i_crit_edge: ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_get_pf_queue_id.exit.i

if.end.i.i:                                       ; preds = %if.end72
  %mapping_flags.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i, i32 0, i32 51, i32 14
  %55 = ptrtoint ptr %mapping_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %mapping_flags.i.i, align 4
  %57 = and i16 %56, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %57)
  %tobool2.not.i.i = icmp eq i16 %57, 0
  br i1 %tobool2.not.i.i, label %if.else.i.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %conv.mask.i = and i16 %vsi_queue_id.1232, 255
  %idxprom.i.i = zext i16 %conv.mask.i to i32
  %arrayidx.i.i = getelementptr %struct.i40e_vsi, ptr %call.i.i, i32 0, i32 51, i32 15, i32 %idxprom.i.i
  %58 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %arrayidx.i.i, align 2
  %60 = call i16 @llvm.bswap.i16(i16 %59) #9
  br label %i40e_vc_get_pf_queue_id.exit.i

if.else.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %queue_mapping6.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i, i32 0, i32 51, i32 15
  %61 = ptrtoint ptr %queue_mapping6.i.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %queue_mapping6.i.i, align 2
  %63 = call i16 @llvm.bswap.i16(i16 %62) #9
  %conv9.i.i = and i16 %vsi_queue_id.1232, 255
  %add.i.i = add i16 %63, %conv9.i.i
  br label %i40e_vc_get_pf_queue_id.exit.i

i40e_vc_get_pf_queue_id.exit.i:                   ; preds = %if.else.i.i, %if.then3.i.i, %if.end72.i40e_vc_get_pf_queue_id.exit.i_crit_edge
  %retval.0.i.i = phi i16 [ 2047, %if.end72.i40e_vc_get_pf_queue_id.exit.i_crit_edge ], [ %60, %if.then3.i.i ], [ %add.i.i, %if.else.i.i ]
  %64 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %vf, align 8
  %vsi2.i = getelementptr inbounds %struct.i40e_pf, ptr %65, i32 0, i32 74
  %66 = ptrtoint ptr %vsi2.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %vsi2.i, align 8
  %68 = ptrtoint ptr %lan_vsi_idx.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %lan_vsi_idx.i, align 2
  %idxprom.i = zext i16 %69 to i32
  %arrayidx.i = getelementptr ptr, ptr %67, i32 %idxprom.i
  %70 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx.i, align 4
  %hw3.i = getelementptr inbounds %struct.i40e_pf, ptr %65, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %rx_ctx.i) #9
  %72 = call ptr @memset(ptr %rx_ctx.i, i32 0, i32 48)
  %dma_ring_addr.i = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275, i32 1, i32 8
  %73 = ptrtoint ptr %dma_ring_addr.i to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %dma_ring_addr.i, align 8
  %div70.i = lshr i64 %74, 7
  %75 = ptrtoint ptr %base.i to i32
  call void @__asan_store8_noabort(i32 %75)
  store i64 %div70.i, ptr %base.i, align 8
  %ring_len.i = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275, i32 1, i32 2
  %76 = ptrtoint ptr %ring_len.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %ring_len.i, align 4
  %conv4.i = trunc i32 %77 to i16
  %78 = ptrtoint ptr %qlen.i to i32
  call void @__asan_store2_noabort(i32 %78)
  store i16 %conv4.i, ptr %qlen.i, align 8
  %splithdr_enabled.i = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275, i32 1, i32 4
  %79 = ptrtoint ptr %splithdr_enabled.i to i32
  call void @__asan_load2_noabort(i32 %79)
  %80 = load i16, ptr %splithdr_enabled.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %80)
  %tobool.not.i195 = icmp eq i16 %80, 0
  br i1 %tobool.not.i195, label %i40e_vc_get_pf_queue_id.exit.i.if.end11.i_crit_edge, label %if.then.i

i40e_vc_get_pf_queue_id.exit.i.if.end11.i_crit_edge: ; preds = %i40e_vc_get_pf_queue_id.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11.i

if.then.i:                                        ; preds = %i40e_vc_get_pf_queue_id.exit.i
  %81 = ptrtoint ptr %hsplit_0.i to i32
  call void @__asan_store1_noabort(i32 %81)
  store i8 15, ptr %hsplit_0.i, align 1
  %hdr_size.i = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275, i32 1, i32 3
  %82 = ptrtoint ptr %hdr_size.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %hdr_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1984, i16 %83)
  %cmp.i196 = icmp ugt i16 %83, 1984
  br i1 %cmp.i196, label %if.then.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge, label %if.end.i197

if.then.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_vsi_rx_queue.exit.thread

if.end.i197:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #11
  %84 = lshr i16 %83, 6
  %85 = ptrtoint ptr %hbuff.i to i32
  call void @__asan_store2_noabort(i32 %85)
  store i16 %84, ptr %hbuff.i, align 4
  %86 = ptrtoint ptr %dtype.i to i32
  call void @__asan_store1_noabort(i32 %86)
  store i8 1, ptr %dtype.i, align 2
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.end.i197, %i40e_vc_get_pf_queue_id.exit.i.if.end11.i_crit_edge
  %databuffer_size.i = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275, i32 1, i32 5
  %87 = ptrtoint ptr %databuffer_size.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %databuffer_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16256, i32 %88)
  %cmp12.i = icmp ugt i32 %88, 16256
  br i1 %cmp12.i, label %if.end11.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge, label %if.end15.i

if.end11.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge: ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_vsi_rx_queue.exit.thread

if.end15.i:                                       ; preds = %if.end11.i
  %shr17.i = lshr i32 %88, 7
  %conv18.i = trunc i32 %shr17.i to i16
  %89 = ptrtoint ptr %dbuff.i to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 %conv18.i, ptr %dbuff.i, align 2
  %max_pkt_size.i = getelementptr %struct.virtchnl_vsi_queue_config_info, ptr %msg, i32 0, i32 3, i32 %i.1275, i32 1, i32 6
  %90 = ptrtoint ptr %max_pkt_size.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %max_pkt_size.i, align 8
  %92 = add i32 %91, -16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16320, i32 %92)
  %93 = icmp ult i32 %92, -16320
  br i1 %93, label %if.end15.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge, label %if.end25.i

if.end15.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge: ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_vsi_rx_queue.exit.thread

if.end25.i:                                       ; preds = %if.end15.i
  %94 = ptrtoint ptr %rxmax.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %91, ptr %rxmax.i, align 8
  %pvid.i = getelementptr inbounds %struct.i40e_vsi, ptr %71, i32 0, i32 51, i32 5
  %95 = ptrtoint ptr %pvid.i to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %pvid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %96)
  %tobool28.not.i = icmp eq i16 %96, 0
  br i1 %tobool28.not.i, label %if.end25.i.if.end31.i_crit_edge, label %if.then29.i

if.end25.i.if.end31.i_crit_edge:                  ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31.i

if.then29.i:                                      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #11
  %add.i = add nuw nsw i32 %91, 4
  %97 = ptrtoint ptr %rxmax.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %add.i, ptr %rxmax.i, align 8
  br label %if.end31.i

if.end31.i:                                       ; preds = %if.then29.i, %if.end25.i.if.end31.i_crit_edge
  %98 = ptrtoint ptr %dsize.i to i32
  call void @__asan_store1_noabort(i32 %98)
  store i8 1, ptr %dsize.i, align 1
  %99 = ptrtoint ptr %lrxqthresh.i to i32
  call void @__asan_store2_noabort(i32 %99)
  store i16 1, ptr %lrxqthresh.i, align 8
  %100 = ptrtoint ptr %crcstrip.i to i32
  call void @__asan_store1_noabort(i32 %100)
  store i8 1, ptr %crcstrip.i, align 8
  %101 = ptrtoint ptr %prefena.i to i32
  call void @__asan_store1_noabort(i32 %101)
  store i8 1, ptr %prefena.i, align 2
  %102 = ptrtoint ptr %l2tsel.i to i32
  call void @__asan_store1_noabort(i32 %102)
  store i8 1, ptr %l2tsel.i, align 2
  %call32.i = call i32 @i40e_clear_lan_rx_queue_context(ptr noundef %hw3.i, i16 noundef zeroext %retval.0.i.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32.i)
  %tobool33.not.i = icmp eq i32 %call32.i, 0
  br i1 %tobool33.not.i, label %if.end36.i, label %do.end.i

do.end.i:                                         ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #11
  %103 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %65, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %104, i32 0, i32 44
  %conv35.i = zext i16 %retval.0.i.i to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.152, i32 noundef %conv35.i, i32 noundef %call32.i) #12
  br label %i40e_config_vsi_rx_queue.exit.thread

if.end36.i:                                       ; preds = %if.end31.i
  %call37.i = call i32 @i40e_set_lan_rx_queue_context(ptr noundef %hw3.i, i16 noundef zeroext %retval.0.i.i, ptr noundef nonnull %rx_ctx.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37.i)
  %tobool38.not.i = icmp eq i32 %call37.i, 0
  br i1 %tobool38.not.i, label %lor.lhs.false76, label %do.end42.i

do.end42.i:                                       ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #11
  %105 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %65, align 8
  %dev44.i = getelementptr inbounds %struct.pci_dev, ptr %106, i32 0, i32 44
  %conv45.i = zext i16 %retval.0.i.i to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev44.i, ptr noundef nonnull @.str.155, i32 noundef %conv45.i, i32 noundef %call37.i) #12
  br label %i40e_config_vsi_rx_queue.exit.thread

i40e_config_vsi_rx_queue.exit.thread:             ; preds = %do.end42.i, %do.end.i, %if.end15.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge, %if.end11.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge, %if.then.i.i40e_config_vsi_rx_queue.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %rx_ctx.i) #9
  br label %error_param

lor.lhs.false76:                                  ; preds = %if.end36.i
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %rx_ctx.i) #9
  %107 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %vf, align 8
  %hw2.i = getelementptr inbounds %struct.i40e_pf, ptr %108, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %tx_ctx.i) #9
  %109 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load2_noabort(i32 %109)
  %110 = load i16, ptr %arrayidx30, align 8
  %call.i.i198 = call ptr @i40e_find_vsi_from_id(ptr noundef %108, i16 noundef zeroext %110) #9
  %tobool.not.i.i199 = icmp eq ptr %call.i.i198, null
  br i1 %tobool.not.i.i199, label %lor.lhs.false76.i40e_config_vsi_tx_queue.exit.thread_crit_edge, label %i40e_vc_isvalid_vsi_id.exit.i

lor.lhs.false76.i40e_config_vsi_tx_queue.exit.thread_crit_edge: ; preds = %lor.lhs.false76
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_vsi_tx_queue.exit.thread

i40e_vc_isvalid_vsi_id.exit.i:                    ; preds = %lor.lhs.false76
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i198, i32 0, i32 48
  %111 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %vf_id.i.i, align 8
  %113 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %113)
  %114 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %112, i16 %114)
  %cmp.i.i = icmp eq i16 %112, %114
  br i1 %cmp.i.i, label %if.end.i200, label %i40e_vc_isvalid_vsi_id.exit.i.i40e_config_vsi_tx_queue.exit.thread_crit_edge

i40e_vc_isvalid_vsi_id.exit.i.i40e_config_vsi_tx_queue.exit.thread_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_vsi_tx_queue.exit.thread

if.end.i200:                                      ; preds = %i40e_vc_isvalid_vsi_id.exit.i
  %115 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %vf, align 8
  %call.i68.i = call ptr @i40e_find_vsi_from_id(ptr noundef %116, i16 noundef zeroext %vsi_id.1) #9
  %tobool.not.i69.i = icmp eq ptr %call.i68.i, null
  br i1 %tobool.not.i69.i, label %if.end.i200.i40e_vc_get_pf_queue_id.exit.i214_crit_edge, label %if.end.i.i203

if.end.i200.i40e_vc_get_pf_queue_id.exit.i214_crit_edge: ; preds = %if.end.i200
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_get_pf_queue_id.exit.i214

if.end.i.i203:                                    ; preds = %if.end.i200
  %mapping_flags.i.i201 = getelementptr inbounds %struct.i40e_vsi, ptr %call.i68.i, i32 0, i32 51, i32 14
  %117 = ptrtoint ptr %mapping_flags.i.i201 to i32
  call void @__asan_load2_noabort(i32 %117)
  %118 = load i16, ptr %mapping_flags.i.i201, align 4
  %119 = and i16 %118, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %119)
  %tobool2.not.i.i202 = icmp eq i16 %119, 0
  br i1 %tobool2.not.i.i202, label %if.else.i.i211, label %if.then3.i.i207

if.then3.i.i207:                                  ; preds = %if.end.i.i203
  call void @__sanitizer_cov_trace_pc() #11
  %conv.mask.i204 = and i16 %vsi_queue_id.1232, 255
  %idxprom.i.i205 = zext i16 %conv.mask.i204 to i32
  %arrayidx.i.i206 = getelementptr %struct.i40e_vsi, ptr %call.i68.i, i32 0, i32 51, i32 15, i32 %idxprom.i.i205
  %120 = ptrtoint ptr %arrayidx.i.i206 to i32
  call void @__asan_load2_noabort(i32 %120)
  %121 = load i16, ptr %arrayidx.i.i206, align 2
  %122 = call i16 @llvm.bswap.i16(i16 %121) #9
  br label %i40e_vc_get_pf_queue_id.exit.i214

if.else.i.i211:                                   ; preds = %if.end.i.i203
  call void @__sanitizer_cov_trace_pc() #11
  %queue_mapping6.i.i208 = getelementptr inbounds %struct.i40e_vsi, ptr %call.i68.i, i32 0, i32 51, i32 15
  %123 = ptrtoint ptr %queue_mapping6.i.i208 to i32
  call void @__asan_load2_noabort(i32 %123)
  %124 = load i16, ptr %queue_mapping6.i.i208, align 2
  %125 = call i16 @llvm.bswap.i16(i16 %124) #9
  %conv9.i.i209 = and i16 %vsi_queue_id.1232, 255
  %add.i.i210 = add i16 %125, %conv9.i.i209
  br label %i40e_vc_get_pf_queue_id.exit.i214

i40e_vc_get_pf_queue_id.exit.i214:                ; preds = %if.else.i.i211, %if.then3.i.i207, %if.end.i200.i40e_vc_get_pf_queue_id.exit.i214_crit_edge
  %retval.0.i.i212 = phi i16 [ 2047, %if.end.i200.i40e_vc_get_pf_queue_id.exit.i214_crit_edge ], [ %122, %if.then3.i.i207 ], [ %add.i.i210, %if.else.i.i211 ]
  %call5.i = call ptr @i40e_find_vsi_from_id(ptr noundef %108, i16 noundef zeroext %vsi_id.1) #9
  %tobool.not.i213 = icmp eq ptr %call5.i, null
  br i1 %tobool.not.i213, label %i40e_vc_get_pf_queue_id.exit.i214.i40e_config_vsi_tx_queue.exit.thread_crit_edge, label %if.end7.i

i40e_vc_get_pf_queue_id.exit.i214.i40e_config_vsi_tx_queue.exit.thread_crit_edge: ; preds = %i40e_vc_get_pf_queue_id.exit.i214
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_vsi_tx_queue.exit.thread

if.end7.i:                                        ; preds = %i40e_vc_get_pf_queue_id.exit.i214
  %126 = call ptr @memset(ptr %tx_ctx.i, i32 0, i32 48)
  %dma_ring_addr.i215 = getelementptr inbounds %struct.virtchnl_txq_info, ptr %arrayidx30, i32 0, i32 4
  %127 = ptrtoint ptr %dma_ring_addr.i215 to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %dma_ring_addr.i215, align 8
  %div66.i = lshr i64 %128, 7
  %129 = ptrtoint ptr %base.i216 to i32
  call void @__asan_store8_noabort(i32 %129)
  store i64 %div66.i, ptr %base.i216, align 8
  %ring_len.i217 = getelementptr inbounds %struct.virtchnl_txq_info, ptr %arrayidx30, i32 0, i32 2
  %130 = ptrtoint ptr %ring_len.i217 to i32
  call void @__asan_load2_noabort(i32 %130)
  %131 = load i16, ptr %ring_len.i217, align 4
  %132 = ptrtoint ptr %qlen.i218 to i32
  call void @__asan_store2_noabort(i32 %132)
  store i16 %131, ptr %qlen.i218, align 8
  %qs_handle.i = getelementptr inbounds %struct.i40e_vsi, ptr %call5.i, i32 0, i32 51, i32 23
  %133 = ptrtoint ptr %qs_handle.i to i32
  call void @__asan_load2_noabort(i32 %133)
  %134 = load i16, ptr %qs_handle.i, align 4
  %135 = call i16 @llvm.bswap.i16(i16 %134) #9
  %136 = ptrtoint ptr %rdylist.i to i32
  call void @__asan_store2_noabort(i32 %136)
  store i16 %135, ptr %rdylist.i, align 4
  %headwb_enabled.i = getelementptr inbounds %struct.virtchnl_txq_info, ptr %arrayidx30, i32 0, i32 3
  %137 = ptrtoint ptr %headwb_enabled.i to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %headwb_enabled.i, align 2
  %conv9.i = trunc i16 %138 to i8
  %139 = ptrtoint ptr %head_wb_ena.i to i32
  call void @__asan_store1_noabort(i32 %139)
  store i8 %conv9.i, ptr %head_wb_ena.i, align 1
  %dma_headwb_addr.i = getelementptr inbounds %struct.virtchnl_txq_info, ptr %arrayidx30, i32 0, i32 5
  %140 = ptrtoint ptr %dma_headwb_addr.i to i32
  call void @__asan_load8_noabort(i32 %140)
  %141 = load i64, ptr %dma_headwb_addr.i, align 8
  %142 = ptrtoint ptr %head_wb_addr.i to i32
  call void @__asan_store8_noabort(i32 %142)
  store i64 %141, ptr %head_wb_addr.i, align 8
  %call10.i = call i32 @i40e_clear_lan_tx_queue_context(ptr noundef %hw2.i, i16 noundef zeroext %retval.0.i.i212) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.end14.i, label %do.end.i220

do.end.i220:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #11
  %143 = ptrtoint ptr %108 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %108, align 8
  %dev.i219 = getelementptr inbounds %struct.pci_dev, ptr %144, i32 0, i32 44
  %conv13.i = zext i16 %retval.0.i.i212 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i219, ptr noundef nonnull @.str.157, i32 noundef %conv13.i, i32 noundef %call10.i) #12
  br label %i40e_config_vsi_tx_queue.exit.thread

if.end14.i:                                       ; preds = %if.end7.i
  %call15.i = call i32 @i40e_set_lan_tx_queue_context(ptr noundef %hw2.i, i16 noundef zeroext %retval.0.i.i212, ptr noundef nonnull %tx_ctx.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %if.end81, label %do.end20.i

do.end20.i:                                       ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #11
  %145 = ptrtoint ptr %108 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %108, align 8
  %dev22.i = getelementptr inbounds %struct.pci_dev, ptr %146, i32 0, i32 44
  %conv23.i = zext i16 %retval.0.i.i212 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev22.i, ptr noundef nonnull @.str.160, i32 noundef %conv23.i, i32 noundef %call15.i) #12
  br label %i40e_config_vsi_tx_queue.exit.thread

i40e_config_vsi_tx_queue.exit.thread:             ; preds = %do.end20.i, %do.end.i220, %i40e_vc_get_pf_queue_id.exit.i214.i40e_config_vsi_tx_queue.exit.thread_crit_edge, %i40e_vc_isvalid_vsi_id.exit.i.i40e_config_vsi_tx_queue.exit.thread_crit_edge, %lor.lhs.false76.i40e_config_vsi_tx_queue.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %tx_ctx.i) #9
  br label %error_param

if.end81:                                         ; preds = %if.end14.i
  %pf_id.i = getelementptr inbounds %struct.i40e_pf, ptr %108, i32 0, i32 1, i32 17
  %147 = ptrtoint ptr %pf_id.i to i32
  call void @__asan_load1_noabort(i32 %147)
  %148 = load i8, ptr %pf_id.i, align 2
  %conv25.i = zext i8 %148 to i32
  %shl.i = shl nuw nsw i32 %conv25.i, 2
  %and.i = and i32 %shl.i, 60
  %149 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %149)
  %150 = load i16, ptr %vf_id2.i, align 4
  %conv2667.i = zext i16 %150 to i32
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %108, i32 0, i32 1, i32 15, i32 33
  %151 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %vf_base_id.i, align 8
  %add.i221 = add i32 %152, %conv2667.i
  %shl27.i = shl i32 %add.i221, 7
  %and28.i = and i32 %shl27.i, 65408
  %or29.i = or i32 %and28.i, %and.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !525
  call void @arm_heavy_mb() #9
  %153 = call i32 @llvm.bswap.i32(i32 %or29.i) #9
  %154 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %hw2.i, align 8
  %conv33.i = zext i16 %retval.0.i.i212 to i32
  %mul.i = shl nuw nsw i32 %conv33.i, 2
  %add34.i = add nuw nsw i32 %mul.i, 1064960
  %add.ptr.i = getelementptr i8, ptr %155, i32 %add34.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %153) #9, !srcloc !498
  %156 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %hw2.i, align 8
  %add.ptr36.i = getelementptr i8, ptr %157, i32 745772
  %158 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr36.i) #9, !srcloc !491
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !526
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %tx_ctx.i) #9
  %159 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %159)
  %160 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %160)
  %tobool83.not = icmp eq i8 %160, 0
  br i1 %tobool83.not, label %if.end81.for.inc101_crit_edge, label %if.then84

if.end81.for.inc101_crit_edge:                    ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc101

if.then84:                                        ; preds = %if.end81
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %idx.0277)
  %cmp85 = icmp ugt i32 %idx.0277, 3
  br i1 %cmp85, label %if.then84.error_param_crit_edge, label %if.end88

if.then84.error_param_crit_edge:                  ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end88:                                         ; preds = %if.then84
  %num_qps91 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %idx.0277, i32 2
  %161 = ptrtoint ptr %num_qps91 to i32
  call void @__asan_load2_noabort(i32 %161)
  %162 = load i16, ptr %num_qps91, align 4
  %conv92 = zext i16 %162 to i32
  %sub = add nsw i32 %conv92, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %j.0276, i32 %sub)
  %cmp93 = icmp eq i32 %j.0276, %sub
  br i1 %cmp93, label %if.then95, label %if.else

if.then95:                                        ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #11
  %inc96 = add nuw nsw i32 %idx.0277, 1
  br label %for.inc101

if.else:                                          ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #11
  %inc97 = add i32 %j.0276, 1
  %inc98 = add i16 %vsi_queue_id.1232, 1
  br label %for.inc101

for.inc101:                                       ; preds = %if.else, %if.then95, %if.end81.for.inc101_crit_edge
  %vsi_queue_id.2 = phi i16 [ 0, %if.then95 ], [ %inc98, %if.else ], [ %vsi_queue_id.1232, %if.end81.for.inc101_crit_edge ]
  %j.1 = phi i32 [ 0, %if.then95 ], [ %inc97, %if.else ], [ %j.0276, %if.end81.for.inc101_crit_edge ]
  %idx.1 = phi i32 [ %inc96, %if.then95 ], [ %idx.0277, %if.else ], [ %idx.0277, %if.end81.for.inc101_crit_edge ]
  %inc102 = add nuw nsw i32 %i.1275, 1
  %163 = ptrtoint ptr %num_queue_pairs to i32
  call void @__asan_load2_noabort(i32 %163)
  %164 = load i16, ptr %num_queue_pairs, align 2
  %conv26 = zext i16 %164 to i32
  %cmp27 = icmp ult i32 %inc102, %conv26
  br i1 %cmp27, label %for.inc101.for.body29_crit_edge, label %for.inc101.for.end103_crit_edge

for.inc101.for.end103_crit_edge:                  ; preds = %for.inc101
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end103

for.inc101.for.body29_crit_edge:                  ; preds = %for.inc101
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body29

for.end103:                                       ; preds = %for.inc101.for.end103_crit_edge, %if.end22.for.end103_crit_edge
  %.lcssa261 = phi i16 [ 0, %if.end22.for.end103_crit_edge ], [ %164, %for.inc101.for.end103_crit_edge ]
  %165 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %165)
  %166 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %166)
  %tobool105.not = icmp eq i8 %166, 0
  %vsi108 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  br i1 %tobool105.not, label %if.then106, label %for.cond112.preheader

for.cond112.preheader:                            ; preds = %for.end103
  %num_tc = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %167 = ptrtoint ptr %num_tc to i32
  call void @__asan_load1_noabort(i32 %167)
  %168 = load i8, ptr %num_tc, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %168)
  %cmp114280.not = icmp eq i8 %168, 0
  br i1 %cmp114280.not, label %for.cond112.preheader.error_param_crit_edge, label %for.cond112.preheader.for.body116_crit_edge

for.cond112.preheader.for.body116_crit_edge:      ; preds = %for.cond112.preheader
  br label %for.body116

for.cond112.preheader.error_param_crit_edge:      ; preds = %for.cond112.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.then106:                                       ; preds = %for.end103
  call void @__sanitizer_cov_trace_pc() #11
  %169 = ptrtoint ptr %vsi108 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %vsi108, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %171 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %171)
  %172 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %172 to i32
  %arrayidx109 = getelementptr ptr, ptr %170, i32 %idxprom
  %173 = ptrtoint ptr %arrayidx109 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %arrayidx109, align 4
  %num_queue_pairs110 = getelementptr inbounds %struct.i40e_vsi, ptr %174, i32 0, i32 44
  %175 = ptrtoint ptr %num_queue_pairs110 to i32
  call void @__asan_store2_noabort(i32 %175)
  store i16 %.lcssa261, ptr %num_queue_pairs110, align 2
  br label %error_param

for.cond112:                                      ; preds = %for.body116
  %inc131 = add nuw nsw i32 %i.2281, 1
  %176 = ptrtoint ptr %num_tc to i32
  call void @__asan_load1_noabort(i32 %176)
  %177 = load i8, ptr %num_tc, align 1
  %conv113 = zext i8 %177 to i32
  %cmp114 = icmp ult i32 %inc131, %conv113
  br i1 %cmp114, label %for.cond112.for.body116_crit_edge, label %for.cond112.error_param_crit_edge

for.cond112.error_param_crit_edge:                ; preds = %for.cond112
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.cond112.for.body116_crit_edge:                ; preds = %for.cond112
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body116

for.body116:                                      ; preds = %for.cond112.for.body116_crit_edge, %for.cond112.preheader.for.body116_crit_edge
  %i.2281 = phi i32 [ %inc131, %for.cond112.for.body116_crit_edge ], [ 0, %for.cond112.preheader.for.body116_crit_edge ]
  %178 = ptrtoint ptr %vsi108 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %vsi108, align 8
  %arrayidx119 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.2281
  %180 = ptrtoint ptr %arrayidx119 to i32
  call void @__asan_load2_noabort(i32 %180)
  %181 = load i16, ptr %arrayidx119, align 8
  %idxprom120 = zext i16 %181 to i32
  %arrayidx121 = getelementptr ptr, ptr %179, i32 %idxprom120
  %182 = ptrtoint ptr %arrayidx121 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %arrayidx121, align 4
  %num_qps124 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.2281, i32 2
  %184 = ptrtoint ptr %num_qps124 to i32
  call void @__asan_load2_noabort(i32 %184)
  %185 = load i16, ptr %num_qps124, align 4
  %num_queue_pairs125 = getelementptr inbounds %struct.i40e_vsi, ptr %183, i32 0, i32 44
  %186 = ptrtoint ptr %num_queue_pairs125 to i32
  call void @__asan_store2_noabort(i32 %186)
  store i16 %185, ptr %num_queue_pairs125, align 2
  %call126 = call i32 @i40e_update_adq_vsi_queues(ptr noundef %183, i32 noundef %i.2281) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call126)
  %tobool127.not = icmp eq i32 %call126, 0
  br i1 %tobool127.not, label %for.cond112, label %for.body116.error_param_crit_edge

for.body116.error_param_crit_edge:                ; preds = %for.body116
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

error_param:                                      ; preds = %for.body116.error_param_crit_edge, %for.cond112.error_param_crit_edge, %if.then106, %for.cond112.preheader.error_param_crit_edge, %if.then84.error_param_crit_edge, %i40e_config_vsi_tx_queue.exit.thread, %i40e_config_vsi_rx_queue.exit.thread, %if.then64.error_param_crit_edge, %lor.lhs.false52.error_param_crit_edge, %lor.lhs.false.error_param_crit_edge, %if.end36.error_param_crit_edge, %i40e_vc_isvalid_queue_id.exit.error_param_crit_edge, %if.then33.error_param_crit_edge, %for.body.preheader.error_param_crit_edge, %if.end5.error_param_crit_edge, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %if.end.error_param_crit_edge, %i40e_sync_vf_state.exit.error_param_crit_edge
  %aq_ret.0 = phi i32 [ 0, %if.then106 ], [ -5, %i40e_sync_vf_state.exit.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %if.end5.error_param_crit_edge ], [ -5, %for.body.preheader.error_param_crit_edge ], [ -5, %i40e_config_vsi_rx_queue.exit.thread ], [ -5, %i40e_config_vsi_tx_queue.exit.thread ], [ -5, %if.end.error_param_crit_edge ], [ 0, %for.cond112.preheader.error_param_crit_edge ], [ 0, %for.cond112.error_param_crit_edge ], [ -4, %for.body116.error_param_crit_edge ], [ -5, %if.then33.error_param_crit_edge ], [ -17, %if.then84.error_param_crit_edge ], [ -17, %if.then64.error_param_crit_edge ], [ -5, %if.end36.error_param_crit_edge ], [ -5, %lor.lhs.false.error_param_crit_edge ], [ -5, %lor.lhs.false52.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_queue_id.exit.error_param_crit_edge ]
  %tobool.not.i.i223 = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i223, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %vf_id.i.i224 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %187 = ptrtoint ptr %vf_id.i.i224 to i32
  call void @__asan_load2_noabort(i32 %187)
  %188 = load i16, ptr %vf_id.i.i224, align 4
  %conv.i.i = sext i16 %188 to i32
  %189 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %190, i32 0, i32 86
  %191 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %192, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %192, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i226, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i226:                                    ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %190, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %190, i32 0, i32 1, i32 15, i32 33
  %193 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %vf_base_id.i.i, align 8
  %195 = trunc i32 %194 to i16
  %conv7.i.i = add i16 %188, %195
  %call.i.i225 = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 6, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i225)
  %tobool8.not.i.i = icmp eq i32 %call.i.i225, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i226.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i226.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i226
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i226
  call void @__sanitizer_cov_trace_pc() #11
  %196 = ptrtoint ptr %190 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %190, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %197, i32 0, i32 44
  %198 = ptrtoint ptr %vf_id.i.i224 to i32
  call void @__asan_load2_noabort(i32 %198)
  %199 = load i16, ptr %vf_id.i.i224, align 4
  %conv11.i.i = sext i16 %199 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %190, i32 0, i32 1, i32 23, i32 14
  %200 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %asq_last_status.i.i, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %201) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i226.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i227 = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i226.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i227
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_config_irq_map_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %linklistmap.i = alloca i32, align 4
  %tempmap.i = alloca i32, align 4
  %queuemap.addr.i51 = alloca i32, align 4
  %queuemap.addr.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %0 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %vf_states.i, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %3 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %vf_states.i, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.i.not = icmp eq i32 %5, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.error_param_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.error_param_crit_edge:    ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %6 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %msg, align 2
  %conv = zext i16 %7 to i32
  %8 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vf, align 8
  %num_msix_vectors_vf = getelementptr inbounds %struct.i40e_pf, ptr %9, i32 0, i32 1, i32 15, i32 39
  %10 = ptrtoint ptr %num_msix_vectors_vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_msix_vectors_vf, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %conv)
  %cmp = icmp ult i32 %11, %conv
  br i1 %cmp, label %if.end.error_param_crit_edge, label %for.cond.preheader

if.end.error_param_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.cond.preheader:                               ; preds = %if.end
  %12 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %msg, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %cmp6106.not = icmp eq i16 %13, 0
  br i1 %cmp6106.not, label %for.cond.preheader.error_param_crit_edge, label %for.body.lr.ph

for.cond.preheader.error_param_crit_edge:         ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %adq_enabled.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %num_tc.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %driver_caps.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %i40e_config_irq_link_list.exit.for.body_crit_edge, %for.body.lr.ph
  %i.0107 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %i40e_config_irq_link_list.exit.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.virtchnl_irq_map_info, ptr %msg, i32 0, i32 1, i32 %i.0107
  %vector_id = getelementptr %struct.virtchnl_irq_map_info, ptr %msg, i32 0, i32 1, i32 %i.0107, i32 1
  %14 = ptrtoint ptr %vector_id to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vector_id, align 2
  %conv8 = zext i16 %15 to i32
  %16 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vf, align 8
  %num_msix_vectors_vf.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 1, i32 15, i32 39
  %18 = ptrtoint ptr %num_msix_vectors_vf.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_msix_vectors_vf.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %conv8)
  %cmp.i = icmp ugt i32 %19, %conv8
  br i1 %cmp.i, label %lor.lhs.false, label %for.body.error_param_crit_edge

for.body.error_param_crit_edge:                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false:                                    ; preds = %for.body
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %arrayidx, align 2
  %call.i = call ptr @i40e_find_vsi_from_id(ptr noundef %17, i16 noundef zeroext %21) #9
  %tobool.not.i43 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i43, label %lor.lhs.false.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

lor.lhs.false.error_param_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %lor.lhs.false
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %22 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %vf_id.i, align 8
  %24 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %23, i16 %25)
  %cmp.i44 = icmp eq i16 %23, %25
  br i1 %cmp.i44, label %if.end13, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end13:                                         ; preds = %i40e_vc_isvalid_vsi_id.exit
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %arrayidx, align 2
  %rxq_map = getelementptr %struct.virtchnl_irq_map_info, ptr %msg, i32 0, i32 1, i32 %i.0107, i32 2
  %28 = ptrtoint ptr %rxq_map to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %rxq_map, align 2
  %conv15 = zext i16 %29 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %queuemap.addr.i)
  %30 = ptrtoint ptr %queuemap.addr.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %conv15, ptr %queuemap.addr.i, align 4
  %call.i45 = call i32 @_find_next_bit_be(ptr noundef nonnull %queuemap.addr.i, i32 noundef 16, i32 noundef 0) #9
  %conv121.i = and i32 %call.i45, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %conv121.i)
  %cmp22.i = icmp ult i32 %conv121.i, 16
  br i1 %cmp22.i, label %if.end13.for.body.i47_crit_edge, label %if.end13.if.end18_crit_edge

if.end13.if.end18_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.end13.for.body.i47_crit_edge:                  ; preds = %if.end13
  br label %for.body.i47

for.body.i47:                                     ; preds = %for.inc.i.for.body.i47_crit_edge, %if.end13.for.body.i47_crit_edge
  %conv125.i = phi i32 [ %conv1.i, %for.inc.i.for.body.i47_crit_edge ], [ %conv121.i, %if.end13.for.body.i47_crit_edge ]
  %vsi_queue_id.0.in24.i = phi i32 [ %call11.i, %for.inc.i.for.body.i47_crit_edge ], [ %call.i45, %if.end13.for.body.i47_crit_edge ]
  %vsi_id.addr.023.i = phi i16 [ %vsi_id.addr.1.i, %for.inc.i.for.body.i47_crit_edge ], [ %27, %if.end13.for.body.i47_crit_edge ]
  %31 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.not.i46 = icmp eq i8 %32, 0
  br i1 %tobool.not.i46, label %for.body.i47.if.end.i48_crit_edge, label %if.then.i

for.body.i47.if.end.i48_crit_edge:                ; preds = %for.body.i47
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i48

if.then.i:                                        ; preds = %for.body.i47
  call void @__sanitizer_cov_trace_pc() #11
  %div20.i = lshr i32 %conv125.i, 2
  %vsi_id4.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %div20.i, i32 1
  %33 = ptrtoint ptr %vsi_id4.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %vsi_id4.i, align 2
  %rem.i = and i32 %vsi_queue_id.0.in24.i, 3
  br label %if.end.i48

if.end.i48:                                       ; preds = %if.then.i, %for.body.i47.if.end.i48_crit_edge
  %vsi_id.addr.1.i = phi i16 [ %34, %if.then.i ], [ %vsi_id.addr.023.i, %for.body.i47.if.end.i48_crit_edge ]
  %queue_id.0.in.i = phi i32 [ %rem.i, %if.then.i ], [ %vsi_queue_id.0.in24.i, %for.body.i47.if.end.i48_crit_edge ]
  %35 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %vf, align 8
  %call.i.i = call ptr @i40e_find_vsi_from_id(ptr noundef %36, i16 noundef zeroext %vsi_id.addr.1.i) #9
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end.i48.i40e_validate_queue_map.exit_crit_edge, label %i40e_vc_isvalid_queue_id.exit.i

if.end.i48.i40e_validate_queue_map.exit_crit_edge: ; preds = %if.end.i48
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_validate_queue_map.exit

i40e_vc_isvalid_queue_id.exit.i:                  ; preds = %if.end.i48
  %queue_id.0.i = trunc i32 %queue_id.0.in.i to i16
  %alloc_queue_pairs.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i, i32 0, i32 42
  %37 = ptrtoint ptr %alloc_queue_pairs.i.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %alloc_queue_pairs.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %38, i16 %queue_id.0.i)
  %cmp.i.i = icmp ugt i16 %38, %queue_id.0.i
  br i1 %cmp.i.i, label %for.inc.i, label %i40e_vc_isvalid_queue_id.exit.i.i40e_validate_queue_map.exit_crit_edge

i40e_vc_isvalid_queue_id.exit.i.i40e_validate_queue_map.exit_crit_edge: ; preds = %i40e_vc_isvalid_queue_id.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_validate_queue_map.exit

for.inc.i:                                        ; preds = %i40e_vc_isvalid_queue_id.exit.i
  %add.i = add nuw nsw i32 %conv125.i, 1
  %call11.i = call i32 @_find_next_bit_be(ptr noundef nonnull %queuemap.addr.i, i32 noundef 16, i32 noundef %add.i) #9
  %conv1.i = and i32 %call11.i, 65535
  %cmp.i49 = icmp ult i32 %conv1.i, 16
  br i1 %cmp.i49, label %for.inc.i.for.body.i47_crit_edge, label %for.inc.i.if.end18_crit_edge

for.inc.i.if.end18_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

for.inc.i.for.body.i47_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i47

i40e_validate_queue_map.exit:                     ; preds = %i40e_vc_isvalid_queue_id.exit.i.i40e_validate_queue_map.exit_crit_edge, %if.end.i48.i40e_validate_queue_map.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %queuemap.addr.i)
  br label %error_param

if.end18:                                         ; preds = %for.inc.i.if.end18_crit_edge, %if.end13.if.end18_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %queuemap.addr.i)
  %txq_map = getelementptr %struct.virtchnl_irq_map_info, ptr %msg, i32 0, i32 1, i32 %i.0107, i32 3
  %39 = ptrtoint ptr %txq_map to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %txq_map, align 2
  %conv19 = zext i16 %40 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %queuemap.addr.i51)
  %41 = ptrtoint ptr %queuemap.addr.i51 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %conv19, ptr %queuemap.addr.i51, align 4
  %call.i52 = call i32 @_find_next_bit_be(ptr noundef nonnull %queuemap.addr.i51, i32 noundef 16, i32 noundef 0) #9
  %conv121.i53 = and i32 %call.i52, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %conv121.i53)
  %cmp22.i54 = icmp ult i32 %conv121.i53, 16
  br i1 %cmp22.i54, label %if.end18.for.body.i61_crit_edge, label %if.end18.if.end23_crit_edge

if.end18.if.end23_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end23

if.end18.for.body.i61_crit_edge:                  ; preds = %if.end18
  br label %for.body.i61

for.body.i61:                                     ; preds = %for.inc.i79.for.body.i61_crit_edge, %if.end18.for.body.i61_crit_edge
  %conv125.i57 = phi i32 [ %conv1.i77, %for.inc.i79.for.body.i61_crit_edge ], [ %conv121.i53, %if.end18.for.body.i61_crit_edge ]
  %vsi_queue_id.0.in24.i58 = phi i32 [ %call11.i76, %for.inc.i79.for.body.i61_crit_edge ], [ %call.i52, %if.end18.for.body.i61_crit_edge ]
  %vsi_id.addr.023.i59 = phi i16 [ %vsi_id.addr.1.i66, %for.inc.i79.for.body.i61_crit_edge ], [ %27, %if.end18.for.body.i61_crit_edge ]
  %42 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool.not.i60 = icmp eq i8 %43, 0
  br i1 %tobool.not.i60, label %for.body.i61.if.end.i70_crit_edge, label %if.then.i65

for.body.i61.if.end.i70_crit_edge:                ; preds = %for.body.i61
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i70

if.then.i65:                                      ; preds = %for.body.i61
  call void @__sanitizer_cov_trace_pc() #11
  %div20.i62 = lshr i32 %conv125.i57, 2
  %vsi_id4.i63 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %div20.i62, i32 1
  %44 = ptrtoint ptr %vsi_id4.i63 to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %vsi_id4.i63, align 2
  %rem.i64 = and i32 %vsi_queue_id.0.in24.i58, 3
  br label %if.end.i70

if.end.i70:                                       ; preds = %if.then.i65, %for.body.i61.if.end.i70_crit_edge
  %vsi_id.addr.1.i66 = phi i16 [ %45, %if.then.i65 ], [ %vsi_id.addr.023.i59, %for.body.i61.if.end.i70_crit_edge ]
  %queue_id.0.in.i67 = phi i32 [ %rem.i64, %if.then.i65 ], [ %vsi_queue_id.0.in24.i58, %for.body.i61.if.end.i70_crit_edge ]
  %46 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %vf, align 8
  %call.i.i68 = call ptr @i40e_find_vsi_from_id(ptr noundef %47, i16 noundef zeroext %vsi_id.addr.1.i66) #9
  %tobool.not.i.i69 = icmp eq ptr %call.i.i68, null
  br i1 %tobool.not.i.i69, label %if.end.i70.i40e_validate_queue_map.exit81_crit_edge, label %i40e_vc_isvalid_queue_id.exit.i74

if.end.i70.i40e_validate_queue_map.exit81_crit_edge: ; preds = %if.end.i70
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_validate_queue_map.exit81

i40e_vc_isvalid_queue_id.exit.i74:                ; preds = %if.end.i70
  %queue_id.0.i71 = trunc i32 %queue_id.0.in.i67 to i16
  %alloc_queue_pairs.i.i72 = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i68, i32 0, i32 42
  %48 = ptrtoint ptr %alloc_queue_pairs.i.i72 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %alloc_queue_pairs.i.i72, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %49, i16 %queue_id.0.i71)
  %cmp.i.i73 = icmp ugt i16 %49, %queue_id.0.i71
  br i1 %cmp.i.i73, label %for.inc.i79, label %i40e_vc_isvalid_queue_id.exit.i74.i40e_validate_queue_map.exit81_crit_edge

i40e_vc_isvalid_queue_id.exit.i74.i40e_validate_queue_map.exit81_crit_edge: ; preds = %i40e_vc_isvalid_queue_id.exit.i74
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_validate_queue_map.exit81

for.inc.i79:                                      ; preds = %i40e_vc_isvalid_queue_id.exit.i74
  %add.i75 = add nuw nsw i32 %conv125.i57, 1
  %call11.i76 = call i32 @_find_next_bit_be(ptr noundef nonnull %queuemap.addr.i51, i32 noundef 16, i32 noundef %add.i75) #9
  %conv1.i77 = and i32 %call11.i76, 65535
  %cmp.i78 = icmp ult i32 %conv1.i77, 16
  br i1 %cmp.i78, label %for.inc.i79.for.body.i61_crit_edge, label %for.inc.i79.if.end23_crit_edge

for.inc.i79.if.end23_crit_edge:                   ; preds = %for.inc.i79
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end23

for.inc.i79.for.body.i61_crit_edge:               ; preds = %for.inc.i79
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i61

i40e_validate_queue_map.exit81:                   ; preds = %i40e_vc_isvalid_queue_id.exit.i74.i40e_validate_queue_map.exit81_crit_edge, %if.end.i70.i40e_validate_queue_map.exit81_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %queuemap.addr.i51)
  br label %error_param

if.end23:                                         ; preds = %for.inc.i79.if.end23_crit_edge, %if.end18.if.end23_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %queuemap.addr.i51)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %linklistmap.i) #9
  %50 = ptrtoint ptr %linklistmap.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %linklistmap.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tempmap.i) #9
  %51 = ptrtoint ptr %tempmap.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 -1, ptr %tempmap.i, align 4, !annotation !527
  %52 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %vf, align 8
  %hw2.i = getelementptr inbounds %struct.i40e_pf, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %vector_id to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %vector_id, align 2
  %conv.i = zext i16 %55 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %55)
  %cmp.i82 = icmp eq i16 %55, 0
  br i1 %cmp.i82, label %if.then.i84, label %if.else.i

if.then.i84:                                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #11
  %56 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %vf_id2.i, align 4
  %conv5.i = sext i16 %57 to i32
  br label %if.end.i86

if.else.i:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #11
  %num_msix_vectors_vf.i85 = getelementptr inbounds %struct.i40e_pf, ptr %53, i32 0, i32 1, i32 15, i32 39
  %58 = ptrtoint ptr %num_msix_vectors_vf.i85 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %num_msix_vectors_vf.i85, align 8
  %sub.i = add i32 %59, 1073741823
  %60 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %vf_id2.i, align 4
  %conv8.i = sext i16 %61 to i32
  %mul9.i = mul i32 %sub.i, %conv8.i
  %sub11.i = add nuw nsw i32 %conv.i, 1073741823
  %add12.i = add i32 %sub11.i, %mul9.i
  br label %if.end.i86

if.end.i86:                                       ; preds = %if.else.i, %if.then.i84
  %add12.sink.i = phi i32 [ %add12.i, %if.else.i ], [ %conv5.i, %if.then.i84 ]
  %.sink.i = phi i32 [ 151552, %if.else.i ], [ 174080, %if.then.i84 ]
  %mul13.i = shl i32 %add12.sink.i, 2
  %add14.i = add i32 %mul13.i, %.sink.i
  %62 = ptrtoint ptr %rxq_map to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %rxq_map, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %63)
  %cmp16.i = icmp eq i16 %63, 0
  br i1 %cmp16.i, label %land.lhs.true.i, label %if.end.i86.if.end22.i_crit_edge

if.end.i86.if.end22.i_crit_edge:                  ; preds = %if.end.i86
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22.i

land.lhs.true.i:                                  ; preds = %if.end.i86
  %64 = ptrtoint ptr %txq_map to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %txq_map, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %65)
  %cmp19.i = icmp eq i16 %65, 0
  br i1 %cmp19.i, label %do.body.i, label %land.lhs.true.i.if.end22.i_crit_edge

land.lhs.true.i.if.end22.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22.i

do.body.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !528
  call void @arm_heavy_mb() #9
  %66 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %hw2.i, align 8
  %add.ptr.i = getelementptr i8, ptr %67, i32 %add14.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 -16318464) #9, !srcloc !498
  br label %i40e_config_irq_link_list.exit

if.end22.i:                                       ; preds = %land.lhs.true.i.if.end22.i_crit_edge, %if.end.i86.if.end22.i_crit_edge
  %conv24.i = zext i16 %63 to i32
  %68 = ptrtoint ptr %tempmap.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %conv24.i, ptr %tempmap.i, align 4
  %call.i87 = call i32 @_find_next_bit_be(ptr noundef nonnull %tempmap.i, i32 noundef 16, i32 noundef 0) #9
  %conv26243.i = and i32 %call.i87, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %conv26243.i)
  %cmp27244.i = icmp ult i32 %conv26243.i, 16
  br i1 %cmp27244.i, label %if.end22.i.for.body.i88_crit_edge, label %if.end22.i.for.end.i89_crit_edge

if.end22.i.for.end.i89_crit_edge:                 ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i89

if.end22.i.for.body.i88_crit_edge:                ; preds = %if.end22.i
  br label %for.body.i88

for.body.i88:                                     ; preds = %for.body.i88.for.body.i88_crit_edge, %if.end22.i.for.body.i88_crit_edge
  %conv26245.i = phi i32 [ %conv26.i, %for.body.i88.for.body.i88_crit_edge ], [ %conv26243.i, %if.end22.i.for.body.i88_crit_edge ]
  %mul30.i = shl nuw nsw i32 %conv26245.i, 1
  %shl.i = shl nuw nsw i32 1, %mul30.i
  %69 = ptrtoint ptr %linklistmap.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %linklistmap.i, align 4
  %or.i = or i32 %shl.i, %70
  store i32 %or.i, ptr %linklistmap.i, align 4
  %add32.i = add nuw nsw i32 %conv26245.i, 1
  %call33.i = call i32 @_find_next_bit_be(ptr noundef nonnull %tempmap.i, i32 noundef 16, i32 noundef %add32.i) #9
  %conv26.i = and i32 %call33.i, 65535
  %cmp27.i = icmp ult i32 %conv26.i, 16
  br i1 %cmp27.i, label %for.body.i88.for.body.i88_crit_edge, label %for.body.i88.for.end.i89_crit_edge

for.body.i88.for.end.i89_crit_edge:               ; preds = %for.body.i88
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i89

for.body.i88.for.body.i88_crit_edge:              ; preds = %for.body.i88
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i88

for.end.i89:                                      ; preds = %for.body.i88.for.end.i89_crit_edge, %if.end22.i.for.end.i89_crit_edge
  %71 = ptrtoint ptr %txq_map to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %txq_map, align 2
  %conv36.i = zext i16 %72 to i32
  %73 = ptrtoint ptr %tempmap.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %conv36.i, ptr %tempmap.i, align 4
  %call37.i = call i32 @_find_next_bit_be(ptr noundef nonnull %tempmap.i, i32 noundef 16, i32 noundef 0) #9
  %conv40246.i = and i32 %call37.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %conv40246.i)
  %cmp41247.i = icmp ult i32 %conv40246.i, 16
  br i1 %cmp41247.i, label %for.end.i89.for.body43.i_crit_edge, label %for.end.i89.for.end54.i_crit_edge

for.end.i89.for.end54.i_crit_edge:                ; preds = %for.end.i89
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end54.i

for.end.i89.for.body43.i_crit_edge:               ; preds = %for.end.i89
  br label %for.body43.i

for.body43.i:                                     ; preds = %for.body43.i.for.body43.i_crit_edge, %for.end.i89.for.body43.i_crit_edge
  %conv40248.i = phi i32 [ %conv40.i, %for.body43.i.for.body43.i_crit_edge ], [ %conv40246.i, %for.end.i89.for.body43.i_crit_edge ]
  %mul45.i = shl nuw nsw i32 %conv40248.i, 1
  %add46.i = or i32 %mul45.i, 1
  %shl47.i = shl nuw i32 1, %add46.i
  %74 = ptrtoint ptr %linklistmap.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %linklistmap.i, align 4
  %or48.i = or i32 %shl47.i, %75
  store i32 %or48.i, ptr %linklistmap.i, align 4
  %add51.i = add nuw nsw i32 %conv40248.i, 1
  %call52.i = call i32 @_find_next_bit_be(ptr noundef nonnull %tempmap.i, i32 noundef 16, i32 noundef %add51.i) #9
  %conv40.i = and i32 %call52.i, 65535
  %cmp41.i = icmp ult i32 %conv40.i, 16
  br i1 %cmp41.i, label %for.body43.i.for.body43.i_crit_edge, label %for.body43.i.for.end54.i_crit_edge

for.body43.i.for.end54.i_crit_edge:               ; preds = %for.body43.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end54.i

for.body43.i.for.body43.i_crit_edge:              ; preds = %for.body43.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body43.i

for.end54.i:                                      ; preds = %for.body43.i.for.end54.i_crit_edge, %for.end.i89.for.end54.i_crit_edge
  %call56.i = call i32 @_find_first_bit_be(ptr noundef nonnull %linklistmap.i, i32 noundef 32) #9
  %conv58.i = and i32 %call56.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %conv58.i)
  %cmp60.i = icmp eq i32 %conv58.i, 32
  br i1 %cmp60.i, label %for.end54.i.i40e_config_irq_link_list.exit_crit_edge, label %if.end64.i, !prof !529

for.end54.i.i40e_config_irq_link_list.exit_crit_edge: ; preds = %for.end54.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_irq_link_list.exit

if.end64.i:                                       ; preds = %for.end54.i
  %div199.i = lshr i32 %conv58.i, 1
  %rem.i90 = and i32 %call56.i, 1
  %76 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool.not.i.i91 = icmp eq i8 %77, 0
  %extract.t30.i.i = trunc i32 %div199.i to i8
  br i1 %tobool.not.i.i91, label %if.end64.i.if.end16.i.i_crit_edge, label %for.cond.preheader.i.i

if.end64.i.if.end16.i.i_crit_edge:                ; preds = %if.end64.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16.i.i

for.cond.preheader.i.i:                           ; preds = %if.end64.i
  %78 = ptrtoint ptr %num_tc.i.i to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %num_tc.i.i, align 1
  %conv.i.i = zext i8 %79 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %79)
  %cmp35.not.i.i = icmp eq i8 %79, 0
  br i1 %cmp35.not.i.i, label %for.cond.preheader.i.i.if.end16.i.i_crit_edge, label %for.body.i.preheader.i

for.cond.preheader.i.i.if.end16.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16.i.i

for.body.i.preheader.i:                           ; preds = %for.cond.preheader.i.i
  %conv66.i = trunc i32 %div199.i to i16
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i.for.body.i.i_crit_edge, %for.body.i.preheader.i
  %i.037.i.i = phi i32 [ %inc.i.i, %if.end.i.i.for.body.i.i_crit_edge ], [ 0, %for.body.i.preheader.i ]
  %queue_id.addr.036.i.i = phi i16 [ %sub.i.i, %if.end.i.i.for.body.i.i_crit_edge ], [ %conv66.i, %for.body.i.preheader.i ]
  %num_qps.i.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.037.i.i, i32 2
  %80 = ptrtoint ptr %num_qps.i.i to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %num_qps.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %queue_id.addr.036.i.i, i16 %81)
  %cmp4.i.i = icmp ult i16 %queue_id.addr.036.i.i, %81
  br i1 %cmp4.i.i, label %if.then6.i.i, label %if.end.i.i

if.then6.i.i:                                     ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %extract.t29.le.i.i = trunc i16 %queue_id.addr.036.i.i to i8
  %vsi_id9.i.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.037.i.i, i32 1
  %82 = ptrtoint ptr %vsi_id9.i.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %vsi_id9.i.i, align 2
  br label %if.end16.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  %sub.i.i = sub i16 %queue_id.addr.036.i.i, %81
  %inc.i.i = add nuw nsw i32 %i.037.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %conv.i.i
  br i1 %exitcond.not.i.i, label %if.end16.loopexit.loopexit.i.i, label %if.end.i.i.for.body.i.i_crit_edge

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i.i

if.end16.loopexit.loopexit.i.i:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %extract.t38.i.i = trunc i16 %sub.i.i to i8
  br label %if.end16.i.i

if.end16.i.i:                                     ; preds = %if.end16.loopexit.loopexit.i.i, %if.then6.i.i, %for.cond.preheader.i.i.if.end16.i.i_crit_edge, %if.end64.i.if.end16.i.i_crit_edge
  %vsi_id.addr.0.i.i = phi i16 [ %83, %if.then6.i.i ], [ %27, %if.end64.i.if.end16.i.i_crit_edge ], [ %27, %if.end16.loopexit.loopexit.i.i ], [ %27, %for.cond.preheader.i.i.if.end16.i.i_crit_edge ]
  %queue_id.addr.1.off0.i.i = phi i8 [ %extract.t29.le.i.i, %if.then6.i.i ], [ %extract.t30.i.i, %if.end64.i.if.end16.i.i_crit_edge ], [ %extract.t38.i.i, %if.end16.loopexit.loopexit.i.i ], [ %extract.t30.i.i, %for.cond.preheader.i.i.if.end16.i.i_crit_edge ]
  %84 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %vf, align 8
  %call.i.i.i = call ptr @i40e_find_vsi_from_id(ptr noundef %85, i16 noundef zeroext %vsi_id.addr.0.i.i) #9
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end16.i.i.i40e_get_real_pf_qid.exit.i_crit_edge, label %if.end.i.i.i

if.end16.i.i.i40e_get_real_pf_qid.exit.i_crit_edge: ; preds = %if.end16.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_get_real_pf_qid.exit.i

if.end.i.i.i:                                     ; preds = %if.end16.i.i
  %mapping_flags.i.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i.i, i32 0, i32 51, i32 14
  %86 = ptrtoint ptr %mapping_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %86)
  %87 = load i16, ptr %mapping_flags.i.i.i, align 4
  %88 = and i16 %87, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %88)
  %tobool2.not.i.i.i = icmp eq i16 %88, 0
  br i1 %tobool2.not.i.i.i, label %if.else.i.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %idxprom.i.i.i = zext i8 %queue_id.addr.1.off0.i.i to i32
  %arrayidx.i.i.i = getelementptr %struct.i40e_vsi, ptr %call.i.i.i, i32 0, i32 51, i32 15, i32 %idxprom.i.i.i
  %89 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %arrayidx.i.i.i, align 2
  %91 = call i16 @llvm.bswap.i16(i16 %90) #9
  br label %i40e_get_real_pf_qid.exit.i

if.else.i.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %queue_mapping6.i.i.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i.i, i32 0, i32 51, i32 15
  %92 = ptrtoint ptr %queue_mapping6.i.i.i to i32
  call void @__asan_load2_noabort(i32 %92)
  %93 = load i16, ptr %queue_mapping6.i.i.i, align 2
  %94 = call i16 @llvm.bswap.i16(i16 %93) #9
  %conv9.i.i.i = zext i8 %queue_id.addr.1.off0.i.i to i16
  %add.i.i.i = add i16 %94, %conv9.i.i.i
  br label %i40e_get_real_pf_qid.exit.i

i40e_get_real_pf_qid.exit.i:                      ; preds = %if.else.i.i.i, %if.then3.i.i.i, %if.end16.i.i.i40e_get_real_pf_qid.exit.i_crit_edge
  %retval.0.i.i.i = phi i16 [ 2047, %if.end16.i.i.i40e_get_real_pf_qid.exit.i_crit_edge ], [ %91, %if.then3.i.i.i ], [ %add.i.i.i, %if.else.i.i.i ]
  %shl69.i = shl nuw nsw i32 %rem.i90, 11
  %conv70.i = zext i16 %retval.0.i.i.i to i32
  %or71.i = or i32 %shl69.i, %conv70.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !530
  call void @arm_heavy_mb() #9
  %95 = call i32 @llvm.bswap.i32(i32 %or71.i) #9
  %96 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %hw2.i, align 8
  %add.ptr76.i = getelementptr i8, ptr %97, i32 %add14.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr76.i, i32 %95) #9, !srcloc !498
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %conv58.i)
  %cmp79250.i = icmp ult i32 %conv58.i, 32
  br i1 %cmp79250.i, label %while.body.lr.ph.i, label %i40e_get_real_pf_qid.exit.i.while.end.i_crit_edge

i40e_get_real_pf_qid.exit.i.while.end.i_crit_edge: ; preds = %i40e_get_real_pf_qid.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end.i

while.body.lr.ph.i:                               ; preds = %i40e_get_real_pf_qid.exit.i
  %txitr_idx.i = getelementptr %struct.virtchnl_irq_map_info, ptr %msg, i32 0, i32 1, i32 %i.0107, i32 5
  %rxitr_idx.i = getelementptr %struct.virtchnl_irq_map_info, ptr %msg, i32 0, i32 1, i32 %i.0107, i32 4
  br label %while.body.i

while.body.i:                                     ; preds = %if.end105.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %conv77255.i = phi i32 [ %conv58.i, %while.body.lr.ph.i ], [ %conv93.i, %if.end105.i.while.body.i_crit_edge ]
  %pf_queue_id.0254.i = phi i16 [ %retval.0.i.i.i, %while.body.lr.ph.i ], [ %pf_queue_id.1.i, %if.end105.i.while.body.i_crit_edge ]
  %qtype.0253.i = phi i32 [ %rem.i90, %while.body.lr.ph.i ], [ %qtype.1.i, %if.end105.i.while.body.i_crit_edge ]
  %itr_idx.0252.i = phi i16 [ 0, %while.body.lr.ph.i ], [ %itr_idx.1.i, %if.end105.i.while.body.i_crit_edge ]
  %reg_idx.1251.i = phi i32 [ %add14.i, %while.body.lr.ph.i ], [ %reg_idx.2.i, %if.end105.i.while.body.i_crit_edge ]
  %98 = zext i32 %qtype.0253.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %98, ptr @__sancov_gen_cov_switch_values.293)
  switch i32 %qtype.0253.i, label %while.body.i.sw.epilog.i_crit_edge [
    i32 0, label %while.body.i.sw.epilog.sink.split.i_crit_edge
    i32 1, label %sw.bb84.i
  ]

while.body.i.sw.epilog.sink.split.i_crit_edge:    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.sink.split.i

while.body.i.sw.epilog.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i

sw.bb84.i:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %sw.bb84.i, %while.body.i.sw.epilog.sink.split.i_crit_edge
  %.sink264.i = phi i32 [ 245760, %sw.bb84.i ], [ 237568, %while.body.i.sw.epilog.sink.split.i_crit_edge ]
  %txitr_idx.sink.i = phi ptr [ %txitr_idx.i, %sw.bb84.i ], [ %rxitr_idx.i, %while.body.i.sw.epilog.sink.split.i_crit_edge ]
  %conv85.i = zext i16 %pf_queue_id.0254.i to i32
  %mul86.i = shl nuw nsw i32 %conv85.i, 2
  %add87.i = add nuw nsw i32 %.sink264.i, %mul86.i
  %99 = ptrtoint ptr %txitr_idx.sink.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %txitr_idx.sink.i, align 2
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.epilog.sink.split.i, %while.body.i.sw.epilog.i_crit_edge
  %reg_idx.2.i = phi i32 [ %reg_idx.1251.i, %while.body.i.sw.epilog.i_crit_edge ], [ %add87.i, %sw.epilog.sink.split.i ]
  %itr_idx.1.i = phi i16 [ %itr_idx.0252.i, %while.body.i.sw.epilog.i_crit_edge ], [ %100, %sw.epilog.sink.split.i ]
  %add90.i = add nuw nsw i32 %conv77255.i, 1
  %call91.i = call i32 @_find_next_bit_be(ptr noundef nonnull %linklistmap.i, i32 noundef 32, i32 noundef %add90.i) #9
  %conv93.i = and i32 %call91.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %conv93.i)
  %cmp95.i = icmp ult i32 %conv93.i, 32
  br i1 %cmp95.i, label %if.then97.i, label %sw.epilog.i.if.end105.i_crit_edge

sw.epilog.i.if.end105.i_crit_edge:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end105.i

if.then97.i:                                      ; preds = %sw.epilog.i
  %div99200.i = lshr i32 %conv93.i, 1
  %rem102.i = and i32 %call91.i, 1
  %101 = ptrtoint ptr %adq_enabled.i to i32
  call void @__asan_load1_noabort(i32 %101)
  %102 = load i8, ptr %adq_enabled.i, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %102)
  %tobool.not.i202.i = icmp eq i8 %102, 0
  %extract.t30.i203.i = trunc i32 %div99200.i to i8
  br i1 %tobool.not.i202.i, label %if.then97.i.if.end16.i226.i_crit_edge, label %for.cond.preheader.i207.i

if.then97.i.if.end16.i226.i_crit_edge:            ; preds = %if.then97.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16.i226.i

for.cond.preheader.i207.i:                        ; preds = %if.then97.i
  %103 = ptrtoint ptr %num_tc.i.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %num_tc.i.i, align 1
  %conv.i205.i = zext i8 %104 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %104)
  %cmp35.not.i206.i = icmp eq i8 %104, 0
  br i1 %cmp35.not.i206.i, label %for.cond.preheader.i207.i.if.end16.i226.i_crit_edge, label %for.body.i212.preheader.i

for.cond.preheader.i207.i.if.end16.i226.i_crit_edge: ; preds = %for.cond.preheader.i207.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16.i226.i

for.body.i212.preheader.i:                        ; preds = %for.cond.preheader.i207.i
  %conv100.i = trunc i32 %div99200.i to i16
  br label %for.body.i212.i

for.body.i212.i:                                  ; preds = %if.end.i219.i.for.body.i212.i_crit_edge, %for.body.i212.preheader.i
  %i.037.i208.i = phi i32 [ %inc.i217.i, %if.end.i219.i.for.body.i212.i_crit_edge ], [ 0, %for.body.i212.preheader.i ]
  %queue_id.addr.036.i209.i = phi i16 [ %sub.i216.i, %if.end.i219.i.for.body.i212.i_crit_edge ], [ %conv100.i, %for.body.i212.preheader.i ]
  %num_qps.i210.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.037.i208.i, i32 2
  %105 = ptrtoint ptr %num_qps.i210.i to i32
  call void @__asan_load2_noabort(i32 %105)
  %106 = load i16, ptr %num_qps.i210.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %queue_id.addr.036.i209.i, i16 %106)
  %cmp4.i211.i = icmp ult i16 %queue_id.addr.036.i209.i, %106
  br i1 %cmp4.i211.i, label %if.then6.i215.i, label %if.end.i219.i

if.then6.i215.i:                                  ; preds = %for.body.i212.i
  call void @__sanitizer_cov_trace_pc() #11
  %extract.t29.le.i213.i = trunc i16 %queue_id.addr.036.i209.i to i8
  %vsi_id9.i214.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.037.i208.i, i32 1
  %107 = ptrtoint ptr %vsi_id9.i214.i to i32
  call void @__asan_load2_noabort(i32 %107)
  %108 = load i16, ptr %vsi_id9.i214.i, align 2
  br label %if.end16.i226.i

if.end.i219.i:                                    ; preds = %for.body.i212.i
  %sub.i216.i = sub i16 %queue_id.addr.036.i209.i, %106
  %inc.i217.i = add nuw nsw i32 %i.037.i208.i, 1
  %exitcond.not.i218.i = icmp eq i32 %inc.i217.i, %conv.i205.i
  br i1 %exitcond.not.i218.i, label %if.end16.loopexit.loopexit.i221.i, label %if.end.i219.i.for.body.i212.i_crit_edge

if.end.i219.i.for.body.i212.i_crit_edge:          ; preds = %if.end.i219.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i212.i

if.end16.loopexit.loopexit.i221.i:                ; preds = %if.end.i219.i
  call void @__sanitizer_cov_trace_pc() #11
  %extract.t38.i220.i = trunc i16 %sub.i216.i to i8
  br label %if.end16.i226.i

if.end16.i226.i:                                  ; preds = %if.end16.loopexit.loopexit.i221.i, %if.then6.i215.i, %for.cond.preheader.i207.i.if.end16.i226.i_crit_edge, %if.then97.i.if.end16.i226.i_crit_edge
  %vsi_id.addr.0.i222.i = phi i16 [ %108, %if.then6.i215.i ], [ %27, %if.then97.i.if.end16.i226.i_crit_edge ], [ %27, %if.end16.loopexit.loopexit.i221.i ], [ %27, %for.cond.preheader.i207.i.if.end16.i226.i_crit_edge ]
  %queue_id.addr.1.off0.i223.i = phi i8 [ %extract.t29.le.i213.i, %if.then6.i215.i ], [ %extract.t30.i203.i, %if.then97.i.if.end16.i226.i_crit_edge ], [ %extract.t38.i220.i, %if.end16.loopexit.loopexit.i221.i ], [ %extract.t30.i203.i, %for.cond.preheader.i207.i.if.end16.i226.i_crit_edge ]
  %109 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %vf, align 8
  %call.i.i224.i = call ptr @i40e_find_vsi_from_id(ptr noundef %110, i16 noundef zeroext %vsi_id.addr.0.i222.i) #9
  %tobool.not.i.i225.i = icmp eq ptr %call.i.i224.i, null
  br i1 %tobool.not.i.i225.i, label %if.end16.i226.i.if.end105.i_crit_edge, label %if.end.i.i229.i

if.end16.i226.i.if.end105.i_crit_edge:            ; preds = %if.end16.i226.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end105.i

if.end.i.i229.i:                                  ; preds = %if.end16.i226.i
  %mapping_flags.i.i227.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i224.i, i32 0, i32 51, i32 14
  %111 = ptrtoint ptr %mapping_flags.i.i227.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %mapping_flags.i.i227.i, align 4
  %113 = and i16 %112, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %113)
  %tobool2.not.i.i228.i = icmp eq i16 %113, 0
  br i1 %tobool2.not.i.i228.i, label %if.else.i.i236.i, label %if.then3.i.i232.i

if.then3.i.i232.i:                                ; preds = %if.end.i.i229.i
  call void @__sanitizer_cov_trace_pc() #11
  %idxprom.i.i230.i = zext i8 %queue_id.addr.1.off0.i223.i to i32
  %arrayidx.i.i231.i = getelementptr %struct.i40e_vsi, ptr %call.i.i224.i, i32 0, i32 51, i32 15, i32 %idxprom.i.i230.i
  %114 = ptrtoint ptr %arrayidx.i.i231.i to i32
  call void @__asan_load2_noabort(i32 %114)
  %115 = load i16, ptr %arrayidx.i.i231.i, align 2
  %116 = call i16 @llvm.bswap.i16(i16 %115) #9
  br label %if.end105.i

if.else.i.i236.i:                                 ; preds = %if.end.i.i229.i
  call void @__sanitizer_cov_trace_pc() #11
  %queue_mapping6.i.i233.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i.i224.i, i32 0, i32 51, i32 15
  %117 = ptrtoint ptr %queue_mapping6.i.i233.i to i32
  call void @__asan_load2_noabort(i32 %117)
  %118 = load i16, ptr %queue_mapping6.i.i233.i, align 2
  %119 = call i16 @llvm.bswap.i16(i16 %118) #9
  %conv9.i.i234.i = zext i8 %queue_id.addr.1.off0.i223.i to i16
  %add.i.i235.i = add i16 %119, %conv9.i.i234.i
  br label %if.end105.i

if.end105.i:                                      ; preds = %if.else.i.i236.i, %if.then3.i.i232.i, %if.end16.i226.i.if.end105.i_crit_edge, %sw.epilog.i.if.end105.i_crit_edge
  %qtype.1.i = phi i32 [ 0, %sw.epilog.i.if.end105.i_crit_edge ], [ %rem102.i, %if.end16.i226.i.if.end105.i_crit_edge ], [ %rem102.i, %if.then3.i.i232.i ], [ %rem102.i, %if.else.i.i236.i ]
  %pf_queue_id.1.i = phi i16 [ 2047, %sw.epilog.i.if.end105.i_crit_edge ], [ 2047, %if.end16.i226.i.if.end105.i_crit_edge ], [ %116, %if.then3.i.i232.i ], [ %add.i.i235.i, %if.else.i.i236.i ]
  %shl107.i = shl nuw nsw i32 %qtype.1.i, 27
  %or108.i = or i32 %shl107.i, %conv.i
  %conv109.i = zext i16 %pf_queue_id.1.i to i32
  %shl110.i = shl nuw i32 %conv109.i, 16
  %conv113.i = zext i16 %itr_idx.1.i to i32
  %shl114.i = shl nuw nsw i32 %conv113.i, 11
  %or111.i = or i32 %shl114.i, %or108.i
  %or112.i = or i32 %or111.i, %shl110.i
  %or115.i = or i32 %or112.i, 1073741824
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !531
  call void @arm_heavy_mb() #9
  %120 = call i32 @llvm.bswap.i32(i32 %or115.i) #9
  %121 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %hw2.i, align 8
  %add.ptr120.i = getelementptr i8, ptr %122, i32 %reg_idx.2.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr120.i, i32 %120) #9, !srcloc !498
  br i1 %cmp95.i, label %if.end105.i.while.body.i_crit_edge, label %if.end105.i.while.end.i_crit_edge

if.end105.i.while.end.i_crit_edge:                ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end.i

if.end105.i.while.body.i_crit_edge:               ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body.i

while.end.i:                                      ; preds = %if.end105.i.while.end.i_crit_edge, %i40e_get_real_pf_qid.exit.i.while.end.i_crit_edge
  %123 = ptrtoint ptr %driver_caps.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %driver_caps.i, align 4
  %and.i = and i32 %124, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool121.not.i = icmp eq i32 %and.i, 0
  %cmp.not.i = xor i1 %cmp.i82, true
  %brmerge.i = select i1 %tobool121.not.i, i1 true, i1 %cmp.not.i
  br i1 %brmerge.i, label %while.end.i.i40e_config_irq_link_list.exit_crit_edge, label %if.then126.i

while.end.i.i40e_config_irq_link_list.exit_crit_edge: ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_irq_link_list.exit

if.then126.i:                                     ; preds = %while.end.i
  %125 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %hw2.i, align 8
  %add.ptr128.i = getelementptr i8, ptr %126, i32 260096
  %127 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr128.i) #9, !srcloc !491
  %128 = call i32 @llvm.bswap.i32(i32 %127) #9
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !532
  %and131.i = and i32 %128, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and131.i)
  %tobool132.not.i = icmp eq i32 %and131.i, 0
  br i1 %tobool132.not.i, label %if.then133.i, label %if.then126.i.i40e_config_irq_link_list.exit_crit_edge

if.then126.i.i40e_config_irq_link_list.exit_crit_edge: ; preds = %if.then126.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_config_irq_link_list.exit

if.then133.i:                                     ; preds = %if.then126.i
  call void @__sanitizer_cov_trace_pc() #11
  %or134.i = or i32 %128, 2
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !533
  call void @arm_heavy_mb() #9
  %129 = call i32 @llvm.bswap.i32(i32 %or134.i) #9
  %130 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %hw2.i, align 8
  %add.ptr139.i = getelementptr i8, ptr %131, i32 260096
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr139.i, i32 %129) #9, !srcloc !498
  br label %i40e_config_irq_link_list.exit

i40e_config_irq_link_list.exit:                   ; preds = %if.then133.i, %if.then126.i.i40e_config_irq_link_list.exit_crit_edge, %while.end.i.i40e_config_irq_link_list.exit_crit_edge, %for.end54.i.i40e_config_irq_link_list.exit_crit_edge, %do.body.i
  %132 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %hw2.i, align 8
  %add.ptr145.i = getelementptr i8, ptr %133, i32 745772
  %134 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr145.i) #9, !srcloc !491
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !534
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tempmap.i) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %linklistmap.i) #9
  %inc = add nuw nsw i32 %i.0107, 1
  %135 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %135)
  %136 = load i16, ptr %msg, align 2
  %conv5 = zext i16 %136 to i32
  %cmp6 = icmp ult i32 %inc, %conv5
  br i1 %cmp6, label %i40e_config_irq_link_list.exit.for.body_crit_edge, label %i40e_config_irq_link_list.exit.error_param_crit_edge

i40e_config_irq_link_list.exit.error_param_crit_edge: ; preds = %i40e_config_irq_link_list.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_config_irq_link_list.exit.for.body_crit_edge: ; preds = %i40e_config_irq_link_list.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

error_param:                                      ; preds = %i40e_config_irq_link_list.exit.error_param_crit_edge, %i40e_validate_queue_map.exit81, %i40e_validate_queue_map.exit, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %lor.lhs.false.error_param_crit_edge, %for.body.error_param_crit_edge, %for.cond.preheader.error_param_crit_edge, %if.end.error_param_crit_edge, %i40e_sync_vf_state.exit.error_param_crit_edge
  %aq_ret.0 = phi i32 [ -5, %i40e_sync_vf_state.exit.error_param_crit_edge ], [ -5, %if.end.error_param_crit_edge ], [ -5, %i40e_validate_queue_map.exit ], [ -5, %i40e_validate_queue_map.exit81 ], [ 0, %for.cond.preheader.error_param_crit_edge ], [ 0, %i40e_config_irq_link_list.exit.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %for.body.error_param_crit_edge ], [ -5, %lor.lhs.false.error_param_crit_edge ]
  %tobool.not.i.i92 = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i92, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %137 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i93 = sext i16 %138 to i32
  %139 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %140, i32 0, i32 86
  %141 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %142, i32 %conv.i.i93)
  %cmp.not.i.i = icmp sgt i32 %142, %conv.i.i93
  br i1 %cmp.not.i.i, label %if.end.i.i95, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i95:                                     ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %140, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %140, i32 0, i32 1, i32 15, i32 33
  %143 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %vf_base_id.i.i, align 8
  %145 = trunc i32 %144 to i16
  %conv7.i.i = add i16 %138, %145
  %call.i.i94 = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 7, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i94)
  %tobool8.not.i.i = icmp eq i32 %call.i.i94, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i95.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i95.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i95
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i95
  call void @__sanitizer_cov_trace_pc() #11
  %146 = ptrtoint ptr %140 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %140, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %147, i32 0, i32 44
  %148 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %148)
  %149 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %149 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %140, i32 0, i32 1, i32 23, i32 14
  %150 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %asq_last_status.i.i, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %151) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i95.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i95.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_enable_queues_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %q_map.addr.i52 = alloca i32, align 4
  %q_map.addr.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  %2 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.error_param_crit_edge, label %if.end

entry.error_param_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end:                                           ; preds = %entry
  %5 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %msg, align 4
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %1, i16 noundef zeroext %6) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

if.end.error_param_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %if.end
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %7 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %9 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %10)
  %cmp.i = icmp eq i16 %8, %10
  br i1 %cmp.i, label %if.end4, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end4:                                          ; preds = %i40e_vc_isvalid_vsi_id.exit
  %rx_queues.i = getelementptr inbounds %struct.virtchnl_queue_select, ptr %msg, i32 0, i32 2
  %11 = ptrtoint ptr %rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i48 = icmp eq i32 %12, 0
  br i1 %tobool.not.i48, label %land.lhs.true.i, label %lor.lhs.false.i

land.lhs.true.i:                                  ; preds = %if.end4
  %tx_queues.i = getelementptr inbounds %struct.virtchnl_queue_select, ptr %msg, i32 0, i32 3
  %13 = ptrtoint ptr %tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool1.not.i = icmp eq i32 %14, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.error_param_crit_edge, label %land.lhs.true.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge

land.lhs.true.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_validate_vqs_bitmaps.exit

land.lhs.true.i.error_param_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false.i:                                  ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %12)
  %cmp.i49 = icmp ugt i32 %12, 65535
  br i1 %cmp.i49, label %lor.lhs.false.i.error_param_crit_edge, label %lor.lhs.false.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge

lor.lhs.false.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_validate_vqs_bitmaps.exit

lor.lhs.false.i.error_param_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_validate_vqs_bitmaps.exit:                ; preds = %lor.lhs.false.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge, %land.lhs.true.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge
  %tx_queues4.i = getelementptr inbounds %struct.virtchnl_queue_select, ptr %msg, i32 0, i32 3
  %15 = ptrtoint ptr %tx_queues4.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %tx_queues4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %16)
  %cmp5.i = icmp ult i32 %16, 65536
  br i1 %cmp5.i, label %if.end7, label %i40e_vc_validate_vqs_bitmaps.exit.error_param_crit_edge

i40e_vc_validate_vqs_bitmaps.exit.error_param_crit_edge: ; preds = %i40e_vc_validate_vqs_bitmaps.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end7:                                          ; preds = %i40e_vc_validate_vqs_bitmaps.exit
  %vsi = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %17 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vsi, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %19 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %20 to i32
  %arrayidx = getelementptr ptr, ptr %18, i32 %idxprom
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q_map.addr.i)
  %23 = ptrtoint ptr %q_map.addr.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %12, ptr %q_map.addr.i, align 4
  %back.i = getelementptr inbounds %struct.i40e_vsi, ptr %22, i32 0, i32 57
  %24 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %back.i, align 8
  %call.i50 = call i32 @_find_next_bit_be(ptr noundef nonnull %q_map.addr.i, i32 noundef 16, i32 noundef 0) #9
  %base_queue.i = getelementptr inbounds %struct.i40e_vsi, ptr %22, i32 0, i32 41
  %conv115.i = and i32 %call.i50, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %conv115.i)
  %cmp16.i = icmp ult i32 %conv115.i, 16
  br i1 %cmp16.i, label %if.end7.for.body.i_crit_edge, label %if.end7.if.end11_crit_edge

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.end7.for.body.i_crit_edge:                     ; preds = %if.end7
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end7.for.body.i_crit_edge
  %conv117.i = phi i32 [ %conv1.i, %for.inc.i.for.body.i_crit_edge ], [ %conv115.i, %if.end7.for.body.i_crit_edge ]
  %26 = ptrtoint ptr %base_queue.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %base_queue.i, align 8
  %conv3.i = zext i16 %27 to i32
  %add.i = add nuw nsw i32 %conv117.i, %conv3.i
  %call5.i = call i32 @i40e_control_wait_rx_q(ptr noundef %25, i32 noundef %add.i, i1 noundef zeroext true) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %for.inc.i, label %i40e_ctrl_vf_rx_rings.exit

for.inc.i:                                        ; preds = %for.body.i
  %add8.i = add nuw nsw i32 %conv117.i, 1
  %call9.i = call i32 @_find_next_bit_be(ptr noundef nonnull %q_map.addr.i, i32 noundef 16, i32 noundef %add8.i) #9
  %conv1.i = and i32 %call9.i, 65535
  %cmp.i51 = icmp ult i32 %conv1.i, 16
  br i1 %cmp.i51, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.if.end11_crit_edge

for.inc.i.if.end11_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_ctrl_vf_rx_rings.exit:                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q_map.addr.i)
  br label %error_param

if.end11:                                         ; preds = %for.inc.i.if.end11_crit_edge, %if.end7.if.end11_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q_map.addr.i)
  %28 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vsi, align 8
  %30 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom14 = zext i16 %31 to i32
  %arrayidx15 = getelementptr ptr, ptr %29, i32 %idxprom14
  %32 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx15, align 4
  %34 = ptrtoint ptr %tx_queues4.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %tx_queues4.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q_map.addr.i52)
  %36 = ptrtoint ptr %q_map.addr.i52 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %q_map.addr.i52, align 4
  %back.i53 = getelementptr inbounds %struct.i40e_vsi, ptr %33, i32 0, i32 57
  %37 = ptrtoint ptr %back.i53 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %back.i53, align 8
  %call.i54 = call i32 @_find_next_bit_be(ptr noundef nonnull %q_map.addr.i52, i32 noundef 16, i32 noundef 0) #9
  %seid.i = getelementptr inbounds %struct.i40e_vsi, ptr %33, i32 0, i32 38
  %conv117.i55 = and i32 %call.i54, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %conv117.i55)
  %cmp18.i = icmp ult i32 %conv117.i55, 16
  br i1 %cmp18.i, label %for.body.lr.ph.i, label %if.end11.if.end19_crit_edge

if.end11.if.end19_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19

for.body.lr.ph.i:                                 ; preds = %if.end11
  %base_queue.i56 = getelementptr inbounds %struct.i40e_vsi, ptr %33, i32 0, i32 41
  br label %for.body.i59

for.body.i59:                                     ; preds = %for.inc.i62.for.body.i59_crit_edge, %for.body.lr.ph.i
  %conv119.i = phi i32 [ %conv117.i55, %for.body.lr.ph.i ], [ %conv1.i60, %for.inc.i62.for.body.i59_crit_edge ]
  %39 = ptrtoint ptr %seid.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %seid.i, align 2
  %conv3.i57 = zext i16 %40 to i32
  %41 = ptrtoint ptr %base_queue.i56 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %base_queue.i56, align 8
  %conv4.i = zext i16 %42 to i32
  %add.i58 = add nuw nsw i32 %conv119.i, %conv4.i
  %call6.i = call i32 @i40e_control_wait_tx_q(i32 noundef %conv3.i57, ptr noundef %38, i32 noundef %add.i58, i1 noundef zeroext false, i1 noundef zeroext true) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %for.inc.i62, label %i40e_ctrl_vf_tx_rings.exit

for.inc.i62:                                      ; preds = %for.body.i59
  %add9.i = add nuw nsw i32 %conv119.i, 1
  %call10.i = call i32 @_find_next_bit_be(ptr noundef nonnull %q_map.addr.i52, i32 noundef 16, i32 noundef %add9.i) #9
  %conv1.i60 = and i32 %call10.i, 65535
  %cmp.i61 = icmp ult i32 %conv1.i60, 16
  br i1 %cmp.i61, label %for.inc.i62.for.body.i59_crit_edge, label %for.inc.i62.if.end19_crit_edge

for.inc.i62.if.end19_crit_edge:                   ; preds = %for.inc.i62
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19

for.inc.i62.for.body.i59_crit_edge:               ; preds = %for.inc.i62
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i59

i40e_ctrl_vf_tx_rings.exit:                       ; preds = %for.body.i59
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q_map.addr.i52)
  br label %error_param

if.end19:                                         ; preds = %for.inc.i62.if.end19_crit_edge, %if.end11.if.end19_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q_map.addr.i52)
  %adq_enabled = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %43 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool20.not = icmp eq i8 %44, 0
  br i1 %tobool20.not, label %if.end19.error_param_crit_edge, label %for.cond.preheader

if.end19.error_param_crit_edge:                   ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.cond.preheader:                               ; preds = %if.end19
  %num_tc = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %45 = ptrtoint ptr %num_tc to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %num_tc, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %46)
  %cmp70 = icmp ugt i8 %46, 1
  br i1 %cmp70, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.error_param_crit_edge

for.cond.preheader.error_param_crit_edge:         ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.072 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 1, %for.cond.preheader.for.body_crit_edge ]
  %aq_ret.071 = phi i32 [ %spec.select, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %47 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %vsi, align 8
  %arrayidx24 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.072
  %49 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %arrayidx24, align 8
  %idxprom25 = zext i16 %50 to i32
  %arrayidx26 = getelementptr ptr, ptr %48, i32 %idxprom25
  %51 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %arrayidx26, align 4
  %call27 = call i32 @i40e_vsi_start_rings(ptr noundef %52) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  %spec.select = select i1 %tobool28.not, i32 %aq_ret.071, i32 -37
  %inc = add nuw nsw i32 %i.072, 1
  %53 = ptrtoint ptr %num_tc to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %num_tc, align 1
  %conv = zext i8 %54 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.error_param_crit_edge

for.body.error_param_crit_edge:                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

error_param:                                      ; preds = %for.body.error_param_crit_edge, %for.cond.preheader.error_param_crit_edge, %if.end19.error_param_crit_edge, %i40e_ctrl_vf_tx_rings.exit, %i40e_ctrl_vf_rx_rings.exit, %i40e_vc_validate_vqs_bitmaps.exit.error_param_crit_edge, %lor.lhs.false.i.error_param_crit_edge, %land.lhs.true.i.error_param_crit_edge, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %if.end.error_param_crit_edge, %entry.error_param_crit_edge
  %aq_ret.2 = phi i32 [ 0, %if.end19.error_param_crit_edge ], [ -5, %entry.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %i40e_vc_validate_vqs_bitmaps.exit.error_param_crit_edge ], [ -37, %i40e_ctrl_vf_rx_rings.exit ], [ -37, %i40e_ctrl_vf_tx_rings.exit ], [ -5, %if.end.error_param_crit_edge ], [ -5, %lor.lhs.false.i.error_param_crit_edge ], [ -5, %land.lhs.true.i.error_param_crit_edge ], [ 0, %for.cond.preheader.error_param_crit_edge ], [ %spec.select, %for.body.error_param_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %55 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %56 to i32
  %57 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %58, i32 0, i32 86
  %59 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %60, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %60, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %58, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %58, i32 0, i32 1, i32 15, i32 33
  %61 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %vf_base_id.i.i, align 8
  %63 = trunc i32 %62 to i16
  %conv7.i.i = add i16 %56, %63
  %call.i.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 8, i32 noundef %aq_ret.2, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %64 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %58, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %65, i32 0, i32 44
  %66 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %67 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %58, i32 0, i32 1, i32 23, i32 14
  %68 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %asq_last_status.i.i, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %69) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_disable_queues_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %q_map.addr.i37 = alloca i32, align 4
  %q_map.addr.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.error_param_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.error_param_crit_edge:    ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %8 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %msg, align 4
  %10 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %11, i16 noundef zeroext %9) #9
  %tobool.not.i29 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i29, label %if.end.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

if.end.error_param_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %if.end
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %12 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp.i = icmp eq i16 %13, %15
  br i1 %cmp.i, label %if.end4, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end4:                                          ; preds = %i40e_vc_isvalid_vsi_id.exit
  %rx_queues.i = getelementptr inbounds %struct.virtchnl_queue_select, ptr %msg, i32 0, i32 2
  %16 = ptrtoint ptr %rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %rx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i30 = icmp eq i32 %17, 0
  br i1 %tobool.not.i30, label %land.lhs.true.i, label %lor.lhs.false.i

land.lhs.true.i:                                  ; preds = %if.end4
  %tx_queues.i = getelementptr inbounds %struct.virtchnl_queue_select, ptr %msg, i32 0, i32 3
  %18 = ptrtoint ptr %tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool1.not.i = icmp eq i32 %19, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.error_param_crit_edge, label %land.lhs.true.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge

land.lhs.true.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_validate_vqs_bitmaps.exit

land.lhs.true.i.error_param_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false.i:                                  ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %17)
  %cmp.i31 = icmp ugt i32 %17, 65535
  br i1 %cmp.i31, label %lor.lhs.false.i.error_param_crit_edge, label %lor.lhs.false.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge

lor.lhs.false.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_validate_vqs_bitmaps.exit

lor.lhs.false.i.error_param_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_validate_vqs_bitmaps.exit:                ; preds = %lor.lhs.false.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge, %land.lhs.true.i.i40e_vc_validate_vqs_bitmaps.exit_crit_edge
  %tx_queues4.i = getelementptr inbounds %struct.virtchnl_queue_select, ptr %msg, i32 0, i32 3
  %20 = ptrtoint ptr %tx_queues4.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %tx_queues4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %21)
  %cmp5.i = icmp ult i32 %21, 65536
  br i1 %cmp5.i, label %if.end7, label %i40e_vc_validate_vqs_bitmaps.exit.error_param_crit_edge

i40e_vc_validate_vqs_bitmaps.exit.error_param_crit_edge: ; preds = %i40e_vc_validate_vqs_bitmaps.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end7:                                          ; preds = %i40e_vc_validate_vqs_bitmaps.exit
  %vsi = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %22 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vsi, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %24 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %25 to i32
  %arrayidx = getelementptr ptr, ptr %23, i32 %idxprom
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx, align 4
  %28 = ptrtoint ptr %tx_queues4.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %tx_queues4.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q_map.addr.i)
  %30 = ptrtoint ptr %q_map.addr.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %q_map.addr.i, align 4
  %back.i = getelementptr inbounds %struct.i40e_vsi, ptr %27, i32 0, i32 57
  %31 = ptrtoint ptr %back.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %back.i, align 8
  %call.i33 = call i32 @_find_next_bit_be(ptr noundef nonnull %q_map.addr.i, i32 noundef 16, i32 noundef 0) #9
  %seid.i = getelementptr inbounds %struct.i40e_vsi, ptr %27, i32 0, i32 38
  %conv117.i = and i32 %call.i33, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %conv117.i)
  %cmp18.i = icmp ult i32 %conv117.i, 16
  br i1 %cmp18.i, label %for.body.lr.ph.i, label %if.end7.if.end10_crit_edge

if.end7.if.end10_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end10

for.body.lr.ph.i:                                 ; preds = %if.end7
  %base_queue.i = getelementptr inbounds %struct.i40e_vsi, ptr %27, i32 0, i32 41
  br label %for.body.i34

for.body.i34:                                     ; preds = %for.inc.i.for.body.i34_crit_edge, %for.body.lr.ph.i
  %conv119.i = phi i32 [ %conv117.i, %for.body.lr.ph.i ], [ %conv1.i, %for.inc.i.for.body.i34_crit_edge ]
  %33 = ptrtoint ptr %seid.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %seid.i, align 2
  %conv3.i = zext i16 %34 to i32
  %35 = ptrtoint ptr %base_queue.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %base_queue.i, align 8
  %conv4.i = zext i16 %36 to i32
  %add.i = add nuw nsw i32 %conv119.i, %conv4.i
  %call6.i = call i32 @i40e_control_wait_tx_q(i32 noundef %conv3.i, ptr noundef %32, i32 noundef %add.i, i1 noundef zeroext false, i1 noundef zeroext false) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %for.inc.i, label %i40e_ctrl_vf_tx_rings.exit

for.inc.i:                                        ; preds = %for.body.i34
  %add9.i = add nuw nsw i32 %conv119.i, 1
  %call10.i = call i32 @_find_next_bit_be(ptr noundef nonnull %q_map.addr.i, i32 noundef 16, i32 noundef %add9.i) #9
  %conv1.i = and i32 %call10.i, 65535
  %cmp.i35 = icmp ult i32 %conv1.i, 16
  br i1 %cmp.i35, label %for.inc.i.for.body.i34_crit_edge, label %for.inc.i.if.end10_crit_edge

for.inc.i.if.end10_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end10

for.inc.i.for.body.i34_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i34

i40e_ctrl_vf_tx_rings.exit:                       ; preds = %for.body.i34
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q_map.addr.i)
  br label %error_param

if.end10:                                         ; preds = %for.inc.i.if.end10_crit_edge, %if.end7.if.end10_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q_map.addr.i)
  %37 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %vsi, align 8
  %39 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom13 = zext i16 %40 to i32
  %arrayidx14 = getelementptr ptr, ptr %38, i32 %idxprom13
  %41 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx14, align 4
  %43 = ptrtoint ptr %rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rx_queues.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %q_map.addr.i37)
  %45 = ptrtoint ptr %q_map.addr.i37 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %q_map.addr.i37, align 4
  %back.i38 = getelementptr inbounds %struct.i40e_vsi, ptr %42, i32 0, i32 57
  %46 = ptrtoint ptr %back.i38 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %back.i38, align 8
  %call.i39 = call i32 @_find_next_bit_be(ptr noundef nonnull %q_map.addr.i37, i32 noundef 16, i32 noundef 0) #9
  %base_queue.i40 = getelementptr inbounds %struct.i40e_vsi, ptr %42, i32 0, i32 41
  %conv115.i = and i32 %call.i39, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %conv115.i)
  %cmp16.i = icmp ult i32 %conv115.i, 16
  br i1 %cmp16.i, label %if.end10.for.body.i44_crit_edge, label %if.end10..loopexit_crit_edge

if.end10..loopexit_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %.loopexit

if.end10.for.body.i44_crit_edge:                  ; preds = %if.end10
  br label %for.body.i44

for.body.i44:                                     ; preds = %for.inc.i47.for.body.i44_crit_edge, %if.end10.for.body.i44_crit_edge
  %conv117.i41 = phi i32 [ %conv1.i45, %for.inc.i47.for.body.i44_crit_edge ], [ %conv115.i, %if.end10.for.body.i44_crit_edge ]
  %48 = ptrtoint ptr %base_queue.i40 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %base_queue.i40, align 8
  %conv3.i42 = zext i16 %49 to i32
  %add.i43 = add nuw nsw i32 %conv117.i41, %conv3.i42
  %call5.i = call i32 @i40e_control_wait_rx_q(ptr noundef %47, i32 noundef %add.i43, i1 noundef zeroext false) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %for.inc.i47, label %i40e_ctrl_vf_rx_rings.exit

for.inc.i47:                                      ; preds = %for.body.i44
  %add8.i = add nuw nsw i32 %conv117.i41, 1
  %call9.i = call i32 @_find_next_bit_be(ptr noundef nonnull %q_map.addr.i37, i32 noundef 16, i32 noundef %add8.i) #9
  %conv1.i45 = and i32 %call9.i, 65535
  %cmp.i46 = icmp ult i32 %conv1.i45, 16
  br i1 %cmp.i46, label %for.inc.i47.for.body.i44_crit_edge, label %for.inc.i47..loopexit_crit_edge

for.inc.i47..loopexit_crit_edge:                  ; preds = %for.inc.i47
  call void @__sanitizer_cov_trace_pc() #11
  br label %.loopexit

for.inc.i47.for.body.i44_crit_edge:               ; preds = %for.inc.i47
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i44

i40e_ctrl_vf_rx_rings.exit:                       ; preds = %for.body.i44
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q_map.addr.i37)
  br label %error_param

.loopexit:                                        ; preds = %for.inc.i47..loopexit_crit_edge, %if.end10..loopexit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %q_map.addr.i37)
  br label %error_param

error_param:                                      ; preds = %.loopexit, %i40e_ctrl_vf_rx_rings.exit, %i40e_ctrl_vf_tx_rings.exit, %i40e_vc_validate_vqs_bitmaps.exit.error_param_crit_edge, %lor.lhs.false.i.error_param_crit_edge, %land.lhs.true.i.error_param_crit_edge, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %if.end.error_param_crit_edge, %i40e_sync_vf_state.exit.error_param_crit_edge
  %aq_ret.0 = phi i32 [ -5, %i40e_sync_vf_state.exit.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %i40e_vc_validate_vqs_bitmaps.exit.error_param_crit_edge ], [ -37, %i40e_ctrl_vf_tx_rings.exit ], [ 0, %.loopexit ], [ -37, %i40e_ctrl_vf_rx_rings.exit ], [ -5, %if.end.error_param_crit_edge ], [ -5, %lor.lhs.false.i.error_param_crit_edge ], [ -5, %land.lhs.true.i.error_param_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %50 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %51 to i32
  %52 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %53, i32 0, i32 86
  %54 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %55, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %55, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %53, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %53, i32 0, i32 1, i32 15, i32 33
  %56 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %vf_base_id.i.i, align 8
  %58 = trunc i32 %57 to i16
  %conv7.i.i = add i16 %51, %58
  %call.i.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 9, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %59 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %53, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %60, i32 0, i32 44
  %61 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %62 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %53, i32 0, i32 1, i32 23, i32 14
  %63 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %asq_last_status.i.i, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %64) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_add_mac_addr_msg(ptr noundef %vf, ptr noundef %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.lor.lhs.false_crit_edge

for.body.i.lor.lhs.false_crit_edge:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.error_param_crit_edge, label %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge

i40e_sync_vf_state.exit.lor.lhs.false_crit_edge:  ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

i40e_sync_vf_state.exit.error_param_crit_edge:    ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false:                                    ; preds = %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge, %for.body.i.lor.lhs.false_crit_edge
  %8 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %msg, align 2
  %10 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %11, i16 noundef zeroext %9) #9
  %tobool.not.i100 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i100, label %lor.lhs.false.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

lor.lhs.false.error_param_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %lor.lhs.false
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %12 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp.i = icmp eq i16 %13, %15
  br i1 %cmp.i, label %if.end, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end:                                           ; preds = %i40e_vc_isvalid_vsi_id.exit
  %vsi3 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %16 = ptrtoint ptr %vsi3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vsi3, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %18 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %19 to i32
  %arrayidx = getelementptr ptr, ptr %17, i32 %idxprom
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx, align 4
  %mac_filter_hash_lock = getelementptr inbounds %struct.i40e_vsi, ptr %21, i32 0, i32 7
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock) #9
  %22 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vf, align 8
  %vsi2.i = getelementptr inbounds %struct.i40e_pf, ptr %23, i32 0, i32 74
  %24 = ptrtoint ptr %vsi2.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vsi2.i, align 8
  %26 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom.i = zext i16 %27 to i32
  %arrayidx.i = getelementptr ptr, ptr %25, i32 %idxprom.i
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx.i, align 4
  %num_elements.i = getelementptr inbounds %struct.virtchnl_ether_addr_list, ptr %msg, i32 0, i32 1
  %30 = ptrtoint ptr %num_elements.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %num_elements.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %31)
  %cmp103.not.i = icmp eq i16 %31, 0
  br i1 %cmp103.not.i, label %if.end.for.end.i106_crit_edge, label %for.body.lr.ph.i

if.end.for.end.i106_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i106

for.body.lr.ph.i:                                 ; preds = %if.end
  %vf_caps.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 15
  %pf_set_mac.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 8
  %default_lan_addr.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 6
  %add.ptr1.i93.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 6, i32 0, i32 4
  br label %for.body.i101

for.body.i101:                                    ; preds = %for.inc.i.for.body.i101_crit_edge, %for.body.lr.ph.i
  %i.0105.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc31.i, %for.inc.i.for.body.i101_crit_edge ]
  %mac2add_cnt.0104.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %spec.select.i, %for.inc.i.for.body.i101_crit_edge ]
  %arrayidx5.i = getelementptr %struct.virtchnl_ether_addr_list, ptr %msg, i32 0, i32 2, i32 %i.0105.i
  %32 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %arrayidx5.i, align 2
  %add.ptr1.i.i = getelementptr i8, ptr %arrayidx5.i, i32 2
  %34 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %add.ptr1.i.i, align 2
  %and9.i.i = and i16 %35, %33
  %add.ptr3.i.i = getelementptr i8, ptr %arrayidx5.i, i32 4
  %36 = ptrtoint ptr %add.ptr3.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %add.ptr3.i.i, align 2
  %and510.i.i = and i16 %and9.i.i, %37
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i.i)
  %cmp.i.i = icmp eq i16 %and510.i.i, -1
  br i1 %cmp.i.i, label %for.body.i101.do.end.i_crit_edge, label %lor.lhs.false.i

for.body.i101.do.end.i_crit_edge:                 ; preds = %for.body.i101
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end.i

lor.lhs.false.i:                                  ; preds = %for.body.i101
  %38 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx5.i, align 4
  %conv.i.i = zext i16 %37 to i32
  %or.i.i = or i32 %39, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i91.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i91.i, label %lor.lhs.false.i.do.end.i_crit_edge, label %if.end.i103

lor.lhs.false.i.do.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end.i

do.end.i:                                         ; preds = %lor.lhs.false.i.do.end.i_crit_edge, %for.body.i101.do.end.i_crit_edge
  %40 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %23, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.167, ptr noundef %arrayidx5.i) #12
  br label %if.then5

if.end.i103:                                      ; preds = %lor.lhs.false.i
  %42 = ptrtoint ptr %vf_caps.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %vf_caps.i, align 4
  %and1.i.i = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i102 = icmp ne i32 %and1.i.i, 0
  %44 = and i32 %39, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.i.i = icmp ne i32 %44, 0
  %or.cond.i = select i1 %tobool.not.i102, i1 true, i1 %tobool.i.i
  br i1 %or.cond.i, label %if.end.i103.for.inc.i_crit_edge, label %land.lhs.true12.i

if.end.i103.for.inc.i_crit_edge:                  ; preds = %if.end.i103
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

land.lhs.true12.i:                                ; preds = %if.end.i103
  %45 = ptrtoint ptr %pf_set_mac.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %pf_set_mac.i, align 4, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool13.not.i = icmp eq i8 %46, 0
  br i1 %tobool13.not.i, label %land.lhs.true12.i.for.inc.i_crit_edge, label %land.lhs.true15.i

land.lhs.true12.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

land.lhs.true15.i:                                ; preds = %land.lhs.true12.i
  %47 = ptrtoint ptr %default_lan_addr.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %default_lan_addr.i, align 4
  %xor.i.i = xor i32 %48, %39
  %49 = ptrtoint ptr %add.ptr1.i93.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %add.ptr1.i93.i, align 2
  %xor37.i.i = xor i16 %50, %37
  %xor3.i.i = zext i16 %xor37.i.i to i32
  %or.i94.i = or i32 %xor.i.i, %xor3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i94.i)
  %cmp.i95.i = icmp eq i32 %or.i94.i, 0
  br i1 %cmp.i95.i, label %land.lhs.true15.i.for.inc.i_crit_edge, label %do.end22.i

land.lhs.true15.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

do.end22.i:                                       ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #11
  %51 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %23, align 8
  %dev24.i = getelementptr inbounds %struct.pci_dev, ptr %52, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24.i, ptr noundef nonnull @.str.170) #12
  br label %if.then5

for.inc.i:                                        ; preds = %land.lhs.true15.i.for.inc.i_crit_edge, %land.lhs.true12.i.for.inc.i_crit_edge, %if.end.i103.for.inc.i_crit_edge
  %call26.i = tail call ptr @i40e_find_mac(ptr noundef %29, ptr noundef %arrayidx5.i) #9
  %tobool27.not.i = icmp eq ptr %call26.i, null
  %inc.i104 = zext i1 %tobool27.not.i to i32
  %spec.select.i = add i32 %mac2add_cnt.0104.i, %inc.i104
  %inc31.i = add nuw nsw i32 %i.0105.i, 1
  %53 = ptrtoint ptr %num_elements.i to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %num_elements.i, align 2
  %conv.i = zext i16 %54 to i32
  %cmp.i105 = icmp ult i32 %inc31.i, %conv.i
  br i1 %cmp.i105, label %for.inc.i.for.body.i101_crit_edge, label %for.inc.i.for.end.i106_crit_edge

for.inc.i.for.end.i106_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i106

for.inc.i.for.body.i101_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i101

for.end.i106:                                     ; preds = %for.inc.i.for.end.i106_crit_edge, %if.end.for.end.i106_crit_edge
  %mac2add_cnt.0.lcssa.i = phi i32 [ 0, %if.end.for.end.i106_crit_edge ], [ %spec.select.i, %for.inc.i.for.end.i106_crit_edge ]
  %vf_caps32.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 15
  %55 = ptrtoint ptr %vf_caps32.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %vf_caps32.i, align 4
  %and1.i90.i = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i90.i)
  %tobool34.not.i = icmp eq i32 %and1.i90.i, 0
  %call36.i = tail call i32 @i40e_count_filters(ptr noundef %29) #9
  %add.i = add i32 %call36.i, %mac2add_cnt.0.lcssa.i
  br i1 %tobool34.not.i, label %if.then35.i, label %if.else.i

if.then35.i:                                      ; preds = %for.end.i106
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %add.i)
  %cmp37.i = icmp sgt i32 %add.i, 18
  br i1 %cmp37.i, label %do.end42.i, label %if.then35.i.i40e_check_vf_permission.exit_crit_edge

if.then35.i.i40e_check_vf_permission.exit_crit_edge: ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_check_vf_permission.exit

do.end42.i:                                       ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #11
  %57 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %23, align 8
  %dev44.i = getelementptr inbounds %struct.pci_dev, ptr %58, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev44.i, ptr noundef nonnull @.str.173) #12
  br label %if.then5

if.else.i:                                        ; preds = %for.end.i106
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %23, i32 0, i32 86
  %59 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %num_alloc_vfs.i, align 4
  %num_ports.i = getelementptr inbounds %struct.i40e_pf, ptr %23, i32 0, i32 1, i32 21
  %61 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %num_ports.i, align 2
  %63 = udiv i16 3072, %62
  %div.i = zext i16 %63 to i32
  %mul.neg.i = mul i32 %60, -18
  %sub.i = add i32 %mul.neg.i, %div.i
  %div49.i = sdiv i32 %sub.i, %60
  %add50.i = add i32 %div49.i, 18
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %add50.i)
  %cmp51.i = icmp sgt i32 %add.i, %add50.i
  br i1 %cmp51.i, label %do.end56.i, label %if.else.i.i40e_check_vf_permission.exit_crit_edge

if.else.i.i40e_check_vf_permission.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_check_vf_permission.exit

do.end56.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #11
  %64 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %23, align 8
  %dev58.i = getelementptr inbounds %struct.pci_dev, ptr %65, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev58.i, ptr noundef nonnull @.str.176) #12
  br label %if.then5

i40e_check_vf_permission.exit:                    ; preds = %if.else.i.i40e_check_vf_permission.exit_crit_edge, %if.then35.i.i40e_check_vf_permission.exit_crit_edge
  %66 = ptrtoint ptr %num_elements.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %num_elements.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %67)
  %cmp135.not = icmp eq i16 %67, 0
  br i1 %cmp135.not, label %i40e_check_vf_permission.exit.for.end_crit_edge, label %for.body.lr.ph

i40e_check_vf_permission.exit.for.end_crit_edge:  ; preds = %i40e_check_vf_permission.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.lr.ph:                                   ; preds = %i40e_check_vf_permission.exit
  %default_lan_addr = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 6
  %add.ptr.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 6, i32 0, i32 4
  br label %for.body

if.then5:                                         ; preds = %do.end56.i, %do.end42.i, %do.end22.i, %do.end.i
  %retval.2.i.ph = phi i32 [ -10, %do.end.i ], [ -1, %do.end22.i ], [ -1, %do.end42.i ], [ -1, %do.end56.i ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  br label %error_param

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0136 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx9 = getelementptr %struct.virtchnl_ether_addr_list, ptr %msg, i32 0, i32 2, i32 %i.0136
  %call10 = tail call ptr @i40e_find_mac(ptr noundef %21, ptr noundef %arrayidx9) #9
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.then12, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

if.then12:                                        ; preds = %for.body
  %call17 = tail call ptr @i40e_add_mac_filter(ptr noundef %21, ptr noundef %arrayidx9) #9
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %cleanup, label %if.end26

if.end26:                                         ; preds = %if.then12
  %68 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx9, align 4
  %70 = and i32 %69, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool.i.not.i = icmp eq i32 %70, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %if.end26.for.inc_crit_edge

if.end26.for.inc_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

is_valid_ether_addr.exit:                         ; preds = %if.end26
  %add.ptr.i.i = getelementptr i8, ptr %arrayidx9, i32 4
  %71 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i107 = zext i16 %72 to i32
  %or.i.i108 = or i32 %69, %conv.i.i107
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i108)
  %cmp.i.i109.not = icmp eq i32 %or.i.i108, 0
  br i1 %cmp.i.i109.not, label %is_valid_ether_addr.exit.for.inc_crit_edge, label %land.lhs.true

is_valid_ether_addr.exit.for.inc_crit_edge:       ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

land.lhs.true:                                    ; preds = %is_valid_ether_addr.exit
  %73 = ptrtoint ptr %default_lan_addr to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %default_lan_addr, align 4
  %75 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %add.ptr.i, align 2
  %conv.i111 = zext i16 %76 to i32
  %or.i = or i32 %74, %conv.i111
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i112 = icmp eq i32 %or.i, 0
  br i1 %cmp.i112, label %if.then37, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

if.then37:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %77 = ptrtoint ptr %default_lan_addr to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %69, ptr %default_lan_addr, align 4
  %78 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %add.ptr.i.i, align 2
  %80 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store2_noabort(i32 %80)
  store i16 %79, ptr %add.ptr.i, align 2
  br label %for.inc

cleanup:                                          ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  %81 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %82, i32 0, i32 44
  %83 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %83)
  %84 = load i16, ptr %vf_id2.i, align 4
  %conv24 = sext i16 %84 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.162, ptr noundef %arrayidx9, i32 noundef %conv24) #12
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  br label %error_param

for.inc:                                          ; preds = %if.then37, %land.lhs.true.for.inc_crit_edge, %is_valid_ether_addr.exit.for.inc_crit_edge, %if.end26.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0136, 1
  %85 = ptrtoint ptr %num_elements.i to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %num_elements.i, align 2
  %conv = zext i16 %86 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %i40e_check_vf_permission.exit.for.end_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  %call48 = tail call i32 @i40e_sync_vsi_filters(ptr noundef %21) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %for.end.error_param_crit_edge, label %do.end53

for.end.error_param_crit_edge:                    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

do.end53:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  %87 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %1, align 8
  %dev55 = getelementptr inbounds %struct.pci_dev, ptr %88, i32 0, i32 44
  %89 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %vf_id2.i, align 4
  %conv57 = sext i16 %90 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev55, ptr noundef nonnull @.str.165, i32 noundef %conv57, i32 noundef %call48) #12
  br label %error_param

error_param:                                      ; preds = %do.end53, %for.end.error_param_crit_edge, %cleanup, %if.then5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %lor.lhs.false.error_param_crit_edge, %i40e_sync_vf_state.exit.error_param_crit_edge
  %ret.2 = phi i32 [ %retval.2.i.ph, %if.then5 ], [ -5, %cleanup ], [ %call48, %do.end53 ], [ 0, %for.end.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %i40e_sync_vf_state.exit.error_param_crit_edge ], [ -5, %lor.lhs.false.error_param_crit_edge ]
  %tobool.not.i114 = icmp eq ptr %vf, null
  br i1 %tobool.not.i114, label %error_param.i40e_vc_send_msg_to_vf.exit_crit_edge, label %lor.lhs.false.i118

error_param.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

lor.lhs.false.i118:                               ; preds = %error_param
  %vf_id.i115 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %91 = ptrtoint ptr %vf_id.i115 to i32
  call void @__asan_load2_noabort(i32 %91)
  %92 = load i16, ptr %vf_id.i115, align 4
  %conv.i116 = sext i16 %92 to i32
  %93 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i117 = getelementptr inbounds %struct.i40e_pf, ptr %94, i32 0, i32 86
  %95 = ptrtoint ptr %num_alloc_vfs.i117 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %num_alloc_vfs.i117, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %96, i32 %conv.i116)
  %cmp.not.i = icmp sgt i32 %96, %conv.i116
  br i1 %cmp.not.i, label %if.end.i120, label %lor.lhs.false.i118.i40e_vc_send_msg_to_vf.exit_crit_edge

lor.lhs.false.i118.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i118
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

if.end.i120:                                      ; preds = %lor.lhs.false.i118
  %hw4.i = getelementptr inbounds %struct.i40e_pf, ptr %94, i32 0, i32 1
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %94, i32 0, i32 1, i32 15, i32 33
  %97 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %vf_base_id.i, align 8
  %99 = trunc i32 %98 to i16
  %conv7.i = add i16 %92, %99
  %call.i119 = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i, i16 noundef zeroext %conv7.i, i32 noundef 10, i32 noundef %ret.2, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i119)
  %tobool8.not.i = icmp eq i32 %call.i119, 0
  br i1 %tobool8.not.i, label %if.end.i120.i40e_vc_send_msg_to_vf.exit_crit_edge, label %do.end.i122

if.end.i120.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %if.end.i120
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

do.end.i122:                                      ; preds = %if.end.i120
  call void @__sanitizer_cov_trace_pc() #11
  %100 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %94, align 8
  %dev.i121 = getelementptr inbounds %struct.pci_dev, ptr %101, i32 0, i32 44
  %102 = ptrtoint ptr %vf_id.i115 to i32
  call void @__asan_load2_noabort(i32 %102)
  %103 = load i16, ptr %vf_id.i115, align 4
  %conv11.i = sext i16 %103 to i32
  %asq_last_status.i = getelementptr inbounds %struct.i40e_pf, ptr %94, i32 0, i32 1, i32 23, i32 14
  %104 = ptrtoint ptr %asq_last_status.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %asq_last_status.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i121, ptr noundef nonnull @.str.131, i32 noundef %conv11.i, i32 noundef %105) #12
  br label %i40e_vc_send_msg_to_vf.exit

i40e_vc_send_msg_to_vf.exit:                      ; preds = %do.end.i122, %if.end.i120.i40e_vc_send_msg_to_vf.exit_crit_edge, %lor.lhs.false.i118.i40e_vc_send_msg_to_vf.exit_crit_edge, %error_param.i40e_vc_send_msg_to_vf.exit_crit_edge
  %retval.0.i123 = phi i32 [ -5, %do.end.i122 ], [ -22, %lor.lhs.false.i118.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ 0, %if.end.i120.i40e_vc_send_msg_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i123
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_del_mac_addr_msg(ptr noundef %vf, ptr noundef %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.lor.lhs.false_crit_edge

for.body.i.lor.lhs.false_crit_edge:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.error_param_crit_edge, label %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge

i40e_sync_vf_state.exit.lor.lhs.false_crit_edge:  ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

i40e_sync_vf_state.exit.error_param_crit_edge:    ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false:                                    ; preds = %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge, %for.body.i.lor.lhs.false_crit_edge
  %8 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %msg, align 2
  %10 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %11, i16 noundef zeroext %9) #9
  %tobool.not.i160 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i160, label %lor.lhs.false.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

lor.lhs.false.error_param_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %lor.lhs.false
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %12 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp.i = icmp eq i16 %13, %15
  br i1 %cmp.i, label %for.cond.preheader, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.cond.preheader:                               ; preds = %i40e_vc_isvalid_vsi_id.exit
  %num_elements = getelementptr inbounds %struct.virtchnl_ether_addr_list, ptr %msg, i32 0, i32 1
  %16 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %num_elements, align 2
  %conv = zext i16 %17 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %cmp175.not = icmp eq i16 %17, 0
  br i1 %cmp175.not, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %default_lan_addr = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 6
  %add.ptr1.i164 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 6, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %if.end19.for.body_crit_edge, %for.body.lr.ph
  %was_unimac_deleted.0.off0177 = phi i1 [ false, %for.body.lr.ph ], [ %spec.select, %if.end19.for.body_crit_edge ]
  %i.0176 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end19.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.virtchnl_ether_addr_list, ptr %msg, i32 0, i32 2, i32 %i.0176
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %arrayidx, align 2
  %add.ptr1.i = getelementptr i8, ptr %arrayidx, i32 2
  %20 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %add.ptr1.i, align 2
  %and9.i = and i16 %21, %19
  %add.ptr3.i = getelementptr i8, ptr %arrayidx, i32 4
  %22 = ptrtoint ptr %add.ptr3.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %add.ptr3.i, align 2
  %and510.i = and i16 %and9.i, %23
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i)
  %cmp.i161 = icmp eq i16 %and510.i, -1
  br i1 %cmp.i161, label %for.body.do.end_crit_edge, label %lor.lhs.false6

for.body.do.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

lor.lhs.false6:                                   ; preds = %for.body
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx, align 4
  %conv.i = zext i16 %23 to i32
  %or.i = or i32 %25, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i162 = icmp eq i32 %or.i, 0
  br i1 %cmp.i162, label %lor.lhs.false6.do.end_crit_edge, label %if.end19

lor.lhs.false6.do.end_crit_edge:                  ; preds = %lor.lhs.false6
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

do.end:                                           ; preds = %lor.lhs.false6.do.end_crit_edge, %for.body.do.end_crit_edge
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  %28 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %vf_id2.i, align 4
  %conv18 = sext i16 %29 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.178, ptr noundef %arrayidx, i32 noundef %conv18) #12
  br label %error_param

if.end19:                                         ; preds = %lor.lhs.false6
  %30 = ptrtoint ptr %default_lan_addr to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %default_lan_addr, align 4
  %xor.i = xor i32 %31, %25
  %32 = ptrtoint ptr %add.ptr1.i164 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %add.ptr1.i164, align 2
  %xor37.i = xor i16 %33, %23
  %xor3.i = zext i16 %xor37.i to i32
  %or.i165 = or i32 %xor.i, %xor3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i165)
  %cmp.i166 = icmp eq i32 %or.i165, 0
  %spec.select = select i1 %cmp.i166, i1 true, i1 %was_unimac_deleted.0.off0177
  %inc = add nuw nsw i32 %i.0176, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.end.loopexit, label %if.end19.for.body_crit_edge

if.end19.for.body_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end.loopexit:                                 ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #11
  %phi.bo = xor i1 %spec.select, true
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.cond.preheader.for.end_crit_edge
  %was_unimac_deleted.0.off0.lcssa = phi i1 [ true, %for.cond.preheader.for.end_crit_edge ], [ %phi.bo, %for.end.loopexit ]
  %vsi29 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %34 = ptrtoint ptr %vsi29 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %vsi29, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %36 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %37 to i32
  %arrayidx30 = getelementptr ptr, ptr %35, i32 %idxprom
  %38 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx30, align 4
  %mac_filter_hash_lock = getelementptr inbounds %struct.i40e_vsi, ptr %39, i32 0, i32 7
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock) #9
  %40 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %num_elements, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %41)
  %cmp34179.not = icmp eq i16 %41, 0
  br i1 %cmp34179.not, label %for.end.for.end47_crit_edge, label %for.end.for.body36_crit_edge

for.end.for.body36_crit_edge:                     ; preds = %for.end
  br label %for.body36

for.end.for.end47_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end47

for.cond31:                                       ; preds = %for.body36
  %inc46 = add nuw nsw i32 %i.1180, 1
  %42 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %num_elements, align 2
  %conv33 = zext i16 %43 to i32
  %cmp34 = icmp ult i32 %inc46, %conv33
  br i1 %cmp34, label %for.cond31.for.body36_crit_edge, label %for.cond31.for.end47_crit_edge

for.cond31.for.end47_crit_edge:                   ; preds = %for.cond31
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end47

for.cond31.for.body36_crit_edge:                  ; preds = %for.cond31
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body36

for.body36:                                       ; preds = %for.cond31.for.body36_crit_edge, %for.end.for.body36_crit_edge
  %i.1180 = phi i32 [ %inc46, %for.cond31.for.body36_crit_edge ], [ 0, %for.end.for.body36_crit_edge ]
  %arrayidx38 = getelementptr %struct.virtchnl_ether_addr_list, ptr %msg, i32 0, i32 2, i32 %i.1180
  %call41 = tail call i32 @i40e_del_mac_filter(ptr noundef %39, ptr noundef %arrayidx38) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool.not = icmp eq i32 %call41, 0
  br i1 %tobool.not, label %for.cond31, label %if.then42

if.then42:                                        ; preds = %for.body36
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  br label %error_param

for.end47:                                        ; preds = %for.cond31.for.end47_crit_edge, %for.end.for.end47_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  %call49 = tail call i32 @i40e_sync_vsi_filters(ptr noundef %39) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49)
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %for.end47.if.end59_crit_edge, label %do.end54

for.end47.if.end59_crit_edge:                     ; preds = %for.end47
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end59

do.end54:                                         ; preds = %for.end47
  call void @__sanitizer_cov_trace_pc() #11
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %1, align 8
  %dev56 = getelementptr inbounds %struct.pci_dev, ptr %45, i32 0, i32 44
  %46 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %vf_id2.i, align 4
  %conv58 = sext i16 %47 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev56, ptr noundef nonnull @.str.165, i32 noundef %conv58, i32 noundef %call49) #12
  br label %if.end59

if.end59:                                         ; preds = %do.end54, %for.end47.if.end59_crit_edge
  %trusted = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 9
  %48 = ptrtoint ptr %trusted to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %trusted, align 1, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool60.not = icmp eq i8 %49, 0
  %brmerge = select i1 %tobool60.not, i1 true, i1 %was_unimac_deleted.0.off0.lcssa
  br i1 %brmerge, label %if.end59.error_param_crit_edge, label %if.then64

if.end59.error_param_crit_edge:                   ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.then64:                                        ; preds = %if.end59
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock) #9
  br label %for.body71

for.body71:                                       ; preds = %for.inc101.for.body71_crit_edge, %if.then64
  %bkt.0186 = phi i32 [ 0, %if.then64 ], [ %inc102, %for.inc101.for.body71_crit_edge ]
  %macaddr.0185 = phi ptr [ null, %if.then64 ], [ %macaddr.1.lcssa, %for.inc101.for.body71_crit_edge ]
  %arrayidx72 = getelementptr %struct.i40e_vsi, ptr %39, i32 0, i32 8, i32 %bkt.0186
  %50 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx72, align 4
  %tobool76.not181 = icmp eq ptr %51, null
  br i1 %tobool76.not181, label %for.body71.for.inc101_crit_edge, label %for.body71.land.rhs77_crit_edge

for.body71.land.rhs77_crit_edge:                  ; preds = %for.body71
  br label %land.rhs77

for.body71.for.inc101_crit_edge:                  ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc101

land.rhs77:                                       ; preds = %is_valid_ether_addr.exit.thread.land.rhs77_crit_edge, %for.body71.land.rhs77_crit_edge
  %f.1183 = phi ptr [ %53, %is_valid_ether_addr.exit.thread.land.rhs77_crit_edge ], [ %51, %for.body71.land.rhs77_crit_edge ]
  %macaddr.1182 = phi ptr [ %59, %is_valid_ether_addr.exit.thread.land.rhs77_crit_edge ], [ %macaddr.0185, %for.body71.land.rhs77_crit_edge ]
  %52 = ptrtoint ptr %f.1183 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %f.1183, align 4
  %macaddr82 = getelementptr inbounds %struct.i40e_mac_filter, ptr %f.1183, i32 0, i32 1
  %54 = ptrtoint ptr %macaddr82 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %macaddr82, align 4
  %56 = and i32 %55, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.i.not.i = icmp eq i32 %56, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %land.rhs77.is_valid_ether_addr.exit.thread_crit_edge

land.rhs77.is_valid_ether_addr.exit.thread_crit_edge: ; preds = %land.rhs77
  call void @__sanitizer_cov_trace_pc() #11
  br label %is_valid_ether_addr.exit.thread

is_valid_ether_addr.exit:                         ; preds = %land.rhs77
  call void @__sanitizer_cov_trace_pc() #11
  %add.ptr.i.i = getelementptr %struct.i40e_mac_filter, ptr %f.1183, i32 0, i32 1, i32 4
  %57 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %58 to i32
  %or.i.i = or i32 %55, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  %spec.select172 = select i1 %cmp.i.i.not, ptr %macaddr.1182, ptr %macaddr82
  br label %is_valid_ether_addr.exit.thread

is_valid_ether_addr.exit.thread:                  ; preds = %is_valid_ether_addr.exit, %land.rhs77.is_valid_ether_addr.exit.thread_crit_edge
  %59 = phi ptr [ %macaddr.1182, %land.rhs77.is_valid_ether_addr.exit.thread_crit_edge ], [ %spec.select172, %is_valid_ether_addr.exit ]
  %tobool76.not = icmp eq ptr %53, null
  br i1 %tobool76.not, label %is_valid_ether_addr.exit.thread.for.inc101_crit_edge, label %is_valid_ether_addr.exit.thread.land.rhs77_crit_edge

is_valid_ether_addr.exit.thread.land.rhs77_crit_edge: ; preds = %is_valid_ether_addr.exit.thread
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.rhs77

is_valid_ether_addr.exit.thread.for.inc101_crit_edge: ; preds = %is_valid_ether_addr.exit.thread
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc101

for.inc101:                                       ; preds = %is_valid_ether_addr.exit.thread.for.inc101_crit_edge, %for.body71.for.inc101_crit_edge
  %macaddr.1.lcssa = phi ptr [ %macaddr.0185, %for.body71.for.inc101_crit_edge ], [ %59, %is_valid_ether_addr.exit.thread.for.inc101_crit_edge ]
  %inc102 = add nuw nsw i32 %bkt.0186, 1
  %exitcond188.not = icmp eq i32 %inc102, 256
  br i1 %exitcond188.not, label %for.end103, label %for.inc101.for.body71_crit_edge

for.inc101.for.body71_crit_edge:                  ; preds = %for.inc101
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body71

for.end103:                                       ; preds = %for.inc101
  %tobool104.not = icmp eq ptr %macaddr.1.lcssa, null
  br i1 %tobool104.not, label %for.end103.if.end109_crit_edge, label %if.then105

for.end103.if.end109_crit_edge:                   ; preds = %for.end103
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end109

if.then105:                                       ; preds = %for.end103
  call void @__sanitizer_cov_trace_pc() #11
  %default_lan_addr106 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 6
  %60 = ptrtoint ptr %macaddr.1.lcssa to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %macaddr.1.lcssa, align 4
  %62 = ptrtoint ptr %default_lan_addr106 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %default_lan_addr106, align 4
  %add.ptr.i168 = getelementptr i8, ptr %macaddr.1.lcssa, i32 4
  %63 = ptrtoint ptr %add.ptr.i168 to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %add.ptr.i168, align 2
  %add.ptr1.i169 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 6, i32 0, i32 4
  %65 = ptrtoint ptr %add.ptr1.i169 to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %64, ptr %add.ptr1.i169, align 2
  br label %if.end109

if.end109:                                        ; preds = %if.then105, %for.end103.if.end109_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  br label %error_param

error_param:                                      ; preds = %if.end109, %if.end59.error_param_crit_edge, %if.then42, %do.end, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %lor.lhs.false.error_param_crit_edge, %i40e_sync_vf_state.exit.error_param_crit_edge
  %ret.0 = phi i32 [ -10, %do.end ], [ -10, %if.then42 ], [ %call49, %if.end109 ], [ %call49, %if.end59.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %i40e_sync_vf_state.exit.error_param_crit_edge ], [ -5, %lor.lhs.false.error_param_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %66 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i170 = sext i16 %67 to i32
  %68 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %69, i32 0, i32 86
  %70 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %conv.i.i170)
  %cmp.not.i.i = icmp sgt i32 %71, %conv.i.i170
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %69, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %69, i32 0, i32 1, i32 15, i32 33
  %72 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %vf_base_id.i.i, align 8
  %74 = trunc i32 %73 to i16
  %conv7.i.i = add i16 %67, %74
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 11, i32 noundef %ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %75 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %69, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %76, i32 0, i32 44
  %77 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %78 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %69, i32 0, i32 1, i32 23, i32 14
  %79 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %80) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_add_vlan_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %num_vlan = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 21
  %2 = ptrtoint ptr %num_vlan to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %num_vlan, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 15, i16 %3)
  %cmp = icmp ugt i16 %3, 15
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %vf_caps = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 15
  %4 = ptrtoint ptr %vf_caps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %vf_caps, align 4
  %and1.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %do.end, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.182) #12
  br label %error_param

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %vf_states = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  %8 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %vf_states, align 4
  %10 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool4.not = icmp eq i32 %10, 0
  br i1 %tobool4.not, label %if.end.error_param_crit_edge, label %lor.lhs.false

if.end.error_param_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false:                                    ; preds = %if.end
  %11 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %msg, align 2
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %1, i16 noundef zeroext %12) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %lor.lhs.false.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

lor.lhs.false.error_param_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %lor.lhs.false
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %13 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %15 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %14, i16 %16)
  %cmp.i = icmp eq i16 %14, %16
  br i1 %cmp.i, label %for.cond.preheader, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.cond.preheader:                               ; preds = %i40e_vc_isvalid_vsi_id.exit
  %num_elements = getelementptr inbounds %struct.virtchnl_vlan_filter_list, ptr %msg, i32 0, i32 1
  %17 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %num_elements, align 2
  %conv8 = zext i16 %18 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %cmp9121.not = icmp eq i16 %18, 0
  br i1 %cmp9121.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.0122, 1
  %exitcond.not = icmp eq i32 %inc, %conv8
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0122 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.virtchnl_vlan_filter_list, ptr %msg, i32 0, i32 2, i32 %i.0122
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %arrayidx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4095, i16 %20)
  %cmp12 = icmp ugt i16 %20, 4095
  br i1 %cmp12, label %if.then14, label %for.cond

if.then14:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %conv11 = zext i16 %20 to i32
  %21 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %1, align 8
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev19, ptr noundef nonnull @.str.185, i32 noundef %conv11) #12
  br label %error_param

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %vsi24 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %23 = ptrtoint ptr %vsi24 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vsi24, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %25 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %26 to i32
  %arrayidx25 = getelementptr ptr, ptr %24, i32 %idxprom
  %27 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx25, align 4
  %pvid = getelementptr inbounds %struct.i40e_vsi, ptr %28, i32 0, i32 51, i32 5
  %29 = ptrtoint ptr %pvid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %pvid, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %30)
  %tobool26.not = icmp eq i16 %30, 0
  br i1 %tobool26.not, label %if.end28, label %for.end.error_param_crit_edge

for.end.error_param_crit_edge:                    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end28:                                         ; preds = %for.end
  tail call void @i40e_vlan_stripping_enable(ptr noundef %28) #9
  %31 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %num_elements, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %32)
  %cmp32124.not = icmp eq i16 %32, 0
  br i1 %cmp32124.not, label %if.end28.error_param_crit_edge, label %for.body34.lr.ph

if.end28.error_param_crit_edge:                   ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.body34.lr.ph:                                 ; preds = %if.end28
  %hw = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %seid = getelementptr inbounds %struct.i40e_vsi, ptr %28, i32 0, i32 38
  br label %for.body34

for.body34:                                       ; preds = %if.end72.for.body34_crit_edge, %for.body34.lr.ph
  %i.1125 = phi i32 [ 0, %for.body34.lr.ph ], [ %inc74, %if.end72.for.body34_crit_edge ]
  %arrayidx36 = getelementptr %struct.virtchnl_vlan_filter_list, ptr %msg, i32 0, i32 2, i32 %i.1125
  %33 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %arrayidx36, align 2
  %call37 = tail call i32 @i40e_vsi_add_vlan(ptr noundef %28, i16 noundef zeroext %34) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.then39, label %for.body34.if.end42_crit_edge

for.body34.if.end42_crit_edge:                    ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end42

if.then39:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #11
  %35 = ptrtoint ptr %num_vlan to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %num_vlan, align 8
  %inc41 = add i16 %36, 1
  store i16 %inc41, ptr %num_vlan, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.then39, %for.body34.if.end42_crit_edge
  %37 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %vf_states, align 4
  %39 = and i32 %38, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool45.not = icmp eq i32 %39, 0
  br i1 %tobool45.not, label %if.end42.if.end50_crit_edge, label %if.then46

if.end42.if.end50_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end50

if.then46:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #11
  %40 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %seid, align 2
  %42 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %arrayidx36, align 2
  %call49 = tail call i32 @i40e_aq_set_vsi_uc_promisc_on_vlan(ptr noundef %hw, i16 noundef zeroext %41, i1 noundef zeroext true, i16 noundef zeroext %43, ptr noundef null) #9
  br label %if.end50

if.end50:                                         ; preds = %if.then46, %if.end42.if.end50_crit_edge
  %44 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %vf_states, align 4
  %46 = and i32 %45, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool53.not = icmp eq i32 %46, 0
  br i1 %tobool53.not, label %if.end50.if.end60_crit_edge, label %if.then54

if.end50.if.end60_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end60

if.then54:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #11
  %47 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %seid, align 2
  %49 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %arrayidx36, align 2
  %call59 = tail call i32 @i40e_aq_set_vsi_mc_promisc_on_vlan(ptr noundef %hw, i16 noundef zeroext %48, i1 noundef zeroext true, i16 noundef zeroext %50, ptr noundef null) #9
  br label %if.end60

if.end60:                                         ; preds = %if.then54, %if.end50.if.end60_crit_edge
  br i1 %tobool38.not, label %if.end60.if.end72_crit_edge, label %do.end65

if.end60.if.end72_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end72

do.end65:                                         ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #11
  %51 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %1, align 8
  %dev67 = getelementptr inbounds %struct.pci_dev, ptr %52, i32 0, i32 44
  %53 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %arrayidx36, align 2
  %conv70 = zext i16 %54 to i32
  %55 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %vf_id2.i, align 4
  %conv71 = sext i16 %56 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev67, ptr noundef nonnull @.str.188, i32 noundef %conv70, i32 noundef %conv71, i32 noundef %call37) #12
  br label %if.end72

if.end72:                                         ; preds = %do.end65, %if.end60.if.end72_crit_edge
  %inc74 = add nuw nsw i32 %i.1125, 1
  %57 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %num_elements, align 2
  %conv31 = zext i16 %58 to i32
  %cmp32 = icmp ult i32 %inc74, %conv31
  br i1 %cmp32, label %if.end72.for.body34_crit_edge, label %if.end72.error_param_crit_edge

if.end72.error_param_crit_edge:                   ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end72.for.body34_crit_edge:                    ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body34

error_param:                                      ; preds = %if.end72.error_param_crit_edge, %if.end28.error_param_crit_edge, %for.end.error_param_crit_edge, %if.then14, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %lor.lhs.false.error_param_crit_edge, %if.end.error_param_crit_edge, %do.end
  %aq_ret.0 = phi i32 [ -5, %if.then14 ], [ 0, %do.end ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %if.end.error_param_crit_edge ], [ -5, %for.end.error_param_crit_edge ], [ -5, %lor.lhs.false.error_param_crit_edge ], [ 0, %if.end28.error_param_crit_edge ], [ 0, %if.end72.error_param_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %59 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %60 to i32
  %61 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %62, i32 0, i32 86
  %63 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %64, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %62, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %62, i32 0, i32 1, i32 15, i32 33
  %65 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %vf_base_id.i.i, align 8
  %67 = trunc i32 %66 to i16
  %conv7.i.i = add i16 %60, %67
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 12, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %68 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %62, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %69, i32 0, i32 44
  %70 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %71 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %62, i32 0, i32 1, i32 23, i32 14
  %72 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %73) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_remove_vlan_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.lor.lhs.false_crit_edge

for.body.i.lor.lhs.false_crit_edge:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.error_param_crit_edge, label %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge

i40e_sync_vf_state.exit.lor.lhs.false_crit_edge:  ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

i40e_sync_vf_state.exit.error_param_crit_edge:    ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false:                                    ; preds = %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge, %for.body.i.lor.lhs.false_crit_edge
  %8 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %msg, align 2
  %10 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %11, i16 noundef zeroext %9) #9
  %tobool.not.i82 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i82, label %lor.lhs.false.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

lor.lhs.false.error_param_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %lor.lhs.false
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %12 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp.i = icmp eq i16 %13, %15
  br i1 %cmp.i, label %for.cond.preheader, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.cond.preheader:                               ; preds = %i40e_vc_isvalid_vsi_id.exit
  %num_elements = getelementptr inbounds %struct.virtchnl_vlan_filter_list, ptr %msg, i32 0, i32 1
  %16 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %num_elements, align 2
  %conv = zext i16 %17 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %cmp87.not = icmp eq i16 %17, 0
  br i1 %cmp87.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.088, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.088 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.virtchnl_vlan_filter_list, ptr %msg, i32 0, i32 2, i32 %i.088
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %arrayidx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4095, i16 %19)
  %cmp5 = icmp ugt i16 %19, 4095
  br i1 %cmp5, label %for.body.error_param_crit_edge, label %for.cond

for.body.error_param_crit_edge:                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %vsi9 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %20 = ptrtoint ptr %vsi9 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vsi9, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %22 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %23 to i32
  %arrayidx10 = getelementptr ptr, ptr %21, i32 %idxprom
  %24 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx10, align 4
  %pvid = getelementptr inbounds %struct.i40e_vsi, ptr %25, i32 0, i32 51, i32 5
  %26 = ptrtoint ptr %pvid to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %pvid, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %tobool.not = icmp eq i16 %27, 0
  br i1 %tobool.not, label %for.cond24.preheader, label %if.then11

for.cond24.preheader:                             ; preds = %for.end
  %28 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %num_elements, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %cmp2790.not = icmp eq i16 %29, 0
  br i1 %cmp2790.not, label %for.cond24.preheader.error_param_crit_edge, label %for.body29.lr.ph

for.cond24.preheader.error_param_crit_edge:       ; preds = %for.cond24.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.body29.lr.ph:                                 ; preds = %for.cond24.preheader
  %num_vlan = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 21
  %hw = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %seid = getelementptr inbounds %struct.i40e_vsi, ptr %25, i32 0, i32 38
  br label %for.body29

if.then11:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %17)
  %cmp14 = icmp ugt i16 %17, 1
  br i1 %cmp14, label %if.then11.if.then21_crit_edge, label %lor.lhs.false16

if.then11.if.then21_crit_edge:                    ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then21

lor.lhs.false16:                                  ; preds = %if.then11
  %vlan_id17 = getelementptr inbounds %struct.virtchnl_vlan_filter_list, ptr %msg, i32 0, i32 2
  %30 = ptrtoint ptr %vlan_id17 to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %vlan_id17, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %31)
  %tobool20.not = icmp eq i16 %31, 0
  br i1 %tobool20.not, label %lor.lhs.false16.error_param_crit_edge, label %lor.lhs.false16.if.then21_crit_edge

lor.lhs.false16.if.then21_crit_edge:              ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then21

lor.lhs.false16.error_param_crit_edge:            ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.then21:                                        ; preds = %lor.lhs.false16.if.then21_crit_edge, %if.then11.if.then21_crit_edge
  br label %error_param

for.body29:                                       ; preds = %for.inc49.for.body29_crit_edge, %for.body29.lr.ph
  %i.191 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc50, %for.inc49.for.body29_crit_edge ]
  %arrayidx31 = getelementptr %struct.virtchnl_vlan_filter_list, ptr %msg, i32 0, i32 2, i32 %i.191
  %32 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %arrayidx31, align 2
  tail call void @i40e_vsi_kill_vlan(ptr noundef %25, i16 noundef zeroext %33) #9
  %34 = ptrtoint ptr %num_vlan to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %num_vlan, align 8
  %dec = add i16 %35, -1
  store i16 %dec, ptr %num_vlan, align 8
  %36 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %vf_states.i, align 4
  %38 = and i32 %37, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool33.not = icmp eq i32 %38, 0
  br i1 %tobool33.not, label %for.body29.if.end38_crit_edge, label %if.then34

for.body29.if.end38_crit_edge:                    ; preds = %for.body29
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end38

if.then34:                                        ; preds = %for.body29
  call void @__sanitizer_cov_trace_pc() #11
  %39 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %seid, align 2
  %41 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %arrayidx31, align 2
  %call37 = tail call i32 @i40e_aq_set_vsi_uc_promisc_on_vlan(ptr noundef %hw, i16 noundef zeroext %40, i1 noundef zeroext false, i16 noundef zeroext %42, ptr noundef null) #9
  br label %if.end38

if.end38:                                         ; preds = %if.then34, %for.body29.if.end38_crit_edge
  %43 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %vf_states.i, align 4
  %45 = and i32 %44, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool41.not = icmp eq i32 %45, 0
  br i1 %tobool41.not, label %if.end38.for.inc49_crit_edge, label %if.then42

if.end38.for.inc49_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc49

if.then42:                                        ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #11
  %46 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %seid, align 2
  %48 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %arrayidx31, align 2
  %call47 = tail call i32 @i40e_aq_set_vsi_mc_promisc_on_vlan(ptr noundef %hw, i16 noundef zeroext %47, i1 noundef zeroext false, i16 noundef zeroext %49, ptr noundef null) #9
  br label %for.inc49

for.inc49:                                        ; preds = %if.then42, %if.end38.for.inc49_crit_edge
  %inc50 = add nuw nsw i32 %i.191, 1
  %50 = ptrtoint ptr %num_elements to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %num_elements, align 2
  %conv26 = zext i16 %51 to i32
  %cmp27 = icmp ult i32 %inc50, %conv26
  br i1 %cmp27, label %for.inc49.for.body29_crit_edge, label %for.inc49.error_param_crit_edge

for.inc49.error_param_crit_edge:                  ; preds = %for.inc49
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.inc49.for.body29_crit_edge:                   ; preds = %for.inc49
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body29

error_param:                                      ; preds = %for.inc49.error_param_crit_edge, %if.then21, %lor.lhs.false16.error_param_crit_edge, %for.cond24.preheader.error_param_crit_edge, %for.body.error_param_crit_edge, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %lor.lhs.false.error_param_crit_edge, %i40e_sync_vf_state.exit.error_param_crit_edge
  %aq_ret.0 = phi i32 [ -5, %if.then21 ], [ 0, %lor.lhs.false16.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %i40e_sync_vf_state.exit.error_param_crit_edge ], [ -5, %lor.lhs.false.error_param_crit_edge ], [ 0, %for.cond24.preheader.error_param_crit_edge ], [ 0, %for.inc49.error_param_crit_edge ], [ -5, %for.body.error_param_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %52 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %53 to i32
  %54 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %55, i32 0, i32 86
  %56 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %57, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %57, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %55, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %55, i32 0, i32 1, i32 15, i32 33
  %58 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %vf_base_id.i.i, align 8
  %60 = trunc i32 %59 to i16
  %conv7.i.i = add i16 %53, %60
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 13, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %61 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %55, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %62, i32 0, i32 44
  %63 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %64 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %55, i32 0, i32 1, i32 23, i32 14
  %65 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %66) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_get_stats_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %stats = alloca %struct.i40e_eth_stats, align 8
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %stats) #9
  %2 = call ptr @memset(ptr %stats, i32 0, i32 96)
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %3 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %vf_states.i, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %6 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %vf_states.i, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool3.i.not = icmp eq i32 %8, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.error_param_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.error_param_crit_edge:    ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %9 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %msg, align 4
  %11 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %12, i16 noundef zeroext %10) #9
  %tobool.not.i15 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i15, label %if.end.error_param_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

if.end.error_param_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %if.end
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %13 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %15 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %14, i16 %16)
  %cmp.i = icmp eq i16 %14, %16
  br i1 %cmp.i, label %if.end4, label %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge

i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge: ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end4:                                          ; preds = %i40e_vc_isvalid_vsi_id.exit
  %vsi5 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %17 = ptrtoint ptr %vsi5 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vsi5, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %19 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %20 to i32
  %arrayidx = getelementptr ptr, ptr %18, i32 %idxprom
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %22, null
  br i1 %tobool.not, label %if.end4.error_param_crit_edge, label %if.end7

if.end4.error_param_crit_edge:                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end7:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @i40e_update_eth_stats(ptr noundef nonnull %22) #9
  %eth_stats = getelementptr inbounds %struct.i40e_vsi, ptr %22, i32 0, i32 12
  %23 = call ptr @memcpy(ptr %stats, ptr %eth_stats, i32 96)
  br label %error_param

error_param:                                      ; preds = %if.end7, %if.end4.error_param_crit_edge, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge, %if.end.error_param_crit_edge, %i40e_sync_vf_state.exit.error_param_crit_edge
  %aq_ret.0 = phi i32 [ 0, %if.end7 ], [ -5, %i40e_sync_vf_state.exit.error_param_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.error_param_crit_edge ], [ -5, %if.end4.error_param_crit_edge ], [ -5, %if.end.error_param_crit_edge ]
  %tobool.not.i16 = icmp eq ptr %vf, null
  br i1 %tobool.not.i16, label %error_param.i40e_vc_send_msg_to_vf.exit_crit_edge, label %lor.lhs.false.i

error_param.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

lor.lhs.false.i:                                  ; preds = %error_param
  %vf_id.i17 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %24 = ptrtoint ptr %vf_id.i17 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vf_id.i17, align 4
  %conv.i = sext i16 %25 to i32
  %26 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %27, i32 0, i32 86
  %28 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %conv.i)
  %cmp.not.i = icmp sgt i32 %29, %conv.i
  br i1 %cmp.not.i, label %if.end.i19, label %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge

lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

if.end.i19:                                       ; preds = %lor.lhs.false.i
  %hw4.i = getelementptr inbounds %struct.i40e_pf, ptr %27, i32 0, i32 1
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %27, i32 0, i32 1, i32 15, i32 33
  %30 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vf_base_id.i, align 8
  %32 = trunc i32 %31 to i16
  %conv7.i = add i16 %25, %32
  %call.i18 = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i, i16 noundef zeroext %conv7.i, i32 noundef 15, i32 noundef %aq_ret.0, ptr noundef nonnull %stats, i16 noundef zeroext 96, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18)
  %tobool8.not.i = icmp eq i32 %call.i18, 0
  br i1 %tobool8.not.i, label %if.end.i19.i40e_vc_send_msg_to_vf.exit_crit_edge, label %do.end.i

if.end.i19.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %if.end.i19
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

do.end.i:                                         ; preds = %if.end.i19
  call void @__sanitizer_cov_trace_pc() #11
  %33 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %27, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %34, i32 0, i32 44
  %35 = ptrtoint ptr %vf_id.i17 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %vf_id.i17, align 4
  %conv11.i = sext i16 %36 to i32
  %asq_last_status.i = getelementptr inbounds %struct.i40e_pf, ptr %27, i32 0, i32 1, i32 23, i32 14
  %37 = ptrtoint ptr %asq_last_status.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %asq_last_status.i, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i, i32 noundef %38) #12
  br label %i40e_vc_send_msg_to_vf.exit

i40e_vc_send_msg_to_vf.exit:                      ; preds = %do.end.i, %if.end.i19.i40e_vc_send_msg_to_vf.exit_crit_edge, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge, %error_param.i40e_vc_send_msg_to_vf.exit_crit_edge
  %retval.0.i20 = phi i32 [ -5, %do.end.i ], [ -22, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ 0, %if.end.i19.i40e_vc_send_msg_to_vf.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %stats) #9
  ret i32 %retval.0.i20
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_iwarp_msg(ptr noundef %vf, ptr noundef %msg, i16 noundef zeroext %msglen) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %2 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %3 to i32
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 15, i32 33
  %4 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vf_base_id, align 8
  %add = add i32 %5, %conv
  %vf_states = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  %6 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %vf_states, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %entry.error_param_crit_edge, label %lor.lhs.false

entry.error_param_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false:                                    ; preds = %entry
  %9 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %vf_states, align 4
  %11 = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool4.not = icmp eq i32 %11, 0
  br i1 %tobool4.not, label %lor.lhs.false.error_param_crit_edge, label %if.end

lor.lhs.false.error_param_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  %vsi = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %12 = ptrtoint ptr %vsi to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vsi, align 8
  %lan_vsi = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 71
  %14 = ptrtoint ptr %lan_vsi to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %lan_vsi, align 8
  %idxprom = zext i16 %15 to i32
  %arrayidx = getelementptr ptr, ptr %13, i32 %idxprom
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 4
  tail call void @i40e_notify_client_of_vf_msg(ptr noundef %17, i32 noundef %add, ptr noundef %msg, i16 noundef zeroext %msglen) #9
  br label %error_param

error_param:                                      ; preds = %if.end, %lor.lhs.false.error_param_crit_edge, %entry.error_param_crit_edge
  %aq_ret.0 = phi i32 [ 0, %if.end ], [ -5, %lor.lhs.false.error_param_crit_edge ], [ -5, %entry.error_param_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %18 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vf_id, align 4
  %conv.i.i = sext i16 %19 to i32
  %20 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %21, i32 0, i32 86
  %22 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %23, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %23, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %21, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %21, i32 0, i32 1, i32 15, i32 33
  %24 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %vf_base_id.i.i, align 8
  %26 = trunc i32 %25 to i16
  %conv7.i.i = add i16 %19, %26
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 20, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %27 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %21, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %28, i32 0, i32 44
  %29 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %vf_id, align 4
  %conv11.i.i = sext i16 %30 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %21, i32 0, i32 1, i32 23, i32 14
  %31 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %32) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_iwarp_qvmap_msg(ptr noundef %vf, ptr noundef readonly %msg, i1 noundef zeroext %config) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %vf_states = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  %0 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %vf_states, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.error_param_crit_edge, label %lor.lhs.false

entry.error_param_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %vf_states, align 4
  %5 = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %lor.lhs.false.error_param_crit_edge, label %if.end

lor.lhs.false.error_param_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end:                                           ; preds = %lor.lhs.false
  br i1 %config, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %6 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vf, align 8
  %hw2.i = getelementptr inbounds %struct.i40e_pf, ptr %7, i32 0, i32 1
  %num_msix_vectors_vf.i = getelementptr inbounds %struct.i40e_pf, ptr %7, i32 0, i32 1, i32 15, i32 39
  %8 = ptrtoint ptr %num_msix_vectors_vf.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_msix_vectors_vf.i, align 8
  %10 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %msg, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %9)
  %cmp.i = icmp ugt i32 %11, %9
  br i1 %cmp.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  %12 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %7, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i, ptr noundef nonnull @.str.190, i32 noundef %11, i32 noundef %9) #12
  br label %error_param

if.end.i:                                         ; preds = %if.then5
  %qvlist_info5.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 27
  %14 = ptrtoint ptr %qvlist_info5.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %qvlist_info5.i, align 8
  tail call void @kfree(ptr noundef %15) #9
  %16 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %msg, align 4
  %sub.i = add i32 %17, -1
  %18 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %sub.i, i32 12) #9
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %spec.select.i.i = tail call i32 @llvm.uadd.sat.i32(i32 %20, i32 16) #9
  %retval.0.i.i = select i1 %19, i32 -1, i32 %spec.select.i.i
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %retval.0.i.i, i32 noundef 3520) #13
  %21 = ptrtoint ptr %qvlist_info5.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call9.i.i.i, ptr %qvlist_info5.i, align 8
  %tobool.not.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i, label %if.end.i.error_param_crit_edge, label %if.end11.i

if.end.i.error_param_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end11.i:                                       ; preds = %if.end.i
  %22 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %msg, align 4
  %24 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %call9.i.i.i, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp19164.not.i = icmp eq i32 %23, 0
  br i1 %cmp19164.not.i, label %if.end11.i.error_param_crit_edge, label %for.body.lr.ph.i

if.end11.i.error_param_crit_edge:                 ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.body.lr.ph.i:                                 ; preds = %if.end11.i
  %25 = ptrtoint ptr %num_msix_vectors_vf.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %num_msix_vectors_vf.i, align 8
  %sub32.i = add i32 %26, -1
  %vf_id.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0165.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.virtchnl_iwarp_qvlist_info, ptr %msg, i32 0, i32 1, i32 %i.0165.i
  %tobool21.not.i = icmp eq ptr %arrayidx.i, null
  br i1 %tobool21.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end23.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.end23.i:                                       ; preds = %for.body.i
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i, align 4
  %29 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %vf, align 8
  %num_msix_vectors_vf.i.i = getelementptr inbounds %struct.i40e_pf, ptr %30, i32 0, i32 1, i32 15, i32 39
  %31 = ptrtoint ptr %num_msix_vectors_vf.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %num_msix_vectors_vf.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %28)
  %cmp.i.i = icmp ugt i32 %32, %28
  %33 = ptrtoint ptr %qvlist_info5.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %qvlist_info5.i, align 8
  br i1 %cmp.i.i, label %if.end27.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @kfree(ptr noundef %34) #9
  %35 = ptrtoint ptr %qvlist_info5.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %qvlist_info5.i, align 8
  br label %error_param

if.end27.i:                                       ; preds = %if.end23.i
  %arrayidx31.i = getelementptr %struct.virtchnl_iwarp_qvlist_info, ptr %34, i32 0, i32 1, i32 %i.0165.i
  %36 = call ptr @memcpy(ptr %arrayidx31.i, ptr %arrayidx.i, i32 12)
  %37 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %vf_id.i, align 4
  %conv.i = sext i16 %38 to i32
  %mul.i = mul i32 %sub32.i, %conv.i
  %sub33.i = add i32 %28, -1
  %add.i = add i32 %mul.i, %sub33.i
  %39 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hw2.i, align 8
  %mul34.i = shl i32 %add.i, 2
  %add35.i = add i32 %mul34.i, 151552
  %add.ptr.i = getelementptr i8, ptr %40, i32 %add35.i
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !535
  %ceq_idx.i = getelementptr %struct.virtchnl_iwarp_qvlist_info, ptr %msg, i32 0, i32 1, i32 %i.0165.i, i32 1
  %42 = ptrtoint ptr %ceq_idx.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %ceq_idx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %43)
  %cmp41.not.i = icmp eq i16 %43, -1
  br i1 %cmp41.not.i, label %if.end27.i.if.end82.i_crit_edge, label %if.then43.i

if.end27.i.if.end82.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end82.i

if.then43.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #11
  %conv40.i = zext i16 %43 to i32
  %44 = tail call i32 @llvm.bswap.i32(i32 %41) #9
  %45 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %vf_id.i, align 4
  %conv46.i = sext i16 %46 to i32
  %mul47.i = mul i32 %sub32.i, %conv46.i
  %add50.i = add i32 %mul47.i, %conv40.i
  %itr_idx.i = getelementptr %struct.virtchnl_iwarp_qvlist_info, ptr %msg, i32 0, i32 1, i32 %i.0165.i, i32 3
  %47 = ptrtoint ptr %itr_idx.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %itr_idx.i, align 4
  %conv51.i = zext i8 %48 to i32
  %shl52.i = shl nuw nsw i32 %conv51.i, 11
  %49 = shl i32 %44, 16
  %shl54.i = and i32 %49, 402653184
  %shl56.i = and i32 %49, 134152192
  %or.i = or i32 %28, %shl54.i
  %or53.i = or i32 %or.i, %shl56.i
  %or55.i = or i32 %or53.i, %shl52.i
  %or57.i = or i32 %or55.i, 1073741824
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !536
  tail call void @arm_heavy_mb() #9
  %50 = tail call i32 @llvm.bswap.i32(i32 %or57.i) #9
  %51 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %hw2.i, align 8
  %mul62.i = shl i32 %add50.i, 2
  %add63.i = add i32 %mul62.i, 157696
  %add.ptr64.i = getelementptr i8, ptr %52, i32 %add63.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr64.i, i32 %50) #9, !srcloc !498
  %53 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %vf_id.i, align 4
  %conv67.i = sext i16 %54 to i32
  %mul68.i = mul i32 %sub32.i, %conv67.i
  %add70.i = add i32 %mul68.i, %sub33.i
  %55 = ptrtoint ptr %ceq_idx.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %ceq_idx.i, align 4
  %57 = and i16 %56, 2047
  %58 = or i16 %57, 4096
  %or74.i = zext i16 %58 to i32
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !537
  tail call void @arm_heavy_mb() #9
  %59 = tail call i32 @llvm.bswap.i32(i32 %or74.i) #9
  %60 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %hw2.i, align 8
  %mul79.i = shl i32 %add70.i, 2
  %add80.i = add i32 %mul79.i, 151552
  %add.ptr81.i = getelementptr i8, ptr %61, i32 %add80.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr81.i, i32 %59) #9, !srcloc !498
  br label %if.end82.i

if.end82.i:                                       ; preds = %if.then43.i, %if.end27.i.if.end82.i_crit_edge
  %aeq_idx.i = getelementptr %struct.virtchnl_iwarp_qvlist_info, ptr %msg, i32 0, i32 1, i32 %i.0165.i, i32 2
  %62 = ptrtoint ptr %aeq_idx.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %aeq_idx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %63)
  %cmp84.not.i = icmp eq i16 %63, -1
  br i1 %cmp84.not.i, label %if.end82.i.for.inc.i_crit_edge, label %if.then86.i

if.end82.i.for.inc.i_crit_edge:                   ; preds = %if.end82.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then86.i:                                      ; preds = %if.end82.i
  call void @__sanitizer_cov_trace_pc() #11
  %itr_idx89.i = getelementptr %struct.virtchnl_iwarp_qvlist_info, ptr %msg, i32 0, i32 1, i32 %i.0165.i, i32 3
  %64 = ptrtoint ptr %itr_idx89.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %itr_idx89.i, align 4
  %conv90.i = zext i8 %65 to i32
  %shl91.i = shl nuw nsw i32 %conv90.i, 11
  %or88.i = or i32 %28, %shl91.i
  %or92.i = or i32 %or88.i, 1073741824
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !538
  tail call void @arm_heavy_mb() #9
  %66 = tail call i32 @llvm.bswap.i32(i32 %or92.i) #9
  %67 = ptrtoint ptr %hw2.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %hw2.i, align 8
  %69 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %vf_id.i, align 4
  %conv98.i = sext i16 %70 to i32
  %mul99.i = shl nsw i32 %conv98.i, 2
  %add100.i = add nsw i32 %mul99.i, 178176
  %add.ptr101.i = getelementptr i8, ptr %68, i32 %add100.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr101.i, i32 %66) #9, !srcloc !498
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then86.i, %if.end82.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.0165.i, 1
  %71 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %msg, align 4
  %cmp19.i = icmp ult i32 %inc.i, %72
  br i1 %cmp19.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.error_param_crit_edge

for.inc.i.error_param_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

if.else:                                          ; preds = %if.end
  %qvlist_info2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 27
  %73 = ptrtoint ptr %qvlist_info2.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %qvlist_info2.i, align 8
  %tobool.not.i20 = icmp eq ptr %74, null
  br i1 %tobool.not.i20, label %if.else.error_param_crit_edge, label %if.end.i21

if.else.error_param_crit_edge:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end.i21:                                       ; preds = %if.else
  %75 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %vf, align 8
  %hw.i = getelementptr inbounds %struct.i40e_pf, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %74, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %cmp66.not.i = icmp eq i32 %78, 0
  br i1 %cmp66.not.i, label %if.end.i21.for.end.i_crit_edge, label %for.body.lr.ph.i25

if.end.i21.for.end.i_crit_edge:                   ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.lr.ph.i25:                               ; preds = %if.end.i21
  %num_msix_vectors_vf.i22 = getelementptr inbounds %struct.i40e_pf, ptr %76, i32 0, i32 1, i32 15, i32 39
  %79 = ptrtoint ptr %num_msix_vectors_vf.i22 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %num_msix_vectors_vf.i22, align 8
  %sub.i23 = add i32 %80, -1
  %vf_id.i24 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  br label %for.body.i27

for.body.i27:                                     ; preds = %cleanup.i.for.body.i27_crit_edge, %for.body.lr.ph.i25
  %i.067.i = phi i32 [ 0, %for.body.lr.ph.i25 ], [ %inc.i34, %cleanup.i.for.body.i27_crit_edge ]
  %arrayidx.i26 = getelementptr %struct.virtchnl_iwarp_qvlist_info, ptr %74, i32 0, i32 1, i32 %i.067.i
  %tobool7.not.i = icmp eq ptr %arrayidx.i26, null
  br i1 %tobool7.not.i, label %for.body.i27.cleanup.i_crit_edge, label %if.end9.i

for.body.i27.cleanup.i_crit_edge:                 ; preds = %for.body.i27
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.i

if.end9.i:                                        ; preds = %for.body.i27
  %ceq_idx.i28 = getelementptr %struct.virtchnl_iwarp_qvlist_info, ptr %74, i32 0, i32 1, i32 %i.067.i, i32 1
  %81 = ptrtoint ptr %ceq_idx.i28 to i32
  call void @__asan_load2_noabort(i32 %81)
  %82 = load i16, ptr %ceq_idx.i28, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %82)
  %cmp11.not.i = icmp eq i16 %82, -1
  br i1 %cmp11.not.i, label %if.end9.i.cleanup.i_crit_edge, label %if.then13.i

if.end9.i.cleanup.i_crit_edge:                    ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.i

if.then13.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #11
  %conv.i29 = zext i16 %82 to i32
  %83 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %arrayidx.i26, align 4
  %85 = ptrtoint ptr %vf_id.i24 to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %vf_id.i24, align 4
  %conv14.i = sext i16 %86 to i32
  %mul.i30 = mul i32 %sub.i23, %conv14.i
  %add.i31 = add i32 %mul.i30, %conv.i29
  %87 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %hw.i, align 8
  %mul17.i = shl i32 %add.i31, 2
  %add18.i = add i32 %mul17.i, 157696
  %add.ptr.i32 = getelementptr i8, ptr %88, i32 %add18.i
  %89 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i32) #9, !srcloc !491
  %90 = tail call i32 @llvm.bswap.i32(i32 %89) #9
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !539
  %and.i = lshr i32 %90, 16
  %91 = ptrtoint ptr %vf_id.i24 to i32
  call void @__asan_load2_noabort(i32 %91)
  %92 = load i16, ptr %vf_id.i24, align 4
  %conv24.i = sext i16 %92 to i32
  %mul25.i = mul i32 %sub.i23, %conv24.i
  %sub26.i = add i32 %84, 1073741823
  %add27.i = add i32 %sub26.i, %mul25.i
  %or.i33 = and i32 %and.i, 8191
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !540
  tail call void @arm_heavy_mb() #9
  %93 = tail call i32 @llvm.bswap.i32(i32 %or.i33) #9
  %94 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %hw.i, align 8
  %mul30.i = shl i32 %add27.i, 2
  %add31.i = add i32 %mul30.i, 151552
  %add.ptr32.i = getelementptr i8, ptr %95, i32 %add31.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr32.i, i32 %93) #9, !srcloc !498
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then13.i, %if.end9.i.cleanup.i_crit_edge, %for.body.i27.cleanup.i_crit_edge
  %inc.i34 = add nuw i32 %i.067.i, 1
  %96 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %74, align 4
  %cmp.i35 = icmp ult i32 %inc.i34, %97
  br i1 %cmp.i35, label %cleanup.i.for.body.i27_crit_edge, label %cleanup.i.for.end.i_crit_edge

cleanup.i.for.end.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

cleanup.i.for.body.i27_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i27

for.end.i:                                        ; preds = %cleanup.i.for.end.i_crit_edge, %if.end.i21.for.end.i_crit_edge
  %98 = ptrtoint ptr %qvlist_info2.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %qvlist_info2.i, align 8
  tail call void @kfree(ptr noundef %99) #9
  %100 = ptrtoint ptr %qvlist_info2.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr null, ptr %qvlist_info2.i, align 8
  br label %error_param

error_param:                                      ; preds = %for.end.i, %if.else.error_param_crit_edge, %for.inc.i.error_param_crit_edge, %if.then26.i, %if.end11.i.error_param_crit_edge, %if.end.i.error_param_crit_edge, %do.end.i, %lor.lhs.false.error_param_crit_edge, %entry.error_param_crit_edge
  %aq_ret.0 = phi i32 [ -5, %lor.lhs.false.error_param_crit_edge ], [ -5, %entry.error_param_crit_edge ], [ 0, %if.end11.i.error_param_crit_edge ], [ 0, %if.else.error_param_crit_edge ], [ 0, %for.end.i ], [ -5, %do.end.i ], [ -5, %if.then26.i ], [ -5, %if.end.i.error_param_crit_edge ], [ 0, %for.inc.i.error_param_crit_edge ]
  %cond = select i1 %config, i32 21, i32 22
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

error_param.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %error_param
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %error_param
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %101 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %102 to i32
  %103 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %104, i32 0, i32 86
  %105 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %106, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %106, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %104, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %104, i32 0, i32 1, i32 15, i32 33
  %107 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %vf_base_id.i.i, align 8
  %109 = trunc i32 %108 to i16
  %conv7.i.i = add i16 %102, %109
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef %cond, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %110 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %104, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %111, i32 0, i32 44
  %112 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %112)
  %113 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %113 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %104, i32 0, i32 1, i32 23, i32 14
  %114 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %115) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i36 = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %error_param.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i36
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_config_rss_key(ptr noundef %vf, ptr noundef %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.lor.lhs.false_crit_edge

for.body.i.lor.lhs.false_crit_edge:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge

i40e_sync_vf_state.exit.lor.lhs.false_crit_edge:  ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

lor.lhs.false:                                    ; preds = %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge, %for.body.i.lor.lhs.false_crit_edge
  %8 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %msg, align 2
  %10 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %11, i16 noundef zeroext %9) #9
  %tobool.not.i14 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i14, label %lor.lhs.false.err_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

lor.lhs.false.err_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %lor.lhs.false
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %12 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp.i = icmp eq i16 %13, %15
  br i1 %cmp.i, label %lor.lhs.false3, label %i40e_vc_isvalid_vsi_id.exit.err_crit_edge

i40e_vc_isvalid_vsi_id.exit.err_crit_edge:        ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

lor.lhs.false3:                                   ; preds = %i40e_vc_isvalid_vsi_id.exit
  %key_len = getelementptr inbounds %struct.virtchnl_rss_key, ptr %msg, i32 0, i32 1
  %16 = ptrtoint ptr %key_len to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %key_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 52, i16 %17)
  %cmp.not = icmp eq i16 %17, 52
  br i1 %cmp.not, label %if.end, label %lor.lhs.false3.err_crit_edge

lor.lhs.false3.err_crit_edge:                     ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end:                                           ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #11
  %vsi5 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %18 = ptrtoint ptr %vsi5 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vsi5, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %20 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %21 to i32
  %arrayidx = getelementptr ptr, ptr %19, i32 %idxprom
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx, align 4
  %key = getelementptr inbounds %struct.virtchnl_rss_key, ptr %msg, i32 0, i32 2
  %call6 = tail call i32 @i40e_config_rss(ptr noundef %23, ptr noundef %key, ptr noundef null, i16 noundef zeroext 0) #9
  br label %err

err:                                              ; preds = %if.end, %lor.lhs.false3.err_crit_edge, %i40e_vc_isvalid_vsi_id.exit.err_crit_edge, %lor.lhs.false.err_crit_edge, %i40e_sync_vf_state.exit.err_crit_edge
  %aq_ret.0 = phi i32 [ %call6, %if.end ], [ -5, %lor.lhs.false3.err_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.err_crit_edge ], [ -5, %i40e_sync_vf_state.exit.err_crit_edge ], [ -5, %lor.lhs.false.err_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %err.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

err.i40e_vc_send_resp_to_vf.exit_crit_edge:       ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %err
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %24 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %25 to i32
  %26 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %27, i32 0, i32 86
  %28 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %29, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %27, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %27, i32 0, i32 1, i32 15, i32 33
  %30 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vf_base_id.i.i, align 8
  %32 = trunc i32 %31 to i16
  %conv7.i.i = add i16 %25, %32
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 23, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %33 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %27, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %34, i32 0, i32 44
  %35 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %36 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %27, i32 0, i32 1, i32 23, i32 14
  %37 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %38) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %err.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %err.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_config_rss_lut(ptr noundef %vf, ptr noundef %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.lor.lhs.false_crit_edge

for.body.i.lor.lhs.false_crit_edge:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge

i40e_sync_vf_state.exit.lor.lhs.false_crit_edge:  ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %lor.lhs.false

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

lor.lhs.false:                                    ; preds = %i40e_sync_vf_state.exit.lor.lhs.false_crit_edge, %for.body.i.lor.lhs.false_crit_edge
  %8 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %msg, align 2
  %10 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %11, i16 noundef zeroext %9) #9
  %tobool.not.i33 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i33, label %lor.lhs.false.err_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

lor.lhs.false.err_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %lor.lhs.false
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %12 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp.i = icmp eq i16 %13, %15
  br i1 %cmp.i, label %lor.lhs.false3, label %i40e_vc_isvalid_vsi_id.exit.err_crit_edge

i40e_vc_isvalid_vsi_id.exit.err_crit_edge:        ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

lor.lhs.false3:                                   ; preds = %i40e_vc_isvalid_vsi_id.exit
  %lut_entries = getelementptr inbounds %struct.virtchnl_rss_lut, ptr %msg, i32 0, i32 1
  %16 = ptrtoint ptr %lut_entries to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %lut_entries, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %17)
  %cmp.not = icmp eq i16 %17, 64
  br i1 %cmp.not, label %for.body.preheader, label %lor.lhs.false3.err_crit_edge

lor.lhs.false3.err_crit_edge:                     ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

for.body.preheader:                               ; preds = %lor.lhs.false3
  %num_queue_pairs = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 12
  %18 = ptrtoint ptr %num_queue_pairs to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %num_queue_pairs, align 2
  br label %for.body

for.cond:                                         ; preds = %for.body
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  %exitcond.not = icmp eq i32 %indvars.iv.next, 64
  br i1 %exitcond.not, label %for.end, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.preheader
  %indvars.iv = phi i32 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.cond.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.virtchnl_rss_lut, ptr %msg, i32 0, i32 2, i32 %indvars.iv
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %21, i8 %19)
  %cmp12.not = icmp ult i8 %21, %19
  br i1 %cmp12.not, label %for.cond, label %for.body.err_crit_edge

for.body.err_crit_edge:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

for.end:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  %vsi16 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %22 = ptrtoint ptr %vsi16 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vsi16, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %24 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom17 = zext i16 %25 to i32
  %arrayidx18 = getelementptr ptr, ptr %23, i32 %idxprom17
  %26 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx18, align 4
  %lut19 = getelementptr inbounds %struct.virtchnl_rss_lut, ptr %msg, i32 0, i32 2
  %call20 = tail call i32 @i40e_config_rss(ptr noundef %27, ptr noundef null, ptr noundef %lut19, i16 noundef zeroext 64) #9
  br label %err

err:                                              ; preds = %for.end, %for.body.err_crit_edge, %lor.lhs.false3.err_crit_edge, %i40e_vc_isvalid_vsi_id.exit.err_crit_edge, %lor.lhs.false.err_crit_edge, %i40e_sync_vf_state.exit.err_crit_edge
  %aq_ret.0 = phi i32 [ %call20, %for.end ], [ -5, %lor.lhs.false3.err_crit_edge ], [ -5, %i40e_vc_isvalid_vsi_id.exit.err_crit_edge ], [ -5, %i40e_sync_vf_state.exit.err_crit_edge ], [ -5, %lor.lhs.false.err_crit_edge ], [ -5, %for.body.err_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %err.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

err.i40e_vc_send_resp_to_vf.exit_crit_edge:       ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %err
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %28 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %29 to i32
  %30 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %31, i32 0, i32 86
  %32 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %33, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %31, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %31, i32 0, i32 1, i32 15, i32 33
  %34 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %vf_base_id.i.i, align 8
  %36 = trunc i32 %35 to i16
  %conv7.i.i = add i16 %29, %36
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 24, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %37 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %31, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %38, i32 0, i32 44
  %39 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %40 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %31, i32 0, i32 1, i32 23, i32 14
  %41 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %42) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %err.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %err.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_get_rss_hena(ptr noundef %vf) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 8) #14
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %if.end.err_crit_edge, label %if.end4

if.end.err_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %hw_features = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 53
  %9 = ptrtoint ptr %hw_features to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %hw_features, align 4
  %and = and i32 %10, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  %cond = select i1 %tobool5.not, i64 -9223237765439684608, i64 -9223231712220151808
  %11 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %cond, ptr %call7.i.i, align 8
  br label %err

err:                                              ; preds = %if.end4, %if.end.err_crit_edge, %i40e_sync_vf_state.exit.err_crit_edge
  %vrh.0 = phi ptr [ %call7.i.i, %if.end4 ], [ null, %i40e_sync_vf_state.exit.err_crit_edge ], [ null, %if.end.err_crit_edge ]
  %aq_ret.0 = phi i32 [ 0, %if.end4 ], [ -5, %i40e_sync_vf_state.exit.err_crit_edge ], [ -18, %if.end.err_crit_edge ]
  %len.0 = phi i16 [ 8, %if.end4 ], [ 0, %i40e_sync_vf_state.exit.err_crit_edge ], [ 0, %if.end.err_crit_edge ]
  %tobool.not.i1 = icmp eq ptr %vf, null
  br i1 %tobool.not.i1, label %err.i40e_vc_send_msg_to_vf.exit_crit_edge, label %lor.lhs.false.i

err.i40e_vc_send_msg_to_vf.exit_crit_edge:        ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

lor.lhs.false.i:                                  ; preds = %err
  %vf_id.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %12 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id.i, align 4
  %conv.i = sext i16 %13 to i32
  %14 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 86
  %16 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %conv.i)
  %cmp.not.i = icmp sgt i32 %17, %conv.i
  br i1 %cmp.not.i, label %if.end.i2, label %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge

lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

if.end.i2:                                        ; preds = %lor.lhs.false.i
  %hw4.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 1
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 1, i32 15, i32 33
  %18 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %vf_base_id.i, align 8
  %20 = trunc i32 %19 to i16
  %conv7.i = add i16 %13, %20
  %call.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i, i16 noundef zeroext %conv7.i, i32 noundef 25, i32 noundef %aq_ret.0, ptr noundef %vrh.0, i16 noundef zeroext %len.0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.not.i, label %if.end.i2.i40e_vc_send_msg_to_vf.exit_crit_edge, label %do.end.i

if.end.i2.i40e_vc_send_msg_to_vf.exit_crit_edge:  ; preds = %if.end.i2
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_msg_to_vf.exit

do.end.i:                                         ; preds = %if.end.i2
  call void @__sanitizer_cov_trace_pc() #11
  %21 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %15, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  %23 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %vf_id.i, align 4
  %conv11.i = sext i16 %24 to i32
  %asq_last_status.i = getelementptr inbounds %struct.i40e_pf, ptr %15, i32 0, i32 1, i32 23, i32 14
  %25 = ptrtoint ptr %asq_last_status.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %asq_last_status.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i, i32 noundef %26) #12
  br label %i40e_vc_send_msg_to_vf.exit

i40e_vc_send_msg_to_vf.exit:                      ; preds = %do.end.i, %if.end.i2.i40e_vc_send_msg_to_vf.exit_crit_edge, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge, %err.i40e_vc_send_msg_to_vf.exit_crit_edge
  %retval.0.i3 = phi i32 [ -5, %do.end.i ], [ -22, %lor.lhs.false.i.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ -22, %err.i40e_vc_send_msg_to_vf.exit_crit_edge ], [ 0, %if.end.i2.i40e_vc_send_msg_to_vf.exit_crit_edge ]
  tail call void @kfree(ptr noundef %vrh.0) #9
  ret i32 %retval.0.i3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_set_rss_hena(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %hw2 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %8 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %9 to i32
  %mul = shl nsw i32 %conv, 2
  %add3 = add nsw i32 %mul, 2295808
  %10 = ptrtoint ptr %msg to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %msg, align 8
  %conv4 = trunc i64 %11 to i32
  tail call void @i40e_write_rx_ctl(ptr noundef %hw2, i32 noundef %add3, i32 noundef %conv4) #9
  %12 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id, align 4
  %conv6 = sext i16 %13 to i32
  %mul7 = shl nsw i32 %conv6, 2
  %add9 = add nsw i32 %mul7, 2296832
  %14 = ptrtoint ptr %msg to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %msg, align 8
  %shr = lshr i64 %15, 32
  %conv11 = trunc i64 %shr to i32
  tail call void @i40e_write_rx_ctl(ptr noundef %hw2, i32 noundef %add9, i32 noundef %conv11) #9
  br label %err

err:                                              ; preds = %if.end, %i40e_sync_vf_state.exit.err_crit_edge
  %aq_ret.0 = phi i32 [ 0, %if.end ], [ -5, %i40e_sync_vf_state.exit.err_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %err.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

err.i40e_vc_send_resp_to_vf.exit_crit_edge:       ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %err
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %16 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %17 to i32
  %18 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %19, i32 0, i32 86
  %20 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %21, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %19, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %19, i32 0, i32 1, i32 15, i32 33
  %22 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vf_base_id.i.i, align 8
  %24 = trunc i32 %23 to i16
  %conv7.i.i = add i16 %17, %24
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 26, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %25 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %19, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  %27 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %28 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %19, i32 0, i32 1, i32 23, i32 14
  %29 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %30) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %err.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %err.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_enable_vlan_stripping(ptr noundef %vf) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %0 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %vf_states.i, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %3 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %vf_states.i, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.i.not = icmp eq i32 %5, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %6 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vf, align 8
  %vsi1 = getelementptr inbounds %struct.i40e_pf, ptr %7, i32 0, i32 74
  %8 = ptrtoint ptr %vsi1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vsi1, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %10 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %11 to i32
  %arrayidx = getelementptr ptr, ptr %9, i32 %idxprom
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 4
  tail call void @i40e_vlan_stripping_enable(ptr noundef %13) #9
  br label %err

err:                                              ; preds = %if.end, %i40e_sync_vf_state.exit.err_crit_edge
  %aq_ret.0 = phi i32 [ 0, %if.end ], [ -5, %i40e_sync_vf_state.exit.err_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %err.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

err.i40e_vc_send_resp_to_vf.exit_crit_edge:       ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %err
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %15 to i32
  %16 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 86
  %18 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %19, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 1, i32 15, i32 33
  %20 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vf_base_id.i.i, align 8
  %22 = trunc i32 %21 to i16
  %conv7.i.i = add i16 %15, %22
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 27, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %23 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %17, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  %25 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %26 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 1, i32 23, i32 14
  %27 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %28) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %err.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %err.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_disable_vlan_stripping(ptr noundef %vf) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %0 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %vf_states.i, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %3 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %vf_states.i, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.i.not = icmp eq i32 %5, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %6 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vf, align 8
  %vsi1 = getelementptr inbounds %struct.i40e_pf, ptr %7, i32 0, i32 74
  %8 = ptrtoint ptr %vsi1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vsi1, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %10 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %11 to i32
  %arrayidx = getelementptr ptr, ptr %9, i32 %idxprom
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 4
  tail call void @i40e_vlan_stripping_disable(ptr noundef %13) #9
  br label %err

err:                                              ; preds = %if.end, %i40e_sync_vf_state.exit.err_crit_edge
  %aq_ret.0 = phi i32 [ 0, %if.end ], [ -5, %i40e_sync_vf_state.exit.err_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %err.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

err.i40e_vc_send_resp_to_vf.exit_crit_edge:       ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %err
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %15 to i32
  %16 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 86
  %18 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %19, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 1, i32 15, i32 33
  %20 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vf_base_id.i.i, align 8
  %22 = trunc i32 %21 to i16
  %conv7.i.i = add i16 %15, %22
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 28, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %23 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %17, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  %25 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %26 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %17, i32 0, i32 1, i32 23, i32 14
  %27 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %28) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %err.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %err.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_request_queues_msg(ptr noundef %vf, ptr noundef %msg) unnamed_addr #0 align 64 {
entry:
  %pfe.i.i = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %msg to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %msg, align 2
  %num_queue_pairs1 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 12
  %2 = ptrtoint ptr %num_queue_pairs1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %num_queue_pairs1, align 2
  %4 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %6 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %vf_states.i, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %9 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %vf_states.i, align 4
  %11 = and i32 %10, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool3.i.not = icmp eq i32 %11, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.cleanup_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.cleanup_crit_edge:        ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %1)
  %cmp = icmp ugt i16 %1, 16
  br i1 %cmp, label %do.end, label %if.else

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %5, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %14 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id, align 4
  %conv5 = sext i16 %15 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.192, i32 noundef %conv5, i32 noundef 16) #12
  br label %if.end48

if.else:                                          ; preds = %if.end
  %conv = zext i16 %1 to i32
  %conv8 = zext i8 %3 to i32
  %sub = sub nsw i32 %conv, %conv8
  %queues_left = getelementptr inbounds %struct.i40e_pf, ptr %5, i32 0, i32 16
  %16 = ptrtoint ptr %queues_left to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %queues_left, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %17)
  %cmp9 = icmp sgt i32 %sub, %17
  br i1 %cmp9, label %do.end14, label %if.else27

do.end14:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %18 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %5, align 8
  %dev16 = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  %vf_id17 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %20 = ptrtoint ptr %vf_id17 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vf_id17, align 4
  %conv18 = sext i16 %21 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev16, ptr noundef nonnull @.str.195, i32 noundef %conv18, i32 noundef %sub, i32 noundef %17) #12
  %22 = ptrtoint ptr %queues_left to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %queues_left, align 8
  %add = add i32 %23, %conv8
  %conv25 = trunc i32 %add to i16
  br label %if.end48

if.else27:                                        ; preds = %if.else
  %24 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vf, align 8
  %vsi2.i = getelementptr inbounds %struct.i40e_pf, ptr %25, i32 0, i32 74
  %26 = ptrtoint ptr %vsi2.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vsi2.i, align 8
  %lan_vsi_idx.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %28 = ptrtoint ptr %lan_vsi_idx.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %lan_vsi_idx.i, align 2
  %idxprom.i = zext i16 %29 to i32
  %arrayidx.i = getelementptr ptr, ptr %27, i32 %idxprom.i
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx.i, align 4
  %alloc_queue_pairs.i = getelementptr inbounds %struct.i40e_vsi, ptr %31, i32 0, i32 42
  %32 = ptrtoint ptr %alloc_queue_pairs.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %alloc_queue_pairs.i, align 2
  %conv.i = zext i16 %33 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %33, i16 %1)
  %cmp.not.i = icmp ult i16 %33, %1
  br i1 %cmp.not.i, label %if.end.i80, label %if.else27.if.else44_crit_edge

if.else27.if.else44_crit_edge:                    ; preds = %if.else27
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else44

if.end.i80:                                       ; preds = %if.else27
  %qp_pile.i = getelementptr inbounds %struct.i40e_pf, ptr %25, i32 0, i32 76
  %34 = ptrtoint ptr %qp_pile.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %qp_pile.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %33)
  %cmp6.not.i = icmp eq i16 %33, 0
  br i1 %cmp6.not.i, label %if.end.i80.if.end25thread-pre-split.i_crit_edge, label %if.then8.i

if.end.i80.if.end25thread-pre-split.i_crit_edge:  ; preds = %if.end.i80
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25thread-pre-split.i

if.then8.i:                                       ; preds = %if.end.i80
  %base_queue10.i = getelementptr inbounds %struct.i40e_vsi, ptr %31, i32 0, i32 41
  %36 = ptrtoint ptr %base_queue10.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %base_queue10.i, align 8
  %conv11.i = zext i16 %37 to i32
  %add.i = add nuw nsw i32 %conv11.i, %conv.i
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %35, align 2
  %conv12.i = zext i16 %39 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv12.i)
  %cmp1374.i = icmp ult i32 %add.i, %conv12.i
  br i1 %cmp1374.i, label %for.body.preheader.i, label %if.then8.i.if.end25.i_crit_edge

if.then8.i.if.end25.i_crit_edge:                  ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25.i

for.body.preheader.i:                             ; preds = %if.then8.i
  %sub.i = sub nsw i32 %conv, %conv.i
  br label %for.body.i82

for.body.i82:                                     ; preds = %for.inc.i.for.body.i82_crit_edge, %for.body.preheader.i
  %more.076.i = phi i32 [ %dec.i, %for.inc.i.for.body.i82_crit_edge ], [ %sub.i, %for.body.preheader.i ]
  %i.075.i = phi i32 [ %inc.i83, %for.inc.i.for.body.i82_crit_edge ], [ %add.i, %for.body.preheader.i ]
  %arrayidx15.i = getelementptr %struct.i40e_lump_tracking, ptr %35, i32 0, i32 1, i32 %i.075.i
  %40 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %arrayidx15.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %41)
  %tobool.not.i81 = icmp sgt i16 %41, -1
  br i1 %tobool.not.i81, label %if.end18.i, label %for.body.i82.if.end25thread-pre-split.i_crit_edge

for.body.i82.if.end25thread-pre-split.i_crit_edge: ; preds = %for.body.i82
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25thread-pre-split.i

if.end18.i:                                       ; preds = %for.body.i82
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %more.076.i)
  %cmp19.i = icmp eq i32 %more.076.i, 1
  br i1 %cmp19.i, label %if.end18.i.if.else44_crit_edge, label %for.inc.i

if.end18.i.if.else44_crit_edge:                   ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else44

for.inc.i:                                        ; preds = %if.end18.i
  %dec.i = add nsw i32 %more.076.i, -1
  %inc.i83 = add nuw nsw i32 %i.075.i, 1
  %cmp13.i = icmp ult i32 %inc.i83, %conv12.i
  br i1 %cmp13.i, label %for.inc.i.for.body.i82_crit_edge, label %for.inc.i.if.end25thread-pre-split.i_crit_edge

for.inc.i.if.end25thread-pre-split.i_crit_edge:   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25thread-pre-split.i

for.inc.i.for.body.i82_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i82

if.end25thread-pre-split.i:                       ; preds = %for.inc.i.if.end25thread-pre-split.i_crit_edge, %for.body.i82.if.end25thread-pre-split.i_crit_edge, %if.end.i80.if.end25thread-pre-split.i_crit_edge
  %42 = ptrtoint ptr %35 to i32
  call void @__asan_load2_noabort(i32 %42)
  %.pr.i = load i16, ptr %35, align 2
  %.pre = zext i16 %.pr.i to i32
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.end25thread-pre-split.i, %if.then8.i.if.end25.i_crit_edge
  %conv28.i.pre-phi = phi i32 [ %.pre, %if.end25thread-pre-split.i ], [ %conv12.i, %if.then8.i.if.end25.i_crit_edge ]
  %43 = phi i16 [ %.pr.i, %if.end25thread-pre-split.i ], [ %39, %if.then8.i.if.end25.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %43)
  %cmp2977.not.i = icmp eq i16 %43, 0
  br i1 %cmp2977.not.i, label %if.end25.i.do.end34_crit_edge, label %if.end25.i.for.body31.i_crit_edge

if.end25.i.for.body31.i_crit_edge:                ; preds = %if.end25.i
  br label %for.body31.i

if.end25.i.do.end34_crit_edge:                    ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end34

for.body31.i:                                     ; preds = %for.inc45.i.for.body31.i_crit_edge, %if.end25.i.for.body31.i_crit_edge
  %pool_size.080.i = phi i32 [ %pool_size.1.i, %for.inc45.i.for.body31.i_crit_edge ], [ 0, %if.end25.i.for.body31.i_crit_edge ]
  %i.178.i = phi i32 [ %inc46.i, %for.inc45.i.for.body31.i_crit_edge ], [ 0, %if.end25.i.for.body31.i_crit_edge ]
  %arrayidx33.i = getelementptr %struct.i40e_lump_tracking, ptr %35, i32 0, i32 1, i32 %i.178.i
  %44 = ptrtoint ptr %arrayidx33.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %arrayidx33.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %45)
  %tobool36.not.i = icmp sgt i16 %45, -1
  br i1 %tobool36.not.i, label %if.end38.i, label %for.body31.i.for.inc45.i_crit_edge

for.body31.i.for.inc45.i_crit_edge:               ; preds = %for.body31.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc45.i

if.end38.i:                                       ; preds = %for.body31.i
  %inc40.i = add i32 %pool_size.080.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc40.i, i32 %conv)
  %cmp41.not.i = icmp ult i32 %inc40.i, %conv
  br i1 %cmp41.not.i, label %if.end38.i.for.inc45.i_crit_edge, label %if.end38.i.if.else44_crit_edge

if.end38.i.if.else44_crit_edge:                   ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else44

if.end38.i.for.inc45.i_crit_edge:                 ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc45.i

for.inc45.i:                                      ; preds = %if.end38.i.for.inc45.i_crit_edge, %for.body31.i.for.inc45.i_crit_edge
  %pool_size.1.i = phi i32 [ %inc40.i, %if.end38.i.for.inc45.i_crit_edge ], [ 0, %for.body31.i.for.inc45.i_crit_edge ]
  %inc46.i = add nuw nsw i32 %i.178.i, 1
  %exitcond.not.i84 = icmp eq i32 %inc46.i, %conv28.i.pre-phi
  br i1 %exitcond.not.i84, label %for.inc45.i.do.end34_crit_edge, label %for.inc45.i.for.body31.i_crit_edge

for.inc45.i.for.body31.i_crit_edge:               ; preds = %for.inc45.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body31.i

for.inc45.i.do.end34_crit_edge:                   ; preds = %for.inc45.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end34

do.end34:                                         ; preds = %for.inc45.i.do.end34_crit_edge, %if.end25.i.do.end34_crit_edge
  %46 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %5, align 8
  %dev36 = getelementptr inbounds %struct.pci_dev, ptr %47, i32 0, i32 44
  %vf_id37 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %48 = ptrtoint ptr %vf_id37 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %vf_id37, align 4
  %conv38 = sext i16 %49 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev36, ptr noundef nonnull @.str.198, i32 noundef %conv38, i32 noundef %sub) #12
  %conv42 = zext i8 %3 to i16
  br label %if.end48

if.else44:                                        ; preds = %if.end38.i.if.else44_crit_edge, %if.end18.i.if.else44_crit_edge, %if.else27.if.else44_crit_edge
  %conv45 = trunc i16 %1 to i8
  %num_req_queues = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 13
  %50 = ptrtoint ptr %num_req_queues to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %conv45, ptr %num_req_queues, align 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %51 = getelementptr inbounds i8, ptr %pfe.i.i, i32 4
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_storeN_noabort(i32 %52, i32 8)
  store i64 -1, ptr %51, align 4
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %if.else44.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %lor.lhs.false.i.i

if.else44.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %if.else44
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

lor.lhs.false.i.i:                                ; preds = %if.else44
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %53 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %54 to i32
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %25, i32 0, i32 86
  %55 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %56, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge

lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %57 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %vf_states.i, align 4
  %and1.i.i.i = and i32 %58, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i, label %if.end.i.i.if.end7.i.i_crit_edge

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %59 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %vf_states.i, align 4
  %61 = and i32 %60, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool5.not.i.i = icmp eq i32 %61, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %land.lhs.true.i.i.if.end7.i.i_crit_edge

land.lhs.true.i.i.if.end7.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end7.i.i:                                      ; preds = %land.lhs.true.i.i.if.end7.i.i_crit_edge, %if.end.i.i.if.end7.i.i_crit_edge
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %25, i32 0, i32 1, i32 15, i32 33
  %62 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %vf_base_id.i.i, align 8
  %64 = ptrtoint ptr %pfe.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 2, ptr %pfe.i.i, align 4
  %severity.i.i = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe.i.i, i32 0, i32 2
  %65 = ptrtoint ptr %severity.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 255, ptr %severity.i.i, align 4
  %hw12.i.i = getelementptr inbounds %struct.i40e_pf, ptr %25, i32 0, i32 1
  %66 = trunc i32 %63 to i16
  %conv13.i.i = add i16 %54, %66
  %call14.i.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw12.i.i, i16 noundef zeroext %conv13.i.i, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe.i.i, i16 noundef zeroext 16, ptr noundef null) #9
  br label %i40e_vc_notify_vf_reset.exit.i

i40e_vc_notify_vf_reset.exit.i:                   ; preds = %if.end7.i.i, %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %if.else44.i40e_vc_notify_vf_reset.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %arrayidx.i.i = getelementptr %struct.i40e_pf, ptr %25, i32 0, i32 2, i32 1
  %67 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %arrayidx.i.i, align 4
  %69 = and i32 %68, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool2.not.i = icmp eq i32 %69, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge

i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge: ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end4.i:                                        ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  %call5.i = call zeroext i1 @i40e_reset_vf(ptr noundef %vf, i1 noundef zeroext false) #9
  br label %cleanup

if.end48:                                         ; preds = %do.end34, %do.end14, %do.end
  %conv25.sink = phi i16 [ %conv25, %do.end14 ], [ %conv42, %do.end34 ], [ 16, %do.end ]
  %70 = ptrtoint ptr %msg to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 %conv25.sink, ptr %msg, align 2
  %tobool.not.i88 = icmp eq ptr %vf, null
  br i1 %tobool.not.i88, label %if.end48.cleanup_crit_edge, label %lor.lhs.false.i

if.end48.cleanup_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %if.end48
  %vf_id.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %71 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %vf_id.i, align 4
  %conv.i89 = sext i16 %72 to i32
  %73 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %74, i32 0, i32 86
  %75 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %76, i32 %conv.i89)
  %cmp.not.i90 = icmp sgt i32 %76, %conv.i89
  br i1 %cmp.not.i90, label %if.end.i91, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end.i91:                                       ; preds = %lor.lhs.false.i
  %hw4.i = getelementptr inbounds %struct.i40e_pf, ptr %74, i32 0, i32 1
  %vf_base_id.i = getelementptr inbounds %struct.i40e_pf, ptr %74, i32 0, i32 1, i32 15, i32 33
  %77 = ptrtoint ptr %vf_base_id.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %vf_base_id.i, align 8
  %79 = trunc i32 %78 to i16
  %conv7.i = add i16 %72, %79
  %call.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i, i16 noundef zeroext %conv7.i, i32 noundef 29, i32 noundef 0, ptr noundef %msg, i16 noundef zeroext 2, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.not.i, label %if.end.i91.cleanup_crit_edge, label %do.end.i

if.end.i91.cleanup_crit_edge:                     ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.end.i:                                         ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #11
  %80 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %74, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  %82 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %vf_id.i, align 4
  %conv11.i92 = sext i16 %83 to i32
  %asq_last_status.i = getelementptr inbounds %struct.i40e_pf, ptr %74, i32 0, i32 1, i32 23, i32 14
  %84 = ptrtoint ptr %asq_last_status.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %asq_last_status.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i92, i32 noundef %85) #12
  br label %cleanup

cleanup:                                          ; preds = %do.end.i, %if.end.i91.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %if.end48.cleanup_crit_edge, %if.end4.i, %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge, %i40e_sync_vf_state.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %i40e_sync_vf_state.exit.cleanup_crit_edge ], [ 0, %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge ], [ 0, %if.end4.i ], [ -5, %do.end.i ], [ -22, %lor.lhs.false.i.cleanup_crit_edge ], [ -22, %if.end48.cleanup_crit_edge ], [ 0, %if.end.i91.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_add_qch_msg(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %pfe.i.i = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %spoofchk = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 20
  %8 = ptrtoint ptr %spoofchk to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %spoofchk, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not = icmp eq i8 %9, 0
  br i1 %tobool.not, label %if.end3, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.200) #12
  br label %err

if.end3:                                          ; preds = %if.end
  %driver_caps = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 4
  %12 = ptrtoint ptr %driver_caps to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %driver_caps, align 4
  %and = and i32 %13, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %do.end8, label %if.end11

do.end8:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #11
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 8
  %dev10 = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %16 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %17 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev10, ptr noundef nonnull @.str.203, i32 noundef %conv) #12
  br label %err

if.end11:                                         ; preds = %if.end3
  %18 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %msg, align 8
  %20 = add i32 %19, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %20)
  %21 = icmp ult i32 %20, -4
  br i1 %21, label %do.end18, label %for.body

do.end18:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %1, align 8
  %dev20 = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  %vf_id21 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %24 = ptrtoint ptr %vf_id21 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vf_id21, align 4
  %conv22 = sext i16 %25 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev20, ptr noundef nonnull @.str.206, i32 noundef %conv22, i32 noundef %19, i32 noundef 4) #12
  br label %err

for.body:                                         ; preds = %if.end11
  %arrayidx = getelementptr %struct.virtchnl_tc_info, ptr %msg, i32 0, i32 2, i32 0
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %arrayidx, align 8
  %28 = add i16 %27, -5
  call void @__sanitizer_cov_trace_const_cmp2(i16 -4, i16 %28)
  %29 = icmp ult i16 %28, -4
  br i1 %29, label %for.body.do.end39_crit_edge, label %for.inc

for.body.do.end39_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end39

do.end39:                                         ; preds = %for.body.3.do.end39_crit_edge, %for.body.2.do.end39_crit_edge, %for.body.1.do.end39_crit_edge, %for.body.do.end39_crit_edge
  %i.0191.lcssa = phi i32 [ 0, %for.body.do.end39_crit_edge ], [ 1, %for.body.1.do.end39_crit_edge ], [ 2, %for.body.2.do.end39_crit_edge ], [ 3, %for.body.3.do.end39_crit_edge ]
  %.lcssa209 = phi i16 [ %27, %for.body.do.end39_crit_edge ], [ %35, %for.body.1.do.end39_crit_edge ], [ %39, %for.body.2.do.end39_crit_edge ], [ %43, %for.body.3.do.end39_crit_edge ]
  %30 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %1, align 8
  %dev41 = getelementptr inbounds %struct.pci_dev, ptr %31, i32 0, i32 44
  %vf_id42 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %32 = ptrtoint ptr %vf_id42 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %vf_id42, align 4
  %conv43 = sext i16 %33 to i32
  %conv47 = zext i16 %.lcssa209 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev41, ptr noundef nonnull @.str.209, i32 noundef %conv43, i32 noundef %i.0191.lcssa, i32 noundef %conv47, i32 noundef 4) #12
  br label %err

for.inc:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %19)
  %exitcond.not = icmp eq i32 %19, 1
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.body.1

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.1:                                       ; preds = %for.inc
  %arrayidx.1 = getelementptr %struct.virtchnl_tc_info, ptr %msg, i32 0, i32 2, i32 1
  %34 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %arrayidx.1, align 8
  %36 = add i16 %35, -5
  call void @__sanitizer_cov_trace_const_cmp2(i16 -4, i16 %36)
  %37 = icmp ult i16 %36, -4
  br i1 %37, label %for.body.1.do.end39_crit_edge, label %for.inc.1

for.body.1.do.end39_crit_edge:                    ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end39

for.inc.1:                                        ; preds = %for.body.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %19)
  %exitcond.not.1 = icmp eq i32 %19, 2
  br i1 %exitcond.not.1, label %for.inc.1.for.end_crit_edge, label %for.body.2

for.inc.1.for.end_crit_edge:                      ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.2:                                       ; preds = %for.inc.1
  %arrayidx.2 = getelementptr %struct.virtchnl_tc_info, ptr %msg, i32 0, i32 2, i32 2
  %38 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %arrayidx.2, align 8
  %40 = add i16 %39, -5
  call void @__sanitizer_cov_trace_const_cmp2(i16 -4, i16 %40)
  %41 = icmp ult i16 %40, -4
  br i1 %41, label %for.body.2.do.end39_crit_edge, label %for.inc.2

for.body.2.do.end39_crit_edge:                    ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end39

for.inc.2:                                        ; preds = %for.body.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %19)
  %exitcond.not.2 = icmp eq i32 %19, 3
  br i1 %exitcond.not.2, label %for.inc.2.for.end_crit_edge, label %for.body.3

for.inc.2.for.end_crit_edge:                      ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.3:                                       ; preds = %for.inc.2
  %arrayidx.3 = getelementptr %struct.virtchnl_tc_info, ptr %msg, i32 0, i32 2, i32 3
  %42 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %arrayidx.3, align 8
  %44 = add i16 %43, -5
  call void @__sanitizer_cov_trace_const_cmp2(i16 -4, i16 %44)
  %45 = icmp ult i16 %44, -4
  br i1 %45, label %for.body.3.do.end39_crit_edge, label %for.body.3.for.end_crit_edge

for.body.3.for.end_crit_edge:                     ; preds = %for.body.3
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.3.do.end39_crit_edge:                    ; preds = %for.body.3
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end39

for.end:                                          ; preds = %for.body.3.for.end_crit_edge, %for.inc.2.for.end_crit_edge, %for.inc.1.for.end_crit_edge, %for.inc.for.end_crit_edge
  %queues_left = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 16
  %46 = ptrtoint ptr %queues_left to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %queues_left, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %47)
  %cmp49 = icmp slt i32 %47, 12
  br i1 %cmp49, label %do.end54, label %if.else

do.end54:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  %48 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %1, align 8
  %dev56 = getelementptr inbounds %struct.pci_dev, ptr %49, i32 0, i32 44
  %vf_id57 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %50 = ptrtoint ptr %vf_id57 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %vf_id57, align 4
  %conv58 = sext i16 %51 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev56, ptr noundef nonnull @.str.212, i32 noundef %conv58) #12
  br label %err

if.else:                                          ; preds = %for.end
  %num_queue_pairs = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 12
  %52 = ptrtoint ptr %num_queue_pairs to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 16, ptr %num_queue_pairs, align 2
  %link_speed = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 2, i32 0, i32 1
  %53 = ptrtoint ptr %link_speed to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %link_speed, align 4
  %55 = zext i32 %54 to i64
  call void @__sanitizer_cov_trace_switch(i64 %55, ptr @__sancov_gen_cov_switch_values.294)
  switch i32 %54, label %sw.epilog.i [
    i32 2, label %if.else.i40e_vc_link_speed2mbps.exit_crit_edge
    i32 4, label %sw.bb1.i
    i32 1, label %sw.bb2.i
    i32 128, label %sw.bb3.i
    i32 8, label %sw.bb4.i
    i32 32, label %sw.bb5.i
    i32 64, label %sw.bb6.i
    i32 16, label %sw.bb7.i
    i32 0, label %sw.bb8.i
  ]

if.else.i40e_vc_link_speed2mbps.exit_crit_edge:   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.bb1.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.bb2.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.bb3.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.bb4.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.bb5.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.bb6.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.bb7.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.bb8.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

sw.epilog.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_link_speed2mbps.exit

i40e_vc_link_speed2mbps.exit:                     ; preds = %sw.epilog.i, %sw.bb8.i, %sw.bb7.i, %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.else.i40e_vc_link_speed2mbps.exit_crit_edge
  %retval.0.i177 = phi i32 [ -1, %sw.epilog.i ], [ -1, %sw.bb8.i ], [ 40000, %sw.bb7.i ], [ 25000, %sw.bb6.i ], [ 20000, %sw.bb5.i ], [ 10000, %sw.bb4.i ], [ 5000, %sw.bb3.i ], [ 2500, %sw.bb2.i ], [ 1000, %sw.bb1.i ], [ 100, %if.else.i40e_vc_link_speed2mbps.exit_crit_edge ]
  %conv61 = zext i32 %retval.0.i177 to i64
  %56 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %msg, align 8
  %conv72 = trunc i32 %57 to i8
  %num_tc73 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %58 = ptrtoint ptr %num_tc73 to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %conv72, ptr %num_tc73, align 1
  %conv76192 = and i32 %57, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv76192)
  %cmp77193.not = icmp eq i32 %conv76192, 0
  br i1 %cmp77193.not, label %i40e_vc_link_speed2mbps.exit.for.end115_crit_edge, label %i40e_vc_link_speed2mbps.exit.for.body79_crit_edge

i40e_vc_link_speed2mbps.exit.for.body79_crit_edge: ; preds = %i40e_vc_link_speed2mbps.exit
  br label %for.body79

i40e_vc_link_speed2mbps.exit.for.end115_crit_edge: ; preds = %i40e_vc_link_speed2mbps.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end115

for.body79:                                       ; preds = %if.end107.for.body79_crit_edge, %i40e_vc_link_speed2mbps.exit.for.body79_crit_edge
  %i.1194 = phi i32 [ %inc114, %if.end107.for.body79_crit_edge ], [ 0, %i40e_vc_link_speed2mbps.exit.for.body79_crit_edge ]
  %arrayidx81 = getelementptr %struct.virtchnl_tc_info, ptr %msg, i32 0, i32 2, i32 %i.1194
  %max_tx_rate = getelementptr %struct.virtchnl_tc_info, ptr %msg, i32 0, i32 2, i32 %i.1194, i32 3
  %59 = ptrtoint ptr %max_tx_rate to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %max_tx_rate, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %60)
  %tobool82.not = icmp eq i64 %60, 0
  br i1 %tobool82.not, label %for.body79.if.end107_crit_edge, label %if.then83

for.body79.if.end107_crit_edge:                   ; preds = %for.body79
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end107

if.then83:                                        ; preds = %for.body79
  call void @__sanitizer_cov_trace_cmp8(i64 %60, i64 %conv61)
  %cmp87 = icmp ugt i64 %60, %conv61
  br i1 %cmp87, label %do.end92, label %if.else100

do.end92:                                         ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #11
  %61 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %1, align 8
  %dev94 = getelementptr inbounds %struct.pci_dev, ptr %62, i32 0, i32 44
  %vf_id98 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %63 = ptrtoint ptr %vf_id98 to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %vf_id98, align 4
  %conv99 = sext i16 %64 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev94, ptr noundef nonnull @.str.218, i64 noundef %60, i32 noundef %conv99) #12
  br label %err

if.else100:                                       ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #11
  %max_tx_rate105 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.1194, i32 3
  %65 = ptrtoint ptr %max_tx_rate105 to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 %60, ptr %max_tx_rate105, align 8
  br label %if.end107

if.end107:                                        ; preds = %if.else100, %for.body79.if.end107_crit_edge
  %66 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %arrayidx81, align 8
  %num_qps = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.1194, i32 2
  %68 = ptrtoint ptr %num_qps to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %67, ptr %num_qps, align 4
  %inc114 = add nuw nsw i32 %i.1194, 1
  %69 = ptrtoint ptr %num_tc73 to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %num_tc73, align 1
  %conv76 = zext i8 %70 to i32
  %cmp77 = icmp ult i32 %inc114, %conv76
  br i1 %cmp77, label %if.end107.for.body79_crit_edge, label %if.end107.for.end115_crit_edge

if.end107.for.end115_crit_edge:                   ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end115

if.end107.for.body79_crit_edge:                   ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body79

for.end115:                                       ; preds = %if.end107.for.end115_crit_edge, %i40e_vc_link_speed2mbps.exit.for.end115_crit_edge
  %adq_enabled = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %71 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 1, ptr %adq_enabled, align 2
  %72 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %vf, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %74 = getelementptr inbounds i8, ptr %pfe.i.i, i32 4
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_storeN_noabort(i32 %75, i32 8)
  store i64 -1, ptr %74, align 4
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %for.end115.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %lor.lhs.false.i.i

for.end115.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %for.end115
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

lor.lhs.false.i.i:                                ; preds = %for.end115
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %76 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %77 to i32
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %73, i32 0, i32 86
  %78 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %79, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %79, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge

lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %80 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %vf_states.i, align 4
  %and1.i.i.i = and i32 %81, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i, label %if.end.i.i.if.end7.i.i_crit_edge

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %82 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %vf_states.i, align 4
  %84 = and i32 %83, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %tobool5.not.i.i = icmp eq i32 %84, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %land.lhs.true.i.i.if.end7.i.i_crit_edge

land.lhs.true.i.i.if.end7.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end7.i.i:                                      ; preds = %land.lhs.true.i.i.if.end7.i.i_crit_edge, %if.end.i.i.if.end7.i.i_crit_edge
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %73, i32 0, i32 1, i32 15, i32 33
  %85 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %vf_base_id.i.i, align 8
  %87 = ptrtoint ptr %pfe.i.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 2, ptr %pfe.i.i, align 4
  %severity.i.i = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe.i.i, i32 0, i32 2
  %88 = ptrtoint ptr %severity.i.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 255, ptr %severity.i.i, align 4
  %hw12.i.i = getelementptr inbounds %struct.i40e_pf, ptr %73, i32 0, i32 1
  %89 = trunc i32 %86 to i16
  %conv13.i.i = add i16 %77, %89
  %call14.i.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw12.i.i, i16 noundef zeroext %conv13.i.i, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe.i.i, i16 noundef zeroext 16, ptr noundef null) #9
  br label %i40e_vc_notify_vf_reset.exit.i

i40e_vc_notify_vf_reset.exit.i:                   ; preds = %if.end7.i.i, %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %for.end115.i40e_vc_notify_vf_reset.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %arrayidx.i.i = getelementptr %struct.i40e_pf, ptr %73, i32 0, i32 2, i32 1
  %90 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %arrayidx.i.i, align 4
  %92 = and i32 %91, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %tobool2.not.i = icmp eq i32 %92, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge

i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge: ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end4.i:                                        ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  %call5.i = call zeroext i1 @i40e_reset_vf(ptr noundef %vf, i1 noundef zeroext false) #9
  br label %cleanup

err:                                              ; preds = %do.end92, %do.end54, %do.end39, %do.end18, %do.end8, %do.end, %i40e_sync_vf_state.exit.err_crit_edge
  %tobool.not.i.i179 = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i179, label %err.cleanup_crit_edge, label %lor.lhs.false.i.i184

err.cleanup_crit_edge:                            ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false.i.i184:                             ; preds = %err
  %vf_id.i.i180 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %93 = ptrtoint ptr %vf_id.i.i180 to i32
  call void @__asan_load2_noabort(i32 %93)
  %94 = load i16, ptr %vf_id.i.i180, align 4
  %conv.i.i181 = sext i16 %94 to i32
  %95 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i182 = getelementptr inbounds %struct.i40e_pf, ptr %96, i32 0, i32 86
  %97 = ptrtoint ptr %num_alloc_vfs.i.i182 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %num_alloc_vfs.i.i182, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %98, i32 %conv.i.i181)
  %cmp.not.i.i183 = icmp sgt i32 %98, %conv.i.i181
  br i1 %cmp.not.i.i183, label %if.end.i.i186, label %lor.lhs.false.i.i184.cleanup_crit_edge

lor.lhs.false.i.i184.cleanup_crit_edge:           ; preds = %lor.lhs.false.i.i184
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end.i.i186:                                    ; preds = %lor.lhs.false.i.i184
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %96, i32 0, i32 1
  %vf_base_id.i.i185 = getelementptr inbounds %struct.i40e_pf, ptr %96, i32 0, i32 1, i32 15, i32 33
  %99 = ptrtoint ptr %vf_base_id.i.i185 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %vf_base_id.i.i185, align 8
  %101 = trunc i32 %100 to i16
  %conv7.i.i = add i16 %94, %101
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 30, i32 noundef -5, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i186.cleanup_crit_edge, label %do.end.i.i

if.end.i.i186.cleanup_crit_edge:                  ; preds = %if.end.i.i186
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.end.i.i:                                       ; preds = %if.end.i.i186
  call void @__sanitizer_cov_trace_pc() #11
  %102 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %96, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %103, i32 0, i32 44
  %104 = ptrtoint ptr %vf_id.i.i180 to i32
  call void @__asan_load2_noabort(i32 %104)
  %105 = load i16, ptr %vf_id.i.i180, align 4
  %conv11.i.i = sext i16 %105 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %96, i32 0, i32 1, i32 23, i32 14
  %106 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %107) #12
  br label %cleanup

cleanup:                                          ; preds = %do.end.i.i, %if.end.i.i186.cleanup_crit_edge, %lor.lhs.false.i.i184.cleanup_crit_edge, %err.cleanup_crit_edge, %if.end4.i, %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge ], [ 0, %if.end4.i ], [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i184.cleanup_crit_edge ], [ -22, %err.cleanup_crit_edge ], [ 0, %if.end.i.i186.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_del_qch_msg(ptr noundef %vf) unnamed_addr #0 align 64 {
entry:
  %pfe.i.i = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %vf_states.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %5 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vf_states.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.i.not = icmp eq i32 %7, 0
  br i1 %tobool3.i.not, label %if.then, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.then:                                          ; preds = %i40e_sync_vf_state.exit
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %if.then.cleanup_crit_edge, label %lor.lhs.false.i.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %if.then
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %8 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %9 to i32
  %10 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %11, i32 0, i32 86
  %12 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %13, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.cleanup_crit_edge

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %11, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %11, i32 0, i32 1, i32 15, i32 33
  %14 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vf_base_id.i.i, align 8
  %16 = trunc i32 %15 to i16
  %conv7.i.i = add i16 %9, %16
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 31, i32 noundef -5, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.cleanup_crit_edge, label %do.end.i.i

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %17 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %11, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  %19 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %20 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %11, i32 0, i32 1, i32 23, i32 14
  %21 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %22) #12
  br label %cleanup

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %adq_enabled = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %23 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not = icmp eq i8 %24, 0
  br i1 %tobool.not, label %if.end.if.end11_crit_edge, label %if.then2

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.then2:                                         ; preds = %if.end
  tail call fastcc void @i40e_del_all_cloud_filters(ptr noundef %vf)
  %num_tc.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %25 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %num_tc.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %26)
  %cmp23.i = icmp ugt i8 %26, 1
  br i1 %cmp23.i, label %for.body.lr.ph.i, label %if.then2.i40e_del_qch.exit_crit_edge

if.then2.i40e_del_qch.exit_crit_edge:             ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_del_qch.exit

for.body.lr.ph.i:                                 ; preds = %if.then2
  %27 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %vf, align 8
  %vsi.i = getelementptr inbounds %struct.i40e_pf, ptr %28, i32 0, i32 74
  br label %for.body.i2

for.body.i2:                                      ; preds = %for.inc.i.for.body.i2_crit_edge, %for.body.lr.ph.i
  %i.024.i = phi i32 [ 1, %for.body.lr.ph.i ], [ %inc.i3, %for.inc.i.for.body.i2_crit_edge ]
  %arrayidx.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.024.i
  %29 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %arrayidx.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %30)
  %tobool.not.i1 = icmp eq i16 %30, 0
  br i1 %tobool.not.i1, label %for.body.i2.for.inc.i_crit_edge, label %if.then.i

for.body.i2.for.inc.i_crit_edge:                  ; preds = %for.body.i2
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i2
  call void @__sanitizer_cov_trace_pc() #11
  %31 = ptrtoint ptr %vsi.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %vsi.i, align 8
  %idxprom.i = zext i16 %30 to i32
  %arrayidx6.i = getelementptr ptr, ptr %32, i32 %idxprom.i
  %33 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx6.i, align 4
  %call.i = tail call i32 @i40e_vsi_release(ptr noundef %34) #9
  %35 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 0, ptr %arrayidx.i, align 8
  %vsi_id.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.024.i, i32 1
  %36 = ptrtoint ptr %vsi_id.i to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 0, ptr %vsi_id.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i2.for.inc.i_crit_edge
  %inc.i3 = add nuw nsw i32 %i.024.i, 1
  %37 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %num_tc.i, align 1
  %conv.i = zext i8 %38 to i32
  %cmp.i = icmp ult i32 %inc.i3, %conv.i
  br i1 %cmp.i, label %for.inc.i.for.body.i2_crit_edge, label %for.inc.i.i40e_del_qch.exit_crit_edge

for.inc.i.i40e_del_qch.exit_crit_edge:            ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_del_qch.exit

for.inc.i.for.body.i2_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i2

i40e_del_qch.exit:                                ; preds = %for.inc.i.i40e_del_qch.exit_crit_edge, %if.then2.i40e_del_qch.exit_crit_edge
  %39 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 0, ptr %adq_enabled, align 2
  %40 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 0, ptr %num_tc.i, align 1
  br label %if.end11

if.end11:                                         ; preds = %i40e_del_qch.exit, %if.end.if.end11_crit_edge
  %.str.223.sink = phi ptr [ @.str.220, %i40e_del_qch.exit ], [ @.str.223, %if.end.if.end11_crit_edge ]
  %41 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %1, align 8
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %42, i32 0, i32 44
  %vf_id9 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %43 = ptrtoint ptr %vf_id9 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %vf_id9, align 4
  %conv10 = sext i16 %44 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev8, ptr noundef nonnull %.str.223.sink, i32 noundef %conv10) #12
  %45 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %vf, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %47 = getelementptr inbounds i8, ptr %pfe.i.i, i32 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_storeN_noabort(i32 %48, i32 8)
  store i64 -1, ptr %47, align 4
  %tobool.not.i.i5 = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i5, label %if.end11.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %lor.lhs.false.i.i11

if.end11.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

lor.lhs.false.i.i11:                              ; preds = %if.end11
  %vf_id.i.i7 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %49 = ptrtoint ptr %vf_id.i.i7 to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %vf_id.i.i7, align 4
  %conv.i.i8 = sext i16 %50 to i32
  %num_alloc_vfs.i.i9 = getelementptr inbounds %struct.i40e_pf, ptr %46, i32 0, i32 86
  %51 = ptrtoint ptr %num_alloc_vfs.i.i9 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %num_alloc_vfs.i.i9, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %conv.i.i8)
  %cmp.not.i.i10 = icmp sgt i32 %52, %conv.i.i8
  br i1 %cmp.not.i.i10, label %if.end.i.i12, label %lor.lhs.false.i.i11.i40e_vc_notify_vf_reset.exit.i_crit_edge

lor.lhs.false.i.i11.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i11
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end.i.i12:                                     ; preds = %lor.lhs.false.i.i11
  %53 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %vf_states.i, align 4
  %and1.i.i.i = and i32 %54, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i, label %if.end.i.i12.if.end7.i.i_crit_edge

if.end.i.i12.if.end7.i.i_crit_edge:               ; preds = %if.end.i.i12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i12
  %55 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %vf_states.i, align 4
  %57 = and i32 %56, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool5.not.i.i = icmp eq i32 %57, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %land.lhs.true.i.i.if.end7.i.i_crit_edge

land.lhs.true.i.i.if.end7.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end7.i.i:                                      ; preds = %land.lhs.true.i.i.if.end7.i.i_crit_edge, %if.end.i.i12.if.end7.i.i_crit_edge
  %vf_base_id.i.i13 = getelementptr inbounds %struct.i40e_pf, ptr %46, i32 0, i32 1, i32 15, i32 33
  %58 = ptrtoint ptr %vf_base_id.i.i13 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %vf_base_id.i.i13, align 8
  %60 = ptrtoint ptr %pfe.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 2, ptr %pfe.i.i, align 4
  %severity.i.i = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe.i.i, i32 0, i32 2
  %61 = ptrtoint ptr %severity.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 255, ptr %severity.i.i, align 4
  %hw12.i.i = getelementptr inbounds %struct.i40e_pf, ptr %46, i32 0, i32 1
  %62 = trunc i32 %59 to i16
  %conv13.i.i = add i16 %50, %62
  %call14.i.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw12.i.i, i16 noundef zeroext %conv13.i.i, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe.i.i, i16 noundef zeroext 16, ptr noundef null) #9
  br label %i40e_vc_notify_vf_reset.exit.i

i40e_vc_notify_vf_reset.exit.i:                   ; preds = %if.end7.i.i, %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %lor.lhs.false.i.i11.i40e_vc_notify_vf_reset.exit.i_crit_edge, %if.end11.i40e_vc_notify_vf_reset.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %arrayidx.i.i = getelementptr %struct.i40e_pf, ptr %46, i32 0, i32 2, i32 1
  %63 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %arrayidx.i.i, align 4
  %65 = and i32 %64, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool2.not.i = icmp eq i32 %65, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge

i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge: ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end4.i:                                        ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  %call5.i = call zeroext i1 @i40e_reset_vf(ptr noundef %vf, i1 noundef zeroext false) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end4.i, %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge, %do.end.i.i, %if.end.i.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.cleanup_crit_edge ], [ -22, %if.then.cleanup_crit_edge ], [ 0, %if.end.i.i.cleanup_crit_edge ], [ 0, %i40e_vc_notify_vf_reset.exit.i.cleanup_crit_edge ], [ 0, %if.end4.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_add_cloud_filter(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %tcf.sroa.19 = alloca [2 x i32], align 8
  %tcf.sroa.22 = alloca [2 x i32], align 8
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %mask1 = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1
  %0 = ptrtoint ptr %mask1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %mask.sroa.0.0.copyload = load i8, ptr %mask1, align 4
  %mask.sroa.5.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 1
  %1 = ptrtoint ptr %mask.sroa.5.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %1)
  %mask.sroa.5.0.copyload = load i8, ptr %mask.sroa.5.0.mask1.sroa_idx, align 1
  %mask.sroa.6.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 2
  %2 = ptrtoint ptr %mask.sroa.6.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %2)
  %mask.sroa.6.0.copyload = load i8, ptr %mask.sroa.6.0.mask1.sroa_idx, align 2
  %mask.sroa.7.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 3
  %3 = ptrtoint ptr %mask.sroa.7.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %3)
  %mask.sroa.7.0.copyload = load i8, ptr %mask.sroa.7.0.mask1.sroa_idx, align 1
  %mask.sroa.8.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 4
  %4 = ptrtoint ptr %mask.sroa.8.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %4)
  %mask.sroa.8.0.copyload = load i8, ptr %mask.sroa.8.0.mask1.sroa_idx, align 4
  %mask.sroa.9.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 5
  %5 = ptrtoint ptr %mask.sroa.9.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %5)
  %mask.sroa.9.0.copyload = load i8, ptr %mask.sroa.9.0.mask1.sroa_idx, align 1
  %mask.sroa.10.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1
  %6 = ptrtoint ptr %mask.sroa.10.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %6)
  %mask.sroa.10.0.copyload = load i8, ptr %mask.sroa.10.0.mask1.sroa_idx, align 2
  %mask.sroa.11.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %mask.sroa.11.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %7)
  %mask.sroa.11.0.copyload = load i8, ptr %mask.sroa.11.0.mask1.sroa_idx, align 1
  %mask.sroa.12.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 2
  %8 = ptrtoint ptr %mask.sroa.12.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %8)
  %mask.sroa.12.0.copyload = load i8, ptr %mask.sroa.12.0.mask1.sroa_idx, align 4
  %mask.sroa.13.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 3
  %9 = ptrtoint ptr %mask.sroa.13.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %9)
  %mask.sroa.13.0.copyload = load i8, ptr %mask.sroa.13.0.mask1.sroa_idx, align 1
  %mask.sroa.14.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 4
  %10 = ptrtoint ptr %mask.sroa.14.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %10)
  %mask.sroa.14.0.copyload = load i8, ptr %mask.sroa.14.0.mask1.sroa_idx, align 2
  %mask.sroa.15.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 5
  %11 = ptrtoint ptr %mask.sroa.15.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %11)
  %mask.sroa.15.0.copyload = load i8, ptr %mask.sroa.15.0.mask1.sroa_idx, align 1
  %mask.sroa.16.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 2
  %12 = ptrtoint ptr %mask.sroa.16.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %12)
  %mask.sroa.16.0.copyload = load i16, ptr %mask.sroa.16.0.mask1.sroa_idx, align 4
  %mask.sroa.17219.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 4
  %13 = ptrtoint ptr %mask.sroa.17219.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %13)
  %mask.sroa.17219.0.copyload = load i32, ptr %mask.sroa.17219.0.mask1.sroa_idx, align 4
  %mask.sroa.18220.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 4, i32 3
  %14 = ptrtoint ptr %mask.sroa.18220.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %14)
  %mask.sroa.18220.0.copyload = load i32, ptr %mask.sroa.18220.0.mask1.sroa_idx, align 4
  %mask.sroa.19.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 5
  %15 = ptrtoint ptr %mask.sroa.19.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %15)
  %mask.sroa.19.0.copyload = load i32, ptr %mask.sroa.19.0.mask1.sroa_idx, align 4
  %mask.sroa.20221.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 5, i32 3
  %16 = ptrtoint ptr %mask.sroa.20221.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %16)
  %mask.sroa.20221.0.copyload = load i32, ptr %mask.sroa.20221.0.mask1.sroa_idx, align 4
  %mask.sroa.21.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 6
  %17 = ptrtoint ptr %mask.sroa.21.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %17)
  %mask.sroa.21.0.copyload = load i16, ptr %mask.sroa.21.0.mask1.sroa_idx, align 4
  %mask.sroa.22.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 7
  %18 = ptrtoint ptr %mask.sroa.22.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %18)
  %mask.sroa.22.0.copyload = load i16, ptr %mask.sroa.22.0.mask1.sroa_idx, align 2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tcf.sroa.19)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tcf.sroa.22)
  %19 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %19)
  %tcf.sroa.0.0.copyload = load i8, ptr %msg, align 4
  %tcf.sroa.5.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 1
  %20 = ptrtoint ptr %tcf.sroa.5.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %20)
  %tcf.sroa.5.0.copyload = load i8, ptr %tcf.sroa.5.0.msg.sroa_idx, align 1
  %tcf.sroa.6.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 2
  %21 = ptrtoint ptr %tcf.sroa.6.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %21)
  %tcf.sroa.6.0.copyload = load i8, ptr %tcf.sroa.6.0.msg.sroa_idx, align 2
  %tcf.sroa.7.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 3
  %22 = ptrtoint ptr %tcf.sroa.7.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %22)
  %tcf.sroa.7.0.copyload = load i8, ptr %tcf.sroa.7.0.msg.sroa_idx, align 1
  %tcf.sroa.8.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 4
  %23 = ptrtoint ptr %tcf.sroa.8.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %23)
  %tcf.sroa.8.0.copyload = load i8, ptr %tcf.sroa.8.0.msg.sroa_idx, align 4
  %tcf.sroa.9.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 5
  %24 = ptrtoint ptr %tcf.sroa.9.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %24)
  %tcf.sroa.9.0.copyload = load i8, ptr %tcf.sroa.9.0.msg.sroa_idx, align 1
  %tcf.sroa.10.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 6
  %25 = ptrtoint ptr %tcf.sroa.10.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %25)
  %tcf.sroa.10.0.copyload = load i8, ptr %tcf.sroa.10.0.msg.sroa_idx, align 2
  %tcf.sroa.11.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 7
  %26 = ptrtoint ptr %tcf.sroa.11.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %26)
  %tcf.sroa.11.0.copyload = load i8, ptr %tcf.sroa.11.0.msg.sroa_idx, align 1
  %tcf.sroa.12.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 8
  %27 = ptrtoint ptr %tcf.sroa.12.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %27)
  %tcf.sroa.12.0.copyload = load i8, ptr %tcf.sroa.12.0.msg.sroa_idx, align 4
  %tcf.sroa.13.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 9
  %28 = ptrtoint ptr %tcf.sroa.13.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %28)
  %tcf.sroa.13.0.copyload = load i8, ptr %tcf.sroa.13.0.msg.sroa_idx, align 1
  %tcf.sroa.14.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 10
  %29 = ptrtoint ptr %tcf.sroa.14.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %29)
  %tcf.sroa.14.0.copyload = load i8, ptr %tcf.sroa.14.0.msg.sroa_idx, align 2
  %tcf.sroa.15.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 11
  %30 = ptrtoint ptr %tcf.sroa.15.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %30)
  %tcf.sroa.15.0.copyload = load i8, ptr %tcf.sroa.15.0.msg.sroa_idx, align 1
  %tcf.sroa.16.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 12
  %31 = ptrtoint ptr %tcf.sroa.16.0.msg.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %31)
  %tcf.sroa.16.0.copyload = load i16, ptr %tcf.sroa.16.0.msg.sroa_idx, align 4
  %tcf.sroa.17212.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 16
  %32 = ptrtoint ptr %tcf.sroa.17212.0.msg.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %32)
  %tcf.sroa.17212.0.copyload = load i32, ptr %tcf.sroa.17212.0.msg.sroa_idx, align 4
  %tcf.sroa.19.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 20
  %33 = ptrtoint ptr %tcf.sroa.19.0.msg.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %tcf.sroa.19.0.msg.sroa_idx, align 4
  %35 = ptrtoint ptr %tcf.sroa.19 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %tcf.sroa.19, align 8
  %tcf.sroa.19213.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 28
  %36 = ptrtoint ptr %tcf.sroa.19213.0.msg.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %36)
  %tcf.sroa.19213.0.copyload = load i32, ptr %tcf.sroa.19213.0.msg.sroa_idx, align 4
  %tcf.sroa.20.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 32
  %37 = ptrtoint ptr %tcf.sroa.20.0.msg.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %37)
  %tcf.sroa.20.0.copyload = load i32, ptr %tcf.sroa.20.0.msg.sroa_idx, align 4
  %tcf.sroa.22.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 36
  %38 = ptrtoint ptr %tcf.sroa.22.0.msg.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %39 = load i64, ptr %tcf.sroa.22.0.msg.sroa_idx, align 4
  %40 = ptrtoint ptr %tcf.sroa.22 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %39, ptr %tcf.sroa.22, align 8
  %tcf.sroa.22214.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 44
  %41 = ptrtoint ptr %tcf.sroa.22214.0.msg.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %41)
  %tcf.sroa.22214.0.copyload = load i32, ptr %tcf.sroa.22214.0.msg.sroa_idx, align 4
  %tcf.sroa.23.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 48
  %42 = ptrtoint ptr %tcf.sroa.23.0.msg.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %42)
  %tcf.sroa.23.0.copyload = load i16, ptr %tcf.sroa.23.0.msg.sroa_idx, align 4
  %tcf.sroa.24.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 50
  %43 = ptrtoint ptr %tcf.sroa.24.0.msg.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %43)
  %tcf.sroa.24.0.copyload = load i16, ptr %tcf.sroa.24.0.msg.sroa_idx, align 2
  %44 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %46 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %vf_states.i, align 4
  %48 = and i32 %47, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i = icmp eq i32 %48, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %49 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %vf_states.i, align 4
  %51 = and i32 %50, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool3.i.not = icmp eq i32 %51, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_out_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_out_crit_edge:        ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err_out

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %adq_enabled = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %52 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool.not = icmp eq i8 %53, 0
  br i1 %tobool.not, label %do.end, label %if.end4

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %54 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %45, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %55, i32 0, i32 44
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %56 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %57 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.225, i32 noundef %conv) #12
  br label %err_out

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc i32 @i40e_validate_cloud_filter(ptr noundef %vf, ptr noundef %msg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end15, label %do.end10

do.end10:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #11
  %58 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %45, align 8
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %59, i32 0, i32 44
  %vf_id13 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %60 = ptrtoint ptr %vf_id13 to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %vf_id13, align 4
  %conv14 = sext i16 %61 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev12, ptr noundef nonnull @.str.228, i32 noundef %conv14) #12
  br label %err_out

if.end15:                                         ; preds = %if.end4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %62 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %62, i32 noundef 3520, i32 noundef 76) #14
  %tobool17.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool17.not, label %if.end15.cleanup_crit_edge, label %for.body.preheader

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

for.body.preheader:                               ; preds = %if.end15
  %and206 = and i8 %tcf.sroa.10.0.copyload, %mask.sroa.10.0.copyload
  %arrayidx27 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 2, i32 0
  %63 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %and206, ptr %arrayidx27, align 4
  %and206.1 = and i8 %tcf.sroa.11.0.copyload, %mask.sroa.11.0.copyload
  %arrayidx27.1 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 2, i32 1
  %64 = ptrtoint ptr %arrayidx27.1 to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %and206.1, ptr %arrayidx27.1, align 1
  %and206.2 = and i8 %tcf.sroa.12.0.copyload, %mask.sroa.12.0.copyload
  %arrayidx27.2 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 2, i32 2
  %65 = ptrtoint ptr %arrayidx27.2 to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 %and206.2, ptr %arrayidx27.2, align 2
  %and206.3 = and i8 %tcf.sroa.13.0.copyload, %mask.sroa.13.0.copyload
  %arrayidx27.3 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 2, i32 3
  %66 = ptrtoint ptr %arrayidx27.3 to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 %and206.3, ptr %arrayidx27.3, align 1
  %and206.4 = and i8 %tcf.sroa.14.0.copyload, %mask.sroa.14.0.copyload
  %arrayidx27.4 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 2, i32 4
  %67 = ptrtoint ptr %arrayidx27.4 to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 %and206.4, ptr %arrayidx27.4, align 8
  %and206.5 = and i8 %tcf.sroa.15.0.copyload, %mask.sroa.15.0.copyload
  %arrayidx27.5 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 2, i32 5
  %68 = ptrtoint ptr %arrayidx27.5 to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 %and206.5, ptr %arrayidx27.5, align 1
  %and37205 = and i8 %tcf.sroa.0.0.copyload, %mask.sroa.0.0.copyload
  %arrayidx40 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 3, i32 0
  %69 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 %and37205, ptr %arrayidx40, align 2
  %and37205.1 = and i8 %tcf.sroa.5.0.copyload, %mask.sroa.5.0.copyload
  %arrayidx40.1 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 3, i32 1
  %70 = ptrtoint ptr %arrayidx40.1 to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %and37205.1, ptr %arrayidx40.1, align 1
  %and37205.2 = and i8 %tcf.sroa.6.0.copyload, %mask.sroa.6.0.copyload
  %arrayidx40.2 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 3, i32 2
  %71 = ptrtoint ptr %arrayidx40.2 to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %and37205.2, ptr %arrayidx40.2, align 4
  %and37205.3 = and i8 %tcf.sroa.7.0.copyload, %mask.sroa.7.0.copyload
  %arrayidx40.3 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 3, i32 3
  %72 = ptrtoint ptr %arrayidx40.3 to i32
  call void @__asan_store1_noabort(i32 %72)
  store i8 %and37205.3, ptr %arrayidx40.3, align 1
  %and37205.4 = and i8 %tcf.sroa.8.0.copyload, %mask.sroa.8.0.copyload
  %arrayidx40.4 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 3, i32 4
  %73 = ptrtoint ptr %arrayidx40.4 to i32
  call void @__asan_store1_noabort(i32 %73)
  store i8 %and37205.4, ptr %arrayidx40.4, align 2
  %and37205.5 = and i8 %tcf.sroa.9.0.copyload, %mask.sroa.9.0.copyload
  %arrayidx40.5 = getelementptr %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 3, i32 5
  %74 = ptrtoint ptr %arrayidx40.5 to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 %and37205.5, ptr %arrayidx40.5, align 1
  %and47202 = and i16 %tcf.sroa.16.0.copyload, %mask.sroa.16.0.copyload
  %vlan_id49 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 4
  %75 = ptrtoint ptr %vlan_id49 to i32
  call void @__asan_store2_noabort(i32 %75)
  store i16 %and47202, ptr %vlan_id49, align 8
  %and53203 = and i16 %tcf.sroa.24.0.copyload, %mask.sroa.22.0.copyload
  %dst_port55 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 6
  %76 = ptrtoint ptr %dst_port55 to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 %and53203, ptr %dst_port55, align 4
  %and59204 = and i16 %tcf.sroa.23.0.copyload, %mask.sroa.21.0.copyload
  %src_port61 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 7
  %77 = ptrtoint ptr %src_port61 to i32
  call void @__asan_store2_noabort(i32 %77)
  store i16 %and59204, ptr %src_port61, align 2
  %flow_type = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 2
  %78 = ptrtoint ptr %flow_type to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %flow_type, align 4
  %80 = zext i32 %79 to i64
  call void @__sanitizer_cov_trace_switch(i64 %80, ptr @__sancov_gen_cov_switch_values.295)
  switch i32 %79, label %do.end108 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb82
  ]

sw.bb:                                            ; preds = %for.body.preheader
  %n_proto = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 10
  %81 = ptrtoint ptr %n_proto to i32
  call void @__asan_store2_noabort(i32 %81)
  store i16 2048, ptr %n_proto, align 4
  %and65 = and i32 %tcf.sroa.20.0.copyload, %mask.sroa.19.0.copyload
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65)
  %tobool66.not = icmp eq i32 %and65, 0
  br i1 %tobool66.not, label %if.else, label %if.then67

if.then67:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  %ip = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 9
  %82 = ptrtoint ptr %ip to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %tcf.sroa.20.0.copyload, ptr %ip, align 4
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb
  %and73 = and i32 %mask.sroa.17219.0.copyload, %tcf.sroa.20.0.copyload
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and73)
  %tobool74.not = icmp eq i32 %and73, 0
  br i1 %tobool74.not, label %if.else.sw.epilog_crit_edge, label %if.then75

if.else.sw.epilog_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

if.then75:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %src_ip77 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = ptrtoint ptr %src_ip77 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %tcf.sroa.17212.0.copyload, ptr %src_ip77, align 8
  br label %sw.epilog

sw.bb82:                                          ; preds = %for.body.preheader
  %n_proto83 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 10
  %84 = ptrtoint ptr %n_proto83 to i32
  call void @__asan_store2_noabort(i32 %84)
  store i16 -31011, ptr %n_proto83, align 4
  %and88 = and i32 %tcf.sroa.22214.0.copyload, %mask.sroa.20221.0.copyload
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88)
  %tobool89.not = icmp eq i32 %and88, 0
  br i1 %tobool89.not, label %sw.bb82.if.end94_crit_edge, label %if.then90

sw.bb82.if.end94_crit_edge:                       ; preds = %sw.bb82
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end94

if.then90:                                        ; preds = %sw.bb82
  call void @__sanitizer_cov_trace_pc() #11
  %ip91 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 9
  %85 = ptrtoint ptr %ip91 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %tcf.sroa.20.0.copyload, ptr %ip91, align 4
  %tcf.sroa.22.32.ip91.sroa_idx = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = ptrtoint ptr %tcf.sroa.22 to i32
  call void @__asan_load8_noabort(i32 %86)
  %87 = load i64, ptr %tcf.sroa.22, align 8
  %88 = ptrtoint ptr %tcf.sroa.22.32.ip91.sroa_idx to i32
  call void @__asan_store8_noabort(i32 %88)
  store i64 %87, ptr %tcf.sroa.22.32.ip91.sroa_idx, align 8
  %tcf.sroa.22214.32.ip91.sroa_idx = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 3
  %89 = ptrtoint ptr %tcf.sroa.22214.32.ip91.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %tcf.sroa.22214.0.copyload, ptr %tcf.sroa.22214.32.ip91.sroa_idx, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then90, %sw.bb82.if.end94_crit_edge
  %and99 = and i32 %tcf.sroa.19213.0.copyload, %mask.sroa.18220.0.copyload
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and99)
  %tobool100.not = icmp eq i32 %and99, 0
  br i1 %tobool100.not, label %if.end94.sw.epilog_crit_edge, label %if.then101

if.end94.sw.epilog_crit_edge:                     ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

if.then101:                                       ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #11
  %src_ip6 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 9, i32 0, i32 1
  %90 = ptrtoint ptr %src_ip6 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %tcf.sroa.17212.0.copyload, ptr %src_ip6, align 4
  %tcf.sroa.19.16.src_ip6.sroa_idx = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 1
  %91 = ptrtoint ptr %tcf.sroa.19 to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %tcf.sroa.19, align 8
  %93 = ptrtoint ptr %tcf.sroa.19.16.src_ip6.sroa_idx to i32
  call void @__asan_store8_noabort(i32 %93)
  store i64 %92, ptr %tcf.sroa.19.16.src_ip6.sroa_idx, align 8
  %tcf.sroa.19213.16.src_ip6.sroa_idx = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 3
  %94 = ptrtoint ptr %tcf.sroa.19213.16.src_ip6.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %tcf.sroa.19213.0.copyload, ptr %tcf.sroa.19213.16.src_ip6.sroa_idx, align 8
  br label %sw.epilog

do.end108:                                        ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #11
  %95 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %45, align 8
  %dev110 = getelementptr inbounds %struct.pci_dev, ptr %96, i32 0, i32 44
  %vf_id111 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %97 = ptrtoint ptr %vf_id111 to i32
  call void @__asan_load2_noabort(i32 %97)
  %98 = load i16, ptr %vf_id111, align 4
  %conv112 = sext i16 %98 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev110, ptr noundef nonnull @.str.231, i32 noundef %conv112) #12
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end108, %if.then101, %if.end94.sw.epilog_crit_edge, %if.then75, %if.else.sw.epilog_crit_edge, %if.then67
  %vsi113 = getelementptr inbounds %struct.i40e_pf, ptr %45, i32 0, i32 74
  %99 = ptrtoint ptr %vsi113 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %vsi113, align 8
  %action_meta = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 4
  %101 = ptrtoint ptr %action_meta to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %action_meta, align 4
  %arrayidx114 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %102
  %103 = ptrtoint ptr %arrayidx114 to i32
  call void @__asan_load2_noabort(i32 %103)
  %104 = load i16, ptr %arrayidx114, align 8
  %idxprom = zext i16 %104 to i32
  %arrayidx115 = getelementptr ptr, ptr %100, i32 %idxprom
  %105 = ptrtoint ptr %arrayidx115 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %arrayidx115, align 4
  %seid = getelementptr inbounds %struct.i40e_vsi, ptr %106, i32 0, i32 38
  %107 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %107)
  %108 = load i16, ptr %seid, align 2
  %seid116 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 5
  %109 = ptrtoint ptr %seid116 to i32
  call void @__asan_store2_noabort(i32 %109)
  store i16 %108, ptr %seid116, align 2
  %field_flags = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 5
  %110 = ptrtoint ptr %field_flags to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %field_flags, align 4
  %flags = getelementptr inbounds %struct.i40e_cloud_filter, ptr %call7.i.i, i32 0, i32 12
  %112 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %112)
  store i8 %111, ptr %flags, align 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %tcf.sroa.24.0.copyload)
  %tobool118.not = icmp eq i16 %tcf.sroa.24.0.copyload, 0
  br i1 %tobool118.not, label %if.else121, label %if.then119

if.then119:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #11
  %call120 = tail call i32 @i40e_add_del_cloud_filter_big_buf(ptr noundef %106, ptr noundef nonnull %call7.i.i, i1 noundef zeroext true) #9
  br label %if.end123

if.else121:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #11
  %call122 = tail call i32 @i40e_add_del_cloud_filter(ptr noundef %106, ptr noundef nonnull %call7.i.i, i1 noundef zeroext true) #9
  br label %if.end123

if.end123:                                        ; preds = %if.else121, %if.then119
  %ret.0 = phi i32 [ %call120, %if.then119 ], [ %call122, %if.else121 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool124.not = icmp eq i32 %ret.0, 0
  br i1 %tobool124.not, label %if.end137, label %do.end128

do.end128:                                        ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #11
  %113 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %45, align 8
  %dev130 = getelementptr inbounds %struct.pci_dev, ptr %114, i32 0, i32 44
  %vf_id131 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %115 = ptrtoint ptr %vf_id131 to i32
  call void @__asan_load2_noabort(i32 %115)
  %116 = load i16, ptr %vf_id131, align 4
  %conv132 = sext i16 %116 to i32
  %hw = getelementptr inbounds %struct.i40e_pf, ptr %45, i32 0, i32 1
  %call133 = tail call ptr @i40e_stat_str(ptr noundef %hw, i32 noundef %ret.0) #9
  %asq_last_status = getelementptr inbounds %struct.i40e_pf, ptr %45, i32 0, i32 1, i32 23, i32 14
  %117 = ptrtoint ptr %asq_last_status to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %asq_last_status, align 8
  %call136 = tail call ptr @i40e_aq_str(ptr noundef %hw, i32 noundef %118) #9
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev130, ptr noundef nonnull @.str.234, i32 noundef %conv132, ptr noundef %call133, ptr noundef %call136) #12
  br label %err_free

if.end137:                                        ; preds = %if.end123
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %call7.i.i, i32 0, i32 1
  %119 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr null, ptr %pprev.i, align 4
  %cloud_filter_list = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 25
  %120 = ptrtoint ptr %cloud_filter_list to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %cloud_filter_list, align 4
  %122 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %122)
  store volatile ptr %121, ptr %call7.i.i, align 8
  %tobool.not.i207 = icmp eq ptr %121, null
  br i1 %tobool.not.i207, label %if.end137.hlist_add_head.exit_crit_edge, label %do.body12.i

if.end137.hlist_add_head.exit_crit_edge:          ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #11
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #11
  %pprev.i208 = getelementptr inbounds %struct.hlist_node, ptr %121, i32 0, i32 1
  %123 = ptrtoint ptr %pprev.i208 to i32
  call void @__asan_store4_noabort(i32 %123)
  store volatile ptr %call7.i.i, ptr %pprev.i208, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %if.end137.hlist_add_head.exit_crit_edge
  %124 = ptrtoint ptr %cloud_filter_list to i32
  call void @__asan_store4_noabort(i32 %124)
  store volatile ptr %call7.i.i, ptr %cloud_filter_list, align 4
  %125 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %125)
  store volatile ptr %cloud_filter_list, ptr %pprev.i, align 4
  %num_cloud_filters = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 26
  %126 = ptrtoint ptr %num_cloud_filters to i32
  call void @__asan_load2_noabort(i32 %126)
  %127 = load i16, ptr %num_cloud_filters, align 4
  %inc139 = add i16 %127, 1
  store i16 %inc139, ptr %num_cloud_filters, align 4
  br label %err_free

err_free:                                         ; preds = %hlist_add_head.exit, %do.end128
  %cfilter.0 = phi ptr [ %call7.i.i, %do.end128 ], [ null, %hlist_add_head.exit ]
  tail call void @kfree(ptr noundef %cfilter.0) #9
  br label %err_out

err_out:                                          ; preds = %err_free, %do.end10, %do.end, %i40e_sync_vf_state.exit.err_out_crit_edge
  %aq_ret.0 = phi i32 [ -5, %do.end10 ], [ 0, %err_free ], [ -5, %do.end ], [ -5, %i40e_sync_vf_state.exit.err_out_crit_edge ]
  %tobool.not.i.i = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i, label %err_out.cleanup_crit_edge, label %lor.lhs.false.i.i

err_out.cleanup_crit_edge:                        ; preds = %err_out
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %err_out
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %128 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %128)
  %129 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %129 to i32
  %130 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %131, i32 0, i32 86
  %132 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %133, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %133, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.cleanup_crit_edge

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %131, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %131, i32 0, i32 1, i32 15, i32 33
  %134 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %vf_base_id.i.i, align 8
  %136 = trunc i32 %135 to i16
  %conv7.i.i = add i16 %129, %136
  %call.i.i = tail call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 32, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.cleanup_crit_edge, label %do.end.i.i

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %137 = ptrtoint ptr %131 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %131, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %138, i32 0, i32 44
  %139 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %139)
  %140 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %140 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %131, i32 0, i32 1, i32 23, i32 14
  %141 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %asq_last_status.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %142) #12
  br label %cleanup

cleanup:                                          ; preds = %do.end.i.i, %if.end.i.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %err_out.cleanup_crit_edge, %if.end15.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.end15.cleanup_crit_edge ], [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.cleanup_crit_edge ], [ -22, %err_out.cleanup_crit_edge ], [ 0, %if.end.i.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tcf.sroa.19)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tcf.sroa.22)
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_vc_del_cloud_filter(ptr noundef %vf, ptr nocapture noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  %tcf.sroa.19 = alloca [2 x i32], align 8
  %tcf.sroa.22 = alloca [2 x i32], align 8
  %cfilter = alloca %struct.i40e_cloud_filter, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %mask1 = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1
  %0 = ptrtoint ptr %mask1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %mask.sroa.0.0.copyload = load i8, ptr %mask1, align 4
  %mask.sroa.5.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 1
  %1 = ptrtoint ptr %mask.sroa.5.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %1)
  %mask.sroa.5.0.copyload = load i8, ptr %mask.sroa.5.0.mask1.sroa_idx, align 1
  %mask.sroa.6.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 2
  %2 = ptrtoint ptr %mask.sroa.6.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %2)
  %mask.sroa.6.0.copyload = load i8, ptr %mask.sroa.6.0.mask1.sroa_idx, align 2
  %mask.sroa.7.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 3
  %3 = ptrtoint ptr %mask.sroa.7.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %3)
  %mask.sroa.7.0.copyload = load i8, ptr %mask.sroa.7.0.mask1.sroa_idx, align 1
  %mask.sroa.8.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 4
  %4 = ptrtoint ptr %mask.sroa.8.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %4)
  %mask.sroa.8.0.copyload = load i8, ptr %mask.sroa.8.0.mask1.sroa_idx, align 4
  %mask.sroa.9.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 0, i32 5
  %5 = ptrtoint ptr %mask.sroa.9.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %5)
  %mask.sroa.9.0.copyload = load i8, ptr %mask.sroa.9.0.mask1.sroa_idx, align 1
  %mask.sroa.10.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1
  %6 = ptrtoint ptr %mask.sroa.10.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %6)
  %mask.sroa.10.0.copyload = load i8, ptr %mask.sroa.10.0.mask1.sroa_idx, align 2
  %mask.sroa.12.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %mask.sroa.12.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %7)
  %mask.sroa.12.0.copyload = load i8, ptr %mask.sroa.12.0.mask1.sroa_idx, align 1
  %mask.sroa.13.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 2
  %8 = ptrtoint ptr %mask.sroa.13.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %8)
  %mask.sroa.13.0.copyload = load i8, ptr %mask.sroa.13.0.mask1.sroa_idx, align 4
  %mask.sroa.14.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 3
  %9 = ptrtoint ptr %mask.sroa.14.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %9)
  %mask.sroa.14.0.copyload = load i8, ptr %mask.sroa.14.0.mask1.sroa_idx, align 1
  %mask.sroa.15.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 4
  %10 = ptrtoint ptr %mask.sroa.15.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %10)
  %mask.sroa.15.0.copyload = load i8, ptr %mask.sroa.15.0.mask1.sroa_idx, align 2
  %mask.sroa.16.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 1, i32 5
  %11 = ptrtoint ptr %mask.sroa.16.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %11)
  %mask.sroa.16.0.copyload = load i8, ptr %mask.sroa.16.0.mask1.sroa_idx, align 1
  %mask.sroa.17.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 2
  %12 = ptrtoint ptr %mask.sroa.17.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %12)
  %mask.sroa.17.0.copyload = load i16, ptr %mask.sroa.17.0.mask1.sroa_idx, align 4
  %mask.sroa.18304.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 4
  %13 = ptrtoint ptr %mask.sroa.18304.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %13)
  %mask.sroa.18304.0.copyload = load i32, ptr %mask.sroa.18304.0.mask1.sroa_idx, align 4
  %mask.sroa.19305.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 4, i32 3
  %14 = ptrtoint ptr %mask.sroa.19305.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %14)
  %mask.sroa.19305.0.copyload = load i32, ptr %mask.sroa.19305.0.mask1.sroa_idx, align 4
  %mask.sroa.20.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 5
  %15 = ptrtoint ptr %mask.sroa.20.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %15)
  %mask.sroa.20.0.copyload = load i32, ptr %mask.sroa.20.0.mask1.sroa_idx, align 4
  %mask.sroa.22307.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 5, i32 3
  %16 = ptrtoint ptr %mask.sroa.22307.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %16)
  %mask.sroa.22307.0.copyload = load i32, ptr %mask.sroa.22307.0.mask1.sroa_idx, align 4
  %mask.sroa.24.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 6
  %17 = ptrtoint ptr %mask.sroa.24.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %17)
  %mask.sroa.24.0.copyload = load i16, ptr %mask.sroa.24.0.mask1.sroa_idx, align 4
  %mask.sroa.25.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 1, i32 0, i32 7
  %18 = ptrtoint ptr %mask.sroa.25.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %18)
  %mask.sroa.25.0.copyload = load i16, ptr %mask.sroa.25.0.mask1.sroa_idx, align 2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tcf.sroa.19)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tcf.sroa.22)
  %19 = ptrtoint ptr %msg to i32
  call void @__asan_load1_noabort(i32 %19)
  %tcf.sroa.0.0.copyload = load i8, ptr %msg, align 4
  %tcf.sroa.5.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 1
  %20 = ptrtoint ptr %tcf.sroa.5.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %20)
  %tcf.sroa.5.0.copyload = load i8, ptr %tcf.sroa.5.0.msg.sroa_idx, align 1
  %tcf.sroa.6.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 2
  %21 = ptrtoint ptr %tcf.sroa.6.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %21)
  %tcf.sroa.6.0.copyload = load i8, ptr %tcf.sroa.6.0.msg.sroa_idx, align 2
  %tcf.sroa.7.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 3
  %22 = ptrtoint ptr %tcf.sroa.7.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %22)
  %tcf.sroa.7.0.copyload = load i8, ptr %tcf.sroa.7.0.msg.sroa_idx, align 1
  %tcf.sroa.8.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 4
  %23 = ptrtoint ptr %tcf.sroa.8.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %23)
  %tcf.sroa.8.0.copyload = load i8, ptr %tcf.sroa.8.0.msg.sroa_idx, align 4
  %tcf.sroa.9.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 5
  %24 = ptrtoint ptr %tcf.sroa.9.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %24)
  %tcf.sroa.9.0.copyload = load i8, ptr %tcf.sroa.9.0.msg.sroa_idx, align 1
  %tcf.sroa.10.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 6
  %25 = ptrtoint ptr %tcf.sroa.10.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %25)
  %tcf.sroa.10.0.copyload = load i8, ptr %tcf.sroa.10.0.msg.sroa_idx, align 2
  %tcf.sroa.11.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 7
  %26 = ptrtoint ptr %tcf.sroa.11.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %26)
  %tcf.sroa.11.0.copyload = load i8, ptr %tcf.sroa.11.0.msg.sroa_idx, align 1
  %tcf.sroa.12.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 8
  %27 = ptrtoint ptr %tcf.sroa.12.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %27)
  %tcf.sroa.12.0.copyload = load i8, ptr %tcf.sroa.12.0.msg.sroa_idx, align 4
  %tcf.sroa.13.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 9
  %28 = ptrtoint ptr %tcf.sroa.13.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %28)
  %tcf.sroa.13.0.copyload = load i8, ptr %tcf.sroa.13.0.msg.sroa_idx, align 1
  %tcf.sroa.14.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 10
  %29 = ptrtoint ptr %tcf.sroa.14.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %29)
  %tcf.sroa.14.0.copyload = load i8, ptr %tcf.sroa.14.0.msg.sroa_idx, align 2
  %tcf.sroa.15.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 11
  %30 = ptrtoint ptr %tcf.sroa.15.0.msg.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %30)
  %tcf.sroa.15.0.copyload = load i8, ptr %tcf.sroa.15.0.msg.sroa_idx, align 1
  %tcf.sroa.16.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 12
  %31 = ptrtoint ptr %tcf.sroa.16.0.msg.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %31)
  %tcf.sroa.16.0.copyload = load i16, ptr %tcf.sroa.16.0.msg.sroa_idx, align 4
  %tcf.sroa.17296.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 16
  %32 = ptrtoint ptr %tcf.sroa.17296.0.msg.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %32)
  %tcf.sroa.17296.0.copyload = load i32, ptr %tcf.sroa.17296.0.msg.sroa_idx, align 4
  %tcf.sroa.19.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 20
  %33 = ptrtoint ptr %tcf.sroa.19.0.msg.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %tcf.sroa.19.0.msg.sroa_idx, align 4
  %35 = ptrtoint ptr %tcf.sroa.19 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %tcf.sroa.19, align 8
  %tcf.sroa.19297.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 28
  %36 = ptrtoint ptr %tcf.sroa.19297.0.msg.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %36)
  %tcf.sroa.19297.0.copyload = load i32, ptr %tcf.sroa.19297.0.msg.sroa_idx, align 4
  %tcf.sroa.20.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 32
  %37 = ptrtoint ptr %tcf.sroa.20.0.msg.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %37)
  %tcf.sroa.20.0.copyload = load i32, ptr %tcf.sroa.20.0.msg.sroa_idx, align 4
  %tcf.sroa.22.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 36
  %38 = ptrtoint ptr %tcf.sroa.22.0.msg.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %39 = load i64, ptr %tcf.sroa.22.0.msg.sroa_idx, align 4
  %40 = ptrtoint ptr %tcf.sroa.22 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %39, ptr %tcf.sroa.22, align 8
  %tcf.sroa.22298.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 44
  %41 = ptrtoint ptr %tcf.sroa.22298.0.msg.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %41)
  %tcf.sroa.22298.0.copyload = load i32, ptr %tcf.sroa.22298.0.msg.sroa_idx, align 4
  %tcf.sroa.23.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 48
  %42 = ptrtoint ptr %tcf.sroa.23.0.msg.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %42)
  %tcf.sroa.23.0.copyload = load i16, ptr %tcf.sroa.23.0.msg.sroa_idx, align 4
  %tcf.sroa.24.0.msg.sroa_idx = getelementptr inbounds i8, ptr %msg, i32 50
  %43 = ptrtoint ptr %tcf.sroa.24.0.msg.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %43)
  %tcf.sroa.24.0.copyload = load i16, ptr %tcf.sroa.24.0.msg.sroa_idx, align 2
  call void @llvm.lifetime.start.p0(i64 76, ptr nonnull %cfilter) #9
  %44 = call ptr @memset(ptr %cfilter, i32 255, i32 76)
  %45 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %vf, align 8
  %vf_states.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %entry
  %i.012.i = phi i32 [ 0, %entry ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %47 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %vf_states.i, align 4
  %49 = and i32 %48, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.not.i = icmp eq i32 %49, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %for.body.i
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #9
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %i40e_sync_vf_state.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_sync_vf_state.exit:                          ; preds = %if.end.i
  %50 = ptrtoint ptr %vf_states.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %vf_states.i, align 4
  %52 = and i32 %51, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool3.i.not = icmp eq i32 %52, 0
  br i1 %tobool3.i.not, label %i40e_sync_vf_state.exit.err_crit_edge, label %i40e_sync_vf_state.exit.if.end_crit_edge

i40e_sync_vf_state.exit.if.end_crit_edge:         ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

i40e_sync_vf_state.exit.err_crit_edge:            ; preds = %i40e_sync_vf_state.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

if.end:                                           ; preds = %i40e_sync_vf_state.exit.if.end_crit_edge, %for.body.i.if.end_crit_edge
  %adq_enabled = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %53 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool.not = icmp eq i8 %54, 0
  br i1 %tobool.not, label %do.end, label %if.end4

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %55 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %46, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %56, i32 0, i32 44
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %57 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %58 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.268, i32 noundef %conv) #12
  br label %err

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc i32 @i40e_validate_cloud_filter(ptr noundef %vf, ptr noundef %msg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end15, label %do.end10

do.end10:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #11
  %59 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %46, align 8
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %60, i32 0, i32 44
  %vf_id13 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %61 = ptrtoint ptr %vf_id13 to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %vf_id13, align 4
  %conv14 = sext i16 %62 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev12, ptr noundef nonnull @.str.271, i32 noundef %conv14) #12
  br label %err

if.end15:                                         ; preds = %if.end4
  %63 = call ptr @memset(ptr %cfilter, i32 0, i32 76)
  %and286 = and i8 %tcf.sroa.10.0.copyload, %mask.sroa.10.0.copyload
  %arrayidx23 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 2, i32 0
  %64 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %and286, ptr %arrayidx23, align 4
  %and286.1 = and i8 %tcf.sroa.11.0.copyload, %mask.sroa.12.0.copyload
  %arrayidx23.1 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 2, i32 1
  %65 = ptrtoint ptr %arrayidx23.1 to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 %and286.1, ptr %arrayidx23.1, align 1
  %and286.2 = and i8 %tcf.sroa.12.0.copyload, %mask.sroa.13.0.copyload
  %arrayidx23.2 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 2, i32 2
  %66 = ptrtoint ptr %arrayidx23.2 to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 %and286.2, ptr %arrayidx23.2, align 2
  %and286.3 = and i8 %tcf.sroa.13.0.copyload, %mask.sroa.14.0.copyload
  %arrayidx23.3 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 2, i32 3
  %67 = ptrtoint ptr %arrayidx23.3 to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 %and286.3, ptr %arrayidx23.3, align 1
  %and286.4 = and i8 %tcf.sroa.14.0.copyload, %mask.sroa.15.0.copyload
  %arrayidx23.4 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 2, i32 4
  %68 = ptrtoint ptr %arrayidx23.4 to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 %and286.4, ptr %arrayidx23.4, align 4
  %and286.5 = and i8 %tcf.sroa.15.0.copyload, %mask.sroa.16.0.copyload
  %arrayidx23.5 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 2, i32 5
  %69 = ptrtoint ptr %arrayidx23.5 to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 %and286.5, ptr %arrayidx23.5, align 1
  %and33285 = and i8 %tcf.sroa.0.0.copyload, %mask.sroa.0.0.copyload
  %arrayidx36 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 3, i32 0
  %70 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %and33285, ptr %arrayidx36, align 2
  %and33285.1 = and i8 %tcf.sroa.5.0.copyload, %mask.sroa.5.0.copyload
  %arrayidx36.1 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 3, i32 1
  %71 = ptrtoint ptr %arrayidx36.1 to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %and33285.1, ptr %arrayidx36.1, align 1
  %and33285.2 = and i8 %tcf.sroa.6.0.copyload, %mask.sroa.6.0.copyload
  %arrayidx36.2 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 3, i32 2
  %72 = ptrtoint ptr %arrayidx36.2 to i32
  call void @__asan_store1_noabort(i32 %72)
  store i8 %and33285.2, ptr %arrayidx36.2, align 4
  %and33285.3 = and i8 %tcf.sroa.7.0.copyload, %mask.sroa.7.0.copyload
  %arrayidx36.3 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 3, i32 3
  %73 = ptrtoint ptr %arrayidx36.3 to i32
  call void @__asan_store1_noabort(i32 %73)
  store i8 %and33285.3, ptr %arrayidx36.3, align 1
  %and33285.4 = and i8 %tcf.sroa.8.0.copyload, %mask.sroa.8.0.copyload
  %arrayidx36.4 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 3, i32 4
  %74 = ptrtoint ptr %arrayidx36.4 to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 %and33285.4, ptr %arrayidx36.4, align 2
  %and33285.5 = and i8 %tcf.sroa.9.0.copyload, %mask.sroa.9.0.copyload
  %arrayidx36.5 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 3, i32 5
  %75 = ptrtoint ptr %arrayidx36.5 to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 %and33285.5, ptr %arrayidx36.5, align 1
  %and43281 = and i16 %tcf.sroa.16.0.copyload, %mask.sroa.17.0.copyload
  %vlan_id45 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 4
  %76 = ptrtoint ptr %vlan_id45 to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 %and43281, ptr %vlan_id45, align 4
  %and49282 = and i16 %tcf.sroa.24.0.copyload, %mask.sroa.25.0.copyload
  %dst_port51 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 6
  %77 = ptrtoint ptr %dst_port51 to i32
  call void @__asan_store2_noabort(i32 %77)
  store i16 %and49282, ptr %dst_port51, align 4
  %and55283 = and i16 %tcf.sroa.23.0.copyload, %mask.sroa.24.0.copyload
  %src_port57 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 7
  %78 = ptrtoint ptr %src_port57 to i32
  call void @__asan_store2_noabort(i32 %78)
  store i16 %and55283, ptr %src_port57, align 2
  %flow_type = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 2
  %79 = ptrtoint ptr %flow_type to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %flow_type, align 4
  %81 = zext i32 %80 to i64
  call void @__sanitizer_cov_trace_switch(i64 %81, ptr @__sancov_gen_cov_switch_values.296)
  switch i32 %80, label %do.end104 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb78
  ]

sw.bb:                                            ; preds = %if.end15
  %n_proto = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 10
  %82 = ptrtoint ptr %n_proto to i32
  call void @__asan_store2_noabort(i32 %82)
  store i16 2048, ptr %n_proto, align 4
  %and61 = and i32 %tcf.sroa.20.0.copyload, %mask.sroa.20.0.copyload
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61)
  %tobool62.not = icmp eq i32 %and61, 0
  br i1 %tobool62.not, label %if.else, label %if.then63

if.then63:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  %ip = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9
  %83 = ptrtoint ptr %ip to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %tcf.sroa.20.0.copyload, ptr %ip, align 4
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb
  %and69 = and i32 %mask.sroa.18304.0.copyload, %tcf.sroa.20.0.copyload
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool70.not, label %if.else.sw.epilog_crit_edge, label %if.then71

if.else.sw.epilog_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

if.then71:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %src_ip73 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = ptrtoint ptr %src_ip73 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %tcf.sroa.17296.0.copyload, ptr %src_ip73, align 4
  br label %sw.epilog

sw.bb78:                                          ; preds = %if.end15
  %n_proto79 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 10
  %85 = ptrtoint ptr %n_proto79 to i32
  call void @__asan_store2_noabort(i32 %85)
  store i16 -31011, ptr %n_proto79, align 4
  %and84 = and i32 %tcf.sroa.22298.0.copyload, %mask.sroa.22307.0.copyload
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  br i1 %tobool85.not, label %sw.bb78.if.end90_crit_edge, label %if.then86

sw.bb78.if.end90_crit_edge:                       ; preds = %sw.bb78
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end90

if.then86:                                        ; preds = %sw.bb78
  call void @__sanitizer_cov_trace_pc() #11
  %ip87 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9
  %86 = ptrtoint ptr %ip87 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %tcf.sroa.20.0.copyload, ptr %ip87, align 4
  %tcf.sroa.22.32.ip87.sroa_idx = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = ptrtoint ptr %tcf.sroa.22 to i32
  call void @__asan_load8_noabort(i32 %87)
  %88 = load i64, ptr %tcf.sroa.22, align 8
  %89 = ptrtoint ptr %tcf.sroa.22.32.ip87.sroa_idx to i32
  call void @__asan_storeN_noabort(i32 %89, i32 8)
  store i64 %88, ptr %tcf.sroa.22.32.ip87.sroa_idx, align 4
  %tcf.sroa.22298.32.ip87.sroa_idx = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 3
  %90 = ptrtoint ptr %tcf.sroa.22298.32.ip87.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %tcf.sroa.22298.0.copyload, ptr %tcf.sroa.22298.32.ip87.sroa_idx, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.then86, %sw.bb78.if.end90_crit_edge
  %and95 = and i32 %tcf.sroa.19297.0.copyload, %mask.sroa.19305.0.copyload
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and95)
  %tobool96.not = icmp eq i32 %and95, 0
  br i1 %tobool96.not, label %if.end90.sw.epilog_crit_edge, label %if.then97

if.end90.sw.epilog_crit_edge:                     ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

if.then97:                                        ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #11
  %src_ip6 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9, i32 0, i32 1
  %91 = ptrtoint ptr %src_ip6 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %tcf.sroa.17296.0.copyload, ptr %src_ip6, align 4
  %tcf.sroa.19.16.src_ip6.sroa_idx = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 1
  %92 = ptrtoint ptr %tcf.sroa.19 to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %tcf.sroa.19, align 8
  %94 = ptrtoint ptr %tcf.sroa.19.16.src_ip6.sroa_idx to i32
  call void @__asan_storeN_noabort(i32 %94, i32 8)
  store i64 %93, ptr %tcf.sroa.19.16.src_ip6.sroa_idx, align 4
  %tcf.sroa.19297.16.src_ip6.sroa_idx = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 3
  %95 = ptrtoint ptr %tcf.sroa.19297.16.src_ip6.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %tcf.sroa.19297.0.copyload, ptr %tcf.sroa.19297.16.src_ip6.sroa_idx, align 4
  br label %sw.epilog

do.end104:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %96 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %46, align 8
  %dev106 = getelementptr inbounds %struct.pci_dev, ptr %97, i32 0, i32 44
  %vf_id107 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %98 = ptrtoint ptr %vf_id107 to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %vf_id107, align 4
  %conv108 = sext i16 %99 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev106, ptr noundef nonnull @.str.231, i32 noundef %conv108) #12
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end104, %if.then97, %if.end90.sw.epilog_crit_edge, %if.then71, %if.else.sw.epilog_crit_edge, %if.then63
  %vsi109 = getelementptr inbounds %struct.i40e_pf, ptr %46, i32 0, i32 74
  %100 = ptrtoint ptr %vsi109 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %vsi109, align 8
  %action_meta = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 4
  %102 = ptrtoint ptr %action_meta to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %action_meta, align 4
  %arrayidx110 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %103
  %104 = ptrtoint ptr %arrayidx110 to i32
  call void @__asan_load2_noabort(i32 %104)
  %105 = load i16, ptr %arrayidx110, align 8
  %idxprom = zext i16 %105 to i32
  %arrayidx111 = getelementptr ptr, ptr %101, i32 %idxprom
  %106 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %arrayidx111, align 4
  %seid = getelementptr inbounds %struct.i40e_vsi, ptr %107, i32 0, i32 38
  %108 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %108)
  %109 = load i16, ptr %seid, align 2
  %seid112 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 5
  %110 = ptrtoint ptr %seid112 to i32
  call void @__asan_store2_noabort(i32 %110)
  store i16 %109, ptr %seid112, align 2
  %field_flags = getelementptr inbounds %struct.virtchnl_filter, ptr %msg, i32 0, i32 5
  %111 = ptrtoint ptr %field_flags to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %field_flags, align 4
  %flags = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 12
  %113 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %113)
  store i8 %112, ptr %flags, align 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %tcf.sroa.24.0.copyload)
  %tobool114.not = icmp eq i16 %tcf.sroa.24.0.copyload, 0
  br i1 %tobool114.not, label %if.else117, label %if.then115

if.then115:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #11
  %call116 = call i32 @i40e_add_del_cloud_filter_big_buf(ptr noundef %107, ptr noundef nonnull %cfilter, i1 noundef zeroext false) #9
  br label %if.end119

if.else117:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #11
  %call118 = call i32 @i40e_add_del_cloud_filter(ptr noundef %107, ptr noundef nonnull %cfilter, i1 noundef zeroext false) #9
  br label %if.end119

if.end119:                                        ; preds = %if.else117, %if.then115
  %ret.0 = phi i32 [ %call116, %if.then115 ], [ %call118, %if.else117 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool120.not = icmp eq i32 %ret.0, 0
  br i1 %tobool120.not, label %if.end133, label %do.end124

do.end124:                                        ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #11
  %114 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %46, align 8
  %dev126 = getelementptr inbounds %struct.pci_dev, ptr %115, i32 0, i32 44
  %vf_id127 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %116 = ptrtoint ptr %vf_id127 to i32
  call void @__asan_load2_noabort(i32 %116)
  %117 = load i16, ptr %vf_id127, align 4
  %conv128 = sext i16 %117 to i32
  %hw = getelementptr inbounds %struct.i40e_pf, ptr %46, i32 0, i32 1
  %call129 = call ptr @i40e_stat_str(ptr noundef %hw, i32 noundef %ret.0) #9
  %asq_last_status = getelementptr inbounds %struct.i40e_pf, ptr %46, i32 0, i32 1, i32 23, i32 14
  %118 = ptrtoint ptr %asq_last_status to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %asq_last_status, align 8
  %call132 = call ptr @i40e_aq_str(ptr noundef %hw, i32 noundef %119) #9
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev126, ptr noundef nonnull @.str.276, i32 noundef %conv128, ptr noundef %call129, ptr noundef %call132) #12
  br label %err

if.end133:                                        ; preds = %if.end119
  %cloud_filter_list = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 25
  %120 = ptrtoint ptr %cloud_filter_list to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %cloud_filter_list, align 8
  %tobool137.not293 = icmp eq ptr %121, null
  br i1 %tobool137.not293, label %if.end133.err_crit_edge, label %land.rhs.lr.ph

if.end133.err_crit_edge:                          ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

land.rhs.lr.ph:                                   ; preds = %if.end133
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %mask.sroa.25.0.copyload)
  %tobool150.not = icmp eq i16 %mask.sroa.25.0.copyload, 0
  %n_proto173 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 10
  %ip199 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter, i32 0, i32 9
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %mask.sroa.17.0.copyload)
  %tobool209.not = icmp eq i16 %mask.sroa.17.0.copyload, 0
  %num_cloud_filters = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 26
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %mask.sroa.10.0.copyload)
  %tobool163.not = icmp eq i8 %mask.sroa.10.0.copyload, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mask.sroa.22307.0.copyload)
  %tobool197.not = icmp eq i32 %mask.sroa.22307.0.copyload, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mask.sroa.20.0.copyload)
  %tobool179.not = icmp eq i32 %mask.sroa.20.0.copyload, 0
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc221.land.rhs_crit_edge, %land.rhs.lr.ph
  %cf.0294 = phi ptr [ %121, %land.rhs.lr.ph ], [ %123, %for.inc221.land.rhs_crit_edge ]
  %122 = ptrtoint ptr %cf.0294 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %cf.0294, align 4
  %seid141 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cf.0294, i32 0, i32 5
  %124 = ptrtoint ptr %seid141 to i32
  call void @__asan_load2_noabort(i32 %124)
  %125 = load i16, ptr %seid141, align 2
  %126 = ptrtoint ptr %seid112 to i32
  call void @__asan_load2_noabort(i32 %126)
  %127 = load i16, ptr %seid112, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %125, i16 %127)
  %cmp145.not = icmp eq i16 %125, %127
  br i1 %cmp145.not, label %if.end148, label %land.rhs.for.inc221_crit_edge

land.rhs.for.inc221_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc221

if.end148:                                        ; preds = %land.rhs
  br i1 %tobool150.not, label %if.end148.if.end160_crit_edge, label %if.then151

if.end148.if.end160_crit_edge:                    ; preds = %if.end148
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end160

if.then151:                                       ; preds = %if.end148
  %128 = ptrtoint ptr %dst_port51 to i32
  call void @__asan_load2_noabort(i32 %128)
  %129 = load i16, ptr %dst_port51, align 4
  %dst_port154 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cf.0294, i32 0, i32 6
  %130 = ptrtoint ptr %dst_port154 to i32
  call void @__asan_load2_noabort(i32 %130)
  %131 = load i16, ptr %dst_port154, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %129, i16 %131)
  %cmp156.not = icmp eq i16 %129, %131
  br i1 %cmp156.not, label %if.then151.if.end160_crit_edge, label %if.then151.for.inc221_crit_edge

if.then151.for.inc221_crit_edge:                  ; preds = %if.then151
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc221

if.then151.if.end160_crit_edge:                   ; preds = %if.then151
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end160

if.end160:                                        ; preds = %if.then151.if.end160_crit_edge, %if.end148.if.end160_crit_edge
  br i1 %tobool163.not, label %if.end160.if.end172_crit_edge, label %if.then164

if.end160.if.end172_crit_edge:                    ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end172

if.then164:                                       ; preds = %if.end160
  %src_mac165 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cf.0294, i32 0, i32 3
  %132 = ptrtoint ptr %src_mac165 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %src_mac165, align 4
  %134 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %arrayidx36, align 4
  %xor.i = xor i32 %135, %133
  %add.ptr.i = getelementptr %struct.i40e_cloud_filter, ptr %cf.0294, i32 0, i32 3, i32 4
  %136 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %136)
  %137 = load i16, ptr %add.ptr.i, align 2
  %138 = ptrtoint ptr %arrayidx36.4 to i32
  call void @__asan_load2_noabort(i32 %138)
  %139 = load i16, ptr %arrayidx36.4, align 2
  %xor37.i = xor i16 %139, %137
  %xor3.i = zext i16 %xor37.i to i32
  %or.i = or i32 %xor.i, %xor3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i = icmp eq i32 %or.i, 0
  br i1 %cmp.i, label %if.then164.if.end172_crit_edge, label %if.then164.for.inc221_crit_edge

if.then164.for.inc221_crit_edge:                  ; preds = %if.then164
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc221

if.then164.if.end172_crit_edge:                   ; preds = %if.then164
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end172

if.end172:                                        ; preds = %if.then164.if.end172_crit_edge, %if.end160.if.end172_crit_edge
  %140 = ptrtoint ptr %n_proto173 to i32
  call void @__asan_load2_noabort(i32 %140)
  %141 = load i16, ptr %n_proto173, align 4
  %142 = zext i16 %141 to i64
  call void @__sanitizer_cov_trace_switch(i64 %142, ptr @__sancov_gen_cov_switch_values.297)
  switch i16 %141, label %if.end172.if.end207_crit_edge [
    i16 2048, label %land.lhs.true
    i16 -31011, label %land.lhs.true194
  ]

if.end172.if.end207_crit_edge:                    ; preds = %if.end172
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end207

land.lhs.true:                                    ; preds = %if.end172
  br i1 %tobool179.not, label %land.lhs.true.if.end207_crit_edge, label %if.then180

land.lhs.true.if.end207_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end207

if.then180:                                       ; preds = %land.lhs.true
  %ip183 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cf.0294, i32 0, i32 9
  %bcmp284 = call i32 @bcmp(ptr noundef dereferenceable(4) %ip199, ptr noundef dereferenceable(4) %ip183, i32 4) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp284)
  %tobool186.not = icmp eq i32 %bcmp284, 0
  br i1 %tobool186.not, label %if.then180.if.end207_crit_edge, label %if.then180.for.inc221_crit_edge

if.then180.for.inc221_crit_edge:                  ; preds = %if.then180
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc221

if.then180.if.end207_crit_edge:                   ; preds = %if.then180
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end207

land.lhs.true194:                                 ; preds = %if.end172
  br i1 %tobool197.not, label %land.lhs.true194.if.end207_crit_edge, label %if.then198

land.lhs.true194.if.end207_crit_edge:             ; preds = %land.lhs.true194
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end207

if.then198:                                       ; preds = %land.lhs.true194
  %ip201 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cf.0294, i32 0, i32 9
  %bcmp = call i32 @bcmp(ptr noundef dereferenceable(16) %ip199, ptr noundef dereferenceable(16) %ip201, i32 16) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool204.not = icmp eq i32 %bcmp, 0
  br i1 %tobool204.not, label %if.then198.if.end207_crit_edge, label %if.then198.for.inc221_crit_edge

if.then198.for.inc221_crit_edge:                  ; preds = %if.then198
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc221

if.then198.if.end207_crit_edge:                   ; preds = %if.then198
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end207

if.end207:                                        ; preds = %if.then198.if.end207_crit_edge, %land.lhs.true194.if.end207_crit_edge, %if.then180.if.end207_crit_edge, %land.lhs.true.if.end207_crit_edge, %if.end172.if.end207_crit_edge
  br i1 %tobool209.not, label %if.end207.if.end219_crit_edge, label %if.then210

if.end207.if.end219_crit_edge:                    ; preds = %if.end207
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end219

if.then210:                                       ; preds = %if.end207
  %143 = ptrtoint ptr %vlan_id45 to i32
  call void @__asan_load2_noabort(i32 %143)
  %144 = load i16, ptr %vlan_id45, align 4
  %vlan_id213 = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cf.0294, i32 0, i32 4
  %145 = ptrtoint ptr %vlan_id213 to i32
  call void @__asan_load2_noabort(i32 %145)
  %146 = load i16, ptr %vlan_id213, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %144, i16 %146)
  %cmp215.not = icmp eq i16 %144, %146
  br i1 %cmp215.not, label %if.then210.if.end219_crit_edge, label %if.then210.for.inc221_crit_edge

if.then210.for.inc221_crit_edge:                  ; preds = %if.then210
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc221

if.then210.if.end219_crit_edge:                   ; preds = %if.then210
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end219

if.end219:                                        ; preds = %if.then210.if.end219_crit_edge, %if.end207.if.end219_crit_edge
  %pprev2.i.i = getelementptr inbounds %struct.hlist_node, ptr %cf.0294, i32 0, i32 1
  %147 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %pprev2.i.i, align 4
  %149 = ptrtoint ptr %148 to i32
  call void @__asan_store4_noabort(i32 %149)
  store volatile ptr %123, ptr %148, align 4
  %tobool.not.i.i = icmp eq ptr %123, null
  br i1 %tobool.not.i.i, label %if.end219.hlist_del.exit_crit_edge, label %do.body13.i.i

if.end219.hlist_del.exit_crit_edge:               ; preds = %if.end219
  call void @__sanitizer_cov_trace_pc() #11
  br label %hlist_del.exit

do.body13.i.i:                                    ; preds = %if.end219
  call void @__sanitizer_cov_trace_pc() #11
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %123, i32 0, i32 1
  %150 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store volatile ptr %148, ptr %pprev14.i.i, align 4
  br label %hlist_del.exit

hlist_del.exit:                                   ; preds = %do.body13.i.i, %if.end219.hlist_del.exit_crit_edge
  %151 = ptrtoint ptr %cf.0294 to i32
  call void @__asan_store4_noabort(i32 %151)
  store ptr inttoptr (i32 256 to ptr), ptr %cf.0294, align 4
  %152 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %152)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  call void @kfree(ptr noundef nonnull %cf.0294) #9
  %153 = ptrtoint ptr %num_cloud_filters to i32
  call void @__asan_load2_noabort(i32 %153)
  %154 = load i16, ptr %num_cloud_filters, align 4
  %dec = add i16 %154, -1
  store i16 %dec, ptr %num_cloud_filters, align 4
  br label %for.inc221

for.inc221:                                       ; preds = %hlist_del.exit, %if.then210.for.inc221_crit_edge, %if.then198.for.inc221_crit_edge, %if.then180.for.inc221_crit_edge, %if.then164.for.inc221_crit_edge, %if.then151.for.inc221_crit_edge, %land.rhs.for.inc221_crit_edge
  %tobool137.not = icmp eq ptr %123, null
  br i1 %tobool137.not, label %for.inc221.err_crit_edge, label %for.inc221.land.rhs_crit_edge

for.inc221.land.rhs_crit_edge:                    ; preds = %for.inc221
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.rhs

for.inc221.err_crit_edge:                         ; preds = %for.inc221
  call void @__sanitizer_cov_trace_pc() #11
  br label %err

err:                                              ; preds = %for.inc221.err_crit_edge, %if.end133.err_crit_edge, %do.end124, %do.end10, %do.end, %i40e_sync_vf_state.exit.err_crit_edge
  %aq_ret.0 = phi i32 [ -5, %do.end10 ], [ 0, %do.end124 ], [ -5, %do.end ], [ -5, %i40e_sync_vf_state.exit.err_crit_edge ], [ 0, %if.end133.err_crit_edge ], [ 0, %for.inc221.err_crit_edge ]
  %tobool.not.i.i288 = icmp eq ptr %vf, null
  br i1 %tobool.not.i.i288, label %err.i40e_vc_send_resp_to_vf.exit_crit_edge, label %lor.lhs.false.i.i

err.i40e_vc_send_resp_to_vf.exit_crit_edge:       ; preds = %err
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

lor.lhs.false.i.i:                                ; preds = %err
  %vf_id.i.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %155 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %155)
  %156 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %156 to i32
  %157 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %vf, align 8
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %158, i32 0, i32 86
  %159 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %160, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %160, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge

lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %hw4.i.i = getelementptr inbounds %struct.i40e_pf, ptr %158, i32 0, i32 1
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %158, i32 0, i32 1, i32 15, i32 33
  %161 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %vf_base_id.i.i, align 8
  %163 = trunc i32 %162 to i16
  %conv7.i.i = add i16 %156, %163
  %call.i.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw4.i.i, i16 noundef zeroext %conv7.i.i, i32 noundef 33, i32 noundef %aq_ret.0, ptr noundef null, i16 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool8.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, label %do.end.i.i

if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_send_resp_to_vf.exit

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  %164 = ptrtoint ptr %158 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %158, align 8
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %165, i32 0, i32 44
  %166 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %166)
  %167 = load i16, ptr %vf_id.i.i, align 4
  %conv11.i.i = sext i16 %167 to i32
  %asq_last_status.i.i = getelementptr inbounds %struct.i40e_pf, ptr %158, i32 0, i32 1, i32 23, i32 14
  %168 = ptrtoint ptr %asq_last_status.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %asq_last_status.i.i, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.131, i32 noundef %conv11.i.i, i32 noundef %169) #12
  br label %i40e_vc_send_resp_to_vf.exit

i40e_vc_send_resp_to_vf.exit:                     ; preds = %do.end.i.i, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge, %err.i40e_vc_send_resp_to_vf.exit_crit_edge
  %retval.0.i.i = phi i32 [ -5, %do.end.i.i ], [ -22, %lor.lhs.false.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ -22, %err.i40e_vc_send_resp_to_vf.exit_crit_edge ], [ 0, %if.end.i.i.i40e_vc_send_resp_to_vf.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 76, ptr nonnull %cfilter) #9
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tcf.sroa.19)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tcf.sroa.22)
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_vc_process_vflr_event(ptr noundef %pf) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 1
  %state = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 2
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 4
  %2 = and i32 %1, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hw1, align 8
  %add.ptr = getelementptr i8, ptr %4, i32 231424
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !541
  %6 = or i32 %5, 32
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !542
  tail call void @arm_heavy_mb() #9
  %7 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw1, align 8
  %add.ptr5 = getelementptr i8, ptr %8, i32 231424
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr5, i32 %6) #9, !srcloc !498
  %9 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hw1, align 8
  %add.ptr9 = getelementptr i8, ptr %10, i32 745772
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr9) #9, !srcloc !491
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !543
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %state) #9
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 86
  %12 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp52 = icmp sgt i32 %13, 0
  br i1 %cmp52, label %for.body.lr.ph, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 1, i32 15, i32 33
  %vf18 = getelementptr inbounds %struct.i40e_pf, ptr %pf, i32 0, i32 85
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %vf_id.053 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %14 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vf_base_id, align 8
  %add = add i32 %15, %vf_id.053
  %rem = and i32 %add, 31
  %16 = ptrtoint ptr %vf18 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vf18, align 8
  %18 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hw1, align 8
  %20 = lshr i32 %add, 3
  %mul = and i32 %20, 536870908
  %add22 = add nuw nsw i32 %mul, 599552
  %add.ptr23 = getelementptr i8, ptr %19, i32 %add22
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr23) #9, !srcloc !491
  %22 = tail call i32 @llvm.bswap.i32(i32 %21)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !544
  %shl = shl nuw i32 1, %rem
  %and = and i32 %22, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool27.not = icmp eq i32 %and, 0
  br i1 %tobool27.not, label %for.body.for.inc_crit_edge, label %if.then28

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

if.then28:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %arrayidx = getelementptr %struct.i40e_vf, ptr %17, i32 %vf_id.053
  %call29 = tail call zeroext i1 @i40e_reset_vf(ptr noundef %arrayidx, i1 noundef zeroext true)
  br label %for.inc

for.inc:                                          ; preds = %if.then28, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %vf_id.053, 1
  %23 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %num_alloc_vfs, align 4
  %cmp = icmp slt i32 %inc, %24
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_ndo_set_vf_mac(ptr nocapture noundef readonly %netdev, i32 noundef %vf_id, ptr noundef %mac) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 4
  %back = getelementptr inbounds %struct.i40e_vsi, ptr %1, i32 0, i32 57
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 8
  %state = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 2
  %call2 = tail call i32 @_test_and_set_bit(i32 noundef 33, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.9) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 86
  %6 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %vf_id)
  %cmp.not.i = icmp sgt i32 %7, %vf_id
  br i1 %cmp.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.74, i32 noundef %vf_id) #12
  br label %error_param

if.end.i:                                         ; preds = %if.end
  %vf1.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 85
  %10 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf1.i, align 8
  %lan_vsi_id.i = getelementptr %struct.i40e_vf, ptr %11, i32 %vf_id, i32 11
  %12 = ptrtoint ptr %lan_vsi_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %lan_vsi_id.i, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %3, i16 noundef zeroext %13) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i.error_param_crit_edge, label %if.end6

if.end.i.error_param_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end6:                                          ; preds = %if.end.i
  %14 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vf1.i, align 8
  %arrayidx = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id
  %vf_states = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 16
  %16 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %vf_states, align 4
  %and1.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool10.not = icmp eq i32 %and1.i, 0
  br i1 %tobool10.not, label %if.end12, label %if.end6.for.end_crit_edge

if.end6.for.end_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12:                                         ; preds = %if.end6
  tail call void @msleep(i32 noundef 20) #9
  %18 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %vf_states, align 4
  %and1.i.1 = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.1)
  %tobool10.not.1 = icmp eq i32 %and1.i.1, 0
  br i1 %tobool10.not.1, label %if.end12.1, label %if.end12.for.end_crit_edge

if.end12.for.end_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.1:                                       ; preds = %if.end12
  tail call void @msleep(i32 noundef 20) #9
  %20 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %vf_states, align 4
  %and1.i.2 = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.2)
  %tobool10.not.2 = icmp eq i32 %and1.i.2, 0
  br i1 %tobool10.not.2, label %if.end12.2, label %if.end12.1.for.end_crit_edge

if.end12.1.for.end_crit_edge:                     ; preds = %if.end12.1
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.2:                                       ; preds = %if.end12.1
  tail call void @msleep(i32 noundef 20) #9
  %22 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %vf_states, align 4
  %and1.i.3 = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.3)
  %tobool10.not.3 = icmp eq i32 %and1.i.3, 0
  br i1 %tobool10.not.3, label %if.end12.3, label %if.end12.2.for.end_crit_edge

if.end12.2.for.end_crit_edge:                     ; preds = %if.end12.2
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.3:                                       ; preds = %if.end12.2
  tail call void @msleep(i32 noundef 20) #9
  %24 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %vf_states, align 4
  %and1.i.4 = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.4)
  %tobool10.not.4 = icmp eq i32 %and1.i.4, 0
  br i1 %tobool10.not.4, label %if.end12.4, label %if.end12.3.for.end_crit_edge

if.end12.3.for.end_crit_edge:                     ; preds = %if.end12.3
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.4:                                       ; preds = %if.end12.3
  tail call void @msleep(i32 noundef 20) #9
  %26 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %vf_states, align 4
  %and1.i.5 = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.5)
  %tobool10.not.5 = icmp eq i32 %and1.i.5, 0
  br i1 %tobool10.not.5, label %if.end12.5, label %if.end12.4.for.end_crit_edge

if.end12.4.for.end_crit_edge:                     ; preds = %if.end12.4
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.5:                                       ; preds = %if.end12.4
  tail call void @msleep(i32 noundef 20) #9
  %28 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %vf_states, align 4
  %and1.i.6 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.6)
  %tobool10.not.6 = icmp eq i32 %and1.i.6, 0
  br i1 %tobool10.not.6, label %if.end12.6, label %if.end12.5.for.end_crit_edge

if.end12.5.for.end_crit_edge:                     ; preds = %if.end12.5
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.6:                                       ; preds = %if.end12.5
  tail call void @msleep(i32 noundef 20) #9
  %30 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %vf_states, align 4
  %and1.i.7 = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.7)
  %tobool10.not.7 = icmp eq i32 %and1.i.7, 0
  br i1 %tobool10.not.7, label %if.end12.7, label %if.end12.6.for.end_crit_edge

if.end12.6.for.end_crit_edge:                     ; preds = %if.end12.6
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.7:                                       ; preds = %if.end12.6
  tail call void @msleep(i32 noundef 20) #9
  %32 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %vf_states, align 4
  %and1.i.8 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.8)
  %tobool10.not.8 = icmp eq i32 %and1.i.8, 0
  br i1 %tobool10.not.8, label %if.end12.8, label %if.end12.7.for.end_crit_edge

if.end12.7.for.end_crit_edge:                     ; preds = %if.end12.7
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.8:                                       ; preds = %if.end12.7
  tail call void @msleep(i32 noundef 20) #9
  %34 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %vf_states, align 4
  %and1.i.9 = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.9)
  %tobool10.not.9 = icmp eq i32 %and1.i.9, 0
  br i1 %tobool10.not.9, label %if.end12.9, label %if.end12.8.for.end_crit_edge

if.end12.8.for.end_crit_edge:                     ; preds = %if.end12.8
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.9:                                       ; preds = %if.end12.8
  tail call void @msleep(i32 noundef 20) #9
  %36 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %vf_states, align 4
  %and1.i.10 = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.10)
  %tobool10.not.10 = icmp eq i32 %and1.i.10, 0
  br i1 %tobool10.not.10, label %if.end12.10, label %if.end12.9.for.end_crit_edge

if.end12.9.for.end_crit_edge:                     ; preds = %if.end12.9
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.10:                                      ; preds = %if.end12.9
  tail call void @msleep(i32 noundef 20) #9
  %38 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %vf_states, align 4
  %and1.i.11 = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.11)
  %tobool10.not.11 = icmp eq i32 %and1.i.11, 0
  br i1 %tobool10.not.11, label %if.end12.11, label %if.end12.10.for.end_crit_edge

if.end12.10.for.end_crit_edge:                    ; preds = %if.end12.10
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.11:                                      ; preds = %if.end12.10
  tail call void @msleep(i32 noundef 20) #9
  %40 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %vf_states, align 4
  %and1.i.12 = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.12)
  %tobool10.not.12 = icmp eq i32 %and1.i.12, 0
  br i1 %tobool10.not.12, label %if.end12.12, label %if.end12.11.for.end_crit_edge

if.end12.11.for.end_crit_edge:                    ; preds = %if.end12.11
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.12:                                      ; preds = %if.end12.11
  tail call void @msleep(i32 noundef 20) #9
  %42 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %vf_states, align 4
  %and1.i.13 = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.13)
  %tobool10.not.13 = icmp eq i32 %and1.i.13, 0
  br i1 %tobool10.not.13, label %if.end12.13, label %if.end12.12.for.end_crit_edge

if.end12.12.for.end_crit_edge:                    ; preds = %if.end12.12
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.13:                                      ; preds = %if.end12.12
  tail call void @msleep(i32 noundef 20) #9
  %44 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %vf_states, align 4
  %and1.i.14 = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.14)
  %tobool10.not.14 = icmp eq i32 %and1.i.14, 0
  br i1 %tobool10.not.14, label %if.end12.14, label %if.end12.13.for.end_crit_edge

if.end12.13.for.end_crit_edge:                    ; preds = %if.end12.13
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.end12.14:                                      ; preds = %if.end12.13
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @msleep(i32 noundef 20) #9
  br label %for.end

for.end:                                          ; preds = %if.end12.14, %if.end12.13.for.end_crit_edge, %if.end12.12.for.end_crit_edge, %if.end12.11.for.end_crit_edge, %if.end12.10.for.end_crit_edge, %if.end12.9.for.end_crit_edge, %if.end12.8.for.end_crit_edge, %if.end12.7.for.end_crit_edge, %if.end12.6.for.end_crit_edge, %if.end12.5.for.end_crit_edge, %if.end12.4.for.end_crit_edge, %if.end12.3.for.end_crit_edge, %if.end12.2.for.end_crit_edge, %if.end12.1.for.end_crit_edge, %if.end12.for.end_crit_edge, %if.end6.for.end_crit_edge
  %46 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %vf_states, align 4
  %and1.i158 = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i158)
  %tobool15.not = icmp eq i32 %and1.i158, 0
  br i1 %tobool15.not, label %do.end19, label %if.end22

do.end19:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  %48 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %3, align 8
  %dev21 = getelementptr inbounds %struct.pci_dev, ptr %49, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev21, ptr noundef nonnull @.str.21, i32 noundef %vf_id) #12
  br label %error_param

if.end22:                                         ; preds = %for.end
  %vsi23 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 74
  %50 = ptrtoint ptr %vsi23 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %vsi23, align 8
  %lan_vsi_idx = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 10
  %52 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %53 to i32
  %arrayidx24 = getelementptr ptr, ptr %51, i32 %idxprom
  %54 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx24, align 4
  %56 = ptrtoint ptr %mac to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %mac, align 4
  %58 = and i32 %57, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.i.not = icmp eq i32 %58, 0
  br i1 %tobool.i.not, label %if.end32, label %do.end29

do.end29:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #11
  %59 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %3, align 8
  %dev31 = getelementptr inbounds %struct.pci_dev, ptr %60, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev31, ptr noundef nonnull @.str.24, ptr noundef %mac, i32 noundef %vf_id) #12
  br label %error_param

if.end32:                                         ; preds = %if.end22
  %mac_filter_hash_lock = getelementptr inbounds %struct.i40e_vsi, ptr %55, i32 0, i32 7
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock) #9
  %default_lan_addr = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 6
  %61 = ptrtoint ptr %default_lan_addr to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %default_lan_addr, align 4
  %add.ptr.i159 = getelementptr i8, ptr %default_lan_addr, i32 4
  %63 = ptrtoint ptr %add.ptr.i159 to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %add.ptr.i159, align 2
  %conv.i = zext i16 %64 to i32
  %or.i = or i32 %62, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i = icmp eq i32 %or.i, 0
  br i1 %cmp.i, label %if.end32.for.body46.preheader_crit_edge, label %if.then35

if.end32.for.body46.preheader_crit_edge:          ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body46.preheader

if.then35:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #11
  %call39 = tail call i32 @i40e_del_mac_filter(ptr noundef %55, ptr noundef %default_lan_addr) #9
  br label %for.body46.preheader

for.body46.preheader:                             ; preds = %if.then35, %if.end32.for.body46.preheader_crit_edge
  br label %for.body46

for.body46:                                       ; preds = %for.inc69.for.body46_crit_edge, %for.body46.preheader
  %bkt.0170 = phi i32 [ %inc70, %for.inc69.for.body46_crit_edge ], [ 0, %for.body46.preheader ]
  %arrayidx47 = getelementptr %struct.i40e_vsi, ptr %55, i32 0, i32 8, i32 %bkt.0170
  %65 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %arrayidx47, align 4
  %tobool51.not168 = icmp eq ptr %66, null
  br i1 %tobool51.not168, label %for.body46.for.inc69_crit_edge, label %for.body46.land.rhs52_crit_edge

for.body46.land.rhs52_crit_edge:                  ; preds = %for.body46
  br label %land.rhs52

for.body46.for.inc69_crit_edge:                   ; preds = %for.body46
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc69

land.rhs52:                                       ; preds = %land.rhs52.land.rhs52_crit_edge, %for.body46.land.rhs52_crit_edge
  %f.1169 = phi ptr [ %68, %land.rhs52.land.rhs52_crit_edge ], [ %66, %for.body46.land.rhs52_crit_edge ]
  %67 = ptrtoint ptr %f.1169 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %f.1169, align 4
  tail call void @__i40e_del_filter(ptr noundef %55, ptr noundef nonnull %f.1169) #9
  %tobool51.not = icmp eq ptr %68, null
  br i1 %tobool51.not, label %land.rhs52.for.inc69_crit_edge, label %land.rhs52.land.rhs52_crit_edge

land.rhs52.land.rhs52_crit_edge:                  ; preds = %land.rhs52
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.rhs52

land.rhs52.for.inc69_crit_edge:                   ; preds = %land.rhs52
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc69

for.inc69:                                        ; preds = %land.rhs52.for.inc69_crit_edge, %for.body46.for.inc69_crit_edge
  %inc70 = add nuw nsw i32 %bkt.0170, 1
  %exitcond.not = icmp eq i32 %inc70, 256
  br i1 %exitcond.not, label %for.end71, label %for.inc69.for.body46_crit_edge

for.inc69.for.body46_crit_edge:                   ; preds = %for.inc69
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body46

for.end71:                                        ; preds = %for.inc69
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  %call73 = tail call i32 @i40e_sync_vsi_filters(ptr noundef %55) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73)
  %tobool74.not = icmp eq i32 %call73, 0
  br i1 %tobool74.not, label %if.end81, label %do.end78

do.end78:                                         ; preds = %for.end71
  call void @__sanitizer_cov_trace_pc() #11
  %69 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %3, align 8
  %dev80 = getelementptr inbounds %struct.pci_dev, ptr %70, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev80, ptr noundef nonnull @.str.27) #12
  br label %error_param

if.end81:                                         ; preds = %for.end71
  %71 = ptrtoint ptr %mac to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %mac, align 4
  %73 = ptrtoint ptr %default_lan_addr to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %72, ptr %default_lan_addr, align 4
  %add.ptr.i160 = getelementptr i8, ptr %mac, i32 4
  %74 = ptrtoint ptr %add.ptr.i160 to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %add.ptr.i160, align 2
  %76 = ptrtoint ptr %add.ptr.i159 to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 %75, ptr %add.ptr.i159, align 2
  %77 = load i32, ptr %mac, align 4
  %78 = load i16, ptr %add.ptr.i160, align 2
  %conv.i162 = zext i16 %78 to i32
  %or.i163 = or i32 %77, %conv.i162
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i163)
  %cmp.i164 = icmp eq i32 %or.i163, 0
  %pf_set_mac = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 8
  br i1 %cmp.i164, label %if.then86, label %if.else

if.then86:                                        ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #11
  %79 = ptrtoint ptr %pf_set_mac to i32
  call void @__asan_store1_noabort(i32 %79)
  store i8 0, ptr %pf_set_mac, align 4
  %80 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %3, align 8
  %dev91 = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev91, ptr noundef nonnull @.str.30, i32 noundef %vf_id) #12
  br label %if.end98

if.else:                                          ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #11
  %82 = ptrtoint ptr %pf_set_mac to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 1, ptr %pf_set_mac, align 4
  %83 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %3, align 8
  %dev97 = getelementptr inbounds %struct.pci_dev, ptr %84, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev97, ptr noundef nonnull @.str.34, ptr noundef %mac, i32 noundef %vf_id) #12
  br label %if.end98

if.end98:                                         ; preds = %if.else, %if.then86
  tail call fastcc void @i40e_vc_reset_vf(ptr noundef %arrayidx, i1 noundef zeroext true)
  %85 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %3, align 8
  %dev103 = getelementptr inbounds %struct.pci_dev, ptr %86, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev103, ptr noundef nonnull @.str.37) #12
  br label %error_param

error_param:                                      ; preds = %if.end98, %do.end78, %do.end29, %do.end19, %if.end.i.error_param_crit_edge, %do.end.i
  %ret.0 = phi i32 [ -22, %do.end29 ], [ -5, %do.end78 ], [ 0, %if.end98 ], [ -11, %do.end19 ], [ -22, %do.end.i ], [ -22, %if.end.i.error_param_crit_edge ]
  tail call void @_clear_bit(i32 noundef 33, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %error_param, %do.end
  %retval.0 = phi i32 [ -11, %do.end ], [ %ret.0, %error_param ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_del_mac_filter(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__i40e_del_filter(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_sync_vsi_filters(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_ndo_set_vf_port_vlan(ptr nocapture noundef readonly %netdev, i32 noundef %vf_id, i16 noundef zeroext %vlan_id, i8 noundef zeroext %qos, i16 noundef zeroext %vlan_proto) local_unnamed_addr #0 align 64 {
entry:
  %pfe.i.i = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i16 %vlan_id to i32
  %conv1 = zext i8 %qos to i32
  %conv1.tr = zext i8 %qos to i16
  %0 = shl i16 %conv1.tr, 13
  %conv2 = or i16 %0, %vlan_id
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %1 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %add.ptr.i, align 4
  %back = getelementptr inbounds %struct.i40e_vsi, ptr %2, i32 0, i32 57
  %3 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %back, align 8
  %state = getelementptr inbounds %struct.i40e_pf, ptr %4, i32 0, i32 2
  %call4 = tail call i32 @_test_and_set_bit(i32 noundef 33, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.9) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %4, i32 0, i32 86
  %7 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %vf_id)
  %cmp.not.i = icmp sgt i32 %8, %vf_id
  br i1 %cmp.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %9 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %4, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.74, i32 noundef %vf_id) #12
  br label %error_pvid

if.end.i:                                         ; preds = %if.end
  %vf1.i = getelementptr inbounds %struct.i40e_pf, ptr %4, i32 0, i32 85
  %11 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vf1.i, align 8
  %lan_vsi_id.i = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 11
  %13 = ptrtoint ptr %lan_vsi_id.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %lan_vsi_id.i, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %4, i16 noundef zeroext %14) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i.error_pvid_crit_edge, label %if.end8

if.end.i.error_pvid_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_pvid

if.end8:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 4095, i16 %vlan_id)
  %cmp = icmp ugt i16 %vlan_id, 4095
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %qos)
  %cmp12 = icmp ugt i8 %qos, 7
  %or.cond = or i1 %cmp, %cmp12
  br i1 %or.cond, label %do.end17, label %if.end20

do.end17:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  %15 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %4, align 8
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev19, ptr noundef nonnull @.str.41) #12
  br label %error_pvid

if.end20:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32512, i16 %vlan_proto)
  %cmp22.not = icmp eq i16 %vlan_proto, -32512
  br i1 %cmp22.not, label %if.end30, label %do.end27

do.end27:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #11
  %17 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %4, align 8
  %dev29 = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev29, ptr noundef nonnull @.str.44) #12
  br label %error_pvid

if.end30:                                         ; preds = %if.end20
  %19 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %vf1.i, align 8
  %arrayidx = getelementptr %struct.i40e_vf, ptr %20, i32 %vf_id
  %vsi32 = getelementptr inbounds %struct.i40e_pf, ptr %4, i32 0, i32 74
  %21 = ptrtoint ptr %vsi32 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vsi32, align 8
  %lan_vsi_idx = getelementptr %struct.i40e_vf, ptr %20, i32 %vf_id, i32 10
  %23 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %24 to i32
  %arrayidx33 = getelementptr ptr, ptr %22, i32 %idxprom
  %25 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx33, align 4
  %vf_states = getelementptr %struct.i40e_vf, ptr %20, i32 %vf_id, i32 16
  %27 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %vf_states, align 4
  %and1.i = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool35.not = icmp eq i32 %and1.i, 0
  br i1 %tobool35.not, label %do.end39, label %if.end42

do.end39:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #11
  %29 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %4, align 8
  %dev41 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev41, ptr noundef nonnull @.str.21, i32 noundef %vf_id) #12
  br label %error_pvid

if.end42:                                         ; preds = %if.end30
  %pvid = getelementptr inbounds %struct.i40e_vsi, ptr %26, i32 0, i32 51, i32 5
  %31 = ptrtoint ptr %pvid to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %pvid, align 4
  %33 = tail call i16 @llvm.bswap.i16(i16 %32)
  call void @__sanitizer_cov_trace_cmp2(i16 %33, i16 %conv2)
  %cmp45 = icmp eq i16 %33, %conv2
  br i1 %cmp45, label %if.end42.error_pvid_crit_edge, label %if.end48

if.end42.error_pvid_crit_edge:                    ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_pvid

if.end48:                                         ; preds = %if.end42
  %34 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %36 = getelementptr inbounds i8, ptr %pfe.i.i, i32 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_storeN_noabort(i32 %37, i32 8)
  store i64 -1, ptr %36, align 4
  %tobool.not.i.i = icmp eq ptr %arrayidx, null
  br i1 %tobool.not.i.i, label %if.end48.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %lor.lhs.false.i.i

if.end48.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

lor.lhs.false.i.i:                                ; preds = %if.end48
  %vf_id.i.i = getelementptr %struct.i40e_vf, ptr %20, i32 %vf_id, i32 1
  %38 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %39 to i32
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %35, i32 0, i32 86
  %40 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %41, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %41, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge

lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %42 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %vf_states, align 4
  %and1.i.i.i = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i, label %if.end.i.i.if.end7.i.i_crit_edge

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %44 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %vf_states, align 4
  %46 = and i32 %45, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool5.not.i.i = icmp eq i32 %46, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %land.lhs.true.i.i.if.end7.i.i_crit_edge

land.lhs.true.i.i.if.end7.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end7.i.i:                                      ; preds = %land.lhs.true.i.i.if.end7.i.i_crit_edge, %if.end.i.i.if.end7.i.i_crit_edge
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %35, i32 0, i32 1, i32 15, i32 33
  %47 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %vf_base_id.i.i, align 8
  %49 = ptrtoint ptr %pfe.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 2, ptr %pfe.i.i, align 4
  %severity.i.i = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe.i.i, i32 0, i32 2
  %50 = ptrtoint ptr %severity.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 255, ptr %severity.i.i, align 4
  %hw12.i.i = getelementptr inbounds %struct.i40e_pf, ptr %35, i32 0, i32 1
  %51 = trunc i32 %48 to i16
  %conv13.i.i = add i16 %39, %51
  %call14.i.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw12.i.i, i16 noundef zeroext %conv13.i.i, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe.i.i, i16 noundef zeroext 16, ptr noundef null) #9
  br label %i40e_vc_notify_vf_reset.exit.i

i40e_vc_notify_vf_reset.exit.i:                   ; preds = %if.end7.i.i, %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %if.end48.i40e_vc_notify_vf_reset.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %arrayidx.i.i = getelementptr %struct.i40e_pf, ptr %35, i32 0, i32 2, i32 1
  %52 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %arrayidx.i.i, align 4
  %54 = and i32 %53, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool2.not.i = icmp eq i32 %54, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %i40e_vc_notify_vf_reset.exit.i.i40e_vc_reset_vf.exit_crit_edge

i40e_vc_notify_vf_reset.exit.i.i40e_vc_reset_vf.exit_crit_edge: ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_reset_vf.exit

if.end4.i:                                        ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  %call5.i = call zeroext i1 @i40e_reset_vf(ptr noundef %arrayidx, i1 noundef zeroext false) #9
  br label %i40e_vc_reset_vf.exit

i40e_vc_reset_vf.exit:                            ; preds = %if.end4.i, %i40e_vc_notify_vf_reset.exit.i.i40e_vc_reset_vf.exit_crit_edge
  %55 = ptrtoint ptr %vsi32 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %vsi32, align 8
  %57 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom51 = zext i16 %58 to i32
  %arrayidx52 = getelementptr ptr, ptr %56, i32 %idxprom51
  %59 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx52, align 4
  %mac_filter_hash_lock = getelementptr inbounds %struct.i40e_vsi, ptr %60, i32 0, i32 7
  call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock) #9
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vlan_id)
  %tobool54.not = icmp eq i16 %vlan_id, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %qos)
  %tobool57.not = icmp eq i8 %qos, 0
  %or.cond250 = and i1 %tobool54.not, %tobool57.not
  br i1 %or.cond250, label %i40e_vc_reset_vf.exit.land.lhs.true_crit_edge, label %lor.lhs.false58

i40e_vc_reset_vf.exit.land.lhs.true_crit_edge:    ; preds = %i40e_vc_reset_vf.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true

lor.lhs.false58:                                  ; preds = %i40e_vc_reset_vf.exit
  %pvid61 = getelementptr inbounds %struct.i40e_vsi, ptr %60, i32 0, i32 51, i32 5
  %61 = ptrtoint ptr %pvid61 to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %pvid61, align 4
  %63 = call i16 @llvm.bswap.i16(i16 %62)
  call void @__sanitizer_cov_trace_cmp2(i16 %conv2, i16 %63)
  %cmp63.not = icmp eq i16 %conv2, %63
  br i1 %cmp63.not, label %lor.lhs.false58.if.end82_crit_edge, label %lor.lhs.false58.land.lhs.true_crit_edge

lor.lhs.false58.land.lhs.true_crit_edge:          ; preds = %lor.lhs.false58
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true

lor.lhs.false58.if.end82_crit_edge:               ; preds = %lor.lhs.false58
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end82

land.lhs.true:                                    ; preds = %lor.lhs.false58.land.lhs.true_crit_edge, %i40e_vc_reset_vf.exit.land.lhs.true_crit_edge
  %pvid66 = getelementptr inbounds %struct.i40e_vsi, ptr %60, i32 0, i32 51, i32 5
  %64 = ptrtoint ptr %pvid66 to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %pvid66, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %65)
  %tobool68.not = icmp eq i16 %65, 0
  br i1 %tobool68.not, label %land.lhs.true.if.end82_crit_edge, label %if.then69

land.lhs.true.if.end82_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end82

if.then69:                                        ; preds = %land.lhs.true
  %call70 = call i32 @i40e_add_vlan_all_mac(ptr noundef %60, i16 noundef signext -1) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %if.then69.if.end82_crit_edge, label %do.end75

if.then69.if.end82_crit_edge:                     ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end82

do.end75:                                         ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #11
  %back76 = getelementptr inbounds %struct.i40e_vsi, ptr %60, i32 0, i32 57
  %66 = ptrtoint ptr %back76 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %back76, align 8
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %67, align 8
  %dev78 = getelementptr inbounds %struct.pci_dev, ptr %69, i32 0, i32 44
  %asq_last_status = getelementptr inbounds %struct.i40e_pf, ptr %67, i32 0, i32 1, i32 23, i32 14
  %70 = ptrtoint ptr %asq_last_status to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %asq_last_status, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev78, ptr noundef nonnull @.str.49, i32 noundef %call70, i32 noundef %71) #12
  call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  br label %error_pvid

if.end82:                                         ; preds = %if.then69.if.end82_crit_edge, %land.lhs.true.if.end82_crit_edge, %lor.lhs.false58.if.end82_crit_edge
  %pvid84 = getelementptr inbounds %struct.i40e_vsi, ptr %60, i32 0, i32 51, i32 5
  %72 = ptrtoint ptr %pvid84 to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %pvid84, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %73)
  %tobool85.not = icmp eq i16 %73, 0
  br i1 %tobool85.not, label %if.end82.if.end91_crit_edge, label %if.then86

if.end82.if.end91_crit_edge:                      ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end91

if.then86:                                        ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #11
  %74 = and i16 %73, -241
  %75 = call i16 @llvm.bswap.i16(i16 %74)
  call void @i40e_rm_vlan_all_mac(ptr noundef %60, i16 noundef signext %75) #9
  br label %if.end91

if.end91:                                         ; preds = %if.then86, %if.end82.if.end91_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  %lan_vsi_id = getelementptr %struct.i40e_vf, ptr %20, i32 %vf_id, i32 11
  %76 = ptrtoint ptr %lan_vsi_id to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %lan_vsi_id, align 8
  %call95 = call fastcc i32 @i40e_config_vf_promiscuous_mode(ptr noundef %arrayidx, i16 noundef zeroext %77, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call95)
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %if.end103, label %do.end100

do.end100:                                        ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #11
  %78 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %4, align 8
  %dev102 = getelementptr inbounds %struct.pci_dev, ptr %79, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev102, ptr noundef nonnull @.str.52) #12
  br label %error_pvid

if.end103:                                        ; preds = %if.end91
  br i1 %or.cond250, label %if.else, label %if.then109

if.then109:                                       ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #11
  %call110 = call i32 @i40e_vsi_add_pvid(ptr noundef %60, i16 noundef zeroext %conv2) #9
  br label %if.end111

if.else:                                          ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #11
  call void @i40e_vsi_remove_pvid(ptr noundef %60) #9
  br label %if.end111

if.end111:                                        ; preds = %if.else, %if.then109
  %ret.0 = phi i32 [ %call110, %if.then109 ], [ 0, %if.else ]
  call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock) #9
  br i1 %tobool54.not, label %if.end111.if.end137_crit_edge, label %do.end117

if.end111.if.end137_crit_edge:                    ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end137

do.end117:                                        ; preds = %if.end111
  %80 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %4, align 8
  %dev119 = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev119, ptr noundef nonnull @.str.55, i32 noundef %conv, i32 noundef %conv1, i32 noundef %vf_id) #12
  %call122 = call i32 @i40e_add_vlan_all_mac(ptr noundef %60, i16 noundef signext %vlan_id) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call122)
  %tobool123.not = icmp eq i32 %call122, 0
  br i1 %tobool123.not, label %if.end136, label %do.end127

do.end127:                                        ; preds = %do.end117
  call void @__sanitizer_cov_trace_pc() #11
  %back128 = getelementptr inbounds %struct.i40e_vsi, ptr %60, i32 0, i32 57
  %82 = ptrtoint ptr %back128 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %back128, align 8
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %83, align 8
  %dev130 = getelementptr inbounds %struct.pci_dev, ptr %85, i32 0, i32 44
  %asq_last_status134 = getelementptr inbounds %struct.i40e_pf, ptr %83, i32 0, i32 1, i32 23, i32 14
  %86 = ptrtoint ptr %asq_last_status134 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %asq_last_status134, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev130, ptr noundef nonnull @.str.49, i32 noundef %call122, i32 noundef %87) #12
  call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  br label %error_pvid

if.end136:                                        ; preds = %do.end117
  call void @__sanitizer_cov_trace_pc() #11
  call void @i40e_rm_vlan_all_mac(ptr noundef %60, i16 noundef signext -1) #9
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end111.if.end137_crit_edge
  %ret.1 = phi i32 [ 0, %if.end136 ], [ %ret.0, %if.end111.if.end137_crit_edge ]
  call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  %88 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %vf_states, align 4
  %90 = load volatile i32, ptr %vf_states, align 4
  %back149 = getelementptr inbounds %struct.i40e_vsi, ptr %60, i32 0, i32 57
  %91 = ptrtoint ptr %back149 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %back149, align 8
  call void @i40e_service_event_schedule(ptr noundef %92) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1)
  %tobool150.not = icmp eq i32 %ret.1, 0
  br i1 %tobool150.not, label %if.end157, label %do.end154

do.end154:                                        ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #11
  %93 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %4, align 8
  %dev156 = getelementptr inbounds %struct.pci_dev, ptr %94, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev156, ptr noundef nonnull @.str.60) #12
  br label %error_pvid

if.end157:                                        ; preds = %if.end137
  %95 = and i32 %90, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool146.not = icmp ne i32 %95, 0
  %96 = and i32 %89, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool141.not = icmp ne i32 %96, 0
  %97 = ptrtoint ptr %pvid84 to i32
  call void @__asan_load2_noabort(i32 %97)
  %98 = load i16, ptr %pvid84, align 4
  %99 = call i16 @llvm.bswap.i16(i16 %98)
  %port_vlan_id = getelementptr %struct.i40e_vf, ptr %20, i32 %vf_id, i32 7
  %100 = ptrtoint ptr %port_vlan_id to i32
  call void @__asan_store2_noabort(i32 %100)
  store i16 %99, ptr %port_vlan_id, align 2
  %id = getelementptr inbounds %struct.i40e_vsi, ptr %60, i32 0, i32 39
  %101 = ptrtoint ptr %id to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %id, align 4
  %call162 = call fastcc i32 @i40e_config_vf_promiscuous_mode(ptr noundef %arrayidx, i16 noundef zeroext %102, i1 noundef zeroext %tobool146.not, i1 noundef zeroext %tobool141.not)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call162)
  %tobool163.not = icmp eq i32 %call162, 0
  br i1 %tobool163.not, label %if.end157.error_pvid_crit_edge, label %do.end167

if.end157.error_pvid_crit_edge:                   ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_pvid

do.end167:                                        ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #11
  %103 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %4, align 8
  %dev169 = getelementptr inbounds %struct.pci_dev, ptr %104, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev169, ptr noundef nonnull @.str.63) #12
  br label %error_pvid

error_pvid:                                       ; preds = %do.end167, %if.end157.error_pvid_crit_edge, %do.end154, %do.end127, %do.end100, %do.end75, %if.end42.error_pvid_crit_edge, %do.end39, %do.end27, %do.end17, %if.end.i.error_pvid_crit_edge, %do.end.i
  %ret.2 = phi i32 [ -22, %do.end17 ], [ -93, %do.end27 ], [ 0, %if.end42.error_pvid_crit_edge ], [ %call70, %do.end75 ], [ %call95, %do.end100 ], [ %call122, %do.end127 ], [ %ret.1, %do.end154 ], [ %call162, %do.end167 ], [ -11, %do.end39 ], [ 0, %if.end157.error_pvid_crit_edge ], [ -22, %do.end.i ], [ -22, %if.end.i.error_pvid_crit_edge ]
  call void @_clear_bit(i32 noundef 33, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %error_pvid, %do.end
  %retval.0 = phi i32 [ -11, %do.end ], [ %ret.2, %error_pvid ]
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_add_vlan_all_mac(ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_rm_vlan_all_mac(ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_config_vf_promiscuous_mode(ptr noundef %vf, i16 noundef zeroext %vsi_id, i1 noundef zeroext %allmulti, i1 noundef zeroext %alluni) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %call = tail call ptr @i40e_find_vsi_from_id(ptr noundef %1, i16 noundef zeroext %vsi_id) #9
  %2 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vf, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %3, i16 noundef zeroext %vsi_id) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %i40e_vc_isvalid_vsi_id.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

i40e_vc_isvalid_vsi_id.exit:                      ; preds = %entry
  %vf_id.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 48
  %4 = ptrtoint ptr %vf_id.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vf_id.i, align 8
  %vf_id2.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %6 = ptrtoint ptr %vf_id2.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vf_id2.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %7)
  %cmp.i = icmp ne i16 %5, %7
  %tobool.not = icmp eq ptr %call, null
  %or.cond = select i1 %cmp.i, i1 true, i1 %tobool.not
  br i1 %or.cond, label %i40e_vc_isvalid_vsi_id.exit.cleanup_crit_edge, label %if.end

i40e_vc_isvalid_vsi_id.exit.cleanup_crit_edge:    ; preds = %i40e_vc_isvalid_vsi_id.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %i40e_vc_isvalid_vsi_id.exit
  %port_vlan_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 7
  %8 = ptrtoint ptr %port_vlan_id to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %port_vlan_id, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool4.not = icmp eq i16 %9, 0
  br i1 %tobool4.not, label %if.else, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %seid = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 38
  %10 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %seid, align 2
  %call9 = tail call fastcc i32 @i40e_set_vsi_promisc(ptr noundef %vf, i16 noundef zeroext %11, i1 noundef zeroext %allmulti, i1 noundef zeroext %alluni, ptr noundef %port_vlan_id, i16 noundef zeroext 1)
  br label %cleanup

if.else:                                          ; preds = %if.end
  %mac_filter_hash_lock.i = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 7
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock.i) #9
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc24.i.i.for.body.i.i_crit_edge, %if.else
  %indvars.iv.i.i = phi i32 [ 0, %if.else ], [ %indvars.iv.next.i.i, %for.inc24.i.i.for.body.i.i_crit_edge ]
  %num_vlans.043.i.i = phi i16 [ 0, %if.else ], [ %num_vlans.1.lcssa.i.i, %for.inc24.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.i40e_vsi, ptr %call, i32 0, i32 8, i32 %indvars.iv.i.i
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %f.138.i.i = load ptr, ptr %arrayidx.i.i, align 4
  %tobool5.not39.i.i = icmp eq ptr %f.138.i.i, null
  br i1 %tobool5.not39.i.i, label %for.body.i.i.for.inc24.i.i_crit_edge, label %for.body.i.i.for.body6.i.i_crit_edge

for.body.i.i.for.body6.i.i_crit_edge:             ; preds = %for.body.i.i
  br label %for.body6.i.i

for.body.i.i.for.inc24.i.i_crit_edge:             ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc24.i.i

for.body6.i.i:                                    ; preds = %for.body6.i.i.for.body6.i.i_crit_edge, %for.body.i.i.for.body6.i.i_crit_edge
  %f.141.i.i = phi ptr [ %f.1.i.i, %for.body6.i.i.for.body6.i.i_crit_edge ], [ %f.138.i.i, %for.body.i.i.for.body6.i.i_crit_edge ]
  %num_vlans.140.i.i = phi i16 [ %num_vlans.2.i.i, %for.body6.i.i.for.body6.i.i_crit_edge ], [ %num_vlans.043.i.i, %for.body.i.i.for.body6.i.i_crit_edge ]
  %vlan.i.i = getelementptr inbounds %struct.i40e_mac_filter, ptr %f.141.i.i, i32 0, i32 2
  %13 = ptrtoint ptr %vlan.i.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vlan.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4096, i16 %14)
  %15 = icmp ult i16 %14, 4096
  %inc.i.i = zext i1 %15 to i16
  %num_vlans.2.i.i = add i16 %num_vlans.140.i.i, %inc.i.i
  %16 = ptrtoint ptr %f.141.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %f.1.i.i = load ptr, ptr %f.141.i.i, align 4
  %tobool5.not.i.i = icmp eq ptr %f.1.i.i, null
  br i1 %tobool5.not.i.i, label %for.body6.i.i.for.inc24.i.i_crit_edge, label %for.body6.i.i.for.body6.i.i_crit_edge

for.body6.i.i.for.body6.i.i_crit_edge:            ; preds = %for.body6.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body6.i.i

for.body6.i.i.for.inc24.i.i_crit_edge:            ; preds = %for.body6.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc24.i.i

for.inc24.i.i:                                    ; preds = %for.body6.i.i.for.inc24.i.i_crit_edge, %for.body.i.i.for.inc24.i.i_crit_edge
  %num_vlans.1.lcssa.i.i = phi i16 [ %num_vlans.043.i.i, %for.body.i.i.for.inc24.i.i_crit_edge ], [ %num_vlans.2.i.i, %for.body6.i.i.for.inc24.i.i_crit_edge ]
  %indvars.iv.next.i.i = add nuw nsw i32 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %indvars.iv.next.i.i, 256
  br i1 %exitcond.not.i.i, label %i40e_getnum_vf_vsi_vlan_filters.exit, label %for.inc24.i.i.for.body.i.i_crit_edge

for.inc24.i.i.for.body.i.i_crit_edge:             ; preds = %for.inc24.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i.i

i40e_getnum_vf_vsi_vlan_filters.exit:             ; preds = %for.inc24.i.i
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock.i) #9
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %num_vlans.1.lcssa.i.i)
  %tobool11.not = icmp eq i16 %num_vlans.1.lcssa.i.i, 0
  br i1 %tobool11.not, label %if.end21, label %if.then12

if.then12:                                        ; preds = %i40e_getnum_vf_vsi_vlan_filters.exit
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock.i) #9
  br label %for.body.i.i54

for.body.i.i54:                                   ; preds = %for.inc24.i.i66.for.body.i.i54_crit_edge, %if.then12
  %indvars.iv.i.i49 = phi i32 [ 0, %if.then12 ], [ %indvars.iv.next.i.i64, %for.inc24.i.i66.for.body.i.i54_crit_edge ]
  %num_vlans.043.i.i50 = phi i16 [ 0, %if.then12 ], [ %num_vlans.1.lcssa.i.i63, %for.inc24.i.i66.for.body.i.i54_crit_edge ]
  %arrayidx.i.i51 = getelementptr %struct.i40e_vsi, ptr %call, i32 0, i32 8, i32 %indvars.iv.i.i49
  %17 = ptrtoint ptr %arrayidx.i.i51 to i32
  call void @__asan_load4_noabort(i32 %17)
  %f.138.i.i52 = load ptr, ptr %arrayidx.i.i51, align 4
  %tobool5.not39.i.i53 = icmp eq ptr %f.138.i.i52, null
  br i1 %tobool5.not39.i.i53, label %for.body.i.i54.for.inc24.i.i66_crit_edge, label %for.body.i.i54.for.body6.i.i62_crit_edge

for.body.i.i54.for.body6.i.i62_crit_edge:         ; preds = %for.body.i.i54
  br label %for.body6.i.i62

for.body.i.i54.for.inc24.i.i66_crit_edge:         ; preds = %for.body.i.i54
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc24.i.i66

for.body6.i.i62:                                  ; preds = %for.body6.i.i62.for.body6.i.i62_crit_edge, %for.body.i.i54.for.body6.i.i62_crit_edge
  %f.141.i.i55 = phi ptr [ %f.1.i.i60, %for.body6.i.i62.for.body6.i.i62_crit_edge ], [ %f.138.i.i52, %for.body.i.i54.for.body6.i.i62_crit_edge ]
  %num_vlans.140.i.i56 = phi i16 [ %num_vlans.2.i.i59, %for.body6.i.i62.for.body6.i.i62_crit_edge ], [ %num_vlans.043.i.i50, %for.body.i.i54.for.body6.i.i62_crit_edge ]
  %vlan.i.i57 = getelementptr inbounds %struct.i40e_mac_filter, ptr %f.141.i.i55, i32 0, i32 2
  %18 = ptrtoint ptr %vlan.i.i57 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vlan.i.i57, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4096, i16 %19)
  %20 = icmp ult i16 %19, 4096
  %inc.i.i58 = zext i1 %20 to i16
  %num_vlans.2.i.i59 = add i16 %num_vlans.140.i.i56, %inc.i.i58
  %21 = ptrtoint ptr %f.141.i.i55 to i32
  call void @__asan_load4_noabort(i32 %21)
  %f.1.i.i60 = load ptr, ptr %f.141.i.i55, align 4
  %tobool5.not.i.i61 = icmp eq ptr %f.1.i.i60, null
  br i1 %tobool5.not.i.i61, label %for.body6.i.i62.for.inc24.i.i66_crit_edge, label %for.body6.i.i62.for.body6.i.i62_crit_edge

for.body6.i.i62.for.body6.i.i62_crit_edge:        ; preds = %for.body6.i.i62
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body6.i.i62

for.body6.i.i62.for.inc24.i.i66_crit_edge:        ; preds = %for.body6.i.i62
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc24.i.i66

for.inc24.i.i66:                                  ; preds = %for.body6.i.i62.for.inc24.i.i66_crit_edge, %for.body.i.i54.for.inc24.i.i66_crit_edge
  %num_vlans.1.lcssa.i.i63 = phi i16 [ %num_vlans.043.i.i50, %for.body.i.i54.for.inc24.i.i66_crit_edge ], [ %num_vlans.2.i.i59, %for.body6.i.i62.for.inc24.i.i66_crit_edge ]
  %indvars.iv.next.i.i64 = add nuw nsw i32 %indvars.iv.i.i49, 1
  %exitcond.not.i.i65 = icmp eq i32 %indvars.iv.next.i.i64, 256
  br i1 %exitcond.not.i.i65, label %if.end7.i.i.i, label %for.inc24.i.i66.for.body.i.i54_crit_edge

for.inc24.i.i66.for.body.i.i54_crit_edge:         ; preds = %for.inc24.i.i66
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i.i54

if.end7.i.i.i:                                    ; preds = %for.inc24.i.i66
  %conv27.i.i67 = zext i16 %num_vlans.1.lcssa.i.i63 to i32
  %22 = shl nuw nsw i32 %conv27.i.i67, 1
  %call8.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %22, i32 noundef 2848) #13
  %tobool.not.i68 = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool.not.i68, label %i40e_get_vlan_list_sync.exit.thread, label %if.end7.i.i.i.for.body.i_crit_edge

if.end7.i.i.i.for.body.i_crit_edge:               ; preds = %if.end7.i.i.i
  br label %for.body.i

i40e_get_vlan_list_sync.exit.thread:              ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock.i) #9
  br label %cleanup

for.body.i:                                       ; preds = %for.inc32.i.for.body.i_crit_edge, %if.end7.i.i.i.for.body.i_crit_edge
  %i.060.i = phi i32 [ %i.1.lcssa.i, %for.inc32.i.for.body.i_crit_edge ], [ 0, %if.end7.i.i.i.for.body.i_crit_edge ]
  %bkt.059.i = phi i32 [ %inc33.i, %for.inc32.i.for.body.i_crit_edge ], [ 0, %if.end7.i.i.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.i40e_vsi, ptr %call, i32 0, i32 8, i32 %bkt.059.i
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %f.155.i = load ptr, ptr %arrayidx.i, align 4
  %tobool9.not56.i = icmp eq ptr %f.155.i, null
  br i1 %tobool9.not56.i, label %for.body.i.for.inc32.i_crit_edge, label %for.body.i.for.body10.i_crit_edge

for.body.i.for.body10.i_crit_edge:                ; preds = %for.body.i
  br label %for.body10.i

for.body.i.for.inc32.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc32.i

for.body10.i:                                     ; preds = %for.inc.i.for.body10.i_crit_edge, %for.body.i.for.body10.i_crit_edge
  %f.158.i = phi ptr [ %f.1.i, %for.inc.i.for.body10.i_crit_edge ], [ %f.155.i, %for.body.i.for.body10.i_crit_edge ]
  %i.157.i = phi i32 [ %i.2.i, %for.inc.i.for.body10.i_crit_edge ], [ %i.060.i, %for.body.i.for.body10.i_crit_edge ]
  %vlan.i = getelementptr inbounds %struct.i40e_mac_filter, ptr %f.158.i, i32 0, i32 2
  %24 = ptrtoint ptr %vlan.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vlan.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4095, i16 %25)
  %26 = icmp ugt i16 %25, 4095
  br i1 %26, label %for.body10.i.for.inc.i_crit_edge, label %if.end19.i

for.body10.i.for.inc.i_crit_edge:                 ; preds = %for.body10.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.end19.i:                                       ; preds = %for.body10.i
  call void @__sanitizer_cov_trace_pc() #11
  %inc.i = add i32 %i.157.i, 1
  %arrayidx21.i = getelementptr i16, ptr %call8.i.i.i, i32 %i.157.i
  %27 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %25, ptr %arrayidx21.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end19.i, %for.body10.i.for.inc.i_crit_edge
  %i.2.i = phi i32 [ %i.157.i, %for.body10.i.for.inc.i_crit_edge ], [ %inc.i, %if.end19.i ]
  %28 = ptrtoint ptr %f.158.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %f.1.i = load ptr, ptr %f.158.i, align 4
  %tobool9.not.i = icmp eq ptr %f.1.i, null
  br i1 %tobool9.not.i, label %for.inc.i.for.inc32.i_crit_edge, label %for.inc.i.for.body10.i_crit_edge

for.inc.i.for.body10.i_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body10.i

for.inc.i.for.inc32.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc32.i

for.inc32.i:                                      ; preds = %for.inc.i.for.inc32.i_crit_edge, %for.body.i.for.inc32.i_crit_edge
  %i.1.lcssa.i = phi i32 [ %i.060.i, %for.body.i.for.inc32.i_crit_edge ], [ %i.2.i, %for.inc.i.for.inc32.i_crit_edge ]
  %inc33.i = add nuw nsw i32 %bkt.059.i, 1
  %exitcond.not.i = icmp eq i32 %inc33.i, 256
  br i1 %exitcond.not.i, label %i40e_get_vlan_list_sync.exit, label %for.inc32.i.for.body.i_crit_edge

for.inc32.i.for.body.i_crit_edge:                 ; preds = %for.inc32.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

i40e_get_vlan_list_sync.exit:                     ; preds = %for.inc32.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock.i) #9
  %seid16 = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 38
  %29 = ptrtoint ptr %seid16 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %seid16, align 2
  %call19 = tail call fastcc i32 @i40e_set_vsi_promisc(ptr noundef %vf, i16 noundef zeroext %30, i1 noundef zeroext %allmulti, i1 noundef zeroext %alluni, ptr noundef nonnull %call8.i.i.i, i16 noundef zeroext %num_vlans.1.lcssa.i.i63)
  tail call void @kfree(ptr noundef nonnull %call8.i.i.i) #9
  br label %cleanup

if.end21:                                         ; preds = %i40e_getnum_vf_vsi_vlan_filters.exit
  call void @__sanitizer_cov_trace_pc() #11
  %seid22 = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 38
  %31 = ptrtoint ptr %seid22 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %seid22, align 2
  %call25 = tail call fastcc i32 @i40e_set_vsi_promisc(ptr noundef %vf, i16 noundef zeroext %32, i1 noundef zeroext %allmulti, i1 noundef zeroext %alluni, ptr noundef null, i16 noundef zeroext 0)
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %i40e_get_vlan_list_sync.exit, %i40e_get_vlan_list_sync.exit.thread, %if.then5, %i40e_vc_isvalid_vsi_id.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %if.then5 ], [ %call19, %i40e_get_vlan_list_sync.exit ], [ %call25, %if.end21 ], [ -5, %i40e_vc_isvalid_vsi_id.exit.cleanup_crit_edge ], [ -18, %i40e_get_vlan_list_sync.exit.thread ], [ -5, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_vsi_add_pvid(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_vsi_remove_pvid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_service_event_schedule(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_ndo_set_vf_bw(ptr nocapture noundef readonly %netdev, i32 noundef %vf_id, i32 noundef %min_tx_rate, i32 noundef %max_tx_rate) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 4
  %back = getelementptr inbounds %struct.i40e_vsi, ptr %1, i32 0, i32 57
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 8
  %state = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 2
  %call2 = tail call i32 @_test_and_set_bit(i32 noundef 33, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.9) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 86
  %6 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %vf_id)
  %cmp.not.i = icmp sgt i32 %7, %vf_id
  br i1 %cmp.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.74, i32 noundef %vf_id) #12
  br label %error

if.end.i:                                         ; preds = %if.end
  %vf1.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 85
  %10 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf1.i, align 8
  %lan_vsi_id.i = getelementptr %struct.i40e_vf, ptr %11, i32 %vf_id, i32 11
  %12 = ptrtoint ptr %lan_vsi_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %lan_vsi_id.i, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %3, i16 noundef zeroext %13) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i.error_crit_edge, label %if.end6

if.end.i.error_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error

if.end6:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %min_tx_rate)
  %tobool7.not = icmp eq i32 %min_tx_rate, 0
  br i1 %tobool7.not, label %if.end14, label %do.end11

do.end11:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %14 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %3, align 8
  %dev13 = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev13, ptr noundef nonnull @.str.67, i32 noundef %min_tx_rate, i32 noundef %vf_id) #12
  br label %error

if.end14:                                         ; preds = %if.end6
  %16 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vf1.i, align 8
  %vsi16 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 74
  %18 = ptrtoint ptr %vsi16 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vsi16, align 8
  %lan_vsi_idx = getelementptr %struct.i40e_vf, ptr %17, i32 %vf_id, i32 10
  %20 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %21 to i32
  %arrayidx17 = getelementptr ptr, ptr %19, i32 %idxprom
  %22 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx17, align 4
  %vf_states = getelementptr %struct.i40e_vf, ptr %17, i32 %vf_id, i32 16
  %24 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %vf_states, align 4
  %and1.i = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool19.not = icmp eq i32 %and1.i, 0
  br i1 %tobool19.not, label %do.end23, label %if.end26

do.end23:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #11
  %26 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %3, align 8
  %dev25 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev25, ptr noundef nonnull @.str.21, i32 noundef %vf_id) #12
  br label %error

if.end26:                                         ; preds = %if.end14
  %seid = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 38
  %28 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %seid, align 2
  %conv = sext i32 %max_tx_rate to i64
  %call27 = tail call i32 @i40e_set_bw_limit(ptr noundef %23, i16 noundef zeroext %29, i64 noundef %conv) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end30, label %if.end26.error_crit_edge

if.end26.error_crit_edge:                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #11
  br label %error

if.end30:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #11
  %tx_rate = getelementptr %struct.i40e_vf, ptr %17, i32 %vf_id, i32 17
  %30 = ptrtoint ptr %tx_rate to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %max_tx_rate, ptr %tx_rate, align 8
  br label %error

error:                                            ; preds = %if.end30, %if.end26.error_crit_edge, %do.end23, %do.end11, %if.end.i.error_crit_edge, %do.end.i
  %ret.0 = phi i32 [ -22, %do.end11 ], [ %call27, %if.end26.error_crit_edge ], [ 0, %if.end30 ], [ -11, %do.end23 ], [ -22, %do.end.i ], [ -22, %if.end.i.error_crit_edge ]
  tail call void @_clear_bit(i32 noundef 33, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %error, %do.end
  %retval.0 = phi i32 [ -11, %do.end ], [ %ret.0, %error ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_set_bw_limit(ptr noundef, i16 noundef zeroext, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_ndo_get_vf_config(ptr nocapture noundef readonly %netdev, i32 noundef %vf_id, ptr nocapture noundef writeonly %ivi) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 4
  %back = getelementptr inbounds %struct.i40e_vsi, ptr %1, i32 0, i32 57
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 8
  %state = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 2
  %call2 = tail call i32 @_test_and_set_bit(i32 noundef 33, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.9) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 86
  %6 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %vf_id)
  %cmp.not.i = icmp sgt i32 %7, %vf_id
  br i1 %cmp.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.74, i32 noundef %vf_id) #12
  br label %error_param

if.end.i:                                         ; preds = %if.end
  %vf1.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 85
  %10 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vf1.i, align 8
  %lan_vsi_id.i = getelementptr %struct.i40e_vf, ptr %11, i32 %vf_id, i32 11
  %12 = ptrtoint ptr %lan_vsi_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %lan_vsi_id.i, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %3, i16 noundef zeroext %13) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i.error_param_crit_edge, label %if.end6

if.end.i.error_param_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end6:                                          ; preds = %if.end.i
  %14 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vf1.i, align 8
  %vsi8 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 74
  %16 = ptrtoint ptr %vsi8 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vsi8, align 8
  %lan_vsi_idx = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 10
  %18 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %19 to i32
  %arrayidx9 = getelementptr ptr, ptr %17, i32 %idxprom
  %20 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx9, align 4
  %tobool10.not = icmp eq ptr %21, null
  br i1 %tobool10.not, label %if.end6.error_param_crit_edge, label %if.end12

if.end6.error_param_crit_edge:                    ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_param

if.end12:                                         ; preds = %if.end6
  %22 = ptrtoint ptr %ivi to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %vf_id, ptr %ivi, align 4
  %mac = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 1
  %default_lan_addr = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 6
  %23 = ptrtoint ptr %default_lan_addr to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %default_lan_addr, align 4
  %25 = ptrtoint ptr %mac to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %mac, align 4
  %add.ptr.i73 = getelementptr i8, ptr %default_lan_addr, i32 4
  %26 = ptrtoint ptr %add.ptr.i73 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %add.ptr.i73, align 2
  %add.ptr1.i = getelementptr %struct.ifla_vf_info, ptr %ivi, i32 0, i32 1, i32 4
  %28 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %27, ptr %add.ptr1.i, align 2
  %tx_rate = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 17
  %29 = ptrtoint ptr %tx_rate to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %tx_rate, align 8
  %max_tx_rate = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 7
  %31 = ptrtoint ptr %max_tx_rate to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %max_tx_rate, align 4
  %min_tx_rate = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 6
  %32 = ptrtoint ptr %min_tx_rate to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %min_tx_rate, align 4
  %pvid = getelementptr inbounds %struct.i40e_vsi, ptr %21, i32 0, i32 51, i32 5
  %33 = ptrtoint ptr %pvid to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %pvid, align 4
  %35 = and i16 %34, -241
  %36 = tail call i16 @llvm.bswap.i16(i16 %35)
  %and = zext i16 %36 to i32
  %vlan = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 2
  %37 = ptrtoint ptr %vlan to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %and, ptr %vlan, align 4
  %38 = ptrtoint ptr %pvid to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %pvid, align 4
  %40 = lshr i16 %39, 5
  %41 = and i16 %40, 7
  %42 = zext i16 %41 to i32
  %qos = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 3
  %43 = ptrtoint ptr %qos to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %qos, align 4
  %link_forced = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 18
  %44 = ptrtoint ptr %link_forced to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %link_forced, align 4, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %cmp = icmp eq i8 %45, 0
  br i1 %cmp, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %linkstate = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 5
  %46 = ptrtoint ptr %linkstate to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %linkstate, align 4
  br label %if.end33

if.else:                                          ; preds = %if.end12
  %link_up = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 19
  %47 = ptrtoint ptr %link_up to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %link_up, align 1, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool24.not = icmp eq i8 %48, 0
  %linkstate31 = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 5
  br i1 %tobool24.not, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %49 = ptrtoint ptr %linkstate31 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 1, ptr %linkstate31, align 4
  br label %if.end33

if.else30:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %50 = ptrtoint ptr %linkstate31 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 2, ptr %linkstate31, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.then28, %if.then23
  %spoofchk = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 20
  %51 = ptrtoint ptr %spoofchk to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %spoofchk, align 2, !range !506
  %53 = zext i8 %52 to i32
  %spoofchk36 = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 4
  %54 = ptrtoint ptr %spoofchk36 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %spoofchk36, align 4
  %trusted = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 9
  %55 = ptrtoint ptr %trusted to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %trusted, align 1, !range !506
  %57 = zext i8 %56 to i32
  %trusted39 = getelementptr inbounds %struct.ifla_vf_info, ptr %ivi, i32 0, i32 9
  %58 = ptrtoint ptr %trusted39 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %57, ptr %trusted39, align 4
  br label %error_param

error_param:                                      ; preds = %if.end33, %if.end6.error_param_crit_edge, %if.end.i.error_param_crit_edge, %do.end.i
  %ret.0 = phi i32 [ 0, %if.end33 ], [ -2, %if.end6.error_param_crit_edge ], [ -22, %do.end.i ], [ -22, %if.end.i.error_param_crit_edge ]
  tail call void @_clear_bit(i32 noundef 33, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %error_param, %do.end
  %retval.0 = phi i32 [ -11, %do.end ], [ %ret.0, %error_param ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_ndo_set_vf_link_state(ptr nocapture noundef readonly %netdev, i32 noundef %vf_id, i32 noundef %link) local_unnamed_addr #0 align 64 {
entry:
  %pfe = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 4
  %back = getelementptr inbounds %struct.i40e_vsi, ptr %1, i32 0, i32 57
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 8
  %hw = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1
  %phy = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1, i32 2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe) #9
  %4 = call ptr @memset(ptr %pfe, i32 255, i32 16)
  %state = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 2
  %call3 = tail call i32 @_test_and_set_bit(i32 noundef 33, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %5 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %3, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.9) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 86
  %7 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %vf_id)
  %cmp.not = icmp sgt i32 %8, %vf_id
  br i1 %cmp.not, label %if.end10, label %do.end7

do.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %3, align 8
  %dev9 = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev9, ptr noundef nonnull @.str.74, i32 noundef %vf_id) #12
  br label %error_out

if.end10:                                         ; preds = %if.end
  %vf11 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 85
  %11 = ptrtoint ptr %vf11 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vf11, align 8
  %arrayidx = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id
  %vf_id12 = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 1
  %13 = ptrtoint ptr %vf_id12 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vf_id12, align 4
  %vf_base_id = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1, i32 15, i32 33
  %15 = ptrtoint ptr %vf_base_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vf_base_id, align 8
  %17 = ptrtoint ptr %pfe to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 1, ptr %pfe, align 4
  %severity = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe, i32 0, i32 2
  %18 = ptrtoint ptr %severity to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %severity, align 4
  %19 = zext i32 %link to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.298)
  switch i32 %link, label %if.end10.error_out_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb13
    i32 2, label %sw.bb15
  ]

if.end10.error_out_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_out

sw.bb:                                            ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  %link_forced = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 18
  %20 = ptrtoint ptr %link_forced to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %link_forced, align 4
  br label %sw.epilog

sw.bb13:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  %link_forced14 = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 18
  %21 = ptrtoint ptr %link_forced14 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 1, ptr %link_forced14, align 4
  %link_up = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 19
  %22 = ptrtoint ptr %link_up to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 1, ptr %link_up, align 1
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  %link_forced16 = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 18
  %23 = ptrtoint ptr %link_forced16 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 1, ptr %link_forced16, align 4
  %link_up17 = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 19
  %24 = ptrtoint ptr %link_up17 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %link_up17, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb15, %sw.bb13, %sw.bb
  call fastcc void @i40e_set_vf_link_state(ptr noundef %arrayidx, ptr noundef nonnull %pfe, ptr noundef %phy)
  %25 = trunc i32 %16 to i16
  %conv18 = add i16 %14, %25
  %call19 = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw, i16 noundef zeroext %conv18, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe, i16 noundef zeroext 16, ptr noundef null) #9
  br label %error_out

error_out:                                        ; preds = %sw.epilog, %if.end10.error_out_crit_edge, %do.end7
  %ret.0 = phi i32 [ -22, %do.end7 ], [ 0, %sw.epilog ], [ -22, %if.end10.error_out_crit_edge ]
  call void @_clear_bit(i32 noundef 33, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %error_out, %do.end
  %retval.0 = phi i32 [ -11, %do.end ], [ %ret.0, %error_out ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe) #9
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @i40e_set_vf_link_state(ptr nocapture noundef readonly %vf, ptr nocapture noundef writeonly %pfe, ptr nocapture noundef readonly %ls) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %link_info = getelementptr inbounds %struct.i40e_link_status, ptr %ls, i32 0, i32 2
  %0 = ptrtoint ptr %link_info to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %link_info, align 4
  %2 = and i8 %1, 1
  %link_forced = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 18
  %3 = ptrtoint ptr %link_forced to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %link_forced, align 4, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %link_up = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 19
  %5 = ptrtoint ptr %link_up to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %link_up, align 1, !range !506
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %link_status.0 = phi i8 [ %6, %if.then ], [ %2, %entry.if.end_crit_edge ]
  %driver_caps = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 4
  %7 = ptrtoint ptr %driver_caps to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %driver_caps, align 4
  %and4 = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %link_status.0)
  %tobool13.not = icmp eq i8 %link_status.0, 0
  br i1 %tobool5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.end
  br i1 %tobool13.not, label %if.then6.if.end25_crit_edge, label %cond.true

if.then6.if.end25_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true:                                        ; preds = %if.then6
  %link_speed = getelementptr inbounds %struct.i40e_link_status, ptr %ls, i32 0, i32 1
  %9 = ptrtoint ptr %link_speed to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %link_speed, align 4
  %11 = zext i32 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.299)
  switch i32 %10, label %sw.epilog.i [
    i32 2, label %cond.true.if.end25_crit_edge
    i32 4, label %sw.bb1.i
    i32 1, label %sw.bb2.i
    i32 128, label %sw.bb3.i
    i32 8, label %sw.bb4.i
    i32 32, label %sw.bb5.i
    i32 64, label %sw.bb6.i
    i32 16, label %sw.bb7.i
    i32 0, label %sw.bb8.i
  ]

cond.true.if.end25_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb1.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb2.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb3.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb4.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb5.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb6.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb7.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb8.i:                                         ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.epilog.i:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

if.else:                                          ; preds = %if.end
  br i1 %tobool13.not, label %if.else.if.end25_crit_edge, label %cond.true14

if.else.if.end25_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true14:                                      ; preds = %if.else
  %link_speed15 = getelementptr inbounds %struct.i40e_link_status, ptr %ls, i32 0, i32 1
  %12 = ptrtoint ptr %link_speed15 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %link_speed15, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.300)
  switch i32 %13, label %sw.default.i [
    i32 2, label %cond.true14.if.end25_crit_edge
    i32 4, label %cond.true14.if.end25_crit_edge44
    i32 1, label %cond.true14.if.end25_crit_edge45
    i32 128, label %cond.true14.if.end25_crit_edge46
    i32 8, label %cond.true14.if.end25_crit_edge47
    i32 16, label %cond.true14.if.end25_crit_edge48
    i32 32, label %cond.true14.if.end25_crit_edge49
    i32 64, label %cond.true14.if.end25_crit_edge50
  ]

cond.true14.if.end25_crit_edge50:                 ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true14.if.end25_crit_edge49:                 ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true14.if.end25_crit_edge48:                 ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true14.if.end25_crit_edge47:                 ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true14.if.end25_crit_edge46:                 ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true14.if.end25_crit_edge45:                 ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true14.if.end25_crit_edge44:                 ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

cond.true14.if.end25_crit_edge:                   ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.default.i:                                     ; preds = %cond.true14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

if.end25:                                         ; preds = %sw.default.i, %cond.true14.if.end25_crit_edge, %cond.true14.if.end25_crit_edge44, %cond.true14.if.end25_crit_edge45, %cond.true14.if.end25_crit_edge46, %cond.true14.if.end25_crit_edge47, %cond.true14.if.end25_crit_edge48, %cond.true14.if.end25_crit_edge49, %cond.true14.if.end25_crit_edge50, %if.else.if.end25_crit_edge, %sw.epilog.i, %sw.bb8.i, %sw.bb7.i, %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %cond.true.if.end25_crit_edge, %if.then6.if.end25_crit_edge
  %cond19.sink = phi i32 [ 0, %if.then6.if.end25_crit_edge ], [ -1, %sw.epilog.i ], [ -1, %sw.bb8.i ], [ 40000, %sw.bb7.i ], [ 25000, %sw.bb6.i ], [ 20000, %sw.bb5.i ], [ 10000, %sw.bb4.i ], [ 5000, %sw.bb3.i ], [ 2500, %sw.bb2.i ], [ 1000, %sw.bb1.i ], [ 100, %cond.true.if.end25_crit_edge ], [ 0, %if.else.if.end25_crit_edge ], [ 0, %sw.default.i ], [ %13, %cond.true14.if.end25_crit_edge ], [ %13, %cond.true14.if.end25_crit_edge44 ], [ %13, %cond.true14.if.end25_crit_edge45 ], [ %13, %cond.true14.if.end25_crit_edge46 ], [ %13, %cond.true14.if.end25_crit_edge47 ], [ %13, %cond.true14.if.end25_crit_edge48 ], [ %13, %cond.true14.if.end25_crit_edge49 ], [ %13, %cond.true14.if.end25_crit_edge50 ]
  %event_data20 = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe, i32 0, i32 1
  %15 = ptrtoint ptr %event_data20 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %cond19.sink, ptr %event_data20, align 4
  %link_status24 = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe, i32 0, i32 1, i32 0, i32 1
  %16 = ptrtoint ptr %link_status24 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %link_status.0, ptr %link_status24, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_ndo_set_vf_spoofchk(ptr nocapture noundef readonly %netdev, i32 noundef %vf_id, i1 noundef zeroext %enable) local_unnamed_addr #0 align 64 {
entry:
  %ctxt = alloca %struct.i40e_vsi_context, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %enable to i8
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 4
  %back = getelementptr inbounds %struct.i40e_vsi, ptr %1, i32 0, i32 57
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %ctxt) #9
  %4 = call ptr @memset(ptr %ctxt, i32 255, i32 144)
  %hw2 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1
  %state = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 2
  %call3 = tail call i32 @_test_and_set_bit(i32 noundef 33, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %5 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %3, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.9) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 86
  %7 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %vf_id)
  %cmp.not = icmp sgt i32 %8, %vf_id
  br i1 %cmp.not, label %if.end10, label %do.end7

do.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %3, align 8
  %dev9 = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev9, ptr noundef nonnull @.str.74, i32 noundef %vf_id) #12
  br label %out

if.end10:                                         ; preds = %if.end
  %vf11 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 85
  %11 = ptrtoint ptr %vf11 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vf11, align 8
  %vf_states = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 16
  %13 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %vf_states, align 4
  %and1.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool13.not = icmp eq i32 %and1.i, 0
  br i1 %tobool13.not, label %do.end17, label %if.end20

do.end17:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %3, align 8
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev19, ptr noundef nonnull @.str.21, i32 noundef %vf_id) #12
  br label %out

if.end20:                                         ; preds = %if.end10
  %spoofchk = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 20
  %17 = ptrtoint ptr %spoofchk to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %spoofchk, align 2, !range !506
  call void @__sanitizer_cov_trace_cmp1(i8 %18, i8 %frombool)
  %cmp24 = icmp eq i8 %18, %frombool
  br i1 %cmp24, label %if.end20.out_crit_edge, label %if.end27

if.end20.out_crit_edge:                           ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #11
  br label %out

if.end27:                                         ; preds = %if.end20
  %19 = ptrtoint ptr %spoofchk to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %frombool, ptr %spoofchk, align 2
  %20 = call ptr @memset(ptr %ctxt, i32 0, i32 144)
  %vsi31 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 74
  %21 = ptrtoint ptr %vsi31 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vsi31, align 8
  %lan_vsi_idx = getelementptr %struct.i40e_vf, ptr %12, i32 %vf_id, i32 10
  %23 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %24 to i32
  %arrayidx32 = getelementptr ptr, ptr %22, i32 %idxprom
  %25 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx32, align 4
  %seid = getelementptr inbounds %struct.i40e_vsi, ptr %26, i32 0, i32 38
  %27 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %seid, align 2
  %29 = ptrtoint ptr %ctxt to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %28, ptr %ctxt, align 4
  %pf_id = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 1, i32 17
  %30 = ptrtoint ptr %pf_id to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %pf_id, align 2
  %pf_num = getelementptr inbounds %struct.i40e_vsi_context, ptr %ctxt, i32 0, i32 6
  %32 = ptrtoint ptr %pf_num to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %31, ptr %pf_num, align 4
  %info = getelementptr inbounds %struct.i40e_vsi_context, ptr %ctxt, i32 0, i32 9
  %33 = ptrtoint ptr %info to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 512, ptr %info, align 4
  br i1 %enable, label %if.then36, label %if.end27.if.end40_crit_edge

if.end27.if.end40_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end40

if.then36:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  %sec_flags = getelementptr inbounds %struct.i40e_vsi_context, ptr %ctxt, i32 0, i32 9, i32 3
  %34 = ptrtoint ptr %sec_flags to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %sec_flags, align 2
  %36 = or i8 %35, 6
  store i8 %36, ptr %sec_flags, align 2
  br label %if.end40

if.end40:                                         ; preds = %if.then36, %if.end27.if.end40_crit_edge
  %call41 = call i32 @i40e_aq_update_vsi_params(ptr noundef %hw2, ptr noundef nonnull %ctxt, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end40.out_crit_edge, label %do.end46

if.end40.out_crit_edge:                           ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #11
  br label %out

do.end46:                                         ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #11
  %37 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %3, align 8
  %dev48 = getelementptr inbounds %struct.pci_dev, ptr %38, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev48, ptr noundef nonnull @.str.82, i32 noundef %call41) #12
  br label %out

out:                                              ; preds = %do.end46, %if.end40.out_crit_edge, %if.end20.out_crit_edge, %do.end17, %do.end7
  %ret.0 = phi i32 [ -22, %do.end7 ], [ 0, %if.end20.out_crit_edge ], [ -5, %do.end46 ], [ 0, %if.end40.out_crit_edge ], [ -11, %do.end17 ]
  call void @_clear_bit(i32 noundef 33, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %out, %do.end
  %retval.0 = phi i32 [ -11, %do.end ], [ %ret.0, %out ]
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %ctxt) #9
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_aq_update_vsi_params(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_ndo_set_vf_trust(ptr nocapture noundef readonly %netdev, i32 noundef %vf_id, i1 noundef zeroext %setting) local_unnamed_addr #0 align 64 {
entry:
  %pfe.i.i = alloca %struct.virtchnl_pf_event, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %setting to i8
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 4
  %back = getelementptr inbounds %struct.i40e_vsi, ptr %1, i32 0, i32 57
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 8
  %state = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 2
  %call1 = tail call i32 @_test_and_set_bit(i32 noundef 33, ptr noundef %state) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.9) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %num_alloc_vfs = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 86
  %6 = ptrtoint ptr %num_alloc_vfs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_alloc_vfs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %vf_id)
  %cmp.not = icmp sgt i32 %7, %vf_id
  br i1 %cmp.not, label %if.end8, label %do.end5

do.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 8
  %dev7 = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev7, ptr noundef nonnull @.str.74, i32 noundef %vf_id) #12
  br label %out

if.end8:                                          ; preds = %if.end
  %flags = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 54
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 8
  %and = and i32 %11, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool9.not = icmp eq i32 %and, 0
  br i1 %tobool9.not, label %if.end16, label %do.end13

do.end13:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %3, align 8
  %dev15 = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev15, ptr noundef nonnull @.str.88) #12
  br label %out

if.end16:                                         ; preds = %if.end8
  %vf17 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 85
  %14 = ptrtoint ptr %vf17 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vf17, align 8
  %arrayidx = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id
  %trusted = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 9
  %16 = ptrtoint ptr %trusted to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %trusted, align 1, !range !506
  call void @__sanitizer_cov_trace_cmp1(i8 %17, i8 %frombool)
  %cmp21 = icmp eq i8 %17, %frombool
  br i1 %cmp21, label %if.end16.out_crit_edge, label %if.end24

if.end16.out_crit_edge:                           ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %out

if.end24:                                         ; preds = %if.end16
  %18 = ptrtoint ptr %trusted to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %frombool, ptr %trusted, align 1
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %21 = getelementptr inbounds i8, ptr %pfe.i.i, i32 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_storeN_noabort(i32 %22, i32 8)
  store i64 -1, ptr %21, align 4
  %tobool.not.i.i = icmp eq ptr %arrayidx, null
  br i1 %tobool.not.i.i, label %if.end24.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %lor.lhs.false.i.i

if.end24.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

lor.lhs.false.i.i:                                ; preds = %if.end24
  %vf_id.i.i = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 1
  %23 = ptrtoint ptr %vf_id.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %vf_id.i.i, align 4
  %conv.i.i = sext i16 %24 to i32
  %num_alloc_vfs.i.i = getelementptr inbounds %struct.i40e_pf, ptr %20, i32 0, i32 86
  %25 = ptrtoint ptr %num_alloc_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %num_alloc_vfs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %conv.i.i)
  %cmp.not.i.i = icmp sgt i32 %26, %conv.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge

lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %vf_states.i.i = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 16
  %27 = ptrtoint ptr %vf_states.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %vf_states.i.i, align 4
  %and1.i.i.i = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i, label %if.end.i.i.if.end7.i.i_crit_edge

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %29 = ptrtoint ptr %vf_states.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %vf_states.i.i, align 4
  %31 = and i32 %30, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool5.not.i.i = icmp eq i32 %31, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, label %land.lhs.true.i.i.if.end7.i.i_crit_edge

land.lhs.true.i.i.if.end7.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7.i.i

land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_notify_vf_reset.exit.i

if.end7.i.i:                                      ; preds = %land.lhs.true.i.i.if.end7.i.i_crit_edge, %if.end.i.i.if.end7.i.i_crit_edge
  %vf_base_id.i.i = getelementptr inbounds %struct.i40e_pf, ptr %20, i32 0, i32 1, i32 15, i32 33
  %32 = ptrtoint ptr %vf_base_id.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %vf_base_id.i.i, align 8
  %34 = ptrtoint ptr %pfe.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 2, ptr %pfe.i.i, align 4
  %severity.i.i = getelementptr inbounds %struct.virtchnl_pf_event, ptr %pfe.i.i, i32 0, i32 2
  %35 = ptrtoint ptr %severity.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 255, ptr %severity.i.i, align 4
  %hw12.i.i = getelementptr inbounds %struct.i40e_pf, ptr %20, i32 0, i32 1
  %36 = trunc i32 %33 to i16
  %conv13.i.i = add i16 %24, %36
  %call14.i.i = call i32 @i40e_aq_send_msg_to_vf(ptr noundef %hw12.i.i, i16 noundef zeroext %conv13.i.i, i32 noundef 17, i32 noundef 0, ptr noundef nonnull %pfe.i.i, i16 noundef zeroext 16, ptr noundef null) #9
  br label %i40e_vc_notify_vf_reset.exit.i

i40e_vc_notify_vf_reset.exit.i:                   ; preds = %if.end7.i.i, %land.lhs.true.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %lor.lhs.false.i.i.i40e_vc_notify_vf_reset.exit.i_crit_edge, %if.end24.i40e_vc_notify_vf_reset.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pfe.i.i) #9
  %arrayidx.i.i = getelementptr %struct.i40e_pf, ptr %20, i32 0, i32 2, i32 1
  %37 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %arrayidx.i.i, align 4
  %39 = and i32 %38, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool2.not.i = icmp eq i32 %39, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %i40e_vc_notify_vf_reset.exit.i.i40e_vc_reset_vf.exit_crit_edge

i40e_vc_notify_vf_reset.exit.i.i40e_vc_reset_vf.exit_crit_edge: ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %i40e_vc_reset_vf.exit

if.end4.i:                                        ; preds = %i40e_vc_notify_vf_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  %call5.i = call zeroext i1 @i40e_reset_vf(ptr noundef %arrayidx, i1 noundef zeroext false) #9
  br label %i40e_vc_reset_vf.exit

i40e_vc_reset_vf.exit:                            ; preds = %if.end4.i, %i40e_vc_notify_vf_reset.exit.i.i40e_vc_reset_vf.exit_crit_edge
  %40 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %3, align 8
  %dev32 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  %cond = select i1 %setting, ptr @.str.93, ptr @.str.94
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev32, ptr noundef nonnull @.str.91, i32 noundef %vf_id, ptr noundef nonnull %cond) #12
  %adq_enabled = getelementptr %struct.i40e_vf, ptr %15, i32 %vf_id, i32 22
  %42 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool35.not = icmp eq i8 %43, 0
  br i1 %tobool35.not, label %i40e_vc_reset_vf.exit.out_crit_edge, label %if.then36

i40e_vc_reset_vf.exit.out_crit_edge:              ; preds = %i40e_vc_reset_vf.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %out

if.then36:                                        ; preds = %i40e_vc_reset_vf.exit
  %44 = ptrtoint ptr %trusted to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %trusted, align 1, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool38.not = icmp eq i8 %45, 0
  br i1 %tobool38.not, label %do.end42, label %if.then36.out_crit_edge

if.then36.out_crit_edge:                          ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #11
  br label %out

do.end42:                                         ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #11
  %46 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %3, align 8
  %dev44 = getelementptr inbounds %struct.pci_dev, ptr %47, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev44, ptr noundef nonnull @.str.96, i32 noundef %vf_id) #12
  call fastcc void @i40e_del_all_cloud_filters(ptr noundef %arrayidx)
  br label %out

out:                                              ; preds = %do.end42, %if.then36.out_crit_edge, %i40e_vc_reset_vf.exit.out_crit_edge, %if.end16.out_crit_edge, %do.end13, %do.end5
  %ret.0 = phi i32 [ -22, %do.end5 ], [ -22, %do.end13 ], [ 0, %if.end16.out_crit_edge ], [ 0, %if.then36.out_crit_edge ], [ 0, %do.end42 ], [ 0, %i40e_vc_reset_vf.exit.out_crit_edge ]
  call void @_clear_bit(i32 noundef 33, ptr noundef %state) #9
  br label %cleanup

cleanup:                                          ; preds = %out, %do.end
  %retval.0 = phi i32 [ -11, %do.end ], [ %ret.0, %out ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @i40e_del_all_cloud_filters(ptr nocapture noundef %vf) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %cloud_filter_list = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 25
  %2 = ptrtoint ptr %cloud_filter_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cloud_filter_list, align 8
  %tobool3.not66 = icmp eq ptr %3, null
  br i1 %tobool3.not66, label %entry.for.end_crit_edge, label %land.rhs.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

land.rhs.lr.ph:                                   ; preds = %entry
  %num_tc.i = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 23
  %vf_id21 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %hw = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %asq_last_status = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 23, i32 14
  %num_cloud_filters = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 26
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %land.rhs.lr.ph
  %cfilter.067 = phi ptr [ %3, %land.rhs.lr.ph ], [ %5, %for.inc.land.rhs_crit_edge ]
  %4 = ptrtoint ptr %cfilter.067 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cfilter.067, align 4
  %seid = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter.067, i32 0, i32 5
  %6 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %seid, align 2
  %8 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vf, align 8
  %10 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %num_tc.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %cmp17.not.i = icmp eq i8 %11, 0
  br i1 %cmp17.not.i, label %land.rhs.do.end_crit_edge, label %land.rhs.for.body.i_crit_edge

land.rhs.for.body.i_crit_edge:                    ; preds = %land.rhs
  br label %for.body.i

land.rhs.do.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %land.rhs.for.body.i_crit_edge
  %i.018.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %land.rhs.for.body.i_crit_edge ]
  %vsi_id.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %i.018.i, i32 1
  %12 = ptrtoint ptr %vsi_id.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vsi_id.i, align 2
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %9, i16 noundef zeroext %13) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %land.lhs.true.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %seid3.i = getelementptr inbounds %struct.i40e_vsi, ptr %call.i, i32 0, i32 38
  %14 = ptrtoint ptr %seid3.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %seid3.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %7)
  %cmp6.i = icmp eq i16 %15, %7
  br i1 %cmp6.i, label %if.end, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.018.i, 1
  %16 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %num_tc.i, align 1
  %conv.i = zext i8 %17 to i32
  %cmp.i = icmp ult i32 %inc.i, %conv.i
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.do.end_crit_edge

for.inc.i.do.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

do.end:                                           ; preds = %for.inc.i.do.end_crit_edge, %land.rhs.do.end_crit_edge
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  %20 = ptrtoint ptr %vf_id21 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vf_id21, align 4
  %conv = sext i16 %21 to i32
  %22 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %seid, align 2
  %conv8 = zext i16 %23 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.288, i32 noundef %conv, i32 noundef %conv8) #12
  br label %for.inc

if.end:                                           ; preds = %land.lhs.true.i
  %dst_port = getelementptr inbounds %struct.i40e_cloud_filter, ptr %cfilter.067, i32 0, i32 6
  %24 = ptrtoint ptr %dst_port to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %dst_port, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool9.not = icmp eq i16 %25, 0
  br i1 %tobool9.not, label %if.else, label %if.then10

if.then10:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %call11 = tail call i32 @i40e_add_del_cloud_filter_big_buf(ptr noundef nonnull %call.i, ptr noundef nonnull %cfilter.067, i1 noundef zeroext false) #9
  br label %if.end13

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %call12 = tail call i32 @i40e_add_del_cloud_filter(ptr noundef nonnull %call.i, ptr noundef nonnull %cfilter.067, i1 noundef zeroext false) #9
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  %ret.0 = phi i32 [ %call11, %if.then10 ], [ %call12, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool14.not = icmp eq i32 %ret.0, 0
  br i1 %tobool14.not, label %if.end13.if.end27_crit_edge, label %do.end18

if.end13.if.end27_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end27

do.end18:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %1, align 8
  %dev20 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  %28 = ptrtoint ptr %vf_id21 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %vf_id21, align 4
  %conv22 = sext i16 %29 to i32
  %call23 = tail call ptr @i40e_stat_str(ptr noundef %hw, i32 noundef %ret.0) #9
  %30 = ptrtoint ptr %asq_last_status to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %asq_last_status, align 8
  %call26 = tail call ptr @i40e_aq_str(ptr noundef %hw, i32 noundef %31) #9
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev20, ptr noundef nonnull @.str.276, i32 noundef %conv22, ptr noundef %call23, ptr noundef %call26) #12
  br label %if.end27

if.end27:                                         ; preds = %do.end18, %if.end13.if.end27_crit_edge
  %32 = ptrtoint ptr %cfilter.067 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %cfilter.067, align 4
  %pprev2.i.i = getelementptr inbounds %struct.hlist_node, ptr %cfilter.067, i32 0, i32 1
  %34 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pprev2.i.i, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %33, ptr %35, align 4
  %tobool.not.i.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.i, label %if.end27.hlist_del.exit_crit_edge, label %do.body13.i.i

if.end27.hlist_del.exit_crit_edge:                ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %hlist_del.exit

do.body13.i.i:                                    ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %33, i32 0, i32 1
  %37 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %35, ptr %pprev14.i.i, align 4
  br label %hlist_del.exit

hlist_del.exit:                                   ; preds = %do.body13.i.i, %if.end27.hlist_del.exit_crit_edge
  %38 = ptrtoint ptr %cfilter.067 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr inttoptr (i32 256 to ptr), ptr %cfilter.067, align 4
  %39 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  tail call void @kfree(ptr noundef nonnull %cfilter.067) #9
  %40 = ptrtoint ptr %num_cloud_filters to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %num_cloud_filters, align 4
  %dec = add i16 %41, -1
  store i16 %dec, ptr %num_cloud_filters, align 4
  br label %for.inc

for.inc:                                          ; preds = %hlist_del.exit, %do.end
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %for.inc.for.end_crit_edge, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.rhs

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @i40e_get_vf_stats(ptr nocapture noundef readonly %netdev, i32 noundef %vf_id, ptr nocapture noundef writeonly %vf_stats) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 4
  %back = getelementptr inbounds %struct.i40e_vsi, ptr %1, i32 0, i32 57
  %2 = ptrtoint ptr %back to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %back, align 8
  %num_alloc_vfs.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 86
  %4 = ptrtoint ptr %num_alloc_vfs.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_alloc_vfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %vf_id)
  %cmp.not.i = icmp sgt i32 %5, %vf_id
  br i1 %cmp.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %3, align 8
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.74, i32 noundef %vf_id) #12
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %vf1.i = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 85
  %8 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vf1.i, align 8
  %lan_vsi_id.i = getelementptr %struct.i40e_vf, ptr %9, i32 %vf_id, i32 11
  %10 = ptrtoint ptr %lan_vsi_id.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %lan_vsi_id.i, align 8
  %call.i = tail call ptr @i40e_find_vsi_from_id(ptr noundef %3, i16 noundef zeroext %11) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i.cleanup_crit_edge, label %if.end

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %if.end.i
  %12 = ptrtoint ptr %vf1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vf1.i, align 8
  %vf_states = getelementptr %struct.i40e_vf, ptr %13, i32 %vf_id, i32 16
  %14 = ptrtoint ptr %vf_states to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %vf_states, align 4
  %and1.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool5.not = icmp eq i32 %and1.i, 0
  br i1 %tobool5.not, label %do.end, label %if.end7

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %3, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.98, i32 noundef %vf_id) #12
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %vsi8 = getelementptr inbounds %struct.i40e_pf, ptr %3, i32 0, i32 74
  %18 = ptrtoint ptr %vsi8 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vsi8, align 8
  %lan_vsi_idx = getelementptr %struct.i40e_vf, ptr %13, i32 %vf_id, i32 10
  %20 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %21 to i32
  %arrayidx9 = getelementptr ptr, ptr %19, i32 %idxprom
  %22 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx9, align 4
  %tobool10.not = icmp eq ptr %23, null
  br i1 %tobool10.not, label %if.end7.cleanup_crit_edge, label %if.end12

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @i40e_update_eth_stats(ptr noundef nonnull %23) #9
  %eth_stats = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12
  %24 = call ptr @memset(ptr %vf_stats, i32 0, i32 64)
  %rx_unicast = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 1
  %25 = ptrtoint ptr %rx_unicast to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %rx_unicast, align 8
  %rx_broadcast = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 3
  %27 = ptrtoint ptr %rx_broadcast to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %rx_broadcast, align 8
  %add = add i64 %28, %26
  %rx_multicast = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 2
  %29 = ptrtoint ptr %rx_multicast to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %rx_multicast, align 8
  %add13 = add i64 %add, %30
  %31 = ptrtoint ptr %vf_stats to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %add13, ptr %vf_stats, align 8
  %tx_unicast = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 7
  %32 = ptrtoint ptr %tx_unicast to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %tx_unicast, align 8
  %tx_broadcast = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 9
  %34 = ptrtoint ptr %tx_broadcast to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %tx_broadcast, align 8
  %add14 = add i64 %35, %33
  %tx_multicast = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 8
  %36 = ptrtoint ptr %tx_multicast to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %tx_multicast, align 8
  %add15 = add i64 %add14, %37
  %tx_packets = getelementptr inbounds %struct.ifla_vf_stats, ptr %vf_stats, i32 0, i32 1
  %38 = ptrtoint ptr %tx_packets to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %add15, ptr %tx_packets, align 8
  %39 = ptrtoint ptr %eth_stats to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %eth_stats, align 8
  %rx_bytes16 = getelementptr inbounds %struct.ifla_vf_stats, ptr %vf_stats, i32 0, i32 2
  %41 = ptrtoint ptr %rx_bytes16 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %40, ptr %rx_bytes16, align 8
  %tx_bytes = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 6
  %42 = ptrtoint ptr %tx_bytes to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %tx_bytes, align 8
  %tx_bytes17 = getelementptr inbounds %struct.ifla_vf_stats, ptr %vf_stats, i32 0, i32 3
  %44 = ptrtoint ptr %tx_bytes17 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %tx_bytes17, align 8
  %45 = load i64, ptr %rx_broadcast, align 8
  %broadcast = getelementptr inbounds %struct.ifla_vf_stats, ptr %vf_stats, i32 0, i32 4
  %46 = ptrtoint ptr %broadcast to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %broadcast, align 8
  %47 = load i64, ptr %rx_multicast, align 8
  %multicast = getelementptr inbounds %struct.ifla_vf_stats, ptr %vf_stats, i32 0, i32 5
  %48 = ptrtoint ptr %multicast to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %multicast, align 8
  %rx_discards = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 4
  %49 = ptrtoint ptr %rx_discards to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %rx_discards, align 8
  %rx_dropped = getelementptr inbounds %struct.ifla_vf_stats, ptr %vf_stats, i32 0, i32 6
  %51 = ptrtoint ptr %rx_dropped to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %rx_dropped, align 8
  %tx_discards = getelementptr inbounds %struct.i40e_vsi, ptr %23, i32 0, i32 12, i32 10
  %52 = ptrtoint ptr %tx_discards to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %tx_discards, align 8
  %tx_dropped = getelementptr inbounds %struct.ifla_vf_stats, ptr %vf_stats, i32 0, i32 7
  %54 = ptrtoint ptr %tx_dropped to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %tx_dropped, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end7.cleanup_crit_edge, %do.end, %if.end.i.cleanup_crit_edge, %do.end.i
  %retval.0 = phi i32 [ 0, %if.end12 ], [ -16, %do.end ], [ -22, %if.end7.cleanup_crit_edge ], [ -22, %do.end.i ], [ -22, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_update_eth_stats(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_notify_client_of_vf_reset(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_alloc_vsi_res(ptr noundef %vf, i8 noundef zeroext %idx) unnamed_addr #0 align 64 {
entry:
  %broadcast = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %vsi2 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 74
  %2 = ptrtoint ptr %vsi2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vsi2, align 8
  %lan_vsi = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 71
  %4 = ptrtoint ptr %lan_vsi to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %lan_vsi, align 8
  %idxprom = zext i16 %5 to i32
  %arrayidx = getelementptr ptr, ptr %3, i32 %idxprom
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %seid = getelementptr inbounds %struct.i40e_vsi, ptr %7, i32 0, i32 38
  %8 = ptrtoint ptr %seid to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %seid, align 2
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %10 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %11 to i32
  %call = tail call ptr @i40e_vsi_setup(ptr noundef %1, i8 noundef zeroext 6, i16 noundef zeroext %9, i32 noundef %conv) #9
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  %14 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vf_id, align 4
  %conv4 = sext i16 %15 to i32
  %asq_last_status = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 23, i32 14
  %16 = ptrtoint ptr %asq_last_status to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %asq_last_status, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.107, i32 noundef %conv4, i32 noundef %17) #12
  br label %error_alloc_vsi_res

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %idx)
  %tobool5.not = icmp eq i8 %idx, 0
  br i1 %tobool5.not, label %if.then6, label %if.end.if.end75_crit_edge

if.end.if.end75_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end75

if.then6:                                         ; preds = %if.end
  %hw_features = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 53
  %18 = ptrtoint ptr %hw_features to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %hw_features, align 4
  %and = and i32 %19, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  %cond = select i1 %tobool7.not, i64 -9223237765439684608, i64 -9223231712220151808
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %broadcast) #9
  %idx8 = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 58
  %20 = ptrtoint ptr %idx8 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %idx8, align 4
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %22 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %21, ptr %lan_vsi_idx, align 2
  %id = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 39
  %23 = ptrtoint ptr %id to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %id, align 4
  %lan_vsi_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 11
  %25 = ptrtoint ptr %lan_vsi_id to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 %24, ptr %lan_vsi_id, align 8
  %port_vlan_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 7
  %26 = ptrtoint ptr %port_vlan_id to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %port_vlan_id, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %tobool9.not = icmp eq i16 %27, 0
  br i1 %tobool9.not, label %if.then6.if.end13_crit_edge, label %if.then10

if.then6.if.end13_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end13

if.then10:                                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  %call12 = tail call i32 @i40e_vsi_add_pvid(ptr noundef nonnull %call, i16 noundef zeroext %27) #9
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.then6.if.end13_crit_edge
  %mac_filter_hash_lock = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 7
  tail call void @_raw_spin_lock_bh(ptr noundef %mac_filter_hash_lock) #9
  %default_lan_addr = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 6
  %28 = ptrtoint ptr %default_lan_addr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %default_lan_addr, align 4
  %30 = and i32 %29, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.i.not.i = icmp eq i32 %30, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %if.end13.if.end33_crit_edge

if.end13.if.end33_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end33

is_valid_ether_addr.exit:                         ; preds = %if.end13
  %add.ptr.i.i = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 6, i32 0, i32 4
  %31 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %32 to i32
  %or.i.i = or i32 %29, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.if.end33_crit_edge, label %if.then15

is_valid_ether_addr.exit.if.end33_crit_edge:      ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end33

if.then15:                                        ; preds = %is_valid_ether_addr.exit
  %call19 = tail call ptr @i40e_add_mac_filter(ptr noundef nonnull %call, ptr noundef %default_lan_addr) #9
  %tobool20.not = icmp eq ptr %call19, null
  br i1 %tobool20.not, label %do.end24, label %if.then15.if.end33_crit_edge

if.then15.if.end33_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end33

do.end24:                                         ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  %33 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %1, align 8
  %dev26 = getelementptr inbounds %struct.pci_dev, ptr %34, i32 0, i32 44
  %35 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %vf_id, align 4
  %conv31 = sext i16 %36 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev26, ptr noundef nonnull @.str.110, ptr noundef %default_lan_addr, i32 noundef %conv31) #12
  br label %if.end33

if.end33:                                         ; preds = %do.end24, %if.then15.if.end33_crit_edge, %is_valid_ether_addr.exit.if.end33_crit_edge, %if.end13.if.end33_crit_edge
  %37 = call ptr @memset(ptr %broadcast, i32 255, i32 6)
  %call36 = call ptr @i40e_add_mac_filter(ptr noundef nonnull %call, ptr noundef nonnull %broadcast) #9
  %tobool37.not = icmp eq ptr %call36, null
  br i1 %tobool37.not, label %do.end41, label %if.end33.if.end44_crit_edge

if.end33.if.end44_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end44

do.end41:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #11
  %38 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %1, align 8
  %dev43 = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev43, ptr noundef nonnull @.str.113) #12
  br label %if.end44

if.end44:                                         ; preds = %do.end41, %if.end33.if.end44_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %mac_filter_hash_lock) #9
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !545
  call void @arm_heavy_mb() #9
  %conv49 = trunc i64 %cond to i32
  %40 = lshr exact i32 %conv49, 24
  %hw50 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %41 = ptrtoint ptr %hw50 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %hw50, align 8
  %43 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %vf_id, align 4
  %conv52 = sext i16 %44 to i32
  %mul = shl nsw i32 %conv52, 2
  %add53 = add nsw i32 %mul, 2295808
  %add.ptr = getelementptr i8, ptr %42, i32 %add53
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %40) #9, !srcloc !498
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #9, !srcloc !546
  call void @arm_heavy_mb() #9
  %shr = lshr i64 %cond, 32
  %conv57 = trunc i64 %shr to i32
  %45 = call i32 @llvm.bswap.i32(i32 %conv57)
  %46 = ptrtoint ptr %hw50 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %hw50, align 8
  %48 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %vf_id, align 4
  %conv61 = sext i16 %49 to i32
  %mul62 = shl nsw i32 %conv61, 2
  %add64 = add nsw i32 %mul62, 2296832
  %add.ptr65 = getelementptr i8, ptr %47, i32 %add64
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr65, i32 %45) #9, !srcloc !498
  %call66 = call i32 @i40e_sync_vsi_filters(ptr noundef nonnull %call) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66)
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %if.end44.if.end74_crit_edge, label %do.end71

if.end44.if.end74_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end74

do.end71:                                         ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #11
  %50 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %1, align 8
  %dev73 = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev73, ptr noundef nonnull @.str.27) #12
  br label %if.end74

if.end74:                                         ; preds = %do.end71, %if.end44.if.end74_crit_edge
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %broadcast) #9
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end.if.end75_crit_edge
  %ret.0 = phi i32 [ 0, %if.end.if.end75_crit_edge ], [ %call66, %if.end74 ]
  %adq_enabled = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 22
  %52 = ptrtoint ptr %adq_enabled to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %adq_enabled, align 2, !range !506
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool76.not = icmp eq i8 %53, 0
  br i1 %tobool76.not, label %if.end75.if.end85_crit_edge, label %if.then77

if.end75.if.end85_crit_edge:                      ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end85

if.then77:                                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #11
  %idx78 = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 58
  %54 = ptrtoint ptr %idx78 to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %idx78, align 4
  %idxprom79 = zext i8 %idx to i32
  %arrayidx80 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %idxprom79
  %56 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_store2_noabort(i32 %56)
  store i16 %55, ptr %arrayidx80, align 8
  %id81 = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 39
  %57 = ptrtoint ptr %id81 to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %id81, align 4
  %vsi_id = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %idxprom79, i32 1
  %59 = ptrtoint ptr %vsi_id to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 %58, ptr %vsi_id, align 2
  br label %if.end85

if.end85:                                         ; preds = %if.then77, %if.end75.if.end85_crit_edge
  %tx_rate = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 17
  %60 = ptrtoint ptr %tx_rate to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %tx_rate, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool86.not = icmp eq i32 %61, 0
  br i1 %tobool86.not, label %if.end101, label %if.end101.thread

if.end101.thread:                                 ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #11
  %conv89 = zext i32 %61 to i64
  br label %if.then103

if.end101:                                        ; preds = %if.end85
  %idxprom91 = zext i8 %idx to i32
  %max_tx_rate93 = getelementptr %struct.i40e_vf, ptr %vf, i32 0, i32 24, i32 %idxprom91, i32 3
  %62 = ptrtoint ptr %max_tx_rate93 to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %max_tx_rate93, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %63)
  %tobool102.not = icmp eq i64 %63, 0
  br i1 %tobool102.not, label %if.end101.error_alloc_vsi_res_crit_edge, label %if.end101.if.then103_crit_edge

if.end101.if.then103_crit_edge:                   ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then103

if.end101.error_alloc_vsi_res_crit_edge:          ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_alloc_vsi_res

if.then103:                                       ; preds = %if.end101.if.then103_crit_edge, %if.end101.thread
  %max_tx_rate.0178 = phi i64 [ %conv89, %if.end101.thread ], [ %63, %if.end101.if.then103_crit_edge ]
  %64 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -6640827866535438582, i64 %max_tx_rate.0178, i32 0) #16, !srcloc !547
  %asmresult.i.i.i = extractvalue { i64, i32 } %64, 0
  %asmresult4.i.i.i = extractvalue { i64, i32 } %64, 1
  %65 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -6640827866535438582, i64 %max_tx_rate.0178, i64 %asmresult.i.i.i, i32 %asmresult4.i.i.i) #16, !srcloc !548
  %asmresult10.i.i.i = extractvalue { i64, i32 } %65, 0
  %div1581.i.i = lshr i64 %asmresult10.i.i.i, 5
  %hw105 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  %seid106 = getelementptr inbounds %struct.i40e_vsi, ptr %call, i32 0, i32 38
  %66 = ptrtoint ptr %seid106 to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %seid106, align 2
  %conv107 = trunc i64 %div1581.i.i to i16
  %call108 = call i32 @i40e_aq_config_vsi_bw_limit(ptr noundef %hw105, i16 noundef zeroext %67, i16 noundef zeroext %conv107, i8 noundef zeroext 0, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call108)
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %if.then103.error_alloc_vsi_res_crit_edge, label %do.end113

if.then103.error_alloc_vsi_res_crit_edge:         ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #11
  br label %error_alloc_vsi_res

do.end113:                                        ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #11
  %68 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %1, align 8
  %dev115 = getelementptr inbounds %struct.pci_dev, ptr %69, i32 0, i32 44
  %70 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %vf_id, align 4
  %conv117 = sext i16 %71 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev115, ptr noundef nonnull @.str.118, i32 noundef %conv117, i32 noundef %call108) #12
  br label %error_alloc_vsi_res

error_alloc_vsi_res:                              ; preds = %do.end113, %if.then103.error_alloc_vsi_res_crit_edge, %if.end101.error_alloc_vsi_res_crit_edge, %do.end
  %ret.1 = phi i32 [ %call108, %do.end113 ], [ 0, %if.then103.error_alloc_vsi_res_crit_edge ], [ %ret.0, %if.end101.error_alloc_vsi_res_crit_edge ], [ -2, %do.end ]
  ret i32 %ret.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @i40e_vsi_setup(ptr noundef, i8 noundef zeroext, i16 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @i40e_add_mac_filter(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_aq_config_vsi_bw_limit(ptr noundef, i16 noundef zeroext, i16 noundef zeroext, i8 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_write_rx_ctl(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @i40e_find_vsi_from_id(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_vsi_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_vf_client_capable(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_update_adq_vsi_queues(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_clear_lan_rx_queue_context(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_set_lan_rx_queue_context(ptr noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_clear_lan_tx_queue_context(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_set_lan_tx_queue_context(ptr noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_vsi_start_rings(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_control_wait_rx_q(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_control_wait_tx_q(i32 noundef, ptr noundef, i32 noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @i40e_find_mac(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_count_filters(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_vlan_stripping_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_vsi_add_vlan(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_aq_set_vsi_uc_promisc_on_vlan(ptr noundef, i16 noundef zeroext, i1 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_aq_set_vsi_mc_promisc_on_vlan(ptr noundef, i16 noundef zeroext, i1 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_vsi_kill_vlan(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_notify_client_of_vf_msg(ptr noundef, i32 noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_config_rss(ptr noundef, ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @i40e_vlan_stripping_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_validate_cloud_filter(ptr noundef %vf, ptr nocapture noundef readonly %tc_filter) unnamed_addr #0 align 64 {
entry:
  %data = alloca %struct.virtchnl_l4_spec, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %mask1 = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 1
  %0 = ptrtoint ptr %mask1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %mask.sroa.0.0.copyload = load i8, ptr %mask1, align 4
  %mask.sroa.5254.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 1, i32 0, i32 1
  %1 = ptrtoint ptr %mask.sroa.5254.0.mask1.sroa_idx to i32
  call void @__asan_load1_noabort(i32 %1)
  %mask.sroa.5254.0.copyload = load i8, ptr %mask.sroa.5254.0.mask1.sroa_idx, align 2
  %mask.sroa.7256.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 1, i32 0, i32 2
  %2 = ptrtoint ptr %mask.sroa.7256.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %2)
  %mask.sroa.7256.0.copyload = load i16, ptr %mask.sroa.7256.0.mask1.sroa_idx, align 4
  %mask.sroa.9258.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 1, i32 0, i32 5
  %3 = ptrtoint ptr %mask.sroa.9258.0.mask1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %3)
  %mask.sroa.9258.0.copyload = load i32, ptr %mask.sroa.9258.0.mask1.sroa_idx, align 4
  %mask.sroa.10259.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 1, i32 0, i32 6
  %4 = ptrtoint ptr %mask.sroa.10259.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %4)
  %mask.sroa.10259.0.copyload = load i16, ptr %mask.sroa.10259.0.mask1.sroa_idx, align 4
  %mask.sroa.11.0.mask1.sroa_idx = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 1, i32 0, i32 7
  %5 = ptrtoint ptr %mask.sroa.11.0.mask1.sroa_idx to i32
  call void @__asan_load2_noabort(i32 %5)
  %mask.sroa.11.0.copyload = load i16, ptr %mask.sroa.11.0.mask1.sroa_idx, align 2
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %data) #9
  %6 = call ptr @memcpy(ptr %data, ptr %tc_filter, i32 52)
  %7 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vf, align 8
  %action = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 3
  %9 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %action, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %8, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %12, i32 0, i32 44
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %13 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %14 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.236, i32 noundef %conv) #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %action_meta = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 4
  %15 = ptrtoint ptr %action_meta to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %action_meta, align 4
  %17 = add i32 %16, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %17)
  %18 = icmp ult i32 %17, -4
  br i1 %18, label %do.end10, label %if.end16

do.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %19 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %8, align 8
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44
  %vf_id13 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %21 = ptrtoint ptr %vf_id13 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %vf_id13, align 4
  %conv14 = sext i16 %22 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev12, ptr noundef nonnull @.str.239, i32 noundef %conv14, i32 noundef %16) #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %mask.sroa.5254.0.copyload)
  %tobool18.not = icmp ne i8 %mask.sroa.5254.0.copyload, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mask.sroa.9258.0.copyload)
  %tobool20.not = icmp eq i32 %mask.sroa.9258.0.copyload, 0
  %or.cond291 = select i1 %tobool18.not, i1 %tobool20.not, i1 false
  br i1 %or.cond291, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.end16
  %vsi22 = getelementptr inbounds %struct.i40e_pf, ptr %8, i32 0, i32 74
  %23 = ptrtoint ptr %vsi22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vsi22, align 8
  %lan_vsi_idx = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 10
  %25 = ptrtoint ptr %lan_vsi_idx to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %lan_vsi_idx, align 2
  %idxprom = zext i16 %26 to i32
  %arrayidx23 = getelementptr ptr, ptr %24, i32 %idxprom
  %27 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx23, align 4
  %dst_mac24 = getelementptr inbounds %struct.virtchnl_l4_spec, ptr %data, i32 0, i32 1
  %call = call ptr @i40e_find_mac(ptr noundef %28, ptr noundef %dst_mac24) #9
  %tobool25.not = icmp eq ptr %call, null
  br i1 %tobool25.not, label %do.end29, label %if.end36

do.end29:                                         ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #11
  %29 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %8, align 8
  %dev31 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  %vf_id34 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %31 = ptrtoint ptr %vf_id34 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %vf_id34, align 4
  %conv35 = sext i16 %32 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev31, ptr noundef nonnull @.str.242, ptr noundef %dst_mac24, i32 noundef %conv35) #12
  br label %cleanup

if.end36:                                         ; preds = %if.then21
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %mask.sroa.7256.0.copyload)
  %tobool37.not = icmp eq i16 %mask.sroa.7256.0.copyload, 0
  br i1 %tobool37.not, label %if.end36.if.end96_crit_edge, label %for.cond.preheader

if.end36.if.end96_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end96

for.cond.preheader:                               ; preds = %if.end36
  %vlan_id54 = getelementptr inbounds %struct.virtchnl_l4_spec, ptr %data, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc70.for.body_crit_edge, %for.cond.preheader
  %bkt.0308 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.inc70.for.body_crit_edge ]
  %arrayidx43 = getelementptr %struct.i40e_vsi, ptr %28, i32 0, i32 8, i32 %bkt.0308
  br label %for.cond46

for.cond46:                                       ; preds = %land.rhs48.for.cond46_crit_edge, %for.body
  %f.1.in = phi ptr [ %arrayidx43, %for.body ], [ %f.1, %land.rhs48.for.cond46_crit_edge ]
  %33 = ptrtoint ptr %f.1.in to i32
  call void @__asan_load4_noabort(i32 %33)
  %f.1 = load ptr, ptr %f.1.in, align 4
  %tobool47.not = icmp eq ptr %f.1, null
  br i1 %tobool47.not, label %for.inc70, label %land.rhs48

land.rhs48:                                       ; preds = %for.cond46
  %vlan = getelementptr inbounds %struct.i40e_mac_filter, ptr %f.1, i32 0, i32 2
  %34 = ptrtoint ptr %vlan to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %vlan, align 2
  %conv53 = sext i16 %35 to i32
  %36 = ptrtoint ptr %vlan_id54 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %vlan_id54, align 4
  %conv55 = zext i16 %37 to i32
  %cmp56 = icmp eq i32 %conv53, %conv55
  br i1 %cmp56, label %land.rhs48.if.end96_crit_edge, label %land.rhs48.for.cond46_crit_edge

land.rhs48.for.cond46_crit_edge:                  ; preds = %land.rhs48
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond46

land.rhs48.if.end96_crit_edge:                    ; preds = %land.rhs48
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end96

for.inc70:                                        ; preds = %for.cond46
  %inc = add nuw nsw i32 %bkt.0308, 1
  %cmp41 = icmp ult i32 %bkt.0308, 255
  br i1 %cmp41, label %for.inc70.for.body_crit_edge, label %do.end76

for.inc70.for.body_crit_edge:                     ; preds = %for.inc70
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

do.end76:                                         ; preds = %for.inc70
  call void @__sanitizer_cov_trace_pc() #11
  %38 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %8, align 8
  %dev78 = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 44
  %vf_id79 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %40 = ptrtoint ptr %vf_id79 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %vf_id79, align 4
  %conv80 = sext i16 %41 to i32
  %42 = ptrtoint ptr %vlan_id54 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %vlan_id54, align 4
  %conv82 = zext i16 %43 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev78, ptr noundef nonnull @.str.245, i32 noundef %conv80, i32 noundef %conv82) #12
  br label %cleanup

if.else:                                          ; preds = %if.end16
  %vf_caps = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 15
  %44 = ptrtoint ptr %vf_caps to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %vf_caps, align 4
  %and1.i = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool86.not = icmp eq i32 %and1.i, 0
  br i1 %tobool86.not, label %do.end90, label %if.else.if.end96_crit_edge

if.else.if.end96_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end96

do.end90:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %46 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %8, align 8
  %dev92 = getelementptr inbounds %struct.pci_dev, ptr %47, i32 0, i32 44
  %vf_id93 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %48 = ptrtoint ptr %vf_id93 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %vf_id93, align 4
  %conv94 = sext i16 %49 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev92, ptr noundef nonnull @.str.248, i32 noundef %conv94) #12
  br label %cleanup

if.end96:                                         ; preds = %if.else.if.end96_crit_edge, %land.rhs48.if.end96_crit_edge, %if.end36.if.end96_crit_edge
  %dst_mac100 = getelementptr inbounds %struct.virtchnl_l4_spec, ptr %data, i32 0, i32 1
  %50 = ptrtoint ptr %dst_mac100 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %dst_mac100, align 2
  %and285 = and i8 %51, %mask.sroa.5254.0.copyload
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %and285)
  %tobool103.not = icmp eq i8 %and285, 0
  br i1 %tobool103.not, label %if.end96.if.end125_crit_edge, label %if.then104

if.end96.if.end125_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end125

if.then104:                                       ; preds = %if.end96
  %52 = ptrtoint ptr %dst_mac100 to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %dst_mac100, align 2
  %add.ptr1.i = getelementptr inbounds %struct.virtchnl_l4_spec, ptr %data, i32 0, i32 1, i32 2
  %54 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %add.ptr1.i, align 4
  %and9.i = and i16 %55, %53
  %add.ptr3.i = getelementptr inbounds %struct.virtchnl_l4_spec, ptr %data, i32 0, i32 1, i32 4
  %56 = ptrtoint ptr %add.ptr3.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %add.ptr3.i, align 2
  %and510.i = and i16 %and9.i, %57
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i)
  %cmp.i = icmp eq i16 %and510.i, -1
  br i1 %cmp.i, label %if.then104.do.end117_crit_edge, label %lor.lhs.false109

if.then104.do.end117_crit_edge:                   ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end117

lor.lhs.false109:                                 ; preds = %if.then104
  %58 = ptrtoint ptr %dst_mac100 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %dst_mac100, align 4
  %conv.i = zext i16 %57 to i32
  %or.i = or i32 %59, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i297 = icmp eq i32 %or.i, 0
  br i1 %cmp.i297, label %lor.lhs.false109.do.end117_crit_edge, label %lor.lhs.false109.if.end125_crit_edge

lor.lhs.false109.if.end125_crit_edge:             ; preds = %lor.lhs.false109
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end125

lor.lhs.false109.do.end117_crit_edge:             ; preds = %lor.lhs.false109
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end117

do.end117:                                        ; preds = %lor.lhs.false109.do.end117_crit_edge, %if.then104.do.end117_crit_edge
  %60 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %8, align 8
  %dev119 = getelementptr inbounds %struct.pci_dev, ptr %61, i32 0, i32 44
  %vf_id120 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %62 = ptrtoint ptr %vf_id120 to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %vf_id120, align 4
  %conv121 = sext i16 %63 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev119, ptr noundef nonnull @.str.251, i32 noundef %conv121, ptr noundef %dst_mac100) #12
  br label %cleanup

if.end125:                                        ; preds = %lor.lhs.false109.if.end125_crit_edge, %if.end96.if.end125_crit_edge
  %64 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %data, align 4
  %and131286 = and i8 %65, %mask.sroa.0.0.copyload
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %and131286)
  %tobool132.not = icmp eq i8 %and131286, 0
  br i1 %tobool132.not, label %if.end125.if.end154_crit_edge, label %if.then133

if.end125.if.end154_crit_edge:                    ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end154

if.then133:                                       ; preds = %if.end125
  %66 = ptrtoint ptr %data to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %data, align 4
  %add.ptr1.i298 = getelementptr inbounds i8, ptr %data, i32 2
  %68 = ptrtoint ptr %add.ptr1.i298 to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %add.ptr1.i298, align 2
  %and9.i299 = and i16 %69, %67
  %add.ptr3.i300 = getelementptr inbounds i8, ptr %data, i32 4
  %70 = ptrtoint ptr %add.ptr3.i300 to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %add.ptr3.i300, align 4
  %and510.i301 = and i16 %and9.i299, %71
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i301)
  %cmp.i302 = icmp eq i16 %and510.i301, -1
  br i1 %cmp.i302, label %if.then133.do.end146_crit_edge, label %lor.lhs.false138

if.then133.do.end146_crit_edge:                   ; preds = %if.then133
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end146

lor.lhs.false138:                                 ; preds = %if.then133
  %72 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %data, align 4
  %conv.i304 = zext i16 %71 to i32
  %or.i305 = or i32 %73, %conv.i304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i305)
  %cmp.i306 = icmp eq i32 %or.i305, 0
  br i1 %cmp.i306, label %lor.lhs.false138.do.end146_crit_edge, label %lor.lhs.false138.if.end154_crit_edge

lor.lhs.false138.if.end154_crit_edge:             ; preds = %lor.lhs.false138
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end154

lor.lhs.false138.do.end146_crit_edge:             ; preds = %lor.lhs.false138
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end146

do.end146:                                        ; preds = %lor.lhs.false138.do.end146_crit_edge, %if.then133.do.end146_crit_edge
  %74 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %8, align 8
  %dev148 = getelementptr inbounds %struct.pci_dev, ptr %75, i32 0, i32 44
  %vf_id149 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %76 = ptrtoint ptr %vf_id149 to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %vf_id149, align 4
  %conv150 = sext i16 %77 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev148, ptr noundef nonnull @.str.254, i32 noundef %conv150, ptr noundef nonnull %data) #12
  br label %cleanup

if.end154:                                        ; preds = %lor.lhs.false138.if.end154_crit_edge, %if.end125.if.end154_crit_edge
  %dst_port156 = getelementptr inbounds %struct.virtchnl_l4_spec, ptr %data, i32 0, i32 7
  %78 = ptrtoint ptr %dst_port156 to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %dst_port156, align 2
  %and158287 = and i16 %79, %mask.sroa.11.0.copyload
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and158287)
  %tobool159.not = icmp ne i16 %and158287, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %79)
  %tobool162.not = icmp eq i16 %79, 0
  %or.cond294 = and i1 %tobool162.not, %tobool159.not
  br i1 %or.cond294, label %do.end166, label %if.end172

do.end166:                                        ; preds = %if.end154
  call void @__sanitizer_cov_trace_pc() #11
  %80 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %8, align 8
  %dev168 = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  %vf_id169 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %82 = ptrtoint ptr %vf_id169 to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %vf_id169, align 4
  %conv170 = sext i16 %83 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev168, ptr noundef nonnull @.str.257, i32 noundef %conv170) #12
  br label %cleanup

if.end172:                                        ; preds = %if.end154
  %src_port174 = getelementptr inbounds %struct.virtchnl_l4_spec, ptr %data, i32 0, i32 6
  %84 = ptrtoint ptr %src_port174 to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %src_port174, align 4
  %and176288 = and i16 %85, %mask.sroa.10259.0.copyload
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and176288)
  %tobool177.not = icmp ne i16 %and176288, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %85)
  %tobool180.not = icmp eq i16 %85, 0
  %or.cond295 = and i1 %tobool180.not, %tobool177.not
  br i1 %or.cond295, label %do.end184, label %if.end190

do.end184:                                        ; preds = %if.end172
  call void @__sanitizer_cov_trace_pc() #11
  %86 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %8, align 8
  %dev186 = getelementptr inbounds %struct.pci_dev, ptr %87, i32 0, i32 44
  %vf_id187 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %88 = ptrtoint ptr %vf_id187 to i32
  call void @__asan_load2_noabort(i32 %88)
  %89 = load i16, ptr %vf_id187, align 4
  %conv188 = sext i16 %89 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev186, ptr noundef nonnull @.str.260, i32 noundef %conv188) #12
  br label %cleanup

if.end190:                                        ; preds = %if.end172
  %flow_type = getelementptr inbounds %struct.virtchnl_filter, ptr %tc_filter, i32 0, i32 2
  %90 = ptrtoint ptr %flow_type to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %flow_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %91)
  %switch = icmp ult i32 %91, 2
  br i1 %switch, label %if.end205, label %do.end200

do.end200:                                        ; preds = %if.end190
  call void @__sanitizer_cov_trace_pc() #11
  %92 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %8, align 8
  %dev202 = getelementptr inbounds %struct.pci_dev, ptr %93, i32 0, i32 44
  %vf_id203 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %94 = ptrtoint ptr %vf_id203 to i32
  call void @__asan_load2_noabort(i32 %94)
  %95 = load i16, ptr %vf_id203, align 4
  %conv204 = sext i16 %95 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev202, ptr noundef nonnull @.str.263, i32 noundef %conv204) #12
  br label %cleanup

if.end205:                                        ; preds = %if.end190
  %vlan_id208 = getelementptr inbounds %struct.virtchnl_l4_spec, ptr %data, i32 0, i32 2
  %96 = ptrtoint ptr %vlan_id208 to i32
  call void @__asan_load2_noabort(i32 %96)
  %97 = load i16, ptr %vlan_id208, align 4
  %and210289 = and i16 %97, %mask.sroa.7256.0.copyload
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and210289)
  %tobool211.not = icmp ne i16 %and210289, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 4095, i16 %97)
  %cmp215 = icmp ugt i16 %97, 4095
  %or.cond296 = and i1 %cmp215, %tobool211.not
  br i1 %or.cond296, label %do.end220, label %if.end205.cleanup_crit_edge

if.end205.cleanup_crit_edge:                      ; preds = %if.end205
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.end220:                                        ; preds = %if.end205
  call void @__sanitizer_cov_trace_pc() #11
  %98 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %8, align 8
  %dev222 = getelementptr inbounds %struct.pci_dev, ptr %99, i32 0, i32 44
  %vf_id223 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %100 = ptrtoint ptr %vf_id223 to i32
  call void @__asan_load2_noabort(i32 %100)
  %101 = load i16, ptr %vf_id223, align 4
  %conv224 = sext i16 %101 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev222, ptr noundef nonnull @.str.266, i32 noundef %conv224) #12
  br label %cleanup

cleanup:                                          ; preds = %do.end220, %if.end205.cleanup_crit_edge, %do.end200, %do.end184, %do.end166, %do.end146, %do.end117, %do.end90, %do.end76, %do.end29, %do.end10, %do.end
  %retval.0 = phi i32 [ -4, %do.end90 ], [ 0, %if.end205.cleanup_crit_edge ], [ -4, %do.end220 ], [ -4, %do.end200 ], [ -4, %do.end184 ], [ -4, %do.end166 ], [ -4, %do.end146 ], [ -4, %do.end117 ], [ -4, %do.end76 ], [ -4, %do.end29 ], [ -4, %do.end10 ], [ -4, %do.end ]
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %data) #9
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_add_del_cloud_filter_big_buf(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_add_del_cloud_filter(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @i40e_stat_str(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @i40e_aq_str(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i40e_set_vsi_promisc(ptr nocapture noundef readonly %vf, i16 noundef zeroext %seid, i1 noundef zeroext %multi_enable, i1 noundef zeroext %unicast_enable, ptr noundef readonly %vl, i16 noundef zeroext %num_vlans) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf, align 8
  %hw3 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %num_vlans)
  %tobool.not = icmp eq i16 %num_vlans, 0
  %tobool4.not = icmp eq ptr %vl, null
  %or.cond = or i1 %tobool4.not, %tobool.not
  br i1 %or.cond, label %if.then, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %conv34 = zext i16 %num_vlans to i32
  %asq_last_status43 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 23, i32 14
  %vf_id49 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  br label %for.body

if.then:                                          ; preds = %entry
  %call = tail call i32 @i40e_aq_set_vsi_multicast_promiscuous(ptr noundef %hw3, i16 noundef zeroext %seid, i1 noundef zeroext %multi_enable, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool6.not = icmp eq i32 %call, 0
  br i1 %tobool6.not, label %if.end, label %if.then7

if.then7:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  %asq_last_status = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 23, i32 14
  %2 = ptrtoint ptr %asq_last_status to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %asq_last_status, align 8
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %vf_id = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %6 = ptrtoint ptr %vf_id to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vf_id, align 4
  %conv = sext i16 %7 to i32
  %call10 = tail call ptr @i40e_stat_str(ptr noundef %hw3, i32 noundef %call) #9
  %call12 = tail call ptr @i40e_aq_str(ptr noundef %hw3, i32 noundef %3) #9
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.279, i32 noundef %conv, ptr noundef %call10, ptr noundef %call12) #12
  br label %cleanup

if.end:                                           ; preds = %if.then
  %call14 = tail call i32 @i40e_aq_set_vsi_unicast_promiscuous(ptr noundef %hw3, i16 noundef zeroext %seid, i1 noundef zeroext %unicast_enable, ptr noundef null, i1 noundef zeroext true) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.then16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then16:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %asq_last_status20 = getelementptr inbounds %struct.i40e_pf, ptr %1, i32 0, i32 1, i32 23, i32 14
  %8 = ptrtoint ptr %asq_last_status20 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %asq_last_status20, align 8
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %dev25 = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  %vf_id26 = getelementptr inbounds %struct.i40e_vf, ptr %vf, i32 0, i32 1
  %12 = ptrtoint ptr %vf_id26 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %vf_id26, align 4
  %conv27 = sext i16 %13 to i32
  %call29 = tail call ptr @i40e_stat_str(ptr noundef %hw3, i32 noundef %call14) #9
  %call31 = tail call ptr @i40e_aq_str(ptr noundef %hw3, i32 noundef %9) #9
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev25, ptr noundef nonnull @.str.282, i32 noundef %conv27, ptr noundef %call29, ptr noundef %call31) #12
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %aq_tmp.0143 = phi i32 [ 0, %for.body.lr.ph ], [ %aq_tmp.4, %for.inc.for.body_crit_edge ]
  %i.0142 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr i16, ptr %vl, i32 %i.0142
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %arrayidx, align 2
  %call37 = tail call i32 @i40e_aq_set_vsi_mc_promisc_on_vlan(ptr noundef %hw3, i16 noundef zeroext %seid, i1 noundef zeroext %multi_enable, i16 noundef zeroext %15, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %for.body.if.end58_crit_edge, label %if.then39

for.body.if.end58_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end58

if.then39:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %asq_last_status43 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %asq_last_status43, align 8
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 8
  %dev48 = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  %20 = ptrtoint ptr %vf_id49 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vf_id49, align 4
  %conv50 = sext i16 %21 to i32
  %call52 = tail call ptr @i40e_stat_str(ptr noundef %hw3, i32 noundef %call37) #9
  %call54 = tail call ptr @i40e_aq_str(ptr noundef %hw3, i32 noundef %17) #9
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev48, ptr noundef nonnull @.str.279, i32 noundef %conv50, ptr noundef %call52, ptr noundef %call54) #12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %aq_tmp.0143)
  %tobool55.not = icmp eq i32 %aq_tmp.0143, 0
  %spec.select = select i1 %tobool55.not, i32 %call37, i32 %aq_tmp.0143
  br label %if.end58

if.end58:                                         ; preds = %if.then39, %for.body.if.end58_crit_edge
  %aq_tmp.2 = phi i32 [ %spec.select, %if.then39 ], [ %aq_tmp.0143, %for.body.if.end58_crit_edge ]
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %arrayidx, align 2
  %call61 = tail call i32 @i40e_aq_set_vsi_uc_promisc_on_vlan(ptr noundef %hw3, i16 noundef zeroext %seid, i1 noundef zeroext %unicast_enable, i16 noundef zeroext %23, ptr noundef null) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %if.end58.for.inc_crit_edge, label %if.then63

if.end58.for.inc_crit_edge:                       ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

if.then63:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #11
  %24 = ptrtoint ptr %asq_last_status43 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %asq_last_status43, align 8
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %1, align 8
  %dev72 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  %28 = ptrtoint ptr %vf_id49 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %vf_id49, align 4
  %conv74 = sext i16 %29 to i32
  %call76 = tail call ptr @i40e_stat_str(ptr noundef %hw3, i32 noundef %call61) #9
  %call78 = tail call ptr @i40e_aq_str(ptr noundef %hw3, i32 noundef %25) #9
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev72, ptr noundef nonnull @.str.282, i32 noundef %conv74, ptr noundef %call76, ptr noundef %call78) #12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %aq_tmp.2)
  %tobool79.not = icmp eq i32 %aq_tmp.2, 0
  %spec.select139 = select i1 %tobool79.not, i32 %call61, i32 %aq_tmp.2
  br label %for.inc

for.inc:                                          ; preds = %if.then63, %if.end58.for.inc_crit_edge
  %aq_tmp.4 = phi i32 [ %spec.select139, %if.then63 ], [ %aq_tmp.2, %if.end58.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.0142, 1
  %exitcond.not = icmp eq i32 %inc, %conv34
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %aq_tmp.4)
  %tobool83.not = icmp eq i32 %aq_tmp.4, 0
  %spec.select140 = select i1 %tobool83.not, i32 %call61, i32 %aq_tmp.4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then16, %if.end.cleanup_crit_edge, %if.then7
  %retval.0 = phi i32 [ %spec.select140, %for.end ], [ %call, %if.then7 ], [ %call14, %if.then16 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_aq_set_vsi_multicast_promiscuous(ptr noundef, i16 noundef zeroext, i1 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i40e_aq_set_vsi_unicast_promiscuous(ptr noundef, i16 noundef zeroext, i1 noundef zeroext, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #3

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #9

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #10 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 251)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #10 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 251)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly nofree nounwind readonly willreturn }
attributes #9 = { nounwind }
attributes #10 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #11 = { nomerge }
attributes #12 = { cold nounwind }
attributes #13 = { nounwind allocsize(0) }
attributes #14 = { nounwind allocsize(2) }
attributes #15 = { nobuiltin }
attributes #16 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !5, !6, !7, !8, !10, !11, !12, !14, !15, !16, !17, !18, !20, !21, !22, !23, !25, !26, !27, !29, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !57, !59, !60, !61, !63, !64, !65, !67, !68, !69, !71, !72, !73, !75, !76, !77, !79, !80, !82, !83, !84, !86, !87, !88, !90, !91, !92, !94, !95, !97, !98, !99, !101, !102, !103, !105, !106, !107, !109, !110, !111, !113, !114, !116, !117, !118, !120, !121, !122, !124, !125, !126, !128, !129, !130, !132, !133, !135, !136, !138, !139, !140, !142, !143, !144, !146, !147, !149, !150, !151, !153, !154, !155, !156, !157, !159, !160, !161, !163, !164, !165, !166, !168, !169, !170, !171, !173, !174, !175, !177, !178, !179, !180, !182, !183, !184, !185, !187, !188, !189, !191, !192, !193, !195, !196, !198, !199, !200, !202, !203, !204, !205, !207, !208, !209, !211, !212, !213, !215, !216, !217, !219, !220, !221, !222, !224, !225, !226, !227, !229, !230, !231, !232, !234, !235, !237, !238, !239, !240, !242, !243, !244, !246, !247, !248, !250, !251, !252, !254, !255, !256, !258, !259, !260, !261, !263, !264, !265, !267, !268, !269, !270, !272, !273, !274, !276, !277, !278, !279, !281, !282, !283, !285, !286, !287, !288, !290, !291, !292, !294, !295, !296, !298, !299, !300, !302, !303, !304, !305, !307, !308, !310, !311, !312, !313, !315, !316, !317, !319, !320, !321, !323, !324, !325, !326, !328, !329, !330, !331, !333, !334, !335, !337, !338, !339, !341, !342, !343, !344, !346, !347, !348, !350, !351, !352, !354, !355, !356, !358, !359, !360, !362, !363, !364, !366, !367, !368, !370, !371, !372, !373, !375, !376, !377, !379, !380, !381, !382, !384, !385, !386, !388, !389, !390, !392, !393, !394, !396, !397, !398, !399, !401, !402, !403, !405, !406, !407, !409, !410, !411, !413, !414, !415, !417, !418, !419, !421, !422, !423, !425, !426, !427, !429, !430, !431, !433, !434, !435, !437, !438, !439, !441, !442, !443, !444, !446, !447, !448, !450, !451, !453, !454, !455, !457, !458, !459, !461, !462, !463, !464, !466, !467, !468, !470, !471, !473, !474, !476, !477, !478, !479, !481}
!llvm.module.flags = !{!482, !483, !484, !485, !486, !487, !488, !489}
!llvm.ident = !{!490}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1568, i32 3}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.2, !1, !"<string literal>", i1 false, i1 false}
!4 = !{ptr @.str.3, !1, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @.str.4, !1, !"<string literal>", i1 false, i1 false}
!6 = !{ptr @i40e_reset_vf._entry, !1, !"_entry", i1 false, i1 false}
!7 = !{ptr @i40e_reset_vf._entry_ptr, !1, !"_entry_ptr", i1 false, i1 false}
!8 = !{ptr @.str.5, !9, !"<string literal>", i1 false, i1 false}
!9 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1647, i32 3}
!10 = !{ptr @i40e_reset_all_vfs._entry, !9, !"_entry", i1 false, i1 false}
!11 = !{ptr @i40e_reset_all_vfs._entry_ptr, !9, !"_entry_ptr", i1 false, i1 false}
!12 = !{ptr @.str.6, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1716, i32 3}
!14 = !{ptr @.str.7, !13, !"<string literal>", i1 false, i1 false}
!15 = !{ptr @.str.8, !13, !"<string literal>", i1 false, i1 false}
!16 = !{ptr @i40e_free_vfs._entry, !13, !"_entry", i1 false, i1 false}
!17 = !{ptr @i40e_free_vfs._entry_ptr, !13, !"_entry_ptr", i1 false, i1 false}
!18 = !{ptr @.str.9, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1890, i32 3}
!20 = !{ptr @.str.10, !19, !"<string literal>", i1 false, i1 false}
!21 = !{ptr @i40e_pci_sriov_configure._entry, !19, !"_entry", i1 false, i1 false}
!22 = !{ptr @i40e_pci_sriov_configure._entry_ptr, !19, !"_entry_ptr", i1 false, i1 false}
!23 = !{ptr @.str.12, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1908, i32 3}
!25 = !{ptr @i40e_pci_sriov_configure._entry.11, !24, !"_entry", i1 false, i1 false}
!26 = !{ptr @i40e_pci_sriov_configure._entry_ptr.13, !24, !"_entry_ptr", i1 false, i1 false}
!27 = !{ptr @.str.14, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4015, i32 3}
!29 = !{ptr @.str.15, !28, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @i40e_vc_process_vf_msg._entry, !28, !"_entry", i1 false, i1 false}
!31 = !{ptr @i40e_vc_process_vf_msg._entry_ptr, !28, !"_entry_ptr", i1 false, i1 false}
!32 = !{ptr @.str.17, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4112, i32 3}
!34 = !{ptr @i40e_vc_process_vf_msg._entry.16, !33, !"_entry", i1 false, i1 false}
!35 = !{ptr @i40e_vc_process_vf_msg._entry_ptr.18, !33, !"_entry_ptr", i1 false, i1 false}
!36 = !{ptr @.str.19, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4214, i32 3}
!38 = !{ptr @i40e_ndo_set_vf_mac._entry, !37, !"_entry", i1 false, i1 false}
!39 = !{ptr @i40e_ndo_set_vf_mac._entry_ptr, !37, !"_entry_ptr", i1 false, i1 false}
!40 = !{ptr @.str.21, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4237, i32 3}
!42 = !{ptr @i40e_ndo_set_vf_mac._entry.20, !41, !"_entry", i1 false, i1 false}
!43 = !{ptr @i40e_ndo_set_vf_mac._entry_ptr.22, !41, !"_entry_ptr", i1 false, i1 false}
!44 = !{ptr @.str.24, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4245, i32 3}
!46 = !{ptr @i40e_ndo_set_vf_mac._entry.23, !45, !"_entry", i1 false, i1 false}
!47 = !{ptr @i40e_ndo_set_vf_mac._entry_ptr.25, !45, !"_entry_ptr", i1 false, i1 false}
!48 = !{ptr @.str.27, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4270, i32 3}
!50 = !{ptr @i40e_ndo_set_vf_mac._entry.26, !49, !"_entry", i1 false, i1 false}
!51 = !{ptr @i40e_ndo_set_vf_mac._entry_ptr.28, !49, !"_entry_ptr", i1 false, i1 false}
!52 = !{ptr @.str.30, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4278, i32 3}
!54 = !{ptr @.str.31, !53, !"<string literal>", i1 false, i1 false}
!55 = !{ptr @i40e_ndo_set_vf_mac._entry.29, !53, !"_entry", i1 false, i1 false}
!56 = !{ptr @i40e_ndo_set_vf_mac._entry_ptr.32, !53, !"_entry_ptr", i1 false, i1 false}
!57 = !{ptr @.str.34, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4281, i32 3}
!59 = !{ptr @i40e_ndo_set_vf_mac._entry.33, !58, !"_entry", i1 false, i1 false}
!60 = !{ptr @i40e_ndo_set_vf_mac._entry_ptr.35, !58, !"_entry_ptr", i1 false, i1 false}
!61 = !{ptr @.str.37, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4289, i32 2}
!63 = !{ptr @i40e_ndo_set_vf_mac._entry.36, !62, !"_entry", i1 false, i1 false}
!64 = !{ptr @i40e_ndo_set_vf_mac._entry_ptr.38, !62, !"_entry_ptr", i1 false, i1 false}
!65 = !{ptr @.str.39, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4318, i32 3}
!67 = !{ptr @i40e_ndo_set_vf_port_vlan._entry, !66, !"_entry", i1 false, i1 false}
!68 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr, !66, !"_entry_ptr", i1 false, i1 false}
!69 = !{ptr @.str.41, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4328, i32 3}
!71 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.40, !70, !"_entry", i1 false, i1 false}
!72 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.42, !70, !"_entry_ptr", i1 false, i1 false}
!73 = !{ptr @.str.44, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4334, i32 3}
!75 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.43, !74, !"_entry", i1 false, i1 false}
!76 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.45, !74, !"_entry_ptr", i1 false, i1 false}
!77 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.46, !78, !"_entry", i1 false, i1 false}
!78 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4342, i32 3}
!79 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.47, !78, !"_entry_ptr", i1 false, i1 false}
!80 = !{ptr @.str.49, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4371, i32 4}
!82 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.48, !81, !"_entry", i1 false, i1 false}
!83 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.50, !81, !"_entry_ptr", i1 false, i1 false}
!84 = !{ptr @.str.52, !85, !"<string literal>", i1 false, i1 false}
!85 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4391, i32 3}
!86 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.51, !85, !"_entry", i1 false, i1 false}
!87 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.53, !85, !"_entry_ptr", i1 false, i1 false}
!88 = !{ptr @.str.55, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4402, i32 3}
!90 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.54, !89, !"_entry", i1 false, i1 false}
!91 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.56, !89, !"_entry_ptr", i1 false, i1 false}
!92 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.57, !93, !"_entry", i1 false, i1 false}
!93 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4408, i32 4}
!94 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.58, !93, !"_entry_ptr", i1 false, i1 false}
!95 = !{ptr @.str.60, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4431, i32 3}
!97 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.59, !96, !"_entry", i1 false, i1 false}
!98 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.61, !96, !"_entry_ptr", i1 false, i1 false}
!99 = !{ptr @.str.63, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4442, i32 3}
!101 = !{ptr @i40e_ndo_set_vf_port_vlan._entry.62, !100, !"_entry", i1 false, i1 false}
!102 = !{ptr @i40e_ndo_set_vf_port_vlan._entry_ptr.64, !100, !"_entry_ptr", i1 false, i1 false}
!103 = !{ptr @.str.65, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4472, i32 3}
!105 = !{ptr @i40e_ndo_set_vf_bw._entry, !104, !"_entry", i1 false, i1 false}
!106 = !{ptr @i40e_ndo_set_vf_bw._entry_ptr, !104, !"_entry_ptr", i1 false, i1 false}
!107 = !{ptr @.str.67, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4482, i32 3}
!109 = !{ptr @i40e_ndo_set_vf_bw._entry.66, !108, !"_entry", i1 false, i1 false}
!110 = !{ptr @i40e_ndo_set_vf_bw._entry_ptr.68, !108, !"_entry_ptr", i1 false, i1 false}
!111 = !{ptr @i40e_ndo_set_vf_bw._entry.69, !112, !"_entry", i1 false, i1 false}
!112 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4491, i32 3}
!113 = !{ptr @i40e_ndo_set_vf_bw._entry_ptr.70, !112, !"_entry_ptr", i1 false, i1 false}
!114 = !{ptr @.str.71, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4525, i32 3}
!116 = !{ptr @i40e_ndo_get_vf_config._entry, !115, !"_entry", i1 false, i1 false}
!117 = !{ptr @i40e_ndo_get_vf_config._entry_ptr, !115, !"_entry_ptr", i1 false, i1 false}
!118 = !{ptr @.str.72, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4586, i32 3}
!120 = !{ptr @i40e_ndo_set_vf_link_state._entry, !119, !"_entry", i1 false, i1 false}
!121 = !{ptr @i40e_ndo_set_vf_link_state._entry_ptr, !119, !"_entry_ptr", i1 false, i1 false}
!122 = !{ptr @.str.74, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4592, i32 3}
!124 = !{ptr @i40e_ndo_set_vf_link_state._entry.73, !123, !"_entry", i1 false, i1 false}
!125 = !{ptr @i40e_ndo_set_vf_link_state._entry_ptr.75, !123, !"_entry_ptr", i1 false, i1 false}
!126 = !{ptr @.str.76, !127, !"<string literal>", i1 false, i1 false}
!127 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4650, i32 3}
!128 = !{ptr @i40e_ndo_set_vf_spoofchk._entry, !127, !"_entry", i1 false, i1 false}
!129 = !{ptr @i40e_ndo_set_vf_spoofchk._entry_ptr, !127, !"_entry_ptr", i1 false, i1 false}
!130 = !{ptr @i40e_ndo_set_vf_spoofchk._entry.77, !131, !"_entry", i1 false, i1 false}
!131 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4656, i32 3}
!132 = !{ptr @i40e_ndo_set_vf_spoofchk._entry_ptr.78, !131, !"_entry_ptr", i1 false, i1 false}
!133 = !{ptr @i40e_ndo_set_vf_spoofchk._entry.79, !134, !"_entry", i1 false, i1 false}
!134 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4663, i32 3}
!135 = !{ptr @i40e_ndo_set_vf_spoofchk._entry_ptr.80, !134, !"_entry_ptr", i1 false, i1 false}
!136 = !{ptr @.str.82, !137, !"<string literal>", i1 false, i1 false}
!137 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4682, i32 3}
!138 = !{ptr @i40e_ndo_set_vf_spoofchk._entry.81, !137, !"_entry", i1 false, i1 false}
!139 = !{ptr @i40e_ndo_set_vf_spoofchk._entry_ptr.83, !137, !"_entry_ptr", i1 false, i1 false}
!140 = !{ptr @.str.84, !141, !"<string literal>", i1 false, i1 false}
!141 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4707, i32 3}
!142 = !{ptr @i40e_ndo_set_vf_trust._entry, !141, !"_entry", i1 false, i1 false}
!143 = !{ptr @i40e_ndo_set_vf_trust._entry_ptr, !141, !"_entry_ptr", i1 false, i1 false}
!144 = !{ptr @i40e_ndo_set_vf_trust._entry.85, !145, !"_entry", i1 false, i1 false}
!145 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4713, i32 3}
!146 = !{ptr @i40e_ndo_set_vf_trust._entry_ptr.86, !145, !"_entry_ptr", i1 false, i1 false}
!147 = !{ptr @.str.88, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4719, i32 3}
!149 = !{ptr @i40e_ndo_set_vf_trust._entry.87, !148, !"_entry", i1 false, i1 false}
!150 = !{ptr @i40e_ndo_set_vf_trust._entry_ptr.89, !148, !"_entry_ptr", i1 false, i1 false}
!151 = !{ptr @.str.91, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4731, i32 2}
!153 = !{ptr @i40e_ndo_set_vf_trust._entry.90, !152, !"_entry", i1 false, i1 false}
!154 = !{ptr @i40e_ndo_set_vf_trust._entry_ptr.92, !152, !"_entry_ptr", i1 false, i1 false}
!155 = !{ptr @.str.93, !152, !"<string literal>", i1 false, i1 false}
!156 = !{ptr @.str.94, !152, !"<string literal>", i1 false, i1 false}
!157 = !{ptr @.str.96, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4736, i32 4}
!159 = !{ptr @i40e_ndo_set_vf_trust._entry.95, !158, !"_entry", i1 false, i1 false}
!160 = !{ptr @i40e_ndo_set_vf_trust._entry_ptr.97, !158, !"_entry_ptr", i1 false, i1 false}
!161 = !{ptr @.str.98, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4769, i32 3}
!163 = !{ptr @.str.99, !162, !"<string literal>", i1 false, i1 false}
!164 = !{ptr @i40e_get_vf_stats._entry, !162, !"_entry", i1 false, i1 false}
!165 = !{ptr @i40e_get_vf_stats._entry_ptr, !162, !"_entry_ptr", i1 false, i1 false}
!166 = !{ptr @.str.100, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1443, i32 5}
!168 = !{ptr @.str.101, !167, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @i40e_trigger_vf_reset._entry, !167, !"_entry", i1 false, i1 false}
!170 = !{ptr @i40e_trigger_vf_reset._entry_ptr, !167, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @.str.103, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1462, i32 3}
!173 = !{ptr @i40e_trigger_vf_reset._entry.102, !172, !"_entry", i1 false, i1 false}
!174 = !{ptr @i40e_trigger_vf_reset._entry_ptr.104, !172, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @.str.105, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1107, i32 4}
!177 = !{ptr @.str.106, !176, !"<string literal>", i1 false, i1 false}
!178 = !{ptr @i40e_alloc_vf_res._entry, !176, !"_entry", i1 false, i1 false}
!179 = !{ptr @i40e_alloc_vf_res._entry_ptr, !176, !"_entry_ptr", i1 false, i1 false}
!180 = !{ptr @.str.107, !181, !"<string literal>", i1 false, i1 false}
!181 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 783, i32 3}
!182 = !{ptr @.str.108, !181, !"<string literal>", i1 false, i1 false}
!183 = !{ptr @i40e_alloc_vsi_res._entry, !181, !"_entry", i1 false, i1 false}
!184 = !{ptr @i40e_alloc_vsi_res._entry_ptr, !181, !"_entry_ptr", i1 false, i1 false}
!185 = !{ptr @.str.110, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 810, i32 5}
!187 = !{ptr @i40e_alloc_vsi_res._entry.109, !186, !"_entry", i1 false, i1 false}
!188 = !{ptr @i40e_alloc_vsi_res._entry_ptr.111, !186, !"_entry_ptr", i1 false, i1 false}
!189 = !{ptr @.str.113, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 817, i32 4}
!191 = !{ptr @i40e_alloc_vsi_res._entry.112, !190, !"_entry", i1 false, i1 false}
!192 = !{ptr @i40e_alloc_vsi_res._entry_ptr.114, !190, !"_entry_ptr", i1 false, i1 false}
!193 = !{ptr @i40e_alloc_vsi_res._entry.115, !194, !"_entry", i1 false, i1 false}
!194 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 825, i32 4}
!195 = !{ptr @i40e_alloc_vsi_res._entry_ptr.116, !194, !"_entry_ptr", i1 false, i1 false}
!196 = !{ptr @.str.118, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 846, i32 4}
!198 = !{ptr @i40e_alloc_vsi_res._entry.117, !197, !"_entry", i1 false, i1 false}
!199 = !{ptr @i40e_alloc_vsi_res._entry_ptr.119, !197, !"_entry_ptr", i1 false, i1 false}
!200 = !{ptr @.str.120, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1842, i32 3}
!202 = !{ptr @.str.121, !201, !"<string literal>", i1 false, i1 false}
!203 = !{ptr @i40e_pci_sriov_enable._entry, !201, !"_entry", i1 false, i1 false}
!204 = !{ptr @i40e_pci_sriov_enable._entry_ptr, !201, !"_entry_ptr", i1 false, i1 false}
!205 = !{ptr @.str.123, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1854, i32 3}
!207 = !{ptr @i40e_pci_sriov_enable._entry.122, !206, !"_entry", i1 false, i1 false}
!208 = !{ptr @i40e_pci_sriov_enable._entry_ptr.124, !206, !"_entry_ptr", i1 false, i1 false}
!209 = !{ptr @.str.126, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1860, i32 2}
!211 = !{ptr @i40e_pci_sriov_enable._entry.125, !210, !"_entry", i1 false, i1 false}
!212 = !{ptr @i40e_pci_sriov_enable._entry_ptr.127, !210, !"_entry_ptr", i1 false, i1 false}
!213 = !{ptr @.str.129, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1863, i32 3}
!215 = !{ptr @i40e_pci_sriov_enable._entry.128, !214, !"_entry", i1 false, i1 false}
!216 = !{ptr @i40e_pci_sriov_enable._entry_ptr.130, !214, !"_entry_ptr", i1 false, i1 false}
!217 = !{ptr @.str.131, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1948, i32 3}
!219 = !{ptr @.str.132, !218, !"<string literal>", i1 false, i1 false}
!220 = !{ptr @i40e_vc_send_msg_to_vf._entry, !218, !"_entry", i1 false, i1 false}
!221 = !{ptr @i40e_vc_send_msg_to_vf._entry_ptr, !218, !"_entry_ptr", i1 false, i1 false}
!222 = !{ptr @.str.133, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2116, i32 4}
!224 = !{ptr @.str.134, !223, !"<string literal>", i1 false, i1 false}
!225 = !{ptr @i40e_vc_get_vf_resources_msg._entry, !223, !"_entry", i1 false, i1 false}
!226 = !{ptr @i40e_vc_get_vf_resources_msg._entry_ptr, !223, !"_entry_ptr", i1 false, i1 false}
!227 = !{ptr @.str.135, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 216, i32 3}
!229 = !{ptr @.str.136, !228, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @i40e_vc_reset_vf._entry, !228, !"_entry", i1 false, i1 false}
!231 = !{ptr @i40e_vc_reset_vf._entry_ptr, !228, !"_entry_ptr", i1 false, i1 false}
!232 = distinct !{null, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 220, i32 3}
!234 = distinct !{null, !233, !"__UNIQUE_ID_ddebug676", i1 false, i1 false}
!235 = !{ptr @.str.138, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2186, i32 3}
!237 = !{ptr @.str.139, !236, !"<string literal>", i1 false, i1 false}
!238 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry, !236, !"_entry", i1 false, i1 false}
!239 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr, !236, !"_entry_ptr", i1 false, i1 false}
!240 = !{ptr @.str.141, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2221, i32 4}
!242 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry.140, !241, !"_entry", i1 false, i1 false}
!243 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr.142, !241, !"_entry_ptr", i1 false, i1 false}
!244 = !{ptr @.str.144, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2226, i32 3}
!246 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry.143, !245, !"_entry", i1 false, i1 false}
!247 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr.145, !245, !"_entry_ptr", i1 false, i1 false}
!248 = !{ptr @.str.147, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2233, i32 4}
!250 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry.146, !249, !"_entry", i1 false, i1 false}
!251 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr.148, !249, !"_entry_ptr", i1 false, i1 false}
!252 = !{ptr @.str.150, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2238, i32 3}
!254 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry.149, !253, !"_entry", i1 false, i1 false}
!255 = !{ptr @i40e_vc_config_promiscuous_mode_msg._entry_ptr.151, !253, !"_entry_ptr", i1 false, i1 false}
!256 = !{ptr @.str.152, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 743, i32 3}
!258 = !{ptr @.str.153, !257, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @i40e_config_vsi_rx_queue._entry, !257, !"_entry", i1 false, i1 false}
!260 = !{ptr @i40e_config_vsi_rx_queue._entry_ptr, !257, !"_entry_ptr", i1 false, i1 false}
!261 = !{ptr @.str.155, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 753, i32 3}
!263 = !{ptr @i40e_config_vsi_rx_queue._entry.154, !262, !"_entry", i1 false, i1 false}
!264 = !{ptr @i40e_config_vsi_rx_queue._entry_ptr.156, !262, !"_entry_ptr", i1 false, i1 false}
!265 = !{ptr @.str.157, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 639, i32 3}
!267 = !{ptr @.str.158, !266, !"<string literal>", i1 false, i1 false}
!268 = !{ptr @i40e_config_vsi_tx_queue._entry, !266, !"_entry", i1 false, i1 false}
!269 = !{ptr @i40e_config_vsi_tx_queue._entry_ptr, !266, !"_entry_ptr", i1 false, i1 false}
!270 = !{ptr @.str.160, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 649, i32 3}
!272 = !{ptr @i40e_config_vsi_tx_queue._entry.159, !271, !"_entry", i1 false, i1 false}
!273 = !{ptr @i40e_config_vsi_tx_queue._entry_ptr.161, !271, !"_entry_ptr", i1 false, i1 false}
!274 = !{ptr @.str.162, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2913, i32 5}
!276 = !{ptr @.str.163, !275, !"<string literal>", i1 false, i1 false}
!277 = !{ptr @i40e_vc_add_mac_addr_msg._entry, !275, !"_entry", i1 false, i1 false}
!278 = !{ptr @i40e_vc_add_mac_addr_msg._entry_ptr, !275, !"_entry_ptr", i1 false, i1 false}
!279 = !{ptr @.str.165, !280, !"<string literal>", i1 false, i1 false}
!280 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2931, i32 3}
!281 = !{ptr @i40e_vc_add_mac_addr_msg._entry.164, !280, !"_entry", i1 false, i1 false}
!282 = !{ptr @i40e_vc_add_mac_addr_msg._entry_ptr.166, !280, !"_entry_ptr", i1 false, i1 false}
!283 = !{ptr @.str.167, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2815, i32 4}
!285 = !{ptr @.str.168, !284, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @i40e_check_vf_permission._entry, !284, !"_entry", i1 false, i1 false}
!287 = !{ptr @i40e_check_vf_permission._entry_ptr, !284, !"_entry_ptr", i1 false, i1 false}
!288 = !{ptr @.str.170, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2830, i32 4}
!290 = !{ptr @i40e_check_vf_permission._entry.169, !289, !"_entry", i1 false, i1 false}
!291 = !{ptr @i40e_check_vf_permission._entry_ptr.171, !289, !"_entry_ptr", i1 false, i1 false}
!292 = !{ptr @.str.173, !293, !"<string literal>", i1 false, i1 false}
!293 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2848, i32 4}
!294 = !{ptr @i40e_check_vf_permission._entry.172, !293, !"_entry", i1 false, i1 false}
!295 = !{ptr @i40e_check_vf_permission._entry_ptr.174, !293, !"_entry_ptr", i1 false, i1 false}
!296 = !{ptr @.str.176, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2861, i32 4}
!298 = !{ptr @i40e_check_vf_permission._entry.175, !297, !"_entry", i1 false, i1 false}
!299 = !{ptr @i40e_check_vf_permission._entry_ptr.177, !297, !"_entry_ptr", i1 false, i1 false}
!300 = !{ptr @.str.178, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2966, i32 4}
!302 = !{ptr @.str.179, !301, !"<string literal>", i1 false, i1 false}
!303 = !{ptr @i40e_vc_del_mac_addr_msg._entry, !301, !"_entry", i1 false, i1 false}
!304 = !{ptr @i40e_vc_del_mac_addr_msg._entry_ptr, !301, !"_entry_ptr", i1 false, i1 false}
!305 = !{ptr @i40e_vc_del_mac_addr_msg._entry.180, !306, !"_entry", i1 false, i1 false}
!306 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2990, i32 3}
!307 = !{ptr @i40e_vc_del_mac_addr_msg._entry_ptr.181, !306, !"_entry_ptr", i1 false, i1 false}
!308 = !{ptr @.str.182, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3032, i32 3}
!310 = !{ptr @.str.183, !309, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @i40e_vc_add_vlan_msg._entry, !309, !"_entry", i1 false, i1 false}
!312 = !{ptr @i40e_vc_add_vlan_msg._entry_ptr, !309, !"_entry_ptr", i1 false, i1 false}
!313 = !{ptr @.str.185, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3045, i32 4}
!315 = !{ptr @i40e_vc_add_vlan_msg._entry.184, !314, !"_entry", i1 false, i1 false}
!316 = !{ptr @i40e_vc_add_vlan_msg._entry_ptr.186, !314, !"_entry_ptr", i1 false, i1 false}
!317 = !{ptr @.str.188, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3075, i32 4}
!319 = !{ptr @i40e_vc_add_vlan_msg._entry.187, !318, !"_entry", i1 false, i1 false}
!320 = !{ptr @i40e_vc_add_vlan_msg._entry_ptr.189, !318, !"_entry_ptr", i1 false, i1 false}
!321 = !{ptr @.str.190, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 514, i32 3}
!323 = !{ptr @.str.191, !322, !"<string literal>", i1 false, i1 false}
!324 = !{ptr @i40e_config_iwarp_qvlist._entry, !322, !"_entry", i1 false, i1 false}
!325 = !{ptr @i40e_config_iwarp_qvlist._entry_ptr, !322, !"_entry_ptr", i1 false, i1 false}
!326 = !{ptr @.str.192, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2697, i32 3}
!328 = !{ptr @.str.193, !327, !"<string literal>", i1 false, i1 false}
!329 = !{ptr @i40e_vc_request_queues_msg._entry, !327, !"_entry", i1 false, i1 false}
!330 = !{ptr @i40e_vc_request_queues_msg._entry_ptr, !327, !"_entry_ptr", i1 false, i1 false}
!331 = !{ptr @.str.195, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2703, i32 3}
!333 = !{ptr @i40e_vc_request_queues_msg._entry.194, !332, !"_entry", i1 false, i1 false}
!334 = !{ptr @i40e_vc_request_queues_msg._entry_ptr.196, !332, !"_entry_ptr", i1 false, i1 false}
!335 = !{ptr @.str.198, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 2710, i32 3}
!337 = !{ptr @i40e_vc_request_queues_msg._entry.197, !336, !"_entry", i1 false, i1 false}
!338 = !{ptr @i40e_vc_request_queues_msg._entry_ptr.199, !336, !"_entry_ptr", i1 false, i1 false}
!339 = !{ptr @.str.200, !340, !"<string literal>", i1 false, i1 false}
!340 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3848, i32 3}
!341 = !{ptr @.str.201, !340, !"<string literal>", i1 false, i1 false}
!342 = !{ptr @i40e_vc_add_qch_msg._entry, !340, !"_entry", i1 false, i1 false}
!343 = !{ptr @i40e_vc_add_qch_msg._entry_ptr, !340, !"_entry_ptr", i1 false, i1 false}
!344 = !{ptr @.str.203, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3855, i32 3}
!346 = !{ptr @i40e_vc_add_qch_msg._entry.202, !345, !"_entry", i1 false, i1 false}
!347 = !{ptr @i40e_vc_add_qch_msg._entry_ptr.204, !345, !"_entry_ptr", i1 false, i1 false}
!348 = !{ptr @.str.206, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3864, i32 3}
!350 = !{ptr @i40e_vc_add_qch_msg._entry.205, !349, !"_entry", i1 false, i1 false}
!351 = !{ptr @i40e_vc_add_qch_msg._entry_ptr.207, !349, !"_entry_ptr", i1 false, i1 false}
!352 = !{ptr @.str.209, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3875, i32 4}
!354 = !{ptr @i40e_vc_add_qch_msg._entry.208, !353, !"_entry", i1 false, i1 false}
!355 = !{ptr @i40e_vc_add_qch_msg._entry_ptr.210, !353, !"_entry_ptr", i1 false, i1 false}
!356 = !{ptr @.str.212, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3887, i32 3}
!358 = !{ptr @i40e_vc_add_qch_msg._entry.211, !357, !"_entry", i1 false, i1 false}
!359 = !{ptr @i40e_vc_add_qch_msg._entry_ptr.213, !357, !"_entry_ptr", i1 false, i1 false}
!360 = !{ptr @.str.215, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3903, i32 3}
!362 = !{ptr @i40e_vc_add_qch_msg._entry.214, !361, !"_entry", i1 false, i1 false}
!363 = !{ptr @i40e_vc_add_qch_msg._entry_ptr.216, !361, !"_entry_ptr", i1 false, i1 false}
!364 = !{ptr @.str.218, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3914, i32 5}
!366 = !{ptr @i40e_vc_add_qch_msg._entry.217, !365, !"_entry", i1 false, i1 false}
!367 = !{ptr @i40e_vc_add_qch_msg._entry_ptr.219, !365, !"_entry_ptr", i1 false, i1 false}
!368 = !{ptr @.str.220, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3962, i32 3}
!370 = !{ptr @.str.221, !369, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @i40e_vc_del_qch_msg._entry, !369, !"_entry", i1 false, i1 false}
!372 = !{ptr @i40e_vc_del_qch_msg._entry_ptr, !369, !"_entry_ptr", i1 false, i1 false}
!373 = !{ptr @.str.223, !374, !"<string literal>", i1 false, i1 false}
!374 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3966, i32 3}
!375 = !{ptr @i40e_vc_del_qch_msg._entry.222, !374, !"_entry", i1 false, i1 false}
!376 = !{ptr @i40e_vc_del_qch_msg._entry_ptr.224, !374, !"_entry_ptr", i1 false, i1 false}
!377 = !{ptr @.str.225, !378, !"<string literal>", i1 false, i1 false}
!378 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3738, i32 3}
!379 = !{ptr @.str.226, !378, !"<string literal>", i1 false, i1 false}
!380 = !{ptr @i40e_vc_add_cloud_filter._entry, !378, !"_entry", i1 false, i1 false}
!381 = !{ptr @i40e_vc_add_cloud_filter._entry_ptr, !378, !"_entry_ptr", i1 false, i1 false}
!382 = !{ptr @.str.228, !383, !"<string literal>", i1 false, i1 false}
!383 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3746, i32 3}
!384 = !{ptr @i40e_vc_add_cloud_filter._entry.227, !383, !"_entry", i1 false, i1 false}
!385 = !{ptr @i40e_vc_add_cloud_filter._entry_ptr.229, !383, !"_entry_ptr", i1 false, i1 false}
!386 = !{ptr @.str.231, !387, !"<string literal>", i1 false, i1 false}
!387 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3792, i32 3}
!388 = !{ptr @i40e_vc_add_cloud_filter._entry.230, !387, !"_entry", i1 false, i1 false}
!389 = !{ptr @i40e_vc_add_cloud_filter._entry_ptr.232, !387, !"_entry_ptr", i1 false, i1 false}
!390 = !{ptr @.str.234, !391, !"<string literal>", i1 false, i1 false}
!391 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3807, i32 3}
!392 = !{ptr @i40e_vc_add_cloud_filter._entry.233, !391, !"_entry", i1 false, i1 false}
!393 = !{ptr @i40e_vc_add_cloud_filter._entry_ptr.235, !391, !"_entry_ptr", i1 false, i1 false}
!394 = !{ptr @.str.236, !395, !"<string literal>", i1 false, i1 false}
!395 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3408, i32 3}
!396 = !{ptr @.str.237, !395, !"<string literal>", i1 false, i1 false}
!397 = !{ptr @i40e_validate_cloud_filter._entry, !395, !"_entry", i1 false, i1 false}
!398 = !{ptr @i40e_validate_cloud_filter._entry_ptr, !395, !"_entry_ptr", i1 false, i1 false}
!399 = !{ptr @.str.239, !400, !"<string literal>", i1 false, i1 false}
!400 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3417, i32 3}
!401 = !{ptr @i40e_validate_cloud_filter._entry.238, !400, !"_entry", i1 false, i1 false}
!402 = !{ptr @i40e_validate_cloud_filter._entry_ptr.240, !400, !"_entry_ptr", i1 false, i1 false}
!403 = !{ptr @.str.242, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3436, i32 4}
!405 = !{ptr @i40e_validate_cloud_filter._entry.241, !404, !"_entry", i1 false, i1 false}
!406 = !{ptr @i40e_validate_cloud_filter._entry_ptr.243, !404, !"_entry_ptr", i1 false, i1 false}
!407 = !{ptr @.str.245, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3451, i32 5}
!409 = !{ptr @i40e_validate_cloud_filter._entry.244, !408, !"_entry", i1 false, i1 false}
!410 = !{ptr @i40e_validate_cloud_filter._entry_ptr.246, !408, !"_entry_ptr", i1 false, i1 false}
!411 = !{ptr @.str.248, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3460, i32 4}
!413 = !{ptr @i40e_validate_cloud_filter._entry.247, !412, !"_entry", i1 false, i1 false}
!414 = !{ptr @i40e_validate_cloud_filter._entry_ptr.249, !412, !"_entry_ptr", i1 false, i1 false}
!415 = !{ptr @.str.251, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3470, i32 4}
!417 = !{ptr @i40e_validate_cloud_filter._entry.250, !416, !"_entry", i1 false, i1 false}
!418 = !{ptr @i40e_validate_cloud_filter._entry_ptr.252, !416, !"_entry_ptr", i1 false, i1 false}
!419 = !{ptr @.str.254, !420, !"<string literal>", i1 false, i1 false}
!420 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3479, i32 4}
!421 = !{ptr @i40e_validate_cloud_filter._entry.253, !420, !"_entry", i1 false, i1 false}
!422 = !{ptr @i40e_validate_cloud_filter._entry_ptr.255, !420, !"_entry_ptr", i1 false, i1 false}
!423 = !{ptr @.str.257, !424, !"<string literal>", i1 false, i1 false}
!424 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3487, i32 4}
!425 = !{ptr @i40e_validate_cloud_filter._entry.256, !424, !"_entry", i1 false, i1 false}
!426 = !{ptr @i40e_validate_cloud_filter._entry_ptr.258, !424, !"_entry_ptr", i1 false, i1 false}
!427 = !{ptr @.str.260, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3495, i32 4}
!429 = !{ptr @i40e_validate_cloud_filter._entry.259, !428, !"_entry", i1 false, i1 false}
!430 = !{ptr @i40e_validate_cloud_filter._entry_ptr.261, !428, !"_entry_ptr", i1 false, i1 false}
!431 = !{ptr @.str.263, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3503, i32 3}
!433 = !{ptr @i40e_validate_cloud_filter._entry.262, !432, !"_entry", i1 false, i1 false}
!434 = !{ptr @i40e_validate_cloud_filter._entry_ptr.264, !432, !"_entry_ptr", i1 false, i1 false}
!435 = !{ptr @.str.266, !436, !"<string literal>", i1 false, i1 false}
!436 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3510, i32 4}
!437 = !{ptr @i40e_validate_cloud_filter._entry.265, !436, !"_entry", i1 false, i1 false}
!438 = !{ptr @i40e_validate_cloud_filter._entry_ptr.267, !436, !"_entry_ptr", i1 false, i1 false}
!439 = !{ptr @.str.268, !440, !"<string literal>", i1 false, i1 false}
!440 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3607, i32 3}
!441 = !{ptr @.str.269, !440, !"<string literal>", i1 false, i1 false}
!442 = !{ptr @i40e_vc_del_cloud_filter._entry, !440, !"_entry", i1 false, i1 false}
!443 = !{ptr @i40e_vc_del_cloud_filter._entry_ptr, !440, !"_entry_ptr", i1 false, i1 false}
!444 = !{ptr @.str.271, !445, !"<string literal>", i1 false, i1 false}
!445 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3615, i32 3}
!446 = !{ptr @i40e_vc_del_cloud_filter._entry.270, !445, !"_entry", i1 false, i1 false}
!447 = !{ptr @i40e_vc_del_cloud_filter._entry_ptr.272, !445, !"_entry_ptr", i1 false, i1 false}
!448 = !{ptr @i40e_vc_del_cloud_filter._entry.273, !449, !"_entry", i1 false, i1 false}
!449 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3658, i32 3}
!450 = !{ptr @i40e_vc_del_cloud_filter._entry_ptr.274, !449, !"_entry_ptr", i1 false, i1 false}
!451 = !{ptr @.str.276, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3673, i32 3}
!453 = !{ptr @i40e_vc_del_cloud_filter._entry.275, !452, !"_entry", i1 false, i1 false}
!454 = !{ptr @i40e_vc_del_cloud_filter._entry_ptr.277, !452, !"_entry_ptr", i1 false, i1 false}
!455 = !{ptr @.str.278, !456, !"<string literal>", i1 false, i1 false}
!456 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 4180, i32 3}
!457 = !{ptr @i40e_validate_vf._entry, !456, !"_entry", i1 false, i1 false}
!458 = !{ptr @i40e_validate_vf._entry_ptr, !456, !"_entry_ptr", i1 false, i1 false}
!459 = !{ptr @.str.279, !460, !"<string literal>", i1 false, i1 false}
!460 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1266, i32 4}
!461 = !{ptr @.str.280, !460, !"<string literal>", i1 false, i1 false}
!462 = !{ptr @i40e_set_vsi_promisc._entry, !460, !"_entry", i1 false, i1 false}
!463 = !{ptr @i40e_set_vsi_promisc._entry_ptr, !460, !"_entry_ptr", i1 false, i1 false}
!464 = !{ptr @.str.282, !465, !"<string literal>", i1 false, i1 false}
!465 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1282, i32 4}
!466 = !{ptr @i40e_set_vsi_promisc._entry.281, !465, !"_entry", i1 false, i1 false}
!467 = !{ptr @i40e_set_vsi_promisc._entry_ptr.283, !465, !"_entry_ptr", i1 false, i1 false}
!468 = !{ptr @i40e_set_vsi_promisc._entry.284, !469, !"_entry", i1 false, i1 false}
!469 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1299, i32 4}
!470 = !{ptr @i40e_set_vsi_promisc._entry_ptr.285, !469, !"_entry_ptr", i1 false, i1 false}
!471 = !{ptr @i40e_set_vsi_promisc._entry.286, !472, !"_entry", i1 false, i1 false}
!472 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 1315, i32 4}
!473 = !{ptr @i40e_set_vsi_promisc._entry_ptr.287, !472, !"_entry_ptr", i1 false, i1 false}
!474 = !{ptr @.str.288, !475, !"<string literal>", i1 false, i1 false}
!475 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3559, i32 4}
!476 = !{ptr @.str.289, !475, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @i40e_del_all_cloud_filters._entry, !475, !"_entry", i1 false, i1 false}
!478 = !{ptr @i40e_del_all_cloud_filters._entry_ptr, !475, !"_entry_ptr", i1 false, i1 false}
!479 = !{ptr @i40e_del_all_cloud_filters._entry.290, !480, !"_entry", i1 false, i1 false}
!480 = !{!"../drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c", i32 3570, i32 4}
!481 = !{ptr @i40e_del_all_cloud_filters._entry_ptr.291, !480, !"_entry_ptr", i1 false, i1 false}
!482 = !{i32 1, !"wchar_size", i32 2}
!483 = !{i32 1, !"min_enum_size", i32 4}
!484 = !{i32 8, !"branch-target-enforcement", i32 0}
!485 = !{i32 8, !"sign-return-address", i32 0}
!486 = !{i32 8, !"sign-return-address-all", i32 0}
!487 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!488 = !{i32 7, !"uwtable", i32 1}
!489 = !{i32 7, !"frame-pointer", i32 2}
!490 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!491 = !{i64 6284681}
!492 = !{i64 2160464636}
!493 = !{i64 2160467025}
!494 = !{i64 2160454278}
!495 = !{i64 2160453155}
!496 = !{i64 2160456789}
!497 = !{i64 2160457247}
!498 = !{i64 6284263}
!499 = !{i64 2160458057}
!500 = !{i64 2160458569}
!501 = !{i64 2160459467}
!502 = !{i64 2160434624}
!503 = !{i64 2160435493}
!504 = !{i64 2160461913}
!505 = !{i64 2160462371}
!506 = !{i8 0, i8 2}
!507 = !{i64 2160426057}
!508 = !{i64 2160425214}
!509 = !{i64 2160426867}
!510 = !{i64 2160463454}
!511 = !{i64 2160468031}
!512 = !{i64 2160471730}
!513 = !{i64 2160427241}
!514 = !{i64 2160427900}
!515 = !{i64 2160428731}
!516 = !{i64 2160478524}
!517 = distinct !{!517, !518}
!518 = !{!"llvm.loop.peeled.count", i32 1}
!519 = !{i64 2160429408}
!520 = !{i64 2160430251}
!521 = !{i64 2160430846}
!522 = !{i64 2160431629}
!523 = distinct !{!523, !518}
!524 = distinct !{!524, !518}
!525 = !{i64 2160404645}
!526 = !{i64 2160405469}
!527 = !{!"auto-init"}
!528 = !{i64 2160388207}
!529 = !{!"branch_weights", i32 1, i32 2000}
!530 = !{i64 2160389733}
!531 = !{i64 2160390452}
!532 = !{i64 2160391336}
!533 = !{i64 2160391814}
!534 = !{i64 2160392600}
!535 = !{i64 2160397772}
!536 = !{i64 2160398433}
!537 = !{i64 2160399127}
!538 = !{i64 2160399828}
!539 = !{i64 2160393343}
!540 = !{i64 2160393993}
!541 = !{i64 2160627532}
!542 = !{i64 2160627918}
!543 = !{i64 2160628704}
!544 = !{i64 2160629572}
!545 = !{i64 2160420037}
!546 = !{i64 2160420765}
!547 = !{i64 1607862, i64 1607889, i64 1607911, i64 1607939}
!548 = !{i64 1608270, i64 1608297, i64 1608330, i64 1608351, i64 1608378, i64 1608404}
