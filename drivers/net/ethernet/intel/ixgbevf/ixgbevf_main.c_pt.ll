; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c_pt.bc'
source_filename = "../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.167 }
%union.anon.167 = type { ptr }
%struct.atomic_t = type { i32 }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.pci_driver = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { ptr, ptr }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.ixgbe_mbx_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pci_error_handlers = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ixgbevf_info = type { i32, ptr }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon.168 }
%union.anon.168 = type { i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.ixgbe_hw = type { ptr, ptr, %struct.ixgbe_mac_info, %struct.ixgbe_mbx_info, i16, i16, i16, i16, i8, i8, i32 }
%struct.ixgbe_mac_info = type { %struct.ixgbe_mac_operations, [6 x i8], [6 x i8], i32, i32, i8, i32, i32, i32 }
%struct.ixgbe_mac_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ixgbe_mbx_info = type { %struct.ixgbe_mbx_operations, %struct.ixgbe_mbx_stats, i32, i32, i32, i16 }
%struct.ixgbe_mbx_stats = type { i32, i32, i32, i32, i32 }
%struct.ixgbevf_adapter = type { [128 x i32], [2 x ptr], i16, i16, i32, i32, i32, [8 x ptr], i32, [8 x ptr], i64, i32, i64, i32, [8 x ptr], i64, i64, i32, i64, i64, i64, i64, ptr, ptr, ptr, ptr, %struct.ixgbe_hw, i16, i32, %struct.ixgbevf_hw_stats, i32, i64, i32, i32, i32, ptr, i32, i8, %struct.timer_list, %struct.work_struct, %struct.spinlock, i32, ptr, [64 x i8], i32, ptr }
%struct.ixgbevf_hw_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.200, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.hlist_head = type { ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.200 = type { ptr }
%struct.ixgbevf_q_vector = type { ptr, i16, i16, %struct.napi_struct, %struct.ixgbevf_ring_container, %struct.ixgbevf_ring_container, %struct.callback_head, [25 x i8], [87 x i8], [0 x %struct.ixgbevf_ring], i32, %struct.spinlock, [80 x i8] }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.ixgbevf_ring_container = type { ptr, i32, i32, i8, i8 }
%struct.callback_head = type { ptr, ptr }
%struct.ixgbevf_ring = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i16, i16, i16, i16, %union.anon.195, i32, %struct.ixgbevf_stats, %struct.u64_stats_sync, %union.anon.199, %struct.xdp_rxq_info, i64, ptr, ptr, i16, i32, [104 x i8] }
%union.anon.195 = type { ptr }
%struct.ixgbevf_stats = type { i64, i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.seqcount = type { i32, %struct.lockdep_map }
%union.anon.199 = type { %struct.ixgbevf_rx_queue_stats }
%struct.ixgbevf_rx_queue_stats = type { i64, i64, i64, i64 }
%struct.xdp_rxq_info = type { ptr, i32, i32, %struct.xdp_mem_info, i32, [104 x i8] }
%struct.xdp_mem_info = type { i32, i32 }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.173, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.194, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.173 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.rb_root = type { ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.possible_net_t = type { ptr }
%union.anon.194 = type { ptr }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.anon.203 = type { %struct.anon.204, %struct.anon.209 }
%struct.anon.204 = type { %union.anon.205, %union.anon.207 }
%union.anon.205 = type { i32 }
%union.anon.207 = type { i32 }
%struct.anon.209 = type { i32, i16, i16 }
%struct.netdev_queue = type { ptr, ptr, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, ptr, [88 x i8], %struct.spinlock, i32, i32, i32, [72 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [116 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [88 x i8] }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.msix_entry = type { i32, i16 }
%struct.ixgbevf_tx_buffer = type { ptr, i32, %union.anon.198, i32, i16, i16, i32, i32, i32 }
%union.anon.198 = type { ptr }
%union.ixgbe_adv_tx_desc = type { %struct.anon.196 }
%struct.anon.196 = type { i64, i32, i32 }
%struct.ixgbevf_rx_buffer = type { i32, ptr, i16, i16 }
%struct.netdev_hw_addr = type { %struct.list_head, %struct.rb_node, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%union.ixgbe_adv_rx_desc = type { %struct.anon.202 }
%struct.anon.202 = type { i64, i64 }
%struct.vlan_hdr = type { i16, i16 }
%struct.ixgbevf_ipsec_tx_data = type { i32, i16, i16 }
%struct.sk_buff = type { %union.anon.50, %union.anon.53, %union.anon.54, [48 x i8], %union.anon.55, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.57, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { ptr, ptr, %union.anon.52 }
%union.anon.52 = type { ptr }
%union.anon.53 = type { ptr }
%union.anon.54 = type { i64 }
%union.anon.55 = type { %struct.anon.56 }
%struct.anon.56 = type { i32, ptr }
%union.anon.57 = type { %struct.anon.58 }
%struct.anon.58 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.59, i32, i32, i32, i16, i16, %union.anon.61, i32, %union.anon.62, %union.anon.63, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.59 = type { i32 }
%union.anon.61 = type { i32 }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i16 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.skb_ext = type { %struct.refcount_struct, [4 x i8], i8, [7 x i8], [0 x i8] }
%struct.sec_path = type { i32, i32, [6 x ptr], [1 x %struct.xfrm_offload] }
%struct.xfrm_offload = type { %struct.anon.210, i32, i32, i8, i8 }
%struct.anon.210 = type { i32, i32 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.71 }
%union.anon.71 = type { [4 x i32] }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.ixgbe_adv_tx_context_desc = type { i32, i32, i32, i32 }
%struct.anon.60 = type { i16, i16 }
%struct.page = type { i32, %union.anon.2, %union.anon.166, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.166 = type { %struct.atomic_t }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.netdev_bpf = type { i32, %union.anon.178 }
%union.anon.178 = type { %struct.anon.179 }
%struct.anon.179 = type { i32, ptr, ptr }
%struct.xdp_buff = type { ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.anon.197 = type { i64, i32, i32 }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.119 }
%union.anon.119 = type { %struct.anon.120 }
%struct.anon.120 = type { %struct.anon.121, [0 x %struct.sock_filter] }
%struct.anon.121 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync, [8 x i8] }
%struct.u64_stats_t = type { i64 }

@ixgbevf_driver_name = dso_local constant { [8 x i8], [24 x i8] } { [8 x i8] c"ixgbevf\00", [24 x i8] zeroinitializer }, align 32
@__UNIQUE_ID_author634 = internal constant [57 x i8] c"ixgbevf.author=Intel Corporation, <linux.nics@intel.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_description635 = internal constant [72 x i8] c"ixgbevf.description=Intel(R) 10 Gigabit Virtual Function Network Driver\00", section ".modinfo", align 1
@__UNIQUE_ID_file636 = internal constant [56 x i8] c"ixgbevf.file=drivers/net/ethernet/intel/ixgbevf/ixgbevf\00", section ".modinfo", align 1
@__UNIQUE_ID_license637 = internal constant [23 x i8] c"ixgbevf.license=GPL v2\00", section ".modinfo", align 1
@__param_str_debug = internal constant [14 x i8] c"ixgbevf.debug\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@debug = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@__param_debug = internal constant %struct.kernel_param { ptr @__param_str_debug, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.167 { ptr @debug } }, section "__param", align 4
@__UNIQUE_ID_debugtype638 = internal constant [27 x i8] c"ixgbevf.parmtype=debug:int\00", section ".modinfo", align 1
@__UNIQUE_ID_debug639 = internal constant [51 x i8] c"ixgbevf.parm=debug:Debug level (0=none,...,16=all)\00", section ".modinfo", align 1
@ixgbevf_reset.__UNIQUE_ID_ddebug658 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, i8 2, i8 124, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ixgbevf\00", [24 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ixgbevf_reset\00", [18 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c\00", [46 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"PF still resetting\0A\00", [44 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@ixgbevf_setup_tx_resources.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.4 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&(&tx_ring->syncp)->seq\00", [40 x i8] zeroinitializer }, align 32
@ixgbevf_setup_tx_resources.__UNIQUE_ID_ddebug669 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.5, ptr @.str.2, ptr @.str.6, i8 3, i8 88, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.5 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"ixgbevf_setup_tx_resources\00", [37 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"Unable to allocate memory for the transmit descriptor ring\0A\00", [36 x i8] zeroinitializer }, align 32
@ixgbevf_setup_rx_resources.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.7 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&(&rx_ring->syncp)->seq\00", [40 x i8] zeroinitializer }, align 32
@ixgbevf_setup_rx_resources._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.9, ptr @.str.2, i32 3510, ptr @.str.10, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Unable to allocate memory for the Rx descriptor ring\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"ixgbevf_setup_rx_resources\00", [37 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@ixgbevf_setup_rx_resources._entry_ptr = internal global ptr @ixgbevf_setup_rx_resources._entry, section ".printk_index", align 4
@ixgbevf_open._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.12, ptr @.str.13, ptr @.str.2, i32 3614, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013ixgbevf: Unable to start - perhaps the PF Driver isn't up yet\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ixgbevf_open\00", [19 x i8] zeroinitializer }, align 32
@ixgbevf_open._entry_ptr = internal global ptr @ixgbevf_open._entry, section ".printk_index", align 4
@__initcall__kmod_ixgbevf__675_4882_ixgbevf_init_module6 = internal global ptr @ixgbevf_init_module, section ".initcall6.init", align 4
@ixgbevf_driver = internal global { %struct.pci_driver, [36 x i8] } { %struct.pci_driver { %struct.list_head zeroinitializer, ptr @ixgbevf_driver_name, ptr @ixgbevf_pci_tbl, ptr @ixgbevf_probe, ptr @ixgbevf_remove, ptr null, ptr null, ptr @ixgbevf_shutdown, ptr null, ptr null, ptr null, ptr @ixgbevf_err_handler, ptr null, ptr null, %struct.device_driver { ptr null, ptr null, ptr null, ptr null, i8 0, i32 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @ixgbevf_pm_ops, ptr null, ptr null }, %struct.pci_dynids zeroinitializer }, [36 x i8] zeroinitializer }, align 32
@ixgbevf_wq = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__exitcall_ixgbevf_exit_module = internal global ptr @ixgbevf_exit_module, section ".exitcall.exit", align 4
@ixgbevf_remove_adapter._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.15, ptr @.str.2, i32 122, ptr @.str.10, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Adapter removed\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"ixgbevf_remove_adapter\00", [41 x i8] zeroinitializer }, align 32
@ixgbevf_remove_adapter._entry_ptr = internal global ptr @ixgbevf_remove_adapter._entry, section ".printk_index", align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@ixgbevf_configure_tx_ring.__UNIQUE_ID_ddebug653 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.16, ptr @.str.2, ptr @.str.17, i8 1, i8 -76, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.16 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"ixgbevf_configure_tx_ring\00", [38 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Could not enable Tx Queue %d\0A\00", [34 x i8] zeroinitializer }, align 32
@ixgbevf_configure_rx._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.19, ptr @.str.2, i32 2020, ptr @.str.10, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to set MTU at %d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ixgbevf_configure_rx\00", [43 x i8] zeroinitializer }, align 32
@ixgbevf_configure_rx._entry_ptr = internal global ptr @ixgbevf_configure_rx._entry, section ".printk_index", align 4
@ixgbevf_rx_desc_queue_enable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.21, ptr @.str.2, i32 1845, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013ixgbevf: RXDCTL.ENABLE queue %d not set while polling\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"ixgbevf_rx_desc_queue_enable\00", [35 x i8] zeroinitializer }, align 32
@ixgbevf_rx_desc_queue_enable._entry_ptr = internal global ptr @ixgbevf_rx_desc_queue_enable._entry, section ".printk_index", align 4
@ixgbevf_disable_rx_queue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.24, ptr @.str.2, i32 1825, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013ixgbevf: RXDCTL.ENABLE queue %d not cleared while polling\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"ixgbevf_disable_rx_queue\00", [39 x i8] zeroinitializer }, align 32
@ixgbevf_disable_rx_queue._entry_ptr = internal global ptr @ixgbevf_disable_rx_queue._entry, section ".printk_index", align 4
@ixgbevf_mbx_ops = external dso_local local_unnamed_addr constant %struct.ixgbe_mbx_operations, align 4
@ixgbevf_setup_all_tx_resources.__UNIQUE_ID_ddebug670 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.25, ptr @.str.2, ptr @.str.26, i8 3, i8 93, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.25 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"ixgbevf_setup_all_tx_resources\00", [33 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Allocation for Tx Queue %u failed\0A\00", [61 x i8] zeroinitializer }, align 32
@ixgbevf_setup_all_tx_resources.__UNIQUE_ID_ddebug671 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.25, ptr @.str.2, ptr @.str.27, i8 3, i8 95, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.27 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Allocation for XDP Queue %u failed\0A\00", [60 x i8] zeroinitializer }, align 32
@ixgbevf_setup_all_rx_resources.__UNIQUE_ID_ddebug672 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.28, ptr @.str.2, ptr @.str.29, i8 3, i8 115, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.28 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"ixgbevf_setup_all_rx_resources\00", [33 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Allocation for Rx Queue %u failed\0A\00", [61 x i8] zeroinitializer }, align 32
@ixgbevf_request_irq.__UNIQUE_ID_ddebug652 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.30, ptr @.str.2, ptr @.str.31, i8 1, i8 -108, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.30 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"ixgbevf_request_irq\00", [44 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"request_irq failed, Error %d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s-TxRx-%u\00", [21 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"%s-rx-%u\00", [23 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"%s-tx-%u\00", [23 x i8] zeroinitializer }, align 32
@ixgbevf_request_msix_irqs.__UNIQUE_ID_ddebug650 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.35, ptr @.str.2, ptr @.str.36, i8 1, i8 -120, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.35 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"ixgbevf_request_msix_irqs\00", [38 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"request_irq failed for MSIX interrupt Error: %d\0A\00", [47 x i8] zeroinitializer }, align 32
@ixgbevf_request_msix_irqs.__UNIQUE_ID_ddebug651 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.35, ptr @.str.2, ptr @.str.37, i8 1, i8 -118, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.37 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"request_irq for msix_other failed: %d\0A\00", [57 x i8] zeroinitializer }, align 32
@ixgbevf_init_module._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.39, ptr @.str.2, i32 4871, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"\016ixgbevf: %s\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"ixgbevf_init_module\00", [44 x i8] zeroinitializer }, align 32
@ixgbevf_init_module._entry_ptr = internal global ptr @ixgbevf_init_module._entry, section ".printk_index", align 4
@ixgbevf_driver_string = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"Intel(R) 10 Gigabit PCI Express Virtual Function Network Driver\00", [32 x i8] zeroinitializer }, align 32
@ixgbevf_init_module._entry.40 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.39, ptr @.str.2, i32 4872, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@ixgbevf_init_module._entry_ptr.41 = internal global ptr @ixgbevf_init_module._entry.40, section ".printk_index", align 4
@ixgbevf_copyright = internal global { [45 x i8], [51 x i8] } { [45 x i8] c"Copyright (c) 2009 - 2018 Intel Corporation.\00", [51 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@ixgbevf_init_module._entry.43 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.39, ptr @.str.2, i32 4875, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013ixgbevf: %s: Failed to create workqueue\0A\00", [53 x i8] zeroinitializer }, align 32
@ixgbevf_init_module._entry_ptr.45 = internal global ptr @ixgbevf_init_module._entry.43, section ".printk_index", align 4
@ixgbevf_pci_tbl = internal constant { [10 x %struct.pci_device_id], [64 x i8] } { [10 x %struct.pci_device_id] [%struct.pci_device_id { i32 32902, i32 4333, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5422, i32 -1, i32 -1, i32 0, i32 0, i32 1, i32 0 }, %struct.pci_device_id { i32 32902, i32 5397, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 32902, i32 5424, i32 -1, i32 -1, i32 0, i32 0, i32 3, i32 0 }, %struct.pci_device_id { i32 32902, i32 5477, i32 -1, i32 -1, i32 0, i32 0, i32 4, i32 0 }, %struct.pci_device_id { i32 32902, i32 5476, i32 -1, i32 -1, i32 0, i32 0, i32 5, i32 0 }, %struct.pci_device_id { i32 32902, i32 5544, i32 -1, i32 -1, i32 0, i32 0, i32 6, i32 0 }, %struct.pci_device_id { i32 32902, i32 5545, i32 -1, i32 -1, i32 0, i32 0, i32 7, i32 0 }, %struct.pci_device_id { i32 32902, i32 5573, i32 -1, i32 -1, i32 0, i32 0, i32 8, i32 0 }, %struct.pci_device_id zeroinitializer], [64 x i8] zeroinitializer }, align 32
@ixgbevf_err_handler = internal constant { %struct.pci_error_handlers, [40 x i8] } { %struct.pci_error_handlers { ptr @ixgbevf_io_error_detected, ptr null, ptr @ixgbevf_io_slot_reset, ptr null, ptr null, ptr @ixgbevf_io_resume }, [40 x i8] zeroinitializer }, align 32
@ixgbevf_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr @ixgbevf_suspend, ptr @ixgbevf_resume, ptr @ixgbevf_suspend, ptr @ixgbevf_resume, ptr @ixgbevf_suspend, ptr @ixgbevf_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@ixgbevf_info_tbl = internal constant { [9 x ptr], [60 x i8] } { [9 x ptr] [ptr @ixgbevf_82599_vf_info, ptr @ixgbevf_82599_vf_hv_info, ptr @ixgbevf_X540_vf_info, ptr @ixgbevf_X540_vf_hv_info, ptr @ixgbevf_X550_vf_info, ptr @ixgbevf_X550_vf_hv_info, ptr @ixgbevf_X550EM_x_vf_info, ptr @ixgbevf_X550EM_x_vf_hv_info, ptr @ixgbevf_x550em_a_vf_info], [60 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.46, ptr @.str.47, ptr @.str.2, i32 4527, ptr @.str.10, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"No usable DMA configuration, aborting\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ixgbevf_probe\00", [18 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry_ptr = internal global ptr @ixgbevf_probe._entry, section ".printk_index", align 4
@ixgbevf_probe._entry.48 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.47, ptr @.str.2, i32 4535, ptr @.str.10, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"pci_request_regions failed 0x%x\0A\00", [63 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry_ptr.50 = internal global ptr @ixgbevf_probe._entry.48, section ".printk_index", align 4
@ixgbevf_mbx_ops_legacy = external dso_local local_unnamed_addr constant %struct.ixgbe_mbx_operations, align 4
@ixgbevf_probe._entry.51 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.52, ptr @.str.47, ptr @.str.2, i32 4587, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013ixgbevf: invalid MAC address\0A\00", [32 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry_ptr.53 = internal global ptr @ixgbevf_probe._entry.51, section ".printk_index", align 4
@ixgbevf_probe.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.54 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"(&adapter->service_timer)\00", [38 x i8] zeroinitializer }, align 32
@ixgbevf_probe.__key.55 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.56 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"(work_completion)(&adapter->service_task)\00", [54 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"eth%d\00", [26 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry.58 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.59, ptr @.str.47, ptr @.str.2, i32 4678, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%pM\0A\00", [27 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry_ptr.61 = internal global ptr @ixgbevf_probe._entry.58, section ".printk_index", align 4
@ixgbevf_probe._entry.62 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.47, ptr @.str.2, i32 4679, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MAC: %d\0A\00", [23 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry_ptr.64 = internal global ptr @ixgbevf_probe._entry.62, section ".printk_index", align 4
@ixgbevf_probe._entry.65 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.66, ptr @.str.47, ptr @.str.2, i32 4683, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Intel(R) X550 Virtual Function\0A\00", [32 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry_ptr.67 = internal global ptr @ixgbevf_probe._entry.65, section ".printk_index", align 4
@ixgbevf_probe._entry.68 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.47, ptr @.str.2, i32 4686, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Intel(R) X540 Virtual Function\0A\00", [32 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry_ptr.70 = internal global ptr @ixgbevf_probe._entry.68, section ".printk_index", align 4
@ixgbevf_probe._entry.71 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.72, ptr @.str.47, ptr @.str.2, i32 4690, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Intel(R) 82599 Virtual Function\0A\00", [63 x i8] zeroinitializer }, align 32
@ixgbevf_probe._entry_ptr.73 = internal global ptr @ixgbevf_probe._entry.71, section ".printk_index", align 4
@ixgbevf_82599_vf_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_82599_vf_hv_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_X540_vf_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_X540_vf_hv_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_X550_vf_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_X550_vf_hv_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_X550EM_x_vf_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_X550EM_x_vf_hv_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_x550em_a_vf_info = external dso_local constant %struct.ixgbevf_info, align 4
@ixgbevf_netdev_ops = internal constant { %struct.net_device_ops, [80 x i8] } { %struct.net_device_ops { ptr null, ptr null, ptr @ixgbevf_open, ptr @ixgbevf_close, ptr @ixgbevf_xmit_frame, ptr @ixgbevf_features_check, ptr null, ptr null, ptr @ixgbevf_set_rx_mode, ptr @ixgbevf_set_mac, ptr @eth_validate_addr, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @ixgbevf_change_mtu, ptr null, ptr @ixgbevf_tx_timeout, ptr @ixgbevf_get_stats, ptr null, ptr null, ptr null, ptr @ixgbevf_vlan_rx_add_vid, ptr @ixgbevf_vlan_rx_kill_vid, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @ixgbevf_xdp, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/if_vlan.h\00", [40 x i8] zeroinitializer }, align 32
@ixgbevf_tx_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.76, ptr @.str.2, i32 4055, ptr @.str.10, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"TX DMA map failed\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"ixgbevf_tx_map\00", [17 x i8] zeroinitializer }, align 32
@ixgbevf_tx_map._entry_ptr = internal global ptr @ixgbevf_tx_map._entry, section ".printk_index", align 4
@dma_map_single_attrs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.77 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/dma-mapping.h\00", [36 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", [52 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@ixgbevf_change_mtu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.80, ptr @.str.2, i32 4264, ptr @.str.81, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"MTU cannot be changed while XDP program is loaded\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"ixgbevf_change_mtu\00", [45 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@ixgbevf_change_mtu._entry_ptr = internal global ptr @ixgbevf_change_mtu._entry, section ".printk_index", align 4
@ixgbevf_change_mtu.__UNIQUE_ID_ddebug673 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.80, ptr @.str.2, ptr @.str.82, i8 4, i8 45, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.82 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"changing MTU from %d to %d\0A\00", [36 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.83 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.85 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@ixgbevf_sw_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.86 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&adapter->mbx_lock\00", [45 x i8] zeroinitializer }, align 32
@ixgbevf_sw_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.88, ptr @.str.2, i32 3052, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"PF still in reset state.  Is the PF interface up?\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"ixgbevf_sw_init\00", [16 x i8] zeroinitializer }, align 32
@ixgbevf_sw_init._entry_ptr = internal global ptr @ixgbevf_sw_init._entry, section ".printk_index", align 4
@ixgbevf_sw_init._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.88, ptr @.str.2, i32 3056, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013ixgbevf: init_shared_code failed: %d\0A\00", [56 x i8] zeroinitializer }, align 32
@ixgbevf_sw_init._entry_ptr.91 = internal global ptr @ixgbevf_sw_init._entry.89, section ".printk_index", align 4
@ixgbevf_sw_init._entry.92 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.93, ptr @.str.88, ptr @.str.2, i32 3062, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Error reading MAC address\0A\00", [37 x i8] zeroinitializer }, align 32
@ixgbevf_sw_init._entry_ptr.94 = internal global ptr @ixgbevf_sw_init._entry.92, section ".printk_index", align 4
@ixgbevf_sw_init._entry.95 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.96, ptr @.str.88, ptr @.str.2, i32 3065, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"MAC address not assigned by administrator.\0A\00", [52 x i8] zeroinitializer }, align 32
@ixgbevf_sw_init._entry_ptr.97 = internal global ptr @ixgbevf_sw_init._entry.95, section ".printk_index", align 4
@ixgbevf_sw_init._entry.98 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.88, ptr @.str.2, i32 3070, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Assigning random MAC address\0A\00", [34 x i8] zeroinitializer }, align 32
@ixgbevf_sw_init._entry_ptr.100 = internal global ptr @ixgbevf_sw_init._entry.98, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@ixgbevf_watchdog_link_is_up._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.101, ptr @.str.102, ptr @.str.2, i32 3278, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"NIC Link is Up %s\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"ixgbevf_watchdog_link_is_up\00", [36 x i8] zeroinitializer }, align 32
@ixgbevf_watchdog_link_is_up._entry_ptr = internal global ptr @ixgbevf_watchdog_link_is_up._entry, section ".printk_index", align 4
@.str.103 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"10 Gbps\00", [24 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"1 Gbps\00", [25 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"100 Mbps\00", [23 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unknown speed\00", [18 x i8] zeroinitializer }, align 32
@ixgbevf_watchdog_link_is_down._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.108, ptr @.str.2, i32 3298, ptr @.str.60, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"NIC Link is Down\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"ixgbevf_watchdog_link_is_down\00", [34 x i8] zeroinitializer }, align 32
@ixgbevf_watchdog_link_is_down._entry_ptr = internal global ptr @ixgbevf_watchdog_link_is_down._entry, section ".printk_index", align 4
@ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug666 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.109, ptr @.str.2, ptr @.str.110, i8 2, i8 -26, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.109 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"ixgbevf_init_interrupt_scheme\00", [34 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Unable to setup interrupt capabilities\0A\00", [56 x i8] zeroinitializer }, align 32
@ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug667 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.109, ptr @.str.2, ptr @.str.111, i8 2, i8 -24, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.111 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Unable to allocate memory for queue vectors\0A\00", [51 x i8] zeroinitializer }, align 32
@ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug668 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.109, ptr @.str.2, ptr @.str.112, i8 2, i8 -22, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.112 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"Multiqueue %s: Rx Queue count = %u, Tx Queue count = %u XDP Queue count %u\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Enabled\00", [24 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Disabled\00", [23 x i8] zeroinitializer }, align 32
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@ixgbevf_acquire_msix_vectors._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.115, ptr @.str.116, ptr @.str.2, i32 2579, ptr @.str.10, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Unable to allocate MSI-X interrupts\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"ixgbevf_acquire_msix_vectors\00", [35 x i8] zeroinitializer }, align 32
@ixgbevf_acquire_msix_vectors._entry_ptr = internal global ptr @ixgbevf_acquire_msix_vectors._entry, section ".printk_index", align 4
@ixgbevf_clean_tx_irq._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.117, ptr @.str.118, ptr @.str.2, i32 389, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [298 x i8], [86 x i8] } { [298 x i8] c"\013ixgbevf: Detected Tx Unit Hang%s\0A  Tx Queue             <%d>\0A  TDH, TDT             <%x>, <%x>\0A  next_to_use          <%x>\0A  next_to_clean        <%x>\0Atx_buffer_info[next_to_clean]\0A  next_to_watch        <%p>\0A  eop_desc->wb.status  <%x>\0A  time_stamp           <%lx>\0A  jiffies              <%lx>\0A\00", [86 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ixgbevf_clean_tx_irq\00", [43 x i8] zeroinitializer }, align 32
@ixgbevf_clean_tx_irq._entry_ptr = internal global ptr @ixgbevf_clean_tx_irq._entry, section ".printk_index", align 4
@.str.119 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" XDP\00", [27 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@__seqprop_assert.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@.str.121 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/seqlock.h\00", [40 x i8] zeroinitializer }, align 32
@bpf_master_redirect_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.122 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/filter.h\00", [41 x i8] zeroinitializer }, align 32
@bpf_stats_enabled_key = external dso_local global %struct.static_key_false, align 4
@__tracepoint_xdp_exception = external dso_local global %struct.tracepoint, align 4
@.str.123 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/xdp.h\00", [37 x i8] zeroinitializer }, align 32
@trace_xdp_exception.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.124 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.125 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(p))\00", [32 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@ixgbevf_remove.__UNIQUE_ID_ddebug674 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.127, ptr @.str.2, ptr @.str.128, i8 4, i8 -94, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.127 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"ixgbevf_remove\00", [17 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Remove complete\0A\00", [47 x i8] zeroinitializer }, align 32
@ixgbevf_io_slot_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.130, ptr @.str.2, i32 4807, ptr @.str.10, ptr @.str.11 }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Cannot re-enable PCI device after reset.\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"ixgbevf_io_slot_reset\00", [42 x i8] zeroinitializer }, align 32
@ixgbevf_io_slot_reset._entry_ptr = internal global ptr @ixgbevf_io_slot_reset._entry, section ".printk_index", align 4
@switch.table.ixgbevf_poll = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 40, i32 200, i32 336], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 4294967291, i64 4294967293]
@__sancov_gen_cov_switch_values.131 = internal global [4 x i64] [i64 2, i64 32, i64 4294967291, i64 4294967293]
@__sancov_gen_cov_switch_values.132 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.133 = internal global [4 x i64] [i64 2, i64 32, i64 32, i64 128]
@__sancov_gen_cov_switch_values.134 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.135 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.136 = internal global [5 x i64] [i64 3, i64 16, i64 6, i64 8, i64 16]
@__sancov_gen_cov_switch_values.137 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.138 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.139 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@___asan_gen_.140 = private unnamed_addr constant [20 x i8] c"ixgbevf_driver_name\00", align 1
@___asan_gen_.142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 37, i32 12 }
@___asan_gen_.143 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@___asan_gen_.145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 84, i32 12 }
@___asan_gen_.157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 2544, i32 3 }
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3409, i32 2 }
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3425, i32 2 }
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3487, i32 2 }
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3510, i32 2 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3614, i32 4 }
@___asan_gen_.200 = private unnamed_addr constant [15 x i8] c"ixgbevf_driver\00", align 1
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4850, i32 26 }
@___asan_gen_.203 = private unnamed_addr constant [11 x i8] c"ixgbevf_wq\00", align 1
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 88, i32 33 }
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 122, i32 2 }
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1745, i32 3 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 2019, i32 3 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1844, i32 3 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1824, i32 3 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3447, i32 3 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3455, i32 3 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3532, i32 3 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1616, i32 3 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1552, i32 6 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1556, i32 6 }
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1559, i32 6 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1567, i32 4 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 1577, i32 3 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4871, i32 2 }
@___asan_gen_.296 = private unnamed_addr constant [22 x i8] c"ixgbevf_driver_string\00", align 1
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 38, i32 19 }
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4872, i32 2 }
@___asan_gen_.302 = private unnamed_addr constant [18 x i8] c"ixgbevf_copyright\00", align 1
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 41, i32 13 }
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4873, i32 15 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4875, i32 3 }
@___asan_gen_.314 = private unnamed_addr constant [16 x i8] c"ixgbevf_pci_tbl\00", align 1
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 64, i32 35 }
@___asan_gen_.317 = private unnamed_addr constant [20 x i8] c"ixgbevf_err_handler\00", align 1
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4842, i32 40 }
@___asan_gen_.320 = private unnamed_addr constant [15 x i8] c"ixgbevf_pm_ops\00", align 1
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4848, i32 8 }
@___asan_gen_.323 = private unnamed_addr constant [17 x i8] c"ixgbevf_info_tbl\00", align 1
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 44, i32 35 }
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4527, i32 4 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4535, i32 3 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4587, i32 3 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4655, i32 2 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4657, i32 2 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4665, i32 23 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4678, i32 2 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4679, i32 2 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4683, i32 3 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4686, i32 3 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4690, i32 3 }
@___asan_gen_.395 = private unnamed_addr constant [19 x i8] c"ixgbevf_netdev_ops\00", align 1
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4475, i32 36 }
@___asan_gen_.399 = private unnamed_addr constant [27 x i8] c"../include/linux/if_vlan.h\00", align 1
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.399, i32 598, i32 8 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4055, i32 2 }
@___asan_gen_.414 = private unnamed_addr constant [31 x i8] c"../include/linux/dma-mapping.h\00", align 1
@___asan_gen_.415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.414, i32 326, i32 6 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4264, i32 3 }
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4275, i32 2 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.438, i32 695, i32 2 }
@___asan_gen_.438 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.438, i32 723, i32 2 }
@___asan_gen_.440 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3047, i32 2 }
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3051, i32 3 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3056, i32 4 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3062, i32 4 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3064, i32 4 }
@___asan_gen_.478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3070, i32 3 }
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3271, i32 2 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 3298, i32 2 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 2970, i32 3 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 2977, i32 3 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 2981, i32 2 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 2578, i32 3 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 373, i32 3 }
@___asan_gen_.552 = private unnamed_addr constant [27 x i8] c"../include/linux/seqlock.h\00", align 1
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.552, i32 271, i32 2 }
@___asan_gen_.555 = private unnamed_addr constant [26 x i8] c"../include/linux/filter.h\00", align 1
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.555, i32 613, i32 2 }
@___asan_gen_.561 = private unnamed_addr constant [30 x i8] c"../include/trace/events/xdp.h\00", align 1
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.561, i32 28, i32 1 }
@___asan_gen_.564 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.564, i32 108, i32 2 }
@___asan_gen_.567 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.567, i32 1368, i32 10 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4747, i32 2 }
@___asan_gen_.575 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.581 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.582 = private constant [53 x i8] c"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c\00", align 1
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 4806, i32 3 }
@___asan_gen_.584 = private unnamed_addr constant [26 x i8] c"switch.table.ixgbevf_poll\00", align 1
@llvm.compiler.used = appending global [188 x ptr] [ptr @__UNIQUE_ID_author634, ptr @__UNIQUE_ID_debug639, ptr @__UNIQUE_ID_debugtype638, ptr @__UNIQUE_ID_description635, ptr @__UNIQUE_ID_file636, ptr @__UNIQUE_ID_license637, ptr @__exitcall_ixgbevf_exit_module, ptr @__initcall__kmod_ixgbevf__675_4882_ixgbevf_init_module6, ptr @__param_debug, ptr @ixgbevf_acquire_msix_vectors._entry, ptr @ixgbevf_acquire_msix_vectors._entry_ptr, ptr @ixgbevf_change_mtu._entry, ptr @ixgbevf_change_mtu._entry_ptr, ptr @ixgbevf_clean_tx_irq._entry, ptr @ixgbevf_clean_tx_irq._entry_ptr, ptr @ixgbevf_configure_rx._entry, ptr @ixgbevf_configure_rx._entry_ptr, ptr @ixgbevf_disable_rx_queue._entry, ptr @ixgbevf_disable_rx_queue._entry_ptr, ptr @ixgbevf_exit_module, ptr @ixgbevf_init_module._entry, ptr @ixgbevf_init_module._entry.40, ptr @ixgbevf_init_module._entry.43, ptr @ixgbevf_init_module._entry_ptr, ptr @ixgbevf_init_module._entry_ptr.41, ptr @ixgbevf_init_module._entry_ptr.45, ptr @ixgbevf_io_slot_reset._entry, ptr @ixgbevf_io_slot_reset._entry_ptr, ptr @ixgbevf_open._entry, ptr @ixgbevf_open._entry_ptr, ptr @ixgbevf_probe._entry, ptr @ixgbevf_probe._entry.48, ptr @ixgbevf_probe._entry.51, ptr @ixgbevf_probe._entry.58, ptr @ixgbevf_probe._entry.62, ptr @ixgbevf_probe._entry.65, ptr @ixgbevf_probe._entry.68, ptr @ixgbevf_probe._entry.71, ptr @ixgbevf_probe._entry_ptr, ptr @ixgbevf_probe._entry_ptr.50, ptr @ixgbevf_probe._entry_ptr.53, ptr @ixgbevf_probe._entry_ptr.61, ptr @ixgbevf_probe._entry_ptr.64, ptr @ixgbevf_probe._entry_ptr.67, ptr @ixgbevf_probe._entry_ptr.70, ptr @ixgbevf_probe._entry_ptr.73, ptr @ixgbevf_remove_adapter._entry, ptr @ixgbevf_remove_adapter._entry_ptr, ptr @ixgbevf_rx_desc_queue_enable._entry, ptr @ixgbevf_rx_desc_queue_enable._entry_ptr, ptr @ixgbevf_setup_rx_resources._entry, ptr @ixgbevf_setup_rx_resources._entry_ptr, ptr @ixgbevf_sw_init._entry, ptr @ixgbevf_sw_init._entry.89, ptr @ixgbevf_sw_init._entry.92, ptr @ixgbevf_sw_init._entry.95, ptr @ixgbevf_sw_init._entry.98, ptr @ixgbevf_sw_init._entry_ptr, ptr @ixgbevf_sw_init._entry_ptr.100, ptr @ixgbevf_sw_init._entry_ptr.91, ptr @ixgbevf_sw_init._entry_ptr.94, ptr @ixgbevf_sw_init._entry_ptr.97, ptr @ixgbevf_tx_map._entry, ptr @ixgbevf_tx_map._entry_ptr, ptr @ixgbevf_watchdog_link_is_down._entry, ptr @ixgbevf_watchdog_link_is_down._entry_ptr, ptr @ixgbevf_watchdog_link_is_up._entry, ptr @ixgbevf_watchdog_link_is_up._entry_ptr, ptr @ixgbevf_driver_name, ptr @debug, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @ixgbevf_setup_tx_resources.__key, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @ixgbevf_setup_rx_resources.__key, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @ixgbevf_driver, ptr @ixgbevf_wq, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @ixgbevf_driver_string, ptr @ixgbevf_copyright, ptr @.str.42, ptr @.str.44, ptr @ixgbevf_pci_tbl, ptr @ixgbevf_err_handler, ptr @ixgbevf_pm_ops, ptr @ixgbevf_info_tbl, ptr @.str.46, ptr @.str.47, ptr @.str.49, ptr @.str.52, ptr @ixgbevf_probe.__key, ptr @.str.54, ptr @ixgbevf_probe.__key.55, ptr @.str.56, ptr @.str.57, ptr @.str.59, ptr @.str.60, ptr @.str.63, ptr @.str.66, ptr @.str.69, ptr @.str.72, ptr @ixgbevf_netdev_ops, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @ixgbevf_sw_init.__key, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.90, ptr @.str.93, ptr @.str.96, ptr @.str.99, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @switch.table.ixgbevf_poll], section "llvm.metadata"
@0 = internal global [149 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_driver_name to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.140 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.142 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_setup_tx_resources.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_setup_rx_resources.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_setup_rx_resources._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_open._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_driver to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_remove_adapter._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_configure_rx._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_rx_desc_queue_enable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_disable_rx_queue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_init_module._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_driver_string to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_init_module._entry.40 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_copyright to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_init_module._entry.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_pci_tbl to i32), i32 320, i32 384, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_err_handler to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_info_tbl to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe._entry.48 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe._entry.51 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe.__key.55 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe._entry.58 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe._entry.62 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe._entry.65 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe._entry.68 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_probe._entry.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_netdev_ops to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_tx_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_change_mtu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_sw_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_sw_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_sw_init._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_sw_init._entry.92 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_sw_init._entry.95 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_sw_init._entry.98 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_watchdog_link_is_up._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_watchdog_link_is_down._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_acquire_msix_vectors._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_clean_tx_irq._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 298, i32 384, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ixgbevf_io_slot_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.ixgbevf_poll to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ixgbevf_read_reg(ptr noundef %hw, i32 noundef %reg) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw_addr = getelementptr inbounds %struct.ixgbe_hw, ptr %hw, i32 0, i32 1
  %0 = ptrtoint ptr %hw_addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %hw_addr, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !308

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.ptr = getelementptr i8, ptr %1, i32 %reg
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !309
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %2)
  %cmp = icmp eq i32 %2, -1
  br i1 %cmp, label %if.then12, label %if.end.cleanup_crit_edge, !prof !308

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then12:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw, i32 noundef %reg)
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ %3, %if.then12 ], [ %3, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_check_remove(ptr noundef %hw, i32 noundef %reg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %reg)
  %cmp = icmp eq i32 %reg, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw, align 4
  %hw_addr.i = getelementptr inbounds %struct.ixgbe_hw, ptr %hw, i32 0, i32 1
  %2 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hw_addr.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.then.cleanup_crit_edge, label %if.end.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %if.then
  %4 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %hw_addr.i, align 4
  %pdev.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %1, i32 0, i32 25
  %5 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.14) #17
  %state.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %1, i32 0, i32 30
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %9 = and i32 %8, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool2.not.i = icmp eq i32 %9, 0
  br i1 %tobool2.not.i, label %if.end.i.cleanup_crit_edge, label %if.then3.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3.i:                                       ; preds = %if.end.i
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i, align 4
  %12 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.then3.i.cleanup_crit_edge

if.then3.i.cleanup_crit_edge:                     ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.i.i:                                ; preds = %if.then3.i
  %13 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %state.i, align 4
  %15 = and i32 %14, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool3.not.i.i = icmp eq i32 %15, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true4.i.i, label %land.lhs.true.i.i.cleanup_crit_edge

land.lhs.true.i.i.cleanup_crit_edge:              ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true4.i.i:                               ; preds = %land.lhs.true.i.i
  %call6.i.i = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true4.i.i.cleanup.sink.split_crit_edge, label %land.lhs.true4.i.i.cleanup_crit_edge

land.lhs.true4.i.i.cleanup_crit_edge:             ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true4.i.i.cleanup.sink.split_crit_edge:  ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end:                                           ; preds = %entry
  %hw_addr.i6 = getelementptr inbounds %struct.ixgbe_hw, ptr %hw, i32 0, i32 1
  %16 = ptrtoint ptr %hw_addr.i6 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %hw_addr.i6, align 4
  %tobool.not.i7 = icmp eq ptr %17, null
  br i1 %tobool.not.i7, label %if.end.cleanup_crit_edge, label %if.end.i8, !prof !308

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i8:                                        ; preds = %if.end
  %add.ptr.i = getelementptr i8, ptr %17, i32 8
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !309
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %cond = icmp eq i32 %18, -1
  br i1 %cond, label %if.then12.i, label %if.end.i8.cleanup_crit_edge, !prof !308

if.end.i8.cleanup_crit_edge:                      ; preds = %if.end.i8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then12.i:                                      ; preds = %if.end.i8
  %19 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hw, align 4
  %21 = ptrtoint ptr %hw_addr.i6 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hw_addr.i6, align 4
  %tobool.not.i.i27 = icmp eq ptr %22, null
  br i1 %tobool.not.i.i27, label %if.then12.i.cleanup_crit_edge, label %if.end.i.i

if.then12.i.cleanup_crit_edge:                    ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i.i:                                       ; preds = %if.then12.i
  %23 = ptrtoint ptr %hw_addr.i6 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %hw_addr.i6, align 4
  %pdev.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %20, i32 0, i32 25
  %24 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pdev.i.i, align 4
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.14) #17
  %state.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %20, i32 0, i32 30
  %26 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %state.i.i, align 4
  %28 = and i32 %27, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool2.not.i.i = icmp eq i32 %28, 0
  br i1 %tobool2.not.i.i, label %if.end.i.i.if.then2_crit_edge, label %if.then3.i.i

if.end.i.i.if.then2_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then2

if.then3.i.i:                                     ; preds = %if.end.i.i
  %29 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %state.i.i, align 4
  %31 = and i32 %30, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i.i.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %if.then3.i.i.if.then2_crit_edge

if.then3.i.i.if.then2_crit_edge:                  ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then2

land.lhs.true.i.i.i:                              ; preds = %if.then3.i.i
  %32 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %state.i.i, align 4
  %34 = and i32 %33, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool3.not.i.i.i = icmp eq i32 %34, 0
  br i1 %tobool3.not.i.i.i, label %land.lhs.true4.i.i.i, label %land.lhs.true.i.i.i.if.then2_crit_edge

land.lhs.true.i.i.i.if.then2_crit_edge:           ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then2

land.lhs.true4.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %call6.i.i.i = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %call6.i.i.i, 0
  br i1 %tobool7.not.i.i.i, label %if.then.i.i.i, label %land.lhs.true4.i.i.i.if.then2_crit_edge

land.lhs.true4.i.i.i.if.then2_crit_edge:          ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then2

if.then.i.i.i:                                    ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %35 = load ptr, ptr @ixgbevf_wq, align 4
  %service_task.i.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %20, i32 0, i32 39
  %call.i.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %35, ptr noundef %service_task.i.i.i) #14
  br label %if.then2

if.then2:                                         ; preds = %if.then.i.i.i, %land.lhs.true4.i.i.i.if.then2_crit_edge, %land.lhs.true.i.i.i.if.then2_crit_edge, %if.then3.i.i.if.then2_crit_edge, %if.end.i.i.if.then2_crit_edge
  %36 = ptrtoint ptr %hw_addr.i6 to i32
  call void @__asan_load4_noabort(i32 %36)
  %.pr.pr = load ptr, ptr %hw_addr.i6, align 4
  %37 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hw, align 4
  %tobool.not.i10 = icmp eq ptr %.pr.pr, null
  br i1 %tobool.not.i10, label %if.then2.cleanup_crit_edge, label %if.end.i15

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i15:                                       ; preds = %if.then2
  %39 = ptrtoint ptr %hw_addr.i6 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %hw_addr.i6, align 4
  %pdev.i11 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %38, i32 0, i32 25
  %40 = ptrtoint ptr %pdev.i11 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pdev.i11, align 4
  %dev.i12 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i12, ptr noundef nonnull @.str.14) #17
  %state.i13 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %38, i32 0, i32 30
  %42 = ptrtoint ptr %state.i13 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %state.i13, align 4
  %44 = and i32 %43, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool2.not.i14 = icmp eq i32 %44, 0
  br i1 %tobool2.not.i14, label %if.end.i15.cleanup_crit_edge, label %if.then3.i17

if.end.i15.cleanup_crit_edge:                     ; preds = %if.end.i15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3.i17:                                     ; preds = %if.end.i15
  %45 = ptrtoint ptr %state.i13 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %state.i13, align 4
  %47 = and i32 %46, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.not.i.i16 = icmp eq i32 %47, 0
  br i1 %tobool.not.i.i16, label %land.lhs.true.i.i19, label %if.then3.i17.cleanup_crit_edge

if.then3.i17.cleanup_crit_edge:                   ; preds = %if.then3.i17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.i.i19:                              ; preds = %if.then3.i17
  %48 = ptrtoint ptr %state.i13 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %state.i13, align 4
  %50 = and i32 %49, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool3.not.i.i18 = icmp eq i32 %50, 0
  br i1 %tobool3.not.i.i18, label %land.lhs.true4.i.i22, label %land.lhs.true.i.i19.cleanup_crit_edge

land.lhs.true.i.i19.cleanup_crit_edge:            ; preds = %land.lhs.true.i.i19
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true4.i.i22:                             ; preds = %land.lhs.true.i.i19
  %call6.i.i20 = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i13) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i20)
  %tobool7.not.i.i21 = icmp eq i32 %call6.i.i20, 0
  br i1 %tobool7.not.i.i21, label %land.lhs.true4.i.i22.cleanup.sink.split_crit_edge, label %land.lhs.true4.i.i22.cleanup_crit_edge

land.lhs.true4.i.i22.cleanup_crit_edge:           ; preds = %land.lhs.true4.i.i22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true4.i.i22.cleanup.sink.split_crit_edge: ; preds = %land.lhs.true4.i.i22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %land.lhs.true4.i.i22.cleanup.sink.split_crit_edge, %land.lhs.true4.i.i.cleanup.sink.split_crit_edge
  %.sink33 = phi ptr [ %1, %land.lhs.true4.i.i.cleanup.sink.split_crit_edge ], [ %38, %land.lhs.true4.i.i22.cleanup.sink.split_crit_edge ]
  %51 = load ptr, ptr @ixgbevf_wq, align 4
  %service_task.i.i23 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %.sink33, i32 0, i32 39
  %call.i.i.i24 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %51, ptr noundef %service_task.i.i23) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %land.lhs.true4.i.i22.cleanup_crit_edge, %land.lhs.true.i.i19.cleanup_crit_edge, %if.then3.i17.cleanup_crit_edge, %if.end.i15.cleanup_crit_edge, %if.then2.cleanup_crit_edge, %if.then12.i.cleanup_crit_edge, %if.end.i8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true4.i.i.cleanup_crit_edge, %land.lhs.true.i.i.cleanup_crit_edge, %if.then3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ixgbevf_write_eitr(ptr nocapture noundef readonly %q_vector) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %q_vector to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %q_vector, align 128
  %v_idx3 = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %q_vector, i32 0, i32 1
  %2 = ptrtoint ptr %v_idx3 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %v_idx3, align 4
  %itr = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %q_vector, i32 0, i32 2
  %4 = ptrtoint ptr %itr to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %itr, align 2
  %hw_addr.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %1, i32 0, i32 26, i32 1
  %6 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %entry.ixgbe_write_reg.exit_crit_edge, label %do.body4.i, !prof !308

entry.ixgbe_write_reg.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit

do.body4.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i16 %3 to i32
  %mul = shl nuw nsw i32 %conv, 2
  %add = add nuw nsw i32 %mul, 2080
  %8 = and i16 %5, 4088
  %and = zext i16 %8 to i32
  %or = or i32 %and, -2147483648
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %9 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %add.ptr.i = getelementptr i8, ptr %7, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %9) #14, !srcloc !312
  br label %ixgbe_write_reg.exit

ixgbe_write_reg.exit:                             ; preds = %do.body4.i, %entry.ixgbe_write_reg.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ixgbevf_up(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @ixgbevf_configure(ptr noundef %adapter)
  tail call fastcc void @ixgbevf_up_complete(ptr noundef %adapter)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_configure(ptr noundef %adapter) unnamed_addr #0 align 64 {
entry:
  %def_q.i = alloca i32, align 4
  %num_tcs.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %def_q.i) #14
  %0 = ptrtoint ptr %def_q.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %def_q.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %num_tcs.i) #14
  %1 = ptrtoint ptr %num_tcs.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %num_tcs.i, align 4
  %num_rx_queues2.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 13
  %2 = ptrtoint ptr %num_rx_queues2.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_rx_queues2.i, align 8
  %num_tx_queues3.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 8
  %4 = ptrtoint ptr %num_tx_queues3.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_tx_queues3.i, align 8
  %mbx_lock.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 40
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock.i) #14
  %call.i = call i32 @ixgbevf_get_queues(ptr noundef %hw1.i, ptr noundef nonnull %num_tcs.i, ptr noundef nonnull %def_q.i) #14
  call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.ixgbevf_configure_dcb.exit_crit_edge

entry.ixgbevf_configure_dcb.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_dcb.exit

if.end.i:                                         ; preds = %entry
  %6 = ptrtoint ptr %num_tcs.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_tcs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp ugt i32 %7, 1
  br i1 %cmp.i, label %if.then5.i, label %if.end.i.if.end6.i_crit_edge

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %8 = ptrtoint ptr %def_q.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %def_q.i, align 4
  %conv.i = trunc i32 %9 to i16
  %tx_ring.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9
  %10 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tx_ring.i, align 4
  %reg_idx.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %11, i32 0, i32 21
  %12 = ptrtoint ptr %reg_idx.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv.i, ptr %reg_idx.i, align 16
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then5.i, %if.end.i.if.end6.i_crit_edge
  %num_rx_queues.0.i = phi i32 [ %7, %if.then5.i ], [ %3, %if.end.i.if.end6.i_crit_edge ]
  %num_tx_queues.0.i = phi i32 [ 1, %if.then5.i ], [ %5, %if.end.i.if.end6.i_crit_edge ]
  %13 = ptrtoint ptr %num_rx_queues2.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_rx_queues2.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %num_rx_queues.0.i)
  %cmp8.not.i = icmp eq i32 %14, %num_rx_queues.0.i
  br i1 %cmp8.not.i, label %lor.lhs.false.i, label %if.end6.i.if.then13.i_crit_edge

if.end6.i.if.then13.i_crit_edge:                  ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i

lor.lhs.false.i:                                  ; preds = %if.end6.i
  %15 = ptrtoint ptr %num_tx_queues3.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %num_tx_queues3.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %num_tx_queues.0.i)
  %cmp11.not.i = icmp eq i32 %16, %num_tx_queues.0.i
  br i1 %cmp11.not.i, label %lor.lhs.false.i.ixgbevf_configure_dcb.exit_crit_edge, label %lor.lhs.false.i.if.then13.i_crit_edge

lor.lhs.false.i.if.then13.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i

lor.lhs.false.i.ixgbevf_configure_dcb.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_dcb.exit

if.then13.i:                                      ; preds = %lor.lhs.false.i.if.then13.i_crit_edge, %if.end6.i.if.then13.i_crit_edge
  %timeout.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 3, i32 2
  %17 = ptrtoint ptr %timeout.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %timeout.i, align 4
  %state.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 30
  call void @_set_bit(i32 noundef 8, ptr noundef %state.i) #14
  br label %ixgbevf_configure_dcb.exit

ixgbevf_configure_dcb.exit:                       ; preds = %if.then13.i, %lor.lhs.false.i.ixgbevf_configure_dcb.exit_crit_edge, %entry.ixgbevf_configure_dcb.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %num_tcs.i) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %def_q.i) #14
  %netdev = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 23
  %18 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %netdev, align 4
  call void @ixgbevf_set_rx_mode(ptr noundef %19)
  %call.i6 = call i32 @_find_next_bit_be(ptr noundef %adapter, i32 noundef 4096, i32 noundef 0) #14
  %conv113.i = and i32 %call.i6, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %conv113.i)
  %cmp14.i = icmp ult i32 %conv113.i, 4096
  br i1 %cmp14.i, label %ixgbevf_configure_dcb.exit.for.body.i_crit_edge, label %ixgbevf_configure_dcb.exit.ixgbevf_restore_vlan.exit_crit_edge

ixgbevf_configure_dcb.exit.ixgbevf_restore_vlan.exit_crit_edge: ; preds = %ixgbevf_configure_dcb.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_restore_vlan.exit

ixgbevf_configure_dcb.exit.for.body.i_crit_edge:  ; preds = %ixgbevf_configure_dcb.exit
  br label %for.body.i

for.body.i:                                       ; preds = %ixgbevf_vlan_rx_add_vid.exit.i.for.body.i_crit_edge, %ixgbevf_configure_dcb.exit.for.body.i_crit_edge
  %conv116.i = phi i32 [ %conv1.i, %ixgbevf_vlan_rx_add_vid.exit.i.for.body.i_crit_edge ], [ %conv113.i, %ixgbevf_configure_dcb.exit.for.body.i_crit_edge ]
  %vid.0.in15.i = phi i32 [ %call7.i, %ixgbevf_vlan_rx_add_vid.exit.i.for.body.i_crit_edge ], [ %call.i6, %ixgbevf_configure_dcb.exit.for.body.i_crit_edge ]
  %20 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %netdev, align 4
  %hw1.i.i = getelementptr i8, ptr %21, i32 3048
  %mbx_lock.i.i = getelementptr i8, ptr %21, i32 3564
  call void @_raw_spin_lock_bh(ptr noundef %mbx_lock.i.i) #14
  %set_vfta.i.i = getelementptr i8, ptr %21, i32 3136
  %22 = ptrtoint ptr %set_vfta.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %set_vfta.i.i, align 4
  %conv.i.i = and i32 %vid.0.in15.i, 65535
  %call2.i.i = call i32 %23(ptr noundef %hw1.i.i, i32 noundef %conv.i.i, i32 noundef 0, i1 noundef zeroext true) #14
  call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock.i.i) #14
  %24 = zext i32 %call2.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call2.i.i, label %if.end8.i.i [
    i32 -5, label %for.body.i.ixgbevf_vlan_rx_add_vid.exit.i_crit_edge
    i32 -3, label %for.body.i.ixgbevf_vlan_rx_add_vid.exit.i_crit_edge34
  ]

for.body.i.ixgbevf_vlan_rx_add_vid.exit.i_crit_edge34: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_vlan_rx_add_vid.exit.i

for.body.i.ixgbevf_vlan_rx_add_vid.exit.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_vlan_rx_add_vid.exit.i

if.end8.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i.i.i = getelementptr i8, ptr %21, i32 2304
  call void @_set_bit(i32 noundef %conv.i.i, ptr noundef %add.ptr.i.i.i) #14
  br label %ixgbevf_vlan_rx_add_vid.exit.i

ixgbevf_vlan_rx_add_vid.exit.i:                   ; preds = %if.end8.i.i, %for.body.i.ixgbevf_vlan_rx_add_vid.exit.i_crit_edge, %for.body.i.ixgbevf_vlan_rx_add_vid.exit.i_crit_edge34
  %add.i = add nuw nsw i32 %conv116.i, 1
  %call7.i = call i32 @_find_next_bit_be(ptr noundef %adapter, i32 noundef 4096, i32 noundef %add.i) #14
  %conv1.i = and i32 %call7.i, 65535
  %cmp.i7 = icmp ult i32 %conv1.i, 4096
  br i1 %cmp.i7, label %ixgbevf_vlan_rx_add_vid.exit.i.for.body.i_crit_edge, label %ixgbevf_vlan_rx_add_vid.exit.i.ixgbevf_restore_vlan.exit_crit_edge

ixgbevf_vlan_rx_add_vid.exit.i.ixgbevf_restore_vlan.exit_crit_edge: ; preds = %ixgbevf_vlan_rx_add_vid.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_restore_vlan.exit

ixgbevf_vlan_rx_add_vid.exit.i.for.body.i_crit_edge: ; preds = %ixgbevf_vlan_rx_add_vid.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

ixgbevf_restore_vlan.exit:                        ; preds = %ixgbevf_vlan_rx_add_vid.exit.i.ixgbevf_restore_vlan.exit_crit_edge, %ixgbevf_configure_dcb.exit.ixgbevf_restore_vlan.exit_crit_edge
  call void @ixgbevf_ipsec_restore(ptr noundef %adapter) #14
  %25 = ptrtoint ptr %num_tx_queues3.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %num_tx_queues3.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp18.not.i = icmp eq i32 %26, 0
  br i1 %cmp18.not.i, label %ixgbevf_restore_vlan.exit.for.cond1.preheader.i_crit_edge, label %ixgbevf_restore_vlan.exit.for.body.i9_crit_edge

ixgbevf_restore_vlan.exit.for.body.i9_crit_edge:  ; preds = %ixgbevf_restore_vlan.exit
  br label %for.body.i9

ixgbevf_restore_vlan.exit.for.cond1.preheader.i_crit_edge: ; preds = %ixgbevf_restore_vlan.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond1.preheader.i

for.cond1.preheader.i:                            ; preds = %for.body.i9.for.cond1.preheader.i_crit_edge, %ixgbevf_restore_vlan.exit.for.cond1.preheader.i_crit_edge
  %num_xdp_queues.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 6
  %27 = ptrtoint ptr %num_xdp_queues.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_xdp_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp220.not.i = icmp eq i32 %28, 0
  br i1 %cmp220.not.i, label %for.cond1.preheader.i.ixgbevf_configure_tx.exit_crit_edge, label %for.cond1.preheader.i.for.body3.i_crit_edge

for.cond1.preheader.i.for.body3.i_crit_edge:      ; preds = %for.cond1.preheader.i
  br label %for.body3.i

for.cond1.preheader.i.ixgbevf_configure_tx.exit_crit_edge: ; preds = %for.cond1.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_tx.exit

for.body.i9:                                      ; preds = %for.body.i9.for.body.i9_crit_edge, %ixgbevf_restore_vlan.exit.for.body.i9_crit_edge
  %i.019.i = phi i32 [ %inc.i, %for.body.i9.for.body.i9_crit_edge ], [ 0, %ixgbevf_restore_vlan.exit.for.body.i9_crit_edge ]
  %arrayidx.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %i.019.i
  %29 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.i, align 4
  call fastcc void @ixgbevf_configure_tx_ring(ptr noundef %adapter, ptr noundef %30) #14
  %inc.i = add nuw i32 %i.019.i, 1
  %31 = ptrtoint ptr %num_tx_queues3.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %num_tx_queues3.i, align 8
  %cmp.i8 = icmp ult i32 %inc.i, %32
  br i1 %cmp.i8, label %for.body.i9.for.body.i9_crit_edge, label %for.body.i9.for.cond1.preheader.i_crit_edge

for.body.i9.for.cond1.preheader.i_crit_edge:      ; preds = %for.body.i9
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond1.preheader.i

for.body.i9.for.body.i9_crit_edge:                ; preds = %for.body.i9
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i9

for.body3.i:                                      ; preds = %for.body3.i.for.body3.i_crit_edge, %for.cond1.preheader.i.for.body3.i_crit_edge
  %i.121.i = phi i32 [ %inc6.i, %for.body3.i.for.body3.i_crit_edge ], [ 0, %for.cond1.preheader.i.for.body3.i_crit_edge ]
  %arrayidx4.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %i.121.i
  %33 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx4.i, align 4
  call fastcc void @ixgbevf_configure_tx_ring(ptr noundef %adapter, ptr noundef %34) #14
  %inc6.i = add nuw i32 %i.121.i, 1
  %35 = ptrtoint ptr %num_xdp_queues.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %num_xdp_queues.i, align 4
  %cmp2.i = icmp ult i32 %inc6.i, %36
  br i1 %cmp2.i, label %for.body3.i.for.body3.i_crit_edge, label %for.body3.i.ixgbevf_configure_tx.exit_crit_edge

for.body3.i.ixgbevf_configure_tx.exit_crit_edge:  ; preds = %for.body3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_tx.exit

for.body3.i.for.body3.i_crit_edge:                ; preds = %for.body3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body3.i

ixgbevf_configure_tx.exit:                        ; preds = %for.body3.i.ixgbevf_configure_tx.exit_crit_edge, %for.cond1.preheader.i.ixgbevf_configure_tx.exit_crit_edge
  %37 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %netdev, align 4
  %39 = ptrtoint ptr %num_rx_queues2.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %num_rx_queues2.i, align 8
  %hw_addr.i.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 1
  %41 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %42, null
  br i1 %tobool.not.i.i.i, label %ixgbevf_configure_tx.exit.ixgbevf_setup_psrtype.exit.i_crit_edge, label %do.body4.i.i.i, !prof !308

ixgbevf_configure_tx.exit.ixgbevf_setup_psrtype.exit.i_crit_edge: ; preds = %ixgbevf_configure_tx.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_setup_psrtype.exit.i

do.body4.i.i.i:                                   ; preds = %ixgbevf_configure_tx.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %40)
  %cmp.i.i = icmp sgt i32 %40, 1
  %spec.select.i.i = select i1 %cmp.i.i, i32 536875824, i32 4912
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %43 = call i32 @llvm.bswap.i32(i32 %spec.select.i.i) #14
  %add.ptr.i.i.i11 = getelementptr i8, ptr %42, i32 768
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i.i11, i32 %43) #14, !srcloc !312
  br label %ixgbevf_setup_psrtype.exit.i

ixgbevf_setup_psrtype.exit.i:                     ; preds = %do.body4.i.i.i, %ixgbevf_configure_tx.exit.ixgbevf_setup_psrtype.exit.i_crit_edge
  %type.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 3
  %44 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %45)
  %cmp.i12 = icmp ugt i32 %45, 2
  br i1 %cmp.i12, label %if.then.i, label %ixgbevf_setup_psrtype.exit.i.if.end.i17_crit_edge

ixgbevf_setup_psrtype.exit.i.if.end.i17_crit_edge: ; preds = %ixgbevf_setup_psrtype.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i17

if.then.i:                                        ; preds = %ixgbevf_setup_psrtype.exit.i
  %46 = ptrtoint ptr %num_rx_queues2.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %num_rx_queues2.i, align 8
  %rss_key.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 42
  br label %for.body.i.i

for.cond6.preheader.i.i:                          ; preds = %ixgbe_write_reg.exit.i.i
  %conv12.i.i = and i32 %47, 65535
  br label %for.body10.i.i

for.body.i.i:                                     ; preds = %ixgbe_write_reg.exit.i.i.for.body.i.i_crit_edge, %if.then.i
  %indvars.iv.i.i = phi i32 [ 0, %if.then.i ], [ %indvars.iv.next.i.i, %ixgbe_write_reg.exit.i.i.for.body.i.i_crit_edge ]
  %48 = ptrtoint ptr %rss_key.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rss_key.i.i, align 4
  %add.ptr.i.i = getelementptr i32, ptr %49, i32 %indvars.iv.i.i
  %50 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %add.ptr.i.i, align 4
  %52 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i.i30.i = icmp eq ptr %53, null
  br i1 %tobool.not.i.i30.i, label %for.body.i.i.ixgbe_write_reg.exit.i.i_crit_edge, label %do.body4.i.i32.i, !prof !308

for.body.i.i.ixgbe_write_reg.exit.i.i_crit_edge:  ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit.i.i

do.body4.i.i32.i:                                 ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul.i.i = shl nuw nsw i32 %indvars.iv.i.i, 2
  %add.i.i = add nuw nsw i32 %mul.i.i, 12544
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %54 = call i32 @llvm.bswap.i32(i32 %51) #14
  %add.ptr.i.i31.i = getelementptr i8, ptr %53, i32 %add.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i31.i, i32 %54) #14, !srcloc !312
  br label %ixgbe_write_reg.exit.i.i

ixgbe_write_reg.exit.i.i:                         ; preds = %do.body4.i.i32.i, %for.body.i.i.ixgbe_write_reg.exit.i.i_crit_edge
  %indvars.iv.next.i.i = add nuw nsw i32 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %indvars.iv.next.i.i, 10
  br i1 %exitcond.not.i.i, label %for.cond6.preheader.i.i, label %ixgbe_write_reg.exit.i.i.for.body.i.i_crit_edge

ixgbe_write_reg.exit.i.i.for.body.i.i_crit_edge:  ; preds = %ixgbe_write_reg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.body10.i.i:                                   ; preds = %for.inc27.i.i.for.body10.i.i_crit_edge, %for.cond6.preheader.i.i
  %indvars.iv68.i.i = phi i32 [ 0, %for.cond6.preheader.i.i ], [ %indvars.iv.next69.i.i, %for.inc27.i.i.for.body10.i.i_crit_edge ]
  %j.066.i.i = phi i8 [ 0, %for.cond6.preheader.i.i ], [ %inc29.i.i, %for.inc27.i.i.for.body10.i.i_crit_edge ]
  %vfreta.064.i.i = phi i32 [ 0, %for.cond6.preheader.i.i ], [ %vfreta.1.i.i, %for.inc27.i.i.for.body10.i.i_crit_edge ]
  %conv11.i.i = zext i8 %j.066.i.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv12.i.i, i32 %conv11.i.i)
  %cmp13.i.i = icmp eq i32 %conv12.i.i, %conv11.i.i
  %spec.store.select.i.i = select i1 %cmp13.i.i, i8 0, i8 %j.066.i.i
  %arrayidx.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 43, i32 %indvars.iv68.i.i
  %55 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %spec.store.select.i.i, ptr %arrayidx.i.i, align 1
  %conv15.i.i = zext i8 %spec.store.select.i.i to i32
  %and.i.i = and i32 %indvars.iv68.i.i, 3
  %mul17.i.i = shl nuw nsw i32 %and.i.i, 3
  %shl.i.i = shl nuw i32 %conv15.i.i, %mul17.i.i
  %or.i.i = or i32 %shl.i.i, %vfreta.064.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i.i)
  %cmp20.i.i = icmp eq i32 %and.i.i, 3
  br i1 %cmp20.i.i, label %if.then22.i.i, label %for.body10.i.i.for.inc27.i.i_crit_edge

for.body10.i.i.for.inc27.i.i_crit_edge:           ; preds = %for.body10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc27.i.i

if.then22.i.i:                                    ; preds = %for.body10.i.i
  %56 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i54.i.i = icmp eq ptr %57, null
  br i1 %tobool.not.i54.i.i, label %if.then22.i.i.for.inc27.i.i_crit_edge, label %do.body4.i56.i.i, !prof !308

if.then22.i.i.for.inc27.i.i_crit_edge:            ; preds = %if.then22.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc27.i.i

do.body4.i56.i.i:                                 ; preds = %if.then22.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %58 = and i32 %indvars.iv68.i.i, 124
  %add25.i.i = or i32 %58, 12800
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %59 = call i32 @llvm.bswap.i32(i32 %or.i.i) #14
  %add.ptr.i55.i.i = getelementptr i8, ptr %57, i32 %add25.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i55.i.i, i32 %59) #14, !srcloc !312
  br label %for.inc27.i.i

for.inc27.i.i:                                    ; preds = %do.body4.i56.i.i, %if.then22.i.i.for.inc27.i.i_crit_edge, %for.body10.i.i.for.inc27.i.i_crit_edge
  %vfreta.1.i.i = phi i32 [ %or.i.i, %for.body10.i.i.for.inc27.i.i_crit_edge ], [ 0, %if.then22.i.i.for.inc27.i.i_crit_edge ], [ 0, %do.body4.i56.i.i ]
  %indvars.iv.next69.i.i = add nuw nsw i32 %indvars.iv68.i.i, 1
  %inc29.i.i = add i8 %spec.store.select.i.i, 1
  %exitcond70.not.i.i = icmp eq i32 %indvars.iv.next69.i.i, 64
  br i1 %exitcond70.not.i.i, label %for.end30.i.i, label %for.inc27.i.i.for.body10.i.i_crit_edge

for.inc27.i.i.for.body10.i.i_crit_edge:           ; preds = %for.inc27.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body10.i.i

for.end30.i.i:                                    ; preds = %for.inc27.i.i
  %60 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i59.i.i = icmp eq ptr %61, null
  br i1 %tobool.not.i59.i.i, label %for.end30.i.i.if.end.i17_crit_edge, label %do.body4.i61.i.i, !prof !308

for.end30.i.i.if.end.i17_crit_edge:               ; preds = %for.end30.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i17

do.body4.i61.i.i:                                 ; preds = %for.end30.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %add.ptr.i60.i.i = getelementptr i8, ptr %61, i32 12288
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i60.i.i, i32 16790272) #14, !srcloc !312
  br label %if.end.i17

if.end.i17:                                       ; preds = %do.body4.i61.i.i, %for.end30.i.i.if.end.i17_crit_edge, %ixgbevf_setup_psrtype.exit.i.if.end.i17_crit_edge
  call void @_raw_spin_lock_bh(ptr noundef %mbx_lock.i) #14
  %set_rlpml.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 0, i32 21
  %62 = ptrtoint ptr %set_rlpml.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %set_rlpml.i, align 4
  %mtu.i = getelementptr inbounds %struct.net_device, ptr %38, i32 0, i32 20
  %64 = ptrtoint ptr %mtu.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %mtu.i, align 4
  %66 = trunc i32 %65 to i16
  %conv.i14 = add i16 %66, 18
  %call.i15 = call i32 %63(ptr noundef %hw1.i, i16 noundef zeroext %conv.i14) #14
  call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i15)
  %tobool.not.i16 = icmp eq i32 %call.i15, 0
  br i1 %tobool.not.i16, label %if.end.i17.if.end8.i_crit_edge, label %do.end.i

if.end.i17.if.end8.i_crit_edge:                   ; preds = %if.end.i17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

do.end.i:                                         ; preds = %if.end.i17
  call void @__sanitizer_cov_trace_pc() #16
  %pdev.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 25
  %67 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %pdev.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %68, i32 0, i32 44
  %69 = ptrtoint ptr %mtu.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %mtu.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.18, i32 noundef %70) #17
  br label %if.end8.i

if.end8.i:                                        ; preds = %do.end.i, %if.end.i17.if.end8.i_crit_edge
  %71 = ptrtoint ptr %num_rx_queues2.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %num_rx_queues2.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %cmp951.i = icmp sgt i32 %72, 0
  br i1 %cmp951.i, label %for.body.lr.ph.i18, label %if.end8.i.ixgbevf_configure_rx.exit_crit_edge

if.end8.i.ixgbevf_configure_rx.exit_crit_edge:    ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_rx.exit

for.body.lr.ph.i18:                               ; preds = %if.end8.i
  %flags.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 44
  %io_addr.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 35
  br label %for.body.i20

for.body.i20:                                     ; preds = %ixgbevf_configure_rx_ring.exit.i.for.body.i20_crit_edge, %for.body.lr.ph.i18
  %i.052.i = phi i32 [ 0, %for.body.lr.ph.i18 ], [ %inc.i21, %ixgbevf_configure_rx_ring.exit.i.for.body.i20_crit_edge ]
  %arrayidx.i19 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %i.052.i
  %73 = ptrtoint ptr %arrayidx.i19 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx.i19, align 4
  %75 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %netdev, align 4
  %mtu.i.i = getelementptr inbounds %struct.net_device, ptr %76, i32 0, i32 20
  %77 = ptrtoint ptr %mtu.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %mtu.i.i, align 4
  %state.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 13
  call void @_clear_bit(i32 noundef 1, ptr noundef %state.i.i) #14
  call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  %79 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %flags.i.i, align 8
  %and.i33.i = and i32 %80, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i33.i)
  %tobool.not.i.i = icmp eq i32 %and.i33.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %for.body.i20.ixgbevf_set_rx_buffer_len.exit.i_crit_edge

for.body.i20.ixgbevf_set_rx_buffer_len.exit.i_crit_edge: ; preds = %for.body.i20
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_set_rx_buffer_len.exit.i

if.end.i.i:                                       ; preds = %for.body.i20
  %81 = add i32 %78, -1645
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1663, i32 %81)
  %cmp.i34.i = icmp ult i32 %81, -1663
  br i1 %cmp.i34.i, label %if.then4.i.i, label %if.end.i.i.if.end6.i.i_crit_edge

if.end.i.i.if.end6.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  br label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.then4.i.i, %if.end.i.i.if.end6.i.i_crit_edge
  %82 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %83)
  %cmp7.i.i = icmp eq i32 %83, 1
  br i1 %cmp7.i.i, label %land.lhs.true.i.i, label %if.end6.i.i.if.end11.i.i_crit_edge

if.end6.i.i.if.end11.i.i_crit_edge:               ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i.i

land.lhs.true.i.i:                                ; preds = %if.end6.i.i
  %84 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %85, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool9.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool9.not.i.i, label %land.lhs.true.i.i.ixgbevf_set_rx_buffer_len.exit.i_crit_edge, label %land.lhs.true.i.i.if.end11.i.i_crit_edge

land.lhs.true.i.i.if.end11.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i.i

land.lhs.true.i.i.ixgbevf_set_rx_buffer_len.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_set_rx_buffer_len.exit.i

if.end11.i.i:                                     ; preds = %land.lhs.true.i.i.if.end11.i.i_crit_edge, %if.end6.i.i.if.end11.i.i_crit_edge
  call void @_set_bit(i32 noundef 1, ptr noundef %state.i.i) #14
  br label %ixgbevf_set_rx_buffer_len.exit.i

ixgbevf_set_rx_buffer_len.exit.i:                 ; preds = %if.end11.i.i, %land.lhs.true.i.i.ixgbevf_set_rx_buffer_len.exit.i_crit_edge, %for.body.i20.ixgbevf_set_rx_buffer_len.exit.i_crit_edge
  %dma.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 6
  %86 = ptrtoint ptr %dma.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %dma.i.i, align 8
  %reg_idx2.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 21
  %88 = ptrtoint ptr %reg_idx2.i.i to i32
  call void @__asan_load2_noabort(i32 %88)
  %89 = load i16, ptr %reg_idx2.i.i, align 16
  %90 = shl i16 %89, 6
  %91 = and i16 %90, 16320
  %mul.i35.i = zext i16 %91 to i32
  %add.i36.i = add nuw nsw i32 %mul.i35.i, 4136
  %92 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i.i38.i = icmp eq ptr %93, null
  br i1 %tobool.not.i.i38.i, label %ixgbevf_set_rx_buffer_len.exit.i.ixgbevf_read_reg.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !308

ixgbevf_set_rx_buffer_len.exit.i.ixgbevf_read_reg.exit.i.i_crit_edge: ; preds = %ixgbevf_set_rx_buffer_len.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i.i

if.end.i.i.i:                                     ; preds = %ixgbevf_set_rx_buffer_len.exit.i
  %add.ptr.i.i39.i = getelementptr i8, ptr %93, i32 %add.i36.i
  %94 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i39.i) #14, !srcloc !309
  %95 = call i32 @llvm.bswap.i32(i32 %94) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %94)
  %cmp.i.i.i = icmp eq i32 %94, -1
  br i1 %cmp.i.i.i, label %if.then12.i.i.i, label %if.end.i.i.i.ixgbevf_read_reg.exit.i.i_crit_edge, !prof !308

if.end.i.i.i.ixgbevf_read_reg.exit.i.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i.i

if.then12.i.i.i:                                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @ixgbevf_check_remove(ptr noundef %hw1.i, i32 noundef %add.i36.i) #14
  br label %ixgbevf_read_reg.exit.i.i

ixgbevf_read_reg.exit.i.i:                        ; preds = %if.then12.i.i.i, %if.end.i.i.i.ixgbevf_read_reg.exit.i.i_crit_edge, %ixgbevf_set_rx_buffer_len.exit.i.ixgbevf_read_reg.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ -1, %ixgbevf_set_rx_buffer_len.exit.i.ixgbevf_read_reg.exit.i.i_crit_edge ], [ %95, %if.then12.i.i.i ], [ %95, %if.end.i.i.i.ixgbevf_read_reg.exit.i.i_crit_edge ]
  call fastcc void @ixgbevf_disable_rx_queue(ptr noundef %adapter, ptr noundef %74) #14
  %96 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i91.i.i = icmp eq ptr %97, null
  br i1 %tobool.not.i91.i.i, label %ixgbevf_read_reg.exit.i.i.ixgbe_write_reg.exit.i41.i_crit_edge, label %do.body4.i.i40.i, !prof !308

ixgbevf_read_reg.exit.i.i.ixgbe_write_reg.exit.i41.i_crit_edge: ; preds = %ixgbevf_read_reg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit.i41.i

do.body4.i.i40.i:                                 ; preds = %ixgbevf_read_reg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %add7.i.i = add nuw nsw i32 %mul.i35.i, 4096
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %98 = call i32 @llvm.bswap.i32(i32 %87) #14
  %add.ptr.i92.i.i = getelementptr i8, ptr %97, i32 %add7.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i92.i.i, i32 %98) #14, !srcloc !312
  br label %ixgbe_write_reg.exit.i41.i

ixgbe_write_reg.exit.i41.i:                       ; preds = %do.body4.i.i40.i, %ixgbevf_read_reg.exit.i.i.ixgbe_write_reg.exit.i41.i_crit_edge
  %99 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i94.i.i = icmp eq ptr %100, null
  br i1 %tobool.not.i94.i.i, label %ixgbe_write_reg.exit.i41.i.ixgbe_write_reg.exit97.i.i_crit_edge, label %do.body4.i96.i.i, !prof !308

ixgbe_write_reg.exit.i41.i.ixgbe_write_reg.exit97.i.i_crit_edge: ; preds = %ixgbe_write_reg.exit.i41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit97.i.i

do.body4.i96.i.i:                                 ; preds = %ixgbe_write_reg.exit.i41.i
  call void @__sanitizer_cov_trace_pc() #16
  %add11.i.i = add nuw nsw i32 %mul.i35.i, 4100
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %add.ptr.i95.i.i = getelementptr i8, ptr %100, i32 %add11.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i95.i.i, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit97.i.i

ixgbe_write_reg.exit97.i.i:                       ; preds = %do.body4.i96.i.i, %ixgbe_write_reg.exit.i41.i.ixgbe_write_reg.exit97.i.i_crit_edge
  %count.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 8
  %101 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %count.i.i, align 32
  %103 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i99.i.i = icmp eq ptr %104, null
  br i1 %tobool.not.i99.i.i, label %ixgbe_write_reg.exit97.i.i.ixgbe_write_reg.exit102.i.i_crit_edge, label %do.body4.i101.i.i, !prof !308

ixgbe_write_reg.exit97.i.i.ixgbe_write_reg.exit102.i.i_crit_edge: ; preds = %ixgbe_write_reg.exit97.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit102.i.i

do.body4.i101.i.i:                                ; preds = %ixgbe_write_reg.exit97.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv16.i.i = zext i16 %102 to i32
  %mul17.i42.i = shl nuw nsw i32 %conv16.i.i, 4
  %add15.i.i = add nuw nsw i32 %mul.i35.i, 4104
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %105 = call i32 @llvm.bswap.i32(i32 %mul17.i42.i) #14
  %add.ptr.i100.i.i = getelementptr i8, ptr %104, i32 %add15.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i100.i.i, i32 %105) #14, !srcloc !312
  br label %ixgbe_write_reg.exit102.i.i

ixgbe_write_reg.exit102.i.i:                      ; preds = %do.body4.i101.i.i, %ixgbe_write_reg.exit97.i.i.ixgbe_write_reg.exit102.i.i_crit_edge
  %106 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i104.i.i = icmp eq ptr %107, null
  br i1 %tobool.not.i104.i.i, label %ixgbe_write_reg.exit102.i.i.ixgbe_write_reg.exit107.i.i_crit_edge, label %do.body4.i106.i.i, !prof !308

ixgbe_write_reg.exit102.i.i.ixgbe_write_reg.exit107.i.i_crit_edge: ; preds = %ixgbe_write_reg.exit102.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit107.i.i

do.body4.i106.i.i:                                ; preds = %ixgbe_write_reg.exit102.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %add20.i.i = add nuw nsw i32 %mul.i35.i, 4108
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %add.ptr.i105.i.i = getelementptr i8, ptr %107, i32 %add20.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i105.i.i, i32 131072) #14, !srcloc !312
  br label %ixgbe_write_reg.exit107.i.i

ixgbe_write_reg.exit107.i.i:                      ; preds = %do.body4.i106.i.i, %ixgbe_write_reg.exit102.i.i.ixgbe_write_reg.exit107.i.i_crit_edge
  %108 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i109.i.i = icmp eq ptr %109, null
  br i1 %tobool.not.i109.i.i, label %ixgbe_write_reg.exit107.i.i.ixgbe_write_reg.exit112.i.i_crit_edge, label %do.body4.i111.i.i, !prof !308

ixgbe_write_reg.exit107.i.i.ixgbe_write_reg.exit112.i.i_crit_edge: ; preds = %ixgbe_write_reg.exit107.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit112.i.i

do.body4.i111.i.i:                                ; preds = %ixgbe_write_reg.exit107.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %add23.i.i = add nuw nsw i32 %mul.i35.i, 4112
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %add.ptr.i110.i.i = getelementptr i8, ptr %109, i32 %add23.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i110.i.i, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit112.i.i

ixgbe_write_reg.exit112.i.i:                      ; preds = %do.body4.i111.i.i, %ixgbe_write_reg.exit107.i.i.ixgbe_write_reg.exit112.i.i_crit_edge
  %add26.i.i = add nuw nsw i32 %mul.i35.i, 4120
  %110 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i114.i.i = icmp eq ptr %111, null
  br i1 %tobool.not.i114.i.i, label %ixgbe_write_reg.exit112.i.i.ixgbe_write_reg.exit117.i.i_crit_edge, label %do.body4.i116.i.i, !prof !308

ixgbe_write_reg.exit112.i.i.ixgbe_write_reg.exit117.i.i_crit_edge: ; preds = %ixgbe_write_reg.exit112.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit117.i.i

do.body4.i116.i.i:                                ; preds = %ixgbe_write_reg.exit112.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %add.ptr.i115.i.i = getelementptr i8, ptr %111, i32 %add26.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i115.i.i, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit117.i.i

ixgbe_write_reg.exit117.i.i:                      ; preds = %do.body4.i116.i.i, %ixgbe_write_reg.exit112.i.i.ixgbe_write_reg.exit117.i.i_crit_edge
  %112 = ptrtoint ptr %io_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %io_addr.i.i, align 4
  %add.ptr.i43.i = getelementptr i8, ptr %113, i32 %add26.i.i
  %tail.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 19
  %114 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %add.ptr.i43.i, ptr %tail.i.i, align 8
  %115 = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 12
  %116 = ptrtoint ptr %115 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %115, align 8
  %118 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load2_noabort(i32 %118)
  %119 = load i16, ptr %count.i.i, align 32
  %conv31.i.i = zext i16 %119 to i32
  %mul32.i.i = mul nuw nsw i32 %conv31.i.i, 12
  %120 = call ptr @memset(ptr %117, i32 0, i32 %mul32.i.i)
  %desc.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 5
  %121 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %desc.i.i, align 4
  %length.i.i = getelementptr inbounds %struct.anon.203, ptr %122, i32 0, i32 1, i32 1
  %123 = ptrtoint ptr %length.i.i to i32
  call void @__asan_store2_noabort(i32 %123)
  store i16 0, ptr %length.i.i, align 4
  %next_to_clean.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 10
  %124 = ptrtoint ptr %next_to_clean.i.i to i32
  call void @__asan_store2_noabort(i32 %124)
  store i16 0, ptr %next_to_clean.i.i, align 4
  %next_to_use.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 9
  %125 = ptrtoint ptr %next_to_use.i.i to i32
  call void @__asan_store2_noabort(i32 %125)
  store i16 0, ptr %next_to_use.i.i, align 2
  %next_to_alloc.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %74, i32 0, i32 11
  %126 = ptrtoint ptr %next_to_alloc.i.i to i32
  call void @__asan_store2_noabort(i32 %126)
  store i16 0, ptr %next_to_alloc.i.i, align 2
  %127 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %state.i.i, align 4
  %129 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %130, null
  br i1 %tobool.not.i.i.i.i, label %ixgbe_write_reg.exit117.i.i.ixgbevf_configure_srrctl.exit.i.i_crit_edge, label %do.body4.i.i.i.i, !prof !308

ixgbe_write_reg.exit117.i.i.ixgbevf_configure_srrctl.exit.i.i_crit_edge: ; preds = %ixgbe_write_reg.exit117.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_srrctl.exit.i.i

do.body4.i.i.i.i:                                 ; preds = %ixgbe_write_reg.exit117.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %add.i.i.i = add nuw nsw i32 %mul.i35.i, 4116
  %and1.i.i.i.i = and i32 %128, 1
  %131 = or i32 %and1.i.i.i.i, 301990914
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %132 = call i32 @llvm.bswap.i32(i32 %131) #14
  %add.ptr.i.i.i.i = getelementptr i8, ptr %130, i32 %add.i.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i.i.i, i32 %132) #14, !srcloc !312
  br label %ixgbevf_configure_srrctl.exit.i.i

ixgbevf_configure_srrctl.exit.i.i:                ; preds = %do.body4.i.i.i.i, %ixgbe_write_reg.exit117.i.i.ixgbevf_configure_srrctl.exit.i.i_crit_edge
  %133 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %134)
  %cmp.not.i.i = icmp eq i32 %134, 1
  br i1 %cmp.not.i.i, label %ixgbevf_configure_srrctl.exit.i.i.if.end42.i.i_crit_edge, label %if.then.i.i

ixgbevf_configure_srrctl.exit.i.i.if.end42.i.i_crit_edge: ; preds = %ixgbevf_configure_srrctl.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42.i.i

if.then.i.i:                                      ; preds = %ixgbevf_configure_srrctl.exit.i.i
  %and36.i.i = and i32 %retval.0.i.i.i, -49152
  %135 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load volatile i32, ptr %state.i.i, align 4
  %137 = and i32 %136, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %137)
  %tobool.not.i45.i = icmp eq i32 %137, 0
  br i1 %tobool.not.i45.i, label %if.then.i.i.if.end42.i.i_crit_edge, label %land.lhs.true.i48.i

if.then.i.i.if.end42.i.i_crit_edge:               ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42.i.i

land.lhs.true.i48.i:                              ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %138 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile i32, ptr %state.i.i, align 4
  %and1.i89.i.i = and i32 %139, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i89.i.i)
  %tobool40.not.i.i = icmp eq i32 %and1.i89.i.i, 0
  %or.i46.i = or i32 %and36.i.i, 34430
  %spec.select.i47.i = select i1 %tobool40.not.i.i, i32 %or.i46.i, i32 %and36.i.i
  br label %if.end42.i.i

if.end42.i.i:                                     ; preds = %land.lhs.true.i48.i, %if.then.i.i.if.end42.i.i_crit_edge, %ixgbevf_configure_srrctl.exit.i.i.if.end42.i.i_crit_edge
  %rxdctl.0.i.i = phi i32 [ %and36.i.i, %if.then.i.i.if.end42.i.i_crit_edge ], [ %retval.0.i.i.i, %ixgbevf_configure_srrctl.exit.i.i.if.end42.i.i_crit_edge ], [ %spec.select.i47.i, %land.lhs.true.i48.i ]
  %140 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i119.i.i = icmp eq ptr %141, null
  br i1 %tobool.not.i119.i.i, label %if.end42.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge, label %ixgbe_write_reg.exit122.i.i, !prof !308

if.end42.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge: ; preds = %if.end42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_desc_queue_enable.exit.i.i

ixgbe_write_reg.exit122.i.i:                      ; preds = %if.end42.i.i
  %or43.i.i = or i32 %rxdctl.0.i.i, 1107296256
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %142 = call i32 @llvm.bswap.i32(i32 %or43.i.i) #14
  %add.ptr.i120.i.i = getelementptr i8, ptr %141, i32 %add.i36.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i120.i.i, i32 %142) #14, !srcloc !312
  %143 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %.pr.i.i = load ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i124.i.i = icmp eq ptr %.pr.i.i, null
  br i1 %tobool.not.i124.i.i, label %ixgbe_write_reg.exit122.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge, label %do.body.preheader.i.i.i, !prof !308

ixgbe_write_reg.exit122.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge: ; preds = %ixgbe_write_reg.exit122.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_desc_queue_enable.exit.i.i

do.body.preheader.i.i.i:                          ; preds = %ixgbe_write_reg.exit122.i.i
  %144 = ptrtoint ptr %reg_idx2.i.i to i32
  call void @__asan_load2_noabort(i32 %144)
  %145 = load i16, ptr %reg_idx2.i.i, align 16
  %146 = and i16 %145, 255
  %conv6.i.i.i = zext i16 %146 to i32
  %mul.i125.i.i = shl nuw nsw i32 %conv6.i.i.i, 6
  %add.i126.i.i = add nuw nsw i32 %mul.i125.i.i, 4136
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %ixgbevf_read_reg.exit.i.i.i.do.body.i.i.i_crit_edge, %do.body.preheader.i.i.i
  %wait_loop.0.i.i.i = phi i32 [ %dec.i.i.i, %ixgbevf_read_reg.exit.i.i.i.do.body.i.i.i_crit_edge ], [ 10, %do.body.preheader.i.i.i ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #14
  %147 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i.i127.i.i = icmp eq ptr %148, null
  br i1 %tobool.not.i.i127.i.i, label %ixgbevf_read_reg.exit.thread.i.i.i, label %if.end.i.i.i.i, !prof !308

ixgbevf_read_reg.exit.thread.i.i.i:               ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %wait_loop.0.i.i.i)
  %tobool7.not27.i.i.i = icmp eq i32 %wait_loop.0.i.i.i, 1
  br i1 %tobool7.not27.i.i.i, label %ixgbevf_read_reg.exit.thread.i.i.i.do.end15.i.i.i_crit_edge, label %ixgbevf_read_reg.exit.thread.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge

ixgbevf_read_reg.exit.thread.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge: ; preds = %ixgbevf_read_reg.exit.thread.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_desc_queue_enable.exit.i.i

ixgbevf_read_reg.exit.thread.i.i.i.do.end15.i.i.i_crit_edge: ; preds = %ixgbevf_read_reg.exit.thread.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end15.i.i.i

if.end.i.i.i.i:                                   ; preds = %do.body.i.i.i
  %add.ptr.i.i128.i.i = getelementptr i8, ptr %148, i32 %add.i126.i.i
  %149 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i128.i.i) #14, !srcloc !309
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %149)
  %cmp.i.i.i.i = icmp eq i32 %149, -1
  br i1 %cmp.i.i.i.i, label %ixgbevf_read_reg.exit.thread37.i.i.i, label %ixgbevf_read_reg.exit.i.i.i, !prof !308

ixgbevf_read_reg.exit.thread37.i.i.i:             ; preds = %if.end.i.i.i.i
  call fastcc void @ixgbevf_check_remove(ptr noundef %hw1.i, i32 noundef %add.i126.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %wait_loop.0.i.i.i)
  %tobool7.not39.i.i.i = icmp eq i32 %wait_loop.0.i.i.i, 1
  br i1 %tobool7.not39.i.i.i, label %ixgbevf_read_reg.exit.thread37.i.i.i.do.end15.i.i.i_crit_edge, label %ixgbevf_read_reg.exit.thread37.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge

ixgbevf_read_reg.exit.thread37.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge: ; preds = %ixgbevf_read_reg.exit.thread37.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_desc_queue_enable.exit.i.i

ixgbevf_read_reg.exit.thread37.i.i.i.do.end15.i.i.i_crit_edge: ; preds = %ixgbevf_read_reg.exit.thread37.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end15.i.i.i

ixgbevf_read_reg.exit.i.i.i:                      ; preds = %if.end.i.i.i.i
  %dec.i.i.i = add nsw i32 %wait_loop.0.i.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %dec.i.i.i, 0
  %tobool7.not.not.i.i.i = xor i1 %tobool7.not.i.i.i, true
  %150 = and i32 %149, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %150)
  %tobool8.not.i.i.i = icmp eq i32 %150, 0
  %or.cond.i.i.i = select i1 %tobool7.not.not.i.i.i, i1 %tobool8.not.i.i.i, i1 false
  br i1 %or.cond.i.i.i, label %ixgbevf_read_reg.exit.i.i.i.do.body.i.i.i_crit_edge, label %do.end.i.i.i

ixgbevf_read_reg.exit.i.i.i.do.body.i.i.i_crit_edge: ; preds = %ixgbevf_read_reg.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i.i.i

do.end.i.i.i:                                     ; preds = %ixgbevf_read_reg.exit.i.i.i
  br i1 %tobool7.not.i.i.i, label %do.end.i.i.i.do.end15.i.i.i_crit_edge, label %do.end.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge

do.end.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge: ; preds = %do.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_desc_queue_enable.exit.i.i

do.end.i.i.i.do.end15.i.i.i_crit_edge:            ; preds = %do.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end15.i.i.i

do.end15.i.i.i:                                   ; preds = %do.end.i.i.i.do.end15.i.i.i_crit_edge, %ixgbevf_read_reg.exit.thread37.i.i.i.do.end15.i.i.i_crit_edge, %ixgbevf_read_reg.exit.thread.i.i.i.do.end15.i.i.i_crit_edge
  %call17.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, i32 noundef %conv6.i.i.i) #17
  br label %ixgbevf_rx_desc_queue_enable.exit.i.i

ixgbevf_rx_desc_queue_enable.exit.i.i:            ; preds = %do.end15.i.i.i, %do.end.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge, %ixgbevf_read_reg.exit.thread37.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge, %ixgbevf_read_reg.exit.thread.i.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge, %ixgbe_write_reg.exit122.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge, %if.end42.i.i.ixgbevf_rx_desc_queue_enable.exit.i.i_crit_edge
  %151 = ptrtoint ptr %next_to_clean.i.i to i32
  call void @__asan_load2_noabort(i32 %151)
  %152 = load i16, ptr %next_to_clean.i.i, align 4
  %153 = ptrtoint ptr %next_to_use.i.i to i32
  call void @__asan_load2_noabort(i32 %153)
  %154 = load i16, ptr %next_to_use.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %152, i16 %154)
  %cmp.i129.i.i = icmp ugt i16 %152, %154
  br i1 %cmp.i129.i.i, label %ixgbevf_rx_desc_queue_enable.exit.i.i.ixgbevf_configure_rx_ring.exit.i_crit_edge, label %cond.false.i.i.i

ixgbevf_rx_desc_queue_enable.exit.i.i.ixgbevf_configure_rx_ring.exit.i_crit_edge: ; preds = %ixgbevf_rx_desc_queue_enable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_rx_ring.exit.i

cond.false.i.i.i:                                 ; preds = %ixgbevf_rx_desc_queue_enable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %155 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load2_noabort(i32 %155)
  %156 = load i16, ptr %count.i.i, align 32
  br label %ixgbevf_configure_rx_ring.exit.i

ixgbevf_configure_rx_ring.exit.i:                 ; preds = %cond.false.i.i.i, %ixgbevf_rx_desc_queue_enable.exit.i.i.ixgbevf_configure_rx_ring.exit.i_crit_edge
  %cond.i.i.i = phi i16 [ %156, %cond.false.i.i.i ], [ 0, %ixgbevf_rx_desc_queue_enable.exit.i.i.ixgbevf_configure_rx_ring.exit.i_crit_edge ]
  %157 = xor i16 %154, -1
  %add.i130.i.i = add i16 %152, %157
  %sub6.i.i.i = add i16 %add.i130.i.i, %cond.i.i.i
  call fastcc void @ixgbevf_alloc_rx_buffers(ptr noundef %74, i16 noundef zeroext %sub6.i.i.i) #14
  %inc.i21 = add nuw nsw i32 %i.052.i, 1
  %158 = ptrtoint ptr %num_rx_queues2.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %num_rx_queues2.i, align 8
  %cmp9.i = icmp slt i32 %inc.i21, %159
  br i1 %cmp9.i, label %ixgbevf_configure_rx_ring.exit.i.for.body.i20_crit_edge, label %ixgbevf_configure_rx_ring.exit.i.ixgbevf_configure_rx.exit_crit_edge

ixgbevf_configure_rx_ring.exit.i.ixgbevf_configure_rx.exit_crit_edge: ; preds = %ixgbevf_configure_rx_ring.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_rx.exit

ixgbevf_configure_rx_ring.exit.i.for.body.i20_crit_edge: ; preds = %ixgbevf_configure_rx_ring.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i20

ixgbevf_configure_rx.exit:                        ; preds = %ixgbevf_configure_rx_ring.exit.i.ixgbevf_configure_rx.exit_crit_edge, %if.end8.i.ixgbevf_configure_rx.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_up_complete(ptr noundef %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 23
  %0 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev1, align 4
  %hw2 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %num_msix_vectors.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 17
  %2 = ptrtoint ptr %num_msix_vectors.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_msix_vectors.i, align 8
  %sub.i = add i32 %3, -1
  %eims_enable_mask.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 4
  %4 = ptrtoint ptr %eims_enable_mask.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %eims_enable_mask.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp120.i = icmp sgt i32 %sub.i, 0
  br i1 %cmp120.i, label %for.body.lr.ph.i, label %entry.for.end42.i_crit_edge

entry.for.end42.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end42.i

for.body.lr.ph.i:                                 ; preds = %entry
  %hw_addr.i44.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 1
  %tx_itr_setting.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 3
  %rx_itr_setting.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %ixgbevf_write_eitr.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %v_idx.0121.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %ixgbevf_write_eitr.exit.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %v_idx.0121.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %rx.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %rx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %ring.0114.i = load ptr, ptr %rx.i, align 8
  %cmp4.not115.i = icmp eq ptr %ring.0114.i, null
  br i1 %cmp4.not115.i, label %for.body.i.for.end.i_crit_edge, label %for.body5.lr.ph.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body5.lr.ph.i:                                ; preds = %for.body.i
  %8 = and i32 %v_idx.0121.i, 127
  %conv19.i.i = or i32 %8, 128
  br label %for.body5.i

for.body5.i:                                      ; preds = %ixgbevf_set_ivar.exit.i.for.body5.i_crit_edge, %for.body5.lr.ph.i
  %ring.0116.i = phi ptr [ %ring.0114.i, %for.body5.lr.ph.i ], [ %ring.0.i, %ixgbevf_set_ivar.exit.i.for.body5.i_crit_edge ]
  %reg_idx.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0116.i, i32 0, i32 21
  %9 = ptrtoint ptr %reg_idx.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %reg_idx.i, align 16
  %11 = and i16 %10, 255
  %conv10.i.i = zext i16 %11 to i32
  %and11.i.i = shl nuw nsw i32 %conv10.i.i, 4
  %mul.i.i = and i32 %and11.i.i, 16
  %12 = shl nuw nsw i32 %conv10.i.i, 1
  %mul15.i.i = and i32 %12, 508
  %add16.i.i = add nuw nsw i32 %mul15.i.i, 288
  %13 = ptrtoint ptr %hw_addr.i44.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %hw_addr.i44.i.i, align 4
  %tobool.not.i45.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i45.i.i, label %for.body5.i.ixgbevf_read_reg.exit51.i.i_crit_edge, label %if.end.i48.i.i, !prof !308

for.body5.i.ixgbevf_read_reg.exit51.i.i_crit_edge: ; preds = %for.body5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit51.i.i

if.end.i48.i.i:                                   ; preds = %for.body5.i
  %add.ptr.i46.i.i = getelementptr i8, ptr %14, i32 %add16.i.i
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i46.i.i) #14, !srcloc !309
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %cmp.i47.i.i = icmp eq i32 %15, -1
  br i1 %cmp.i47.i.i, label %if.then12.i49.i.i, label %if.end.i48.i.i.ixgbevf_read_reg.exit51.i.i_crit_edge, !prof !308

if.end.i48.i.i.ixgbevf_read_reg.exit51.i.i_crit_edge: ; preds = %if.end.i48.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit51.i.i

if.then12.i49.i.i:                                ; preds = %if.end.i48.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw2, i32 noundef %add16.i.i) #14
  br label %ixgbevf_read_reg.exit51.i.i

ixgbevf_read_reg.exit51.i.i:                      ; preds = %if.then12.i49.i.i, %if.end.i48.i.i.ixgbevf_read_reg.exit51.i.i_crit_edge, %for.body5.i.ixgbevf_read_reg.exit51.i.i_crit_edge
  %retval.0.i50.i.i = phi i32 [ -1, %for.body5.i.ixgbevf_read_reg.exit51.i.i_crit_edge ], [ %16, %if.then12.i49.i.i ], [ %16, %if.end.i48.i.i.ixgbevf_read_reg.exit51.i.i_crit_edge ]
  %17 = ptrtoint ptr %hw_addr.i44.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %hw_addr.i44.i.i, align 4
  %tobool.not.i53.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i53.i.i, label %ixgbevf_read_reg.exit51.i.i.ixgbevf_set_ivar.exit.i_crit_edge, label %do.body4.i55.i.i, !prof !308

ixgbevf_read_reg.exit51.i.i.ixgbevf_set_ivar.exit.i_crit_edge: ; preds = %ixgbevf_read_reg.exit51.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_set_ivar.exit.i

do.body4.i55.i.i:                                 ; preds = %ixgbevf_read_reg.exit51.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %shl.i.i = shl nuw nsw i32 255, %mul.i.i
  %neg.i.i = xor i32 %shl.i.i, -1
  %and18.i.i = and i32 %retval.0.i50.i.i, %neg.i.i
  %shl20.i.i = shl nuw nsw i32 %conv19.i.i, %mul.i.i
  %or21.i.i = or i32 %and18.i.i, %shl20.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %19 = tail call i32 @llvm.bswap.i32(i32 %or21.i.i) #14
  %add.ptr.i54.i.i = getelementptr i8, ptr %18, i32 %add16.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i54.i.i, i32 %19) #14, !srcloc !312
  br label %ixgbevf_set_ivar.exit.i

ixgbevf_set_ivar.exit.i:                          ; preds = %do.body4.i55.i.i, %ixgbevf_read_reg.exit51.i.i.ixgbevf_set_ivar.exit.i_crit_edge
  %20 = ptrtoint ptr %ring.0116.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %ring.0.i = load ptr, ptr %ring.0116.i, align 8
  %cmp4.not.i = icmp eq ptr %ring.0.i, null
  br i1 %cmp4.not.i, label %ixgbevf_set_ivar.exit.i.for.end.i_crit_edge, label %ixgbevf_set_ivar.exit.i.for.body5.i_crit_edge

ixgbevf_set_ivar.exit.i.for.body5.i_crit_edge:    ; preds = %ixgbevf_set_ivar.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body5.i

ixgbevf_set_ivar.exit.i.for.end.i_crit_edge:      ; preds = %ixgbevf_set_ivar.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %ixgbevf_set_ivar.exit.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge
  %tx.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 5
  %21 = ptrtoint ptr %tx.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %ring.1117.i = load ptr, ptr %tx.i, align 8
  %cmp9.not118.i = icmp eq ptr %ring.1117.i, null
  br i1 %cmp9.not118.i, label %for.end.i.if.else29.i_crit_edge, label %for.body11.lr.ph.i

for.end.i.if.else29.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else29.i

for.body11.lr.ph.i:                               ; preds = %for.end.i
  %22 = and i32 %v_idx.0121.i, 127
  %conv19.i99.i = or i32 %22, 128
  br label %for.body11.i

for.body11.i:                                     ; preds = %ixgbevf_set_ivar.exit104.i.for.body11.i_crit_edge, %for.body11.lr.ph.i
  %ring.1119.i = phi ptr [ %ring.1117.i, %for.body11.lr.ph.i ], [ %ring.1.i, %ixgbevf_set_ivar.exit104.i.for.body11.i_crit_edge ]
  %reg_idx12.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1119.i, i32 0, i32 21
  %23 = ptrtoint ptr %reg_idx12.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %reg_idx12.i, align 16
  %25 = and i16 %24, 255
  %conv10.i82.i = zext i16 %25 to i32
  %and11.i83.i = shl nuw nsw i32 %conv10.i82.i, 4
  %mul.i84.i = and i32 %and11.i83.i, 16
  %add.i.i = or i32 %mul.i84.i, 8
  %26 = shl nuw nsw i32 %conv10.i82.i, 1
  %mul15.i85.i = and i32 %26, 508
  %add16.i86.i = add nuw nsw i32 %mul15.i85.i, 288
  %27 = ptrtoint ptr %hw_addr.i44.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %hw_addr.i44.i.i, align 4
  %tobool.not.i45.i88.i = icmp eq ptr %28, null
  br i1 %tobool.not.i45.i88.i, label %for.body11.i.ixgbevf_read_reg.exit51.i95.i_crit_edge, label %if.end.i48.i91.i, !prof !308

for.body11.i.ixgbevf_read_reg.exit51.i95.i_crit_edge: ; preds = %for.body11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit51.i95.i

if.end.i48.i91.i:                                 ; preds = %for.body11.i
  %add.ptr.i46.i89.i = getelementptr i8, ptr %28, i32 %add16.i86.i
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i46.i89.i) #14, !srcloc !309
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %29)
  %cmp.i47.i90.i = icmp eq i32 %29, -1
  br i1 %cmp.i47.i90.i, label %if.then12.i49.i92.i, label %if.end.i48.i91.i.ixgbevf_read_reg.exit51.i95.i_crit_edge, !prof !308

if.end.i48.i91.i.ixgbevf_read_reg.exit51.i95.i_crit_edge: ; preds = %if.end.i48.i91.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit51.i95.i

if.then12.i49.i92.i:                              ; preds = %if.end.i48.i91.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw2, i32 noundef %add16.i86.i) #14
  br label %ixgbevf_read_reg.exit51.i95.i

ixgbevf_read_reg.exit51.i95.i:                    ; preds = %if.then12.i49.i92.i, %if.end.i48.i91.i.ixgbevf_read_reg.exit51.i95.i_crit_edge, %for.body11.i.ixgbevf_read_reg.exit51.i95.i_crit_edge
  %retval.0.i50.i93.i = phi i32 [ -1, %for.body11.i.ixgbevf_read_reg.exit51.i95.i_crit_edge ], [ %30, %if.then12.i49.i92.i ], [ %30, %if.end.i48.i91.i.ixgbevf_read_reg.exit51.i95.i_crit_edge ]
  %31 = ptrtoint ptr %hw_addr.i44.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %hw_addr.i44.i.i, align 4
  %tobool.not.i53.i94.i = icmp eq ptr %32, null
  br i1 %tobool.not.i53.i94.i, label %ixgbevf_read_reg.exit51.i95.i.ixgbevf_set_ivar.exit104.i_crit_edge, label %do.body4.i55.i103.i, !prof !308

ixgbevf_read_reg.exit51.i95.i.ixgbevf_set_ivar.exit104.i_crit_edge: ; preds = %ixgbevf_read_reg.exit51.i95.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_set_ivar.exit104.i

do.body4.i55.i103.i:                              ; preds = %ixgbevf_read_reg.exit51.i95.i
  call void @__sanitizer_cov_trace_pc() #16
  %shl.i96.i = shl nuw i32 255, %add.i.i
  %neg.i97.i = xor i32 %shl.i96.i, -1
  %and18.i98.i = and i32 %retval.0.i50.i93.i, %neg.i97.i
  %shl20.i100.i = shl nuw i32 %conv19.i99.i, %add.i.i
  %or21.i101.i = or i32 %and18.i98.i, %shl20.i100.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %33 = tail call i32 @llvm.bswap.i32(i32 %or21.i101.i) #14
  %add.ptr.i54.i102.i = getelementptr i8, ptr %32, i32 %add16.i86.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i54.i102.i, i32 %33) #14, !srcloc !312
  br label %ixgbevf_set_ivar.exit104.i

ixgbevf_set_ivar.exit104.i:                       ; preds = %do.body4.i55.i103.i, %ixgbevf_read_reg.exit51.i95.i.ixgbevf_set_ivar.exit104.i_crit_edge
  %34 = ptrtoint ptr %ring.1119.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %ring.1.i = load ptr, ptr %ring.1119.i, align 8
  %cmp9.not.i = icmp eq ptr %ring.1.i, null
  br i1 %cmp9.not.i, label %for.end17.i, label %ixgbevf_set_ivar.exit104.i.for.body11.i_crit_edge

ixgbevf_set_ivar.exit104.i.for.body11.i_crit_edge: ; preds = %ixgbevf_set_ivar.exit104.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body11.i

for.end17.i:                                      ; preds = %ixgbevf_set_ivar.exit104.i
  %35 = ptrtoint ptr %tx.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %.pr.i = load ptr, ptr %tx.i, align 8
  %tobool.not.i = icmp eq ptr %.pr.i, null
  br i1 %tobool.not.i, label %for.end17.i.if.else29.i_crit_edge, label %land.lhs.true.i

for.end17.i.if.else29.i_crit_edge:                ; preds = %for.end17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else29.i

land.lhs.true.i:                                  ; preds = %for.end17.i
  %36 = ptrtoint ptr %rx.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %rx.i, align 8
  %tobool22.not.i = icmp eq ptr %37, null
  br i1 %tobool22.not.i, label %if.then.i, label %land.lhs.true.i.if.else29.i_crit_edge

land.lhs.true.i.if.else29.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else29.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %38 = ptrtoint ptr %tx_itr_setting.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %tx_itr_setting.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %39)
  %cmp24.i = icmp eq i16 %39, 1
  %itr.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 2
  br i1 %cmp24.i, label %if.then26.i, label %if.else.i

if.then26.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %40 = ptrtoint ptr %itr.i to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 336, ptr %itr.i, align 2
  br label %if.end39.i

if.else.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %41 = ptrtoint ptr %itr.i to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %39, ptr %itr.i, align 2
  br label %if.end39.i

if.else29.i:                                      ; preds = %land.lhs.true.i.if.else29.i_crit_edge, %for.end17.i.if.else29.i_crit_edge, %for.end.i.if.else29.i_crit_edge
  %42 = ptrtoint ptr %rx_itr_setting.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %rx_itr_setting.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %43)
  %cmp31.i = icmp eq i16 %43, 1
  %itr34.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 2
  br i1 %cmp31.i, label %if.then33.i, label %if.else35.i

if.then33.i:                                      ; preds = %if.else29.i
  call void @__sanitizer_cov_trace_pc() #16
  %44 = ptrtoint ptr %itr34.i to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 200, ptr %itr34.i, align 2
  br label %if.end39.i

if.else35.i:                                      ; preds = %if.else29.i
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %itr34.i to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %43, ptr %itr34.i, align 2
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.else35.i, %if.then33.i, %if.else.i, %if.then26.i
  %shl.i = shl nuw i32 1, %v_idx.0121.i
  %46 = ptrtoint ptr %eims_enable_mask.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %eims_enable_mask.i, align 4
  %or.i = or i32 %47, %shl.i
  store i32 %or.i, ptr %eims_enable_mask.i, align 4
  %48 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %6, align 128
  %v_idx3.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 1
  %50 = ptrtoint ptr %v_idx3.i.i to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %v_idx3.i.i, align 4
  %itr.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 2
  %52 = ptrtoint ptr %itr.i.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %itr.i.i, align 2
  %hw_addr.i.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %49, i32 0, i32 26, i32 1
  %54 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %55, null
  br i1 %tobool.not.i.i.i, label %if.end39.i.ixgbevf_write_eitr.exit.i_crit_edge, label %do.body4.i.i.i, !prof !308

if.end39.i.ixgbevf_write_eitr.exit.i_crit_edge:   ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_write_eitr.exit.i

do.body4.i.i.i:                                   ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i = zext i16 %51 to i32
  %mul.i105.i = shl nuw nsw i32 %conv.i.i, 2
  %add.i106.i = add nuw nsw i32 %mul.i105.i, 2080
  %56 = and i16 %53, 4088
  %and.i.i = zext i16 %56 to i32
  %or.i.i = or i32 %and.i.i, -2147483648
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %57 = tail call i32 @llvm.bswap.i32(i32 %or.i.i) #14
  %add.ptr.i.i.i = getelementptr i8, ptr %55, i32 %add.i106.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i.i, i32 %57) #14, !srcloc !312
  br label %ixgbevf_write_eitr.exit.i

ixgbevf_write_eitr.exit.i:                        ; preds = %do.body4.i.i.i, %if.end39.i.ixgbevf_write_eitr.exit.i_crit_edge
  %inc.i = add nuw nsw i32 %v_idx.0121.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %sub.i
  br i1 %exitcond.not.i, label %ixgbevf_write_eitr.exit.i.for.end42.i_crit_edge, label %ixgbevf_write_eitr.exit.i.for.body.i_crit_edge

ixgbevf_write_eitr.exit.i.for.body.i_crit_edge:   ; preds = %ixgbevf_write_eitr.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

ixgbevf_write_eitr.exit.i.for.end42.i_crit_edge:  ; preds = %ixgbevf_write_eitr.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end42.i

for.end42.i:                                      ; preds = %ixgbevf_write_eitr.exit.i.for.end42.i_crit_edge, %entry.for.end42.i_crit_edge
  %v_idx.0.lcssa.i = phi i32 [ 0, %entry.for.end42.i_crit_edge ], [ %sub.i, %ixgbevf_write_eitr.exit.i.for.end42.i_crit_edge ]
  %hw_addr.i.i108.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 1
  %58 = ptrtoint ptr %hw_addr.i.i108.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile ptr, ptr %hw_addr.i.i108.i, align 4
  %tobool.not.i.i109.i = icmp eq ptr %59, null
  br i1 %tobool.not.i.i109.i, label %for.end42.i.ixgbevf_read_reg.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !308

for.end42.i.ixgbevf_read_reg.exit.i.i_crit_edge:  ; preds = %for.end42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i.i

if.end.i.i.i:                                     ; preds = %for.end42.i
  %add.ptr.i.i110.i = getelementptr i8, ptr %59, i32 320
  %60 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i110.i) #14, !srcloc !309
  %61 = tail call i32 @llvm.bswap.i32(i32 %60) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %60)
  %cmp.i.i.i = icmp eq i32 %60, -1
  br i1 %cmp.i.i.i, label %if.then12.i.i.i, label %if.end.i.i.i.ixgbevf_read_reg.exit.i.i_crit_edge, !prof !308

if.end.i.i.i.ixgbevf_read_reg.exit.i.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i.i

if.then12.i.i.i:                                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw2, i32 noundef 320) #14
  br label %ixgbevf_read_reg.exit.i.i

ixgbevf_read_reg.exit.i.i:                        ; preds = %if.then12.i.i.i, %if.end.i.i.i.ixgbevf_read_reg.exit.i.i_crit_edge, %for.end42.i.ixgbevf_read_reg.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ -1, %for.end42.i.ixgbevf_read_reg.exit.i.i_crit_edge ], [ %61, %if.then12.i.i.i ], [ %61, %if.end.i.i.i.ixgbevf_read_reg.exit.i.i_crit_edge ]
  %62 = ptrtoint ptr %hw_addr.i.i108.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile ptr, ptr %hw_addr.i.i108.i, align 4
  %tobool.not.i42.i.i = icmp eq ptr %63, null
  br i1 %tobool.not.i42.i.i, label %ixgbevf_read_reg.exit.i.i.ixgbevf_configure_msix.exit_crit_edge, label %do.body4.i.i112.i, !prof !308

ixgbevf_read_reg.exit.i.i.ixgbevf_configure_msix.exit_crit_edge: ; preds = %ixgbevf_read_reg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_configure_msix.exit

do.body4.i.i112.i:                                ; preds = %ixgbevf_read_reg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %and.i111.i = and i32 %retval.0.i.i.i, -256
  %64 = and i32 %v_idx.0.lcssa.i, 127
  %conv5.i.i = or i32 %64, %and.i111.i
  %or6.i.i = or i32 %conv5.i.i, 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %65 = tail call i32 @llvm.bswap.i32(i32 %or6.i.i) #14
  %add.ptr.i43.i.i = getelementptr i8, ptr %63, i32 320
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i43.i.i, i32 %65) #14, !srcloc !312
  br label %ixgbevf_configure_msix.exit

ixgbevf_configure_msix.exit:                      ; preds = %do.body4.i.i112.i, %ixgbevf_read_reg.exit.i.i.ixgbevf_configure_msix.exit_crit_edge
  %shl44.i = shl nuw i32 1, %v_idx.0.lcssa.i
  %eims_other.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 5
  %66 = ptrtoint ptr %eims_other.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %shl44.i, ptr %eims_other.i, align 8
  %67 = ptrtoint ptr %eims_enable_mask.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %eims_enable_mask.i, align 4
  %or47.i = or i32 %68, %shl44.i
  store i32 %or47.i, ptr %eims_enable_mask.i, align 4
  %mbx_lock = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 40
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock) #14
  %addr = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 1
  %69 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %addr, align 4
  %71 = and i32 %70, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool.i.not.i = icmp eq i32 %71, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %ixgbevf_configure_msix.exit.if.else_crit_edge

ixgbevf_configure_msix.exit.if.else_crit_edge:    ; preds = %ixgbevf_configure_msix.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

is_valid_ether_addr.exit:                         ; preds = %ixgbevf_configure_msix.exit
  %add.ptr.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 1, i32 4
  %72 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i39 = zext i16 %73 to i32
  %or.i.i40 = or i32 %70, %conv.i.i39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i40)
  %cmp.i.i.not = icmp eq i32 %or.i.i40, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.if.else_crit_edge, label %if.then

is_valid_ether_addr.exit.if.else_crit_edge:       ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then:                                          ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  %set_rar = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 0, i32 12
  %74 = ptrtoint ptr %set_rar to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %set_rar, align 4
  %call7 = tail call i32 %75(ptr noundef %hw2, i32 noundef 0, ptr noundef %addr, i32 noundef 0) #14
  br label %if.end

if.else:                                          ; preds = %is_valid_ether_addr.exit.if.else_crit_edge, %ixgbevf_configure_msix.exit.if.else_crit_edge
  %set_rar10 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 0, i32 12
  %76 = ptrtoint ptr %set_rar10 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %set_rar10, align 4
  %perm_addr = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 2
  %call13 = tail call i32 %77(ptr noundef %hw2, i32 noundef 0, ptr noundef %perm_addr, i32 noundef 0) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  tail call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !313
  %state = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 30
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %state) #14
  %78 = ptrtoint ptr %num_msix_vectors.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %num_msix_vectors.i, align 8
  %sub.i42 = add i32 %79, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i42)
  %cmp5.i = icmp sgt i32 %sub.i42, 0
  br i1 %cmp5.i, label %if.end.for.body.i46_crit_edge, label %if.end.ixgbevf_napi_enable_all.exit_crit_edge

if.end.ixgbevf_napi_enable_all.exit_crit_edge:    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_napi_enable_all.exit

if.end.for.body.i46_crit_edge:                    ; preds = %if.end
  br label %for.body.i46

for.body.i46:                                     ; preds = %for.body.i46.for.body.i46_crit_edge, %if.end.for.body.i46_crit_edge
  %q_idx.06.i = phi i32 [ %inc.i44, %for.body.i46.for.body.i46_crit_edge ], [ 0, %if.end.for.body.i46_crit_edge ]
  %arrayidx.i43 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %q_idx.06.i
  %80 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %arrayidx.i43, align 4
  %napi.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %81, i32 0, i32 3
  tail call void @napi_enable(ptr noundef %napi.i) #14
  %inc.i44 = add nuw nsw i32 %q_idx.06.i, 1
  %exitcond.not.i45 = icmp eq i32 %inc.i44, %sub.i42
  br i1 %exitcond.not.i45, label %for.body.i46.ixgbevf_napi_enable_all.exit_crit_edge, label %for.body.i46.for.body.i46_crit_edge

for.body.i46.for.body.i46_crit_edge:              ; preds = %for.body.i46
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i46

for.body.i46.ixgbevf_napi_enable_all.exit_crit_edge: ; preds = %for.body.i46
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_napi_enable_all.exit

ixgbevf_napi_enable_all.exit:                     ; preds = %for.body.i46.ixgbevf_napi_enable_all.exit_crit_edge, %if.end.ixgbevf_napi_enable_all.exit_crit_edge
  %82 = ptrtoint ptr %hw_addr.i.i108.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile ptr, ptr %hw_addr.i.i108.i, align 4
  %tobool.not.i48 = icmp eq ptr %83, null
  br i1 %tobool.not.i48, label %ixgbevf_napi_enable_all.exit.ixgbevf_read_reg.exit_crit_edge, label %if.end.i, !prof !308

ixgbevf_napi_enable_all.exit.ixgbevf_read_reg.exit_crit_edge: ; preds = %ixgbevf_napi_enable_all.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.end.i:                                         ; preds = %ixgbevf_napi_enable_all.exit
  %add.ptr.i = getelementptr i8, ptr %83, i32 256
  %84 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !309
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %84)
  %cmp.i = icmp eq i32 %84, -1
  br i1 %cmp.i, label %if.then12.i, label %if.end.i.ixgbevf_read_reg.exit_crit_edge, !prof !308

if.end.i.ixgbevf_read_reg.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.then12.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw2, i32 noundef 256) #14
  br label %ixgbevf_read_reg.exit

ixgbevf_read_reg.exit:                            ; preds = %if.then12.i, %if.end.i.ixgbevf_read_reg.exit_crit_edge, %ixgbevf_napi_enable_all.exit.ixgbevf_read_reg.exit_crit_edge
  %85 = ptrtoint ptr %eims_enable_mask.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %eims_enable_mask.i, align 4
  %87 = ptrtoint ptr %hw_addr.i.i108.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile ptr, ptr %hw_addr.i.i108.i, align 4
  %tobool.not.i.i = icmp eq ptr %88, null
  br i1 %tobool.not.i.i, label %ixgbevf_read_reg.exit.ixgbe_write_reg.exit.i_crit_edge, label %do.body4.i.i, !prof !308

ixgbevf_read_reg.exit.ixgbe_write_reg.exit.i_crit_edge: ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit.i

do.body4.i.i:                                     ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %89 = tail call i32 @llvm.bswap.i32(i32 %86) #14
  %add.ptr.i.i50 = getelementptr i8, ptr %88, i32 276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i50, i32 %89) #14, !srcloc !312
  br label %ixgbe_write_reg.exit.i

ixgbe_write_reg.exit.i:                           ; preds = %do.body4.i.i, %ixgbevf_read_reg.exit.ixgbe_write_reg.exit.i_crit_edge
  %90 = ptrtoint ptr %eims_enable_mask.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %eims_enable_mask.i, align 4
  %92 = ptrtoint ptr %hw_addr.i.i108.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile ptr, ptr %hw_addr.i.i108.i, align 4
  %tobool.not.i10.i = icmp eq ptr %93, null
  br i1 %tobool.not.i10.i, label %ixgbe_write_reg.exit.i.ixgbe_write_reg.exit13.i_crit_edge, label %do.body4.i12.i, !prof !308

ixgbe_write_reg.exit.i.ixgbe_write_reg.exit13.i_crit_edge: ; preds = %ixgbe_write_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit13.i

do.body4.i12.i:                                   ; preds = %ixgbe_write_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %94 = tail call i32 @llvm.bswap.i32(i32 %91) #14
  %add.ptr.i11.i = getelementptr i8, ptr %93, i32 272
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11.i, i32 %94) #14, !srcloc !312
  br label %ixgbe_write_reg.exit13.i

ixgbe_write_reg.exit13.i:                         ; preds = %do.body4.i12.i, %ixgbe_write_reg.exit.i.ixgbe_write_reg.exit13.i_crit_edge
  %95 = ptrtoint ptr %eims_enable_mask.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %eims_enable_mask.i, align 4
  %97 = ptrtoint ptr %hw_addr.i.i108.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile ptr, ptr %hw_addr.i.i108.i, align 4
  %tobool.not.i15.i = icmp eq ptr %98, null
  br i1 %tobool.not.i15.i, label %ixgbe_write_reg.exit13.i.ixgbevf_irq_enable.exit_crit_edge, label %do.body4.i17.i, !prof !308

ixgbe_write_reg.exit13.i.ixgbevf_irq_enable.exit_crit_edge: ; preds = %ixgbe_write_reg.exit13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_irq_enable.exit

do.body4.i17.i:                                   ; preds = %ixgbe_write_reg.exit13.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %99 = tail call i32 @llvm.bswap.i32(i32 %96) #14
  %add.ptr.i16.i = getelementptr i8, ptr %98, i32 264
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i16.i, i32 %99) #14, !srcloc !312
  br label %ixgbevf_irq_enable.exit

ixgbevf_irq_enable.exit:                          ; preds = %do.body4.i17.i, %ixgbe_write_reg.exit13.i.ixgbevf_irq_enable.exit_crit_edge
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 104
  %100 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %cmp4.not.i51 = icmp eq i32 %101, 0
  br i1 %cmp4.not.i51, label %ixgbevf_irq_enable.exit.netif_tx_start_all_queues.exit_crit_edge, label %for.body.lr.ph.i52

ixgbevf_irq_enable.exit.netif_tx_start_all_queues.exit_crit_edge: ; preds = %ixgbevf_irq_enable.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_tx_start_all_queues.exit

for.body.lr.ph.i52:                               ; preds = %ixgbevf_irq_enable.exit
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 103
  br label %for.body.i55

for.body.i55:                                     ; preds = %for.body.i55.for.body.i55_crit_edge, %for.body.lr.ph.i52
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i52 ], [ %inc.i53, %for.body.i55.for.body.i55_crit_edge ]
  %102 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %103, i32 %i.05.i, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  %inc.i53 = add nuw i32 %i.05.i, 1
  %104 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i54 = icmp ult i32 %inc.i53, %105
  br i1 %cmp.i54, label %for.body.i55.for.body.i55_crit_edge, label %for.body.i55.netif_tx_start_all_queues.exit_crit_edge

for.body.i55.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.body.i55
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_tx_start_all_queues.exit

for.body.i55.for.body.i55_crit_edge:              ; preds = %for.body.i55
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i55

netif_tx_start_all_queues.exit:                   ; preds = %for.body.i55.netif_tx_start_all_queues.exit_crit_edge, %ixgbevf_irq_enable.exit.netif_tx_start_all_queues.exit_crit_edge
  %stats.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29
  %vfgprc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 10
  %106 = ptrtoint ptr %vfgprc.i to i32
  call void @__asan_load8_noabort(i32 %106)
  %107 = load i64, ptr %vfgprc.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %107)
  %tobool.not.i57 = icmp eq i64 %107, 0
  br i1 %tobool.not.i57, label %lor.lhs.false.i, label %netif_tx_start_all_queues.exit.if.then.i59_crit_edge

netif_tx_start_all_queues.exit.if.then.i59_crit_edge: ; preds = %netif_tx_start_all_queues.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i59

lor.lhs.false.i:                                  ; preds = %netif_tx_start_all_queues.exit
  %vfgptc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 11
  %108 = ptrtoint ptr %vfgptc.i to i32
  call void @__asan_load8_noabort(i32 %108)
  %109 = load i64, ptr %vfgptc.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %109)
  %tobool2.not.i = icmp eq i64 %109, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i.ixgbevf_save_reset_stats.exit_crit_edge, label %lor.lhs.false.i.if.then.i59_crit_edge

lor.lhs.false.i.if.then.i59_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i59

lor.lhs.false.i.ixgbevf_save_reset_stats.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_save_reset_stats.exit

if.then.i59:                                      ; preds = %lor.lhs.false.i.if.then.i59_crit_edge, %netif_tx_start_all_queues.exit.if.then.i59_crit_edge
  %110 = ptrtoint ptr %stats.i to i32
  call void @__asan_load8_noabort(i32 %110)
  %111 = load i64, ptr %stats.i, align 8
  %sub.i58 = sub i64 %107, %111
  %saved_reset_vfgprc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 15
  %112 = ptrtoint ptr %saved_reset_vfgprc.i to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %saved_reset_vfgprc.i, align 8
  %add.i = add i64 %sub.i58, %113
  store i64 %add.i, ptr %saved_reset_vfgprc.i, align 8
  %vfgptc8.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 11
  %114 = ptrtoint ptr %vfgptc8.i to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %vfgptc8.i, align 8
  %base_vfgptc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 1
  %116 = ptrtoint ptr %base_vfgptc.i to i32
  call void @__asan_load8_noabort(i32 %116)
  %117 = load i64, ptr %base_vfgptc.i, align 8
  %sub10.i = sub i64 %115, %117
  %saved_reset_vfgptc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 16
  %118 = ptrtoint ptr %saved_reset_vfgptc.i to i32
  call void @__asan_load8_noabort(i32 %118)
  %119 = load i64, ptr %saved_reset_vfgptc.i, align 8
  %add12.i = add i64 %sub10.i, %119
  store i64 %add12.i, ptr %saved_reset_vfgptc.i, align 8
  %vfgorc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 12
  %120 = ptrtoint ptr %vfgorc.i to i32
  call void @__asan_load8_noabort(i32 %120)
  %121 = load i64, ptr %vfgorc.i, align 8
  %base_vfgorc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 2
  %122 = ptrtoint ptr %base_vfgorc.i to i32
  call void @__asan_load8_noabort(i32 %122)
  %123 = load i64, ptr %base_vfgorc.i, align 8
  %sub15.i = sub i64 %121, %123
  %saved_reset_vfgorc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 17
  %124 = ptrtoint ptr %saved_reset_vfgorc.i to i32
  call void @__asan_load8_noabort(i32 %124)
  %125 = load i64, ptr %saved_reset_vfgorc.i, align 8
  %add17.i = add i64 %sub15.i, %125
  store i64 %add17.i, ptr %saved_reset_vfgorc.i, align 8
  %vfgotc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 13
  %126 = ptrtoint ptr %vfgotc.i to i32
  call void @__asan_load8_noabort(i32 %126)
  %127 = load i64, ptr %vfgotc.i, align 8
  %base_vfgotc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 3
  %128 = ptrtoint ptr %base_vfgotc.i to i32
  call void @__asan_load8_noabort(i32 %128)
  %129 = load i64, ptr %base_vfgotc.i, align 8
  %sub20.i = sub i64 %127, %129
  %saved_reset_vfgotc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 18
  %130 = ptrtoint ptr %saved_reset_vfgotc.i to i32
  call void @__asan_load8_noabort(i32 %130)
  %131 = load i64, ptr %saved_reset_vfgotc.i, align 8
  %add22.i = add i64 %sub20.i, %131
  store i64 %add22.i, ptr %saved_reset_vfgotc.i, align 8
  %vfmprc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 14
  %132 = ptrtoint ptr %vfmprc.i to i32
  call void @__asan_load8_noabort(i32 %132)
  %133 = load i64, ptr %vfmprc.i, align 8
  %base_vfmprc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 4
  %134 = ptrtoint ptr %base_vfmprc.i to i32
  call void @__asan_load8_noabort(i32 %134)
  %135 = load i64, ptr %base_vfmprc.i, align 8
  %sub25.i = sub i64 %133, %135
  %saved_reset_vfmprc.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 19
  %136 = ptrtoint ptr %saved_reset_vfmprc.i to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %saved_reset_vfmprc.i, align 8
  %add27.i = add i64 %sub25.i, %137
  store i64 %add27.i, ptr %saved_reset_vfmprc.i, align 8
  br label %ixgbevf_save_reset_stats.exit

ixgbevf_save_reset_stats.exit:                    ; preds = %if.then.i59, %lor.lhs.false.i.ixgbevf_save_reset_stats.exit_crit_edge
  tail call fastcc void @ixgbevf_init_last_counter_stats(ptr noundef %adapter)
  %get_link_status = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 5
  %138 = ptrtoint ptr %get_link_status to i32
  call void @__asan_store1_noabort(i32 %138)
  store i8 1, ptr %get_link_status, align 4
  %service_timer = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 38
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %139 = load volatile i32, ptr @jiffies, align 128
  %call20 = tail call i32 @mod_timer(ptr noundef %service_timer, i32 noundef %139) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ixgbevf_down(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 23
  %0 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev1, align 4
  %hw2 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %state = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 30
  %call = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %state) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %num_rx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 13
  %2 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp84 = icmp sgt i32 %3, 0
  br i1 %cmp84, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.085 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %i.085
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @ixgbevf_disable_rx_queue(ptr noundef %adapter, ptr noundef %5)
  %inc = add nuw nsw i32 %i.085, 1
  %6 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_rx_queues, align 8
  %cmp = icmp slt i32 %inc, %7
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #14
  tail call void @netif_tx_stop_all_queues(ptr noundef %1) #14
  tail call void @netif_carrier_off(ptr noundef %1) #14
  tail call fastcc void @local_bh_disable() #14
  %8 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu1.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu1.i, align 4
  %tx_global_lock.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 108
  tail call void @_raw_spin_lock(ptr noundef %tx_global_lock.i) #14
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 104
  %12 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp13.not.i = icmp eq i32 %13, 0
  br i1 %cmp13.not.i, label %for.end.netif_tx_disable.exit_crit_edge, label %for.body.lr.ph.i

for.end.netif_tx_disable.exit_crit_edge:          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_tx_disable.exit

for.body.lr.ph.i:                                 ; preds = %for.end
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.014.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %14 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %_tx.i.i, align 128
  %_xmit_lock.i.i = getelementptr %struct.netdev_queue, ptr %15, i32 %i.014.i, i32 10
  tail call void @_raw_spin_lock(ptr noundef %_xmit_lock.i.i) #14
  %xmit_lock_owner.i.i = getelementptr %struct.netdev_queue, ptr %15, i32 %i.014.i, i32 11
  %16 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile i32 %11, ptr %xmit_lock_owner.i.i, align 4
  %state.i.i = getelementptr %struct.netdev_queue, ptr %15, i32 %i.014.i, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  %17 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 -1, ptr %xmit_lock_owner.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i.i) #14
  %inc.i = add nuw i32 %i.014.i, 1
  %18 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %19
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.netif_tx_disable.exit_crit_edge

for.body.i.netif_tx_disable.exit_crit_edge:       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_tx_disable.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

netif_tx_disable.exit:                            ; preds = %for.body.i.netif_tx_disable.exit_crit_edge, %for.end.netif_tx_disable.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %tx_global_lock.i) #14
  tail call fastcc void @local_bh_enable() #14
  %hw_addr.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 1
  %20 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %hw_addr.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i, label %netif_tx_disable.exit.ixgbe_write_reg.exit.i_crit_edge, label %do.body4.i.i, !prof !308

netif_tx_disable.exit.ixgbe_write_reg.exit.i_crit_edge: ; preds = %netif_tx_disable.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit.i

do.body4.i.i:                                     ; preds = %netif_tx_disable.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i.i = getelementptr i8, ptr %21, i32 276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit.i

ixgbe_write_reg.exit.i:                           ; preds = %do.body4.i.i, %netif_tx_disable.exit.ixgbe_write_reg.exit.i_crit_edge
  %22 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %hw_addr.i.i, align 4
  %tobool.not.i10.i = icmp eq ptr %23, null
  br i1 %tobool.not.i10.i, label %ixgbe_write_reg.exit.i.ixgbe_write_reg.exit13.i_crit_edge, label %do.body4.i12.i, !prof !308

ixgbe_write_reg.exit.i.ixgbe_write_reg.exit13.i_crit_edge: ; preds = %ixgbe_write_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit13.i

do.body4.i12.i:                                   ; preds = %ixgbe_write_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i11.i = getelementptr i8, ptr %23, i32 268
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11.i, i32 -1) #14, !srcloc !312
  br label %ixgbe_write_reg.exit13.i

ixgbe_write_reg.exit13.i:                         ; preds = %do.body4.i12.i, %ixgbe_write_reg.exit.i.ixgbe_write_reg.exit13.i_crit_edge
  %24 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %hw_addr.i.i, align 4
  %tobool.not.i15.i = icmp eq ptr %25, null
  br i1 %tobool.not.i15.i, label %ixgbe_write_reg.exit13.i.ixgbe_write_reg.exit18.i_crit_edge, label %do.body4.i17.i, !prof !308

ixgbe_write_reg.exit13.i.ixgbe_write_reg.exit18.i_crit_edge: ; preds = %ixgbe_write_reg.exit13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit18.i

do.body4.i17.i:                                   ; preds = %ixgbe_write_reg.exit13.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i16.i = getelementptr i8, ptr %25, i32 272
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i16.i, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit18.i

ixgbe_write_reg.exit18.i:                         ; preds = %do.body4.i17.i, %ixgbe_write_reg.exit13.i.ixgbe_write_reg.exit18.i_crit_edge
  %26 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %hw_addr.i.i, align 4
  %tobool.not.i20.i = icmp eq ptr %27, null
  br i1 %tobool.not.i20.i, label %ixgbe_write_reg.exit18.i.ixgbevf_read_reg.exit.i_crit_edge, label %if.end.i.i, !prof !308

ixgbe_write_reg.exit18.i.ixgbevf_read_reg.exit.i_crit_edge: ; preds = %ixgbe_write_reg.exit18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i

if.end.i.i:                                       ; preds = %ixgbe_write_reg.exit18.i
  %add.ptr.i21.i = getelementptr i8, ptr %27, i32 8
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i21.i) #14, !srcloc !309
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %28)
  %cmp.i.i = icmp eq i32 %28, -1
  br i1 %cmp.i.i, label %if.then12.i.i, label %if.end.i.i.ixgbevf_read_reg.exit.i_crit_edge, !prof !308

if.end.i.i.ixgbevf_read_reg.exit.i_crit_edge:     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i

if.then12.i.i:                                    ; preds = %if.end.i.i
  %29 = ptrtoint ptr %hw2 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hw2, align 4
  %31 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %hw_addr.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %32, null
  br i1 %tobool.not.i.i.i, label %if.then12.i.i.ixgbevf_read_reg.exit.i_crit_edge, label %if.end.i.i.i

if.then12.i.i.ixgbevf_read_reg.exit.i_crit_edge:  ; preds = %if.then12.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i

if.end.i.i.i:                                     ; preds = %if.then12.i.i
  %33 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %hw_addr.i.i, align 4
  %pdev.i.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %30, i32 0, i32 25
  %34 = ptrtoint ptr %pdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pdev.i.i.i, align 4
  %dev.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i.i, ptr noundef nonnull @.str.14) #17
  %state.i.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %30, i32 0, i32 30
  %36 = ptrtoint ptr %state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %state.i.i.i, align 4
  %38 = and i32 %37, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool2.not.i.i.i = icmp eq i32 %38, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i.ixgbevf_read_reg.exit.i_crit_edge, label %if.then3.i.i.i

if.end.i.i.i.ixgbevf_read_reg.exit.i_crit_edge:   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i

if.then3.i.i.i:                                   ; preds = %if.end.i.i.i
  %39 = ptrtoint ptr %state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %state.i.i.i, align 4
  %41 = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i.i.i.i = icmp eq i32 %41, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i, label %if.then3.i.i.i.ixgbevf_read_reg.exit.i_crit_edge

if.then3.i.i.i.ixgbevf_read_reg.exit.i_crit_edge: ; preds = %if.then3.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i

land.lhs.true.i.i.i.i:                            ; preds = %if.then3.i.i.i
  %42 = ptrtoint ptr %state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %state.i.i.i, align 4
  %44 = and i32 %43, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool3.not.i.i.i.i = icmp eq i32 %44, 0
  br i1 %tobool3.not.i.i.i.i, label %land.lhs.true4.i.i.i.i, label %land.lhs.true.i.i.i.i.ixgbevf_read_reg.exit.i_crit_edge

land.lhs.true.i.i.i.i.ixgbevf_read_reg.exit.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i

land.lhs.true4.i.i.i.i:                           ; preds = %land.lhs.true.i.i.i.i
  %call6.i.i.i.i = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i.i.i)
  %tobool7.not.i.i.i.i = icmp eq i32 %call6.i.i.i.i, 0
  br i1 %tobool7.not.i.i.i.i, label %cleanup.sink.split.i.i, label %land.lhs.true4.i.i.i.i.ixgbevf_read_reg.exit.i_crit_edge

land.lhs.true4.i.i.i.i.ixgbevf_read_reg.exit.i_crit_edge: ; preds = %land.lhs.true4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i

cleanup.sink.split.i.i:                           ; preds = %land.lhs.true4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %45 = load ptr, ptr @ixgbevf_wq, align 4
  %service_task.i.i23.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %30, i32 0, i32 39
  %call.i.i.i24.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %45, ptr noundef %service_task.i.i23.i.i) #14
  br label %ixgbevf_read_reg.exit.i

ixgbevf_read_reg.exit.i:                          ; preds = %cleanup.sink.split.i.i, %land.lhs.true4.i.i.i.i.ixgbevf_read_reg.exit.i_crit_edge, %land.lhs.true.i.i.i.i.ixgbevf_read_reg.exit.i_crit_edge, %if.then3.i.i.i.ixgbevf_read_reg.exit.i_crit_edge, %if.end.i.i.i.ixgbevf_read_reg.exit.i_crit_edge, %if.then12.i.i.ixgbevf_read_reg.exit.i_crit_edge, %if.end.i.i.ixgbevf_read_reg.exit.i_crit_edge, %ixgbe_write_reg.exit18.i.ixgbevf_read_reg.exit.i_crit_edge
  %num_msix_vectors.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 17
  %46 = ptrtoint ptr %num_msix_vectors.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %num_msix_vectors.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %cmp22.i = icmp sgt i32 %47, 0
  br i1 %cmp22.i, label %for.body.lr.ph.i61, label %ixgbevf_read_reg.exit.i.ixgbevf_irq_disable.exit_crit_edge

ixgbevf_read_reg.exit.i.ixgbevf_irq_disable.exit_crit_edge: ; preds = %ixgbevf_read_reg.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_irq_disable.exit

for.body.lr.ph.i61:                               ; preds = %ixgbevf_read_reg.exit.i
  %msix_entries.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  br label %for.body.i64

for.body.i64:                                     ; preds = %for.body.i64.for.body.i64_crit_edge, %for.body.lr.ph.i61
  %i.023.i = phi i32 [ 0, %for.body.lr.ph.i61 ], [ %inc.i62, %for.body.i64.for.body.i64_crit_edge ]
  %48 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %msix_entries.i, align 8
  %arrayidx.i = getelementptr %struct.msix_entry, ptr %49, i32 %i.023.i
  %50 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx.i, align 4
  tail call void @synchronize_irq(i32 noundef %51) #14
  %inc.i62 = add nuw nsw i32 %i.023.i, 1
  %52 = ptrtoint ptr %num_msix_vectors.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %num_msix_vectors.i, align 8
  %cmp.i63 = icmp slt i32 %inc.i62, %53
  br i1 %cmp.i63, label %for.body.i64.for.body.i64_crit_edge, label %for.body.i64.ixgbevf_irq_disable.exit_crit_edge

for.body.i64.ixgbevf_irq_disable.exit_crit_edge:  ; preds = %for.body.i64
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_irq_disable.exit

for.body.i64.for.body.i64_crit_edge:              ; preds = %for.body.i64
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i64

ixgbevf_irq_disable.exit:                         ; preds = %for.body.i64.ixgbevf_irq_disable.exit_crit_edge, %ixgbevf_read_reg.exit.i.ixgbevf_irq_disable.exit_crit_edge
  %54 = ptrtoint ptr %num_msix_vectors.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %num_msix_vectors.i, align 8
  %sub.i = add i32 %55, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp5.i = icmp sgt i32 %sub.i, 0
  br i1 %cmp5.i, label %ixgbevf_irq_disable.exit.for.body.i68_crit_edge, label %ixgbevf_irq_disable.exit.ixgbevf_napi_disable_all.exit_crit_edge

ixgbevf_irq_disable.exit.ixgbevf_napi_disable_all.exit_crit_edge: ; preds = %ixgbevf_irq_disable.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_napi_disable_all.exit

ixgbevf_irq_disable.exit.for.body.i68_crit_edge:  ; preds = %ixgbevf_irq_disable.exit
  br label %for.body.i68

for.body.i68:                                     ; preds = %for.body.i68.for.body.i68_crit_edge, %ixgbevf_irq_disable.exit.for.body.i68_crit_edge
  %q_idx.06.i = phi i32 [ %inc.i67, %for.body.i68.for.body.i68_crit_edge ], [ 0, %ixgbevf_irq_disable.exit.for.body.i68_crit_edge ]
  %arrayidx.i66 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %q_idx.06.i
  %56 = ptrtoint ptr %arrayidx.i66 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx.i66, align 4
  %napi.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %57, i32 0, i32 3
  tail call void @napi_disable(ptr noundef %napi.i) #14
  %inc.i67 = add nuw nsw i32 %q_idx.06.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i67, %sub.i
  br i1 %exitcond.not.i, label %for.body.i68.ixgbevf_napi_disable_all.exit_crit_edge, label %for.body.i68.for.body.i68_crit_edge

for.body.i68.for.body.i68_crit_edge:              ; preds = %for.body.i68
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i68

for.body.i68.ixgbevf_napi_disable_all.exit_crit_edge: ; preds = %for.body.i68
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_napi_disable_all.exit

ixgbevf_napi_disable_all.exit:                    ; preds = %for.body.i68.ixgbevf_napi_disable_all.exit_crit_edge, %ixgbevf_irq_disable.exit.ixgbevf_napi_disable_all.exit_crit_edge
  %service_timer = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 38
  %call3 = tail call i32 @del_timer_sync(ptr noundef %service_timer) #14
  %num_tx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 8
  %58 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %num_tx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp586 = icmp sgt i32 %59, 0
  br i1 %cmp586, label %ixgbevf_napi_disable_all.exit.for.body6_crit_edge, label %ixgbevf_napi_disable_all.exit.for.cond13.preheader_crit_edge

ixgbevf_napi_disable_all.exit.for.cond13.preheader_crit_edge: ; preds = %ixgbevf_napi_disable_all.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond13.preheader

ixgbevf_napi_disable_all.exit.for.body6_crit_edge: ; preds = %ixgbevf_napi_disable_all.exit
  br label %for.body6

for.cond13.preheader:                             ; preds = %ixgbe_write_reg.exit.for.cond13.preheader_crit_edge, %ixgbevf_napi_disable_all.exit.for.cond13.preheader_crit_edge
  %num_xdp_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 6
  %60 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %num_xdp_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %cmp1488 = icmp sgt i32 %61, 0
  br i1 %cmp1488, label %for.cond13.preheader.for.body16_crit_edge, label %for.cond13.preheader.for.end26_crit_edge

for.cond13.preheader.for.end26_crit_edge:         ; preds = %for.cond13.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end26

for.cond13.preheader.for.body16_crit_edge:        ; preds = %for.cond13.preheader
  br label %for.body16

for.body6:                                        ; preds = %ixgbe_write_reg.exit.for.body6_crit_edge, %ixgbevf_napi_disable_all.exit.for.body6_crit_edge
  %i.187 = phi i32 [ %inc11, %ixgbe_write_reg.exit.for.body6_crit_edge ], [ 0, %ixgbevf_napi_disable_all.exit.for.body6_crit_edge ]
  %arrayidx7 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %i.187
  %62 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %arrayidx7, align 4
  %reg_idx8 = getelementptr inbounds %struct.ixgbevf_ring, ptr %63, i32 0, i32 21
  %64 = ptrtoint ptr %reg_idx8 to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %reg_idx8, align 16
  %66 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile ptr, ptr %hw_addr.i.i, align 4
  %tobool.not.i = icmp eq ptr %67, null
  br i1 %tobool.not.i, label %for.body6.ixgbe_write_reg.exit_crit_edge, label %do.body4.i, !prof !308

for.body6.ixgbe_write_reg.exit_crit_edge:         ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit

do.body4.i:                                       ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #16
  %68 = shl i16 %65, 6
  %69 = and i16 %68, 16320
  %narrow60 = add nuw nsw i16 %69, 8232
  %add = zext i16 %narrow60 to i32
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i = getelementptr i8, ptr %67, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 4) #14, !srcloc !312
  br label %ixgbe_write_reg.exit

ixgbe_write_reg.exit:                             ; preds = %do.body4.i, %for.body6.ixgbe_write_reg.exit_crit_edge
  %inc11 = add nuw nsw i32 %i.187, 1
  %70 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %num_tx_queues, align 8
  %cmp5 = icmp slt i32 %inc11, %71
  br i1 %cmp5, label %ixgbe_write_reg.exit.for.body6_crit_edge, label %ixgbe_write_reg.exit.for.cond13.preheader_crit_edge

ixgbe_write_reg.exit.for.cond13.preheader_crit_edge: ; preds = %ixgbe_write_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond13.preheader

ixgbe_write_reg.exit.for.body6_crit_edge:         ; preds = %ixgbe_write_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body6

for.body16:                                       ; preds = %ixgbe_write_reg.exit73.for.body16_crit_edge, %for.cond13.preheader.for.body16_crit_edge
  %i.289 = phi i32 [ %inc25, %ixgbe_write_reg.exit73.for.body16_crit_edge ], [ 0, %for.cond13.preheader.for.body16_crit_edge ]
  %arrayidx18 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %i.289
  %72 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx18, align 4
  %reg_idx19 = getelementptr inbounds %struct.ixgbevf_ring, ptr %73, i32 0, i32 21
  %74 = ptrtoint ptr %reg_idx19 to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %reg_idx19, align 16
  %76 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile ptr, ptr %hw_addr.i.i, align 4
  %tobool.not.i70 = icmp eq ptr %77, null
  br i1 %tobool.not.i70, label %for.body16.ixgbe_write_reg.exit73_crit_edge, label %do.body4.i72, !prof !308

for.body16.ixgbe_write_reg.exit73_crit_edge:      ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit73

do.body4.i72:                                     ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #16
  %78 = shl i16 %75, 6
  %79 = and i16 %78, 16320
  %narrow = add nuw nsw i16 %79, 8232
  %add23 = zext i16 %narrow to i32
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i71 = getelementptr i8, ptr %77, i32 %add23
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i71, i32 4) #14, !srcloc !312
  br label %ixgbe_write_reg.exit73

ixgbe_write_reg.exit73:                           ; preds = %do.body4.i72, %for.body16.ixgbe_write_reg.exit73_crit_edge
  %inc25 = add nuw nsw i32 %i.289, 1
  %80 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %num_xdp_queues, align 4
  %cmp14 = icmp slt i32 %inc25, %81
  br i1 %cmp14, label %ixgbe_write_reg.exit73.for.body16_crit_edge, label %ixgbe_write_reg.exit73.for.end26_crit_edge

ixgbe_write_reg.exit73.for.end26_crit_edge:       ; preds = %ixgbe_write_reg.exit73
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end26

ixgbe_write_reg.exit73.for.body16_crit_edge:      ; preds = %ixgbe_write_reg.exit73
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body16

for.end26:                                        ; preds = %ixgbe_write_reg.exit73.for.end26_crit_edge, %for.cond13.preheader.for.end26_crit_edge
  %pdev = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 25
  %82 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %pdev, align 4
  %error_state.i = getelementptr inbounds %struct.pci_dev, ptr %83, i32 0, i32 43
  %84 = ptrtoint ptr %error_state.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %error_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %85)
  %cmp.i74.not = icmp eq i32 %85, 1
  br i1 %cmp.i74.not, label %if.then29, label %for.end26.if.end30_crit_edge

for.end26.if.end30_crit_edge:                     ; preds = %for.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.then29:                                        ; preds = %for.end26
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @ixgbevf_reset(ptr noundef %adapter)
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %for.end26.if.end30_crit_edge
  %86 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %num_tx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %cmp16.i = icmp sgt i32 %87, 0
  br i1 %cmp16.i, label %if.end30.for.body.i79_crit_edge, label %if.end30.for.cond1.preheader.i_crit_edge

if.end30.for.cond1.preheader.i_crit_edge:         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond1.preheader.i

if.end30.for.body.i79_crit_edge:                  ; preds = %if.end30
  br label %for.body.i79

for.cond1.preheader.i:                            ; preds = %for.body.i79.for.cond1.preheader.i_crit_edge, %if.end30.for.cond1.preheader.i_crit_edge
  %88 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %num_xdp_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %89)
  %cmp218.i = icmp sgt i32 %89, 0
  br i1 %cmp218.i, label %for.cond1.preheader.i.for.body3.i_crit_edge, label %for.cond1.preheader.i.ixgbevf_clean_all_tx_rings.exit_crit_edge

for.cond1.preheader.i.ixgbevf_clean_all_tx_rings.exit_crit_edge: ; preds = %for.cond1.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_all_tx_rings.exit

for.cond1.preheader.i.for.body3.i_crit_edge:      ; preds = %for.cond1.preheader.i
  br label %for.body3.i

for.body.i79:                                     ; preds = %for.body.i79.for.body.i79_crit_edge, %if.end30.for.body.i79_crit_edge
  %i.017.i = phi i32 [ %inc.i77, %for.body.i79.for.body.i79_crit_edge ], [ 0, %if.end30.for.body.i79_crit_edge ]
  %arrayidx.i76 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %i.017.i
  %90 = ptrtoint ptr %arrayidx.i76 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %arrayidx.i76, align 4
  tail call fastcc void @ixgbevf_clean_tx_ring(ptr noundef %91) #14
  %inc.i77 = add nuw nsw i32 %i.017.i, 1
  %92 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %num_tx_queues, align 8
  %cmp.i78 = icmp slt i32 %inc.i77, %93
  br i1 %cmp.i78, label %for.body.i79.for.body.i79_crit_edge, label %for.body.i79.for.cond1.preheader.i_crit_edge

for.body.i79.for.cond1.preheader.i_crit_edge:     ; preds = %for.body.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond1.preheader.i

for.body.i79.for.body.i79_crit_edge:              ; preds = %for.body.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i79

for.body3.i:                                      ; preds = %for.body3.i.for.body3.i_crit_edge, %for.cond1.preheader.i.for.body3.i_crit_edge
  %i.119.i = phi i32 [ %inc6.i, %for.body3.i.for.body3.i_crit_edge ], [ 0, %for.cond1.preheader.i.for.body3.i_crit_edge ]
  %arrayidx4.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %i.119.i
  %94 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %arrayidx4.i, align 4
  tail call fastcc void @ixgbevf_clean_tx_ring(ptr noundef %95) #14
  %inc6.i = add nuw nsw i32 %i.119.i, 1
  %96 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %num_xdp_queues, align 4
  %cmp2.i = icmp slt i32 %inc6.i, %97
  br i1 %cmp2.i, label %for.body3.i.for.body3.i_crit_edge, label %for.body3.i.ixgbevf_clean_all_tx_rings.exit_crit_edge

for.body3.i.ixgbevf_clean_all_tx_rings.exit_crit_edge: ; preds = %for.body3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_all_tx_rings.exit

for.body3.i.for.body3.i_crit_edge:                ; preds = %for.body3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body3.i

ixgbevf_clean_all_tx_rings.exit:                  ; preds = %for.body3.i.ixgbevf_clean_all_tx_rings.exit_crit_edge, %for.cond1.preheader.i.ixgbevf_clean_all_tx_rings.exit_crit_edge
  %98 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %cmp4.i = icmp sgt i32 %99, 0
  br i1 %cmp4.i, label %ixgbevf_clean_all_tx_rings.exit.for.body.i83_crit_edge, label %ixgbevf_clean_all_tx_rings.exit.cleanup_crit_edge

ixgbevf_clean_all_tx_rings.exit.cleanup_crit_edge: ; preds = %ixgbevf_clean_all_tx_rings.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

ixgbevf_clean_all_tx_rings.exit.for.body.i83_crit_edge: ; preds = %ixgbevf_clean_all_tx_rings.exit
  br label %for.body.i83

for.body.i83:                                     ; preds = %for.body.i83.for.body.i83_crit_edge, %ixgbevf_clean_all_tx_rings.exit.for.body.i83_crit_edge
  %i.05.i = phi i32 [ %inc.i81, %for.body.i83.for.body.i83_crit_edge ], [ 0, %ixgbevf_clean_all_tx_rings.exit.for.body.i83_crit_edge ]
  %arrayidx.i80 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %i.05.i
  %100 = ptrtoint ptr %arrayidx.i80 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %arrayidx.i80, align 4
  tail call fastcc void @ixgbevf_clean_rx_ring(ptr noundef %101) #14
  %inc.i81 = add nuw nsw i32 %i.05.i, 1
  %102 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %num_rx_queues, align 8
  %cmp.i82 = icmp slt i32 %inc.i81, %103
  br i1 %cmp.i82, label %for.body.i83.for.body.i83_crit_edge, label %for.body.i83.cleanup_crit_edge

for.body.i83.cleanup_crit_edge:                   ; preds = %for.body.i83
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.i83.for.body.i83_crit_edge:              ; preds = %for.body.i83
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i83

cleanup:                                          ; preds = %for.body.i83.cleanup_crit_edge, %ixgbevf_clean_all_tx_rings.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_disable_rx_queue(ptr noundef %adapter, ptr nocapture noundef readonly %ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %hw_addr = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 1
  %0 = ptrtoint ptr %hw_addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw_addr, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !308

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %reg_idx2 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 21
  %2 = ptrtoint ptr %reg_idx2 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %reg_idx2, align 16
  %4 = and i16 %3, 255
  %conv6 = zext i16 %4 to i32
  %mul = shl nuw nsw i32 %conv6, 6
  %add = add nuw nsw i32 %mul, 4136
  %5 = ptrtoint ptr %hw_addr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %hw_addr, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end.ixgbevf_read_reg.exit_crit_edge, label %if.end.i, !prof !308

if.end.ixgbevf_read_reg.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.end.i:                                         ; preds = %if.end
  %add.ptr.i = getelementptr i8, ptr %6, i32 %add
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !309
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp.i = icmp eq i32 %7, -1
  br i1 %cmp.i, label %if.then12.i, label %if.end.i.ixgbevf_read_reg.exit_crit_edge, !prof !308

if.end.i.ixgbevf_read_reg.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.then12.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef %add) #14
  br label %ixgbevf_read_reg.exit

ixgbevf_read_reg.exit:                            ; preds = %if.then12.i, %if.end.i.ixgbevf_read_reg.exit_crit_edge, %if.end.ixgbevf_read_reg.exit_crit_edge
  %retval.0.i = phi i32 [ -1, %if.end.ixgbevf_read_reg.exit_crit_edge ], [ %8, %if.then12.i ], [ %8, %if.end.i.ixgbevf_read_reg.exit_crit_edge ]
  %9 = ptrtoint ptr %hw_addr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %hw_addr, align 4
  %tobool.not.i38 = icmp eq ptr %10, null
  br i1 %tobool.not.i38, label %ixgbevf_read_reg.exit.do.body.preheader_crit_edge, label %do.body4.i, !prof !308

ixgbevf_read_reg.exit.do.body.preheader_crit_edge: ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.preheader

do.body4.i:                                       ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  %and = and i32 %retval.0.i, -33554433
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %11 = tail call i32 @llvm.bswap.i32(i32 %and) #14
  %add.ptr.i39 = getelementptr i8, ptr %10, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i39, i32 %11) #14, !srcloc !312
  br label %do.body.preheader

do.body.preheader:                                ; preds = %do.body4.i, %ixgbevf_read_reg.exit.do.body.preheader_crit_edge
  br label %do.body

do.body:                                          ; preds = %ixgbevf_read_reg.exit47.do.body_crit_edge, %do.body.preheader
  %wait_loop.0 = phi i32 [ %dec, %ixgbevf_read_reg.exit47.do.body_crit_edge ], [ 10, %do.body.preheader ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %12 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %12(i32 noundef 2147480) #14
  %13 = ptrtoint ptr %hw_addr to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %hw_addr, align 4
  %tobool.not.i41 = icmp eq ptr %14, null
  br i1 %tobool.not.i41, label %do.body.ixgbevf_read_reg.exit47_crit_edge, label %if.end.i44, !prof !308

do.body.ixgbevf_read_reg.exit47_crit_edge:        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit47

if.end.i44:                                       ; preds = %do.body
  %add.ptr.i42 = getelementptr i8, ptr %14, i32 %add
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i42) #14, !srcloc !309
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %cmp.i43 = icmp eq i32 %15, -1
  br i1 %cmp.i43, label %if.then12.i45, label %if.end.i44.ixgbevf_read_reg.exit47_crit_edge, !prof !308

if.end.i44.ixgbevf_read_reg.exit47_crit_edge:     ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit47

if.then12.i45:                                    ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef %add) #14
  br label %ixgbevf_read_reg.exit47

ixgbevf_read_reg.exit47:                          ; preds = %if.then12.i45, %if.end.i44.ixgbevf_read_reg.exit47_crit_edge, %do.body.ixgbevf_read_reg.exit47_crit_edge
  %retval.0.i46 = phi i32 [ -1, %do.body.ixgbevf_read_reg.exit47_crit_edge ], [ %16, %if.then12.i45 ], [ %16, %if.end.i44.ixgbevf_read_reg.exit47_crit_edge ]
  %dec = add nsw i32 %wait_loop.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool14.not = icmp eq i32 %dec, 0
  %and15 = and i32 %retval.0.i46, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  %or.cond = select i1 %tobool14.not, i1 true, i1 %tobool16.not
  br i1 %or.cond, label %do.end, label %ixgbevf_read_reg.exit47.do.body_crit_edge

ixgbevf_read_reg.exit47.do.body_crit_edge:        ; preds = %ixgbevf_read_reg.exit47
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

do.end:                                           ; preds = %ixgbevf_read_reg.exit47
  br i1 %tobool14.not, label %do.end21, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end21:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, i32 noundef %conv6) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end21, %do.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_stop_all_queues(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ixgbevf_reset(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %netdev2 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 23
  %0 = ptrtoint ptr %netdev2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev2, align 4
  %reset_hw = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 0, i32 1
  %2 = ptrtoint ptr %reset_hw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %reset_hw, align 4
  %call = tail call i32 %3(ptr noundef %hw1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.else, label %do.body3

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_reset.__UNIQUE_ID_ddebug658, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_reset, %if.then8)) #14
          to label %if.end15 [label %if.then8], !srcloc !314

if.then8:                                         ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw1, align 4
  %netdev9 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %netdev9 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %netdev9, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_reset.__UNIQUE_ID_ddebug658, ptr noundef %7, ptr noundef nonnull @.str.3) #14
  br label %if.end15

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mac = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2
  %8 = ptrtoint ptr %mac to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mac, align 4
  %call14 = tail call i32 %9(ptr noundef %hw1) #14
  tail call fastcc void @ixgbevf_negotiate_api(ptr noundef %adapter)
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8, %do.body3
  %addr = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 1
  %10 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %addr, align 4
  %12 = and i32 %11, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i.not.i = icmp eq i32 %12, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %if.end15.if.end29_crit_edge

if.end15.if.end29_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

is_valid_ether_addr.exit:                         ; preds = %if.end15
  %add.ptr.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 1, i32 4
  %13 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %14 to i32
  %or.i.i = or i32 %11, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.if.end29_crit_edge, label %if.then19

is_valid_ether_addr.exit.if.end29_crit_edge:      ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then19:                                        ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dev_addr_mod(ptr noundef %1, i32 noundef 0, ptr noundef %addr, i32 noundef 6) #14
  %perm_addr = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 54
  %15 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %addr, align 4
  %17 = ptrtoint ptr %perm_addr to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %perm_addr, align 4
  %18 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i = getelementptr %struct.net_device, ptr %1, i32 0, i32 54, i32 4
  %20 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %19, ptr %add.ptr1.i, align 2
  br label %if.end29

if.end29:                                         ; preds = %if.then19, %is_valid_ether_addr.exit.if.end29_crit_edge, %if.end15.if.end29_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %21 = load volatile i32, ptr @jiffies, align 128
  %last_reset = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 41
  %22 = ptrtoint ptr %last_reset to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %last_reset, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ixgbevf_reinit_locked(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 30
  %call6 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %state) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not7 = icmp eq i32 %call6, 0
  br i1 %tobool.not7, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  tail call void @msleep(i32 noundef 1) #14
  %call = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %state) #14
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  tail call void @ixgbevf_down(ptr noundef %adapter)
  %pdev = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 25
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  tail call void @pci_set_master(ptr noundef %1) #14
  tail call fastcc void @ixgbevf_configure(ptr noundef %adapter) #14
  tail call fastcc void @ixgbevf_up_complete(ptr noundef %adapter) #14
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %state) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_set_master(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_netdev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_negotiate_api(ptr noundef %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %mbx_lock = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 40
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock) #14
  %negotiate_api_version = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 0, i32 8
  %0 = ptrtoint ptr %negotiate_api_version to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %negotiate_api_version, align 4
  %call = tail call i32 %1(ptr noundef %hw1, i32 noundef 6) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.while.end_crit_edge, label %while.cond

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.cond:                                       ; preds = %entry
  %2 = ptrtoint ptr %negotiate_api_version to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %negotiate_api_version, align 4
  %call.1 = tail call i32 %3(ptr noundef %hw1, i32 noundef 5) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1)
  %tobool.not.1 = icmp eq i32 %call.1, 0
  br i1 %tobool.not.1, label %while.cond.while.end_crit_edge, label %while.cond.1

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.cond.1:                                     ; preds = %while.cond
  %4 = ptrtoint ptr %negotiate_api_version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %negotiate_api_version, align 4
  %call.2 = tail call i32 %5(ptr noundef %hw1, i32 noundef 4) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.2)
  %tobool.not.2 = icmp eq i32 %call.2, 0
  br i1 %tobool.not.2, label %while.cond.1.while.end_crit_edge, label %while.cond.2

while.cond.1.while.end_crit_edge:                 ; preds = %while.cond.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.cond.2:                                     ; preds = %while.cond.1
  %6 = ptrtoint ptr %negotiate_api_version to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %negotiate_api_version, align 4
  %call.3 = tail call i32 %7(ptr noundef %hw1, i32 noundef 3) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.3)
  %tobool.not.3 = icmp eq i32 %call.3, 0
  br i1 %tobool.not.3, label %while.cond.2.while.end_crit_edge, label %while.cond.3

while.cond.2.while.end_crit_edge:                 ; preds = %while.cond.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.cond.3:                                     ; preds = %while.cond.2
  %8 = ptrtoint ptr %negotiate_api_version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %negotiate_api_version, align 4
  %call.4 = tail call i32 %9(ptr noundef %hw1, i32 noundef 2) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.4)
  %tobool.not.4 = icmp eq i32 %call.4, 0
  br i1 %tobool.not.4, label %while.cond.3.while.end_crit_edge, label %while.cond.4

while.cond.3.while.end_crit_edge:                 ; preds = %while.cond.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.cond.4:                                     ; preds = %while.cond.3
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %negotiate_api_version to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %negotiate_api_version, align 4
  %call.5 = tail call i32 %11(ptr noundef %hw1, i32 noundef 0) #14
  br label %while.end

while.end:                                        ; preds = %while.cond.4, %while.cond.3.while.end_crit_edge, %while.cond.2.while.end_crit_edge, %while.cond.1.while.end_crit_edge, %while.cond.while.end_crit_edge, %entry.while.end_crit_edge
  %api_version = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 10
  %12 = ptrtoint ptr %api_version to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %api_version, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %13)
  %cmp3 = icmp sgt i32 %13, 5
  br i1 %cmp3, label %if.then4, label %while.end.if.end9_crit_edge

while.end.if.end9_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then4:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %mbx = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 3
  %14 = ptrtoint ptr %mbx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mbx, align 4
  %call6 = tail call i32 %15(ptr noundef %hw1) #14
  %16 = call ptr @memcpy(ptr %mbx, ptr @ixgbevf_mbx_ops, i32 28)
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %while.end.if.end9_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ixgbevf_update_stats(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %state = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 30
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %state, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool4.not = icmp eq i32 %5, 0
  br i1 %tobool4.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %hw_addr.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 1
  %6 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end.ixgbevf_read_reg.exit_crit_edge, label %if.end.i, !prof !308

if.end.ixgbevf_read_reg.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.end.i:                                         ; preds = %if.end
  %add.ptr.i = getelementptr i8, ptr %7, i32 4124
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !309
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %8)
  %cmp.i = icmp eq i32 %8, -1
  br i1 %cmp.i, label %if.then12.i, label %if.end.i.ixgbevf_read_reg.exit_crit_edge, !prof !308

if.end.i.ixgbevf_read_reg.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.then12.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 4124) #14
  br label %ixgbevf_read_reg.exit

ixgbevf_read_reg.exit:                            ; preds = %if.then12.i, %if.end.i.ixgbevf_read_reg.exit_crit_edge, %if.end.ixgbevf_read_reg.exit_crit_edge
  %retval.0.i = phi i32 [ -1, %if.end.ixgbevf_read_reg.exit_crit_edge ], [ %9, %if.then12.i ], [ %9, %if.end.i.ixgbevf_read_reg.exit_crit_edge ]
  %conv = zext i32 %retval.0.i to i64
  %last_vfgprc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 5
  %10 = ptrtoint ptr %last_vfgprc to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %last_vfgprc, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %11, i64 %conv)
  %cmp = icmp ugt i64 %11, %conv
  br i1 %cmp, label %if.then7, label %ixgbevf_read_reg.exit.if.end9_crit_edge

ixgbevf_read_reg.exit.if.end9_crit_edge:          ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then7:                                         ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  %vfgprc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 10
  %12 = ptrtoint ptr %vfgprc to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %vfgprc, align 8
  %add = add i64 %13, 4294967296
  store i64 %add, ptr %vfgprc, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %ixgbevf_read_reg.exit.if.end9_crit_edge
  %14 = ptrtoint ptr %last_vfgprc to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %conv, ptr %last_vfgprc, align 8
  %vfgprc14 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 10
  %15 = ptrtoint ptr %vfgprc14 to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %vfgprc14, align 8
  %and = and i64 %16, -4294967296
  %or = or i64 %and, %conv
  store i64 %or, ptr %vfgprc14, align 8
  %17 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i183 = icmp eq ptr %18, null
  br i1 %tobool.not.i183, label %if.end9.ixgbevf_read_reg.exit189_crit_edge, label %if.end.i186, !prof !308

if.end9.ixgbevf_read_reg.exit189_crit_edge:       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit189

if.end.i186:                                      ; preds = %if.end9
  %add.ptr.i184 = getelementptr i8, ptr %18, i32 8220
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i184) #14, !srcloc !309
  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %cmp.i185 = icmp eq i32 %19, -1
  br i1 %cmp.i185, label %if.then12.i187, label %if.end.i186.ixgbevf_read_reg.exit189_crit_edge, !prof !308

if.end.i186.ixgbevf_read_reg.exit189_crit_edge:   ; preds = %if.end.i186
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit189

if.then12.i187:                                   ; preds = %if.end.i186
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 8220) #14
  br label %ixgbevf_read_reg.exit189

ixgbevf_read_reg.exit189:                         ; preds = %if.then12.i187, %if.end.i186.ixgbevf_read_reg.exit189_crit_edge, %if.end9.ixgbevf_read_reg.exit189_crit_edge
  %retval.0.i188 = phi i32 [ -1, %if.end9.ixgbevf_read_reg.exit189_crit_edge ], [ %20, %if.then12.i187 ], [ %20, %if.end.i186.ixgbevf_read_reg.exit189_crit_edge ]
  %conv20 = zext i32 %retval.0.i188 to i64
  %last_vfgptc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 6
  %21 = ptrtoint ptr %last_vfgptc to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %last_vfgptc, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %22, i64 %conv20)
  %cmp22 = icmp ugt i64 %22, %conv20
  br i1 %cmp22, label %if.then24, label %ixgbevf_read_reg.exit189.if.end27_crit_edge

ixgbevf_read_reg.exit189.if.end27_crit_edge:      ; preds = %ixgbevf_read_reg.exit189
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

if.then24:                                        ; preds = %ixgbevf_read_reg.exit189
  call void @__sanitizer_cov_trace_pc() #16
  %vfgptc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 11
  %23 = ptrtoint ptr %vfgptc to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %vfgptc, align 8
  %add26 = add i64 %24, 4294967296
  store i64 %add26, ptr %vfgptc, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.then24, %ixgbevf_read_reg.exit189.if.end27_crit_edge
  %25 = ptrtoint ptr %last_vfgptc to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %conv20, ptr %last_vfgptc, align 8
  %vfgptc32 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 11
  %26 = ptrtoint ptr %vfgptc32 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %vfgptc32, align 8
  %and33 = and i64 %27, -4294967296
  %or37 = or i64 %and33, %conv20
  store i64 %or37, ptr %vfgptc32, align 8
  %28 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i191 = icmp eq ptr %29, null
  br i1 %tobool.not.i191, label %if.end27.ixgbevf_read_reg.exit197_crit_edge, label %if.end.i194, !prof !308

if.end27.ixgbevf_read_reg.exit197_crit_edge:      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit197

if.end.i194:                                      ; preds = %if.end27
  %add.ptr.i192 = getelementptr i8, ptr %29, i32 4128
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i192) #14, !srcloc !309
  %31 = tail call i32 @llvm.bswap.i32(i32 %30) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %30)
  %cmp.i193 = icmp eq i32 %30, -1
  br i1 %cmp.i193, label %if.then12.i195, label %if.end.i194.ixgbevf_read_reg.exit197_crit_edge, !prof !308

if.end.i194.ixgbevf_read_reg.exit197_crit_edge:   ; preds = %if.end.i194
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit197

if.then12.i195:                                   ; preds = %if.end.i194
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 4128) #14
  br label %ixgbevf_read_reg.exit197

ixgbevf_read_reg.exit197:                         ; preds = %if.then12.i195, %if.end.i194.ixgbevf_read_reg.exit197_crit_edge, %if.end27.ixgbevf_read_reg.exit197_crit_edge
  %retval.0.i196 = phi i32 [ -1, %if.end27.ixgbevf_read_reg.exit197_crit_edge ], [ %31, %if.then12.i195 ], [ %31, %if.end.i194.ixgbevf_read_reg.exit197_crit_edge ]
  %conv39 = zext i32 %retval.0.i196 to i64
  %32 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i199 = icmp eq ptr %33, null
  br i1 %tobool.not.i199, label %ixgbevf_read_reg.exit197.ixgbevf_read_reg.exit205_crit_edge, label %if.end.i202, !prof !308

ixgbevf_read_reg.exit197.ixgbevf_read_reg.exit205_crit_edge: ; preds = %ixgbevf_read_reg.exit197
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit205

if.end.i202:                                      ; preds = %ixgbevf_read_reg.exit197
  %add.ptr.i200 = getelementptr i8, ptr %33, i32 4132
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i200) #14, !srcloc !309
  %35 = tail call i32 @llvm.bswap.i32(i32 %34) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %cmp.i201 = icmp eq i32 %34, -1
  br i1 %cmp.i201, label %if.then12.i203, label %if.end.i202.ixgbevf_read_reg.exit205_crit_edge, !prof !308

if.end.i202.ixgbevf_read_reg.exit205_crit_edge:   ; preds = %if.end.i202
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit205

if.then12.i203:                                   ; preds = %if.end.i202
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 4132) #14
  br label %ixgbevf_read_reg.exit205

ixgbevf_read_reg.exit205:                         ; preds = %if.then12.i203, %if.end.i202.ixgbevf_read_reg.exit205_crit_edge, %ixgbevf_read_reg.exit197.ixgbevf_read_reg.exit205_crit_edge
  %retval.0.i204 = phi i32 [ -1, %ixgbevf_read_reg.exit197.ixgbevf_read_reg.exit205_crit_edge ], [ %35, %if.then12.i203 ], [ %35, %if.end.i202.ixgbevf_read_reg.exit205_crit_edge ]
  %conv41 = zext i32 %retval.0.i204 to i64
  %shl = shl nuw i64 %conv41, 32
  %or43 = or i64 %shl, %conv39
  %last_vfgorc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 7
  %36 = ptrtoint ptr %last_vfgorc to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %last_vfgorc, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %or43, i64 %37)
  %cmp45 = icmp ult i64 %or43, %37
  br i1 %cmp45, label %if.then47, label %ixgbevf_read_reg.exit205.if.end50_crit_edge

ixgbevf_read_reg.exit205.if.end50_crit_edge:      ; preds = %ixgbevf_read_reg.exit205
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.then47:                                        ; preds = %ixgbevf_read_reg.exit205
  call void @__sanitizer_cov_trace_pc() #16
  %vfgorc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 12
  %38 = ptrtoint ptr %vfgorc to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %vfgorc, align 8
  %add49 = add i64 %39, 68719476736
  store i64 %add49, ptr %vfgorc, align 8
  br label %if.end50

if.end50:                                         ; preds = %if.then47, %ixgbevf_read_reg.exit205.if.end50_crit_edge
  %40 = ptrtoint ptr %last_vfgorc to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %or43, ptr %last_vfgorc, align 8
  %vfgorc54 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 12
  %41 = ptrtoint ptr %vfgorc54 to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %vfgorc54, align 8
  %and55 = and i64 %42, -68719476736
  %or58 = or i64 %and55, %or43
  store i64 %or58, ptr %vfgorc54, align 8
  %43 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i207 = icmp eq ptr %44, null
  br i1 %tobool.not.i207, label %if.end50.ixgbevf_read_reg.exit213_crit_edge, label %if.end.i210, !prof !308

if.end50.ixgbevf_read_reg.exit213_crit_edge:      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit213

if.end.i210:                                      ; preds = %if.end50
  %add.ptr.i208 = getelementptr i8, ptr %44, i32 8224
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i208) #14, !srcloc !309
  %46 = tail call i32 @llvm.bswap.i32(i32 %45) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %45)
  %cmp.i209 = icmp eq i32 %45, -1
  br i1 %cmp.i209, label %if.then12.i211, label %if.end.i210.ixgbevf_read_reg.exit213_crit_edge, !prof !308

if.end.i210.ixgbevf_read_reg.exit213_crit_edge:   ; preds = %if.end.i210
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit213

if.then12.i211:                                   ; preds = %if.end.i210
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 8224) #14
  br label %ixgbevf_read_reg.exit213

ixgbevf_read_reg.exit213:                         ; preds = %if.then12.i211, %if.end.i210.ixgbevf_read_reg.exit213_crit_edge, %if.end50.ixgbevf_read_reg.exit213_crit_edge
  %retval.0.i212 = phi i32 [ -1, %if.end50.ixgbevf_read_reg.exit213_crit_edge ], [ %46, %if.then12.i211 ], [ %46, %if.end.i210.ixgbevf_read_reg.exit213_crit_edge ]
  %conv61 = zext i32 %retval.0.i212 to i64
  %47 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i215 = icmp eq ptr %48, null
  br i1 %tobool.not.i215, label %ixgbevf_read_reg.exit213.ixgbevf_read_reg.exit221_crit_edge, label %if.end.i218, !prof !308

ixgbevf_read_reg.exit213.ixgbevf_read_reg.exit221_crit_edge: ; preds = %ixgbevf_read_reg.exit213
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit221

if.end.i218:                                      ; preds = %ixgbevf_read_reg.exit213
  %add.ptr.i216 = getelementptr i8, ptr %48, i32 8228
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i216) #14, !srcloc !309
  %50 = tail call i32 @llvm.bswap.i32(i32 %49) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %49)
  %cmp.i217 = icmp eq i32 %49, -1
  br i1 %cmp.i217, label %if.then12.i219, label %if.end.i218.ixgbevf_read_reg.exit221_crit_edge, !prof !308

if.end.i218.ixgbevf_read_reg.exit221_crit_edge:   ; preds = %if.end.i218
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit221

if.then12.i219:                                   ; preds = %if.end.i218
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 8228) #14
  br label %ixgbevf_read_reg.exit221

ixgbevf_read_reg.exit221:                         ; preds = %if.then12.i219, %if.end.i218.ixgbevf_read_reg.exit221_crit_edge, %ixgbevf_read_reg.exit213.ixgbevf_read_reg.exit221_crit_edge
  %retval.0.i220 = phi i32 [ -1, %ixgbevf_read_reg.exit213.ixgbevf_read_reg.exit221_crit_edge ], [ %50, %if.then12.i219 ], [ %50, %if.end.i218.ixgbevf_read_reg.exit221_crit_edge ]
  %conv64 = zext i32 %retval.0.i220 to i64
  %shl66 = shl nuw i64 %conv64, 32
  %or67 = or i64 %shl66, %conv61
  %last_vfgotc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 8
  %51 = ptrtoint ptr %last_vfgotc to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %last_vfgotc, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %or67, i64 %52)
  %cmp69 = icmp ult i64 %or67, %52
  br i1 %cmp69, label %if.then71, label %ixgbevf_read_reg.exit221.if.end74_crit_edge

ixgbevf_read_reg.exit221.if.end74_crit_edge:      ; preds = %ixgbevf_read_reg.exit221
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end74

if.then71:                                        ; preds = %ixgbevf_read_reg.exit221
  call void @__sanitizer_cov_trace_pc() #16
  %vfgotc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 13
  %53 = ptrtoint ptr %vfgotc to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %vfgotc, align 8
  %add73 = add i64 %54, 68719476736
  store i64 %add73, ptr %vfgotc, align 8
  br label %if.end74

if.end74:                                         ; preds = %if.then71, %ixgbevf_read_reg.exit221.if.end74_crit_edge
  %55 = ptrtoint ptr %last_vfgotc to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %or67, ptr %last_vfgotc, align 8
  %vfgotc78 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 13
  %56 = ptrtoint ptr %vfgotc78 to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %vfgotc78, align 8
  %and79 = and i64 %57, -68719476736
  %or82 = or i64 %and79, %or67
  store i64 %or82, ptr %vfgotc78, align 8
  %58 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i223 = icmp eq ptr %59, null
  br i1 %tobool.not.i223, label %if.end74.ixgbevf_read_reg.exit229_crit_edge, label %if.end.i226, !prof !308

if.end74.ixgbevf_read_reg.exit229_crit_edge:      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit229

if.end.i226:                                      ; preds = %if.end74
  %add.ptr.i224 = getelementptr i8, ptr %59, i32 4148
  %60 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i224) #14, !srcloc !309
  %61 = tail call i32 @llvm.bswap.i32(i32 %60) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %60)
  %cmp.i225 = icmp eq i32 %60, -1
  br i1 %cmp.i225, label %if.then12.i227, label %if.end.i226.ixgbevf_read_reg.exit229_crit_edge, !prof !308

if.end.i226.ixgbevf_read_reg.exit229_crit_edge:   ; preds = %if.end.i226
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit229

if.then12.i227:                                   ; preds = %if.end.i226
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 4148) #14
  br label %ixgbevf_read_reg.exit229

ixgbevf_read_reg.exit229:                         ; preds = %if.then12.i227, %if.end.i226.ixgbevf_read_reg.exit229_crit_edge, %if.end74.ixgbevf_read_reg.exit229_crit_edge
  %retval.0.i228 = phi i32 [ -1, %if.end74.ixgbevf_read_reg.exit229_crit_edge ], [ %61, %if.then12.i227 ], [ %61, %if.end.i226.ixgbevf_read_reg.exit229_crit_edge ]
  %conv85 = zext i32 %retval.0.i228 to i64
  %last_vfmprc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 9
  %62 = ptrtoint ptr %last_vfmprc to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %last_vfmprc, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %63, i64 %conv85)
  %cmp87 = icmp ugt i64 %63, %conv85
  br i1 %cmp87, label %if.then89, label %ixgbevf_read_reg.exit229.if.end92_crit_edge

ixgbevf_read_reg.exit229.if.end92_crit_edge:      ; preds = %ixgbevf_read_reg.exit229
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end92

if.then89:                                        ; preds = %ixgbevf_read_reg.exit229
  call void @__sanitizer_cov_trace_pc() #16
  %vfmprc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 14
  %64 = ptrtoint ptr %vfmprc to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %vfmprc, align 8
  %add91 = add i64 %65, 4294967296
  store i64 %add91, ptr %vfmprc, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then89, %ixgbevf_read_reg.exit229.if.end92_crit_edge
  %66 = ptrtoint ptr %last_vfmprc to i32
  call void @__asan_store8_noabort(i32 %66)
  store i64 %conv85, ptr %last_vfmprc, align 8
  %vfmprc97 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 14
  %67 = ptrtoint ptr %vfmprc97 to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %vfmprc97, align 8
  %and98 = and i64 %68, -4294967296
  %or102 = or i64 %and98, %conv85
  store i64 %or102, ptr %vfmprc97, align 8
  %num_rx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 13
  %69 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %cmp103230 = icmp sgt i32 %70, 0
  br i1 %cmp103230, label %if.end92.for.body_crit_edge, label %if.end92.for.end_crit_edge

if.end92.for.end_crit_edge:                       ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end92.for.body_crit_edge:                      ; preds = %if.end92
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end92.for.body_crit_edge
  %alloc_rx_page_failed.0235 = phi i64 [ %add108, %for.body.for.body_crit_edge ], [ 0, %if.end92.for.body_crit_edge ]
  %alloc_rx_buff_failed.0234 = phi i64 [ %add110, %for.body.for.body_crit_edge ], [ 0, %if.end92.for.body_crit_edge ]
  %alloc_rx_page.0233 = phi i64 [ %add112, %for.body.for.body_crit_edge ], [ 0, %if.end92.for.body_crit_edge ]
  %hw_csum_rx_error.0232 = phi i64 [ %add106, %for.body.for.body_crit_edge ], [ 0, %if.end92.for.body_crit_edge ]
  %i.0231 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end92.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %i.0231
  %71 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx, align 4
  %73 = getelementptr inbounds %struct.ixgbevf_ring, ptr %72, i32 0, i32 16
  %csum_err = getelementptr inbounds %struct.ixgbevf_ring, ptr %72, i32 0, i32 16, i32 0, i32 3
  %74 = ptrtoint ptr %csum_err to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %csum_err, align 8
  %add106 = add i64 %75, %hw_csum_rx_error.0232
  %76 = ptrtoint ptr %73 to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %73, align 32
  %add108 = add i64 %77, %alloc_rx_page_failed.0235
  %alloc_rx_buff_failed109 = getelementptr inbounds %struct.ixgbevf_ring, ptr %72, i32 0, i32 16, i32 0, i32 1
  %78 = ptrtoint ptr %alloc_rx_buff_failed109 to i32
  call void @__asan_load8_noabort(i32 %78)
  %79 = load i64, ptr %alloc_rx_buff_failed109, align 8
  %add110 = add i64 %79, %alloc_rx_buff_failed.0234
  %alloc_rx_page111 = getelementptr inbounds %struct.ixgbevf_ring, ptr %72, i32 0, i32 16, i32 0, i32 2
  %80 = ptrtoint ptr %alloc_rx_page111 to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %alloc_rx_page111, align 16
  %add112 = add i64 %81, %alloc_rx_page.0233
  %inc = add nuw nsw i32 %i.0231, 1
  %exitcond.not = icmp eq i32 %inc, %70
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end92.for.end_crit_edge
  %hw_csum_rx_error.0.lcssa = phi i64 [ 0, %if.end92.for.end_crit_edge ], [ %add106, %for.body.for.end_crit_edge ]
  %alloc_rx_page.0.lcssa = phi i64 [ 0, %if.end92.for.end_crit_edge ], [ %add112, %for.body.for.end_crit_edge ]
  %alloc_rx_buff_failed.0.lcssa = phi i64 [ 0, %if.end92.for.end_crit_edge ], [ %add110, %for.body.for.end_crit_edge ]
  %alloc_rx_page_failed.0.lcssa = phi i64 [ 0, %if.end92.for.end_crit_edge ], [ %add108, %for.body.for.end_crit_edge ]
  %hw_csum_rx_error113 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 15
  %82 = ptrtoint ptr %hw_csum_rx_error113 to i32
  call void @__asan_store8_noabort(i32 %82)
  store i64 %hw_csum_rx_error.0.lcssa, ptr %hw_csum_rx_error113, align 8
  %alloc_rx_page_failed114 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 18
  %83 = ptrtoint ptr %alloc_rx_page_failed114 to i32
  call void @__asan_store8_noabort(i32 %83)
  store i64 %alloc_rx_page_failed.0.lcssa, ptr %alloc_rx_page_failed114, align 8
  %alloc_rx_buff_failed115 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 19
  %84 = ptrtoint ptr %alloc_rx_buff_failed115 to i32
  call void @__asan_store8_noabort(i32 %84)
  store i64 %alloc_rx_buff_failed.0.lcssa, ptr %alloc_rx_buff_failed115, align 8
  %alloc_rx_page116 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 20
  %85 = ptrtoint ptr %alloc_rx_page116 to i32
  call void @__asan_store8_noabort(i32 %85)
  store i64 %alloc_rx_page.0.lcssa, ptr %alloc_rx_page116, align 8
  br label %cleanup

cleanup:                                          ; preds = %for.end, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ixgbevf_free_tx_resources(ptr noundef %tx_ring) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @ixgbevf_clean_tx_ring(ptr noundef %tx_ring)
  %0 = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  tail call void @vfree(ptr noundef %2) #14
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %0, align 8
  %desc = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 5
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %desc, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 4
  %6 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev, align 16
  %size = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 7
  %8 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %size, align 4
  %dma = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 6
  %10 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dma, align 8
  tail call void @dma_free_attrs(ptr noundef %7, i32 noundef %9, ptr noundef nonnull %5, i32 noundef %11, i32 noundef 0) #14
  %12 = ptrtoint ptr %desc to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %desc, align 4
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_clean_tx_ring(ptr noundef %tx_ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %next_to_clean = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 10
  %0 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %next_to_clean, align 4
  %2 = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 12
  %next_to_use = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 9
  %3 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %next_to_use, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %4)
  %cmp.not80 = icmp eq i16 %1, %4
  br i1 %cmp.not80, label %entry.while.end42_crit_edge, label %while.body.lr.ph

entry.while.end42_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end42

while.body.lr.ph:                                 ; preds = %entry
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %2, align 8
  %idxprom = zext i16 %1 to i32
  %arrayidx = getelementptr %struct.ixgbevf_tx_buffer, ptr %6, i32 %idxprom
  %state = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 13
  %dev = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 4
  %desc = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 5
  %count = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 8
  br label %while.body

while.body:                                       ; preds = %if.end41.while.body_crit_edge, %while.body.lr.ph
  %tx_buffer.082 = phi ptr [ %arrayidx, %while.body.lr.ph ], [ %tx_buffer.3, %if.end41.while.body_crit_edge ]
  %i.081 = phi i16 [ %1, %while.body.lr.ph ], [ %i.3, %if.end41.while.body_crit_edge ]
  %conv83 = zext i16 %i.081 to i32
  %7 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state, align 4
  %9 = and i32 %8, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  %10 = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.082, i32 0, i32 2
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @page_frag_free(ptr noundef %12) #14
  br label %if.end

if.else:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__dev_kfree_skb_any(ptr noundef %12, i32 noundef 1) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev, align 16
  %dma = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.082, i32 0, i32 6
  %15 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %dma, align 4
  %len = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.082, i32 0, i32 7
  %17 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %len, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef 1, i32 noundef 0) #14
  %19 = ptrtoint ptr %tx_buffer.082 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tx_buffer.082, align 4
  %21 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %desc, align 4
  %arrayidx4 = getelementptr %union.ixgbe_adv_tx_desc, ptr %22, i32 %conv83
  %cmp6.not74 = icmp eq ptr %arrayidx4, %20
  br i1 %cmp6.not74, label %if.end.while.end_crit_edge, label %if.end.while.body8_crit_edge

if.end.while.body8_crit_edge:                     ; preds = %if.end
  br label %while.body8

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body8:                                      ; preds = %if.end26.while.body8_crit_edge, %if.end.while.body8_crit_edge
  %tx_desc.077 = phi ptr [ %tx_desc.1, %if.end26.while.body8_crit_edge ], [ %arrayidx4, %if.end.while.body8_crit_edge ]
  %tx_buffer.176 = phi ptr [ %tx_buffer.2, %if.end26.while.body8_crit_edge ], [ %tx_buffer.082, %if.end.while.body8_crit_edge ]
  %i.175 = phi i16 [ %i.2, %if.end26.while.body8_crit_edge ], [ %i.081, %if.end.while.body8_crit_edge ]
  %incdec.ptr = getelementptr %struct.ixgbevf_tx_buffer, ptr %tx_buffer.176, i32 1
  %incdec.ptr9 = getelementptr %union.ixgbe_adv_tx_desc, ptr %tx_desc.077, i32 1
  %inc = add i16 %i.175, 1
  %23 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %count, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc, i16 %24)
  %cmp12 = icmp eq i16 %inc, %24
  br i1 %cmp12, label %if.then16, label %while.body8.if.end19_crit_edge, !prof !308

while.body8.if.end19_crit_edge:                   ; preds = %while.body8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.then16:                                        ; preds = %while.body8
  call void @__sanitizer_cov_trace_pc() #16
  %25 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %2, align 8
  %27 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %desc, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %while.body8.if.end19_crit_edge
  %i.2 = phi i16 [ 0, %if.then16 ], [ %inc, %while.body8.if.end19_crit_edge ]
  %tx_buffer.2 = phi ptr [ %26, %if.then16 ], [ %incdec.ptr, %while.body8.if.end19_crit_edge ]
  %tx_desc.1 = phi ptr [ %28, %if.then16 ], [ %incdec.ptr9, %while.body8.if.end19_crit_edge ]
  %len20 = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.2, i32 0, i32 7
  %29 = ptrtoint ptr %len20 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %len20, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool21.not = icmp eq i32 %30, 0
  br i1 %tobool21.not, label %if.end19.if.end26_crit_edge, label %if.then22

if.end19.if.end26_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

if.then22:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %dev, align 16
  %dma24 = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.2, i32 0, i32 6
  %33 = ptrtoint ptr %dma24 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %dma24, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %32, i32 noundef %34, i32 noundef %30, i32 noundef 1, i32 noundef 0) #14
  br label %if.end26

if.end26:                                         ; preds = %if.then22, %if.end19.if.end26_crit_edge
  %cmp6.not = icmp eq ptr %tx_desc.1, %20
  br i1 %cmp6.not, label %if.end26.while.end_crit_edge, label %if.end26.while.body8_crit_edge

if.end26.while.body8_crit_edge:                   ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body8

if.end26.while.end_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %if.end26.while.end_crit_edge, %if.end.while.end_crit_edge
  %i.1.lcssa = phi i16 [ %i.081, %if.end.while.end_crit_edge ], [ %i.2, %if.end26.while.end_crit_edge ]
  %tx_buffer.1.lcssa = phi ptr [ %tx_buffer.082, %if.end.while.end_crit_edge ], [ %tx_buffer.2, %if.end26.while.end_crit_edge ]
  %incdec.ptr27 = getelementptr %struct.ixgbevf_tx_buffer, ptr %tx_buffer.1.lcssa, i32 1
  %inc28 = add i16 %i.1.lcssa, 1
  %35 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %count, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc28, i16 %36)
  %cmp32 = icmp eq i16 %inc28, %36
  br i1 %cmp32, label %if.then40, label %while.end.if.end41_crit_edge, !prof !308

while.end.if.end41_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41

if.then40:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %37 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %2, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %while.end.if.end41_crit_edge
  %i.3 = phi i16 [ 0, %if.then40 ], [ %inc28, %while.end.if.end41_crit_edge ]
  %tx_buffer.3 = phi ptr [ %38, %if.then40 ], [ %incdec.ptr27, %while.end.if.end41_crit_edge ]
  %39 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %next_to_use, align 2
  %cmp.not = icmp eq i16 %i.3, %40
  br i1 %cmp.not, label %if.end41.while.end42_crit_edge, label %if.end41.while.body_crit_edge

if.end41.while.body_crit_edge:                    ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end41.while.end42_crit_edge:                   ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end42

while.end42:                                      ; preds = %if.end41.while.end42_crit_edge, %entry.while.end42_crit_edge
  %41 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 0, ptr %next_to_use, align 2
  %42 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 0, ptr %next_to_clean, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ixgbevf_setup_tx_resources(ptr noundef %tx_ring) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 2
  %0 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev, align 8
  %count = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 8
  %2 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %count, align 32
  %conv = zext i16 %3 to i32
  %mul = shl nuw nsw i32 %conv, 5
  %call1 = tail call noalias ptr @vmalloc(i32 noundef %mul) #18
  %4 = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 12
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call1, ptr %4, align 8
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.err_crit_edge, label %do.body

entry.err_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %err

do.body:                                          ; preds = %entry
  %syncp = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 15
  %dep_map.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 15, i32 0, i32 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef nonnull @.str.4, ptr noundef nonnull @ixgbevf_setup_tx_resources.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  %6 = ptrtoint ptr %syncp to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %syncp, align 4
  %7 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %count, align 32
  %conv3 = zext i16 %8 to i32
  %mul4 = shl nuw nsw i32 %conv3, 4
  %size5 = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 7
  %add = add nuw nsw i32 %mul4, 4095
  %and = and i32 %add, 2093056
  %9 = ptrtoint ptr %size5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %and, ptr %size5, align 4
  %dev = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 4
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 16
  %dma = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 6
  %call.i = tail call ptr @dma_alloc_attrs(ptr noundef %11, i32 noundef %and, ptr noundef %dma, i32 noundef 3264, i32 noundef 0) #14
  %desc = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 5
  %12 = ptrtoint ptr %desc to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call.i, ptr %desc, align 4
  %tobool11.not = icmp eq ptr %call.i, null
  br i1 %tobool11.not, label %do.body.err_crit_edge, label %do.body.cleanup_crit_edge

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body.err_crit_edge:                            ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %err

err:                                              ; preds = %do.body.err_crit_edge, %entry.err_crit_edge
  %13 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %4, align 8
  tail call void @vfree(ptr noundef %14) #14
  %15 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %4, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_setup_tx_resources.__UNIQUE_ID_ddebug669, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_setup_tx_resources, %if.then20)) #14
          to label %cleanup [label %if.then20], !srcloc !314

if.then20:                                        ; preds = %err
  call void @__sanitizer_cov_trace_pc() #16
  %hw = getelementptr i8, ptr %1, i32 3048
  %16 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw, align 8
  %netdev21 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %17, i32 0, i32 23
  %18 = ptrtoint ptr %netdev21 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %netdev21, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_setup_tx_resources.__UNIQUE_ID_ddebug669, ptr noundef %19, ptr noundef nonnull @.str.6) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then20, %err, %do.body.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.body.cleanup_crit_edge ], [ -12, %if.then20 ], [ -12, %err ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @vmalloc(i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ixgbevf_setup_rx_resources(ptr nocapture noundef readonly %adapter, ptr noundef %rx_ring) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %count = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 8
  %0 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %count, align 32
  %conv = zext i16 %1 to i32
  %mul = mul nuw nsw i32 %conv, 12
  %call = tail call noalias ptr @vmalloc(i32 noundef %mul) #18
  %2 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 12
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call, ptr %2, align 8
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.err_crit_edge, label %do.body

entry.err_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %err

do.body:                                          ; preds = %entry
  %syncp = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 15
  %dep_map.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 15, i32 0, i32 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef nonnull @.str.7, ptr noundef nonnull @ixgbevf_setup_rx_resources.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  %4 = ptrtoint ptr %syncp to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %syncp, align 4
  %5 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %count, align 32
  %conv2 = zext i16 %6 to i32
  %mul3 = shl nuw nsw i32 %conv2, 4
  %size4 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 7
  %add = add nuw nsw i32 %mul3, 4095
  %and = and i32 %add, 2093056
  %7 = ptrtoint ptr %size4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %and, ptr %size4, align 4
  %dev = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 4
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev, align 16
  %dma = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 6
  %call.i = tail call ptr @dma_alloc_attrs(ptr noundef %9, i32 noundef %and, ptr noundef %dma, i32 noundef 3264, i32 noundef 0) #14
  %desc = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 5
  %10 = ptrtoint ptr %desc to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call.i, ptr %desc, align 4
  %tobool10.not = icmp eq ptr %call.i, null
  br i1 %tobool10.not, label %do.body.err_crit_edge, label %if.end12

do.body.err_crit_edge:                            ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %err

if.end12:                                         ; preds = %do.body
  %xdp_rxq = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 17
  %netdev = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 23
  %11 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %netdev, align 4
  %queue_index = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 22
  %13 = ptrtoint ptr %queue_index to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %queue_index, align 4
  %call13 = tail call i32 @xdp_rxq_info_reg(ptr noundef %xdp_rxq, ptr noundef %12, i32 noundef %14, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp = icmp slt i32 %call13, 0
  br i1 %cmp, label %if.end12.err_crit_edge, label %if.end16

if.end12.err_crit_edge:                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %err

if.end16:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %xdp_prog = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 24
  %15 = ptrtoint ptr %xdp_prog to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %xdp_prog, align 8
  %xdp_prog17 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 3
  %17 = ptrtoint ptr %xdp_prog17 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %xdp_prog17, align 4
  br label %cleanup

err:                                              ; preds = %if.end12.err_crit_edge, %do.body.err_crit_edge, %entry.err_crit_edge
  %18 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %2, align 8
  tail call void @vfree(ptr noundef %19) #14
  %20 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %2, align 8
  %dev21 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 4
  %21 = ptrtoint ptr %dev21 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev21, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %22, ptr noundef nonnull @.str.8) #17
  br label %cleanup

cleanup:                                          ; preds = %err, %if.end16
  %retval.0 = phi i32 [ -12, %err ], [ 0, %if.end16 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_rxq_info_reg(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ixgbevf_free_rx_resources(ptr noundef %rx_ring) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @ixgbevf_clean_rx_ring(ptr noundef %rx_ring)
  %xdp_prog = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 3
  %0 = ptrtoint ptr %xdp_prog to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %xdp_prog, align 4
  %xdp_rxq = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 17
  tail call void @xdp_rxq_info_unreg(ptr noundef %xdp_rxq) #14
  %1 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 12
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  tail call void @vfree(ptr noundef %3) #14
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %1, align 8
  %dev = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 4
  %5 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev, align 16
  %size = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 7
  %7 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %size, align 4
  %desc = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 5
  %9 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %desc, align 4
  %dma = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 6
  %11 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %dma, align 8
  tail call void @dma_free_attrs(ptr noundef %6, i32 noundef %8, ptr noundef %10, i32 noundef %12, i32 noundef 0) #14
  %13 = ptrtoint ptr %desc to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %desc, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_clean_rx_ring(ptr noundef %rx_ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %next_to_clean = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 10
  %0 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %next_to_clean, align 4
  %skb = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 20
  %2 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skb, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @consume_skb(ptr noundef nonnull %3) #14
  %4 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %skb, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %next_to_alloc = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 11
  %5 = ptrtoint ptr %next_to_alloc to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %next_to_alloc, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %1, i16 %6)
  %cmp.not40 = icmp eq i16 %1, %6
  br i1 %cmp.not40, label %if.end.while.end_crit_edge, label %while.body.lr.ph

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end
  %7 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 12
  %dev = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 4
  %state.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 13
  %count = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 8
  br label %while.body

while.body:                                       ; preds = %ixgbevf_rx_bufsz.exit.while.body_crit_edge, %while.body.lr.ph
  %i.041 = phi i16 [ %1, %while.body.lr.ph ], [ %spec.store.select, %ixgbevf_rx_bufsz.exit.while.body_crit_edge ]
  %conv = zext i16 %i.041 to i32
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 8
  %arrayidx = getelementptr %struct.ixgbevf_rx_buffer, ptr %9, i32 %conv
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 16
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %page_offset = getelementptr %struct.ixgbevf_rx_buffer, ptr %9, i32 %conv, i32 2
  %14 = ptrtoint ptr %page_offset to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %page_offset, align 4
  %conv5 = zext i16 %15 to i32
  %16 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %while.body.ixgbevf_rx_bufsz.exit_crit_edge

while.body.ixgbevf_rx_bufsz.exit_crit_edge:       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_bufsz.exit

if.end.i:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %state.i, align 4
  %20 = and i32 %19, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool3.not.i = icmp eq i32 %20, 0
  %..i = select i1 %tobool3.not.i, i32 2048, i32 1662
  br label %ixgbevf_rx_bufsz.exit

ixgbevf_rx_bufsz.exit:                            ; preds = %if.end.i, %while.body.ixgbevf_rx_bufsz.exit_crit_edge
  %retval.0.i = phi i32 [ 3072, %while.body.ixgbevf_rx_bufsz.exit_crit_edge ], [ %..i, %if.end.i ]
  %add.i = add i32 %13, %conv5
  tail call void @dma_sync_single_for_cpu(ptr noundef %11, i32 noundef %add.i, i32 noundef %retval.0.i, i32 noundef 2) #14
  %21 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev, align 16
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx, align 4
  %25 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %state.i, align 4
  %and1.i.i39 = and i32 %26, 1
  %shl = shl nuw nsw i32 4096, %and1.i.i39
  tail call void @dma_unmap_page_attrs(ptr noundef %22, i32 noundef %24, i32 noundef %shl, i32 noundef 2, i32 noundef 34) #14
  %page = getelementptr %struct.ixgbevf_rx_buffer, ptr %9, i32 %conv, i32 1
  %27 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %page, align 4
  %pagecnt_bias = getelementptr %struct.ixgbevf_rx_buffer, ptr %9, i32 %conv, i32 3
  %29 = ptrtoint ptr %pagecnt_bias to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %pagecnt_bias, align 2
  %conv9 = zext i16 %30 to i32
  tail call void @__page_frag_cache_drain(ptr noundef %28, i32 noundef %conv9) #14
  %inc = add i16 %i.041, 1
  %31 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %count, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc, i16 %32)
  %cmp12 = icmp eq i16 %inc, %32
  %spec.store.select = select i1 %cmp12, i16 0, i16 %inc
  %33 = ptrtoint ptr %next_to_alloc to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %next_to_alloc, align 2
  %cmp.not = icmp eq i16 %spec.store.select, %34
  br i1 %cmp.not, label %ixgbevf_rx_bufsz.exit.while.end_crit_edge, label %ixgbevf_rx_bufsz.exit.while.body_crit_edge

ixgbevf_rx_bufsz.exit.while.body_crit_edge:       ; preds = %ixgbevf_rx_bufsz.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

ixgbevf_rx_bufsz.exit.while.end_crit_edge:        ; preds = %ixgbevf_rx_bufsz.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %ixgbevf_rx_bufsz.exit.while.end_crit_edge, %if.end.while.end_crit_edge
  %35 = ptrtoint ptr %next_to_alloc to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 0, ptr %next_to_alloc, align 2
  %36 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 0, ptr %next_to_clean, align 4
  %next_to_use = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 9
  %37 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 0, ptr %next_to_use, align 2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ixgbevf_open(ptr noundef %netdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %num_msix_vectors = getelementptr i8, ptr %netdev, i32 2992
  %0 = ptrtoint ptr %num_msix_vectors to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_msix_vectors, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %adapter_stopped = getelementptr i8, ptr %netdev, i32 3253
  %2 = ptrtoint ptr %adapter_stopped to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %adapter_stopped, align 1, !range !315
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool2.not = icmp eq i8 %3, 0
  br i1 %tobool2.not, label %if.end.if.end9_crit_edge, label %if.then3

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then3:                                         ; preds = %if.end
  tail call void @ixgbevf_reset(ptr noundef %add.ptr.i)
  %4 = ptrtoint ptr %adapter_stopped to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %adapter_stopped, align 1, !range !315
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool5.not = icmp eq i8 %5, 0
  br i1 %tobool5.not, label %if.then3.if.end9_crit_edge, label %if.then6

if.then3.if.end9_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then6:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12) #17
  br label %cleanup

if.end9:                                          ; preds = %if.then3.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %state = getelementptr i8, ptr %netdev, i32 3432
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state, align 4
  %and1.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool11.not = icmp eq i32 %and1.i, 0
  br i1 %tobool11.not, label %if.end13, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end13:                                         ; preds = %if.end9
  tail call void @netif_carrier_off(ptr noundef %netdev) #14
  %call14 = tail call fastcc i32 @ixgbevf_setup_all_tx_resources(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %if.end13.err_setup_tx_crit_edge

if.end13.err_setup_tx_crit_edge:                  ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_setup_tx

if.end17:                                         ; preds = %if.end13
  %call18 = tail call fastcc i32 @ixgbevf_setup_all_rx_resources(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end21, label %if.end17.err_setup_rx_crit_edge

if.end17.err_setup_rx_crit_edge:                  ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_setup_rx

if.end21:                                         ; preds = %if.end17
  tail call fastcc void @ixgbevf_configure(ptr noundef %add.ptr.i)
  %call.i = tail call fastcc i32 @ixgbevf_request_msix_irqs(ptr noundef %add.ptr.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end25, label %do.body1.i

do.body1.i:                                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_request_irq.__UNIQUE_ID_ddebug652, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_open, %if.then6.i)) #14
          to label %err_req_irq [label %if.then6.i], !srcloc !314

if.then6.i:                                       ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #16
  %hw.i = getelementptr i8, ptr %netdev, i32 3048
  %8 = ptrtoint ptr %hw.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hw.i, align 8
  %netdev.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %9, i32 0, i32 23
  %10 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %netdev.i, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_request_irq.__UNIQUE_ID_ddebug652, ptr noundef %11, ptr noundef nonnull @.str.31, i32 noundef %call.i) #14
  br label %err_req_irq

if.end25:                                         ; preds = %if.end21
  %num_tx_queues = getelementptr i8, ptr %netdev, i32 2872
  %12 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_tx_queues, align 8
  %call26 = tail call i32 @netif_set_real_num_tx_queues(ptr noundef %netdev, i32 noundef %13) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end29, label %if.end25.err_set_queues_crit_edge

if.end25.err_set_queues_crit_edge:                ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_set_queues

if.end29:                                         ; preds = %if.end25
  %num_rx_queues = getelementptr i8, ptr %netdev, i32 2936
  %14 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_rx_queues, align 8
  %call30 = tail call i32 @netif_set_real_num_rx_queues(ptr noundef %netdev, i32 noundef %15) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end33, label %if.end29.err_set_queues_crit_edge

if.end29.err_set_queues_crit_edge:                ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_set_queues

if.end33:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_up_complete(ptr noundef %add.ptr.i)
  br label %cleanup

err_set_queues:                                   ; preds = %if.end29.err_set_queues_crit_edge, %if.end25.err_set_queues_crit_edge
  %err.0 = phi i32 [ %call26, %if.end25.err_set_queues_crit_edge ], [ %call30, %if.end29.err_set_queues_crit_edge ]
  tail call fastcc void @ixgbevf_free_irq(ptr noundef %add.ptr.i)
  br label %err_req_irq

err_req_irq:                                      ; preds = %err_set_queues, %if.then6.i, %do.body1.i
  %err.1 = phi i32 [ %err.0, %err_set_queues ], [ %call.i, %do.body1.i ], [ %call.i, %if.then6.i ]
  tail call fastcc void @ixgbevf_free_all_rx_resources(ptr noundef %add.ptr.i)
  br label %err_setup_rx

err_setup_rx:                                     ; preds = %err_req_irq, %if.end17.err_setup_rx_crit_edge
  %err.2 = phi i32 [ %call18, %if.end17.err_setup_rx_crit_edge ], [ %err.1, %err_req_irq ]
  tail call fastcc void @ixgbevf_free_all_tx_resources(ptr noundef %add.ptr.i)
  br label %err_setup_tx

err_setup_tx:                                     ; preds = %err_setup_rx, %if.end13.err_setup_tx_crit_edge
  %err.3 = phi i32 [ %call14, %if.end13.err_setup_tx_crit_edge ], [ %err.2, %err_setup_rx ]
  tail call void @ixgbevf_reset(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %err_setup_tx, %if.end33, %if.end9.cleanup_crit_edge, %if.then6, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end33 ], [ -12, %entry.cleanup_crit_edge ], [ -16, %if.end9.cleanup_crit_edge ], [ -5, %if.then6 ], [ %err.3, %err_setup_tx ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ixgbevf_setup_all_tx_resources(ptr nocapture noundef readonly %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 8
  %0 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_tx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp90 = icmp sgt i32 %1, 0
  br i1 %cmp90, label %entry.for.body_crit_edge, label %entry.for.cond10.preheader_crit_edge

entry.for.cond10.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond10.preheader

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.cond10.preheader:                             ; preds = %for.inc.for.cond10.preheader_crit_edge, %entry.for.cond10.preheader_crit_edge
  %i.0.lcssa = phi i32 [ 0, %entry.for.cond10.preheader_crit_edge ], [ %inc, %for.inc.for.cond10.preheader_crit_edge ]
  %num_xdp_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 6
  %2 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_xdp_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1192 = icmp sgt i32 %3, 0
  br i1 %cmp1192, label %for.cond10.preheader.for.body12_crit_edge, label %for.cond10.preheader.cleanup_crit_edge

for.cond10.preheader.cleanup_crit_edge:           ; preds = %for.cond10.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond10.preheader.for.body12_crit_edge:        ; preds = %for.cond10.preheader
  br label %for.body12

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.091 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %i.091
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %call = tail call i32 @ixgbevf_setup_tx_resources(ptr noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %for.inc, label %do.body1

do.body1:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_setup_all_tx_resources.__UNIQUE_ID_ddebug670, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_setup_all_tx_resources, %err_setup_tx.thread)) #14
          to label %err_setup_tx [label %err_setup_tx.thread], !srcloc !314

err_setup_tx.thread:                              ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #16
  %hw = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %6 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %hw, align 8
  %netdev = getelementptr inbounds %struct.ixgbevf_adapter, ptr %7, i32 0, i32 23
  %8 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %netdev, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_setup_all_tx_resources.__UNIQUE_ID_ddebug670, ptr noundef %9, ptr noundef nonnull @.str.26, i32 noundef %i.091) #14
  br label %while.cond46.preheader

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.091, 1
  %10 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_tx_queues, align 8
  %cmp = icmp slt i32 %inc, %11
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.cond10.preheader_crit_edge

for.inc.for.cond10.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond10.preheader

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body12:                                       ; preds = %for.inc40.for.body12_crit_edge, %for.cond10.preheader.for.body12_crit_edge
  %j.093 = phi i32 [ %inc41, %for.inc40.for.body12_crit_edge ], [ 0, %for.cond10.preheader.for.body12_crit_edge ]
  %arrayidx13 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %j.093
  %12 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx13, align 4
  %call14 = tail call i32 @ixgbevf_setup_tx_resources(ptr noundef %13)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %for.inc40, label %do.body19

do.body19:                                        ; preds = %for.body12
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_setup_all_tx_resources.__UNIQUE_ID_ddebug671, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_setup_all_tx_resources, %if.then31)) #14
          to label %err_setup_tx [label %if.then31], !srcloc !314

if.then31:                                        ; preds = %do.body19
  call void @__sanitizer_cov_trace_pc() #16
  %hw32 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %14 = ptrtoint ptr %hw32 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hw32, align 8
  %netdev34 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %15, i32 0, i32 23
  %16 = ptrtoint ptr %netdev34 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %netdev34, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_setup_all_tx_resources.__UNIQUE_ID_ddebug671, ptr noundef %17, ptr noundef nonnull @.str.27, i32 noundef %j.093) #14
  br label %err_setup_tx

for.inc40:                                        ; preds = %for.body12
  %inc41 = add nuw nsw i32 %j.093, 1
  %18 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_xdp_queues, align 4
  %cmp11 = icmp slt i32 %inc41, %19
  br i1 %cmp11, label %for.inc40.for.body12_crit_edge, label %for.inc40.cleanup_crit_edge

for.inc40.cleanup_crit_edge:                      ; preds = %for.inc40
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc40.for.body12_crit_edge:                   ; preds = %for.inc40
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body12

err_setup_tx:                                     ; preds = %if.then31, %do.body19, %do.body1
  %i.089 = phi i32 [ %i.0.lcssa, %if.then31 ], [ %i.091, %do.body1 ], [ %i.0.lcssa, %do.body19 ]
  %err.0 = phi i32 [ %call14, %if.then31 ], [ %call, %do.body1 ], [ %call14, %do.body19 ]
  %j.1 = phi i32 [ %j.093, %if.then31 ], [ 0, %do.body1 ], [ %j.093, %do.body19 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %j.1)
  %tobool43.not94 = icmp eq i32 %j.1, 0
  br i1 %tobool43.not94, label %err_setup_tx.while.cond46.preheader_crit_edge, label %err_setup_tx.while.body_crit_edge

err_setup_tx.while.body_crit_edge:                ; preds = %err_setup_tx
  br label %while.body

err_setup_tx.while.cond46.preheader_crit_edge:    ; preds = %err_setup_tx
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond46.preheader

while.cond46.preheader:                           ; preds = %ixgbevf_free_tx_resources.exit.while.cond46.preheader_crit_edge, %err_setup_tx.while.cond46.preheader_crit_edge, %err_setup_tx.thread
  %err.0108 = phi i32 [ %call, %err_setup_tx.thread ], [ %err.0, %err_setup_tx.while.cond46.preheader_crit_edge ], [ %err.0, %ixgbevf_free_tx_resources.exit.while.cond46.preheader_crit_edge ]
  %i.089107 = phi i32 [ %i.091, %err_setup_tx.thread ], [ %i.089, %err_setup_tx.while.cond46.preheader_crit_edge ], [ %i.089, %ixgbevf_free_tx_resources.exit.while.cond46.preheader_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.089107)
  %tobool48.not96 = icmp eq i32 %i.089107, 0
  br i1 %tobool48.not96, label %while.cond46.preheader.cleanup_crit_edge, label %while.cond46.preheader.while.body49_crit_edge

while.cond46.preheader.while.body49_crit_edge:    ; preds = %while.cond46.preheader
  br label %while.body49

while.cond46.preheader.cleanup_crit_edge:         ; preds = %while.cond46.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body:                                       ; preds = %ixgbevf_free_tx_resources.exit.while.body_crit_edge, %err_setup_tx.while.body_crit_edge
  %j.295 = phi i32 [ %dec, %ixgbevf_free_tx_resources.exit.while.body_crit_edge ], [ %j.1, %err_setup_tx.while.body_crit_edge ]
  %dec = add nsw i32 %j.295, -1
  %arrayidx45 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %dec
  %20 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx45, align 4
  tail call fastcc void @ixgbevf_clean_tx_ring(ptr noundef %21) #14
  %22 = getelementptr inbounds %struct.ixgbevf_ring, ptr %21, i32 0, i32 12
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 8
  tail call void @vfree(ptr noundef %24) #14
  %25 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %22, align 8
  %desc.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %21, i32 0, i32 5
  %26 = ptrtoint ptr %desc.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %desc.i, align 4
  %tobool.not.i = icmp eq ptr %27, null
  br i1 %tobool.not.i, label %while.body.ixgbevf_free_tx_resources.exit_crit_edge, label %if.end.i

while.body.ixgbevf_free_tx_resources.exit_crit_edge: ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_tx_resources.exit

if.end.i:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %21, i32 0, i32 4
  %28 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev.i, align 16
  %size.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %21, i32 0, i32 7
  %30 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %size.i, align 4
  %dma.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %21, i32 0, i32 6
  %32 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %dma.i, align 8
  tail call void @dma_free_attrs(ptr noundef %29, i32 noundef %31, ptr noundef nonnull %27, i32 noundef %33, i32 noundef 0) #14
  %34 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %desc.i, align 4
  br label %ixgbevf_free_tx_resources.exit

ixgbevf_free_tx_resources.exit:                   ; preds = %if.end.i, %while.body.ixgbevf_free_tx_resources.exit_crit_edge
  %tobool43.not = icmp eq i32 %dec, 0
  br i1 %tobool43.not, label %ixgbevf_free_tx_resources.exit.while.cond46.preheader_crit_edge, label %ixgbevf_free_tx_resources.exit.while.body_crit_edge

ixgbevf_free_tx_resources.exit.while.body_crit_edge: ; preds = %ixgbevf_free_tx_resources.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

ixgbevf_free_tx_resources.exit.while.cond46.preheader_crit_edge: ; preds = %ixgbevf_free_tx_resources.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond46.preheader

while.body49:                                     ; preds = %ixgbevf_free_tx_resources.exit83.while.body49_crit_edge, %while.cond46.preheader.while.body49_crit_edge
  %i.197 = phi i32 [ %dec47, %ixgbevf_free_tx_resources.exit83.while.body49_crit_edge ], [ %i.089107, %while.cond46.preheader.while.body49_crit_edge ]
  %dec47 = add nsw i32 %i.197, -1
  %arrayidx51 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %dec47
  %35 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx51, align 4
  tail call fastcc void @ixgbevf_clean_tx_ring(ptr noundef %36) #14
  %37 = getelementptr inbounds %struct.ixgbevf_ring, ptr %36, i32 0, i32 12
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 8
  tail call void @vfree(ptr noundef %39) #14
  %40 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %37, align 8
  %desc.i77 = getelementptr inbounds %struct.ixgbevf_ring, ptr %36, i32 0, i32 5
  %41 = ptrtoint ptr %desc.i77 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %desc.i77, align 4
  %tobool.not.i78 = icmp eq ptr %42, null
  br i1 %tobool.not.i78, label %while.body49.ixgbevf_free_tx_resources.exit83_crit_edge, label %if.end.i82

while.body49.ixgbevf_free_tx_resources.exit83_crit_edge: ; preds = %while.body49
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_tx_resources.exit83

if.end.i82:                                       ; preds = %while.body49
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i79 = getelementptr inbounds %struct.ixgbevf_ring, ptr %36, i32 0, i32 4
  %43 = ptrtoint ptr %dev.i79 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %dev.i79, align 16
  %size.i80 = getelementptr inbounds %struct.ixgbevf_ring, ptr %36, i32 0, i32 7
  %45 = ptrtoint ptr %size.i80 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %size.i80, align 4
  %dma.i81 = getelementptr inbounds %struct.ixgbevf_ring, ptr %36, i32 0, i32 6
  %47 = ptrtoint ptr %dma.i81 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %dma.i81, align 8
  tail call void @dma_free_attrs(ptr noundef %44, i32 noundef %46, ptr noundef nonnull %42, i32 noundef %48, i32 noundef 0) #14
  %49 = ptrtoint ptr %desc.i77 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %desc.i77, align 4
  br label %ixgbevf_free_tx_resources.exit83

ixgbevf_free_tx_resources.exit83:                 ; preds = %if.end.i82, %while.body49.ixgbevf_free_tx_resources.exit83_crit_edge
  %tobool48.not = icmp eq i32 %dec47, 0
  br i1 %tobool48.not, label %ixgbevf_free_tx_resources.exit83.cleanup_crit_edge, label %ixgbevf_free_tx_resources.exit83.while.body49_crit_edge

ixgbevf_free_tx_resources.exit83.while.body49_crit_edge: ; preds = %ixgbevf_free_tx_resources.exit83
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body49

ixgbevf_free_tx_resources.exit83.cleanup_crit_edge: ; preds = %ixgbevf_free_tx_resources.exit83
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %ixgbevf_free_tx_resources.exit83.cleanup_crit_edge, %while.cond46.preheader.cleanup_crit_edge, %for.inc40.cleanup_crit_edge, %for.cond10.preheader.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0108, %while.cond46.preheader.cleanup_crit_edge ], [ 0, %for.cond10.preheader.cleanup_crit_edge ], [ %err.0108, %ixgbevf_free_tx_resources.exit83.cleanup_crit_edge ], [ 0, %for.inc40.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ixgbevf_setup_all_rx_resources(ptr nocapture noundef readonly %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_rx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 13
  %0 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp28 = icmp sgt i32 %1, 0
  br i1 %cmp28, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.029 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %i.029
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %call = tail call i32 @ixgbevf_setup_rx_resources(ptr noundef %adapter, ptr noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %for.inc, label %do.body1

do.body1:                                         ; preds = %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_setup_all_rx_resources.__UNIQUE_ID_ddebug672, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_setup_all_rx_resources, %if.then6)) #14
          to label %err_setup_rx [label %if.then6], !srcloc !314

if.then6:                                         ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #16
  %hw = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %4 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hw, align 8
  %netdev = getelementptr inbounds %struct.ixgbevf_adapter, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %netdev, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_setup_all_rx_resources.__UNIQUE_ID_ddebug672, ptr noundef %7, ptr noundef nonnull @.str.29, i32 noundef %i.029) #14
  br label %err_setup_rx

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.029, 1
  %8 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_rx_queues, align 8
  %cmp = icmp slt i32 %inc, %9
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

err_setup_rx:                                     ; preds = %if.then6, %do.body1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.029)
  %tobool10.not30 = icmp eq i32 %i.029, 0
  br i1 %tobool10.not30, label %err_setup_rx.cleanup_crit_edge, label %err_setup_rx.while.body_crit_edge

err_setup_rx.while.body_crit_edge:                ; preds = %err_setup_rx
  br label %while.body

err_setup_rx.cleanup_crit_edge:                   ; preds = %err_setup_rx
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body:                                       ; preds = %while.body.while.body_crit_edge, %err_setup_rx.while.body_crit_edge
  %i.131 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ %i.029, %err_setup_rx.while.body_crit_edge ]
  %dec = add nsw i32 %i.131, -1
  %arrayidx12 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %dec
  %10 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx12, align 4
  tail call fastcc void @ixgbevf_clean_rx_ring(ptr noundef %11) #14
  %xdp_prog.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %xdp_prog.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %xdp_prog.i, align 4
  %xdp_rxq.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %11, i32 0, i32 17
  tail call void @xdp_rxq_info_unreg(ptr noundef %xdp_rxq.i) #14
  %13 = getelementptr inbounds %struct.ixgbevf_ring, ptr %11, i32 0, i32 12
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  tail call void @vfree(ptr noundef %15) #14
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %13, align 8
  %dev.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %11, i32 0, i32 4
  %17 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev.i, align 16
  %size.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %11, i32 0, i32 7
  %19 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %size.i, align 4
  %desc.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %11, i32 0, i32 5
  %21 = ptrtoint ptr %desc.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %desc.i, align 4
  %dma.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %11, i32 0, i32 6
  %23 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %dma.i, align 8
  tail call void @dma_free_attrs(ptr noundef %18, i32 noundef %20, ptr noundef %22, i32 noundef %24, i32 noundef 0) #14
  %25 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %desc.i, align 4
  %tobool10.not = icmp eq i32 %dec, 0
  br i1 %tobool10.not, label %while.body.cleanup_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %while.body.cleanup_crit_edge, %err_setup_rx.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %err_setup_rx.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ %call, %while.body.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_set_real_num_tx_queues(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_set_real_num_rx_queues(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_free_irq(ptr noundef %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %msix_entries = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  %0 = ptrtoint ptr %msix_entries to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %msix_entries, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %num_msix_vectors = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 17
  %2 = ptrtoint ptr %num_msix_vectors to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_msix_vectors, align 8
  %sub = add i32 %3, -1
  %arrayidx = getelementptr %struct.msix_entry, ptr %1, i32 %sub
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %call = tail call ptr @free_irq(i32 noundef %5, ptr noundef %adapter) #14
  %dec = add i32 %3, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %dec)
  %cmp32 = icmp sgt i32 %dec, -1
  br i1 %cmp32, label %if.end.for.body_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.033 = phi i32 [ %dec16, %for.inc.for.body_crit_edge ], [ %dec, %if.end.for.body_crit_edge ]
  %arrayidx2 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %i.033
  %6 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx2, align 4
  %rx = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %rx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rx, align 8
  %tobool3.not = icmp eq ptr %9, null
  br i1 %tobool3.not, label %land.lhs.true, label %for.body.if.end9_crit_edge

for.body.if.end9_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

land.lhs.true:                                    ; preds = %for.body
  %tx = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %7, i32 0, i32 5
  %10 = ptrtoint ptr %tx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tx, align 8
  %tobool7.not = icmp eq ptr %11, null
  br i1 %tobool7.not, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.if.end9_crit_edge

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end9:                                          ; preds = %land.lhs.true.if.end9_crit_edge, %for.body.if.end9_crit_edge
  %12 = ptrtoint ptr %msix_entries to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %msix_entries, align 8
  %arrayidx11 = getelementptr %struct.msix_entry, ptr %13, i32 %i.033
  %14 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx11, align 4
  %call15 = tail call ptr @free_irq(i32 noundef %15, ptr noundef %7) #14
  br label %for.inc

for.inc:                                          ; preds = %if.end9, %land.lhs.true.for.inc_crit_edge
  %dec16 = add nsw i32 %i.033, -1
  %cmp = icmp sgt i32 %i.033, 0
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_free_all_rx_resources(ptr nocapture noundef readonly %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_rx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 13
  %0 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp8 = icmp sgt i32 %1, 0
  br i1 %cmp8, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.09 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %i.09
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %desc = getelementptr inbounds %struct.ixgbevf_ring, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %desc, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_clean_rx_ring(ptr noundef %3) #14
  %xdp_prog.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %3, i32 0, i32 3
  %6 = ptrtoint ptr %xdp_prog.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %xdp_prog.i, align 4
  %xdp_rxq.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %3, i32 0, i32 17
  tail call void @xdp_rxq_info_unreg(ptr noundef %xdp_rxq.i) #14
  %7 = getelementptr inbounds %struct.ixgbevf_ring, ptr %3, i32 0, i32 12
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 8
  tail call void @vfree(ptr noundef %9) #14
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %7, align 8
  %dev.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %3, i32 0, i32 4
  %11 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev.i, align 16
  %size.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %3, i32 0, i32 7
  %13 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %size.i, align 4
  %15 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %desc, align 4
  %dma.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %3, i32 0, i32 6
  %17 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %dma.i, align 8
  tail call void @dma_free_attrs(ptr noundef %12, i32 noundef %14, ptr noundef %16, i32 noundef %18, i32 noundef 0) #14
  %19 = ptrtoint ptr %desc to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %desc, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.09, 1
  %20 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_rx_queues, align 8
  %cmp = icmp slt i32 %inc, %21
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_free_all_tx_resources(ptr nocapture noundef readonly %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 8
  %0 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_tx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp35 = icmp sgt i32 %1, 0
  br i1 %cmp35, label %entry.for.body_crit_edge, label %entry.for.cond3.preheader_crit_edge

entry.for.cond3.preheader_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond3.preheader

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.cond3.preheader:                              ; preds = %for.inc.for.cond3.preheader_crit_edge, %entry.for.cond3.preheader_crit_edge
  %num_xdp_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 6
  %2 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_xdp_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp437 = icmp sgt i32 %3, 0
  br i1 %cmp437, label %for.cond3.preheader.for.body5_crit_edge, label %for.cond3.preheader.for.end15_crit_edge

for.cond3.preheader.for.end15_crit_edge:          ; preds = %for.cond3.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end15

for.cond3.preheader.for.body5_crit_edge:          ; preds = %for.cond3.preheader
  br label %for.body5

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.036 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %i.036
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %desc = getelementptr inbounds %struct.ixgbevf_ring, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %desc, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then:                                          ; preds = %for.body
  tail call fastcc void @ixgbevf_clean_tx_ring(ptr noundef %5) #14
  %8 = getelementptr inbounds %struct.ixgbevf_ring, ptr %5, i32 0, i32 12
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 8
  tail call void @vfree(ptr noundef %10) #14
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %8, align 8
  %12 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %desc, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.then.for.inc_crit_edge, label %if.end.i

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %5, i32 0, i32 4
  %14 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dev.i, align 16
  %size.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %5, i32 0, i32 7
  %16 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %size.i, align 4
  %dma.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %5, i32 0, i32 6
  %18 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %dma.i, align 8
  tail call void @dma_free_attrs(ptr noundef %15, i32 noundef %17, ptr noundef nonnull %13, i32 noundef %19, i32 noundef 0) #14
  %20 = ptrtoint ptr %desc to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %desc, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i, %if.then.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.036, 1
  %21 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_tx_queues, align 8
  %cmp = icmp slt i32 %inc, %22
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.cond3.preheader_crit_edge

for.inc.for.cond3.preheader_crit_edge:            ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond3.preheader

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body5:                                        ; preds = %for.inc13.for.body5_crit_edge, %for.cond3.preheader.for.body5_crit_edge
  %i.138 = phi i32 [ %inc14, %for.inc13.for.body5_crit_edge ], [ 0, %for.cond3.preheader.for.body5_crit_edge ]
  %arrayidx6 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %i.138
  %23 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx6, align 4
  %desc7 = getelementptr inbounds %struct.ixgbevf_ring, ptr %24, i32 0, i32 5
  %25 = ptrtoint ptr %desc7 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %desc7, align 4
  %tobool8.not = icmp eq ptr %26, null
  br i1 %tobool8.not, label %for.body5.for.inc13_crit_edge, label %if.then9

for.body5.for.inc13_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc13

if.then9:                                         ; preds = %for.body5
  tail call fastcc void @ixgbevf_clean_tx_ring(ptr noundef %24) #14
  %27 = getelementptr inbounds %struct.ixgbevf_ring, ptr %24, i32 0, i32 12
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 8
  tail call void @vfree(ptr noundef %29) #14
  %30 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %27, align 8
  %31 = ptrtoint ptr %desc7 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %desc7, align 4
  %tobool.not.i29 = icmp eq ptr %32, null
  br i1 %tobool.not.i29, label %if.then9.for.inc13_crit_edge, label %if.end.i33

if.then9.for.inc13_crit_edge:                     ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc13

if.end.i33:                                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i30 = getelementptr inbounds %struct.ixgbevf_ring, ptr %24, i32 0, i32 4
  %33 = ptrtoint ptr %dev.i30 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev.i30, align 16
  %size.i31 = getelementptr inbounds %struct.ixgbevf_ring, ptr %24, i32 0, i32 7
  %35 = ptrtoint ptr %size.i31 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %size.i31, align 4
  %dma.i32 = getelementptr inbounds %struct.ixgbevf_ring, ptr %24, i32 0, i32 6
  %37 = ptrtoint ptr %dma.i32 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %dma.i32, align 8
  tail call void @dma_free_attrs(ptr noundef %34, i32 noundef %36, ptr noundef nonnull %32, i32 noundef %38, i32 noundef 0) #14
  %39 = ptrtoint ptr %desc7 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %desc7, align 4
  br label %for.inc13

for.inc13:                                        ; preds = %if.end.i33, %if.then9.for.inc13_crit_edge, %for.body5.for.inc13_crit_edge
  %inc14 = add nuw nsw i32 %i.138, 1
  %40 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %num_xdp_queues, align 4
  %cmp4 = icmp slt i32 %inc14, %41
  br i1 %cmp4, label %for.inc13.for.body5_crit_edge, label %for.inc13.for.end15_crit_edge

for.inc13.for.end15_crit_edge:                    ; preds = %for.inc13
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end15

for.inc13.for.body5_crit_edge:                    ; preds = %for.inc13
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body5

for.end15:                                        ; preds = %for.inc13.for.end15_crit_edge, %for.cond3.preheader.for.end15_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @ixgbevf_close(ptr noundef %netdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 6
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  tail call fastcc void @ixgbevf_close_suspend(ptr noundef %add.ptr.i)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_close_suspend(ptr noundef %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @ixgbevf_down(ptr noundef %adapter)
  %msix_entries.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  %0 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %msix_entries.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.ixgbevf_free_irq.exit_crit_edge, label %if.end.i

entry.ixgbevf_free_irq.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_irq.exit

if.end.i:                                         ; preds = %entry
  %num_msix_vectors.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 17
  %2 = ptrtoint ptr %num_msix_vectors.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_msix_vectors.i, align 8
  %sub.i = add i32 %3, -1
  %arrayidx.i = getelementptr %struct.msix_entry, ptr %1, i32 %sub.i
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 4
  %call.i = tail call ptr @free_irq(i32 noundef %5, ptr noundef %adapter) #14
  %dec.i = add i32 %3, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %dec.i)
  %cmp32.i = icmp sgt i32 %dec.i, -1
  br i1 %cmp32.i, label %if.end.i.for.body.i_crit_edge, label %if.end.i.ixgbevf_free_irq.exit_crit_edge

if.end.i.ixgbevf_free_irq.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_irq.exit

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %i.033.i = phi i32 [ %dec16.i, %for.inc.i.for.body.i_crit_edge ], [ %dec.i, %if.end.i.for.body.i_crit_edge ]
  %arrayidx2.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %i.033.i
  %6 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx2.i, align 4
  %rx.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %rx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rx.i, align 8
  %tobool3.not.i = icmp eq ptr %9, null
  br i1 %tobool3.not.i, label %land.lhs.true.i, label %for.body.i.if.end9.i_crit_edge

for.body.i.if.end9.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %tx.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %7, i32 0, i32 5
  %10 = ptrtoint ptr %tx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tx.i, align 8
  %tobool7.not.i = icmp eq ptr %11, null
  br i1 %tobool7.not.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %land.lhs.true.i.if.end9.i_crit_edge

land.lhs.true.i.if.end9.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end9.i:                                        ; preds = %land.lhs.true.i.if.end9.i_crit_edge, %for.body.i.if.end9.i_crit_edge
  %12 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %msix_entries.i, align 8
  %arrayidx11.i = getelementptr %struct.msix_entry, ptr %13, i32 %i.033.i
  %14 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx11.i, align 4
  %call15.i = tail call ptr @free_irq(i32 noundef %15, ptr noundef %7) #14
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end9.i, %land.lhs.true.i.for.inc.i_crit_edge
  %dec16.i = add nsw i32 %i.033.i, -1
  %cmp.i = icmp sgt i32 %i.033.i, 0
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.ixgbevf_free_irq.exit_crit_edge

for.inc.i.ixgbevf_free_irq.exit_crit_edge:        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_irq.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

ixgbevf_free_irq.exit:                            ; preds = %for.inc.i.ixgbevf_free_irq.exit_crit_edge, %if.end.i.ixgbevf_free_irq.exit_crit_edge, %entry.ixgbevf_free_irq.exit_crit_edge
  tail call fastcc void @ixgbevf_free_all_tx_resources(ptr noundef %adapter)
  tail call fastcc void @ixgbevf_free_all_rx_resources(ptr noundef %adapter)
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_init_module() #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.38, ptr noundef nonnull @ixgbevf_driver_string) #17
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.38, ptr noundef nonnull @ixgbevf_copyright) #17
  %call5 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.42, i32 noundef 917514, i32 noundef 1, ptr noundef nonnull @ixgbevf_driver_name) #14
  store ptr %call5, ptr @ixgbevf_wq, align 4
  %tobool.not = icmp eq ptr %call5, null
  br i1 %tobool.not, label %do.end7, label %if.end

do.end7:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call9 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.44, ptr noundef nonnull @ixgbevf_driver_name) #17
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call10 = tail call i32 @__pci_register_driver(ptr noundef nonnull @ixgbevf_driver, ptr noundef null, ptr noundef nonnull @.str) #14
  br label %return

return:                                           ; preds = %if.end, %do.end7
  %retval.0 = phi i32 [ %call10, %if.end ], [ -12, %do.end7 ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_exit_module() #6 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_unregister_driver(ptr noundef nonnull @ixgbevf_driver) #14
  %0 = load ptr, ptr @ixgbevf_wq, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @destroy_workqueue(ptr noundef nonnull %0) #14
  store ptr null, ptr @ixgbevf_wq, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_unregister_driver(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_set_rx_mode(ptr noundef %netdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %flags2 = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 14
  %0 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags2, align 8
  %and = and i32 %1, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %entry.if.end12_crit_edge

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.else:                                          ; preds = %entry
  %and3 = and i32 %1, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.else6, label %if.else.if.end12_crit_edge

if.else.if.end12_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.else6:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %and7 = and i32 %1, 4098
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp ne i32 %and7, 0
  %. = zext i1 %tobool8.not to i32
  br label %if.end12

if.end12:                                         ; preds = %if.else6, %if.else.if.end12_crit_edge, %entry.if.end12_crit_edge
  %xcast_mode.0 = phi i32 [ 3, %entry.if.end12_crit_edge ], [ 2, %if.else.if.end12_crit_edge ], [ %., %if.else6 ]
  %hw1 = getelementptr i8, ptr %netdev, i32 3048
  %mbx_lock = getelementptr i8, ptr %netdev, i32 3564
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock) #14
  %update_xcast_mode = getelementptr i8, ptr %netdev, i32 3120
  %2 = ptrtoint ptr %update_xcast_mode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %update_xcast_mode, align 4
  %call13 = tail call i32 %3(ptr noundef %hw1, i32 noundef %xcast_mode.0) #14
  %update_mc_addr_list = getelementptr i8, ptr %netdev, i32 3116
  %4 = ptrtoint ptr %update_mc_addr_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %update_mc_addr_list, align 4
  %call16 = tail call i32 %5(ptr noundef %hw1, ptr noundef %netdev) #14
  %uc.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 65
  %count2.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 65, i32 1
  %6 = ptrtoint ptr %count2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %count2.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.i = icmp eq i32 %7, 0
  br i1 %cmp.i, label %if.else.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end12
  %8 = ptrtoint ptr %uc.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %ha.01.i = load ptr, ptr %uc.i, align 4
  %cmp7.not2.i = icmp eq ptr %ha.01.i, %uc.i
  br i1 %cmp7.not2.i, label %for.cond.preheader.i.ixgbevf_write_uc_addr_list.exit_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.ixgbevf_write_uc_addr_list.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_write_uc_addr_list.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %set_uc_addr.i = getelementptr i8, ptr %netdev, i32 3108
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %ha.04.i = phi ptr [ %ha.01.i, %for.body.lr.ph.i ], [ %ha.0.i, %for.body.i.for.body.i_crit_edge ]
  %count.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %9 = ptrtoint ptr %set_uc_addr.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %set_uc_addr.i, align 4
  %inc.i = add i32 %count.03.i, 1
  %addr.i = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.04.i, i32 0, i32 2
  %call8.i = tail call i32 %10(ptr noundef %hw1, i32 noundef %inc.i, ptr noundef %addr.i) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %11 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %11(i32 noundef 42949600) #14
  %12 = ptrtoint ptr %ha.04.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %ha.0.i = load ptr, ptr %ha.04.i, align 4
  %cmp7.not.i = icmp eq ptr %ha.0.i, %uc.i
  br i1 %cmp7.not.i, label %for.body.i.ixgbevf_write_uc_addr_list.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.body.i.ixgbevf_write_uc_addr_list.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_write_uc_addr_list.exit

if.else.i:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %set_uc_addr16.i = getelementptr i8, ptr %netdev, i32 3108
  %13 = ptrtoint ptr %set_uc_addr16.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %set_uc_addr16.i, align 4
  %call17.i = tail call i32 %14(ptr noundef %hw1, i32 noundef 0, ptr noundef null) #14
  br label %ixgbevf_write_uc_addr_list.exit

ixgbevf_write_uc_addr_list.exit:                  ; preds = %if.else.i, %for.body.i.ixgbevf_write_uc_addr_list.exit_crit_edge, %for.cond.preheader.i.ixgbevf_write_uc_addr_list.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ixgbevf_ipsec_restore(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ixgbevf_get_queues(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_vlan_rx_add_vid(ptr noundef %netdev, i16 noundef zeroext %proto, i16 noundef zeroext %vid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr i8, ptr %netdev, i32 3048
  %mbx_lock = getelementptr i8, ptr %netdev, i32 3564
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock) #14
  %set_vfta = getelementptr i8, ptr %netdev, i32 3136
  %0 = ptrtoint ptr %set_vfta to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %set_vfta, align 4
  %conv = zext i16 %vid to i32
  %call2 = tail call i32 %1(ptr noundef %hw1, i32 noundef %conv, i32 noundef 0, i1 noundef zeroext true) #14
  tail call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock) #14
  %2 = zext i32 %call2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.131)
  switch i32 %call2, label %if.end8 [
    i32 -5, label %entry.cleanup_crit_edge
    i32 -3, label %if.then7
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then7:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  tail call void @_set_bit(i32 noundef %conv, ptr noundef %add.ptr.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then7, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -13, %if.then7 ], [ %call2, %if.end8 ], [ %call2, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_configure_tx_ring(ptr noundef %adapter, ptr noundef %ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %dma = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 6
  %0 = ptrtoint ptr %dma to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %dma, align 8
  %reg_idx2 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 21
  %2 = ptrtoint ptr %reg_idx2 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %reg_idx2, align 16
  %4 = and i16 %3, 255
  %conv4 = zext i16 %4 to i32
  %mul = shl nuw nsw i32 %conv4, 6
  %add = add nuw nsw i32 %mul, 8232
  %hw_addr.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 1
  %5 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %entry.ixgbe_write_reg.exit_crit_edge, label %do.body4.i, !prof !308

entry.ixgbe_write_reg.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit

do.body4.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i = getelementptr i8, ptr %6, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 4) #14, !srcloc !312
  br label %ixgbe_write_reg.exit

ixgbe_write_reg.exit:                             ; preds = %do.body4.i, %entry.ixgbe_write_reg.exit_crit_edge
  %7 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i105 = icmp eq ptr %8, null
  br i1 %tobool.not.i105, label %ixgbe_write_reg.exit.ixgbevf_read_reg.exit_crit_edge, label %if.end.i, !prof !308

ixgbe_write_reg.exit.ixgbevf_read_reg.exit_crit_edge: ; preds = %ixgbe_write_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.end.i:                                         ; preds = %ixgbe_write_reg.exit
  %add.ptr.i106 = getelementptr i8, ptr %8, i32 8
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i106) #14, !srcloc !309
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %cmp.i = icmp eq i32 %9, -1
  br i1 %cmp.i, label %if.then12.i, label %if.end.i.ixgbevf_read_reg.exit_crit_edge, !prof !308

if.end.i.ixgbevf_read_reg.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.then12.i:                                      ; preds = %if.end.i
  %10 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hw1, align 4
  %12 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw_addr.i, align 4
  %tobool.not.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i, label %if.then12.i.ixgbevf_read_reg.exit_crit_edge, label %if.end.i.i

if.then12.i.ixgbevf_read_reg.exit_crit_edge:      ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.end.i.i:                                       ; preds = %if.then12.i
  %14 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %hw_addr.i, align 4
  %pdev.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %11, i32 0, i32 25
  %15 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pdev.i.i, align 4
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.14) #17
  %state.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %11, i32 0, i32 30
  %17 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %state.i.i, align 4
  %19 = and i32 %18, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool2.not.i.i = icmp eq i32 %19, 0
  br i1 %tobool2.not.i.i, label %if.end.i.i.ixgbevf_read_reg.exit_crit_edge, label %if.then3.i.i

if.end.i.i.ixgbevf_read_reg.exit_crit_edge:       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.then3.i.i:                                     ; preds = %if.end.i.i
  %20 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %state.i.i, align 4
  %22 = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i.i.i = icmp eq i32 %22, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %if.then3.i.i.ixgbevf_read_reg.exit_crit_edge

if.then3.i.i.ixgbevf_read_reg.exit_crit_edge:     ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

land.lhs.true.i.i.i:                              ; preds = %if.then3.i.i
  %23 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %state.i.i, align 4
  %25 = and i32 %24, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool3.not.i.i.i = icmp eq i32 %25, 0
  br i1 %tobool3.not.i.i.i, label %land.lhs.true4.i.i.i, label %land.lhs.true.i.i.i.ixgbevf_read_reg.exit_crit_edge

land.lhs.true.i.i.i.ixgbevf_read_reg.exit_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

land.lhs.true4.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %call6.i.i.i = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %call6.i.i.i, 0
  br i1 %tobool7.not.i.i.i, label %cleanup.sink.split.i, label %land.lhs.true4.i.i.i.ixgbevf_read_reg.exit_crit_edge

land.lhs.true4.i.i.i.ixgbevf_read_reg.exit_crit_edge: ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

cleanup.sink.split.i:                             ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %26 = load ptr, ptr @ixgbevf_wq, align 4
  %service_task.i.i23.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %11, i32 0, i32 39
  %call.i.i.i24.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %26, ptr noundef %service_task.i.i23.i) #14
  br label %ixgbevf_read_reg.exit

ixgbevf_read_reg.exit:                            ; preds = %cleanup.sink.split.i, %land.lhs.true4.i.i.i.ixgbevf_read_reg.exit_crit_edge, %land.lhs.true.i.i.i.ixgbevf_read_reg.exit_crit_edge, %if.then3.i.i.ixgbevf_read_reg.exit_crit_edge, %if.end.i.i.ixgbevf_read_reg.exit_crit_edge, %if.then12.i.ixgbevf_read_reg.exit_crit_edge, %if.end.i.ixgbevf_read_reg.exit_crit_edge, %ixgbe_write_reg.exit.ixgbevf_read_reg.exit_crit_edge
  %27 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i109 = icmp eq ptr %28, null
  br i1 %tobool.not.i109, label %ixgbevf_read_reg.exit.ixgbe_write_reg.exit112_crit_edge, label %do.body4.i111, !prof !308

ixgbevf_read_reg.exit.ixgbe_write_reg.exit112_crit_edge: ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit112

do.body4.i111:                                    ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  %add7 = add nuw nsw i32 %mul, 8192
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %29 = tail call i32 @llvm.bswap.i32(i32 %1) #14
  %add.ptr.i110 = getelementptr i8, ptr %28, i32 %add7
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i110, i32 %29) #14, !srcloc !312
  br label %ixgbe_write_reg.exit112

ixgbe_write_reg.exit112:                          ; preds = %do.body4.i111, %ixgbevf_read_reg.exit.ixgbe_write_reg.exit112_crit_edge
  %30 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i114 = icmp eq ptr %31, null
  br i1 %tobool.not.i114, label %ixgbe_write_reg.exit112.ixgbe_write_reg.exit117_crit_edge, label %do.body4.i116, !prof !308

ixgbe_write_reg.exit112.ixgbe_write_reg.exit117_crit_edge: ; preds = %ixgbe_write_reg.exit112
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit117

do.body4.i116:                                    ; preds = %ixgbe_write_reg.exit112
  call void @__sanitizer_cov_trace_pc() #16
  %add11 = add nuw nsw i32 %mul, 8196
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i115 = getelementptr i8, ptr %31, i32 %add11
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i115, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit117

ixgbe_write_reg.exit117:                          ; preds = %do.body4.i116, %ixgbe_write_reg.exit112.ixgbe_write_reg.exit117_crit_edge
  %count = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 8
  %32 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %count, align 32
  %34 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i119 = icmp eq ptr %35, null
  br i1 %tobool.not.i119, label %ixgbe_write_reg.exit117.ixgbe_write_reg.exit122_crit_edge, label %do.body4.i121, !prof !308

ixgbe_write_reg.exit117.ixgbe_write_reg.exit122_crit_edge: ; preds = %ixgbe_write_reg.exit117
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit122

do.body4.i121:                                    ; preds = %ixgbe_write_reg.exit117
  call void @__sanitizer_cov_trace_pc() #16
  %conv16 = zext i16 %33 to i32
  %mul17 = shl nuw nsw i32 %conv16, 4
  %add15 = add nuw nsw i32 %mul, 8200
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %36 = tail call i32 @llvm.bswap.i32(i32 %mul17) #14
  %add.ptr.i120 = getelementptr i8, ptr %35, i32 %add15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i120, i32 %36) #14, !srcloc !312
  br label %ixgbe_write_reg.exit122

ixgbe_write_reg.exit122:                          ; preds = %do.body4.i121, %ixgbe_write_reg.exit117.ixgbe_write_reg.exit122_crit_edge
  %37 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i124 = icmp eq ptr %38, null
  br i1 %tobool.not.i124, label %ixgbe_write_reg.exit122.ixgbe_write_reg.exit127_crit_edge, label %do.body4.i126, !prof !308

ixgbe_write_reg.exit122.ixgbe_write_reg.exit127_crit_edge: ; preds = %ixgbe_write_reg.exit122
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit127

do.body4.i126:                                    ; preds = %ixgbe_write_reg.exit122
  call void @__sanitizer_cov_trace_pc() #16
  %add20 = add nuw nsw i32 %mul, 8252
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i125 = getelementptr i8, ptr %38, i32 %add20
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i125, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit127

ixgbe_write_reg.exit127:                          ; preds = %do.body4.i126, %ixgbe_write_reg.exit122.ixgbe_write_reg.exit127_crit_edge
  %39 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i129 = icmp eq ptr %40, null
  br i1 %tobool.not.i129, label %ixgbe_write_reg.exit127.ixgbe_write_reg.exit132_crit_edge, label %do.body4.i131, !prof !308

ixgbe_write_reg.exit127.ixgbe_write_reg.exit132_crit_edge: ; preds = %ixgbe_write_reg.exit127
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit132

do.body4.i131:                                    ; preds = %ixgbe_write_reg.exit127
  call void @__sanitizer_cov_trace_pc() #16
  %add23 = add nuw nsw i32 %mul, 8248
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i130 = getelementptr i8, ptr %40, i32 %add23
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i130, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit132

ixgbe_write_reg.exit132:                          ; preds = %do.body4.i131, %ixgbe_write_reg.exit127.ixgbe_write_reg.exit132_crit_edge
  %41 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i134 = icmp eq ptr %42, null
  br i1 %tobool.not.i134, label %ixgbe_write_reg.exit132.ixgbe_write_reg.exit137_crit_edge, label %do.body4.i136, !prof !308

ixgbe_write_reg.exit132.ixgbe_write_reg.exit137_crit_edge: ; preds = %ixgbe_write_reg.exit132
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit137

do.body4.i136:                                    ; preds = %ixgbe_write_reg.exit132
  call void @__sanitizer_cov_trace_pc() #16
  %add26 = add nuw nsw i32 %mul, 8204
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i135 = getelementptr i8, ptr %42, i32 %add26
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i135, i32 2228224) #14, !srcloc !312
  br label %ixgbe_write_reg.exit137

ixgbe_write_reg.exit137:                          ; preds = %do.body4.i136, %ixgbe_write_reg.exit132.ixgbe_write_reg.exit137_crit_edge
  %43 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i139 = icmp eq ptr %44, null
  br i1 %tobool.not.i139, label %ixgbe_write_reg.exit137.ixgbe_write_reg.exit142_crit_edge, label %do.body4.i141, !prof !308

ixgbe_write_reg.exit137.ixgbe_write_reg.exit142_crit_edge: ; preds = %ixgbe_write_reg.exit137
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit142

do.body4.i141:                                    ; preds = %ixgbe_write_reg.exit137
  call void @__sanitizer_cov_trace_pc() #16
  %add29 = add nuw nsw i32 %mul, 8208
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i140 = getelementptr i8, ptr %44, i32 %add29
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i140, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit142

ixgbe_write_reg.exit142:                          ; preds = %do.body4.i141, %ixgbe_write_reg.exit137.ixgbe_write_reg.exit142_crit_edge
  %add32 = add nuw nsw i32 %mul, 8216
  %45 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i144 = icmp eq ptr %46, null
  br i1 %tobool.not.i144, label %ixgbe_write_reg.exit142.ixgbe_write_reg.exit147_crit_edge, label %do.body4.i146, !prof !308

ixgbe_write_reg.exit142.ixgbe_write_reg.exit147_crit_edge: ; preds = %ixgbe_write_reg.exit142
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit147

do.body4.i146:                                    ; preds = %ixgbe_write_reg.exit142
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i145 = getelementptr i8, ptr %46, i32 %add32
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i145, i32 0) #14, !srcloc !312
  br label %ixgbe_write_reg.exit147

ixgbe_write_reg.exit147:                          ; preds = %do.body4.i146, %ixgbe_write_reg.exit142.ixgbe_write_reg.exit147_crit_edge
  %io_addr = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 35
  %47 = ptrtoint ptr %io_addr to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %io_addr, align 4
  %add.ptr = getelementptr i8, ptr %48, i32 %add32
  %tail = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 19
  %49 = ptrtoint ptr %tail to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %add.ptr, ptr %tail, align 8
  %next_to_clean = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 10
  %50 = ptrtoint ptr %next_to_clean to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 0, ptr %next_to_clean, align 4
  %next_to_use = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 9
  %51 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 0, ptr %next_to_use, align 2
  %52 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 12
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %52, align 8
  %55 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %count, align 32
  %conv38 = zext i16 %56 to i32
  %mul39 = shl nuw nsw i32 %conv38, 5
  %57 = call ptr @memset(ptr %54, i32 0, i32 %mul39)
  %state = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring, i32 0, i32 13
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %state) #14
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %state) #14
  %58 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i149 = icmp eq ptr %59, null
  br i1 %tobool.not.i149, label %ixgbe_write_reg.exit147.do.body.preheader_crit_edge, label %do.body4.i151, !prof !308

ixgbe_write_reg.exit147.do.body.preheader_crit_edge: ; preds = %ixgbe_write_reg.exit147
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.preheader

do.body4.i151:                                    ; preds = %ixgbe_write_reg.exit147
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %add.ptr.i150 = getelementptr i8, ptr %59, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i150, i32 536938498) #14, !srcloc !312
  br label %do.body.preheader

do.body.preheader:                                ; preds = %do.body4.i151, %ixgbe_write_reg.exit147.do.body.preheader_crit_edge
  br label %do.body

do.body:                                          ; preds = %ixgbevf_read_reg.exit160.do.body_crit_edge, %do.body.preheader
  %wait_loop.0 = phi i32 [ %dec, %ixgbevf_read_reg.exit160.do.body_crit_edge ], [ 10, %do.body.preheader ]
  tail call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #14
  %60 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i154 = icmp eq ptr %61, null
  br i1 %tobool.not.i154, label %ixgbevf_read_reg.exit160.thread, label %if.end.i157, !prof !308

ixgbevf_read_reg.exit160.thread:                  ; preds = %do.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %wait_loop.0)
  %tobool.not163 = icmp eq i32 %wait_loop.0, 1
  br i1 %tobool.not163, label %ixgbevf_read_reg.exit160.thread.do.body52_crit_edge, label %ixgbevf_read_reg.exit160.thread.if.end64_crit_edge

ixgbevf_read_reg.exit160.thread.if.end64_crit_edge: ; preds = %ixgbevf_read_reg.exit160.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64

ixgbevf_read_reg.exit160.thread.do.body52_crit_edge: ; preds = %ixgbevf_read_reg.exit160.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body52

if.end.i157:                                      ; preds = %do.body
  %add.ptr.i155 = getelementptr i8, ptr %61, i32 %add
  %62 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i155) #14, !srcloc !309
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %62)
  %cmp.i156 = icmp eq i32 %62, -1
  br i1 %cmp.i156, label %ixgbevf_read_reg.exit160.thread172, label %ixgbevf_read_reg.exit160, !prof !308

ixgbevf_read_reg.exit160.thread172:               ; preds = %if.end.i157
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef %add) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %wait_loop.0)
  %tobool.not174 = icmp eq i32 %wait_loop.0, 1
  br i1 %tobool.not174, label %ixgbevf_read_reg.exit160.thread172.do.body52_crit_edge, label %ixgbevf_read_reg.exit160.thread172.if.end64_crit_edge

ixgbevf_read_reg.exit160.thread172.if.end64_crit_edge: ; preds = %ixgbevf_read_reg.exit160.thread172
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64

ixgbevf_read_reg.exit160.thread172.do.body52_crit_edge: ; preds = %ixgbevf_read_reg.exit160.thread172
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body52

ixgbevf_read_reg.exit160:                         ; preds = %if.end.i157
  %dec = add nsw i32 %wait_loop.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool.not = icmp eq i32 %dec, 0
  %tobool.not.not = xor i1 %tobool.not, true
  %63 = and i32 %62, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool49.not = icmp eq i32 %63, 0
  %or.cond = select i1 %tobool.not.not, i1 %tobool49.not, i1 false
  br i1 %or.cond, label %ixgbevf_read_reg.exit160.do.body_crit_edge, label %do.end

ixgbevf_read_reg.exit160.do.body_crit_edge:       ; preds = %ixgbevf_read_reg.exit160
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

do.end:                                           ; preds = %ixgbevf_read_reg.exit160
  br i1 %tobool.not, label %do.end.do.body52_crit_edge, label %do.end.if.end64_crit_edge

do.end.if.end64_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64

do.end.do.body52_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body52

do.body52:                                        ; preds = %do.end.do.body52_crit_edge, %ixgbevf_read_reg.exit160.thread172.do.body52_crit_edge, %ixgbevf_read_reg.exit160.thread.do.body52_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_configure_tx_ring.__UNIQUE_ID_ddebug653, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_configure_tx_ring, %if.then58)) #14
          to label %if.end64 [label %if.then58], !srcloc !314

if.then58:                                        ; preds = %do.body52
  call void @__sanitizer_cov_trace_pc() #16
  %64 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %hw1, align 4
  %netdev = getelementptr inbounds %struct.ixgbevf_adapter, ptr %65, i32 0, i32 23
  %66 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %netdev, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_configure_tx_ring.__UNIQUE_ID_ddebug653, ptr noundef %67, ptr noundef nonnull @.str.17, i32 noundef %conv4) #14
  br label %if.end64

if.end64:                                         ; preds = %if.then58, %do.body52, %do.end.if.end64_crit_edge, %ixgbevf_read_reg.exit160.thread172.if.end64_crit_edge, %ixgbevf_read_reg.exit160.thread.if.end64_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_alloc_rx_buffers(ptr noundef %rx_ring, i16 noundef zeroext %cleaned_count) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %next_to_use = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 9
  %0 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %next_to_use, align 2
  %conv = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %cleaned_count)
  %tobool.not = icmp eq i16 %cleaned_count, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %netdev = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 2
  %2 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %netdev, align 8
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %desc = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 5
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %desc, align 4
  %arrayidx = getelementptr %union.ixgbe_adv_rx_desc, ptr %5, i32 %conv
  %6 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 12
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 8
  %arrayidx2 = getelementptr %struct.ixgbevf_rx_buffer, ptr %8, i32 %conv
  %count = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 8
  %9 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %count, align 32
  %conv3 = zext i16 %10 to i32
  %sub = sub nsw i32 %conv, %conv3
  %state.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 13
  %dev.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 4
  %alloc_rx_page.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 16, i32 0, i32 2
  br label %do.body

do.body:                                          ; preds = %if.end23.do.body_crit_edge, %if.end
  %cleaned_count.addr.0 = phi i16 [ %cleaned_count, %if.end ], [ %dec, %if.end23.do.body_crit_edge ]
  %rx_desc.0 = phi ptr [ %arrayidx, %if.end ], [ %rx_desc.1, %if.end23.do.body_crit_edge ]
  %bi.0 = phi ptr [ %arrayidx2, %if.end ], [ %bi.1, %if.end23.do.body_crit_edge ]
  %i.0 = phi i32 [ %sub, %if.end ], [ %i.1, %if.end23.do.body_crit_edge ]
  %page1.i = getelementptr inbounds %struct.ixgbevf_rx_buffer, ptr %bi.0, i32 0, i32 1
  %11 = ptrtoint ptr %page1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %page1.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.end.i, label %do.body.if.end5_crit_edge, !prof !308

do.body.if.end5_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.end.i:                                         ; preds = %do.body
  %13 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %14, 1
  %call38.i.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef 404000, i32 noundef %and1.i.i.i, i32 noundef 0, ptr noundef null) #14
  %tobool5.not.i = icmp eq ptr %call38.i.i.i.i.i, null
  br i1 %tobool5.not.i, label %if.end.i.do.end.sink.split_crit_edge, label %if.end15.i, !prof !308

if.end.i.do.end.sink.split_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.sink.split

if.end15.i:                                       ; preds = %if.end.i
  %15 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev.i, align 16
  %17 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i49.i = and i32 %18, 1
  %shl.i = shl nuw nsw i32 4096, %and1.i.i49.i
  %call17.i = tail call i32 @dma_map_page_attrs(ptr noundef %16, ptr noundef nonnull %call38.i.i.i.i.i, i32 noundef 0, i32 noundef %shl.i, i32 noundef 2, i32 noundef 34) #14
  %19 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dev.i, align 16
  tail call void @debug_dma_mapping_error(ptr noundef %20, i32 noundef %call17.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call17.i)
  %cmp.i.not.i = icmp eq i32 %call17.i, -1
  br i1 %cmp.i.not.i, label %if.then21.i, label %if.end25.i

if.then21.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  %21 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i51.i = and i32 %22, 1
  tail call void @__free_pages(ptr noundef nonnull %call38.i.i.i.i.i, i32 noundef %and1.i.i51.i) #14
  br label %do.end.sink.split

if.end25.i:                                       ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  %23 = ptrtoint ptr %bi.0 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %call17.i, ptr %bi.0, align 4
  %24 = ptrtoint ptr %page1.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %call38.i.i.i.i.i, ptr %page1.i, align 4
  %25 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %state.i.i, align 4
  %27 = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i.i = icmp eq i32 %27, 0
  %conv.i = select i1 %tobool.not.i.i, i16 0, i16 130
  %page_offset.i = getelementptr inbounds %struct.ixgbevf_rx_buffer, ptr %bi.0, i32 0, i32 2
  %28 = ptrtoint ptr %page_offset.i to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %conv.i, ptr %page_offset.i, align 4
  %pagecnt_bias.i = getelementptr inbounds %struct.ixgbevf_rx_buffer, ptr %bi.0, i32 0, i32 3
  %29 = ptrtoint ptr %pagecnt_bias.i to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 1, ptr %pagecnt_bias.i, align 2
  %30 = ptrtoint ptr %alloc_rx_page.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %alloc_rx_page.i, align 16
  %inc29.i = add i64 %31, 1
  store i64 %inc29.i, ptr %alloc_rx_page.i, align 16
  br label %if.end5

if.end5:                                          ; preds = %if.end25.i, %do.body.if.end5_crit_edge
  %32 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dev.i, align 16
  %34 = ptrtoint ptr %bi.0 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %bi.0, align 4
  %page_offset = getelementptr inbounds %struct.ixgbevf_rx_buffer, ptr %bi.0, i32 0, i32 2
  %36 = ptrtoint ptr %page_offset to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %page_offset, align 4
  %conv6 = zext i16 %37 to i32
  %38 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i75 = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i75, label %if.end.i76, label %if.end5.ixgbevf_rx_bufsz.exit_crit_edge

if.end5.ixgbevf_rx_bufsz.exit_crit_edge:          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_bufsz.exit

if.end.i76:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  %40 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %state.i.i, align 4
  %42 = and i32 %41, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool3.not.i = icmp eq i32 %42, 0
  %..i = select i1 %tobool3.not.i, i32 2048, i32 1662
  br label %ixgbevf_rx_bufsz.exit

ixgbevf_rx_bufsz.exit:                            ; preds = %if.end.i76, %if.end5.ixgbevf_rx_bufsz.exit_crit_edge
  %retval.0.i77 = phi i32 [ 3072, %if.end5.ixgbevf_rx_bufsz.exit_crit_edge ], [ %..i, %if.end.i76 ]
  %add.i = add i32 %35, %conv6
  tail call void @dma_sync_single_for_device(ptr noundef %33, i32 noundef %add.i, i32 noundef %retval.0.i77, i32 noundef 2) #14
  %43 = ptrtoint ptr %bi.0 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %bi.0, align 4
  %45 = ptrtoint ptr %page_offset to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %page_offset, align 4
  %conv10 = zext i16 %46 to i32
  %add = add i32 %44, %conv10
  %conv11 = zext i32 %add to i64
  %47 = tail call i64 @llvm.bswap.i64(i64 %conv11)
  %48 = ptrtoint ptr %rx_desc.0 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %rx_desc.0, align 8
  %incdec.ptr = getelementptr %union.ixgbe_adv_rx_desc, ptr %rx_desc.0, i32 1
  %incdec.ptr12 = getelementptr %struct.ixgbevf_rx_buffer, ptr %bi.0, i32 1
  %inc = add i32 %i.0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %inc)
  %tobool13.not = icmp eq i32 %inc, 0
  br i1 %tobool13.not, label %if.then17, label %ixgbevf_rx_bufsz.exit.if.end23_crit_edge, !prof !308

ixgbevf_rx_bufsz.exit.if.end23_crit_edge:         ; preds = %ixgbevf_rx_bufsz.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then17:                                        ; preds = %ixgbevf_rx_bufsz.exit
  call void @__sanitizer_cov_trace_pc() #16
  %49 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %desc, align 4
  %51 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %6, align 8
  %53 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %count, align 32
  %conv21 = zext i16 %54 to i32
  %sub22 = sub nsw i32 0, %conv21
  br label %if.end23

if.end23:                                         ; preds = %if.then17, %ixgbevf_rx_bufsz.exit.if.end23_crit_edge
  %rx_desc.1 = phi ptr [ %50, %if.then17 ], [ %incdec.ptr, %ixgbevf_rx_bufsz.exit.if.end23_crit_edge ]
  %bi.1 = phi ptr [ %52, %if.then17 ], [ %incdec.ptr12, %ixgbevf_rx_bufsz.exit.if.end23_crit_edge ]
  %i.1 = phi i32 [ %sub22, %if.then17 ], [ %inc, %ixgbevf_rx_bufsz.exit.if.end23_crit_edge ]
  %length = getelementptr inbounds %struct.anon.203, ptr %rx_desc.1, i32 0, i32 1, i32 1
  %55 = ptrtoint ptr %length to i32
  call void @__asan_store2_noabort(i32 %55)
  store i16 0, ptr %length, align 4
  %dec = add i16 %cleaned_count.addr.0, -1
  %tobool24.not = icmp eq i16 %dec, 0
  br i1 %tobool24.not, label %if.end23.do.end_crit_edge, label %if.end23.do.body_crit_edge

if.end23.do.body_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.end23.do.end_crit_edge:                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end.sink.split:                                ; preds = %if.then21.i, %if.end.i.do.end.sink.split_crit_edge
  %56 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 16
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %56, align 32
  %inc24.i = add i64 %58, 1
  store i64 %inc24.i, ptr %56, align 32
  br label %do.end

do.end:                                           ; preds = %do.end.sink.split, %if.end23.do.end_crit_edge
  %i.2 = phi i32 [ %i.0, %do.end.sink.split ], [ %i.1, %if.end23.do.end_crit_edge ]
  %59 = ptrtoint ptr %count to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %count, align 32
  %conv26 = zext i16 %60 to i32
  %add27 = add i32 %i.2, %conv26
  %61 = ptrtoint ptr %next_to_use to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %next_to_use, align 2
  %conv29 = zext i16 %62 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %add27, i32 %conv29)
  %cmp.not = icmp eq i32 %add27, %conv29
  br i1 %cmp.not, label %do.end.cleanup_crit_edge, label %if.then31

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then31:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  %conv32 = trunc i32 %add27 to i16
  %63 = ptrtoint ptr %next_to_use to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 %conv32, ptr %next_to_use, align 2
  %next_to_alloc = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 11
  %64 = ptrtoint ptr %next_to_alloc to i32
  call void @__asan_store2_noabort(i32 %64)
  store i16 %conv32, ptr %next_to_alloc, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !316
  tail call void @arm_heavy_mb() #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !317
  tail call void @arm_heavy_mb() #14
  %65 = tail call i32 @llvm.bswap.i32(i32 %add27) #14
  %tail.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 19
  %66 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %tail.i, align 8
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %67, i32 %65) #14, !srcloc !312
  br label %cleanup

cleanup:                                          ; preds = %if.then31, %do.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_map_page_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__free_pages(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_mapping_error(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_device(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_init_last_counter_stats(ptr noundef %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %hw_addr.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 1
  %0 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.ixgbevf_read_reg.exit_crit_edge, label %if.end.i, !prof !308

entry.ixgbevf_read_reg.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.end.i:                                         ; preds = %entry
  %add.ptr.i = getelementptr i8, ptr %1, i32 4124
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !309
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %2)
  %cmp.i = icmp eq i32 %2, -1
  br i1 %cmp.i, label %if.then12.i, label %if.end.i.ixgbevf_read_reg.exit_crit_edge, !prof !308

if.end.i.ixgbevf_read_reg.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.then12.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 4124) #14
  br label %ixgbevf_read_reg.exit

ixgbevf_read_reg.exit:                            ; preds = %if.then12.i, %if.end.i.ixgbevf_read_reg.exit_crit_edge, %entry.ixgbevf_read_reg.exit_crit_edge
  %retval.0.i = phi i32 [ -1, %entry.ixgbevf_read_reg.exit_crit_edge ], [ %3, %if.then12.i ], [ %3, %if.end.i.ixgbevf_read_reg.exit_crit_edge ]
  %conv = zext i32 %retval.0.i to i64
  %last_vfgprc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 5
  %4 = ptrtoint ptr %last_vfgprc to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %conv, ptr %last_vfgprc, align 8
  %5 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i63 = icmp eq ptr %6, null
  br i1 %tobool.not.i63, label %ixgbevf_read_reg.exit.ixgbevf_read_reg.exit69_crit_edge, label %if.end.i66, !prof !308

ixgbevf_read_reg.exit.ixgbevf_read_reg.exit69_crit_edge: ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit69

if.end.i66:                                       ; preds = %ixgbevf_read_reg.exit
  %add.ptr.i64 = getelementptr i8, ptr %6, i32 4128
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i64) #14, !srcloc !309
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp.i65 = icmp eq i32 %7, -1
  br i1 %cmp.i65, label %if.then12.i67, label %if.end.i66.ixgbevf_read_reg.exit69_crit_edge, !prof !308

if.end.i66.ixgbevf_read_reg.exit69_crit_edge:     ; preds = %if.end.i66
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit69

if.then12.i67:                                    ; preds = %if.end.i66
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 4128) #14
  br label %ixgbevf_read_reg.exit69

ixgbevf_read_reg.exit69:                          ; preds = %if.then12.i67, %if.end.i66.ixgbevf_read_reg.exit69_crit_edge, %ixgbevf_read_reg.exit.ixgbevf_read_reg.exit69_crit_edge
  %retval.0.i68 = phi i32 [ -1, %ixgbevf_read_reg.exit.ixgbevf_read_reg.exit69_crit_edge ], [ %8, %if.then12.i67 ], [ %8, %if.end.i66.ixgbevf_read_reg.exit69_crit_edge ]
  %conv3 = zext i32 %retval.0.i68 to i64
  %last_vfgorc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 7
  %9 = ptrtoint ptr %last_vfgorc to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %conv3, ptr %last_vfgorc, align 8
  %10 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i71 = icmp eq ptr %11, null
  br i1 %tobool.not.i71, label %ixgbevf_read_reg.exit69.ixgbevf_read_reg.exit77_crit_edge, label %if.end.i74, !prof !308

ixgbevf_read_reg.exit69.ixgbevf_read_reg.exit77_crit_edge: ; preds = %ixgbevf_read_reg.exit69
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit77

if.end.i74:                                       ; preds = %ixgbevf_read_reg.exit69
  %add.ptr.i72 = getelementptr i8, ptr %11, i32 4132
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i72) #14, !srcloc !309
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %cmp.i73 = icmp eq i32 %12, -1
  br i1 %cmp.i73, label %if.then12.i75, label %if.end.i74.ixgbevf_read_reg.exit77_crit_edge, !prof !308

if.end.i74.ixgbevf_read_reg.exit77_crit_edge:     ; preds = %if.end.i74
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit77

if.then12.i75:                                    ; preds = %if.end.i74
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 4132) #14
  br label %ixgbevf_read_reg.exit77

ixgbevf_read_reg.exit77:                          ; preds = %if.then12.i75, %if.end.i74.ixgbevf_read_reg.exit77_crit_edge, %ixgbevf_read_reg.exit69.ixgbevf_read_reg.exit77_crit_edge
  %retval.0.i76 = phi i32 [ -1, %ixgbevf_read_reg.exit69.ixgbevf_read_reg.exit77_crit_edge ], [ %13, %if.then12.i75 ], [ %13, %if.end.i74.ixgbevf_read_reg.exit77_crit_edge ]
  %conv6 = zext i32 %retval.0.i76 to i64
  %shl = shl nuw i64 %conv6, 32
  %14 = ptrtoint ptr %last_vfgorc to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %last_vfgorc, align 8
  %or = or i64 %shl, %15
  store i64 %or, ptr %last_vfgorc, align 8
  %16 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i79 = icmp eq ptr %17, null
  br i1 %tobool.not.i79, label %ixgbevf_read_reg.exit77.ixgbevf_read_reg.exit85_crit_edge, label %if.end.i82, !prof !308

ixgbevf_read_reg.exit77.ixgbevf_read_reg.exit85_crit_edge: ; preds = %ixgbevf_read_reg.exit77
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit85

if.end.i82:                                       ; preds = %ixgbevf_read_reg.exit77
  %add.ptr.i80 = getelementptr i8, ptr %17, i32 8220
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i80) #14, !srcloc !309
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %cmp.i81 = icmp eq i32 %18, -1
  br i1 %cmp.i81, label %if.then12.i83, label %if.end.i82.ixgbevf_read_reg.exit85_crit_edge, !prof !308

if.end.i82.ixgbevf_read_reg.exit85_crit_edge:     ; preds = %if.end.i82
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit85

if.then12.i83:                                    ; preds = %if.end.i82
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 8220) #14
  br label %ixgbevf_read_reg.exit85

ixgbevf_read_reg.exit85:                          ; preds = %if.then12.i83, %if.end.i82.ixgbevf_read_reg.exit85_crit_edge, %ixgbevf_read_reg.exit77.ixgbevf_read_reg.exit85_crit_edge
  %retval.0.i84 = phi i32 [ -1, %ixgbevf_read_reg.exit77.ixgbevf_read_reg.exit85_crit_edge ], [ %19, %if.then12.i83 ], [ %19, %if.end.i82.ixgbevf_read_reg.exit85_crit_edge ]
  %conv10 = zext i32 %retval.0.i84 to i64
  %last_vfgptc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 6
  %20 = ptrtoint ptr %last_vfgptc to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %conv10, ptr %last_vfgptc, align 8
  %21 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i87 = icmp eq ptr %22, null
  br i1 %tobool.not.i87, label %ixgbevf_read_reg.exit85.ixgbevf_read_reg.exit93_crit_edge, label %if.end.i90, !prof !308

ixgbevf_read_reg.exit85.ixgbevf_read_reg.exit93_crit_edge: ; preds = %ixgbevf_read_reg.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit93

if.end.i90:                                       ; preds = %ixgbevf_read_reg.exit85
  %add.ptr.i88 = getelementptr i8, ptr %22, i32 8224
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i88) #14, !srcloc !309
  %24 = tail call i32 @llvm.bswap.i32(i32 %23) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %23)
  %cmp.i89 = icmp eq i32 %23, -1
  br i1 %cmp.i89, label %if.then12.i91, label %if.end.i90.ixgbevf_read_reg.exit93_crit_edge, !prof !308

if.end.i90.ixgbevf_read_reg.exit93_crit_edge:     ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit93

if.then12.i91:                                    ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 8224) #14
  br label %ixgbevf_read_reg.exit93

ixgbevf_read_reg.exit93:                          ; preds = %if.then12.i91, %if.end.i90.ixgbevf_read_reg.exit93_crit_edge, %ixgbevf_read_reg.exit85.ixgbevf_read_reg.exit93_crit_edge
  %retval.0.i92 = phi i32 [ -1, %ixgbevf_read_reg.exit85.ixgbevf_read_reg.exit93_crit_edge ], [ %24, %if.then12.i91 ], [ %24, %if.end.i90.ixgbevf_read_reg.exit93_crit_edge ]
  %conv13 = zext i32 %retval.0.i92 to i64
  %last_vfgotc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 8
  %25 = ptrtoint ptr %last_vfgotc to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %conv13, ptr %last_vfgotc, align 8
  %26 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i95 = icmp eq ptr %27, null
  br i1 %tobool.not.i95, label %ixgbevf_read_reg.exit93.ixgbevf_read_reg.exit101_crit_edge, label %if.end.i98, !prof !308

ixgbevf_read_reg.exit93.ixgbevf_read_reg.exit101_crit_edge: ; preds = %ixgbevf_read_reg.exit93
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit101

if.end.i98:                                       ; preds = %ixgbevf_read_reg.exit93
  %add.ptr.i96 = getelementptr i8, ptr %27, i32 8228
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i96) #14, !srcloc !309
  %29 = tail call i32 @llvm.bswap.i32(i32 %28) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %28)
  %cmp.i97 = icmp eq i32 %28, -1
  br i1 %cmp.i97, label %if.then12.i99, label %if.end.i98.ixgbevf_read_reg.exit101_crit_edge, !prof !308

if.end.i98.ixgbevf_read_reg.exit101_crit_edge:    ; preds = %if.end.i98
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit101

if.then12.i99:                                    ; preds = %if.end.i98
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 8228) #14
  br label %ixgbevf_read_reg.exit101

ixgbevf_read_reg.exit101:                         ; preds = %if.then12.i99, %if.end.i98.ixgbevf_read_reg.exit101_crit_edge, %ixgbevf_read_reg.exit93.ixgbevf_read_reg.exit101_crit_edge
  %retval.0.i100 = phi i32 [ -1, %ixgbevf_read_reg.exit93.ixgbevf_read_reg.exit101_crit_edge ], [ %29, %if.then12.i99 ], [ %29, %if.end.i98.ixgbevf_read_reg.exit101_crit_edge ]
  %conv16 = zext i32 %retval.0.i100 to i64
  %shl17 = shl nuw i64 %conv16, 32
  %30 = ptrtoint ptr %last_vfgotc to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %last_vfgotc, align 8
  %or20 = or i64 %shl17, %31
  store i64 %or20, ptr %last_vfgotc, align 8
  %32 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i103 = icmp eq ptr %33, null
  br i1 %tobool.not.i103, label %ixgbevf_read_reg.exit101.ixgbevf_read_reg.exit109_crit_edge, label %if.end.i106, !prof !308

ixgbevf_read_reg.exit101.ixgbevf_read_reg.exit109_crit_edge: ; preds = %ixgbevf_read_reg.exit101
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit109

if.end.i106:                                      ; preds = %ixgbevf_read_reg.exit101
  %add.ptr.i104 = getelementptr i8, ptr %33, i32 4148
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i104) #14, !srcloc !309
  %35 = tail call i32 @llvm.bswap.i32(i32 %34) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %cmp.i105 = icmp eq i32 %34, -1
  br i1 %cmp.i105, label %if.then12.i107, label %if.end.i106.ixgbevf_read_reg.exit109_crit_edge, !prof !308

if.end.i106.ixgbevf_read_reg.exit109_crit_edge:   ; preds = %if.end.i106
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit109

if.then12.i107:                                   ; preds = %if.end.i106
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1, i32 noundef 4148) #14
  br label %ixgbevf_read_reg.exit109

ixgbevf_read_reg.exit109:                         ; preds = %if.then12.i107, %if.end.i106.ixgbevf_read_reg.exit109_crit_edge, %ixgbevf_read_reg.exit101.ixgbevf_read_reg.exit109_crit_edge
  %retval.0.i108 = phi i32 [ -1, %ixgbevf_read_reg.exit101.ixgbevf_read_reg.exit109_crit_edge ], [ %35, %if.then12.i107 ], [ %35, %if.end.i106.ixgbevf_read_reg.exit109_crit_edge ]
  %stats = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29
  %conv22 = zext i32 %retval.0.i108 to i64
  %last_vfmprc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 9
  %36 = ptrtoint ptr %last_vfmprc to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %conv22, ptr %last_vfmprc, align 8
  %37 = ptrtoint ptr %last_vfgprc to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %last_vfgprc, align 8
  %39 = ptrtoint ptr %stats to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %stats, align 8
  %40 = ptrtoint ptr %last_vfgorc to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %last_vfgorc, align 8
  %base_vfgorc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 2
  %42 = ptrtoint ptr %base_vfgorc to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %base_vfgorc, align 8
  %43 = ptrtoint ptr %last_vfgptc to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %last_vfgptc, align 8
  %base_vfgptc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 1
  %45 = ptrtoint ptr %base_vfgptc to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %44, ptr %base_vfgptc, align 8
  %46 = ptrtoint ptr %last_vfgotc to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %last_vfgotc, align 8
  %base_vfgotc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 3
  %48 = ptrtoint ptr %base_vfgotc to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %base_vfgotc, align 8
  %base_vfmprc = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 29, i32 4
  %49 = ptrtoint ptr %base_vfmprc to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %conv22, ptr %base_vfmprc, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_enable(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #14
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_irq(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_disable(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_frag_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_unmap_page_attrs(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_any(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_free_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dma_alloc_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_frag_cache_drain(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_cpu(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ixgbevf_request_msix_irqs(ptr noundef %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev1 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 23
  %0 = ptrtoint ptr %netdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev1, align 4
  %num_msix_vectors = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 17
  %2 = ptrtoint ptr %num_msix_vectors to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_msix_vectors, align 8
  %sub = add i32 %3, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp150 = icmp sgt i32 %sub, 0
  br i1 %cmp150, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %msix_entries = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %ri.0155 = phi i32 [ 0, %for.body.lr.ph ], [ %ri.2.ph, %for.inc.for.body_crit_edge ]
  %vector.0153 = phi i32 [ 0, %for.body.lr.ph ], [ %inc52, %for.inc.for.body_crit_edge ]
  %ti.0151 = phi i32 [ 0, %for.body.lr.ph ], [ %ti.2.ph, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %vector.0153
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %6 = ptrtoint ptr %msix_entries to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %msix_entries, align 8
  %arrayidx4 = getelementptr %struct.msix_entry, ptr %7, i32 %vector.0153
  %tx = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %5, i32 0, i32 5
  %8 = ptrtoint ptr %tx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tx, align 8
  %tobool.not = icmp eq ptr %9, null
  %rx10 = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %5, i32 0, i32 4
  %10 = ptrtoint ptr %rx10 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rx10, align 8
  %tobool12.not = icmp eq ptr %11, null
  br i1 %tobool.not, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  br i1 %tobool12.not, label %if.else.thread, label %if.then

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %name = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %5, i32 0, i32 7
  %inc = add i32 %ri.0155, 1
  %call = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %name, i32 noundef 25, ptr noundef nonnull @.str.32, ptr noundef %1, i32 noundef %ri.0155)
  %inc9 = add i32 %ti.0151, 1
  br label %if.end33

if.else:                                          ; preds = %for.body
  br i1 %tobool12.not, label %if.else.for.inc_crit_edge, label %if.else.if.then13_crit_edge

if.else.if.then13_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.else.thread:                                   ; preds = %land.lhs.true
  %12 = ptrtoint ptr %rx10 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rx10, align 8
  %tobool12.not138 = icmp eq ptr %13, null
  br i1 %tobool12.not138, label %if.then24, label %if.else.thread.if.then13_crit_edge

if.else.thread.if.then13_crit_edge:               ; preds = %if.else.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13

if.then13:                                        ; preds = %if.else.thread.if.then13_crit_edge, %if.else.if.then13_crit_edge
  %name14 = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %5, i32 0, i32 7
  %inc18 = add i32 %ri.0155, 1
  %call19 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %name14, i32 noundef 25, ptr noundef nonnull @.str.33, ptr noundef %1, i32 noundef %ri.0155)
  br label %if.end33

if.then24:                                        ; preds = %if.else.thread
  call void @__sanitizer_cov_trace_pc() #16
  %name25 = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %5, i32 0, i32 7
  %inc29 = add i32 %ti.0151, 1
  %call30 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %name25, i32 noundef 25, ptr noundef nonnull @.str.34, ptr noundef %1, i32 noundef %ti.0151)
  br label %if.end33

if.end33:                                         ; preds = %if.then24, %if.then13, %if.then
  %ti.1 = phi i32 [ %inc9, %if.then ], [ %ti.0151, %if.then13 ], [ %inc29, %if.then24 ]
  %ri.1 = phi i32 [ %inc, %if.then ], [ %inc18, %if.then13 ], [ %ri.0155, %if.then24 ]
  %14 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx4, align 4
  %name35 = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %5, i32 0, i32 7
  %call.i = tail call i32 @request_threaded_irq(i32 noundef %15, ptr noundef nonnull @ixgbevf_msix_clean_rings, ptr noundef null, i32 noundef 0, ptr noundef %name35, ptr noundef %5) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool38.not = icmp eq i32 %call.i, 0
  br i1 %tobool38.not, label %if.end33.for.inc_crit_edge, label %do.body40

if.end33.for.inc_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

do.body40:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_request_msix_irqs.__UNIQUE_ID_ddebug650, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_request_msix_irqs, %if.then45)) #14
          to label %free_queue_irqs [label %if.then45], !srcloc !314

if.then45:                                        ; preds = %do.body40
  call void @__sanitizer_cov_trace_pc() #16
  %hw = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %16 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hw, align 8
  %netdev46 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %17, i32 0, i32 23
  %18 = ptrtoint ptr %netdev46 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %netdev46, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_request_msix_irqs.__UNIQUE_ID_ddebug650, ptr noundef %19, ptr noundef nonnull @.str.36, i32 noundef %call.i) #14
  br label %free_queue_irqs

for.inc:                                          ; preds = %if.end33.for.inc_crit_edge, %if.else.for.inc_crit_edge
  %ti.2.ph = phi i32 [ %ti.0151, %if.else.for.inc_crit_edge ], [ %ti.1, %if.end33.for.inc_crit_edge ]
  %ri.2.ph = phi i32 [ %ri.0155, %if.else.for.inc_crit_edge ], [ %ri.1, %if.end33.for.inc_crit_edge ]
  %inc52 = add nuw nsw i32 %vector.0153, 1
  %exitcond.not = icmp eq i32 %inc52, %sub
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %vector.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %sub, %for.inc.for.end_crit_edge ]
  %msix_entries53 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  %20 = ptrtoint ptr %msix_entries53 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %msix_entries53, align 8
  %arrayidx54 = getelementptr %struct.msix_entry, ptr %21, i32 %vector.0.lcssa
  %22 = ptrtoint ptr %arrayidx54 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx54, align 4
  %call.i136 = tail call i32 @request_threaded_irq(i32 noundef %23, ptr noundef nonnull @ixgbevf_msix_other, ptr noundef null, i32 noundef 0, ptr noundef %1, ptr noundef %adapter) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i136)
  %tobool59.not = icmp eq i32 %call.i136, 0
  br i1 %tobool59.not, label %for.end.cleanup92_crit_edge, label %do.body62

for.end.cleanup92_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup92

do.body62:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_request_msix_irqs.__UNIQUE_ID_ddebug651, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_request_msix_irqs, %if.then74)) #14
          to label %free_queue_irqs [label %if.then74], !srcloc !314

if.then74:                                        ; preds = %do.body62
  call void @__sanitizer_cov_trace_pc() #16
  %hw75 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  %24 = ptrtoint ptr %hw75 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hw75, align 8
  %netdev77 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %25, i32 0, i32 23
  %26 = ptrtoint ptr %netdev77 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %netdev77, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_request_msix_irqs.__UNIQUE_ID_ddebug651, ptr noundef %27, ptr noundef nonnull @.str.37, i32 noundef %call.i136) #14
  br label %free_queue_irqs

free_queue_irqs:                                  ; preds = %if.then74, %do.body62, %if.then45, %do.body40
  %vector.0149 = phi i32 [ %vector.0.lcssa, %if.then74 ], [ %vector.0153, %if.then45 ], [ %vector.0153, %do.body40 ], [ %vector.0.lcssa, %do.body62 ]
  %err.2 = phi i32 [ %call.i136, %if.then74 ], [ %call.i, %if.then45 ], [ %call.i, %do.body40 ], [ %call.i136, %do.body62 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %vector.0149)
  %tobool84.not157 = icmp eq i32 %vector.0149, 0
  br i1 %tobool84.not157, label %free_queue_irqs.while.end_crit_edge, label %while.body.lr.ph

free_queue_irqs.while.end_crit_edge:              ; preds = %free_queue_irqs
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %free_queue_irqs
  %msix_entries85 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.lr.ph
  %vector.1158 = phi i32 [ %vector.0149, %while.body.lr.ph ], [ %dec, %while.body.while.body_crit_edge ]
  %dec = add nsw i32 %vector.1158, -1
  %28 = ptrtoint ptr %msix_entries85 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %msix_entries85, align 8
  %arrayidx86 = getelementptr %struct.msix_entry, ptr %29, i32 %dec
  %30 = ptrtoint ptr %arrayidx86 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx86, align 4
  %arrayidx89 = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %dec
  %32 = ptrtoint ptr %arrayidx89 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx89, align 4
  %call90 = tail call ptr @free_irq(i32 noundef %31, ptr noundef %33) #14
  %tobool84.not = icmp eq i32 %dec, 0
  br i1 %tobool84.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %free_queue_irqs.while.end_crit_edge
  %34 = ptrtoint ptr %num_msix_vectors to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %num_msix_vectors, align 8
  br label %cleanup92

cleanup92:                                        ; preds = %while.end, %for.end.cleanup92_crit_edge
  %retval.0 = phi i32 [ %err.2, %while.end ], [ 0, %for.end.cleanup92_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #9

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_msix_clean_rings(i32 noundef %irq, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %rx = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %data, i32 0, i32 4
  %0 = ptrtoint ptr %rx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rx, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %tx = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %data, i32 0, i32 5
  %2 = ptrtoint ptr %tx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tx, align 8
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %napi = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %data, i32 0, i32 3
  %call.i = tail call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #14
  br i1 %call.i, label %if.then.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__napi_schedule_irqoff(ptr noundef %napi) #14
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_msix_other(i32 noundef %irq, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %get_link_status = getelementptr inbounds %struct.ixgbevf_adapter, ptr %data, i32 0, i32 26, i32 2, i32 5
  %0 = ptrtoint ptr %get_link_status to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 1, ptr %get_link_status, align 4
  %state.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %data, i32 0, i32 30
  %1 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %state.i, align 4
  %3 = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.ixgbevf_service_event_schedule.exit_crit_edge

entry.ixgbevf_service_event_schedule.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_service_event_schedule.exit

land.lhs.true.i:                                  ; preds = %entry
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %6 = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool3.not.i = icmp eq i32 %6, 0
  br i1 %tobool3.not.i, label %land.lhs.true4.i, label %land.lhs.true.i.ixgbevf_service_event_schedule.exit_crit_edge

land.lhs.true.i.ixgbevf_service_event_schedule.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_service_event_schedule.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %call6.i = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %if.then.i, label %land.lhs.true4.i.ixgbevf_service_event_schedule.exit_crit_edge

land.lhs.true4.i.ixgbevf_service_event_schedule.exit_crit_edge: ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_service_event_schedule.exit

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  %7 = load ptr, ptr @ixgbevf_wq, align 4
  %service_task.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %data, i32 0, i32 39
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %7, ptr noundef %service_task.i) #14
  br label %ixgbevf_service_event_schedule.exit

ixgbevf_service_event_schedule.exit:              ; preds = %if.then.i, %land.lhs.true4.i.ixgbevf_service_event_schedule.exit_crit_edge, %land.lhs.true.i.ixgbevf_service_event_schedule.exit_crit_edge, %entry.ixgbevf_service_event_schedule.exit_crit_edge
  %eims_other = getelementptr inbounds %struct.ixgbevf_adapter, ptr %data, i32 0, i32 5
  %8 = ptrtoint ptr %eims_other to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %eims_other, align 8
  %hw_addr.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %data, i32 0, i32 26, i32 1
  %10 = ptrtoint ptr %hw_addr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %hw_addr.i, align 4
  %tobool.not.i5 = icmp eq ptr %11, null
  br i1 %tobool.not.i5, label %ixgbevf_service_event_schedule.exit.ixgbe_write_reg.exit_crit_edge, label %do.body4.i, !prof !308

ixgbevf_service_event_schedule.exit.ixgbe_write_reg.exit_crit_edge: ; preds = %ixgbevf_service_event_schedule.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbe_write_reg.exit

do.body4.i:                                       ; preds = %ixgbevf_service_event_schedule.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  tail call void @arm_heavy_mb() #14
  %12 = tail call i32 @llvm.bswap.i32(i32 %9) #14
  %add.ptr.i = getelementptr i8, ptr %11, i32 264
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %12) #14, !srcloc !312
  br label %ixgbe_write_reg.exit

ixgbe_write_reg.exit:                             ; preds = %do.body4.i, %ixgbevf_service_event_schedule.exit.ixgbe_write_reg.exit_crit_edge
  ret i32 1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_threaded_irq(i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_schedule_prep(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__napi_schedule_irqoff(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pci_register_driver(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_probe(ptr noundef %pdev, ptr nocapture noundef readonly %ent) #0 align 64 {
entry:
  %addr.i.i = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data = getelementptr inbounds %struct.pci_device_id, ptr %ent, i32 0, i32 6
  %0 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %driver_data, align 4
  %arrayidx = getelementptr [9 x ptr], ptr @ixgbevf_info_tbl, i32 0, i32 %1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %call = tail call i32 @pci_enable_device(ptr noundef %pdev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %call.i = tail call i32 @dma_set_mask(ptr noundef %dev, i64 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp eq i32 %call.i, 0
  br i1 %cmp.i, label %if.end.if.end10_crit_edge, label %if.else

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.else:                                          ; preds = %if.end
  %call.i259 = tail call i32 @dma_set_mask(ptr noundef %dev, i64 noundef 4294967295) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i259)
  %cmp.i260 = icmp eq i32 %call.i259, 0
  br i1 %cmp.i260, label %if.else.if.end10_crit_edge, label %do.end

if.else.if.end10_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

do.end:                                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.46) #17
  br label %if.then157

if.end10:                                         ; preds = %if.else.if.end10_crit_edge, %if.end.if.end10_crit_edge
  %.sink = phi i64 [ -1, %if.end.if.end10_crit_edge ], [ 4294967295, %if.else.if.end10_crit_edge ]
  %call1.i261 = tail call i32 @dma_set_coherent_mask(ptr noundef %dev, i64 noundef %.sink) #14
  %call11 = tail call i32 @pci_request_regions(ptr noundef %pdev, ptr noundef nonnull @ixgbevf_driver_name) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end18, label %do.end16

do.end16:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.49, i32 noundef %call11) #17
  br label %if.then157

if.end18:                                         ; preds = %if.end10
  tail call void @pci_set_master(ptr noundef %pdev) #14
  %call19 = tail call ptr @alloc_etherdev_mqs(i32 noundef 1384, i32 noundef 8, i32 noundef 8) #14
  %tobool20.not = icmp eq ptr %call19, null
  br i1 %tobool20.not, label %err_dma.thread281, label %if.end22

err_dma.thread281:                                ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_release_regions(ptr noundef %pdev) #14
  br label %if.then157

if.end22:                                         ; preds = %if.end18
  %parent = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 133, i32 1
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %dev, ptr %parent, align 8
  %add.ptr.i = getelementptr i8, ptr %call19, i32 2304
  %netdev26 = getelementptr i8, ptr %call19, i32 3036
  %5 = ptrtoint ptr %netdev26 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call19, ptr %netdev26, align 4
  %pdev27 = getelementptr i8, ptr %call19, i32 3044
  %6 = ptrtoint ptr %pdev27 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %pdev, ptr %pdev27, align 4
  %hw28 = getelementptr i8, ptr %call19, i32 3048
  %7 = ptrtoint ptr %hw28 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr.i, ptr %hw28, align 4
  %8 = load i32, ptr @debug, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %8)
  %cmp1.i = icmp ugt i32 %8, 31
  br i1 %cmp1.i, label %if.end22.netif_msg_init.exit_crit_edge, label %if.end.i

if.end22.netif_msg_init.exit_crit_edge:           ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_msg_init.exit

if.end.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp2.i = icmp eq i32 %8, 0
  br i1 %cmp2.i, label %if.end.i.netif_msg_init.exit_crit_edge, label %if.end4.i

if.end.i.netif_msg_init.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %netif_msg_init.exit

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %notmask.i = shl nsw i32 -1, %8
  %sub.i = xor i32 %notmask.i, -1
  br label %netif_msg_init.exit

netif_msg_init.exit:                              ; preds = %if.end4.i, %if.end.i.netif_msg_init.exit_crit_edge, %if.end22.netif_msg_init.exit_crit_edge
  %retval.0.i = phi i32 [ %sub.i, %if.end4.i ], [ 7, %if.end22.netif_msg_init.exit_crit_edge ], [ 0, %if.end.i.netif_msg_init.exit_crit_edge ]
  %conv = trunc i32 %retval.0.i to i16
  %msg_enable = getelementptr i8, ptr %call19, i32 3260
  %9 = ptrtoint ptr %msg_enable to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %conv, ptr %msg_enable, align 4
  %call30 = tail call i32 @pci_save_state(ptr noundef %pdev) #14
  %resource = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 47
  %10 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %resource, align 8
  %end = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 0, i32 1
  %12 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp = icmp eq i32 %13, 0
  %sub = sub i32 1, %11
  %add = add i32 %sub, %13
  %cond = select i1 %cmp, i32 0, i32 %add
  %call41 = tail call ptr @ioremap(i32 noundef %11, i32 noundef %cond) #14
  %hw_addr = getelementptr i8, ptr %call19, i32 3052
  %14 = ptrtoint ptr %hw_addr to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call41, ptr %hw_addr, align 4
  %io_addr = getelementptr i8, ptr %call19, i32 3460
  %15 = ptrtoint ptr %io_addr to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call41, ptr %io_addr, align 4
  %tobool44.not = icmp eq ptr %call41, null
  br i1 %tobool44.not, label %netif_msg_init.exit.err_dma_crit_edge, label %if.end46

netif_msg_init.exit.err_dma_crit_edge:            ; preds = %netif_msg_init.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_dma

if.end46:                                         ; preds = %netif_msg_init.exit
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 16
  %16 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @ixgbevf_netdev_ops, ptr %netdev_ops.i, align 8
  tail call void @ixgbevf_set_ethtool_ops(ptr noundef nonnull %call19) #14
  %watchdog_timeo.i = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 115
  %17 = ptrtoint ptr %watchdog_timeo.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 500, ptr %watchdog_timeo.i, align 4
  %mac = getelementptr i8, ptr %call19, i32 3056
  %mac_ops = getelementptr inbounds %struct.ixgbevf_info, ptr %3, i32 0, i32 1
  %18 = ptrtoint ptr %mac_ops to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mac_ops, align 4
  %20 = call ptr @memcpy(ptr %mac, ptr %19, i32 88)
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %3, align 4
  %type = getelementptr i8, ptr %call19, i32 3156
  %23 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %type, align 4
  %mbx = getelementptr i8, ptr %call19, i32 3180
  %24 = call ptr @memcpy(ptr %mbx, ptr @ixgbevf_mbx_ops_legacy, i32 28)
  %25 = ptrtoint ptr %pdev27 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %pdev27, align 4
  %27 = ptrtoint ptr %netdev26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %netdev26, align 4
  %vendor.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 7
  %29 = ptrtoint ptr %vendor.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %vendor.i, align 8
  %vendor_id.i = getelementptr i8, ptr %call19, i32 3250
  %31 = ptrtoint ptr %vendor_id.i to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %vendor_id.i, align 2
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 8
  %32 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %device.i, align 2
  %device_id.i = getelementptr i8, ptr %call19, i32 3244
  %34 = ptrtoint ptr %device_id.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %device_id.i, align 4
  %revision.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 12
  %35 = ptrtoint ptr %revision.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %revision.i, align 4
  %revision_id.i = getelementptr i8, ptr %call19, i32 3252
  %37 = ptrtoint ptr %revision_id.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %36, ptr %revision_id.i, align 4
  %subsystem_vendor.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 9
  %38 = ptrtoint ptr %subsystem_vendor.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %subsystem_vendor.i, align 4
  %subsystem_vendor_id.i = getelementptr i8, ptr %call19, i32 3246
  %40 = ptrtoint ptr %subsystem_vendor_id.i to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %39, ptr %subsystem_vendor_id.i, align 2
  %subsystem_device.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 10
  %41 = ptrtoint ptr %subsystem_device.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %subsystem_device.i, align 2
  %subsystem_device_id.i = getelementptr i8, ptr %call19, i32 3248
  %43 = ptrtoint ptr %subsystem_device_id.i to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 %42, ptr %subsystem_device_id.i, align 4
  %44 = ptrtoint ptr %mbx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mbx, align 4
  %call.i264 = tail call i32 %45(ptr noundef %hw28) #14
  %46 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %47)
  %cmp.i265 = icmp ugt i32 %47, 2
  br i1 %cmp.i265, label %if.then.i266, label %if.end46.if.end6.i_crit_edge

if.end46.if.end6.i_crit_edge:                     ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.i

if.then.i266:                                     ; preds = %if.end46
  %rss_key1.i.i = getelementptr i8, ptr %call19, i32 3612
  %48 = ptrtoint ptr %rss_key1.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rss_key1.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %49, null
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.i266.if.end6.i_crit_edge

if.then.i266.if.end6.i_crit_edge:                 ; preds = %if.then.i266
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.i

if.then.i.i:                                      ; preds = %if.then.i266
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %50 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %50, i32 noundef 3520, i32 noundef 40) #19
  %tobool2.not.i.i = icmp eq ptr %call7.i.i.i.i, null
  br i1 %tobool2.not.i.i, label %if.then.i.i.err_sw_init_crit_edge, label %if.end.i.i, !prof !308

if.then.i.i.err_sw_init_crit_edge:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_sw_init

if.end.i.i:                                       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @netdev_rss_key_fill(ptr noundef nonnull %call7.i.i.i.i, i32 noundef 40) #14
  %51 = ptrtoint ptr %rss_key1.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %call7.i.i.i.i, ptr %rss_key1.i.i, align 4
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.end.i.i, %if.then.i266.if.end6.i_crit_edge, %if.end46.if.end6.i_crit_edge
  %max_tx_queues.i = getelementptr i8, ptr %call19, i32 3168
  %52 = ptrtoint ptr %max_tx_queues.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 2, ptr %max_tx_queues.i, align 4
  %max_rx_queues.i = getelementptr i8, ptr %call19, i32 3172
  %53 = ptrtoint ptr %max_rx_queues.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 2, ptr %max_rx_queues.i, align 4
  %mbx_lock.i = getelementptr i8, ptr %call19, i32 3564
  tail call void @__raw_spin_lock_init(ptr noundef %mbx_lock.i, ptr noundef nonnull @.str.86, ptr noundef nonnull @ixgbevf_sw_init.__key, i16 noundef signext 3) #14
  %reset_hw.i = getelementptr i8, ptr %call19, i32 3060
  %54 = ptrtoint ptr %reset_hw.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %reset_hw.i, align 4
  %call12.i = tail call i32 %55(ptr noundef %hw28) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %if.else.i, label %do.end17.i

do.end17.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.87) #17
  br label %if.end54.i

if.else.i:                                        ; preds = %if.end6.i
  %56 = ptrtoint ptr %mac to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %mac, align 4
  %call20.i = tail call i32 %57(ptr noundef %hw28) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %tobool21.not.i = icmp eq i32 %call20.i, 0
  br i1 %tobool21.not.i, label %if.end27.i, label %do.end25.i

do.end25.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %call26.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90, i32 noundef %call20.i) #17
  br label %err_sw_init

if.end27.i:                                       ; preds = %if.else.i
  tail call fastcc void @ixgbevf_negotiate_api(ptr noundef %add.ptr.i) #14
  %get_mac_addr.i = getelementptr i8, ptr %call19, i32 3076
  %58 = ptrtoint ptr %get_mac_addr.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %get_mac_addr.i, align 4
  %addr.i = getelementptr i8, ptr %call19, i32 3144
  %call31.i = tail call i32 %59(ptr noundef %hw28, ptr noundef %addr.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31.i)
  %tobool32.not.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.not.i, label %if.else38.i, label %if.end27.i.if.end50.sink.split.i_crit_edge

if.end27.i.if.end50.sink.split.i_crit_edge:       ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.sink.split.i

if.else38.i:                                      ; preds = %if.end27.i
  %60 = ptrtoint ptr %addr.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %addr.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %call19, i32 3148
  %62 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %63 to i32
  %or.i.i = or i32 %61, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i, label %if.else38.i.if.end50.sink.split.i_crit_edge, label %if.else38.i.if.end50.i_crit_edge

if.else38.i.if.end50.i_crit_edge:                 ; preds = %if.else38.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.i

if.else38.i.if.end50.sink.split.i_crit_edge:      ; preds = %if.else38.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.sink.split.i

if.end50.sink.split.i:                            ; preds = %if.else38.i.if.end50.sink.split.i_crit_edge, %if.end27.i.if.end50.sink.split.i_crit_edge
  %.str.96.sink.i = phi ptr [ @.str.93, %if.end27.i.if.end50.sink.split.i_crit_edge ], [ @.str.96, %if.else38.i.if.end50.sink.split.i_crit_edge ]
  %dev48.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev48.i, ptr noundef nonnull %.str.96.sink.i) #17
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.end50.sink.split.i, %if.else38.i.if.end50.i_crit_edge
  tail call void @dev_addr_mod(ptr noundef %28, i32 noundef 0, ptr noundef %addr.i, i32 noundef 6) #14
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.end50.i, %do.end17.i
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %28, i32 0, i32 86
  %64 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dev_addr.i, align 64
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %65, align 4
  %68 = and i32 %67, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool.i.not.i.i = icmp eq i32 %68, 0
  br i1 %tobool.i.not.i.i, label %is_valid_ether_addr.exit.i, label %if.end54.i.do.end59.i_crit_edge

if.end54.i.do.end59.i_crit_edge:                  ; preds = %if.end54.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end59.i

is_valid_ether_addr.exit.i:                       ; preds = %if.end54.i
  %add.ptr.i.i.i = getelementptr i8, ptr %65, i32 4
  %69 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %add.ptr.i.i.i, align 2
  %conv.i.i.i = zext i16 %70 to i32
  %or.i.i.i = or i32 %67, %conv.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i.i)
  %cmp.i.i.not.i = icmp eq i32 %or.i.i.i, 0
  br i1 %cmp.i.i.not.i, label %is_valid_ether_addr.exit.i.do.end59.i_crit_edge, label %is_valid_ether_addr.exit.i.if.end53_crit_edge

is_valid_ether_addr.exit.i.if.end53_crit_edge:    ; preds = %is_valid_ether_addr.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end53

is_valid_ether_addr.exit.i.do.end59.i_crit_edge:  ; preds = %is_valid_ether_addr.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end59.i

do.end59.i:                                       ; preds = %is_valid_ether_addr.exit.i.do.end59.i_crit_edge, %if.end54.i.do.end59.i_crit_edge
  %dev60.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev60.i, ptr noundef nonnull @.str.99) #17
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %addr.i.i) #14
  %71 = call ptr @memset(ptr %addr.i.i, i32 255, i32 6)
  call void @get_random_bytes(ptr noundef nonnull %addr.i.i, i32 noundef 6) #14
  %72 = ptrtoint ptr %addr.i.i to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %addr.i.i, align 1
  %74 = and i8 %73, -4
  %75 = or i8 %74, 2
  store i8 %75, ptr %addr.i.i, align 1
  call void @dev_addr_mod(ptr noundef %28, i32 noundef 0, ptr noundef nonnull %addr.i.i, i32 noundef 6) #14
  %addr_assign_type.i.i = getelementptr inbounds %struct.net_device, ptr %28, i32 0, i32 55
  %76 = ptrtoint ptr %addr_assign_type.i.i to i32
  call void @__asan_store1_noabort(i32 %76)
  store i8 1, ptr %addr_assign_type.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %addr.i.i) #14
  %addr62.i = getelementptr i8, ptr %call19, i32 3144
  %77 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %dev_addr.i, align 64
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %78, align 4
  %81 = ptrtoint ptr %addr62.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %80, ptr %addr62.i, align 4
  %add.ptr.i119.i = getelementptr i8, ptr %78, i32 4
  %82 = ptrtoint ptr %add.ptr.i119.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %add.ptr.i119.i, align 2
  %add.ptr1.i.i = getelementptr i8, ptr %call19, i32 3148
  %84 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_store2_noabort(i32 %84)
  store i16 %83, ptr %add.ptr1.i.i, align 2
  %perm_addr.i = getelementptr i8, ptr %call19, i32 3150
  %85 = load ptr, ptr %dev_addr.i, align 64
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %85, align 4
  %88 = ptrtoint ptr %perm_addr.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %87, ptr %perm_addr.i, align 4
  %add.ptr.i120.i = getelementptr i8, ptr %85, i32 4
  %89 = ptrtoint ptr %add.ptr.i120.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %add.ptr.i120.i, align 2
  %add.ptr1.i121.i = getelementptr i8, ptr %call19, i32 3154
  %91 = ptrtoint ptr %add.ptr1.i121.i to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 %90, ptr %add.ptr1.i121.i, align 2
  br label %if.end53

if.end53:                                         ; preds = %do.end59.i, %is_valid_ether_addr.exit.i.if.end53_crit_edge
  %rx_itr_setting.i = getelementptr i8, ptr %call19, i32 2824
  %92 = ptrtoint ptr %rx_itr_setting.i to i32
  call void @__asan_store2_noabort(i32 %92)
  store i16 1, ptr %rx_itr_setting.i, align 8
  %tx_itr_setting.i = getelementptr i8, ptr %call19, i32 2826
  %93 = ptrtoint ptr %tx_itr_setting.i to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 1, ptr %tx_itr_setting.i, align 2
  %tx_ring_count.i = getelementptr i8, ptr %call19, i32 3448
  %94 = ptrtoint ptr %tx_ring_count.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 1024, ptr %tx_ring_count.i, align 8
  %rx_ring_count.i = getelementptr i8, ptr %call19, i32 3456
  %95 = ptrtoint ptr %rx_ring_count.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 512, ptr %rx_ring_count.i, align 8
  %state.i = getelementptr i8, ptr %call19, i32 3432
  call void @_set_bit(i32 noundef 2, ptr noundef %state.i) #14
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 86
  %96 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %dev_addr, align 64
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %97, align 4
  %100 = and i32 %99, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %tobool.i.not.i = icmp eq i32 %100, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %if.end53.do.end58_crit_edge

if.end53.do.end58_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end58

is_valid_ether_addr.exit:                         ; preds = %if.end53
  %add.ptr.i.i268 = getelementptr i8, ptr %97, i32 4
  %101 = ptrtoint ptr %add.ptr.i.i268 to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %add.ptr.i.i268, align 2
  %conv.i.i269 = zext i16 %102 to i32
  %or.i.i270 = or i32 %99, %conv.i.i269
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i270)
  %cmp.i.i271.not = icmp eq i32 %or.i.i270, 0
  br i1 %cmp.i.i271.not, label %is_valid_ether_addr.exit.do.end58_crit_edge, label %if.end60

is_valid_ether_addr.exit.do.end58_crit_edge:      ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end58

do.end58:                                         ; preds = %is_valid_ether_addr.exit.do.end58_crit_edge, %if.end53.do.end58_crit_edge
  %call59 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.52) #17
  br label %err_sw_init

if.end60:                                         ; preds = %is_valid_ether_addr.exit
  %hw_features = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 24
  %gso_partial_features = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 29
  %103 = ptrtoint ptr %gso_partial_features to i32
  call void @__asan_store8_noabort(i32 %103)
  store i64 264241152, ptr %gso_partial_features, align 64
  %104 = ptrtoint ptr %hw_features to i32
  call void @__asan_store8_noabort(i32 %104)
  store i64 1168764895241, ptr %hw_features, align 8
  %features = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 23
  %spec.select = select i1 %cmp.i, i64 1168764895273, i64 1168764895241
  %vlan_features = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 26
  %105 = ptrtoint ptr %vlan_features to i32
  call void @__asan_load8_noabort(i32 %105)
  %106 = load i64, ptr %vlan_features, align 8
  %or69 = or i64 %spec.select, %106
  %or70 = or i64 %or69, 524288
  store i64 %or70, ptr %vlan_features, align 8
  %mpls_features = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 28
  %107 = ptrtoint ptr %mpls_features to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %mpls_features, align 8
  %or73 = or i64 %108, 265355273
  store i64 %or73, ptr %mpls_features, align 8
  %hw_enc_features = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 27
  %109 = ptrtoint ptr %hw_enc_features to i32
  call void @__asan_load8_noabort(i32 %109)
  %110 = load i64, ptr %hw_enc_features, align 16
  %or75 = or i64 %110, %or70
  store i64 %or75, ptr %hw_enc_features, align 16
  %or77 = or i64 %spec.select, 896
  %111 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %111)
  store i64 %or77, ptr %features, align 16
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 15
  %112 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %priv_flags, align 16
  %or78 = or i64 %113, 4096
  store i64 %or78, ptr %priv_flags, align 16
  %min_mtu = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 30
  %114 = ptrtoint ptr %min_mtu to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 68, ptr %min_mtu, align 8
  %api_version = getelementptr i8, ptr %call19, i32 3256
  %115 = ptrtoint ptr %api_version to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %api_version, align 8
  %.off = add i32 %116, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %.off)
  %switch = icmp ult i32 %.off, 5
  br i1 %switch, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #16
  %max_mtu = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 31
  %117 = ptrtoint ptr %max_mtu to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 9710, ptr %max_mtu, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end60
  %118 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %119)
  %cmp83.not = icmp eq i32 %119, 1
  %max_mtu88 = getelementptr inbounds %struct.net_device, ptr %call19, i32 0, i32 31
  br i1 %cmp83.not, label %if.else87, label %if.then85

if.then85:                                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  %120 = ptrtoint ptr %max_mtu88 to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 9710, ptr %max_mtu88, align 4
  br label %sw.epilog

if.else87:                                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  %121 = ptrtoint ptr %max_mtu88 to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 1504, ptr %max_mtu88, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.else87, %if.then85, %sw.bb
  %122 = ptrtoint ptr %hw_addr to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %hw_addr, align 4
  %tobool91.not = icmp eq ptr %123, null
  br i1 %tobool91.not, label %sw.epilog.err_sw_init_crit_edge, label %do.body97, !prof !308

sw.epilog.err_sw_init_crit_edge:                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_sw_init

do.body97:                                        ; preds = %sw.epilog
  %service_timer = getelementptr i8, ptr %call19, i32 3472
  call void @init_timer_key(ptr noundef %service_timer, ptr noundef nonnull @ixgbevf_service_timer, i32 noundef 0, ptr noundef nonnull @.str.54, ptr noundef nonnull @ixgbevf_probe.__key) #14
  %service_task = getelementptr i8, ptr %call19, i32 3520
  call void @__init_work(ptr noundef %service_task, i32 noundef 0) #14
  %124 = ptrtoint ptr %service_task to i32
  call void @__asan_store4_noabort(i32 %124)
  store i32 -64, ptr %service_task, align 8
  %lockdep_map = getelementptr i8, ptr %call19, i32 3536
  call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.56, ptr noundef nonnull @ixgbevf_probe.__key.55, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  %entry104 = getelementptr i8, ptr %call19, i32 3524
  %125 = ptrtoint ptr %entry104 to i32
  call void @__asan_store4_noabort(i32 %125)
  store volatile ptr %entry104, ptr %entry104, align 4
  %prev.i = getelementptr i8, ptr %call19, i32 3528
  %126 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %126)
  store ptr %entry104, ptr %prev.i, align 4
  %func = getelementptr i8, ptr %call19, i32 3532
  %127 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr @ixgbevf_service_task, ptr %func, align 4
  call void @_set_bit(i32 noundef 6, ptr noundef %state.i) #14
  call void @_clear_bit(i32 noundef 5, ptr noundef %state.i) #14
  %call109 = call fastcc i32 @ixgbevf_init_interrupt_scheme(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call109)
  %tobool110.not = icmp eq i32 %call109, 0
  br i1 %tobool110.not, label %if.end112, label %do.body97.err_sw_init_crit_edge

do.body97.err_sw_init_crit_edge:                  ; preds = %do.body97
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_sw_init

if.end112:                                        ; preds = %do.body97
  %128 = call ptr @memcpy(ptr %call19, ptr @.str.57, i32 6)
  %call114 = call i32 @register_netdev(ptr noundef nonnull %call19) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114)
  %tobool115.not = icmp eq i32 %call114, 0
  br i1 %tobool115.not, label %if.end117, label %err_register

if.end117:                                        ; preds = %if.end112
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %129 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %129)
  store ptr %call19, ptr %driver_data.i.i, align 4
  call void @netif_carrier_off(ptr noundef nonnull %call19) #14
  call void @ixgbevf_init_ipsec_offload(ptr noundef %add.ptr.i) #14
  call fastcc void @ixgbevf_init_last_counter_stats(ptr noundef %add.ptr.i)
  %130 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %dev_addr, align 64
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.59, ptr noundef %131) #17
  %132 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %type, align 4
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.63, i32 noundef %133) #17
  %134 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %type, align 4
  %136 = zext i32 %135 to i64
  call void @__sanitizer_cov_trace_switch(i64 %136, ptr @__sancov_gen_cov_switch_values.132)
  switch i32 %135, label %do.end145 [
    i32 3, label %do.end134
    i32 2, label %do.end139
  ]

do.end134:                                        ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.66) #17
  br label %cleanup

do.end139:                                        ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.69) #17
  br label %cleanup

do.end145:                                        ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.72) #17
  br label %cleanup

err_register:                                     ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @ixgbevf_clear_interrupt_scheme(ptr noundef %add.ptr.i)
  br label %err_sw_init

err_sw_init:                                      ; preds = %err_register, %do.body97.err_sw_init_crit_edge, %sw.epilog.err_sw_init_crit_edge, %do.end58, %do.end25.i, %if.then.i.i.err_sw_init_crit_edge
  %err.0 = phi i32 [ %call109, %do.body97.err_sw_init_crit_edge ], [ %call114, %err_register ], [ -5, %do.end58 ], [ -5, %sw.epilog.err_sw_init_crit_edge ], [ -12, %if.then.i.i.err_sw_init_crit_edge ], [ %call20.i, %do.end25.i ]
  %msix_entries.i = getelementptr i8, ptr %call19, i32 3032
  %137 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %msix_entries.i, align 8
  %tobool.not.i = icmp eq ptr %138, null
  br i1 %tobool.not.i, label %err_sw_init.ixgbevf_reset_interrupt_capability.exit_crit_edge, label %if.end.i272

err_sw_init.ixgbevf_reset_interrupt_capability.exit_crit_edge: ; preds = %err_sw_init
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_reset_interrupt_capability.exit

if.end.i272:                                      ; preds = %err_sw_init
  call void @__sanitizer_cov_trace_pc() #16
  %139 = ptrtoint ptr %pdev27 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %pdev27, align 4
  call void @pci_disable_msix(ptr noundef %140) #14
  %141 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %msix_entries.i, align 8
  call void @kfree(ptr noundef %142) #14
  %143 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store ptr null, ptr %msix_entries.i, align 8
  br label %ixgbevf_reset_interrupt_capability.exit

ixgbevf_reset_interrupt_capability.exit:          ; preds = %if.end.i272, %err_sw_init.ixgbevf_reset_interrupt_capability.exit_crit_edge
  %144 = ptrtoint ptr %io_addr to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %io_addr, align 4
  call void @iounmap(ptr noundef %145) #14
  %rss_key = getelementptr i8, ptr %call19, i32 3612
  %146 = ptrtoint ptr %rss_key to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %rss_key, align 4
  call void @kfree(ptr noundef %147) #14
  br label %err_dma

err_dma:                                          ; preds = %ixgbevf_reset_interrupt_capability.exit, %netif_msg_init.exit.err_dma_crit_edge
  %err.1 = phi i32 [ %err.0, %ixgbevf_reset_interrupt_capability.exit ], [ -5, %netif_msg_init.exit.err_dma_crit_edge ]
  %state149 = getelementptr i8, ptr %call19, i32 3432
  %call150 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %state149) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call150)
  %tobool151.not = icmp eq i32 %call150, 0
  call void @free_netdev(ptr noundef nonnull %call19) #14
  call void @pci_release_regions(ptr noundef %pdev) #14
  %tobool154.not = icmp eq ptr %add.ptr.i, null
  %brmerge = select i1 %tobool154.not, i1 true, i1 %tobool151.not
  br i1 %brmerge, label %err_dma.if.then157_crit_edge, label %err_dma.cleanup_crit_edge

err_dma.cleanup_crit_edge:                        ; preds = %err_dma
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

err_dma.if.then157_crit_edge:                     ; preds = %err_dma
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then157

if.then157:                                       ; preds = %err_dma.if.then157_crit_edge, %err_dma.thread281, %do.end16, %do.end
  %err.3280 = phi i32 [ %err.1, %err_dma.if.then157_crit_edge ], [ -12, %err_dma.thread281 ], [ %call11, %do.end16 ], [ %call.i259, %do.end ]
  call void @pci_disable_device(ptr noundef %pdev) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then157, %err_dma.cleanup_crit_edge, %do.end145, %do.end139, %do.end134, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ 0, %do.end145 ], [ 0, %do.end139 ], [ 0, %do.end134 ], [ %err.1, %err_dma.cleanup_crit_edge ], [ %err.3280, %if.then157 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_remove(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %state = getelementptr i8, ptr %1, i32 3432
  tail call void @_set_bit(i32 noundef 4, ptr noundef %state) #14
  %service_task = getelementptr i8, ptr %1, i32 3520
  %call2 = tail call zeroext i1 @cancel_work_sync(ptr noundef %service_task) #14
  %reg_state = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 121
  %2 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %bf.load)
  %cmp = icmp eq i8 %bf.load, 1
  br i1 %cmp, label %if.then3, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @unregister_netdev(ptr noundef nonnull %1) #14
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end.if.end4_crit_edge
  tail call void @ixgbevf_stop_ipsec_offload(ptr noundef %add.ptr.i) #14
  tail call fastcc void @ixgbevf_clear_interrupt_scheme(ptr noundef %add.ptr.i)
  %msix_entries.i = getelementptr i8, ptr %1, i32 3032
  %3 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %msix_entries.i, align 8
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %if.end4.ixgbevf_reset_interrupt_capability.exit_crit_edge, label %if.end.i

if.end4.ixgbevf_reset_interrupt_capability.exit_crit_edge: ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_reset_interrupt_capability.exit

if.end.i:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  %pdev.i = getelementptr i8, ptr %1, i32 3044
  %5 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev.i, align 4
  tail call void @pci_disable_msix(ptr noundef %6) #14
  %7 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %msix_entries.i, align 8
  tail call void @kfree(ptr noundef %8) #14
  %9 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %msix_entries.i, align 8
  br label %ixgbevf_reset_interrupt_capability.exit

ixgbevf_reset_interrupt_capability.exit:          ; preds = %if.end.i, %if.end4.ixgbevf_reset_interrupt_capability.exit_crit_edge
  %io_addr = getelementptr i8, ptr %1, i32 3460
  %10 = ptrtoint ptr %io_addr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %io_addr, align 4
  tail call void @iounmap(ptr noundef %11) #14
  tail call void @pci_release_regions(ptr noundef %pdev) #14
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_remove.__UNIQUE_ID_ddebug674, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_remove, %if.then10)) #14
          to label %do.end14 [label %if.then10], !srcloc !314

if.then10:                                        ; preds = %ixgbevf_reset_interrupt_capability.exit
  call void @__sanitizer_cov_trace_pc() #16
  %hw = getelementptr i8, ptr %1, i32 3048
  %12 = ptrtoint ptr %hw to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hw, align 8
  %netdev11 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %13, i32 0, i32 23
  %14 = ptrtoint ptr %netdev11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %netdev11, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_remove.__UNIQUE_ID_ddebug674, ptr noundef %15, ptr noundef nonnull @.str.128) #14
  br label %do.end14

do.end14:                                         ; preds = %if.then10, %ixgbevf_reset_interrupt_capability.exit
  %rss_key = getelementptr i8, ptr %1, i32 3612
  %16 = ptrtoint ptr %rss_key to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rss_key, align 4
  tail call void @kfree(ptr noundef %17) #14
  %call16 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %state) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  tail call void @free_netdev(ptr noundef nonnull %1) #14
  br i1 %tobool17.not, label %if.then22, label %do.end14.cleanup_crit_edge

do.end14.cleanup_crit_edge:                       ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then22:                                        ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then22, %do.end14.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_shutdown(ptr nocapture noundef readonly %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 2304
  tail call void @rtnl_lock() #14
  tail call void @netif_device_detach(ptr noundef %1) #14
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %entry.ixgbevf_suspend.exit_crit_edge, label %if.then.i

entry.ixgbevf_suspend.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_suspend.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_close_suspend(ptr noundef %add.ptr.i.i) #14
  br label %ixgbevf_suspend.exit

ixgbevf_suspend.exit:                             ; preds = %if.then.i, %entry.ixgbevf_suspend.exit_crit_edge
  tail call fastcc void @ixgbevf_clear_interrupt_scheme(ptr noundef %add.ptr.i.i) #14
  tail call void @rtnl_unlock() #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_request_regions(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_etherdev_mqs(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_save_state(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_service_timer(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %0, 200
  %call = tail call i32 @mod_timer(ptr noundef %t, i32 noundef %add) #14
  %state.i = getelementptr i8, ptr %t, i32 -40
  %1 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %state.i, align 4
  %3 = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.ixgbevf_service_event_schedule.exit_crit_edge

entry.ixgbevf_service_event_schedule.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_service_event_schedule.exit

land.lhs.true.i:                                  ; preds = %entry
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %6 = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool3.not.i = icmp eq i32 %6, 0
  br i1 %tobool3.not.i, label %land.lhs.true4.i, label %land.lhs.true.i.ixgbevf_service_event_schedule.exit_crit_edge

land.lhs.true.i.ixgbevf_service_event_schedule.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_service_event_schedule.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %call6.i = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %if.then.i, label %land.lhs.true4.i.ixgbevf_service_event_schedule.exit_crit_edge

land.lhs.true4.i.ixgbevf_service_event_schedule.exit_crit_edge: ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_service_event_schedule.exit

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  %7 = load ptr, ptr @ixgbevf_wq, align 4
  %service_task.i = getelementptr i8, ptr %t, i32 48
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %7, ptr noundef %service_task.i) #14
  br label %ixgbevf_service_event_schedule.exit

ixgbevf_service_event_schedule.exit:              ; preds = %if.then.i, %land.lhs.true4.i.ixgbevf_service_event_schedule.exit_crit_edge, %land.lhs.true.i.ixgbevf_service_event_schedule.exit_crit_edge, %entry.ixgbevf_service_event_schedule.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_service_task(ptr noundef %work) #0 align 64 {
entry:
  %link_speed.i.i = alloca i32, align 4
  %link_up.i.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -1216
  %hw_addr = getelementptr i8, ptr %work, i32 -468
  %0 = ptrtoint ptr %hw_addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hw_addr, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %if.end7, !prof !308

if.then:                                          ; preds = %entry
  %state = getelementptr i8, ptr %work, i32 -88
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %if.then6, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @rtnl_lock() #14
  tail call void @ixgbevf_down(ptr noundef %add.ptr)
  tail call void @rtnl_unlock() #14
  br label %cleanup

if.end7:                                          ; preds = %entry
  %netdev.i = getelementptr i8, ptr %work, i32 -484
  %5 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %netdev.i, align 4
  %state.i = getelementptr i8, ptr %work, i32 -88
  %call.i = tail call i32 @_test_and_clear_bit(i32 noundef 8, ptr noundef %state.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end7.ixgbevf_queue_reset_subtask.exit_crit_edge, label %if.end.i

if.end7.ixgbevf_queue_reset_subtask.exit_crit_edge: ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_queue_reset_subtask.exit

if.end.i:                                         ; preds = %if.end7
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %9 = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool3.not.i = icmp eq i32 %9, 0
  br i1 %tobool3.not.i, label %lor.lhs.false.i, label %if.end.i.ixgbevf_queue_reset_subtask.exit_crit_edge

if.end.i.ixgbevf_queue_reset_subtask.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_queue_reset_subtask.exit

lor.lhs.false.i:                                  ; preds = %if.end.i
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i, align 4
  %12 = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool6.not.i = icmp eq i32 %12, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %lor.lhs.false.i.ixgbevf_queue_reset_subtask.exit_crit_edge

lor.lhs.false.i.ixgbevf_queue_reset_subtask.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_queue_reset_subtask.exit

if.end8.i:                                        ; preds = %lor.lhs.false.i
  tail call void @rtnl_lock() #14
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %6, i32 0, i32 6
  %13 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %if.end8.i.if.end12.i_crit_edge, label %if.then10.i

if.end8.i.if.end12.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i

if.then10.i:                                      ; preds = %if.end8.i
  %15 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %state.i.i, align 4
  %17 = and i32 %16, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i.not.i.i = icmp eq i32 %17, 0
  br i1 %tobool.i.not.i.i, label %if.then10.i.if.end12.i_crit_edge, label %if.then.i.i

if.then10.i.if.end12.i_crit_edge:                 ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i

if.then.i.i:                                      ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 2304
  tail call fastcc void @ixgbevf_close_suspend(ptr noundef %add.ptr.i.i.i) #14
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then.i.i, %if.then10.i.if.end12.i_crit_edge, %if.end8.i.if.end12.i_crit_edge
  tail call fastcc void @ixgbevf_clear_interrupt_scheme(ptr noundef %add.ptr) #14
  %call13.i = tail call fastcc i32 @ixgbevf_init_interrupt_scheme(ptr noundef %add.ptr) #14
  %18 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i29.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i29.i)
  %tobool.i30.not.i = icmp eq i32 %and1.i.i29.i, 0
  br i1 %tobool.i30.not.i, label %if.end12.i.if.end17.i_crit_edge, label %if.then15.i

if.end12.i.if.end17.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

if.then15.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  %call16.i = tail call i32 @ixgbevf_open(ptr noundef %6) #14
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then15.i, %if.end12.i.if.end17.i_crit_edge
  tail call void @rtnl_unlock() #14
  br label %ixgbevf_queue_reset_subtask.exit

ixgbevf_queue_reset_subtask.exit:                 ; preds = %if.end17.i, %lor.lhs.false.i.ixgbevf_queue_reset_subtask.exit_crit_edge, %if.end.i.ixgbevf_queue_reset_subtask.exit_crit_edge, %if.end7.ixgbevf_queue_reset_subtask.exit_crit_edge
  %call.i17 = tail call i32 @_test_and_clear_bit(i32 noundef 7, ptr noundef %state.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i17)
  %tobool.not.i18 = icmp eq i32 %call.i17, 0
  br i1 %tobool.not.i18, label %ixgbevf_queue_reset_subtask.exit.ixgbevf_reset_subtask.exit_crit_edge, label %if.end.i20

ixgbevf_queue_reset_subtask.exit.ixgbevf_reset_subtask.exit_crit_edge: ; preds = %ixgbevf_queue_reset_subtask.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_reset_subtask.exit

if.end.i20:                                       ; preds = %ixgbevf_queue_reset_subtask.exit
  tail call void @rtnl_lock() #14
  %20 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %state.i, align 4
  %22 = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool3.not.i19 = icmp eq i32 %22, 0
  br i1 %tobool3.not.i19, label %lor.lhs.false.i22, label %if.end.i20.return.sink.split.i_crit_edge

if.end.i20.return.sink.split.i_crit_edge:         ; preds = %if.end.i20
  call void @__sanitizer_cov_trace_pc() #16
  br label %return.sink.split.i

lor.lhs.false.i22:                                ; preds = %if.end.i20
  %23 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %state.i, align 4
  %25 = and i32 %24, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool6.not.i21 = icmp eq i32 %25, 0
  br i1 %tobool6.not.i21, label %lor.lhs.false7.i, label %lor.lhs.false.i22.return.sink.split.i_crit_edge

lor.lhs.false.i22.return.sink.split.i_crit_edge:  ; preds = %lor.lhs.false.i22
  call void @__sanitizer_cov_trace_pc() #16
  br label %return.sink.split.i

lor.lhs.false7.i:                                 ; preds = %lor.lhs.false.i22
  %26 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %state.i, align 4
  %28 = and i32 %27, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool10.not.i = icmp eq i32 %28, 0
  br i1 %tobool10.not.i, label %if.end12.i23, label %lor.lhs.false7.i.return.sink.split.i_crit_edge

lor.lhs.false7.i.return.sink.split.i_crit_edge:   ; preds = %lor.lhs.false7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return.sink.split.i

if.end12.i23:                                     ; preds = %lor.lhs.false7.i
  call void @__sanitizer_cov_trace_pc() #16
  %tx_timeout_count.i = getelementptr i8, ptr %work, i32 -600
  %29 = ptrtoint ptr %tx_timeout_count.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %tx_timeout_count.i, align 8
  %inc.i = add i32 %30, 1
  store i32 %inc.i, ptr %tx_timeout_count.i, align 8
  tail call void @ixgbevf_reinit_locked(ptr noundef %add.ptr) #14
  br label %return.sink.split.i

return.sink.split.i:                              ; preds = %if.end12.i23, %lor.lhs.false7.i.return.sink.split.i_crit_edge, %lor.lhs.false.i22.return.sink.split.i_crit_edge, %if.end.i20.return.sink.split.i_crit_edge
  tail call void @rtnl_unlock() #14
  br label %ixgbevf_reset_subtask.exit

ixgbevf_reset_subtask.exit:                       ; preds = %return.sink.split.i, %ixgbevf_queue_reset_subtask.exit.ixgbevf_reset_subtask.exit_crit_edge
  %31 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %state.i, align 4
  %33 = and i32 %32, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.not.i25 = icmp eq i32 %33, 0
  br i1 %tobool.not.i25, label %lor.lhs.false.i27, label %ixgbevf_reset_subtask.exit.ixgbevf_watchdog_subtask.exit_crit_edge

ixgbevf_reset_subtask.exit.ixgbevf_watchdog_subtask.exit_crit_edge: ; preds = %ixgbevf_reset_subtask.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_watchdog_subtask.exit

lor.lhs.false.i27:                                ; preds = %ixgbevf_reset_subtask.exit
  %34 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %state.i, align 4
  %36 = and i32 %35, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool3.not.i26 = icmp eq i32 %36, 0
  br i1 %tobool3.not.i26, label %if.end.i28, label %lor.lhs.false.i27.ixgbevf_watchdog_subtask.exit_crit_edge

lor.lhs.false.i27.ixgbevf_watchdog_subtask.exit_crit_edge: ; preds = %lor.lhs.false.i27
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_watchdog_subtask.exit

if.end.i28:                                       ; preds = %lor.lhs.false.i27
  %hw1.i.i = getelementptr i8, ptr %work, i32 -472
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %link_speed.i.i) #14
  %link_speed2.i.i = getelementptr i8, ptr %work, i32 -56
  %37 = ptrtoint ptr %link_speed2.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %link_speed2.i.i, align 8
  %39 = ptrtoint ptr %link_speed.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %link_speed.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %link_up.i.i) #14
  %link_up3.i.i = getelementptr i8, ptr %work, i32 -52
  %40 = ptrtoint ptr %link_up3.i.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %link_up3.i.i, align 4, !range !315
  %42 = ptrtoint ptr %link_up.i.i to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %41, ptr %link_up.i.i, align 1
  %mbx_lock.i.i = getelementptr i8, ptr %work, i32 44
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock.i.i) #14
  %check_link.i.i = getelementptr i8, ptr %work, i32 -424
  %43 = ptrtoint ptr %check_link.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %check_link.i.i, align 4
  %call.i.i = call i32 %44(ptr noundef %hw1.i.i, ptr noundef nonnull %link_speed.i.i, ptr noundef nonnull %link_up.i.i, i1 noundef zeroext false) #14
  call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i.i, label %if.end.i28.ixgbevf_watchdog_update_link.exit.i_crit_edge, label %land.lhs.true.i.i

if.end.i28.ixgbevf_watchdog_update_link.exit.i_crit_edge: ; preds = %if.end.i28
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_watchdog_update_link.exit.i

land.lhs.true.i.i:                                ; preds = %if.end.i28
  %last_reset.i.i = getelementptr i8, ptr %work, i32 88
  %45 = ptrtoint ptr %last_reset.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %last_reset.i.i, align 8
  %add.i.i = add i32 %46, 1000
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %47 = load volatile i32, ptr @jiffies, align 128
  %sub.i.i = sub i32 %add.i.i, %47
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %ixgbevf_watchdog_update_link.exit.thread.i, label %land.lhs.true.i.i.ixgbevf_watchdog_update_link.exit.i_crit_edge

land.lhs.true.i.i.ixgbevf_watchdog_update_link.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_watchdog_update_link.exit.i

ixgbevf_watchdog_update_link.exit.thread.i:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @_set_bit(i32 noundef 7, ptr noundef %state.i) #14
  %48 = ptrtoint ptr %link_up3.i.i to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 0, ptr %link_up3.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %link_up.i.i) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %link_speed.i.i) #14
  br label %if.else.i

ixgbevf_watchdog_update_link.exit.i:              ; preds = %land.lhs.true.i.i.ixgbevf_watchdog_update_link.exit.i_crit_edge, %if.end.i28.ixgbevf_watchdog_update_link.exit.i_crit_edge
  %49 = ptrtoint ptr %link_up.i.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %.pr.i = load i8, ptr %link_up.i.i, align 1
  %50 = ptrtoint ptr %link_up3.i.i to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %.pr.i, ptr %link_up3.i.i, align 4
  %51 = ptrtoint ptr %link_speed.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %link_speed.i.i, align 4
  %53 = ptrtoint ptr %link_speed2.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %link_speed2.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %link_up.i.i) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %link_speed.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr.i)
  %tobool4.not.i = icmp eq i8 %.pr.i, 0
  br i1 %tobool4.not.i, label %ixgbevf_watchdog_update_link.exit.i.if.else.i_crit_edge, label %if.then5.i

ixgbevf_watchdog_update_link.exit.i.if.else.i_crit_edge: ; preds = %ixgbevf_watchdog_update_link.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

if.then5.i:                                       ; preds = %ixgbevf_watchdog_update_link.exit.i
  %54 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %netdev.i, align 4
  %state.i.i.i = getelementptr inbounds %struct.net_device, ptr %55, i32 0, i32 6
  %56 = ptrtoint ptr %state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %state.i.i.i, align 4
  %58 = and i32 %57, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.not.i.i.i = icmp eq i32 %58, 0
  br i1 %tobool.not.i.i.i, label %if.then5.i.if.end6.i_crit_edge, label %do.end.i.i

if.then5.i.if.end6.i_crit_edge:                   ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.i

do.end.i.i:                                       ; preds = %if.then5.i
  %pdev.i.i = getelementptr i8, ptr %work, i32 -476
  %59 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %pdev.i.i, align 4
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %60, i32 0, i32 44
  %61 = zext i32 %52 to i64
  call void @__sanitizer_cov_trace_switch(i64 %61, ptr @__sancov_gen_cov_switch_values.133)
  switch i32 %52, label %cond.false5.i.i [
    i32 128, label %do.end.i.i.cond.end9.i.i_crit_edge
    i32 32, label %cond.end9.fold.split.i.i
  ]

do.end.i.i.cond.end9.i.i_crit_edge:               ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end9.i.i

cond.false5.i.i:                                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %52)
  %cmp7.i.i = icmp eq i32 %52, 8
  %cond.i.i = select i1 %cmp7.i.i, ptr @.str.105, ptr @.str.106
  br label %cond.end9.i.i

cond.end9.fold.split.i.i:                         ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end9.i.i

cond.end9.i.i:                                    ; preds = %cond.end9.fold.split.i.i, %cond.false5.i.i, %do.end.i.i.cond.end9.i.i_crit_edge
  %cond10.i.i = phi ptr [ @.str.103, %do.end.i.i.cond.end9.i.i_crit_edge ], [ %cond.i.i, %cond.false5.i.i ], [ @.str.104, %cond.end9.fold.split.i.i ]
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i.i, ptr noundef nonnull @.str.101, ptr noundef nonnull %cond10.i.i) #17
  call void @netif_carrier_on(ptr noundef %55) #14
  br label %if.end6.i

if.else.i:                                        ; preds = %ixgbevf_watchdog_update_link.exit.i.if.else.i_crit_edge, %ixgbevf_watchdog_update_link.exit.thread.i
  %62 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %netdev.i, align 4
  %64 = ptrtoint ptr %link_speed2.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 0, ptr %link_speed2.i.i, align 8
  %state.i.i18.i = getelementptr inbounds %struct.net_device, ptr %63, i32 0, i32 6
  %65 = ptrtoint ptr %state.i.i18.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %state.i.i18.i, align 4
  %67 = and i32 %66, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool.not.i.i19.i = icmp eq i32 %67, 0
  br i1 %tobool.not.i.i19.i, label %do.end.i22.i, label %if.else.i.if.end6.i_crit_edge

if.else.i.if.end6.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.i

do.end.i22.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %pdev.i20.i = getelementptr i8, ptr %work, i32 -476
  %68 = ptrtoint ptr %pdev.i20.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %pdev.i20.i, align 4
  %dev.i21.i = getelementptr inbounds %struct.pci_dev, ptr %69, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i21.i, ptr noundef nonnull @.str.107) #17
  call void @netif_carrier_off(ptr noundef %63) #14
  br label %if.end6.i

if.end6.i:                                        ; preds = %do.end.i22.i, %if.else.i.if.end6.i_crit_edge, %cond.end9.i.i, %if.then5.i.if.end6.i_crit_edge
  call void @ixgbevf_update_stats(ptr noundef %add.ptr) #14
  br label %ixgbevf_watchdog_subtask.exit

ixgbevf_watchdog_subtask.exit:                    ; preds = %if.end6.i, %lor.lhs.false.i27.ixgbevf_watchdog_subtask.exit_crit_edge, %ixgbevf_reset_subtask.exit.ixgbevf_watchdog_subtask.exit_crit_edge
  %70 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %state.i, align 4
  %72 = and i32 %71, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool.not.i30 = icmp eq i32 %72, 0
  br i1 %tobool.not.i30, label %lor.lhs.false.i32, label %ixgbevf_watchdog_subtask.exit.ixgbevf_check_hang_subtask.exit_crit_edge

ixgbevf_watchdog_subtask.exit.ixgbevf_check_hang_subtask.exit_crit_edge: ; preds = %ixgbevf_watchdog_subtask.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_check_hang_subtask.exit

lor.lhs.false.i32:                                ; preds = %ixgbevf_watchdog_subtask.exit
  %73 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %state.i, align 4
  %75 = and i32 %74, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool4.not.i31 = icmp eq i32 %75, 0
  br i1 %tobool4.not.i31, label %if.end.i35, label %lor.lhs.false.i32.ixgbevf_check_hang_subtask.exit_crit_edge

lor.lhs.false.i32.ixgbevf_check_hang_subtask.exit_crit_edge: ; preds = %lor.lhs.false.i32
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_check_hang_subtask.exit

if.end.i35:                                       ; preds = %lor.lhs.false.i32
  %76 = ptrtoint ptr %netdev.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %netdev.i, align 4
  %state.i.i34 = getelementptr inbounds %struct.net_device, ptr %77, i32 0, i32 6
  %78 = ptrtoint ptr %state.i.i34 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %state.i.i34, align 4
  %80 = and i32 %79, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.not.i.i = icmp eq i32 %80, 0
  br i1 %tobool.not.i.i, label %for.cond.preheader.i, label %if.end.i35.if.end16.i_crit_edge

if.end.i35.if.end16.i_crit_edge:                  ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16.i

for.cond.preheader.i:                             ; preds = %if.end.i35
  %num_tx_queues.i = getelementptr i8, ptr %work, i32 -648
  %81 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %num_tx_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %82)
  %cmp55.i = icmp sgt i32 %82, 0
  br i1 %cmp55.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.for.cond8.preheader.i_crit_edge

for.cond.preheader.i.for.cond8.preheader.i_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond8.preheader.i

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond8.preheader.i:                            ; preds = %for.body.i.for.cond8.preheader.i_crit_edge, %for.cond.preheader.i.for.cond8.preheader.i_crit_edge
  %num_xdp_queues.i = getelementptr i8, ptr %work, i32 -684
  %83 = ptrtoint ptr %num_xdp_queues.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %num_xdp_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %cmp957.i = icmp sgt i32 %84, 0
  br i1 %cmp957.i, label %for.cond8.preheader.i.for.body10.i_crit_edge, label %for.cond8.preheader.i.if.end16.i_crit_edge

for.cond8.preheader.i.if.end16.i_crit_edge:       ; preds = %for.cond8.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16.i

for.cond8.preheader.i.for.body10.i_crit_edge:     ; preds = %for.cond8.preheader.i
  br label %for.body10.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.056.i = phi i32 [ %inc.i36, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr, i32 0, i32 9, i32 %i.056.i
  %85 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx.i, align 4
  %state7.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %86, i32 0, i32 13
  call void @_set_bit(i32 noundef 2, ptr noundef %state7.i) #14
  %inc.i36 = add nuw nsw i32 %i.056.i, 1
  %87 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %num_tx_queues.i, align 8
  %cmp.i = icmp slt i32 %inc.i36, %88
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.for.cond8.preheader.i_crit_edge

for.body.i.for.cond8.preheader.i_crit_edge:       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond8.preheader.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.body10.i:                                     ; preds = %for.body10.i.for.body10.i_crit_edge, %for.cond8.preheader.i.for.body10.i_crit_edge
  %i.158.i = phi i32 [ %inc14.i, %for.body10.i.for.body10.i_crit_edge ], [ 0, %for.cond8.preheader.i.for.body10.i_crit_edge ]
  %arrayidx11.i = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr, i32 0, i32 7, i32 %i.158.i
  %89 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx11.i, align 4
  %state12.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %90, i32 0, i32 13
  call void @_set_bit(i32 noundef 2, ptr noundef %state12.i) #14
  %inc14.i = add nuw nsw i32 %i.158.i, 1
  %91 = ptrtoint ptr %num_xdp_queues.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %num_xdp_queues.i, align 4
  %cmp9.i = icmp slt i32 %inc14.i, %92
  br i1 %cmp9.i, label %for.body10.i.for.body10.i_crit_edge, label %for.body10.i.if.end16.i_crit_edge

for.body10.i.if.end16.i_crit_edge:                ; preds = %for.body10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16.i

for.body10.i.for.body10.i_crit_edge:              ; preds = %for.body10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body10.i

if.end16.i:                                       ; preds = %for.body10.i.if.end16.i_crit_edge, %for.cond8.preheader.i.if.end16.i_crit_edge, %if.end.i35.if.end16.i_crit_edge
  %num_msix_vectors.i = getelementptr i8, ptr %work, i32 -528
  %93 = ptrtoint ptr %num_msix_vectors.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %num_msix_vectors.i, align 8
  %sub.i = add i32 %94, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp1859.i = icmp sgt i32 %sub.i, 0
  br i1 %cmp1859.i, label %if.end16.i.for.body19.i_crit_edge, label %if.end16.i.for.end29.i_crit_edge

if.end16.i.for.end29.i_crit_edge:                 ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end29.i

if.end16.i.for.body19.i_crit_edge:                ; preds = %if.end16.i
  br label %for.body19.i

for.body19.i:                                     ; preds = %if.end26.i.for.body19.i_crit_edge, %if.end16.i.for.body19.i_crit_edge
  %i.262.i = phi i32 [ %inc28.i, %if.end26.i.for.body19.i_crit_edge ], [ 0, %if.end16.i.for.body19.i_crit_edge ]
  %eics.060.i = phi i32 [ %eics.1.i, %if.end26.i.for.body19.i_crit_edge ], [ 0, %if.end16.i.for.body19.i_crit_edge ]
  %arrayidx20.i = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr, i32 0, i32 1, i32 %i.262.i
  %95 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %arrayidx20.i, align 4
  %rx.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %96, i32 0, i32 4
  %97 = ptrtoint ptr %rx.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %rx.i, align 8
  %tobool21.not.i = icmp eq ptr %98, null
  br i1 %tobool21.not.i, label %lor.lhs.false22.i, label %for.body19.i.if.then25.i_crit_edge

for.body19.i.if.then25.i_crit_edge:               ; preds = %for.body19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then25.i

lor.lhs.false22.i:                                ; preds = %for.body19.i
  %tx.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %96, i32 0, i32 5
  %99 = ptrtoint ptr %tx.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %tx.i, align 8
  %tobool24.not.i = icmp eq ptr %100, null
  br i1 %tobool24.not.i, label %lor.lhs.false22.i.if.end26.i_crit_edge, label %lor.lhs.false22.i.if.then25.i_crit_edge

lor.lhs.false22.i.if.then25.i_crit_edge:          ; preds = %lor.lhs.false22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then25.i

lor.lhs.false22.i.if.end26.i_crit_edge:           ; preds = %lor.lhs.false22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26.i

if.then25.i:                                      ; preds = %lor.lhs.false22.i.if.then25.i_crit_edge, %for.body19.i.if.then25.i_crit_edge
  %shl.i = shl nuw i32 1, %i.262.i
  %or.i = or i32 %shl.i, %eics.060.i
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then25.i, %lor.lhs.false22.i.if.end26.i_crit_edge
  %eics.1.i = phi i32 [ %or.i, %if.then25.i ], [ %eics.060.i, %lor.lhs.false22.i.if.end26.i_crit_edge ]
  %inc28.i = add nuw nsw i32 %i.262.i, 1
  %exitcond.not.i = icmp eq i32 %inc28.i, %sub.i
  br i1 %exitcond.not.i, label %if.end26.i.for.end29.i_crit_edge, label %if.end26.i.for.body19.i_crit_edge

if.end26.i.for.body19.i_crit_edge:                ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body19.i

if.end26.i.for.end29.i_crit_edge:                 ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end29.i

for.end29.i:                                      ; preds = %if.end26.i.for.end29.i_crit_edge, %if.end16.i.for.end29.i_crit_edge
  %eics.0.lcssa.i = phi i32 [ 0, %if.end16.i.for.end29.i_crit_edge ], [ %eics.1.i, %if.end26.i.for.end29.i_crit_edge ]
  %101 = ptrtoint ptr %hw_addr to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile ptr, ptr %hw_addr, align 4
  %tobool.not.i54.i = icmp eq ptr %102, null
  br i1 %tobool.not.i54.i, label %for.end29.i.ixgbevf_check_hang_subtask.exit_crit_edge, label %do.body4.i.i, !prof !308

for.end29.i.ixgbevf_check_hang_subtask.exit_crit_edge: ; preds = %for.end29.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_check_hang_subtask.exit

do.body4.i.i:                                     ; preds = %for.end29.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %103 = call i32 @llvm.bswap.i32(i32 %eics.0.lcssa.i) #14
  %add.ptr.i.i = getelementptr i8, ptr %102, i32 260
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %103) #14, !srcloc !312
  br label %ixgbevf_check_hang_subtask.exit

ixgbevf_check_hang_subtask.exit:                  ; preds = %do.body4.i.i, %for.end29.i.ixgbevf_check_hang_subtask.exit_crit_edge, %lor.lhs.false.i32.ixgbevf_check_hang_subtask.exit_crit_edge, %ixgbevf_watchdog_subtask.exit.ixgbevf_check_hang_subtask.exit_crit_edge
  %104 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile i32, ptr %state.i, align 4
  %106 = and i32 %105, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %106)
  %tobool.not.i38 = icmp eq i32 %106, 0
  br i1 %tobool.not.i38, label %do.body4.i, label %ixgbevf_service_event_complete.exit, !prof !308

do.body4.i:                                       ; preds = %ixgbevf_check_hang_subtask.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 100, 0\0A.popsection", ""() #14, !srcloc !318
  unreachable

ixgbevf_service_event_complete.exit:              ; preds = %ixgbevf_check_hang_subtask.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !319
  call void @_clear_bit(i32 noundef 5, ptr noundef %state.i) #14
  br label %cleanup

cleanup:                                          ; preds = %ixgbevf_service_event_complete.exit, %if.then6, %if.then.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ixgbevf_init_interrupt_scheme(ptr noundef %adapter) unnamed_addr #0 align 64 {
entry:
  %def_q.i = alloca i32, align 4
  %num_tcs.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %hw1.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %def_q.i) #14
  %0 = ptrtoint ptr %def_q.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %def_q.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %num_tcs.i) #14
  %1 = ptrtoint ptr %num_tcs.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %num_tcs.i, align 4
  %num_rx_queues.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 13
  %2 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %num_rx_queues.i, align 8
  %num_tx_queues.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 8
  %3 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %num_tx_queues.i, align 8
  %num_xdp_queues.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 6
  %4 = ptrtoint ptr %num_xdp_queues.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %num_xdp_queues.i, align 4
  %mbx_lock.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 40
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock.i) #14
  %call.i = call i32 @ixgbevf_get_queues(ptr noundef %hw1.i, ptr noundef nonnull %num_tcs.i, ptr noundef nonnull %def_q.i) #14
  call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.ixgbevf_set_num_queues.exit_crit_edge

entry.ixgbevf_set_num_queues.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_set_num_queues.exit

if.end.i:                                         ; preds = %entry
  %5 = ptrtoint ptr %num_tcs.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_tcs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp.i = icmp ugt i32 %6, 1
  br i1 %cmp.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %num_rx_queues.i, align 8
  br label %ixgbevf_set_num_queues.exit

if.else.i:                                        ; preds = %if.end.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @__num_online_cpus, i32 noundef 4) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__num_online_cpus to i32))
  %8 = load volatile i32, ptr @__num_online_cpus, align 4
  %conv6.i = and i32 %8, 65534
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv6.i)
  %cmp8.i = icmp eq i32 %conv6.i, 0
  %phi.cast.i = trunc i32 %8 to i16
  %cond.i = select i1 %cmp8.i, i16 %phi.cast.i, i16 2
  %api_version.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 10
  %9 = ptrtoint ptr %api_version.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %api_version.i, align 4
  %.off.i = add i32 %10, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 5
  br i1 %switch.i, label %sw.bb.i, label %if.else.i.ixgbevf_set_num_queues.exit_crit_edge

if.else.i.ixgbevf_set_num_queues.exit_crit_edge:  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_set_num_queues.exit

sw.bb.i:                                          ; preds = %if.else.i
  %xdp_prog.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 24
  %11 = ptrtoint ptr %xdp_prog.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %xdp_prog.i, align 8
  %tobool13.not.i = icmp eq ptr %12, null
  br i1 %tobool13.not.i, label %sw.bb.i.if.end23.i_crit_edge, label %land.lhs.true.i

sw.bb.i.if.end23.i_crit_edge:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  %max_tx_queues.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 26, i32 2, i32 6
  %13 = ptrtoint ptr %max_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %max_tx_queues.i, align 4
  %conv14.i = zext i16 %cond.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %conv14.i)
  %cmp15.i = icmp eq i32 %14, %conv14.i
  %spec.select.i = select i1 %cmp15.i, i16 1, i16 %cond.i
  br label %if.end23.i

if.end23.i:                                       ; preds = %land.lhs.true.i, %sw.bb.i.if.end23.i_crit_edge
  %rss.0.i = phi i16 [ %cond.i, %sw.bb.i.if.end23.i_crit_edge ], [ %spec.select.i, %land.lhs.true.i ]
  %conv24.i = zext i16 %rss.0.i to i32
  %15 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv24.i, ptr %num_rx_queues.i, align 8
  %16 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %conv24.i, ptr %num_tx_queues.i, align 8
  %spec.select59.i = select i1 %tobool13.not.i, i32 0, i32 %conv24.i
  %17 = ptrtoint ptr %num_xdp_queues.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %spec.select59.i, ptr %num_xdp_queues.i, align 4
  br label %ixgbevf_set_num_queues.exit

ixgbevf_set_num_queues.exit:                      ; preds = %if.end23.i, %if.else.i.ixgbevf_set_num_queues.exit_crit_edge, %if.then3.i, %entry.ixgbevf_set_num_queues.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %num_tcs.i) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %def_q.i) #14
  %18 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_rx_queues.i, align 8
  %20 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_tx_queues.i, align 8
  %22 = call i32 @llvm.smax.i32(i32 %19, i32 %21) #14
  %call.i.i.i.i80 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @__num_online_cpus, i32 noundef 4) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__num_online_cpus to i32))
  %23 = load volatile i32, ptr @__num_online_cpus, align 4
  %24 = call i32 @llvm.smin.i32(i32 %22, i32 %23) #14
  %add.i = add i32 %24, 1
  %25 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %add.i, i32 8) #14
  %26 = extractvalue { i32, i1 } %25, 1
  br i1 %26, label %kcalloc.exit.thread.i, label %if.end7.i.i.i, !prof !308

kcalloc.exit.thread.i:                            ; preds = %ixgbevf_set_num_queues.exit
  call void @__sanitizer_cov_trace_pc() #16
  %msix_entries32.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  br label %do.body1.sink.split

if.end7.i.i.i:                                    ; preds = %ixgbevf_set_num_queues.exit
  %27 = extractvalue { i32, i1 } %25, 0
  %call8.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %27, i32 noundef 3520) #18
  %msix_entries.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  %28 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %call8.i.i.i, ptr %msix_entries.i, align 8
  %tobool.not.i81 = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool.not.i81, label %if.end7.i.i.i.do.body1_crit_edge, label %for.cond.preheader.i

if.end7.i.i.i.do.body1_crit_edge:                 ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body1

for.cond.preheader.i:                             ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %24)
  %cmp934.i = icmp ult i32 %24, 2147483647
  br i1 %cmp934.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.for.end.i_crit_edge

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %vector.035.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %conv.i = trunc i32 %vector.035.i to i16
  %29 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %msix_entries.i, align 8
  %entry11.i = getelementptr %struct.msix_entry, ptr %30, i32 %vector.035.i, i32 1
  %31 = ptrtoint ptr %entry11.i to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %conv.i, ptr %entry11.i, align 4
  %inc.i = add nuw nsw i32 %vector.035.i, 1
  %exitcond.not.i = icmp eq i32 %vector.035.i, %24
  br i1 %exitcond.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %pdev.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 25
  %32 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pdev.i.i, align 4
  %34 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %msix_entries.i, align 8
  %call.i.i = call i32 @pci_enable_msix_range(ptr noundef %33, ptr noundef %35, i32 noundef 2, i32 noundef %add.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %do.end.i.i, label %if.end9

do.end.i.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pdev.i.i, align 4
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i.i, ptr noundef nonnull @.str.115) #17
  %38 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %msix_entries.i, align 8
  call void @kfree(ptr noundef %39) #14
  br label %do.body1.sink.split

do.body1.sink.split:                              ; preds = %do.end.i.i, %kcalloc.exit.thread.i
  %msix_entries32.i.sink = phi ptr [ %msix_entries32.i, %kcalloc.exit.thread.i ], [ %msix_entries.i, %do.end.i.i ]
  %retval.0.i82.ph.ph = phi i32 [ -12, %kcalloc.exit.thread.i ], [ %call.i.i, %do.end.i.i ]
  %40 = ptrtoint ptr %msix_entries32.i.sink to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %msix_entries32.i.sink, align 8
  br label %do.body1

do.body1:                                         ; preds = %do.body1.sink.split, %if.end7.i.i.i.do.body1_crit_edge
  %retval.0.i82.ph = phi i32 [ -12, %if.end7.i.i.i.do.body1_crit_edge ], [ %retval.0.i82.ph.ph, %do.body1.sink.split ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug666, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_init_interrupt_scheme, %if.then6)) #14
          to label %cleanup [label %if.then6], !srcloc !314

if.then6:                                         ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #16
  %41 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %hw1.i, align 8
  %netdev = getelementptr inbounds %struct.ixgbevf_adapter, ptr %42, i32 0, i32 23
  %43 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %netdev, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug666, ptr noundef %44, ptr noundef nonnull @.str.110) #14
  br label %cleanup

if.end9:                                          ; preds = %for.end.i
  %num_msix_vectors.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 17
  %45 = ptrtoint ptr %num_msix_vectors.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %call.i.i, ptr %num_msix_vectors.i.i, align 8
  %sub.i = add nsw i32 %call.i.i, -1
  %46 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %num_rx_queues.i, align 8
  %48 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %num_tx_queues.i, align 8
  %50 = ptrtoint ptr %num_xdp_queues.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %num_xdp_queues.i, align 4
  %add.i86 = add i32 %49, %47
  %add1.i = add i32 %add.i86, %51
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %add1.i)
  %cmp.not.i.not = icmp sgt i32 %call.i.i, %add1.i
  br i1 %cmp.not.i.not, label %for.cond.preheader.i87, label %if.end9.if.end8.i_crit_edge

if.end9.if.end8.i_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

for.cond.preheader.i87:                           ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.not201.i = icmp eq i32 %47, 0
  br i1 %tobool.not201.i, label %for.cond.preheader.i87.if.end8.i_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i87.if.end8.i_crit_edge:       ; preds = %for.cond.preheader.i87
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i87
  %netdev.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 23
  %rx_ring_count.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 34
  br label %for.body.i88

for.body.i88:                                     ; preds = %for.inc.i.for.body.i88_crit_edge, %for.body.lr.ph.i
  %v_idx.0205.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i117, %for.inc.i.for.body.i88_crit_edge ]
  %rxr_idx.0204.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %add7175.i, %for.inc.i.for.body.i88_crit_edge ]
  %rxr_remaining.0203.i = phi i32 [ %47, %for.body.lr.ph.i ], [ %sub6174.i, %for.inc.i.for.body.i88_crit_edge ]
  %q_vectors.0202.i = phi i32 [ %sub.i, %for.body.lr.ph.i ], [ %add2.i, %for.inc.i.for.body.i88_crit_edge ]
  %add2.i = add i32 %q_vectors.0202.i, -1
  %sub3.i = add i32 %add2.i, %rxr_remaining.0203.i
  %div.i = sdiv i32 %sub3.i, %q_vectors.0202.i
  %mul.i.i = mul i32 %div.i, 384
  %add3.i.i = add i32 %mul.i.i, 512
  %call9.i.i.i.i114 = call noalias align 128 ptr @__kmalloc(i32 noundef %add3.i.i, i32 noundef 3520) #18
  %tobool.not.i.i = icmp eq ptr %call9.i.i.i.i114, null
  br i1 %tobool.not.i.i, label %for.body.i88.err_out.i_crit_edge, label %if.end.i.i116

for.body.i88.err_out.i_crit_edge:                 ; preds = %for.body.i88
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_out.i

if.end.i.i116:                                    ; preds = %for.body.i88
  %52 = ptrtoint ptr %netdev.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %netdev.i.i, align 4
  %napi.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i.i114, i32 0, i32 3
  call void @netif_napi_add(ptr noundef %53, ptr noundef %napi.i.i, ptr noundef nonnull @ixgbevf_poll, i32 noundef 64) #14
  %arrayidx.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %v_idx.0205.i
  %54 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %call9.i.i.i.i114, ptr %arrayidx.i.i, align 4
  %55 = ptrtoint ptr %call9.i.i.i.i114 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %adapter, ptr %call9.i.i.i.i114, align 128
  %conv.i.i = trunc i32 %v_idx.0205.i to i16
  %v_idx6.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i.i114, i32 0, i32 1
  %56 = ptrtoint ptr %v_idx6.i.i to i32
  call void @__asan_store2_noabort(i32 %56)
  store i16 %conv.i.i, ptr %v_idx6.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %div.i)
  %tobool41.not153.i.i = icmp eq i32 %div.i, 0
  br i1 %tobool41.not153.i.i, label %if.end.i.i116.for.inc.i_crit_edge, label %while.body42.lr.ph.i.i

if.end.i.i116.for.inc.i_crit_edge:                ; preds = %if.end.i.i116
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

while.body42.lr.ph.i.i:                           ; preds = %if.end.i.i116
  %ring7.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i.i114, i32 0, i32 9
  %rx.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i.i114, i32 0, i32 4
  %count.i136.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i.i114, i32 0, i32 4, i32 3
  br label %while.body42.i.i

while.body42.i.i:                                 ; preds = %while.body42.i.i.while.body42.i.i_crit_edge, %while.body42.lr.ph.i.i
  %ring.2156.i.i = phi ptr [ %ring7.i.i, %while.body42.lr.ph.i.i ], [ %incdec.ptr57.i.i, %while.body42.i.i.while.body42.i.i_crit_edge ]
  %rxr_idx.addr.0155.i.i = phi i32 [ %rxr_idx.0204.i, %while.body42.lr.ph.i.i ], [ %inc56.i.i, %while.body42.i.i.while.body42.i.i_crit_edge ]
  %rxr_count.addr.0154.i.i = phi i32 [ %div.i, %while.body42.lr.ph.i.i ], [ %dec55.i.i, %while.body42.i.i.while.body42.i.i_crit_edge ]
  %57 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %pdev.i.i, align 4
  %dev44.i.i = getelementptr inbounds %struct.pci_dev, ptr %58, i32 0, i32 44
  %dev45.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i.i, i32 0, i32 4
  %59 = ptrtoint ptr %dev45.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %dev44.i.i, ptr %dev45.i.i, align 16
  %60 = ptrtoint ptr %netdev.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %netdev.i.i, align 4
  %netdev47.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i.i, i32 0, i32 2
  %62 = ptrtoint ptr %netdev47.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %61, ptr %netdev47.i.i, align 8
  %q_vector48.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i.i, i32 0, i32 1
  %63 = ptrtoint ptr %q_vector48.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %call9.i.i.i.i114, ptr %q_vector48.i.i, align 4
  %64 = ptrtoint ptr %rx.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %rx.i.i, align 8
  %66 = ptrtoint ptr %ring.2156.i.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %65, ptr %ring.2156.i.i, align 128
  store ptr %ring.2156.i.i, ptr %rx.i.i, align 8
  %67 = ptrtoint ptr %count.i136.i.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %count.i136.i.i, align 4
  %inc.i137.i.i = add i8 %68, 1
  store i8 %inc.i137.i.i, ptr %count.i136.i.i, align 4
  %69 = ptrtoint ptr %rx_ring_count.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %rx_ring_count.i.i, align 8
  %conv49.i.i = trunc i32 %70 to i16
  %count50.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i.i, i32 0, i32 8
  %71 = ptrtoint ptr %count50.i.i to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 %conv49.i.i, ptr %count50.i.i, align 32
  %queue_index51.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i.i, i32 0, i32 22
  %72 = ptrtoint ptr %queue_index51.i.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %rxr_idx.addr.0155.i.i, ptr %queue_index51.i.i, align 4
  %conv52.i.i = trunc i32 %rxr_idx.addr.0155.i.i to i16
  %reg_idx53.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i.i, i32 0, i32 21
  %73 = ptrtoint ptr %reg_idx53.i.i to i32
  call void @__asan_store2_noabort(i32 %73)
  store i16 %conv52.i.i, ptr %reg_idx53.i.i, align 16
  %arrayidx54.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %rxr_idx.addr.0155.i.i
  %74 = ptrtoint ptr %arrayidx54.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %ring.2156.i.i, ptr %arrayidx54.i.i, align 4
  %dec55.i.i = add i32 %rxr_count.addr.0154.i.i, -1
  %inc56.i.i = add i32 %rxr_idx.addr.0155.i.i, 1
  %incdec.ptr57.i.i = getelementptr %struct.ixgbevf_ring, ptr %ring.2156.i.i, i32 1
  %tobool41.not.i.i = icmp eq i32 %dec55.i.i, 0
  br i1 %tobool41.not.i.i, label %while.body42.i.i.for.inc.i_crit_edge, label %while.body42.i.i.while.body42.i.i_crit_edge

while.body42.i.i.while.body42.i.i_crit_edge:      ; preds = %while.body42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body42.i.i

while.body42.i.i.for.inc.i_crit_edge:             ; preds = %while.body42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %while.body42.i.i.for.inc.i_crit_edge, %if.end.i.i116.for.inc.i_crit_edge
  %sub6174.i = sub i32 %rxr_remaining.0203.i, %div.i
  %add7175.i = add i32 %div.i, %rxr_idx.0204.i
  %inc.i117 = add i32 %v_idx.0205.i, 1
  %tobool.not.i118 = icmp eq i32 %sub6174.i, 0
  br i1 %tobool.not.i118, label %for.inc.i.if.end8.i_crit_edge, label %for.inc.i.for.body.i88_crit_edge

for.inc.i.for.body.i88_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i88

for.inc.i.if.end8.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

if.end8.i:                                        ; preds = %for.inc.i.if.end8.i_crit_edge, %for.cond.preheader.i87.if.end8.i_crit_edge, %if.end9.if.end8.i_crit_edge
  %q_vectors.1.i = phi i32 [ %sub.i, %if.end9.if.end8.i_crit_edge ], [ %sub.i, %for.cond.preheader.i87.if.end8.i_crit_edge ], [ %add2.i, %for.inc.i.if.end8.i_crit_edge ]
  %rxr_remaining.2.i = phi i32 [ %47, %if.end9.if.end8.i_crit_edge ], [ 0, %for.cond.preheader.i87.if.end8.i_crit_edge ], [ 0, %for.inc.i.if.end8.i_crit_edge ]
  %rxr_idx.2.i = phi i32 [ 0, %if.end9.if.end8.i_crit_edge ], [ 0, %for.cond.preheader.i87.if.end8.i_crit_edge ], [ %add7175.i, %for.inc.i.if.end8.i_crit_edge ]
  %v_idx.1.i = phi i32 [ 0, %if.end9.if.end8.i_crit_edge ], [ 0, %for.cond.preheader.i87.if.end8.i_crit_edge ], [ %inc.i117, %for.inc.i.if.end8.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %q_vectors.1.i)
  %tobool10.not209.i = icmp eq i32 %q_vectors.1.i, 0
  br i1 %tobool10.not209.i, label %if.end8.i.do.body37_crit_edge, label %for.body11.lr.ph.i

if.end8.i.do.body37_crit_edge:                    ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body37

for.body11.lr.ph.i:                               ; preds = %if.end8.i
  %netdev.i132.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 23
  %tx_ring_count.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 32
  %rx_ring_count.i143.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 34
  br label %for.body11.i

for.body11.i:                                     ; preds = %for.inc37.i.for.body11.i_crit_edge, %for.body11.lr.ph.i
  %v_idx.2220.i = phi i32 [ %v_idx.1.i, %for.body11.lr.ph.i ], [ %inc38.i, %for.inc37.i.for.body11.i_crit_edge ]
  %xdp_idx.0218.i = phi i32 [ 0, %for.body11.lr.ph.i ], [ %add31.i, %for.inc37.i.for.body11.i_crit_edge ]
  %txr_idx.0216.i = phi i32 [ 0, %for.body11.lr.ph.i ], [ %add29.i, %for.inc37.i.for.body11.i_crit_edge ]
  %rxr_idx.3214.i = phi i32 [ %rxr_idx.2.i, %for.body11.lr.ph.i ], [ %add27.i, %for.inc37.i.for.body11.i_crit_edge ]
  %xdp_remaining.0213.i = phi i32 [ %51, %for.body11.lr.ph.i ], [ %sub30.i, %for.inc37.i.for.body11.i_crit_edge ]
  %txr_remaining.0212.i = phi i32 [ %49, %for.body11.lr.ph.i ], [ %sub28.i, %for.inc37.i.for.body11.i_crit_edge ]
  %rxr_remaining.3211.i = phi i32 [ %rxr_remaining.2.i, %for.body11.lr.ph.i ], [ %sub26.i, %for.inc37.i.for.body11.i_crit_edge ]
  %q_vectors.2210.i = phi i32 [ %q_vectors.1.i, %for.body11.lr.ph.i ], [ %add13.i, %for.inc37.i.for.body11.i_crit_edge ]
  %add13.i = add i32 %q_vectors.2210.i, -1
  %sub14.i = add i32 %add13.i, %rxr_remaining.3211.i
  %div15.i = sdiv i32 %sub14.i, %q_vectors.2210.i
  %sub17.i = add i32 %add13.i, %txr_remaining.0212.i
  %div18.i = sdiv i32 %sub17.i, %q_vectors.2210.i
  %sub20.i = add i32 %add13.i, %xdp_remaining.0213.i
  %div21.i = sdiv i32 %sub20.i, %q_vectors.2210.i
  %add1.i.i = add i32 %div18.i, %div15.i
  %add2.i.i = add i32 %add1.i.i, %div21.i
  %mul.i99.i = mul i32 %add2.i.i, 384
  %add3.i100.i = add i32 %mul.i99.i, 512
  %call9.i.i.i126.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add3.i100.i, i32 noundef 3520) #18
  %tobool.not.i129.i = icmp eq ptr %call9.i.i.i126.i, null
  br i1 %tobool.not.i129.i, label %for.body11.i.err_out.i_crit_edge, label %if.end.i138.i

for.body11.i.err_out.i_crit_edge:                 ; preds = %for.body11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_out.i

if.end.i138.i:                                    ; preds = %for.body11.i
  %add.i.i = add i32 %txr_idx.0216.i, %xdp_idx.0218.i
  %75 = ptrtoint ptr %netdev.i132.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %netdev.i132.i, align 4
  %napi.i133.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 3
  call void @netif_napi_add(ptr noundef %76, ptr noundef %napi.i133.i, ptr noundef nonnull @ixgbevf_poll, i32 noundef 64) #14
  %arrayidx.i134.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %v_idx.2220.i
  %77 = ptrtoint ptr %arrayidx.i134.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %call9.i.i.i126.i, ptr %arrayidx.i134.i, align 4
  %78 = ptrtoint ptr %call9.i.i.i126.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %adapter, ptr %call9.i.i.i126.i, align 128
  %conv.i135.i = trunc i32 %v_idx.2220.i to i16
  %v_idx6.i136.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 1
  %79 = ptrtoint ptr %v_idx6.i136.i to i32
  call void @__asan_store2_noabort(i32 %79)
  store i16 %conv.i135.i, ptr %v_idx6.i136.i, align 4
  %ring7.i137.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %div18.i)
  %tobool8.not141.i.i = icmp eq i32 %div18.i, 0
  br i1 %tobool8.not141.i.i, label %if.end.i138.i.while.cond18.preheader.i.i_crit_edge, label %while.body.lr.ph.i.i

if.end.i138.i.while.cond18.preheader.i.i_crit_edge: ; preds = %if.end.i138.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond18.preheader.i.i

while.body.lr.ph.i.i:                             ; preds = %if.end.i138.i
  %tx.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 5
  %count.i.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 5, i32 3
  br label %while.body.i.i

while.cond18.preheader.i.i:                       ; preds = %while.body.i.i.while.cond18.preheader.i.i_crit_edge, %if.end.i138.i.while.cond18.preheader.i.i_crit_edge
  %reg_idx.0.lcssa.i.i = phi i32 [ %add.i.i, %if.end.i138.i.while.cond18.preheader.i.i_crit_edge ], [ %inc17.i.i, %while.body.i.i.while.cond18.preheader.i.i_crit_edge ]
  %ring.0.lcssa.i.i = phi ptr [ %ring7.i137.i, %if.end.i138.i.while.cond18.preheader.i.i_crit_edge ], [ %incdec.ptr.i.i, %while.body.i.i.while.cond18.preheader.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %div21.i)
  %tobool19.not147.i.i = icmp eq i32 %div21.i, 0
  br i1 %tobool19.not147.i.i, label %while.cond18.preheader.i.i.while.cond40.preheader.i.i_crit_edge, label %while.body20.lr.ph.i.i

while.cond18.preheader.i.i.while.cond40.preheader.i.i_crit_edge: ; preds = %while.cond18.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond40.preheader.i.i

while.body20.lr.ph.i.i:                           ; preds = %while.cond18.preheader.i.i
  %tx27.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 5
  %count.i134.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 5, i32 3
  br label %while.body20.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %while.body.lr.ph.i.i
  %txr_count.addr.0145.i.i = phi i32 [ %div18.i, %while.body.lr.ph.i.i ], [ %dec.i.i, %while.body.i.i.while.body.i.i_crit_edge ]
  %ring.0144.i.i = phi ptr [ %ring7.i137.i, %while.body.lr.ph.i.i ], [ %incdec.ptr.i.i, %while.body.i.i.while.body.i.i_crit_edge ]
  %reg_idx.0143.i.i = phi i32 [ %add.i.i, %while.body.lr.ph.i.i ], [ %inc17.i.i, %while.body.i.i.while.body.i.i_crit_edge ]
  %txr_idx.addr.0142.i.i = phi i32 [ %txr_idx.0216.i, %while.body.lr.ph.i.i ], [ %inc.i.i, %while.body.i.i.while.body.i.i_crit_edge ]
  %80 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %pdev.i.i, align 4
  %dev.i.i120 = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  %dev9.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0144.i.i, i32 0, i32 4
  %82 = ptrtoint ptr %dev9.i.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %dev.i.i120, ptr %dev9.i.i, align 16
  %83 = ptrtoint ptr %netdev.i132.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %netdev.i132.i, align 4
  %netdev11.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0144.i.i, i32 0, i32 2
  %85 = ptrtoint ptr %netdev11.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %84, ptr %netdev11.i.i, align 8
  %q_vector12.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0144.i.i, i32 0, i32 1
  %86 = ptrtoint ptr %q_vector12.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %call9.i.i.i126.i, ptr %q_vector12.i.i, align 4
  %87 = ptrtoint ptr %tx.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %tx.i.i, align 8
  %89 = ptrtoint ptr %ring.0144.i.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %88, ptr %ring.0144.i.i, align 128
  store ptr %ring.0144.i.i, ptr %tx.i.i, align 8
  %90 = ptrtoint ptr %count.i.i.i to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %count.i.i.i, align 4
  %inc.i.i.i = add i8 %91, 1
  store i8 %inc.i.i.i, ptr %count.i.i.i, align 4
  %92 = ptrtoint ptr %tx_ring_count.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %tx_ring_count.i.i, align 8
  %conv13.i.i = trunc i32 %93 to i16
  %count.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0144.i.i, i32 0, i32 8
  %94 = ptrtoint ptr %count.i.i to i32
  call void @__asan_store2_noabort(i32 %94)
  store i16 %conv13.i.i, ptr %count.i.i, align 32
  %queue_index.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0144.i.i, i32 0, i32 22
  %95 = ptrtoint ptr %queue_index.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %txr_idx.addr.0142.i.i, ptr %queue_index.i.i, align 4
  %conv14.i.i = trunc i32 %reg_idx.0143.i.i to i16
  %reg_idx15.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0144.i.i, i32 0, i32 21
  %96 = ptrtoint ptr %reg_idx15.i.i to i32
  call void @__asan_store2_noabort(i32 %96)
  store i16 %conv14.i.i, ptr %reg_idx15.i.i, align 16
  %arrayidx16.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %txr_idx.addr.0142.i.i
  %97 = ptrtoint ptr %arrayidx16.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %ring.0144.i.i, ptr %arrayidx16.i.i, align 4
  %dec.i.i = add i32 %txr_count.addr.0145.i.i, -1
  %inc.i.i = add i32 %txr_idx.addr.0142.i.i, 1
  %inc17.i.i = add i32 %reg_idx.0143.i.i, 1
  %incdec.ptr.i.i = getelementptr %struct.ixgbevf_ring, ptr %ring.0144.i.i, i32 1
  %tobool8.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool8.not.i.i, label %while.body.i.i.while.cond18.preheader.i.i_crit_edge, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

while.body.i.i.while.cond18.preheader.i.i_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond18.preheader.i.i

while.cond40.preheader.i.i:                       ; preds = %while.body20.i.i.while.cond40.preheader.i.i_crit_edge, %while.cond18.preheader.i.i.while.cond40.preheader.i.i_crit_edge
  %ring.1.lcssa.i.i = phi ptr [ %ring.0.lcssa.i.i, %while.cond18.preheader.i.i.while.cond40.preheader.i.i_crit_edge ], [ %incdec.ptr38.i.i, %while.body20.i.i.while.cond40.preheader.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %div15.i)
  %tobool41.not153.i139.i = icmp eq i32 %div15.i, 0
  br i1 %tobool41.not153.i139.i, label %while.cond40.preheader.i.i.for.inc37.i_crit_edge, label %while.body42.lr.ph.i144.i

while.cond40.preheader.i.i.for.inc37.i_crit_edge: ; preds = %while.cond40.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc37.i

while.body42.lr.ph.i144.i:                        ; preds = %while.cond40.preheader.i.i
  %rx.i141.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 4
  %count.i136.i142.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %call9.i.i.i126.i, i32 0, i32 4, i32 3
  br label %while.body42.i163.i

while.body20.i.i:                                 ; preds = %while.body20.i.i.while.body20.i.i_crit_edge, %while.body20.lr.ph.i.i
  %ring.1151.i.i = phi ptr [ %ring.0.lcssa.i.i, %while.body20.lr.ph.i.i ], [ %incdec.ptr38.i.i, %while.body20.i.i.while.body20.i.i_crit_edge ]
  %reg_idx.1150.i.i = phi i32 [ %reg_idx.0.lcssa.i.i, %while.body20.lr.ph.i.i ], [ %inc37.i.i, %while.body20.i.i.while.body20.i.i_crit_edge ]
  %xdp_idx.addr.0149.i.i = phi i32 [ %xdp_idx.0218.i, %while.body20.lr.ph.i.i ], [ %inc36.i.i, %while.body20.i.i.while.body20.i.i_crit_edge ]
  %xdp_count.addr.0148.i.i = phi i32 [ %div21.i, %while.body20.lr.ph.i.i ], [ %dec35.i.i, %while.body20.i.i.while.body20.i.i_crit_edge ]
  %98 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %pdev.i.i, align 4
  %dev22.i.i = getelementptr inbounds %struct.pci_dev, ptr %99, i32 0, i32 44
  %dev23.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1151.i.i, i32 0, i32 4
  %100 = ptrtoint ptr %dev23.i.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %dev22.i.i, ptr %dev23.i.i, align 16
  %101 = ptrtoint ptr %netdev.i132.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %netdev.i132.i, align 4
  %netdev25.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1151.i.i, i32 0, i32 2
  %103 = ptrtoint ptr %netdev25.i.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store ptr %102, ptr %netdev25.i.i, align 8
  %q_vector26.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1151.i.i, i32 0, i32 1
  %104 = ptrtoint ptr %q_vector26.i.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store ptr %call9.i.i.i126.i, ptr %q_vector26.i.i, align 4
  %105 = ptrtoint ptr %tx27.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %tx27.i.i, align 8
  %107 = ptrtoint ptr %ring.1151.i.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %106, ptr %ring.1151.i.i, align 128
  store ptr %ring.1151.i.i, ptr %tx27.i.i, align 8
  %108 = ptrtoint ptr %count.i134.i.i to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %count.i134.i.i, align 4
  %inc.i135.i.i = add i8 %109, 1
  store i8 %inc.i135.i.i, ptr %count.i134.i.i, align 4
  %110 = ptrtoint ptr %tx_ring_count.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %tx_ring_count.i.i, align 8
  %conv29.i.i = trunc i32 %111 to i16
  %count30.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1151.i.i, i32 0, i32 8
  %112 = ptrtoint ptr %count30.i.i to i32
  call void @__asan_store2_noabort(i32 %112)
  store i16 %conv29.i.i, ptr %count30.i.i, align 32
  %queue_index31.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1151.i.i, i32 0, i32 22
  %113 = ptrtoint ptr %queue_index31.i.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %xdp_idx.addr.0149.i.i, ptr %queue_index31.i.i, align 4
  %conv32.i.i = trunc i32 %reg_idx.1150.i.i to i16
  %reg_idx33.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1151.i.i, i32 0, i32 21
  %114 = ptrtoint ptr %reg_idx33.i.i to i32
  call void @__asan_store2_noabort(i32 %114)
  store i16 %conv32.i.i, ptr %reg_idx33.i.i, align 16
  %state.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1151.i.i, i32 0, i32 13
  call void @_set_bit(i32 noundef 4, ptr noundef %state.i.i) #14
  %arrayidx34.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %xdp_idx.addr.0149.i.i
  %115 = ptrtoint ptr %arrayidx34.i.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr %ring.1151.i.i, ptr %arrayidx34.i.i, align 4
  %dec35.i.i = add i32 %xdp_count.addr.0148.i.i, -1
  %inc36.i.i = add i32 %xdp_idx.addr.0149.i.i, 1
  %inc37.i.i = add i32 %reg_idx.1150.i.i, 1
  %incdec.ptr38.i.i = getelementptr %struct.ixgbevf_ring, ptr %ring.1151.i.i, i32 1
  %tobool19.not.i.i = icmp eq i32 %dec35.i.i, 0
  br i1 %tobool19.not.i.i, label %while.body20.i.i.while.cond40.preheader.i.i_crit_edge, label %while.body20.i.i.while.body20.i.i_crit_edge

while.body20.i.i.while.body20.i.i_crit_edge:      ; preds = %while.body20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body20.i.i

while.body20.i.i.while.cond40.preheader.i.i_crit_edge: ; preds = %while.body20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond40.preheader.i.i

while.body42.i163.i:                              ; preds = %while.body42.i163.i.while.body42.i163.i_crit_edge, %while.body42.lr.ph.i144.i
  %ring.2156.i145.i = phi ptr [ %ring.1.lcssa.i.i, %while.body42.lr.ph.i144.i ], [ %incdec.ptr57.i161.i, %while.body42.i163.i.while.body42.i163.i_crit_edge ]
  %rxr_idx.addr.0155.i146.i = phi i32 [ %rxr_idx.3214.i, %while.body42.lr.ph.i144.i ], [ %inc56.i160.i, %while.body42.i163.i.while.body42.i163.i_crit_edge ]
  %rxr_count.addr.0154.i147.i = phi i32 [ %div15.i, %while.body42.lr.ph.i144.i ], [ %dec55.i159.i, %while.body42.i163.i.while.body42.i163.i_crit_edge ]
  %116 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %pdev.i.i, align 4
  %dev44.i148.i = getelementptr inbounds %struct.pci_dev, ptr %117, i32 0, i32 44
  %dev45.i149.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i145.i, i32 0, i32 4
  %118 = ptrtoint ptr %dev45.i149.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %dev44.i148.i, ptr %dev45.i149.i, align 16
  %119 = ptrtoint ptr %netdev.i132.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %netdev.i132.i, align 4
  %netdev47.i150.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i145.i, i32 0, i32 2
  %121 = ptrtoint ptr %netdev47.i150.i to i32
  call void @__asan_store4_noabort(i32 %121)
  store ptr %120, ptr %netdev47.i150.i, align 8
  %q_vector48.i151.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i145.i, i32 0, i32 1
  %122 = ptrtoint ptr %q_vector48.i151.i to i32
  call void @__asan_store4_noabort(i32 %122)
  store ptr %call9.i.i.i126.i, ptr %q_vector48.i151.i, align 4
  %123 = ptrtoint ptr %rx.i141.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %rx.i141.i, align 8
  %125 = ptrtoint ptr %ring.2156.i145.i to i32
  call void @__asan_store4_noabort(i32 %125)
  store ptr %124, ptr %ring.2156.i145.i, align 128
  store ptr %ring.2156.i145.i, ptr %rx.i141.i, align 8
  %126 = ptrtoint ptr %count.i136.i142.i to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %count.i136.i142.i, align 4
  %inc.i137.i152.i = add i8 %127, 1
  store i8 %inc.i137.i152.i, ptr %count.i136.i142.i, align 4
  %128 = ptrtoint ptr %rx_ring_count.i143.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %rx_ring_count.i143.i, align 8
  %conv49.i153.i = trunc i32 %129 to i16
  %count50.i154.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i145.i, i32 0, i32 8
  %130 = ptrtoint ptr %count50.i154.i to i32
  call void @__asan_store2_noabort(i32 %130)
  store i16 %conv49.i153.i, ptr %count50.i154.i, align 32
  %queue_index51.i155.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i145.i, i32 0, i32 22
  %131 = ptrtoint ptr %queue_index51.i155.i to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 %rxr_idx.addr.0155.i146.i, ptr %queue_index51.i155.i, align 4
  %conv52.i156.i = trunc i32 %rxr_idx.addr.0155.i146.i to i16
  %reg_idx53.i157.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.2156.i145.i, i32 0, i32 21
  %132 = ptrtoint ptr %reg_idx53.i157.i to i32
  call void @__asan_store2_noabort(i32 %132)
  store i16 %conv52.i156.i, ptr %reg_idx53.i157.i, align 16
  %arrayidx54.i158.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %rxr_idx.addr.0155.i146.i
  %133 = ptrtoint ptr %arrayidx54.i158.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store ptr %ring.2156.i145.i, ptr %arrayidx54.i158.i, align 4
  %dec55.i159.i = add i32 %rxr_count.addr.0154.i147.i, -1
  %inc56.i160.i = add i32 %rxr_idx.addr.0155.i146.i, 1
  %incdec.ptr57.i161.i = getelementptr %struct.ixgbevf_ring, ptr %ring.2156.i145.i, i32 1
  %tobool41.not.i162.i = icmp eq i32 %dec55.i159.i, 0
  br i1 %tobool41.not.i162.i, label %while.body42.i163.i.for.inc37.i_crit_edge, label %while.body42.i163.i.while.body42.i163.i_crit_edge

while.body42.i163.i.while.body42.i163.i_crit_edge: ; preds = %while.body42.i163.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body42.i163.i

while.body42.i163.i.for.inc37.i_crit_edge:        ; preds = %while.body42.i163.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc37.i

for.inc37.i:                                      ; preds = %while.body42.i163.i.for.inc37.i_crit_edge, %while.cond40.preheader.i.i.for.inc37.i_crit_edge
  %sub26.i = sub i32 %rxr_remaining.3211.i, %div15.i
  %add27.i = add i32 %div15.i, %rxr_idx.3214.i
  %sub28.i = sub i32 %txr_remaining.0212.i, %div18.i
  %add29.i = add i32 %div18.i, %txr_idx.0216.i
  %sub30.i = sub i32 %xdp_remaining.0213.i, %div21.i
  %add31.i = add i32 %div21.i, %xdp_idx.0218.i
  %inc38.i = add i32 %v_idx.2220.i, 1
  %tobool10.not.i = icmp eq i32 %add13.i, 0
  br i1 %tobool10.not.i, label %for.inc37.i.do.body37_crit_edge, label %for.inc37.i.for.body11.i_crit_edge

for.inc37.i.for.body11.i_crit_edge:               ; preds = %for.inc37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body11.i

for.inc37.i.do.body37_crit_edge:                  ; preds = %for.inc37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body37

err_out.i:                                        ; preds = %for.body11.i.err_out.i_crit_edge, %for.body.i88.err_out.i_crit_edge
  %v_idx.3.i = phi i32 [ %v_idx.2220.i, %for.body11.i.err_out.i_crit_edge ], [ %v_idx.0205.i, %for.body.i88.err_out.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %v_idx.3.i)
  %tobool41.not222.i = icmp eq i32 %v_idx.3.i, 0
  br i1 %tobool41.not222.i, label %err_out.i.do.body14_crit_edge, label %err_out.i.while.body.i_crit_edge

err_out.i.while.body.i_crit_edge:                 ; preds = %err_out.i
  br label %while.body.i

err_out.i.do.body14_crit_edge:                    ; preds = %err_out.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body14

while.body.i:                                     ; preds = %ixgbevf_free_q_vector.exit.i.while.body.i_crit_edge, %err_out.i.while.body.i_crit_edge
  %v_idx.4223.i = phi i32 [ %dec42.i, %ixgbevf_free_q_vector.exit.i.while.body.i_crit_edge ], [ %v_idx.3.i, %err_out.i.while.body.i_crit_edge ]
  %dec42.i = add i32 %v_idx.4223.i, -1
  %arrayidx.i166.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %dec42.i
  %134 = ptrtoint ptr %arrayidx.i166.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %arrayidx.i166.i, align 4
  %tx.i167.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %135, i32 0, i32 5
  %136 = ptrtoint ptr %tx.i167.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %ring.039.i.i = load ptr, ptr %tx.i167.i, align 8
  %cmp.not40.i.i = icmp eq ptr %ring.039.i.i, null
  br i1 %cmp.not40.i.i, label %while.body.i.for.end.i.i_crit_edge, label %while.body.i.for.body.i.i_crit_edge

while.body.i.for.body.i.i_crit_edge:              ; preds = %while.body.i
  br label %for.body.i.i

while.body.i.for.end.i.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %while.body.i.for.body.i.i_crit_edge
  %ring.041.i.i = phi ptr [ %ring.0.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %ring.039.i.i, %while.body.i.for.body.i.i_crit_edge ]
  %state.i168.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.041.i.i, i32 0, i32 13
  %137 = ptrtoint ptr %state.i168.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %state.i168.i, align 4
  %139 = and i32 %138, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %139)
  %tobool.not.i169.i = icmp eq i32 %139, 0
  %queue_index4.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.041.i.i, i32 0, i32 22
  %140 = ptrtoint ptr %queue_index4.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %queue_index4.i.i, align 4
  %arrayidx3.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %141
  %arrayidx5.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %141
  %arrayidx3.sink.i.i = select i1 %tobool.not.i169.i, ptr %arrayidx5.i.i, ptr %arrayidx3.i.i
  %142 = ptrtoint ptr %arrayidx3.sink.i.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store ptr null, ptr %arrayidx3.sink.i.i, align 4
  %143 = ptrtoint ptr %ring.041.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %ring.0.i.i = load ptr, ptr %ring.041.i.i, align 8
  %cmp.not.i.i = icmp eq ptr %ring.0.i.i, null
  br i1 %cmp.not.i.i, label %for.body.i.i.for.end.i.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body.i.i.for.end.i.i_crit_edge, %while.body.i.for.end.i.i_crit_edge
  %rx.i170.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %135, i32 0, i32 4
  %144 = ptrtoint ptr %rx.i170.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %ring.142.i.i = load ptr, ptr %rx.i170.i, align 8
  %cmp8.not43.i.i = icmp eq ptr %ring.142.i.i, null
  br i1 %cmp8.not43.i.i, label %for.end.i.i.for.end14.i.i_crit_edge, label %for.end.i.i.for.body9.i.i_crit_edge

for.end.i.i.for.body9.i.i_crit_edge:              ; preds = %for.end.i.i
  br label %for.body9.i.i

for.end.i.i.for.end14.i.i_crit_edge:              ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end14.i.i

for.body9.i.i:                                    ; preds = %for.body9.i.i.for.body9.i.i_crit_edge, %for.end.i.i.for.body9.i.i_crit_edge
  %ring.144.i.i = phi ptr [ %ring.1.i.i, %for.body9.i.i.for.body9.i.i_crit_edge ], [ %ring.142.i.i, %for.end.i.i.for.body9.i.i_crit_edge ]
  %queue_index10.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.144.i.i, i32 0, i32 22
  %145 = ptrtoint ptr %queue_index10.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %queue_index10.i.i, align 4
  %arrayidx11.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %146
  %147 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_store4_noabort(i32 %147)
  store ptr null, ptr %arrayidx11.i.i, align 4
  %148 = ptrtoint ptr %ring.144.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %ring.1.i.i = load ptr, ptr %ring.144.i.i, align 8
  %cmp8.not.i.i = icmp eq ptr %ring.1.i.i, null
  br i1 %cmp8.not.i.i, label %for.body9.i.i.for.end14.i.i_crit_edge, label %for.body9.i.i.for.body9.i.i_crit_edge

for.body9.i.i.for.body9.i.i_crit_edge:            ; preds = %for.body9.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body9.i.i

for.body9.i.i.for.end14.i.i_crit_edge:            ; preds = %for.body9.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end14.i.i

for.end14.i.i:                                    ; preds = %for.body9.i.i.for.end14.i.i_crit_edge, %for.end.i.i.for.end14.i.i_crit_edge
  %149 = ptrtoint ptr %arrayidx.i166.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store ptr null, ptr %arrayidx.i166.i, align 4
  %napi.i171.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %135, i32 0, i32 3
  call void @__netif_napi_del(ptr noundef %napi.i171.i) #14
  call void @synchronize_net() #14
  %tobool17.not.i.i = icmp eq ptr %135, null
  br i1 %tobool17.not.i.i, label %for.end14.i.i.ixgbevf_free_q_vector.exit.i_crit_edge, label %do.end.i.i121

for.end14.i.i.ixgbevf_free_q_vector.exit.i_crit_edge: ; preds = %for.end14.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_q_vector.exit.i

do.end.i.i121:                                    ; preds = %for.end14.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rcu.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %135, i32 0, i32 6
  call void @kvfree_call_rcu(ptr noundef %rcu.i.i, ptr noundef nonnull inttoptr (i32 264 to ptr)) #14
  br label %ixgbevf_free_q_vector.exit.i

ixgbevf_free_q_vector.exit.i:                     ; preds = %do.end.i.i121, %for.end14.i.i.ixgbevf_free_q_vector.exit.i_crit_edge
  %tobool41.not.i = icmp eq i32 %dec42.i, 0
  br i1 %tobool41.not.i, label %ixgbevf_free_q_vector.exit.i.do.body14_crit_edge, label %ixgbevf_free_q_vector.exit.i.while.body.i_crit_edge

ixgbevf_free_q_vector.exit.i.while.body.i_crit_edge: ; preds = %ixgbevf_free_q_vector.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

ixgbevf_free_q_vector.exit.i.do.body14_crit_edge: ; preds = %ixgbevf_free_q_vector.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body14

do.body14:                                        ; preds = %ixgbevf_free_q_vector.exit.i.do.body14_crit_edge, %err_out.i.do.body14_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug667, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_init_interrupt_scheme, %if.then26)) #14
          to label %err_alloc_q_vectors [label %if.then26], !srcloc !314

if.then26:                                        ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #16
  %150 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %hw1.i, align 8
  %netdev29 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %151, i32 0, i32 23
  %152 = ptrtoint ptr %netdev29 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %netdev29, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug667, ptr noundef %153, ptr noundef nonnull @.str.111) #14
  br label %err_alloc_q_vectors

do.body37:                                        ; preds = %for.inc37.i.do.body37_crit_edge, %if.end8.i.do.body37_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug668, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_init_interrupt_scheme, %if.then49)) #14
          to label %do.end58 [label %if.then49], !srcloc !314

if.then49:                                        ; preds = %do.body37
  call void @__sanitizer_cov_trace_pc() #16
  %154 = ptrtoint ptr %hw1.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %hw1.i, align 8
  %netdev52 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %155, i32 0, i32 23
  %156 = ptrtoint ptr %netdev52 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %netdev52, align 4
  %158 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %num_rx_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %159)
  %cmp = icmp sgt i32 %159, 1
  %cond = select i1 %cmp, ptr @.str.113, ptr @.str.114
  %160 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %num_tx_queues.i, align 8
  %162 = ptrtoint ptr %num_xdp_queues.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %num_xdp_queues.i, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug668, ptr noundef %157, ptr noundef nonnull @.str.112, ptr noundef nonnull %cond, i32 noundef %159, i32 noundef %161, i32 noundef %163) #14
  br label %do.end58

do.end58:                                         ; preds = %if.then49, %do.body37
  %state = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 30
  call void @_set_bit(i32 noundef 2, ptr noundef %state) #14
  br label %cleanup

err_alloc_q_vectors:                              ; preds = %if.then26, %do.body14
  %msix_entries.i123 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  %164 = ptrtoint ptr %msix_entries.i123 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %msix_entries.i123, align 8
  %tobool.not.i124 = icmp eq ptr %165, null
  br i1 %tobool.not.i124, label %err_alloc_q_vectors.cleanup_crit_edge, label %if.end.i125

err_alloc_q_vectors.cleanup_crit_edge:            ; preds = %err_alloc_q_vectors
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i125:                                      ; preds = %err_alloc_q_vectors
  call void @__sanitizer_cov_trace_pc() #16
  %166 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %pdev.i.i, align 4
  call void @pci_disable_msix(ptr noundef %167) #14
  %168 = ptrtoint ptr %msix_entries.i123 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %msix_entries.i123, align 8
  call void @kfree(ptr noundef %169) #14
  %170 = ptrtoint ptr %msix_entries.i123 to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr null, ptr %msix_entries.i123, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end.i125, %err_alloc_q_vectors.cleanup_crit_edge, %do.end58, %if.then6, %do.body1
  %retval.0 = phi i32 [ 0, %do.end58 ], [ %retval.0.i82.ph, %if.then6 ], [ %retval.0.i82.ph, %do.body1 ], [ -12, %err_alloc_q_vectors.cleanup_crit_edge ], [ -12, %if.end.i125 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ixgbevf_init_ipsec_offload(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_clear_interrupt_scheme(ptr nocapture noundef %adapter) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 8
  %0 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %num_tx_queues, align 8
  %num_xdp_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 6
  %1 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %num_xdp_queues, align 4
  %num_rx_queues = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 13
  %2 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %num_rx_queues, align 8
  %num_msix_vectors.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 17
  %3 = ptrtoint ptr %num_msix_vectors.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_msix_vectors.i, align 8
  %sub.i = add i32 %4, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %tobool.not4.i = icmp eq i32 %sub.i, 0
  br i1 %tobool.not4.i, label %entry.ixgbevf_free_q_vectors.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.ixgbevf_free_q_vectors.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_q_vectors.exit

while.body.i:                                     ; preds = %ixgbevf_free_q_vector.exit.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %q_vectors.05.i = phi i32 [ %dec.i, %ixgbevf_free_q_vector.exit.i.while.body.i_crit_edge ], [ %sub.i, %entry.while.body.i_crit_edge ]
  %dec.i = add i32 %q_vectors.05.i, -1
  %arrayidx.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 1, i32 %dec.i
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tx.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %tx.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %ring.039.i.i = load ptr, ptr %tx.i.i, align 8
  %cmp.not40.i.i = icmp eq ptr %ring.039.i.i, null
  br i1 %cmp.not40.i.i, label %while.body.i.for.end.i.i_crit_edge, label %while.body.i.for.body.i.i_crit_edge

while.body.i.for.body.i.i_crit_edge:              ; preds = %while.body.i
  br label %for.body.i.i

while.body.i.for.end.i.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %while.body.i.for.body.i.i_crit_edge
  %ring.041.i.i = phi ptr [ %ring.0.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %ring.039.i.i, %while.body.i.for.body.i.i_crit_edge ]
  %state.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.041.i.i, i32 0, i32 13
  %8 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i.i, align 4
  %10 = and i32 %9, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i.i = icmp eq i32 %10, 0
  %queue_index4.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.041.i.i, i32 0, i32 22
  %11 = ptrtoint ptr %queue_index4.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %queue_index4.i.i, align 4
  %arrayidx3.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %12
  %arrayidx5.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 9, i32 %12
  %arrayidx3.sink.i.i = select i1 %tobool.not.i.i, ptr %arrayidx5.i.i, ptr %arrayidx3.i.i
  %13 = ptrtoint ptr %arrayidx3.sink.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %arrayidx3.sink.i.i, align 4
  %14 = ptrtoint ptr %ring.041.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %ring.0.i.i = load ptr, ptr %ring.041.i.i, align 8
  %cmp.not.i.i = icmp eq ptr %ring.0.i.i, null
  br i1 %cmp.not.i.i, label %for.body.i.i.for.end.i.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body.i.i.for.end.i.i_crit_edge, %while.body.i.for.end.i.i_crit_edge
  %rx.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 4
  %15 = ptrtoint ptr %rx.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %ring.142.i.i = load ptr, ptr %rx.i.i, align 8
  %cmp8.not43.i.i = icmp eq ptr %ring.142.i.i, null
  br i1 %cmp8.not43.i.i, label %for.end.i.i.for.end14.i.i_crit_edge, label %for.end.i.i.for.body9.i.i_crit_edge

for.end.i.i.for.body9.i.i_crit_edge:              ; preds = %for.end.i.i
  br label %for.body9.i.i

for.end.i.i.for.end14.i.i_crit_edge:              ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end14.i.i

for.body9.i.i:                                    ; preds = %for.body9.i.i.for.body9.i.i_crit_edge, %for.end.i.i.for.body9.i.i_crit_edge
  %ring.144.i.i = phi ptr [ %ring.1.i.i, %for.body9.i.i.for.body9.i.i_crit_edge ], [ %ring.142.i.i, %for.end.i.i.for.body9.i.i_crit_edge ]
  %queue_index10.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.144.i.i, i32 0, i32 22
  %16 = ptrtoint ptr %queue_index10.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %queue_index10.i.i, align 4
  %arrayidx11.i.i = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 14, i32 %17
  %18 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %arrayidx11.i.i, align 4
  %19 = ptrtoint ptr %ring.144.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %ring.1.i.i = load ptr, ptr %ring.144.i.i, align 8
  %cmp8.not.i.i = icmp eq ptr %ring.1.i.i, null
  br i1 %cmp8.not.i.i, label %for.body9.i.i.for.end14.i.i_crit_edge, label %for.body9.i.i.for.body9.i.i_crit_edge

for.body9.i.i.for.body9.i.i_crit_edge:            ; preds = %for.body9.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body9.i.i

for.body9.i.i.for.end14.i.i_crit_edge:            ; preds = %for.body9.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end14.i.i

for.end14.i.i:                                    ; preds = %for.body9.i.i.for.end14.i.i_crit_edge, %for.end.i.i.for.end14.i.i_crit_edge
  %20 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %arrayidx.i.i, align 4
  %napi.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 3
  tail call void @__netif_napi_del(ptr noundef %napi.i.i) #14
  tail call void @synchronize_net() #14
  %tobool17.not.i.i = icmp eq ptr %6, null
  br i1 %tobool17.not.i.i, label %for.end14.i.i.ixgbevf_free_q_vector.exit.i_crit_edge, label %do.end.i.i

for.end14.i.i.ixgbevf_free_q_vector.exit.i_crit_edge: ; preds = %for.end14.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_q_vector.exit.i

do.end.i.i:                                       ; preds = %for.end14.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rcu.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %6, i32 0, i32 6
  tail call void @kvfree_call_rcu(ptr noundef %rcu.i.i, ptr noundef nonnull inttoptr (i32 264 to ptr)) #14
  br label %ixgbevf_free_q_vector.exit.i

ixgbevf_free_q_vector.exit.i:                     ; preds = %do.end.i.i, %for.end14.i.i.ixgbevf_free_q_vector.exit.i_crit_edge
  %tobool.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i, label %ixgbevf_free_q_vector.exit.i.ixgbevf_free_q_vectors.exit_crit_edge, label %ixgbevf_free_q_vector.exit.i.while.body.i_crit_edge

ixgbevf_free_q_vector.exit.i.while.body.i_crit_edge: ; preds = %ixgbevf_free_q_vector.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

ixgbevf_free_q_vector.exit.i.ixgbevf_free_q_vectors.exit_crit_edge: ; preds = %ixgbevf_free_q_vector.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_free_q_vectors.exit

ixgbevf_free_q_vectors.exit:                      ; preds = %ixgbevf_free_q_vector.exit.i.ixgbevf_free_q_vectors.exit_crit_edge, %entry.ixgbevf_free_q_vectors.exit_crit_edge
  %msix_entries.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 22
  %21 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %msix_entries.i, align 8
  %tobool.not.i5 = icmp eq ptr %22, null
  br i1 %tobool.not.i5, label %ixgbevf_free_q_vectors.exit.ixgbevf_reset_interrupt_capability.exit_crit_edge, label %if.end.i

ixgbevf_free_q_vectors.exit.ixgbevf_reset_interrupt_capability.exit_crit_edge: ; preds = %ixgbevf_free_q_vectors.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_reset_interrupt_capability.exit

if.end.i:                                         ; preds = %ixgbevf_free_q_vectors.exit
  call void @__sanitizer_cov_trace_pc() #16
  %pdev.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 25
  %23 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pdev.i, align 4
  tail call void @pci_disable_msix(ptr noundef %24) #14
  %25 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %msix_entries.i, align 8
  tail call void @kfree(ptr noundef %26) #14
  %27 = ptrtoint ptr %msix_entries.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %msix_entries.i, align 8
  br label %ixgbevf_reset_interrupt_capability.exit

ixgbevf_reset_interrupt_capability.exit:          ; preds = %if.end.i, %ixgbevf_free_q_vectors.exit.ixgbevf_reset_interrupt_capability.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iounmap(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_release_regions(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_mask(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_coherent_mask(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ixgbevf_set_ethtool_ops(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_xmit_frame(ptr noundef %skb, ptr nocapture noundef readonly %netdev) #0 align 64 {
entry:
  %vhdr.i.i.i = alloca %struct.vlan_hdr, align 2
  %ipsec_tx.i = alloca %struct.ixgbevf_ipsec_tx_data, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #14
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %1)
  %cmp2 = icmp ult i32 %1, 17
  br i1 %cmp2, label %skb_padto.exit, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

skb_padto.exit:                                   ; preds = %if.end
  %sub.i = sub nuw nsw i32 17, %1
  %call.i.i = tail call i32 @__skb_pad(ptr noundef %skb, i32 noundef %sub.i, i1 noundef zeroext true) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %if.end6, label %skb_padto.exit.cleanup_crit_edge

skb_padto.exit.cleanup_crit_edge:                 ; preds = %skb_padto.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %skb_padto.exit
  call void @__sanitizer_cov_trace_pc() #16
  %2 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 17, ptr %len, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.end6, %if.end.if.end8_crit_edge
  %queue_mapping = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %3 = ptrtoint ptr %queue_mapping to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %queue_mapping, align 8
  %idxprom = zext i16 %4 to i32
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr.i, i32 0, i32 9, i32 %idxprom
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %7 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %len, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %9 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %8, %10
  %sub.i18 = add i32 %sub.i.i, 16383
  %div75.i = lshr i32 %sub.i18, 14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ipsec_tx.i) #14
  %11 = ptrtoint ptr %ipsec_tx.i to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 0, ptr %ipsec_tx.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.not.i.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %skb_header_pointer.exit.i, !prof !308

if.end.i.i.i:                                     ; preds = %if.end8
  %tobool2.not.i.i.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i.if.then.i_crit_edge, label %lor.lhs.false.i.i.i

if.end.i.i.i.if.then.i_crit_edge:                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

lor.lhs.false.i.i.i:                              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = tail call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef 0, ptr noundef null, i32 noundef 0) #14
  br label %if.then.i

skb_header_pointer.exit.i:                        ; preds = %if.end8
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %12 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data.i.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %skb_header_pointer.exit.i.if.then.i_crit_edge, label %lor.lhs.false.i

skb_header_pointer.exit.i.if.then.i_crit_edge:    ; preds = %skb_header_pointer.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %skb_header_pointer.exit.i
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %xor.i.i = xor i32 %15, 25215488
  %arrayidx.i.i = getelementptr i16, ptr %13, i32 2
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %arrayidx.i.i, align 2
  %18 = and i16 %17, -16
  %and.i.i = zext i16 %18 to i32
  %or.i.i = or i32 %xor.i.i, %and.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %if.end.i19

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %skb_header_pointer.exit.i.if.then.i_crit_edge, %lor.lhs.false.i.i.i, %if.end.i.i.i.if.then.i_crit_edge
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #14
  br label %ixgbevf_xmit_frame_ring.exit

if.end.i19:                                       ; preds = %lor.lhs.false.i
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %19 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %end.i.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %nr_frags.i, align 2
  %conv5.i = zext i8 %22 to i32
  %add7.i = add nuw nsw i32 %div75.i, %conv5.i
  %conv9.i = and i32 %add7.i, 65535
  %add10.i = add nuw nsw i32 %conv9.i, 3
  %next_to_clean.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 10
  %23 = ptrtoint ptr %next_to_clean.i.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %next_to_clean.i.i.i, align 4
  %next_to_use.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 9
  %25 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %next_to_use.i.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %24, i16 %26)
  %cmp.i.i.i = icmp ugt i16 %24, %26
  br i1 %cmp.i.i.i, label %if.end.i19.ixgbevf_desc_unused.exit.i.i_crit_edge, label %cond.false.i.i.i

if.end.i19.ixgbevf_desc_unused.exit.i.i_crit_edge: ; preds = %if.end.i19
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_desc_unused.exit.i.i

cond.false.i.i.i:                                 ; preds = %if.end.i19
  call void @__sanitizer_cov_trace_pc() #16
  %count.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 8
  %27 = ptrtoint ptr %count.i.i.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %count.i.i.i, align 32
  br label %ixgbevf_desc_unused.exit.i.i

ixgbevf_desc_unused.exit.i.i:                     ; preds = %cond.false.i.i.i, %if.end.i19.ixgbevf_desc_unused.exit.i.i_crit_edge
  %cond.i.i.i = phi i16 [ %28, %cond.false.i.i.i ], [ 0, %if.end.i19.ixgbevf_desc_unused.exit.i.i_crit_edge ]
  %29 = xor i16 %26, -1
  %add.i.i.i = add i16 %24, %29
  %sub6.i.i.i = add i16 %add.i.i.i, %cond.i.i.i
  %conv.i.i = zext i16 %sub6.i.i.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %add10.i, i32 %conv.i.i)
  %cmp.not.i.i = icmp ugt i32 %add10.i, %conv.i.i
  br i1 %cmp.not.i.i, label %ixgbevf_maybe_stop_tx.exit.i, label %ixgbevf_desc_unused.exit.i.i.if.end14.i_crit_edge, !prof !308

ixgbevf_desc_unused.exit.i.i.if.end14.i_crit_edge: ; preds = %ixgbevf_desc_unused.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i

ixgbevf_maybe_stop_tx.exit.i:                     ; preds = %ixgbevf_desc_unused.exit.i.i
  %call3.i.i = tail call fastcc i32 @__ixgbevf_maybe_stop_tx(ptr noundef %6, i32 noundef %add10.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool12.not.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool12.not.i, label %ixgbevf_maybe_stop_tx.exit.i.if.end14.i_crit_edge, label %if.then13.i

ixgbevf_maybe_stop_tx.exit.i.if.end14.i_crit_edge: ; preds = %ixgbevf_maybe_stop_tx.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i

if.then13.i:                                      ; preds = %ixgbevf_maybe_stop_tx.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %tx_busy.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 16, i32 0, i32 1
  %30 = ptrtoint ptr %tx_busy.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %tx_busy.i, align 8
  %inc.i = add i64 %31, 1
  store i64 %inc.i, ptr %tx_busy.i, align 8
  br label %ixgbevf_xmit_frame_ring.exit

if.end14.i:                                       ; preds = %ixgbevf_maybe_stop_tx.exit.i.if.end14.i_crit_edge, %ixgbevf_desc_unused.exit.i.i.if.end14.i_crit_edge
  %32 = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 12
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 8
  %35 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %next_to_use.i.i.i, align 2
  %idxprom.i = zext i16 %36 to i32
  %arrayidx.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i
  %37 = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i, i32 2
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %skb, ptr %37, align 4
  %39 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %len, align 4
  %bytecount.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i, i32 3
  %41 = ptrtoint ptr %bytecount.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %bytecount.i, align 4
  %gso_segs.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i, i32 4
  %42 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 1, ptr %gso_segs.i, align 4
  %vlan_present.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %43 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %43, i32 4)
  %bf.load.i = load i32, ptr %vlan_present.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load.i)
  %tobool15.not.i = icmp sgt i32 %bf.load.i, -1
  br i1 %tobool15.not.i, label %if.end14.i.if.end19.i_crit_edge, label %if.then16.i

if.end14.i.if.end19.i_crit_edge:                  ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

if.then16.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  %vlan_tci.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %44 = ptrtoint ptr %vlan_tci.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %vlan_tci.i, align 2
  %conv17.i = zext i16 %45 to i32
  %shl.i = shl nuw i32 %conv17.i, 16
  %or18.i = or i32 %shl.i, 2
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then16.i, %if.end14.i.if.end19.i_crit_edge
  %tx_flags.0.i = phi i32 [ %or18.i, %if.then16.i ], [ 0, %if.end14.i.if.end19.i_crit_edge ]
  %tx_flags20.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i, i32 8
  %46 = ptrtoint ptr %tx_flags20.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %tx_flags.0.i, ptr %tx_flags20.i, align 4
  %protocol.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %47 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %protocol.i.i, align 8
  %mac_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %49 = ptrtoint ptr %mac_len.i.i.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %mac_len.i.i.i, align 4
  %conv.i.i.i = zext i16 %50 to i32
  %51 = zext i16 %48 to i64
  call void @__sanitizer_cov_trace_switch(i64 %51, ptr @__sancov_gen_cov_switch_values.134)
  switch i16 %48, label %if.end19.i.vlan_get_protocol.exit.i_crit_edge [
    i16 -30552, label %if.end19.i.if.then.i.i76.i_crit_edge
    i16 -32512, label %if.end19.i.if.then.i.i76.i_crit_edge40
  ]

if.end19.i.if.then.i.i76.i_crit_edge40:           ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i76.i

if.end19.i.if.then.i.i76.i_crit_edge:             ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i76.i

if.end19.i.vlan_get_protocol.exit.i_crit_edge:    ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %vlan_get_protocol.exit.i

if.then.i.i76.i:                                  ; preds = %if.end19.i.if.then.i.i76.i_crit_edge, %if.end19.i.if.then.i.i76.i_crit_edge40
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %50)
  %tobool.not.i.i.i = icmp eq i16 %50, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i76.i.if.end26.i.i.i_crit_edge, label %if.then1.i.i.i

if.then.i.i76.i.if.end26.i.i.i_crit_edge:         ; preds = %if.then.i.i76.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26.i.i.i

if.then1.i.i.i:                                   ; preds = %if.then.i.i76.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %50)
  %cmp.i.i77.i = icmp ult i16 %50, 4
  br i1 %cmp.i.i77.i, label %do.end.i.i.i, label %if.end25.i.i.i, !prof !308

do.end.i.i.i:                                     ; preds = %if.then1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 598, i32 noundef 9, ptr noundef null) #14
  br label %vlan_get_protocol.exit.i

if.end25.i.i.i:                                   ; preds = %if.then1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  br label %if.end26.i.i.i

if.end26.i.i.i:                                   ; preds = %if.end25.i.i.i, %if.then.i.i76.i.if.end26.i.i.i_crit_edge
  %vlan_depth.0.i.i.i = phi i32 [ %sub.i.i.i, %if.end25.i.i.i ], [ 14, %if.then.i.i76.i.if.end26.i.i.i_crit_edge ]
  %52 = getelementptr inbounds %struct.vlan_hdr, ptr %vhdr.i.i.i, i32 0, i32 1
  %tobool2.not.i.i.i.i.i = icmp eq ptr %skb, null
  br label %do.body27.i.i.i

do.body27.i.i.i:                                  ; preds = %do.body27.backedge.i.i.i, %if.end26.i.i.i
  %vlan_depth.1.i.i.i = phi i32 [ %vlan_depth.0.i.i.i, %if.end26.i.i.i ], [ %add.i.i78.i, %do.body27.backedge.i.i.i ]
  %parse_depth.0.i.i.i = phi i32 [ 8, %if.end26.i.i.i ], [ %dec.i.i.i, %do.body27.backedge.i.i.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vhdr.i.i.i) #14
  %53 = ptrtoint ptr %vhdr.i.i.i to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 -1, ptr %vhdr.i.i.i, align 2, !annotation !320
  %54 = ptrtoint ptr %52 to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 -1, ptr %52, align 2, !annotation !320
  %55 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %len, align 4
  %57 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %data_len.i.i, align 8
  %59 = add i32 %vlan_depth.1.i.i.i, %58
  %sub.i4.i.i.i.i = sub i32 %56, %59
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %sub.i4.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp slt i32 %sub.i4.i.i.i.i, 4
  br i1 %cmp.not.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then.i.i.i.i.i, !prof !308

if.then.i.i.i.i.i:                                ; preds = %do.body27.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %60 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %61, i32 %vlan_depth.1.i.i.i
  br label %skb_header_pointer.exit.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %do.body27.i.i.i
  br i1 %tobool2.not.i.i.i.i.i, label %if.end.i.i.i.i.i.cleanup.thread.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.i.i

if.end.i.i.i.i.i.cleanup.thread.i.i.i_crit_edge:  ; preds = %if.end.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i.i.i

lor.lhs.false.i.i.i.i.i:                          ; preds = %if.end.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i.i.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %vlan_depth.1.i.i.i, ptr noundef nonnull %vhdr.i.i.i, i32 noundef 4) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i.i)
  %cmp3.i.i.i.i.i = icmp slt i32 %call.i.i.i.i.i, 0
  %spec.select.i.i.i.i.i = select i1 %cmp3.i.i.i.i.i, ptr null, ptr %vhdr.i.i.i, !prof !308
  br label %skb_header_pointer.exit.i.i.i

skb_header_pointer.exit.i.i.i:                    ; preds = %lor.lhs.false.i.i.i.i.i, %if.then.i.i.i.i.i
  %retval.0.i.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i.i, %if.then.i.i.i.i.i ], [ %spec.select.i.i.i.i.i, %lor.lhs.false.i.i.i.i.i ]
  %tobool29.not.i.i.i = icmp eq ptr %retval.0.i.i.i.i.i, null
  %dec.i.i.i = add nsw i32 %parse_depth.0.i.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i.i)
  %tobool30.not.i.i.i = icmp eq i32 %dec.i.i.i, 0
  %62 = select i1 %tobool29.not.i.i.i, i1 true, i1 %tobool30.not.i.i.i, !prof !308
  br i1 %62, label %skb_header_pointer.exit.i.i.i.cleanup.thread.i.i.i_crit_edge, label %do.cond42.i.i.i, !prof !308

skb_header_pointer.exit.i.i.i.cleanup.thread.i.i.i_crit_edge: ; preds = %skb_header_pointer.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i.i.i

cleanup.thread.i.i.i:                             ; preds = %skb_header_pointer.exit.i.i.i.cleanup.thread.i.i.i_crit_edge, %if.end.i.i.i.i.i.cleanup.thread.i.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vhdr.i.i.i) #14
  br label %vlan_get_protocol.exit.i

do.cond42.i.i.i:                                  ; preds = %skb_header_pointer.exit.i.i.i
  %h_vlan_encapsulated_proto.i.i.i = getelementptr inbounds %struct.vlan_hdr, ptr %retval.0.i.i.i.i.i, i32 0, i32 1
  %63 = ptrtoint ptr %h_vlan_encapsulated_proto.i.i.i to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %h_vlan_encapsulated_proto.i.i.i, align 2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vhdr.i.i.i) #14
  %65 = zext i16 %64 to i64
  call void @__sanitizer_cov_trace_switch(i64 %65, ptr @__sancov_gen_cov_switch_values.135)
  switch i16 %64, label %do.cond42.i.i.i.vlan_get_protocol.exit.i_crit_edge [
    i16 -30552, label %do.cond42.i.i.i.do.body27.backedge.i.i.i_crit_edge
    i16 -32512, label %do.cond42.i.i.i.do.body27.backedge.i.i.i_crit_edge41
  ]

do.cond42.i.i.i.do.body27.backedge.i.i.i_crit_edge41: ; preds = %do.cond42.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body27.backedge.i.i.i

do.cond42.i.i.i.do.body27.backedge.i.i.i_crit_edge: ; preds = %do.cond42.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body27.backedge.i.i.i

do.cond42.i.i.i.vlan_get_protocol.exit.i_crit_edge: ; preds = %do.cond42.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %vlan_get_protocol.exit.i

do.body27.backedge.i.i.i:                         ; preds = %do.cond42.i.i.i.do.body27.backedge.i.i.i_crit_edge, %do.cond42.i.i.i.do.body27.backedge.i.i.i_crit_edge41
  %add.i.i78.i = add nsw i32 %vlan_depth.1.i.i.i, 4
  br label %do.body27.i.i.i

vlan_get_protocol.exit.i:                         ; preds = %do.cond42.i.i.i.vlan_get_protocol.exit.i_crit_edge, %cleanup.thread.i.i.i, %do.end.i.i.i, %if.end19.i.vlan_get_protocol.exit.i_crit_edge
  %retval.2.i.i.i = phi i16 [ 0, %do.end.i.i.i ], [ %48, %if.end19.i.vlan_get_protocol.exit.i_crit_edge ], [ 0, %cleanup.thread.i.i.i ], [ %64, %do.cond42.i.i.i.vlan_get_protocol.exit.i_crit_edge ]
  %protocol.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i, i32 5
  %66 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %66)
  store i16 %retval.2.i.i.i, ptr %protocol.i, align 2
  %active_extensions.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 13
  %67 = ptrtoint ptr %active_extensions.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %active_extensions.i.i.i.i.i, align 1
  %69 = and i8 %68, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool.i.not.i.i.i.i = icmp eq i8 %69, 0
  br i1 %tobool.i.not.i.i.i.i, label %vlan_get_protocol.exit.i.if.end27.i_crit_edge, label %skb_sec_path.exit.i.i

vlan_get_protocol.exit.i.if.end27.i_crit_edge:    ; preds = %vlan_get_protocol.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27.i

skb_sec_path.exit.i.i:                            ; preds = %vlan_get_protocol.exit.i
  %extensions.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %70 = ptrtoint ptr %extensions.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %extensions.i.i.i.i, align 8
  %arrayidx.i.i.i.i = getelementptr %struct.skb_ext, ptr %71, i32 0, i32 1, i32 1
  %72 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %arrayidx.i.i.i.i, align 1
  %conv.i.i.i.i = zext i8 %73 to i32
  %shl.i.i.i.i = shl nuw nsw i32 %conv.i.i.i.i, 3
  %add.ptr.i.i.i.i = getelementptr i8, ptr %71, i32 %shl.i.i.i.i
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i.i.i, null
  br i1 %tobool.not.i.i, label %skb_sec_path.exit.i.i.if.end27.i_crit_edge, label %lor.lhs.false.i.i

skb_sec_path.exit.i.i.if.end27.i_crit_edge:       ; preds = %skb_sec_path.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27.i

lor.lhs.false.i.i:                                ; preds = %skb_sec_path.exit.i.i
  %olen.i.i = getelementptr inbounds %struct.sec_path, ptr %add.ptr.i.i.i.i, i32 0, i32 1
  %74 = ptrtoint ptr %olen.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %olen.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool1.not.i.i = icmp eq i32 %75, 0
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end27.i_crit_edge, label %lor.lhs.false2.i.i

lor.lhs.false.i.i.if.end27.i_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27.i

lor.lhs.false2.i.i:                               ; preds = %lor.lhs.false.i.i
  %76 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %add.ptr.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %77, i32 %75)
  %cmp.not.i79.i = icmp eq i32 %77, %75
  br i1 %cmp.not.i79.i, label %xfrm_offload.exit.i, label %lor.lhs.false2.i.i.if.end27.i_crit_edge

lor.lhs.false2.i.i.if.end27.i_crit_edge:          ; preds = %lor.lhs.false2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27.i

xfrm_offload.exit.i:                              ; preds = %lor.lhs.false2.i.i
  %sub.i80.i = add i32 %75, -1
  %arrayidx.i81.i = getelementptr %struct.sec_path, ptr %add.ptr.i.i.i.i, i32 0, i32 3, i32 %sub.i80.i
  %tobool23.not.i = icmp eq ptr %arrayidx.i81.i, null
  br i1 %tobool23.not.i, label %xfrm_offload.exit.i.if.end27.i_crit_edge, label %land.lhs.true.i

xfrm_offload.exit.i.if.end27.i_crit_edge:         ; preds = %xfrm_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27.i

land.lhs.true.i:                                  ; preds = %xfrm_offload.exit.i
  %call24.i = call i32 @ixgbevf_ipsec_tx(ptr noundef %6, ptr noundef %arrayidx.i, ptr noundef nonnull %ipsec_tx.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24.i)
  %tobool25.not.i = icmp eq i32 %call24.i, 0
  br i1 %tobool25.not.i, label %land.lhs.true.i.out_drop.i_crit_edge, label %land.lhs.true.i.if.end27.i_crit_edge

land.lhs.true.i.if.end27.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27.i

land.lhs.true.i.out_drop.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_drop.i

if.end27.i:                                       ; preds = %land.lhs.true.i.if.end27.i_crit_edge, %xfrm_offload.exit.i.if.end27.i_crit_edge, %lor.lhs.false2.i.i.if.end27.i_crit_edge, %lor.lhs.false.i.i.if.end27.i_crit_edge, %skb_sec_path.exit.i.i.if.end27.i_crit_edge, %vlan_get_protocol.exit.i.if.end27.i_crit_edge
  %78 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %37, align 4
  %ip_summed.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15
  %80 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %80)
  %bf.load.i.i = load i16, ptr %ip_summed.i.i, align 8
  %81 = and i16 %bf.load.i.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %81)
  %cmp.not.i84.i = icmp eq i16 %81, 1536
  br i1 %cmp.not.i84.i, label %if.end.i85.i, label %if.end27.i.ixgbevf_tx_csum.exit.i_crit_edge

if.end27.i.ixgbevf_tx_csum.exit.i_crit_edge:      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_tx_csum.exit.i

if.end.i85.i:                                     ; preds = %if.end27.i
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 17
  %82 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %end.i.i.i.i, align 4
  %gso_size.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %83, i32 0, i32 4
  %84 = ptrtoint ptr %gso_size.i.i.i to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %gso_size.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %85)
  %tobool.i.not.i.i = icmp eq i16 %85, 0
  br i1 %tobool.i.not.i.i, label %if.end.i99.i, label %if.end3.i.i

if.end3.i.i:                                      ; preds = %if.end.i85.i
  %cloned.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 12
  %86 = ptrtoint ptr %cloned.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %bf.load.i.i.i.i = load i8, ptr %cloned.i.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i.i.i)
  %tobool.not.i.i.i.i = icmp sgt i8 %bf.load.i.i.i.i, -1
  br i1 %tobool.not.i.i.i.i, label %if.end3.i.i.if.end8.i.i_crit_edge, label %skb_header_cloned.exit.i.i.i

if.end3.i.i.if.end8.i.i_crit_edge:                ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i

skb_header_cloned.exit.i.i.i:                     ; preds = %if.end3.i.i
  %dataref1.i.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %83, i32 0, i32 10
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i.i.i, i32 noundef 4) #14
  %87 = ptrtoint ptr %dataref1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %dataref1.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %88, 65535
  %shr.i.i130.i.i = ashr i32 %88, 16
  %sub.i.i.i.i = sub nsw i32 %and.i.i.i.i, %shr.i.i130.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i.i.i)
  %cmp.i.not.i.i.i = icmp eq i32 %sub.i.i.i.i, 1
  br i1 %cmp.i.not.i.i.i, label %skb_header_cloned.exit.i.i.i.if.end8.i.i_crit_edge, label %skb_cow_head.exit.i.i

skb_header_cloned.exit.i.i.i.if.end8.i.i_crit_edge: ; preds = %skb_header_cloned.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i

skb_cow_head.exit.i.i:                            ; preds = %skb_header_cloned.exit.i.i.i
  %call4.i.i.i.i = call i32 @pskb_expand_head(ptr noundef %79, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i.i.i, 0
  br i1 %cmp5.i.i, label %skb_cow_head.exit.i.i.out_drop.i_crit_edge, label %skb_cow_head.exit.i.i.if.end8.i.i_crit_edge

skb_cow_head.exit.i.i.if.end8.i.i_crit_edge:      ; preds = %skb_cow_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i

skb_cow_head.exit.i.i.out_drop.i_crit_edge:       ; preds = %skb_cow_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_drop.i

if.end8.i.i:                                      ; preds = %skb_cow_head.exit.i.i.if.end8.i.i_crit_edge, %skb_header_cloned.exit.i.i.i.if.end8.i.i_crit_edge, %if.end3.i.i.if.end8.i.i_crit_edge
  %89 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %protocol.i, align 2
  %91 = add i16 %90, 30649
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %91)
  %92 = icmp ult i16 %91, 2
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 18
  %93 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %head.i.i.i, align 8
  %network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15, i32 0, i32 20
  %inner_network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15, i32 0, i32 16
  %network_header.i.sink.i.i = select i1 %92, ptr %inner_network_header.i.i.i, ptr %network_header.i.i.i
  %95 = ptrtoint ptr %network_header.i.sink.i.i to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %network_header.i.sink.i.i, align 4
  %conv.i132.i.i = zext i16 %96 to i32
  %add.ptr.i133.i.i = getelementptr i8, ptr %94, i32 %conv.i132.i.i
  %97 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15, i32 0, i32 5
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %97, align 8
  %conv.i135.i.i = zext i16 %99 to i32
  %add.ptr.i136.i.i = getelementptr i8, ptr %94, i32 %conv.i135.i.i
  %100 = ptrtoint ptr %add.ptr.i133.i.i to i32
  call void @__asan_load1_noabort(i32 %100)
  %bf.load15.i.i = load i8, ptr %add.ptr.i133.i.i, align 4
  %bf.lshr16.mask.i.i = and i8 %bf.load15.i.i, -16
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %bf.lshr16.mask.i.i)
  %cmp18.i.i = icmp eq i8 %bf.lshr16.mask.i.i, 64
  br i1 %cmp18.i.i, label %if.then20.i.i, label %if.else31.i.i

if.then20.i.i:                                    ; preds = %if.end8.i.i
  %101 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %end.i.i.i.i, align 4
  %gso_type.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %102, i32 0, i32 8
  %103 = ptrtoint ptr %gso_type.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %gso_type.i.i, align 8
  %and.i87.i = and i32 %104, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i87.i)
  %tobool.not.i88.i = icmp eq i32 %and.i87.i, 0
  br i1 %tobool.not.i88.i, label %if.then20.i.i.cond.end.i.i_crit_edge, label %cond.true.i.i

if.then20.i.i.cond.end.i.i_crit_edge:             ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i.i

cond.true.i.i:                                    ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %add.ptr.i136.i.i to i32
  %bf.clear23.i.i = shl i8 %bf.load15.i.i, 2
  %105 = and i8 %bf.clear23.i.i, 60
  %mul.i.i = zext i8 %105 to i32
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr.i133.i.i, i32 %mul.i.i
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %call26.i.i = call i32 @csum_partial(ptr noundef %add.ptr.i.i, i32 noundef %sub.ptr.sub.i.i, i32 noundef 0) #14
  %106 = call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %call26.i.i) #20, !srcloc !321
  %neg.i140.i.i = xor i32 %106, -1
  %shr.i.i.i = lshr i32 %neg.i140.i.i, 16
  %conv.i141.i.i = trunc i32 %shr.i.i.i to i16
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.true.i.i, %if.then20.i.i.cond.end.i.i_crit_edge
  %cond.i.i = phi i16 [ %conv.i141.i.i, %cond.true.i.i ], [ 0, %if.then20.i.i.cond.end.i.i_crit_edge ]
  %check.i.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i133.i.i, i32 0, i32 7
  %107 = ptrtoint ptr %check.i.i to i32
  call void @__asan_store2_noabort(i32 %107)
  store i16 %cond.i.i, ptr %check.i.i, align 2
  %tot_len.i.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i133.i.i, i32 0, i32 2
  %108 = ptrtoint ptr %tot_len.i.i to i32
  call void @__asan_store2_noabort(i32 %108)
  store i16 0, ptr %tot_len.i.i, align 2
  br label %if.else.i

if.else31.i.i:                                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %payload_len.i.i = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i133.i.i, i32 0, i32 2
  %109 = ptrtoint ptr %payload_len.i.i to i32
  call void @__asan_store2_noabort(i32 %109)
  store i16 0, ptr %payload_len.i.i, align 4
  br label %if.else.i

if.else.i:                                        ; preds = %if.else31.i.i, %cond.end.i.i
  %.sink146.i.i = phi i32 [ 5, %if.else31.i.i ], [ 13, %cond.end.i.i ]
  %type_tucmd.0.i.i = phi i32 [ 538970112, %if.else31.i.i ], [ 538971136, %cond.end.i.i ]
  %110 = ptrtoint ptr %tx_flags20.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %tx_flags20.i, align 4
  %or33.i.i = or i32 %111, %.sink146.i.i
  store i32 %or33.i.i, ptr %tx_flags20.i, align 4
  %data.i89.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 19
  %112 = ptrtoint ptr %data.i89.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %data.i89.i, align 4
  %sub.ptr.lhs.cast35.i.i = ptrtoint ptr %add.ptr.i136.i.i to i32
  %sub.ptr.rhs.cast36.i.i = ptrtoint ptr %113 to i32
  %sub.ptr.sub37.i.i = sub i32 %sub.ptr.lhs.cast35.i.i, %sub.ptr.rhs.cast36.i.i
  %doff.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i136.i.i, i32 0, i32 4
  %114 = ptrtoint ptr %doff.i.i to i32
  call void @__asan_load2_noabort(i32 %114)
  %bf.load38.i.i = load i16, ptr %doff.i.i, align 4
  %115 = lshr i16 %bf.load38.i.i, 10
  %116 = and i16 %115, 60
  %mul41.i.i = zext i16 %116 to i32
  %add.i.i = add i32 %sub.ptr.sub37.i.i, %mul41.i.i
  %len43.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 6
  %117 = ptrtoint ptr %len43.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %len43.i.i, align 4
  %sub.i90.i = sub i32 %118, %sub.ptr.sub37.i.i
  %check44.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i136.i.i, i32 0, i32 6
  %119 = ptrtoint ptr %check44.i.i to i32
  call void @__asan_load2_noabort(i32 %119)
  %120 = load i16, ptr %check44.i.i, align 2
  %conv.i.i.i91.i = zext i16 %120 to i32
  %neg.i.i.i = xor i32 %conv.i.i.i91.i, -1
  %add.i.i.i.i = add i32 %sub.i90.i, %neg.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i, i32 %neg.i.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, %neg.i.i.i
  %conv.i4.i.i.i = zext i1 %cmp.i.i.i.i to i32
  %add1.i.i.i.i = add i32 %add.i.i.i.i, %conv.i4.i.i.i
  %121 = call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %add1.i.i.i.i) #20, !srcloc !321
  %neg.i.i.i.i = xor i32 %121, -1
  %shr.i.i.i.i = lshr i32 %neg.i.i.i.i, 16
  %conv.i5.i.i.i = trunc i32 %shr.i.i.i.i to i16
  %122 = ptrtoint ptr %check44.i.i to i32
  call void @__asan_store2_noabort(i32 %122)
  store i16 %conv.i5.i.i.i, ptr %check44.i.i, align 2
  %123 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %end.i.i.i.i, align 4
  %gso_segs.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %124, i32 0, i32 5
  %125 = ptrtoint ptr %gso_segs.i.i to i32
  call void @__asan_load2_noabort(i32 %125)
  %126 = load i16, ptr %gso_segs.i.i, align 2
  %127 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_store2_noabort(i32 %127)
  store i16 %126, ptr %gso_segs.i, align 4
  %conv48.i.i = zext i16 %126 to i32
  %sub49.i.i = add nsw i32 %conv48.i.i, -1
  %conv50.i.i = and i32 %add.i.i, 255
  %mul51.i.i = mul nsw i32 %sub49.i.i, %conv50.i.i
  %128 = ptrtoint ptr %bytecount.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %bytecount.i, align 4
  %add52.i.i = add i32 %mul51.i.i, %129
  store i32 %add52.i.i, ptr %bytecount.i, align 4
  %sub54.i.i = sub i32 %conv50.i.i, %sub.ptr.sub37.i.i
  %shl.i.i = shl i32 %sub54.i.i, 8
  %130 = load ptr, ptr %end.i.i.i.i, align 4
  %gso_size.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %130, i32 0, i32 4
  %131 = ptrtoint ptr %gso_size.i.i to i32
  call void @__asan_load2_noabort(i32 %131)
  %132 = load i16, ptr %gso_size.i.i, align 4
  %conv56.i.i = zext i16 %132 to i32
  %shl57.i.i = shl nuw i32 %conv56.i.i, 16
  %or58.i.i = or i32 %shl.i.i, %shl57.i.i
  %or59.i.i = or i32 %or58.i.i, 16
  %pfsa.i.i = getelementptr inbounds %struct.ixgbevf_ipsec_tx_data, ptr %ipsec_tx.i, i32 0, i32 2
  %133 = ptrtoint ptr %pfsa.i.i to i32
  call void @__asan_load2_noabort(i32 %133)
  %134 = load i16, ptr %pfsa.i.i, align 2
  %conv60.i.i = zext i16 %134 to i32
  %135 = ptrtoint ptr %ipsec_tx.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %ipsec_tx.i, align 8
  %trailer_len.i.i = getelementptr inbounds %struct.ixgbevf_ipsec_tx_data, ptr %ipsec_tx.i, i32 0, i32 1
  %137 = ptrtoint ptr %trailer_len.i.i to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %trailer_len.i.i, align 4
  %conv62.i.i = zext i16 %138 to i32
  %sub.ptr.rhs.cast66.i.i = ptrtoint ptr %add.ptr.i133.i.i to i32
  %sub.ptr.sub67.i.i = sub i32 %sub.ptr.lhs.cast35.i.i, %sub.ptr.rhs.cast66.i.i
  %139 = ptrtoint ptr %data.i89.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %data.i89.i, align 4
  %sub.ptr.rhs.cast70.i.i = ptrtoint ptr %140 to i32
  %sub.ptr.sub71.i.i = sub i32 %sub.ptr.rhs.cast66.i.i, %sub.ptr.rhs.cast70.i.i
  %shl72.i.i = shl i32 %sub.ptr.sub71.i.i, 9
  %141 = ptrtoint ptr %tx_flags20.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %tx_flags20.i, align 4
  %and75.i.i = and i32 %142, -65536
  %or73.i.i = or i32 %and75.i.i, %sub.ptr.sub67.i.i
  %or76.i.i = or i32 %or73.i.i, %shl72.i.i
  %143 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_load2_noabort(i32 %143)
  %144 = load i16, ptr %next_to_use.i.i.i, align 2
  %desc.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 5
  %145 = ptrtoint ptr %desc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %desc.i.i.i, align 4
  %inc.i.i.i = add i16 %144, 1
  %count.i.i93.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 8
  %147 = ptrtoint ptr %count.i.i93.i to i32
  call void @__asan_load2_noabort(i32 %147)
  %148 = load i16, ptr %count.i.i93.i, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc.i.i.i, i16 %148)
  %cmp.i.i94.i = icmp ult i16 %inc.i.i.i, %148
  %spec.select.i.i.i = select i1 %cmp.i.i94.i, i16 %inc.i.i.i, i16 0
  %idxprom.i.i.i = zext i16 %144 to i32
  %arrayidx.i.i.i = getelementptr %struct.ixgbe_adv_tx_context_desc, ptr %146, i32 %idxprom.i.i.i
  %149 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_store2_noabort(i32 %149)
  store i16 %spec.select.i.i.i, ptr %next_to_use.i.i.i, align 2
  %or64.i.i = or i32 %136, %type_tucmd.0.i.i
  %or.i.i.i = or i32 %or64.i.i, %conv62.i.i
  %150 = call i32 @llvm.bswap.i32(i32 %or76.i.i) #14
  %151 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %150, ptr %arrayidx.i.i.i, align 4
  %152 = call i32 @llvm.bswap.i32(i32 %conv60.i.i) #14
  %fceof_saidx7.i.i.i = getelementptr %struct.ixgbe_adv_tx_context_desc, ptr %146, i32 %idxprom.i.i.i, i32 1
  %153 = ptrtoint ptr %fceof_saidx7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 %152, ptr %fceof_saidx7.i.i.i, align 4
  %154 = call i32 @llvm.bswap.i32(i32 %or.i.i.i) #14
  %type_tucmd_mlhl.i.i.i = getelementptr %struct.ixgbe_adv_tx_context_desc, ptr %146, i32 %idxprom.i.i.i, i32 2
  %155 = ptrtoint ptr %type_tucmd_mlhl.i.i.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 %154, ptr %type_tucmd_mlhl.i.i.i, align 4
  %156 = call i32 @llvm.bswap.i32(i32 %or59.i.i) #14
  %mss_l4len_idx8.i.i.i = getelementptr %struct.ixgbe_adv_tx_context_desc, ptr %146, i32 %idxprom.i.i.i, i32 3
  %157 = ptrtoint ptr %mss_l4len_idx8.i.i.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %156, ptr %mss_l4len_idx8.i.i.i, align 4
  br label %if.end34.i

if.end.i99.i:                                     ; preds = %if.end.i85.i
  %158 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15, i32 0, i32 5
  %csum_offset.i.i = getelementptr inbounds %struct.anon.60, ptr %158, i32 0, i32 1
  %159 = ptrtoint ptr %csum_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %159)
  %160 = load i16, ptr %csum_offset.i.i, align 2
  %161 = zext i16 %160 to i64
  call void @__sanitizer_cov_trace_switch(i64 %161, ptr @__sancov_gen_cov_switch_values.136)
  switch i16 %160, label %if.end.i99.i.sw.default.i.i_crit_edge [
    i16 16, label %sw.bb.i.i
    i16 6, label %if.end.i99.i.sw.epilog.i.i_crit_edge
    i16 8, label %sw.bb3.i.i
  ]

if.end.i99.i.sw.epilog.i.i_crit_edge:             ; preds = %if.end.i99.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i.i

if.end.i99.i.sw.default.i.i_crit_edge:            ; preds = %if.end.i99.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.default.i.i

sw.bb.i.i:                                        ; preds = %if.end.i99.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i.i

sw.bb3.i.i:                                       ; preds = %if.end.i99.i
  %csum_not_inet.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15, i32 0, i32 3
  %162 = ptrtoint ptr %csum_not_inet.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %162, i32 4)
  %bf.load.i.i.i = load i32, ptr %csum_not_inet.i.i.i, align 2
  %163 = and i32 %bf.load.i.i.i, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %163)
  %tobool.i.not.i100.i = icmp eq i32 %163, 0
  br i1 %tobool.i.not.i100.i, label %sw.bb3.i.i.sw.default.i.i_crit_edge, label %sw.bb3.i.i.sw.epilog.i.i_crit_edge

sw.bb3.i.i.sw.epilog.i.i_crit_edge:               ; preds = %sw.bb3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i.i

sw.bb3.i.i.sw.default.i.i_crit_edge:              ; preds = %sw.bb3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.default.i.i

sw.default.i.i:                                   ; preds = %sw.bb3.i.i.sw.default.i.i_crit_edge, %if.end.i99.i.sw.default.i.i_crit_edge
  %call6.i.i = call i32 @skb_checksum_help(ptr noundef %79) #14
  br label %ixgbevf_tx_csum.exit.i

sw.epilog.i.i:                                    ; preds = %sw.bb3.i.i.sw.epilog.i.i_crit_edge, %sw.bb.i.i, %if.end.i99.i.sw.epilog.i.i_crit_edge
  %type_tucmd.0.i101.i = phi i32 [ 0, %if.end.i99.i.sw.epilog.i.i_crit_edge ], [ 2048, %sw.bb.i.i ], [ 4096, %sw.bb3.i.i.sw.epilog.i.i_crit_edge ]
  %164 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %164)
  %165 = load i16, ptr %protocol.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %165)
  %cmp8.i.i = icmp eq i16 %165, 2048
  %or.i103.i = or i32 %type_tucmd.0.i101.i, 1024
  %spec.select.i.i = select i1 %cmp8.i.i, i32 %or.i103.i, i32 %type_tucmd.0.i101.i
  %166 = ptrtoint ptr %tx_flags20.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %tx_flags20.i, align 4
  %or12.i.i = or i32 %167, 1
  store i32 %or12.i.i, ptr %tx_flags20.i, align 4
  %168 = ptrtoint ptr %158 to i32
  call void @__asan_load2_noabort(i32 %168)
  %169 = load i16, ptr %158, align 8
  %conv.i.i104.i = zext i16 %169 to i32
  %head.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 18
  %170 = ptrtoint ptr %head.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %head.i.i.i.i, align 8
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %171 to i32
  %network_header.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15, i32 0, i32 20
  %172 = ptrtoint ptr %network_header.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %172)
  %173 = load i16, ptr %network_header.i.i.i.i, align 4
  %conv.i.i.i105.i = zext i16 %173 to i32
  %add.ptr.i.i.i106.i = getelementptr i8, ptr %171, i32 %conv.i.i.i105.i
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %add.ptr.i.i.i106.i to i32
  %sub.i.i107.i = add i32 %sub.ptr.rhs.cast.i.i.i.i, %conv.i.i104.i
  %sub.i108.i = sub i32 %sub.i.i107.i, %sub.ptr.lhs.cast.i.i.i
  %phi.bo.i.i = or i32 %spec.select.i.i, 538968064
  br label %ixgbevf_tx_csum.exit.i

ixgbevf_tx_csum.exit.i:                           ; preds = %sw.epilog.i.i, %sw.default.i.i, %if.end27.i.ixgbevf_tx_csum.exit.i_crit_edge
  %vlan_macip_lens.0.i.i = phi i32 [ 0, %sw.default.i.i ], [ %sub.i108.i, %sw.epilog.i.i ], [ 0, %if.end27.i.ixgbevf_tx_csum.exit.i_crit_edge ]
  %type_tucmd.2.i.i = phi i32 [ 538968064, %sw.default.i.i ], [ %phi.bo.i.i, %sw.epilog.i.i ], [ 538968064, %if.end27.i.ixgbevf_tx_csum.exit.i_crit_edge ]
  %head.i.i41.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 18
  %174 = ptrtoint ptr %head.i.i41.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %head.i.i41.i.i, align 8
  %network_header.i.i42.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15, i32 0, i32 20
  %176 = ptrtoint ptr %network_header.i.i42.i.i to i32
  call void @__asan_load2_noabort(i32 %176)
  %177 = load i16, ptr %network_header.i.i42.i.i, align 4
  %conv.i.i43.i.i = zext i16 %177 to i32
  %add.ptr.i.i44.i.i = getelementptr i8, ptr %175, i32 %conv.i.i43.i.i
  %data.i45.i.i = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 19
  %178 = ptrtoint ptr %data.i45.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %data.i45.i.i, align 4
  %sub.ptr.lhs.cast.i46.i.i = ptrtoint ptr %add.ptr.i.i44.i.i to i32
  %sub.ptr.rhs.cast.i47.i.i = ptrtoint ptr %179 to i32
  %sub.ptr.sub.i48.i.i = sub i32 %sub.ptr.lhs.cast.i46.i.i, %sub.ptr.rhs.cast.i47.i.i
  %shl.i109.i = shl i32 %sub.ptr.sub.i48.i.i, 9
  %180 = ptrtoint ptr %tx_flags20.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %tx_flags20.i, align 4
  %and.i110.i = and i32 %181, -65536
  %or16.i.i = or i32 %and.i110.i, %vlan_macip_lens.0.i.i
  %or18.i.i = or i32 %or16.i.i, %shl.i109.i
  %pfsa.i111.i = getelementptr inbounds %struct.ixgbevf_ipsec_tx_data, ptr %ipsec_tx.i, i32 0, i32 2
  %182 = ptrtoint ptr %pfsa.i111.i to i32
  call void @__asan_load2_noabort(i32 %182)
  %183 = load i16, ptr %pfsa.i111.i, align 2
  %conv19.i.i = zext i16 %183 to i32
  %184 = ptrtoint ptr %ipsec_tx.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %ipsec_tx.i, align 8
  %trailer_len.i112.i = getelementptr inbounds %struct.ixgbevf_ipsec_tx_data, ptr %ipsec_tx.i, i32 0, i32 1
  %186 = ptrtoint ptr %trailer_len.i112.i to i32
  call void @__asan_load2_noabort(i32 %186)
  %187 = load i16, ptr %trailer_len.i112.i, align 4
  %conv21.i.i = zext i16 %187 to i32
  %188 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_load2_noabort(i32 %188)
  %189 = load i16, ptr %next_to_use.i.i.i, align 2
  %desc.i.i114.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 5
  %190 = ptrtoint ptr %desc.i.i114.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %desc.i.i114.i, align 4
  %inc.i.i115.i = add i16 %189, 1
  %count.i.i116.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 8
  %192 = ptrtoint ptr %count.i.i116.i to i32
  call void @__asan_load2_noabort(i32 %192)
  %193 = load i16, ptr %count.i.i116.i, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc.i.i115.i, i16 %193)
  %cmp.i.i117.i = icmp ult i16 %inc.i.i115.i, %193
  %spec.select.i.i118.i = select i1 %cmp.i.i117.i, i16 %inc.i.i115.i, i16 0
  %idxprom.i.i119.i = zext i16 %189 to i32
  %arrayidx.i.i120.i = getelementptr %struct.ixgbe_adv_tx_context_desc, ptr %191, i32 %idxprom.i.i119.i
  %194 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_store2_noabort(i32 %194)
  store i16 %spec.select.i.i118.i, ptr %next_to_use.i.i.i, align 2
  %or23.i.i = or i32 %185, %type_tucmd.2.i.i
  %or.i.i121.i = or i32 %or23.i.i, %conv21.i.i
  %195 = call i32 @llvm.bswap.i32(i32 %or18.i.i) #14
  %196 = ptrtoint ptr %arrayidx.i.i120.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store i32 %195, ptr %arrayidx.i.i120.i, align 4
  %197 = call i32 @llvm.bswap.i32(i32 %conv19.i.i) #14
  %fceof_saidx7.i.i122.i = getelementptr %struct.ixgbe_adv_tx_context_desc, ptr %191, i32 %idxprom.i.i119.i, i32 1
  %198 = ptrtoint ptr %fceof_saidx7.i.i122.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 %197, ptr %fceof_saidx7.i.i122.i, align 4
  %199 = call i32 @llvm.bswap.i32(i32 %or.i.i121.i) #14
  %type_tucmd_mlhl.i.i123.i = getelementptr %struct.ixgbe_adv_tx_context_desc, ptr %191, i32 %idxprom.i.i119.i, i32 2
  %200 = ptrtoint ptr %type_tucmd_mlhl.i.i123.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %199, ptr %type_tucmd_mlhl.i.i123.i, align 4
  %mss_l4len_idx8.i.i124.i = getelementptr %struct.ixgbe_adv_tx_context_desc, ptr %191, i32 %idxprom.i.i119.i, i32 3
  %201 = ptrtoint ptr %mss_l4len_idx8.i.i124.i to i32
  call void @__asan_store4_noabort(i32 %201)
  store i32 0, ptr %mss_l4len_idx8.i.i124.i, align 4
  br label %if.end34.i

if.end34.i:                                       ; preds = %ixgbevf_tx_csum.exit.i, %if.else.i
  %hdr_len.0.ph175.i = phi i32 [ %conv50.i.i, %if.else.i ], [ 0, %ixgbevf_tx_csum.exit.i ]
  %202 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %37, align 4
  %204 = ptrtoint ptr %tx_flags20.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %tx_flags20.i, align 4
  %and.i.i.i = and i32 %205, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i125.i = icmp eq i32 %and.i.i.i, 0
  %spec.select.i.i126.i = select i1 %tobool.not.i.i125.i, i32 12322, i32 12386
  %and1.i.i.i = shl i32 %205, 5
  %206 = and i32 %and1.i.i.i, 128
  %207 = or i32 %spec.select.i.i126.i, %206
  %208 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_load2_noabort(i32 %208)
  %209 = load i16, ptr %next_to_use.i.i.i, align 2
  %desc.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 5
  %210 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %desc.i.i, align 4
  %idxprom.i.i = zext i16 %209 to i32
  %arrayidx.i127.i = getelementptr %union.ixgbe_adv_tx_desc, ptr %211, i32 %idxprom.i.i
  %len.i128.i = getelementptr inbounds %struct.sk_buff, ptr %203, i32 0, i32 6
  %212 = ptrtoint ptr %len.i128.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %len.i128.i, align 4
  %sub.i130.i = sub i32 %213, %hdr_len.0.ph175.i
  %shl.i.i.i = shl i32 %sub.i130.i, 14
  %214 = call i32 @llvm.bswap.i32(i32 %shl.i.i.i) #14
  %and.i204.i.i = shl i32 %205, 17
  %215 = and i32 %and.i204.i.i, 131072
  %and1.i205.i.i = shl i32 %205, 13
  %216 = and i32 %and1.i205.i.i, 65536
  %and6.i.i.i = shl i32 %205, 14
  %217 = and i32 %and6.i.i.i, 262144
  %218 = or i32 %216, %215
  %219 = or i32 %218, %217
  %220 = or i32 %219, %214
  %and11.i.i.i = and i32 %205, 20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i.i.i)
  %tobool12.not.i.i.i = icmp eq i32 %and11.i.i.i, 0
  %or14.i.i.i = or i32 %220, 268435456
  %olinfo_status.3.i.i.i = select i1 %tobool12.not.i.i.i, i32 %220, i32 %or14.i.i.i
  %or16.i.i.i = or i32 %olinfo_status.3.i.i.i, -2147483648
  %olinfo_status17.i.i.i = getelementptr inbounds %struct.anon.196, ptr %arrayidx.i127.i, i32 0, i32 2
  %221 = ptrtoint ptr %olinfo_status17.i.i.i to i32
  call void @__asan_store4_noabort(i32 %221)
  store i32 %or16.i.i.i, ptr %olinfo_status17.i.i.i, align 4
  %222 = ptrtoint ptr %len.i128.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %len.i128.i, align 4
  %data_len.i.i131.i = getelementptr inbounds %struct.sk_buff, ptr %203, i32 0, i32 7
  %224 = ptrtoint ptr %data_len.i.i131.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %data_len.i.i131.i, align 8
  %sub.i.i132.i = sub i32 %223, %225
  %dev.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 4
  %226 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %dev.i.i, align 16
  %data.i133.i = getelementptr inbounds %struct.sk_buff, ptr %203, i32 0, i32 19
  %228 = ptrtoint ptr %data.i133.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %data.i133.i, align 4
  %call.i.i134.i = call zeroext i1 @is_vmalloc_addr(ptr noundef %229) #14
  br i1 %call.i.i134.i, label %land.rhs.i.i.i, label %if.end39.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end34.i
  %.b1.i.i.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i.i.i, label %land.rhs.i.i.i.dma_map_single_attrs.exit.i.i_crit_edge, label %if.then.i.i136.i, !prof !322

land.rhs.i.i.i.dma_map_single_attrs.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dma_map_single_attrs.exit.i.i

if.then.i.i136.i:                                 ; preds = %land.rhs.i.i.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i.i.i = call ptr @dev_driver_string(ptr noundef %227) #14
  %init_name.i.i.i.i = getelementptr inbounds %struct.device, ptr %227, i32 0, i32 3
  %230 = ptrtoint ptr %init_name.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %init_name.i.i.i.i, align 8
  %tobool.not.i.i.i135.i = icmp eq ptr %231, null
  br i1 %tobool.not.i.i.i135.i, label %if.end.i.i.i.i, label %if.then.i.i136.i.dev_name.exit.i.i.i_crit_edge

if.then.i.i136.i.dev_name.exit.i.i.i_crit_edge:   ; preds = %if.then.i.i136.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dev_name.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then.i.i136.i
  call void @__sanitizer_cov_trace_pc() #16
  %232 = ptrtoint ptr %227 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %227, align 4
  br label %dev_name.exit.i.i.i

dev_name.exit.i.i.i:                              ; preds = %if.end.i.i.i.i, %if.then.i.i136.i.dev_name.exit.i.i.i_crit_edge
  %retval.0.i.i.i.i = phi ptr [ %233, %if.end.i.i.i.i ], [ %231, %if.then.i.i136.i.dev_name.exit.i.i.i_crit_edge ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.77, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.78, ptr noundef %call16.i.i.i, ptr noundef %retval.0.i.i.i.i) #14
  br label %dma_map_single_attrs.exit.i.i

if.end39.i.i.i:                                   ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @debug_dma_map_single(ptr noundef %227, ptr noundef %229, i32 noundef %sub.i.i132.i) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %234 = load ptr, ptr @mem_map, align 4
  %235 = ptrtoint ptr %229 to i32
  %sub.i206.i.i = add i32 %235, 1073741824
  %shr.i.i137.i = lshr i32 %sub.i206.i.i, 12
  %add.ptr.i.i.i = getelementptr %struct.page, ptr %234, i32 %shr.i.i137.i
  %and.i207.i.i = and i32 %235, 4095
  %call41.i.i.i = call i32 @dma_map_page_attrs(ptr noundef %227, ptr noundef %add.ptr.i.i.i, i32 noundef %and.i207.i.i, i32 noundef %sub.i.i132.i, i32 noundef 1, i32 noundef 0) #14
  br label %dma_map_single_attrs.exit.i.i

dma_map_single_attrs.exit.i.i:                    ; preds = %if.end39.i.i.i, %dev_name.exit.i.i.i, %land.rhs.i.i.i.dma_map_single_attrs.exit.i.i_crit_edge
  %retval.0.i.i138.i = phi i32 [ %call41.i.i.i, %if.end39.i.i.i ], [ -1, %dev_name.exit.i.i.i ], [ -1, %land.rhs.i.i.i.dma_map_single_attrs.exit.i.i_crit_edge ]
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %203, i32 0, i32 17
  %236 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %end.i.i.i, align 4
  %238 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %dev.i.i, align 16
  call void @debug_dma_mapping_error(ptr noundef %239, i32 noundef %retval.0.i.i138.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i.i138.i)
  %cmp.i.not218.i.i = icmp eq i32 %retval.0.i.i138.i, -1
  br i1 %cmp.i.not218.i.i, label %dma_map_single_attrs.exit.i.i.do.end73.i.i_crit_edge, label %if.end.lr.ph.i.i

dma_map_single_attrs.exit.i.i.do.end73.i.i_crit_edge: ; preds = %dma_map_single_attrs.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end73.i.i

if.end.lr.ph.i.i:                                 ; preds = %dma_map_single_attrs.exit.i.i
  %frags.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %237, i32 0, i32 12
  %or.i139.i = or i32 %207, 4194304
  %count.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 8
  br label %if.end.i140.i

if.end.i140.i:                                    ; preds = %if.end49.i.i.if.end.i140.i_crit_edge, %if.end.lr.ph.i.i
  %i.0225.i.i = phi i16 [ %209, %if.end.lr.ph.i.i ], [ %i.3.i.i, %if.end49.i.i.if.end.i140.i_crit_edge ]
  %size.0224.i.i = phi i32 [ %sub.i.i132.i, %if.end.lr.ph.i.i ], [ %260, %if.end49.i.i.if.end.i140.i_crit_edge ]
  %data_len.0223.i.i = phi i32 [ %225, %if.end.lr.ph.i.i ], [ %sub52.i.i, %if.end49.i.i.if.end.i140.i_crit_edge ]
  %dma.0222.i.i = phi i32 [ %retval.0.i.i138.i, %if.end.lr.ph.i.i ], [ %call2.i.i.i, %if.end49.i.i.if.end.i140.i_crit_edge ]
  %frag.0221.i.i = phi ptr [ %frags.i.i, %if.end.lr.ph.i.i ], [ %incdec.ptr57.i.i, %if.end49.i.i.if.end.i140.i_crit_edge ]
  %tx_desc.0220.i.i = phi ptr [ %arrayidx.i127.i, %if.end.lr.ph.i.i ], [ %tx_desc.3.i.i, %if.end49.i.i.if.end.i140.i_crit_edge ]
  %tx_buffer.0219.i.i = phi ptr [ %arrayidx.i, %if.end.lr.ph.i.i ], [ %arrayidx56.i.i, %if.end49.i.i.if.end.i140.i_crit_edge ]
  %len9.i.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.0219.i.i, i32 0, i32 7
  %240 = ptrtoint ptr %len9.i.i to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 %size.0224.i.i, ptr %len9.i.i, align 4
  %dma10.i.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.0219.i.i, i32 0, i32 6
  %241 = ptrtoint ptr %dma10.i.i to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 %dma.0222.i.i, ptr %dma10.i.i, align 4
  %conv11.i.i = zext i32 %dma.0222.i.i to i64
  %242 = call i64 @llvm.bswap.i64(i64 %conv11.i.i) #14
  %243 = ptrtoint ptr %tx_desc.0220.i.i to i32
  call void @__asan_store8_noabort(i32 %243)
  store i64 %242, ptr %tx_desc.0220.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16384, i32 %size.0224.i.i)
  %cmp211.i.i = icmp ugt i32 %size.0224.i.i, 16384
  br i1 %cmp211.i.i, label %if.end.i140.i.while.body.i.i_crit_edge, label %if.end.i140.i.while.end.i.i_crit_edge, !prof !308

if.end.i140.i.while.end.i.i_crit_edge:            ; preds = %if.end.i140.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i.i

if.end.i140.i.while.body.i.i_crit_edge:           ; preds = %if.end.i140.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.end22.i.i.while.body.i.i_crit_edge, %if.end.i140.i.while.body.i.i_crit_edge
  %i.1215.i.i = phi i16 [ %i.2.i.i, %if.end22.i.i.while.body.i.i_crit_edge ], [ %i.0225.i.i, %if.end.i140.i.while.body.i.i_crit_edge ]
  %size.1214.i.i = phi i32 [ %sub23.i.i, %if.end22.i.i.while.body.i.i_crit_edge ], [ %size.0224.i.i, %if.end.i140.i.while.body.i.i_crit_edge ]
  %dma.1213.i.i = phi i32 [ %add.i141.i, %if.end22.i.i.while.body.i.i_crit_edge ], [ %dma.0222.i.i, %if.end.i140.i.while.body.i.i_crit_edge ]
  %tx_desc.1212.i.i = phi ptr [ %tx_desc.2.i.i, %if.end22.i.i.while.body.i.i_crit_edge ], [ %tx_desc.0220.i.i, %if.end.i140.i.while.body.i.i_crit_edge ]
  %cmd_type_len.i.i = getelementptr inbounds %struct.anon.196, ptr %tx_desc.1212.i.i, i32 0, i32 1
  %244 = ptrtoint ptr %cmd_type_len.i.i to i32
  call void @__asan_store4_noabort(i32 %244)
  store i32 %or.i139.i, ptr %cmd_type_len.i.i, align 8
  %inc.i.i = add i16 %i.1215.i.i, 1
  %incdec.ptr.i.i = getelementptr %union.ixgbe_adv_tx_desc, ptr %tx_desc.1212.i.i, i32 1
  %245 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load2_noabort(i32 %245)
  %246 = load i16, ptr %count.i.i, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc.i.i, i16 %246)
  %cmp17.i.i = icmp eq i16 %inc.i.i, %246
  br i1 %cmp17.i.i, label %if.then19.i.i, label %while.body.i.i.if.end22.i.i_crit_edge

while.body.i.i.if.end22.i.i_crit_edge:            ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22.i.i

if.then19.i.i:                                    ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %247 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %desc.i.i, align 4
  br label %if.end22.i.i

if.end22.i.i:                                     ; preds = %if.then19.i.i, %while.body.i.i.if.end22.i.i_crit_edge
  %tx_desc.2.i.i = phi ptr [ %248, %if.then19.i.i ], [ %incdec.ptr.i.i, %while.body.i.i.if.end22.i.i_crit_edge ]
  %i.2.i.i = phi i16 [ 0, %if.then19.i.i ], [ %inc.i.i, %while.body.i.i.if.end22.i.i_crit_edge ]
  %olinfo_status.i.i = getelementptr inbounds %struct.anon.196, ptr %tx_desc.2.i.i, i32 0, i32 2
  %249 = ptrtoint ptr %olinfo_status.i.i to i32
  call void @__asan_store4_noabort(i32 %249)
  store i32 0, ptr %olinfo_status.i.i, align 4
  %add.i141.i = add i32 %dma.1213.i.i, 16384
  %sub23.i.i = add i32 %size.1214.i.i, -16384
  %conv24.i.i = zext i32 %add.i141.i to i64
  %250 = call i64 @llvm.bswap.i64(i64 %conv24.i.i) #14
  %251 = ptrtoint ptr %tx_desc.2.i.i to i32
  call void @__asan_store8_noabort(i32 %251)
  store i64 %250, ptr %tx_desc.2.i.i, align 8
  %cmp.i142.i = icmp ugt i32 %sub23.i.i, 16384
  br i1 %cmp.i142.i, label %if.end22.i.i.while.body.i.i_crit_edge, label %if.end22.i.i.while.end.i.i_crit_edge, !prof !308

if.end22.i.i.while.end.i.i_crit_edge:             ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i.i

if.end22.i.i.while.body.i.i_crit_edge:            ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

while.end.i.i:                                    ; preds = %if.end22.i.i.while.end.i.i_crit_edge, %if.end.i140.i.while.end.i.i_crit_edge
  %tx_desc.1.lcssa.i.i = phi ptr [ %tx_desc.0220.i.i, %if.end.i140.i.while.end.i.i_crit_edge ], [ %tx_desc.2.i.i, %if.end22.i.i.while.end.i.i_crit_edge ]
  %size.1.lcssa.i.i = phi i32 [ %size.0224.i.i, %if.end.i140.i.while.end.i.i_crit_edge ], [ %sub23.i.i, %if.end22.i.i.while.end.i.i_crit_edge ]
  %i.1.lcssa.i.i = phi i16 [ %i.0225.i.i, %if.end.i140.i.while.end.i.i_crit_edge ], [ %i.2.i.i, %if.end22.i.i.while.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %data_len.0223.i.i)
  %tobool26.not.i.i = icmp eq i32 %data_len.0223.i.i, 0
  br i1 %tobool26.not.i.i, label %for.end.i.i, label %if.end36.i.i, !prof !322

if.end36.i.i:                                     ; preds = %while.end.i.i
  %252 = call i32 @llvm.bswap.i32(i32 %size.1.lcssa.i.i) #14
  %or37.i.i = or i32 %252, %207
  %cmd_type_len38.i.i = getelementptr inbounds %struct.anon.196, ptr %tx_desc.1.lcssa.i.i, i32 0, i32 1
  %253 = ptrtoint ptr %cmd_type_len38.i.i to i32
  call void @__asan_store4_noabort(i32 %253)
  store i32 %or37.i.i, ptr %cmd_type_len38.i.i, align 8
  %inc39.i.i = add i16 %i.1.lcssa.i.i, 1
  %incdec.ptr40.i.i = getelementptr %union.ixgbe_adv_tx_desc, ptr %tx_desc.1.lcssa.i.i, i32 1
  %254 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load2_noabort(i32 %254)
  %255 = load i16, ptr %count.i.i, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc39.i.i, i16 %255)
  %cmp44.i.i = icmp eq i16 %inc39.i.i, %255
  br i1 %cmp44.i.i, label %if.then46.i.i, label %if.end36.i.i.if.end49.i.i_crit_edge

if.end36.i.i.if.end49.i.i_crit_edge:              ; preds = %if.end36.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49.i.i

if.then46.i.i:                                    ; preds = %if.end36.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %256 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %desc.i.i, align 4
  br label %if.end49.i.i

if.end49.i.i:                                     ; preds = %if.then46.i.i, %if.end36.i.i.if.end49.i.i_crit_edge
  %tx_desc.3.i.i = phi ptr [ %257, %if.then46.i.i ], [ %incdec.ptr40.i.i, %if.end36.i.i.if.end49.i.i_crit_edge ]
  %i.3.i.i = phi i16 [ 0, %if.then46.i.i ], [ %inc39.i.i, %if.end36.i.i.if.end49.i.i_crit_edge ]
  %olinfo_status50.i.i = getelementptr inbounds %struct.anon.196, ptr %tx_desc.3.i.i, i32 0, i32 2
  %258 = ptrtoint ptr %olinfo_status50.i.i to i32
  call void @__asan_store4_noabort(i32 %258)
  store i32 0, ptr %olinfo_status50.i.i, align 4
  %bv_len.i.i.i = getelementptr inbounds %struct.bio_vec, ptr %frag.0221.i.i, i32 0, i32 1
  %259 = ptrtoint ptr %bv_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %bv_len.i.i.i, align 4
  %sub52.i.i = sub i32 %data_len.0223.i.i, %260
  %261 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %dev.i.i, align 16
  %263 = ptrtoint ptr %frag.0221.i.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %frag.0221.i.i, align 4
  %bv_offset.i.i.i.i = getelementptr inbounds %struct.bio_vec, ptr %frag.0221.i.i, i32 0, i32 2
  %265 = ptrtoint ptr %bv_offset.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load i32, ptr %bv_offset.i.i.i.i, align 4
  %call2.i.i.i = call i32 @dma_map_page_attrs(ptr noundef %262, ptr noundef %264, i32 noundef %266, i32 noundef %260, i32 noundef 1, i32 noundef 0) #14
  %267 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %32, align 8
  %idxprom55.i.i = zext i16 %i.3.i.i to i32
  %arrayidx56.i.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %268, i32 %idxprom55.i.i
  %incdec.ptr57.i.i = getelementptr %struct.bio_vec, ptr %frag.0221.i.i, i32 1
  %269 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %dev.i.i, align 16
  call void @debug_dma_mapping_error(ptr noundef %270, i32 noundef %call2.i.i.i) #14
  %cmp.i.not.i.i = icmp eq i32 %call2.i.i.i, -1
  br i1 %cmp.i.not.i.i, label %if.end49.i.i.do.end73.i.i_crit_edge, label %if.end49.i.i.if.end.i140.i_crit_edge

if.end49.i.i.if.end.i140.i_crit_edge:             ; preds = %if.end49.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i140.i

if.end49.i.i.do.end73.i.i_crit_edge:              ; preds = %if.end49.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end73.i.i

for.end.i.i:                                      ; preds = %while.end.i.i
  %271 = or i32 %size.1.lcssa.i.i, 150994944
  %272 = call i32 @llvm.bswap.i32(i32 %271) #14
  %or59.i143.i = or i32 %272, %207
  %cmd_type_len60.i.i = getelementptr inbounds %struct.anon.196, ptr %tx_desc.1.lcssa.i.i, i32 0, i32 1
  %273 = ptrtoint ptr %cmd_type_len60.i.i to i32
  call void @__asan_store4_noabort(i32 %273)
  store i32 %or59.i143.i, ptr %cmd_type_len60.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %274 = load volatile i32, ptr @jiffies, align 128
  %time_stamp.i.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i, i32 1
  %275 = ptrtoint ptr %time_stamp.i.i to i32
  call void @__asan_store4_noabort(i32 %275)
  store i32 %274, ptr %time_stamp.i.i, align 4
  call void @skb_clone_tx_timestamp(ptr noundef %203) #14
  %276 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %end.i.i.i, align 4
  %tx_flags.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %277, i32 0, i32 3
  %278 = ptrtoint ptr %tx_flags.i.i.i to i32
  call void @__asan_load1_noabort(i32 %278)
  %279 = load i8, ptr %tx_flags.i.i.i, align 1
  %280 = and i8 %279, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %280)
  %tobool.not.i208.i.i = icmp eq i8 %280, 0
  br i1 %tobool.not.i208.i.i, label %for.end.i.i.skb_tx_timestamp.exit.i.i_crit_edge, label %if.then.i209.i.i

for.end.i.i.skb_tx_timestamp.exit.i.i_crit_edge:  ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %skb_tx_timestamp.exit.i.i

if.then.i209.i.i:                                 ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @skb_tstamp_tx(ptr noundef %203, ptr noundef null) #14
  br label %skb_tx_timestamp.exit.i.i

skb_tx_timestamp.exit.i.i:                        ; preds = %if.then.i209.i.i, %for.end.i.i.skb_tx_timestamp.exit.i.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !323
  call void @arm_heavy_mb() #14
  %281 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %281)
  store ptr %tx_desc.1.lcssa.i.i, ptr %arrayidx.i, align 4
  %inc61.i.i = add i16 %i.1.lcssa.i.i, 1
  %282 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load2_noabort(i32 %282)
  %283 = load i16, ptr %count.i.i, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc61.i.i, i16 %283)
  %cmp65.i.i = icmp eq i16 %inc61.i.i, %283
  %spec.store.select.i.i = select i1 %cmp65.i.i, i16 0, i16 %inc61.i.i
  %284 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_store2_noabort(i32 %284)
  store i16 %spec.store.select.i.i, ptr %next_to_use.i.i.i, align 2
  %conv70.i.i = zext i16 %spec.store.select.i.i to i32
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !317
  call void @arm_heavy_mb() #14
  %285 = call i32 @llvm.bswap.i32(i32 %conv70.i.i) #14
  %tail.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 19
  %286 = ptrtoint ptr %tail.i.i.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %tail.i.i.i, align 8
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %287, i32 %285) #14, !srcloc !312
  br label %ixgbevf_tx_map.exit.i

do.end73.i.i:                                     ; preds = %if.end49.i.i.do.end73.i.i_crit_edge, %dma_map_single_attrs.exit.i.i.do.end73.i.i_crit_edge
  %idxprom75.pre-phi.i.i = phi i32 [ %idxprom.i.i, %dma_map_single_attrs.exit.i.i.do.end73.i.i_crit_edge ], [ %idxprom55.i.i, %if.end49.i.i.do.end73.i.i_crit_edge ]
  %i.0.lcssa.i.i = phi i16 [ %209, %dma_map_single_attrs.exit.i.i.do.end73.i.i_crit_edge ], [ %i.3.i.i, %if.end49.i.i.do.end73.i.i_crit_edge ]
  %288 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %dev.i.i, align 16
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %289, ptr noundef nonnull @.str.75) #17
  %290 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %32, align 8
  %arrayidx76.i.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %291, i32 %idxprom75.pre-phi.i.i
  %cmp78.not227.i.i = icmp eq ptr %arrayidx76.i.i, %arrayidx.i
  br i1 %cmp78.not227.i.i, label %do.end73.i.i.while.end101.i.i_crit_edge, label %while.body80.lr.ph.i.i

do.end73.i.i.while.end101.i.i_crit_edge:          ; preds = %do.end73.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end101.i.i

while.body80.lr.ph.i.i:                           ; preds = %do.end73.i.i
  %count93.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 8
  br label %while.body80.i.i

while.body80.i.i:                                 ; preds = %if.end98.i.i.while.body80.i.i_crit_edge, %while.body80.lr.ph.i.i
  %i.4229.i.i = phi i16 [ %i.0.lcssa.i.i, %while.body80.lr.ph.i.i ], [ %i.5.i.i, %if.end98.i.i.while.body80.i.i_crit_edge ]
  %tx_buffer.1228.i.i = phi ptr [ %arrayidx76.i.i, %while.body80.lr.ph.i.i ], [ %arrayidx100.i.i, %if.end98.i.i.while.body80.i.i_crit_edge ]
  %len81.i.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.1228.i.i, i32 0, i32 7
  %292 = ptrtoint ptr %len81.i.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %len81.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %293)
  %tobool82.not.i.i = icmp eq i32 %293, 0
  br i1 %tobool82.not.i.i, label %while.body80.i.i.if.end87.i.i_crit_edge, label %if.then83.i.i

while.body80.i.i.if.end87.i.i_crit_edge:          ; preds = %while.body80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end87.i.i

if.then83.i.i:                                    ; preds = %while.body80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %294 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %dev.i.i, align 16
  %dma85.i.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.1228.i.i, i32 0, i32 6
  %296 = ptrtoint ptr %dma85.i.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %dma85.i.i, align 4
  call void @dma_unmap_page_attrs(ptr noundef %295, i32 noundef %297, i32 noundef %293, i32 noundef 1, i32 noundef 0) #14
  br label %if.end87.i.i

if.end87.i.i:                                     ; preds = %if.then83.i.i, %while.body80.i.i.if.end87.i.i_crit_edge
  %298 = ptrtoint ptr %len81.i.i to i32
  call void @__asan_store4_noabort(i32 %298)
  store i32 0, ptr %len81.i.i, align 4
  %dec.i.i = add i16 %i.4229.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %i.4229.i.i)
  %cmp90.i.i = icmp eq i16 %i.4229.i.i, 0
  br i1 %cmp90.i.i, label %if.then92.i.i, label %if.end87.i.i.if.end98.i.i_crit_edge

if.end87.i.i.if.end98.i.i_crit_edge:              ; preds = %if.end87.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end98.i.i

if.then92.i.i:                                    ; preds = %if.end87.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %299 = ptrtoint ptr %count93.i.i to i32
  call void @__asan_load2_noabort(i32 %299)
  %300 = load i16, ptr %count93.i.i, align 32
  %add96.i.i = add i16 %300, %dec.i.i
  br label %if.end98.i.i

if.end98.i.i:                                     ; preds = %if.then92.i.i, %if.end87.i.i.if.end98.i.i_crit_edge
  %i.5.i.i = phi i16 [ %add96.i.i, %if.then92.i.i ], [ %dec.i.i, %if.end87.i.i.if.end98.i.i_crit_edge ]
  %301 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load ptr, ptr %32, align 8
  %idxprom99.i.i = zext i16 %i.5.i.i to i32
  %arrayidx100.i.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %302, i32 %idxprom99.i.i
  %cmp78.not.i.i = icmp eq ptr %arrayidx100.i.i, %arrayidx.i
  br i1 %cmp78.not.i.i, label %if.end98.i.i.while.end101.i.i_crit_edge, label %if.end98.i.i.while.body80.i.i_crit_edge

if.end98.i.i.while.body80.i.i_crit_edge:          ; preds = %if.end98.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body80.i.i

if.end98.i.i.while.end101.i.i_crit_edge:          ; preds = %if.end98.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end101.i.i

while.end101.i.i:                                 ; preds = %if.end98.i.i.while.end101.i.i_crit_edge, %do.end73.i.i.while.end101.i.i_crit_edge
  %i.4.lcssa.i.i = phi i16 [ %i.0.lcssa.i.i, %do.end73.i.i.while.end101.i.i_crit_edge ], [ %i.5.i.i, %if.end98.i.i.while.end101.i.i_crit_edge ]
  %len102.i.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i, i32 7
  %303 = ptrtoint ptr %len102.i.i to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load i32, ptr %len102.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %304)
  %tobool103.not.i.i = icmp eq i32 %304, 0
  br i1 %tobool103.not.i.i, label %while.end101.i.i.if.end108.i.i_crit_edge, label %if.then104.i.i

while.end101.i.i.if.end108.i.i_crit_edge:         ; preds = %while.end101.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end108.i.i

if.then104.i.i:                                   ; preds = %while.end101.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %305 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load ptr, ptr %dev.i.i, align 16
  %dma106.i.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %34, i32 %idxprom.i, i32 6
  %307 = ptrtoint ptr %dma106.i.i to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load i32, ptr %dma106.i.i, align 4
  call void @dma_unmap_page_attrs(ptr noundef %306, i32 noundef %308, i32 noundef %304, i32 noundef 1, i32 noundef 0) #14
  br label %if.end108.i.i

if.end108.i.i:                                    ; preds = %if.then104.i.i, %while.end101.i.i.if.end108.i.i_crit_edge
  %309 = ptrtoint ptr %len102.i.i to i32
  call void @__asan_store4_noabort(i32 %309)
  store i32 0, ptr %len102.i.i, align 4
  %310 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %37, align 4
  call void @__dev_kfree_skb_any(ptr noundef %311, i32 noundef 1) #14
  %312 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %312)
  store ptr null, ptr %37, align 4
  %313 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_store2_noabort(i32 %313)
  store i16 %i.4.lcssa.i.i, ptr %next_to_use.i.i.i, align 2
  br label %ixgbevf_tx_map.exit.i

ixgbevf_tx_map.exit.i:                            ; preds = %if.end108.i.i, %skb_tx_timestamp.exit.i.i
  %314 = ptrtoint ptr %next_to_clean.i.i.i to i32
  call void @__asan_load2_noabort(i32 %314)
  %315 = load i16, ptr %next_to_clean.i.i.i, align 4
  %316 = ptrtoint ptr %next_to_use.i.i.i to i32
  call void @__asan_load2_noabort(i32 %316)
  %317 = load i16, ptr %next_to_use.i.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %315, i16 %317)
  %cmp.i.i146.i = icmp ugt i16 %315, %317
  br i1 %cmp.i.i146.i, label %ixgbevf_tx_map.exit.i.ixgbevf_desc_unused.exit.i154.i_crit_edge, label %cond.false.i.i148.i

ixgbevf_tx_map.exit.i.ixgbevf_desc_unused.exit.i154.i_crit_edge: ; preds = %ixgbevf_tx_map.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_desc_unused.exit.i154.i

cond.false.i.i148.i:                              ; preds = %ixgbevf_tx_map.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %count.i.i147.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %6, i32 0, i32 8
  %318 = ptrtoint ptr %count.i.i147.i to i32
  call void @__asan_load2_noabort(i32 %318)
  %319 = load i16, ptr %count.i.i147.i, align 32
  br label %ixgbevf_desc_unused.exit.i154.i

ixgbevf_desc_unused.exit.i154.i:                  ; preds = %cond.false.i.i148.i, %ixgbevf_tx_map.exit.i.ixgbevf_desc_unused.exit.i154.i_crit_edge
  %cond.i.i149.i = phi i16 [ %319, %cond.false.i.i148.i ], [ 0, %ixgbevf_tx_map.exit.i.ixgbevf_desc_unused.exit.i154.i_crit_edge ]
  %320 = xor i16 %317, -1
  %add.i.i150.i = add i16 %315, %320
  %sub6.i.i151.i = add i16 %add.i.i150.i, %cond.i.i149.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 21, i16 %sub6.i.i151.i)
  %cmp.not.i153.i = icmp ult i16 %sub6.i.i151.i, 21
  br i1 %cmp.not.i153.i, label %if.end.i156.i, label %ixgbevf_desc_unused.exit.i154.i.ixgbevf_xmit_frame_ring.exit_crit_edge, !prof !308

ixgbevf_desc_unused.exit.i154.i.ixgbevf_xmit_frame_ring.exit_crit_edge: ; preds = %ixgbevf_desc_unused.exit.i154.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_xmit_frame_ring.exit

if.end.i156.i:                                    ; preds = %ixgbevf_desc_unused.exit.i154.i
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i155.i = call fastcc i32 @__ixgbevf_maybe_stop_tx(ptr noundef %6, i32 noundef 21) #14
  br label %ixgbevf_xmit_frame_ring.exit

out_drop.i:                                       ; preds = %skb_cow_head.exit.i.i.out_drop.i_crit_edge, %land.lhs.true.i.out_drop.i_crit_edge
  %321 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load ptr, ptr %37, align 4
  call void @__dev_kfree_skb_any(ptr noundef %322, i32 noundef 1) #14
  %323 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %323)
  store ptr null, ptr %37, align 4
  br label %ixgbevf_xmit_frame_ring.exit

ixgbevf_xmit_frame_ring.exit:                     ; preds = %out_drop.i, %if.end.i156.i, %ixgbevf_desc_unused.exit.i154.i.ixgbevf_xmit_frame_ring.exit_crit_edge, %if.then13.i, %if.then.i
  %retval.0.i20 = phi i32 [ 0, %if.then.i ], [ 16, %if.then13.i ], [ 0, %out_drop.i ], [ 0, %ixgbevf_desc_unused.exit.i154.i.ixgbevf_xmit_frame_ring.exit_crit_edge ], [ 0, %if.end.i156.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ipsec_tx.i) #14
  br label %cleanup

cleanup:                                          ; preds = %ixgbevf_xmit_frame_ring.exit, %skb_padto.exit.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %retval.0.i20, %ixgbevf_xmit_frame_ring.exit ], [ 0, %skb_padto.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @ixgbevf_features_check(ptr nocapture noundef readonly %skb, ptr nocapture noundef readnone %dev, i64 noundef %features) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %0 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head.i, align 8
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %2 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %network_header.i, align 4
  %conv.i = zext i16 %3 to i32
  %add.ptr.i = getelementptr i8, ptr %1, i32 %conv.i
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %5 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %sub.ptr.sub)
  %cmp = icmp ugt i32 %sub.ptr.sub, 127
  br i1 %cmp, label %if.then, label %if.end, !prof !308

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %and = and i64 %features, -68720590985
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %6, align 8
  %conv.i33 = zext i16 %8 to i32
  %gepdiff = sub nsw i32 %conv.i33, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 511, i32 %gepdiff)
  %cmp7 = icmp ugt i32 %gepdiff, 511
  br i1 %cmp7, label %if.then14, label %if.end16, !prof !308

if.then14:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %and15 = and i64 %features, -68720590857
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %encapsulation = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %9 = ptrtoint ptr %encapsulation to i32
  call void @__asan_load2_noabort(i32 %9)
  %bf.load = load i16, ptr %encapsulation, align 8
  %10 = and i16 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool17.not = icmp ne i16 %10, 0
  %and18 = and i64 %features, 524288
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and18)
  %tobool19.not = icmp eq i64 %and18, 0
  %or.cond = and i1 %tobool19.not, %tobool17.not
  %and21 = and i64 %features, -65537
  %features.addr.0 = select i1 %or.cond, i64 %and21, i64 %features
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.then14, %if.then
  %retval.0 = phi i64 [ %and, %if.then ], [ %and15, %if.then14 ], [ %features.addr.0, %if.end16 ]
  ret i64 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_set_mac(ptr noundef %netdev, ptr noundef %p) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sa_data = getelementptr inbounds %struct.sockaddr, ptr %p, i32 0, i32 1
  %0 = ptrtoint ptr %sa_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sa_data, align 4
  %2 = and i32 %1, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not.i = icmp eq i32 %2, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

is_valid_ether_addr.exit:                         ; preds = %entry
  %add.ptr.i.i = getelementptr %struct.sockaddr, ptr %p, i32 0, i32 1, i32 4
  %3 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %4 to i32
  %or.i.i = or i32 %1, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.cleanup_crit_edge, label %if.end

is_valid_ether_addr.exit.cleanup_crit_edge:       ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %is_valid_ether_addr.exit
  %hw1 = getelementptr i8, ptr %netdev, i32 3048
  %mbx_lock = getelementptr i8, ptr %netdev, i32 3564
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock) #14
  %set_rar = getelementptr i8, ptr %netdev, i32 3104
  %5 = ptrtoint ptr %set_rar to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %set_rar, align 4
  %call5 = tail call i32 %6(ptr noundef %hw1, i32 noundef 0, ptr noundef %sa_data, i32 noundef 0) #14
  tail call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %addr10 = getelementptr i8, ptr %netdev, i32 3144
  %7 = ptrtoint ptr %sa_data to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sa_data, align 4
  %9 = ptrtoint ptr %addr10 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %addr10, align 4
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i = getelementptr i8, ptr %netdev, i32 3148
  %12 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %11, ptr %add.ptr1.i, align 2
  %perm_addr = getelementptr i8, ptr %netdev, i32 3150
  %13 = load i32, ptr %sa_data, align 4
  %14 = ptrtoint ptr %perm_addr to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %perm_addr, align 4
  %15 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i35 = getelementptr i8, ptr %netdev, i32 3154
  %16 = ptrtoint ptr %add.ptr1.i35 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %15, ptr %add.ptr1.i35, align 2
  tail call void @dev_addr_mod(ptr noundef %netdev, i32 noundef 0, ptr noundef %sa_data, i32 noundef 6) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end.cleanup_crit_edge, %is_valid_ether_addr.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end8 ], [ -99, %is_valid_ether_addr.exit.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ -99, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_validate_addr(ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_change_mtu(ptr noundef %netdev, i32 noundef %new_mtu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1 = getelementptr i8, ptr %netdev, i32 3048
  %xdp_prog = getelementptr i8, ptr %netdev, i32 3040
  %0 = ptrtoint ptr %xdp_prog to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xdp_prog, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev = getelementptr i8, ptr %netdev, i32 3044
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.79) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %mbx_lock = getelementptr i8, ptr %netdev, i32 3564
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock) #14
  %set_rlpml = getelementptr i8, ptr %netdev, i32 3140
  %4 = ptrtoint ptr %set_rlpml to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %set_rlpml, align 4
  %6 = trunc i32 %new_mtu to i16
  %conv = add i16 %6, 18
  %call3 = tail call i32 %5(ptr noundef %hw1, i16 noundef zeroext %conv) #14
  tail call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool5.not = icmp eq i32 %call3, 0
  br i1 %tobool5.not, label %do.body9, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body9:                                         ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @ixgbevf_change_mtu.__UNIQUE_ID_ddebug673, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ixgbevf_change_mtu, %if.then14)) #14
          to label %do.end20 [label %if.then14], !srcloc !314

if.then14:                                        ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %hw1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hw1, align 4
  %netdev15 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %netdev15 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %netdev15, align 4
  %mtu = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 20
  %11 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mtu, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @ixgbevf_change_mtu.__UNIQUE_ID_ddebug673, ptr noundef %10, ptr noundef nonnull @.str.82, i32 noundef %12, i32 noundef %new_mtu) #14
  br label %do.end20

do.end20:                                         ; preds = %if.then14, %do.body9
  %mtu21 = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 20
  %13 = ptrtoint ptr %mtu21 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %new_mtu, ptr %mtu21, align 4
  %state.i = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 6
  %14 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %do.end20.cleanup_crit_edge, label %if.then23

do.end20.cleanup_crit_edge:                       ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then23:                                        ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @ixgbevf_reinit_locked(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %if.then23, %do.end20.cleanup_crit_edge, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -1, %do.end ], [ -22, %if.end.cleanup_crit_edge ], [ 0, %if.then23 ], [ 0, %do.end20.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_tx_timeout(ptr noundef %netdev, i32 noundef %txqueue) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i = getelementptr i8, ptr %netdev, i32 3432
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.ixgbevf_tx_timeout_reset.exit_crit_edge

entry.ixgbevf_tx_timeout_reset.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_tx_timeout_reset.exit

if.then.i:                                        ; preds = %entry
  tail call void @_set_bit(i32 noundef 7, ptr noundef %state.i) #14
  %3 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %state.i, align 4
  %5 = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.then.i.ixgbevf_tx_timeout_reset.exit_crit_edge

if.then.i.ixgbevf_tx_timeout_reset.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_tx_timeout_reset.exit

land.lhs.true.i.i:                                ; preds = %if.then.i
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i, align 4
  %8 = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool3.not.i.i = icmp eq i32 %8, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true4.i.i, label %land.lhs.true.i.i.ixgbevf_tx_timeout_reset.exit_crit_edge

land.lhs.true.i.i.ixgbevf_tx_timeout_reset.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_tx_timeout_reset.exit

land.lhs.true4.i.i:                               ; preds = %land.lhs.true.i.i
  %call6.i.i = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %if.then.i.i, label %land.lhs.true4.i.i.ixgbevf_tx_timeout_reset.exit_crit_edge

land.lhs.true4.i.i.ixgbevf_tx_timeout_reset.exit_crit_edge: ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_tx_timeout_reset.exit

if.then.i.i:                                      ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %9 = load ptr, ptr @ixgbevf_wq, align 4
  %service_task.i.i = getelementptr i8, ptr %netdev, i32 3520
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %9, ptr noundef %service_task.i.i) #14
  br label %ixgbevf_tx_timeout_reset.exit

ixgbevf_tx_timeout_reset.exit:                    ; preds = %if.then.i.i, %land.lhs.true4.i.i.ixgbevf_tx_timeout_reset.exit_crit_edge, %land.lhs.true.i.i.ixgbevf_tx_timeout_reset.exit_crit_edge, %if.then.i.ixgbevf_tx_timeout_reset.exit_crit_edge, %entry.ixgbevf_tx_timeout_reset.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_get_stats(ptr noundef %netdev, ptr nocapture noundef %stats) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  tail call void @ixgbevf_update_stats(ptr noundef %add.ptr.i)
  %vfmprc = getelementptr i8, ptr %netdev, i32 3384
  %0 = ptrtoint ptr %vfmprc to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %vfmprc, align 8
  %base_vfmprc = getelementptr i8, ptr %netdev, i32 3304
  %2 = ptrtoint ptr %base_vfmprc to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %base_vfmprc, align 8
  %sub = sub i64 %1, %3
  %multicast = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 8
  %4 = ptrtoint ptr %multicast to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %sub, ptr %multicast, align 8
  %5 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !324
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.83, i32 noundef 696, ptr noundef nonnull @.str.84) #14
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %num_rx_queues = getelementptr i8, ptr %netdev, i32 2936
  %9 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp81 = icmp sgt i32 %10, 0
  br i1 %cmp81, label %for.body.lr.ph, label %rcu_read_lock.exit.for.cond11.preheader_crit_edge

rcu_read_lock.exit.for.cond11.preheader_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond11.preheader

for.body.lr.ph:                                   ; preds = %rcu_read_lock.exit
  %rx_bytes = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 2
  br label %for.body

for.cond11.preheader:                             ; preds = %do.end.for.cond11.preheader_crit_edge, %rcu_read_lock.exit.for.cond11.preheader_crit_edge
  %num_tx_queues = getelementptr i8, ptr %netdev, i32 2872
  %11 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_tx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp1283 = icmp sgt i32 %12, 0
  br i1 %cmp1283, label %for.body13.lr.ph, label %for.cond11.preheader.for.cond18.preheader_crit_edge

for.cond11.preheader.for.cond18.preheader_crit_edge: ; preds = %for.cond11.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond18.preheader

for.body13.lr.ph:                                 ; preds = %for.cond11.preheader
  %tx_bytes.i = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 3
  %tx_packets.i = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 1
  br label %for.body13

for.body:                                         ; preds = %do.end.for.body_crit_edge, %for.body.lr.ph
  %i.082 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %do.end.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr.i, i32 0, i32 14, i32 %i.082
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx, align 4
  %syncp = getelementptr inbounds %struct.ixgbevf_ring, ptr %14, i32 0, i32 15
  %stats4 = getelementptr inbounds %struct.ixgbevf_ring, ptr %14, i32 0, i32 14
  %bytes5 = getelementptr inbounds %struct.ixgbevf_ring, ptr %14, i32 0, i32 14, i32 1
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %for.body
  %call3 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp)
  %15 = ptrtoint ptr %bytes5 to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %bytes5, align 8
  %17 = ptrtoint ptr %stats4 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %stats4, align 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !325
  %19 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %syncp, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %20, %call3
  br i1 %cmp.i.i.i.i.not, label %do.end, label %do.body.do.body_crit_edge

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

do.end:                                           ; preds = %do.body
  %21 = ptrtoint ptr %rx_bytes to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %rx_bytes, align 8
  %add = add i64 %22, %16
  store i64 %add, ptr %rx_bytes, align 8
  %23 = ptrtoint ptr %stats to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %stats, align 8
  %add10 = add i64 %24, %18
  store i64 %add10, ptr %stats, align 8
  %inc = add nuw nsw i32 %i.082, 1
  %25 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %num_rx_queues, align 8
  %cmp = icmp slt i32 %inc, %26
  br i1 %cmp, label %do.end.for.body_crit_edge, label %do.end.for.cond11.preheader_crit_edge

do.end.for.cond11.preheader_crit_edge:            ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond11.preheader

do.end.for.body_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.cond18.preheader:                             ; preds = %ixgbevf_get_tx_ring_stats.exit.for.cond18.preheader_crit_edge, %for.cond11.preheader.for.cond18.preheader_crit_edge
  %num_xdp_queues = getelementptr i8, ptr %netdev, i32 2836
  %27 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_xdp_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp1985 = icmp sgt i32 %28, 0
  br i1 %cmp1985, label %for.body20.lr.ph, label %for.cond18.preheader.for.end24_crit_edge

for.cond18.preheader.for.end24_crit_edge:         ; preds = %for.cond18.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end24

for.body20.lr.ph:                                 ; preds = %for.cond18.preheader
  %tx_bytes.i60 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 3
  %tx_packets.i62 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 1
  br label %for.body20

for.body13:                                       ; preds = %ixgbevf_get_tx_ring_stats.exit.for.body13_crit_edge, %for.body13.lr.ph
  %i.184 = phi i32 [ 0, %for.body13.lr.ph ], [ %inc16, %ixgbevf_get_tx_ring_stats.exit.for.body13_crit_edge ]
  %arrayidx14 = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr.i, i32 0, i32 9, i32 %i.184
  %29 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx14, align 4
  %tobool.not.i50 = icmp eq ptr %30, null
  br i1 %tobool.not.i50, label %for.body13.ixgbevf_get_tx_ring_stats.exit_crit_edge, label %do.body.preheader.i

for.body13.ixgbevf_get_tx_ring_stats.exit_crit_edge: ; preds = %for.body13
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_get_tx_ring_stats.exit

do.body.preheader.i:                              ; preds = %for.body13
  %syncp.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %30, i32 0, i32 15
  %stats1.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %30, i32 0, i32 14
  %bytes2.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %30, i32 0, i32 14, i32 1
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.preheader.i
  %call.i51 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp.i) #14
  %31 = ptrtoint ptr %bytes2.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %bytes2.i, align 8
  %33 = ptrtoint ptr %stats1.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %stats1.i, align 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !325
  %35 = ptrtoint ptr %syncp.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %syncp.i, align 4
  %cmp.i.i.i.i.not.i = icmp eq i32 %36, %call.i51
  br i1 %cmp.i.i.i.i.not.i, label %do.end.i, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %37 = ptrtoint ptr %tx_bytes.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %tx_bytes.i, align 8
  %add.i = add i64 %38, %32
  store i64 %add.i, ptr %tx_bytes.i, align 8
  %39 = ptrtoint ptr %tx_packets.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %tx_packets.i, align 8
  %add7.i = add i64 %40, %34
  store i64 %add7.i, ptr %tx_packets.i, align 8
  br label %ixgbevf_get_tx_ring_stats.exit

ixgbevf_get_tx_ring_stats.exit:                   ; preds = %do.end.i, %for.body13.ixgbevf_get_tx_ring_stats.exit_crit_edge
  %inc16 = add nuw nsw i32 %i.184, 1
  %41 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %num_tx_queues, align 8
  %cmp12 = icmp slt i32 %inc16, %42
  br i1 %cmp12, label %ixgbevf_get_tx_ring_stats.exit.for.body13_crit_edge, label %ixgbevf_get_tx_ring_stats.exit.for.cond18.preheader_crit_edge

ixgbevf_get_tx_ring_stats.exit.for.cond18.preheader_crit_edge: ; preds = %ixgbevf_get_tx_ring_stats.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond18.preheader

ixgbevf_get_tx_ring_stats.exit.for.body13_crit_edge: ; preds = %ixgbevf_get_tx_ring_stats.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body13

for.body20:                                       ; preds = %ixgbevf_get_tx_ring_stats.exit65.for.body20_crit_edge, %for.body20.lr.ph
  %i.286 = phi i32 [ 0, %for.body20.lr.ph ], [ %inc23, %ixgbevf_get_tx_ring_stats.exit65.for.body20_crit_edge ]
  %arrayidx21 = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr.i, i32 0, i32 7, i32 %i.286
  %43 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx21, align 4
  %tobool.not.i52 = icmp eq ptr %44, null
  br i1 %tobool.not.i52, label %for.body20.ixgbevf_get_tx_ring_stats.exit65_crit_edge, label %do.body.preheader.i56

for.body20.ixgbevf_get_tx_ring_stats.exit65_crit_edge: ; preds = %for.body20
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_get_tx_ring_stats.exit65

do.body.preheader.i56:                            ; preds = %for.body20
  %syncp.i53 = getelementptr inbounds %struct.ixgbevf_ring, ptr %44, i32 0, i32 15
  %stats1.i54 = getelementptr inbounds %struct.ixgbevf_ring, ptr %44, i32 0, i32 14
  %bytes2.i55 = getelementptr inbounds %struct.ixgbevf_ring, ptr %44, i32 0, i32 14, i32 1
  br label %do.body.i59

do.body.i59:                                      ; preds = %do.body.i59.do.body.i59_crit_edge, %do.body.preheader.i56
  %call.i57 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp.i53) #14
  %45 = ptrtoint ptr %bytes2.i55 to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %bytes2.i55, align 8
  %47 = ptrtoint ptr %stats1.i54 to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %stats1.i54, align 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !325
  %49 = ptrtoint ptr %syncp.i53 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %syncp.i53, align 4
  %cmp.i.i.i.i.not.i58 = icmp eq i32 %50, %call.i57
  br i1 %cmp.i.i.i.i.not.i58, label %do.end.i64, label %do.body.i59.do.body.i59_crit_edge

do.body.i59.do.body.i59_crit_edge:                ; preds = %do.body.i59
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i59

do.end.i64:                                       ; preds = %do.body.i59
  call void @__sanitizer_cov_trace_pc() #16
  %51 = ptrtoint ptr %tx_bytes.i60 to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %tx_bytes.i60, align 8
  %add.i61 = add i64 %52, %46
  store i64 %add.i61, ptr %tx_bytes.i60, align 8
  %53 = ptrtoint ptr %tx_packets.i62 to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %tx_packets.i62, align 8
  %add7.i63 = add i64 %54, %48
  store i64 %add7.i63, ptr %tx_packets.i62, align 8
  br label %ixgbevf_get_tx_ring_stats.exit65

ixgbevf_get_tx_ring_stats.exit65:                 ; preds = %do.end.i64, %for.body20.ixgbevf_get_tx_ring_stats.exit65_crit_edge
  %inc23 = add nuw nsw i32 %i.286, 1
  %55 = ptrtoint ptr %num_xdp_queues to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %num_xdp_queues, align 4
  %cmp19 = icmp slt i32 %inc23, %56
  br i1 %cmp19, label %ixgbevf_get_tx_ring_stats.exit65.for.body20_crit_edge, label %ixgbevf_get_tx_ring_stats.exit65.for.end24_crit_edge

ixgbevf_get_tx_ring_stats.exit65.for.end24_crit_edge: ; preds = %ixgbevf_get_tx_ring_stats.exit65
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end24

ixgbevf_get_tx_ring_stats.exit65.for.body20_crit_edge: ; preds = %ixgbevf_get_tx_ring_stats.exit65
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body20

for.end24:                                        ; preds = %ixgbevf_get_tx_ring_stats.exit65.for.end24_crit_edge, %for.cond18.preheader.for.end24_crit_edge
  %call.i66 = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i66, label %for.end24.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i69

for.end24.rcu_read_unlock.exit_crit_edge:         ; preds = %for.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true.i69:                                ; preds = %for.end24
  %call1.i67 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i67)
  %tobool.not.i68 = icmp eq i32 %call1.i67, 0
  br i1 %tobool.not.i68, label %land.lhs.true.i69.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i71

land.lhs.true.i69.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i69
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true2.i71:                               ; preds = %land.lhs.true.i69
  %.b4.i70 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i70, label %land.lhs.true2.i71.rcu_read_unlock.exit_crit_edge, label %if.then.i72

land.lhs.true2.i71.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i71
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

if.then.i72:                                      ; preds = %land.lhs.true2.i71
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.83, i32 noundef 724, ptr noundef nonnull @.str.85) #14
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i72, %land.lhs.true2.i71.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i69.rcu_read_unlock.exit_crit_edge, %for.end24.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !326
  %57 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i.i.i73 = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i.i.i.i73 to ptr
  %preempt_count.i.i.i.i74 = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %preempt_count.i.i.i.i74 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %preempt_count.i.i.i.i74, align 4
  %sub.i.i.i = add i32 %60, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i74, align 4
  tail call void @rcu_read_unlock_strict() #14
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_vlan_rx_kill_vid(ptr noundef %netdev, i16 noundef zeroext %proto, i16 noundef zeroext %vid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %hw1 = getelementptr i8, ptr %netdev, i32 3048
  %mbx_lock = getelementptr i8, ptr %netdev, i32 3564
  tail call void @_raw_spin_lock_bh(ptr noundef %mbx_lock) #14
  %set_vfta = getelementptr i8, ptr %netdev, i32 3136
  %0 = ptrtoint ptr %set_vfta to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %set_vfta, align 4
  %conv = zext i16 %vid to i32
  %call2 = tail call i32 %1(ptr noundef %hw1, i32 noundef %conv, i32 noundef 0, i1 noundef zeroext false) #14
  tail call void @_raw_spin_unlock_bh(ptr noundef %mbx_lock) #14
  tail call void @_clear_bit(i32 noundef %conv, ptr noundef %add.ptr.i) #14
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_xdp(ptr noundef %dev, ptr nocapture noundef readonly %xdp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %xdp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cond = icmp eq i32 %1, 0
  br i1 %cond, label %sw.bb, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

sw.bb:                                            ; preds = %entry
  %prog = getelementptr inbounds %struct.netdev_bpf, ptr %xdp, i32 0, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prog, align 4
  %mtu.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %4 = ptrtoint ptr %mtu.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mtu.i, align 4
  %add2.i = add i32 %5, 22
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %num_rx_queues.i = getelementptr i8, ptr %dev, i32 2936
  %6 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_rx_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp108.i = icmp sgt i32 %7, 0
  br i1 %cmp108.i, label %sw.bb.for.body.i_crit_edge, label %sw.bb.for.end.i_crit_edge

sw.bb.for.end.i_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

sw.bb.for.body.i_crit_edge:                       ; preds = %sw.bb
  br label %for.body.i

for.cond.i:                                       ; preds = %ixgbevf_rx_bufsz.exit.i
  %inc.i = add nuw nsw i32 %i.0109.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %7
  br i1 %exitcond.not.i, label %for.cond.i.for.end.i_crit_edge, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.cond.i.for.end.i_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %sw.bb.for.body.i_crit_edge
  %i.0109.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %sw.bb.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr.i.i, i32 0, i32 14, i32 %i.0109.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i, align 4
  %state.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %for.body.i.ixgbevf_rx_bufsz.exit.i_crit_edge

for.body.i.ixgbevf_rx_bufsz.exit.i_crit_edge:     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_bufsz.exit.i

if.end.i.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %state.i.i, align 4
  %14 = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool3.not.i.i = icmp eq i32 %14, 0
  %..i.i = select i1 %tobool3.not.i.i, i32 2048, i32 1662
  br label %ixgbevf_rx_bufsz.exit.i

ixgbevf_rx_bufsz.exit.i:                          ; preds = %if.end.i.i, %for.body.i.ixgbevf_rx_bufsz.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ 3072, %for.body.i.ixgbevf_rx_bufsz.exit.i_crit_edge ], [ %..i.i, %if.end.i.i ]
  call void @__sanitizer_cov_trace_cmp4(i32 %add2.i, i32 %retval.0.i.i)
  %cmp4.i = icmp ugt i32 %add2.i, %retval.0.i.i
  br i1 %cmp4.i, label %ixgbevf_rx_bufsz.exit.i.return_crit_edge, label %for.cond.i

ixgbevf_rx_bufsz.exit.i.return_crit_edge:         ; preds = %ixgbevf_rx_bufsz.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

for.end.i:                                        ; preds = %for.cond.i.for.end.i_crit_edge, %sw.bb.for.end.i_crit_edge
  %xdp_prog.i = getelementptr i8, ptr %dev, i32 3040
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %xdp_prog.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !327
  %15 = ptrtoint ptr %3 to i32
  tail call void @llvm.prefetch.p0(ptr %xdp_prog.i, i32 1, i32 3, i32 1) #14
  %16 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %15, ptr %xdp_prog.i) #14, !srcloc !328
  %asmresult.i.i = extractvalue { i32, i32 } %16, 0
  %17 = inttoptr i32 %asmresult.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !329
  %tobool.i = icmp eq ptr %3, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %tobool21.i = icmp ne i32 %asmresult.i.i, 0
  %cmp26.not.i = xor i1 %tobool.i, %tobool21.i
  br i1 %cmp26.not.i, label %for.cond37.preheader.i, label %if.then27.i

for.cond37.preheader.i:                           ; preds = %for.end.i
  %18 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_rx_queues.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp39110.i = icmp sgt i32 %19, 0
  br i1 %cmp39110.i, label %for.cond37.preheader.i.for.body40.i_crit_edge, label %for.cond37.preheader.i.if.end69.i_crit_edge

for.cond37.preheader.i.if.end69.i_crit_edge:      ; preds = %for.cond37.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69.i

for.cond37.preheader.i.for.body40.i_crit_edge:    ; preds = %for.cond37.preheader.i
  br label %for.body40.i

if.then27.i:                                      ; preds = %for.end.i
  %state.i100.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %20 = ptrtoint ptr %state.i100.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %state.i100.i, align 4
  %and1.i.i101.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i101.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i101.i, 0
  br i1 %tobool.i.not.i, label %if.then27.i.if.end31.i_crit_edge, label %if.then29.i

if.then27.i.if.end31.i_crit_edge:                 ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end31.i

if.then29.i:                                      ; preds = %if.then27.i
  %22 = ptrtoint ptr %state.i100.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %state.i100.i, align 4
  %24 = and i32 %23, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.i.not.i.i = icmp eq i32 %24, 0
  br i1 %tobool.i.not.i.i, label %if.then29.i.if.end31.i_crit_edge, label %if.then.i.i

if.then29.i.if.end31.i_crit_edge:                 ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end31.i

if.then.i.i:                                      ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_close_suspend(ptr noundef %add.ptr.i.i) #14
  br label %if.end31.i

if.end31.i:                                       ; preds = %if.then.i.i, %if.then29.i.if.end31.i_crit_edge, %if.then27.i.if.end31.i_crit_edge
  tail call fastcc void @ixgbevf_clear_interrupt_scheme(ptr noundef %add.ptr.i.i) #14
  %call32.i = tail call fastcc i32 @ixgbevf_init_interrupt_scheme(ptr noundef %add.ptr.i.i) #14
  %25 = ptrtoint ptr %state.i100.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %state.i100.i, align 4
  %and1.i.i104.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i104.i)
  %tobool.i105.not.i = icmp eq i32 %and1.i.i104.i, 0
  br i1 %tobool.i105.not.i, label %if.end31.i.if.end69.i_crit_edge, label %if.then34.i

if.end31.i.if.end69.i_crit_edge:                  ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69.i

if.then34.i:                                      ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #16
  %call35.i = tail call i32 @ixgbevf_open(ptr noundef %dev) #14
  br label %if.end69.i

for.body40.i:                                     ; preds = %for.body40.i.for.body40.i_crit_edge, %for.cond37.preheader.i.for.body40.i_crit_edge
  %i.1111.i = phi i32 [ %inc67.i, %for.body40.i.for.body40.i_crit_edge ], [ 0, %for.cond37.preheader.i.for.body40.i_crit_edge ]
  %arrayidx43.i = getelementptr %struct.ixgbevf_adapter, ptr %add.ptr.i.i, i32 0, i32 14, i32 %i.1111.i
  %27 = ptrtoint ptr %arrayidx43.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx43.i, align 4
  %xdp_prog44.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %28, i32 0, i32 3
  %call.i99.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %xdp_prog44.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !330
  %29 = ptrtoint ptr %xdp_prog.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %xdp_prog.i, align 8
  %31 = ptrtoint ptr %30 to i32
  tail call void @llvm.prefetch.p0(ptr %xdp_prog44.i, i32 1, i32 3, i32 1) #14
  %32 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %31, ptr %xdp_prog44.i) #14, !srcloc !328
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !331
  %inc67.i = add nuw nsw i32 %i.1111.i, 1
  %33 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %num_rx_queues.i, align 8
  %cmp39.i = icmp slt i32 %inc67.i, %34
  br i1 %cmp39.i, label %for.body40.i.for.body40.i_crit_edge, label %for.body40.i.if.end69.i_crit_edge

for.body40.i.if.end69.i_crit_edge:                ; preds = %for.body40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69.i

for.body40.i.for.body40.i_crit_edge:              ; preds = %for.body40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body40.i

if.end69.i:                                       ; preds = %for.body40.i.if.end69.i_crit_edge, %if.then34.i, %if.end31.i.if.end69.i_crit_edge, %for.cond37.preheader.i.if.end69.i_crit_edge
  br i1 %tobool21.i, label %if.then71.i, label %if.end69.i.return_crit_edge

if.end69.i.return_crit_edge:                      ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.then71.i:                                      ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @bpf_prog_put(ptr noundef nonnull %17) #14
  br label %return

return:                                           ; preds = %if.then71.i, %if.end69.i.return_crit_edge, %ixgbevf_rx_bufsz.exit.i.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -22, %entry.return_crit_edge ], [ 0, %if.then71.i ], [ 0, %if.end69.i.return_crit_edge ], [ -22, %ixgbevf_rx_bufsz.exit.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__skb_pad(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ixgbevf_ipsec_tx(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__ixgbevf_maybe_stop_tx(ptr nocapture noundef %tx_ring, i32 noundef %size) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 2
  %0 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev, align 8
  %queue_index = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 22
  %2 = ptrtoint ptr %queue_index to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %queue_index, align 4
  %conv.i = and i32 %3, 65535
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 103
  %4 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %5, i32 %conv.i, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !332
  %next_to_clean.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 10
  %6 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %next_to_clean.i, align 4
  %next_to_use.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 9
  %8 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %next_to_use.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %7, i16 %9)
  %cmp.i = icmp ugt i16 %7, %9
  br i1 %cmp.i, label %entry.ixgbevf_desc_unused.exit_crit_edge, label %cond.false.i

entry.ixgbevf_desc_unused.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_desc_unused.exit

cond.false.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %count.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 8
  %10 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %count.i, align 32
  br label %ixgbevf_desc_unused.exit

ixgbevf_desc_unused.exit:                         ; preds = %cond.false.i, %entry.ixgbevf_desc_unused.exit_crit_edge
  %cond.i = phi i16 [ %11, %cond.false.i ], [ 0, %entry.ixgbevf_desc_unused.exit_crit_edge ]
  %12 = xor i16 %9, -1
  %add.i = add i16 %7, %12
  %sub6.i = add i16 %add.i, %cond.i
  %conv3 = zext i16 %sub6.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv3, i32 %size)
  %cmp = icmp slt i32 %conv3, %size
  br i1 %cmp, label %ixgbevf_desc_unused.exit.return_crit_edge, label %if.end, !prof !322

ixgbevf_desc_unused.exit.return_crit_edge:        ; preds = %ixgbevf_desc_unused.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %ixgbevf_desc_unused.exit
  call void @__sanitizer_cov_trace_pc() #16
  %13 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %netdev, align 8
  %15 = ptrtoint ptr %queue_index to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %queue_index, align 4
  %conv.i14 = and i32 %16, 65535
  %_tx.i.i15 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 103
  %17 = ptrtoint ptr %_tx.i.i15 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %_tx.i.i15, align 128
  %state.i.i16 = getelementptr %struct.netdev_queue, ptr %18, i32 %conv.i14, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i16) #14
  %19 = getelementptr inbounds %struct.ixgbevf_ring, ptr %tx_ring, i32 0, i32 16
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %19, align 32
  %inc = add i64 %21, 1
  store i64 %inc, ptr %19, align 32
  br label %return

return:                                           ; preds = %if.end, %ixgbevf_desc_unused.exit.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -16, %ixgbevf_desc_unused.exit.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @csum_partial(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pskb_expand_head(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_checksum_help(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_map_single(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_clone_tx_timestamp(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_tstamp_tx(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #14, !srcloc !333
  %and.i.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %do.body24.critedge.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @trace_hardirqs_off() #14
  %dep_map.c.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %1 = tail call ptr @llvm.returnaddress(i32 0) #14
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #14
  tail call void @lock_release(ptr noundef %dep_map.c.i.i, i32 noundef %2) #14
  tail call void @trace_hardirqs_on() #14
  br label %do.body24.i.i

do.body24.critedge.i.i:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dep_map.c48.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %3 = tail call ptr @llvm.returnaddress(i32 0) #14
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #14
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i, i32 noundef %4) #14
  br label %do.body24.i.i

do.body24.i.i:                                    ; preds = %do.body24.critedge.i.i, %if.then.i.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #14, !srcloc !334
  %and.i.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool32.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool32.not.i.i, label %if.then36.i.i, label %do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge, !prof !308

do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge: ; preds = %do.body24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %seqcount_lockdep_reader_access.exit.i

if.then36.i.i:                                    ; preds = %do.body24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @warn_bogus_irq_restore() #14
  br label %seqcount_lockdep_reader_access.exit.i

seqcount_lockdep_reader_access.exit.i:            ; preds = %if.then36.i.i, %do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #14, !srcloc !335
  %6 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %syncp, align 4
  %and18.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %tobool.not19.i = icmp eq i32 %and18.i, 0
  br i1 %tobool.not19.i, label %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge, label %seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge

seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i
  br label %do.end.i

seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__u64_stats_fetch_begin.exit

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !336
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #14, !srcloc !337
  %8 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %syncp, align 4
  %and.i = and i32 %9, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i.__u64_stats_fetch_begin.exit_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

do.end.i.__u64_stats_fetch_begin.exit_crit_edge:  ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__u64_stats_fetch_begin.exit

__u64_stats_fetch_begin.exit:                     ; preds = %do.end.i.__u64_stats_fetch_begin.exit_crit_edge, %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge
  %.lcssa.i = phi i32 [ %7, %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge ], [ %9, %do.end.i.__u64_stats_fetch_begin.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !338
  ret i32 %.lcssa.i
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_put(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_rss_key_fill(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @get_random_bytes(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_msix_range(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_napi_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_poll(ptr noundef %napi, i32 noundef %budget) #0 align 64 {
entry:
  %xdp.i = alloca %struct.xdp_buff, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %napi, i32 -8
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 128
  %tx = getelementptr i8, ptr %napi, i32 240
  %2 = ptrtoint ptr %tx to i32
  call void @__asan_load4_noabort(i32 %2)
  %ring.0209 = load ptr, ptr %tx, align 8
  %cmp.not210 = icmp eq ptr %ring.0209, null
  br i1 %cmp.not210, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %total_bytes90.i = getelementptr i8, ptr %napi, i32 244
  %total_packets93.i = getelementptr i8, ptr %napi, i32 248
  br label %for.body

for.body:                                         ; preds = %ixgbevf_clean_tx_irq.exit.for.body_crit_edge, %for.body.lr.ph
  %ring.0212 = phi ptr [ %ring.0209, %for.body.lr.ph ], [ %ring.0, %ixgbevf_clean_tx_irq.exit.for.body_crit_edge ]
  %clean_complete.0.off0211 = phi i1 [ true, %for.body.lr.ph ], [ %spec.select, %ixgbevf_clean_tx_irq.exit.for.body_crit_edge ]
  %3 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %add.ptr, align 128
  %count.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 8
  %5 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %count.i, align 32
  %next_to_clean.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 10
  %7 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %next_to_clean.i, align 4
  %state.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %4, i32 0, i32 30
  %9 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %state.i, align 4
  %11 = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.ixgbevf_clean_tx_irq.exit_crit_edge

for.body.ixgbevf_clean_tx_irq.exit_crit_edge:     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_tx_irq.exit

if.end.i:                                         ; preds = %for.body
  %conv2.i = zext i16 %8 to i32
  %12 = lshr i16 %6, 1
  %div.i = zext i16 %12 to i32
  %13 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 12
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  %arrayidx.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %15, i32 %conv2.i
  %desc.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 5
  %16 = ptrtoint ptr %desc.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %desc.i, align 4
  %arrayidx3.i = getelementptr %union.ixgbe_adv_tx_desc, ptr %17, i32 %conv2.i
  %conv5.i = zext i16 %6 to i32
  %sub.i = sub nsw i32 %conv2.i, %conv5.i
  %state23.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 13
  %dev.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 4
  br label %do.body.i

do.body.i:                                        ; preds = %cleanup.i.do.body.i_crit_edge, %if.end.i
  %tx_buffer.0.i = phi ptr [ %arrayidx.i, %if.end.i ], [ %tx_buffer.3.i, %cleanup.i.do.body.i_crit_edge ]
  %tx_desc.0.i = phi ptr [ %arrayidx3.i, %if.end.i ], [ %tx_desc.3.i, %cleanup.i.do.body.i_crit_edge ]
  %total_bytes.0.i = phi i32 [ 0, %if.end.i ], [ %add.i, %cleanup.i.do.body.i_crit_edge ]
  %total_packets.0.i = phi i32 [ 0, %if.end.i ], [ %add18.i, %cleanup.i.do.body.i_crit_edge ]
  %total_ipsec.0.i = phi i32 [ 0, %if.end.i ], [ %spec.select.i, %cleanup.i.do.body.i_crit_edge ]
  %budget.0.i = phi i32 [ %div.i, %if.end.i ], [ %dec.i, %cleanup.i.do.body.i_crit_edge ]
  %i.0.i = phi i32 [ %sub.i, %if.end.i ], [ %i.3.i, %cleanup.i.do.body.i_crit_edge ]
  %18 = ptrtoint ptr %tx_buffer.0.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tx_buffer.0.i, align 4
  %tobool6.not.i = icmp eq ptr %19, null
  br i1 %tobool6.not.i, label %do.body.i.do.end78.i_crit_edge, label %do.end.i

do.body.i.do.end78.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end78.i

do.end.i:                                         ; preds = %do.body.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !339
  %status.i = getelementptr inbounds %struct.anon.197, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %status.i, align 4
  %and.i = and i32 %21, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool13.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool13.not.i, label %do.end.i.do.end78.i_crit_edge, label %if.end15.i

do.end.i.do.end78.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end78.i

if.end15.i:                                       ; preds = %do.end.i
  %22 = ptrtoint ptr %tx_buffer.0.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %tx_buffer.0.i, align 4
  %bytecount.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.0.i, i32 0, i32 3
  %23 = ptrtoint ptr %bytecount.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bytecount.i, align 4
  %add.i = add i32 %24, %total_bytes.0.i
  %gso_segs.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.0.i, i32 0, i32 4
  %25 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %gso_segs.i, align 4
  %conv17.i = zext i16 %26 to i32
  %add18.i = add i32 %total_packets.0.i, %conv17.i
  %tx_flags.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.0.i, i32 0, i32 8
  %27 = ptrtoint ptr %tx_flags.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %tx_flags.i, align 4
  %and19.i = lshr i32 %28, 4
  %and19.lobit.i = and i32 %and19.i, 1
  %spec.select.i = add i32 %and19.lobit.i, %total_ipsec.0.i
  %29 = ptrtoint ptr %state23.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %state23.i, align 4
  %31 = and i32 %30, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool25.not.i = icmp eq i32 %31, 0
  %32 = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.0.i, i32 0, i32 2
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 4
  br i1 %tobool25.not.i, label %if.else.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @page_frag_free(ptr noundef %34) #14
  br label %if.end27.i

if.else.i:                                        ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @napi_consume_skb(ptr noundef %34, i32 noundef %budget) #14
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.else.i, %if.then26.i
  %35 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev.i, align 16
  %dma.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.0.i, i32 0, i32 6
  %37 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %dma.i, align 4
  %len.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.0.i, i32 0, i32 7
  %39 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %len.i, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %36, i32 noundef %38, i32 noundef %40, i32 noundef 1, i32 noundef 0) #14
  %41 = ptrtoint ptr %len.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %len.i, align 4
  %cmp.not328.i = icmp eq ptr %tx_desc.0.i, %19
  br i1 %cmp.not328.i, label %if.end27.i.while.end.i_crit_edge, label %if.end27.i.while.body.i_crit_edge

if.end27.i.while.body.i_crit_edge:                ; preds = %if.end27.i
  br label %while.body.i

if.end27.i.while.end.i_crit_edge:                 ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.body.i:                                     ; preds = %if.end50.i.while.body.i_crit_edge, %if.end27.i.while.body.i_crit_edge
  %i.1331.i = phi i32 [ %i.2.i, %if.end50.i.while.body.i_crit_edge ], [ %i.0.i, %if.end27.i.while.body.i_crit_edge ]
  %tx_desc.1330.i = phi ptr [ %tx_desc.2.i, %if.end50.i.while.body.i_crit_edge ], [ %tx_desc.0.i, %if.end27.i.while.body.i_crit_edge ]
  %tx_buffer.1329.i = phi ptr [ %tx_buffer.2.i, %if.end50.i.while.body.i_crit_edge ], [ %tx_buffer.0.i, %if.end27.i.while.body.i_crit_edge ]
  %incdec.ptr.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %tx_buffer.1329.i, i32 1
  %incdec.ptr30.i = getelementptr %union.ixgbe_adv_tx_desc, ptr %tx_desc.1330.i, i32 1
  %inc31.i = add i32 %i.1331.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %inc31.i)
  %tobool32.not.i = icmp eq i32 %inc31.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %while.body.i.if.end42.i_crit_edge, !prof !308

while.body.i.if.end42.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42.i

if.then36.i:                                      ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %count.i, align 32
  %conv38.i = zext i16 %43 to i32
  %sub39.i = sub nsw i32 0, %conv38.i
  %44 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %13, align 8
  %46 = ptrtoint ptr %desc.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %desc.i, align 4
  br label %if.end42.i

if.end42.i:                                       ; preds = %if.then36.i, %while.body.i.if.end42.i_crit_edge
  %tx_buffer.2.i = phi ptr [ %45, %if.then36.i ], [ %incdec.ptr.i, %while.body.i.if.end42.i_crit_edge ]
  %tx_desc.2.i = phi ptr [ %47, %if.then36.i ], [ %incdec.ptr30.i, %while.body.i.if.end42.i_crit_edge ]
  %i.2.i = phi i32 [ %sub39.i, %if.then36.i ], [ %inc31.i, %while.body.i.if.end42.i_crit_edge ]
  %len43.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.2.i, i32 0, i32 7
  %48 = ptrtoint ptr %len43.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %len43.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool44.not.i = icmp eq i32 %49, 0
  br i1 %tobool44.not.i, label %if.end42.i.if.end50.i_crit_edge, label %if.then45.i

if.end42.i.if.end50.i_crit_edge:                  ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.i

if.then45.i:                                      ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #16
  %50 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %dev.i, align 16
  %dma47.i = getelementptr inbounds %struct.ixgbevf_tx_buffer, ptr %tx_buffer.2.i, i32 0, i32 6
  %52 = ptrtoint ptr %dma47.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %dma47.i, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %51, i32 noundef %53, i32 noundef %49, i32 noundef 1, i32 noundef 0) #14
  %54 = ptrtoint ptr %len43.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %len43.i, align 4
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.then45.i, %if.end42.i.if.end50.i_crit_edge
  %cmp.not.i = icmp eq ptr %tx_desc.2.i, %19
  br i1 %cmp.not.i, label %if.end50.i.while.end.i_crit_edge, label %if.end50.i.while.body.i_crit_edge

if.end50.i.while.body.i_crit_edge:                ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

if.end50.i.while.end.i_crit_edge:                 ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.end.i:                                      ; preds = %if.end50.i.while.end.i_crit_edge, %if.end27.i.while.end.i_crit_edge
  %tx_buffer.1.lcssa.i = phi ptr [ %tx_buffer.0.i, %if.end27.i.while.end.i_crit_edge ], [ %tx_buffer.2.i, %if.end50.i.while.end.i_crit_edge ]
  %tx_desc.1.lcssa.i = phi ptr [ %tx_desc.0.i, %if.end27.i.while.end.i_crit_edge ], [ %19, %if.end50.i.while.end.i_crit_edge ]
  %i.1.lcssa.i = phi i32 [ %i.0.i, %if.end27.i.while.end.i_crit_edge ], [ %i.2.i, %if.end50.i.while.end.i_crit_edge ]
  %incdec.ptr51.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %tx_buffer.1.lcssa.i, i32 1
  %incdec.ptr52.i = getelementptr %union.ixgbe_adv_tx_desc, ptr %tx_desc.1.lcssa.i, i32 1
  %inc53.i = add i32 %i.1.lcssa.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %inc53.i)
  %tobool54.not.i = icmp eq i32 %inc53.i, 0
  br i1 %tobool54.not.i, label %if.then63.i, label %while.end.i.cleanup.i_crit_edge, !prof !308

while.end.i.cleanup.i_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

if.then63.i:                                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %55 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %count.i, align 32
  %conv65.i = zext i16 %56 to i32
  %sub66.i = sub nsw i32 0, %conv65.i
  %57 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %13, align 8
  %59 = ptrtoint ptr %desc.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %desc.i, align 4
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then63.i, %while.end.i.cleanup.i_crit_edge
  %tx_buffer.3.i = phi ptr [ %58, %if.then63.i ], [ %incdec.ptr51.i, %while.end.i.cleanup.i_crit_edge ]
  %tx_desc.3.i = phi ptr [ %60, %if.then63.i ], [ %incdec.ptr52.i, %while.end.i.cleanup.i_crit_edge ]
  %i.3.i = phi i32 [ %sub66.i, %if.then63.i ], [ %inc53.i, %while.end.i.cleanup.i_crit_edge ]
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %tx_desc.3.i) #14, !srcloc !340
  %dec.i = add i32 %budget.0.i, -1
  %tobool71.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool71.not.i, label %cleanup.i.do.end78.i_crit_edge, label %cleanup.i.do.body.i_crit_edge, !prof !341

cleanup.i.do.body.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

cleanup.i.do.end78.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end78.i

do.end78.i:                                       ; preds = %cleanup.i.do.end78.i_crit_edge, %do.end.i.do.end78.i_crit_edge, %do.body.i.do.end78.i_crit_edge
  %i.4326.i = phi i32 [ %i.3.i, %cleanup.i.do.end78.i_crit_edge ], [ %i.0.i, %do.body.i.do.end78.i_crit_edge ], [ %i.0.i, %do.end.i.do.end78.i_crit_edge ]
  %budget.1325.i = phi i32 [ 0, %cleanup.i.do.end78.i_crit_edge ], [ %budget.0.i, %do.body.i.do.end78.i_crit_edge ], [ %budget.0.i, %do.end.i.do.end78.i_crit_edge ]
  %total_ipsec.2324.i = phi i32 [ %spec.select.i, %cleanup.i.do.end78.i_crit_edge ], [ %total_ipsec.0.i, %do.body.i.do.end78.i_crit_edge ], [ %total_ipsec.0.i, %do.end.i.do.end78.i_crit_edge ]
  %total_packets.1323.i = phi i32 [ %add18.i, %cleanup.i.do.end78.i_crit_edge ], [ %total_packets.0.i, %do.body.i.do.end78.i_crit_edge ], [ %total_packets.0.i, %do.end.i.do.end78.i_crit_edge ]
  %total_bytes.1322.i = phi i32 [ %add.i, %cleanup.i.do.end78.i_crit_edge ], [ %total_bytes.0.i, %do.body.i.do.end78.i_crit_edge ], [ %total_bytes.0.i, %do.end.i.do.end78.i_crit_edge ]
  %61 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %count.i, align 32
  %conv80.i = zext i16 %62 to i32
  %add81.i = add i32 %i.4326.i, %conv80.i
  %conv82.i = trunc i32 %add81.i to i16
  %63 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 %conv82.i, ptr %next_to_clean.i, align 4
  %syncp.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 15
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp.i) #14
  %conv84.i = zext i32 %total_bytes.1322.i to i64
  %stats.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 14
  %bytes.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 14, i32 1
  %64 = ptrtoint ptr %bytes.i to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %bytes.i, align 8
  %add85.i = add i64 %65, %conv84.i
  store i64 %add85.i, ptr %bytes.i, align 8
  %conv86.i = zext i32 %total_packets.1323.i to i64
  %66 = ptrtoint ptr %stats.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %stats.i, align 16
  %add88.i = add i64 %67, %conv86.i
  store i64 %add88.i, ptr %stats.i, align 16
  %dep_map.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 15, i32 0, i32 1
  %68 = tail call ptr @llvm.returnaddress(i32 0) #14
  %69 = ptrtoint ptr %68 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %69) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !342
  %70 = ptrtoint ptr %syncp.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %syncp.i, align 4
  %inc.i.i.i.i = add i32 %71, 1
  store i32 %inc.i.i.i.i, ptr %syncp.i, align 4
  %72 = ptrtoint ptr %total_bytes90.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %total_bytes90.i, align 4
  %add91.i = add i32 %73, %total_bytes.1322.i
  store i32 %add91.i, ptr %total_bytes90.i, align 4
  %74 = ptrtoint ptr %total_packets93.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %total_packets93.i, align 8
  %add94.i = add i32 %75, %total_packets.1323.i
  store i32 %add94.i, ptr %total_packets93.i, align 8
  %conv95.i = zext i32 %total_ipsec.2324.i to i64
  %tx_ipsec.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %4, i32 0, i32 12
  %76 = ptrtoint ptr %tx_ipsec.i to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %tx_ipsec.i, align 8
  %add96.i = add i64 %77, %conv95.i
  store i64 %add96.i, ptr %tx_ipsec.i, align 8
  %78 = ptrtoint ptr %state23.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %state23.i, align 4
  %80 = and i32 %79, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool99.not.i = icmp eq i32 %80, 0
  br i1 %tobool99.not.i, label %do.end78.i.if.end136.i_crit_edge, label %land.lhs.true.i

do.end78.i.if.end136.i_crit_edge:                 ; preds = %do.end78.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end136.i

land.lhs.true.i:                                  ; preds = %do.end78.i
  %81 = ptrtoint ptr %stats.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %stats.i, align 16
  %conv.i.i = trunc i64 %82 to i32
  %tx_done_old1.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 16, i32 0, i32 2
  %83 = ptrtoint ptr %tx_done_old1.i.i to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %tx_done_old1.i.i, align 16
  %conv2.i.i = trunc i64 %84 to i32
  %netdev.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 2
  %85 = ptrtoint ptr %netdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %netdev.i.i.i, align 8
  %hw1.i.i.i = getelementptr i8, ptr %86, i32 3048
  %reg_idx.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 21
  %87 = ptrtoint ptr %reg_idx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %87)
  %88 = load i16, ptr %reg_idx.i.i.i, align 16
  %conv.i.i.i = zext i16 %88 to i32
  %mul.i.i.i = shl nuw nsw i32 %conv.i.i.i, 6
  %add.i.i.i = add nuw nsw i32 %mul.i.i.i, 8208
  %hw_addr.i.i.i.i = getelementptr i8, ptr %86, i32 3052
  %89 = ptrtoint ptr %hw_addr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile ptr, ptr %hw_addr.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %90, null
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.ixgbevf_read_reg.exit.i.i.i_crit_edge, label %if.end.i.i.i.i, !prof !308

land.lhs.true.i.ixgbevf_read_reg.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i
  %add.ptr.i27.i.i.i = getelementptr i8, ptr %90, i32 %add.i.i.i
  %91 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i.i) #14, !srcloc !309
  %92 = tail call i32 @llvm.bswap.i32(i32 %91) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %91)
  %cmp.i.i.i.i = icmp eq i32 %91, -1
  br i1 %cmp.i.i.i.i, label %if.then12.i.i.i.i, label %if.end.i.i.i.i.ixgbevf_read_reg.exit.i.i.i_crit_edge, !prof !308

if.end.i.i.i.i.ixgbevf_read_reg.exit.i.i.i_crit_edge: ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit.i.i.i

if.then12.i.i.i.i:                                ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1.i.i.i, i32 noundef %add.i.i.i) #14
  br label %ixgbevf_read_reg.exit.i.i.i

ixgbevf_read_reg.exit.i.i.i:                      ; preds = %if.then12.i.i.i.i, %if.end.i.i.i.i.ixgbevf_read_reg.exit.i.i.i_crit_edge, %land.lhs.true.i.ixgbevf_read_reg.exit.i.i.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ -1, %land.lhs.true.i.ixgbevf_read_reg.exit.i.i.i_crit_edge ], [ %92, %if.then12.i.i.i.i ], [ %92, %if.end.i.i.i.i.ixgbevf_read_reg.exit.i.i.i_crit_edge ]
  %93 = ptrtoint ptr %reg_idx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %93)
  %94 = load i16, ptr %reg_idx.i.i.i, align 16
  %conv4.i.i.i = zext i16 %94 to i32
  %mul5.i.i.i = shl nuw nsw i32 %conv4.i.i.i, 6
  %add6.i.i.i = add nuw nsw i32 %mul5.i.i.i, 8216
  %95 = ptrtoint ptr %hw_addr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile ptr, ptr %hw_addr.i.i.i.i, align 4
  %tobool.not.i29.i.i.i = icmp eq ptr %96, null
  br i1 %tobool.not.i29.i.i.i, label %ixgbevf_read_reg.exit.i.i.i.ixgbevf_read_reg.exit35.i.i.i_crit_edge, label %if.end.i32.i.i.i, !prof !308

ixgbevf_read_reg.exit.i.i.i.ixgbevf_read_reg.exit35.i.i.i_crit_edge: ; preds = %ixgbevf_read_reg.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit35.i.i.i

if.end.i32.i.i.i:                                 ; preds = %ixgbevf_read_reg.exit.i.i.i
  %add.ptr.i30.i.i.i = getelementptr i8, ptr %96, i32 %add6.i.i.i
  %97 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i30.i.i.i) #14, !srcloc !309
  %98 = tail call i32 @llvm.bswap.i32(i32 %97) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %97)
  %cmp.i31.i.i.i = icmp eq i32 %97, -1
  br i1 %cmp.i31.i.i.i, label %if.then12.i33.i.i.i, label %if.end.i32.i.i.i.ixgbevf_read_reg.exit35.i.i.i_crit_edge, !prof !308

if.end.i32.i.i.i.ixgbevf_read_reg.exit35.i.i.i_crit_edge: ; preds = %if.end.i32.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit35.i.i.i

if.then12.i33.i.i.i:                              ; preds = %if.end.i32.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw1.i.i.i, i32 noundef %add6.i.i.i) #14
  br label %ixgbevf_read_reg.exit35.i.i.i

ixgbevf_read_reg.exit35.i.i.i:                    ; preds = %if.then12.i33.i.i.i, %if.end.i32.i.i.i.ixgbevf_read_reg.exit35.i.i.i_crit_edge, %ixgbevf_read_reg.exit.i.i.i.ixgbevf_read_reg.exit35.i.i.i_crit_edge
  %retval.0.i34.i.i.i = phi i32 [ -1, %ixgbevf_read_reg.exit.i.i.i.ixgbevf_read_reg.exit35.i.i.i_crit_edge ], [ %98, %if.then12.i33.i.i.i ], [ %98, %if.end.i32.i.i.i.ixgbevf_read_reg.exit35.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i34.i.i.i, i32 %retval.0.i.i.i.i)
  %cmp.not.i.i.i = icmp eq i32 %retval.0.i34.i.i.i, %retval.0.i.i.i.i
  br i1 %cmp.not.i.i.i, label %ixgbevf_get_tx_pending.exit.thread.i.i, label %if.then.i.i.i

ixgbevf_get_tx_pending.exit.thread.i.i:           ; preds = %ixgbevf_read_reg.exit35.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %state23.i) #14
  br label %ixgbevf_check_tx_hang.exit.thread.i

if.then.i.i.i:                                    ; preds = %ixgbevf_read_reg.exit35.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i34.i.i.i, i32 %retval.0.i.i.i.i)
  %cmp9.i.i.i = icmp ugt i32 %retval.0.i34.i.i.i, %retval.0.i.i.i.i
  br i1 %cmp9.i.i.i, label %if.then.i.i.i.ixgbevf_get_tx_pending.exit.i.i_crit_edge, label %cond.false.i.i.i

if.then.i.i.i.ixgbevf_get_tx_pending.exit.i.i_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_get_tx_pending.exit.i.i

cond.false.i.i.i:                                 ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %99 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %count.i, align 32
  %conv11.i.i.i = zext i16 %100 to i32
  %add12.i.i.i = add i32 %retval.0.i34.i.i.i, %conv11.i.i.i
  br label %ixgbevf_get_tx_pending.exit.i.i

ixgbevf_get_tx_pending.exit.i.i:                  ; preds = %cond.false.i.i.i, %if.then.i.i.i.ixgbevf_get_tx_pending.exit.i.i_crit_edge
  %call7.pn.i.i.i = phi i32 [ %add12.i.i.i, %cond.false.i.i.i ], [ %retval.0.i34.i.i.i, %if.then.i.i.i.ixgbevf_get_tx_pending.exit.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %call7.pn.i.i.i, i32 %retval.0.i.i.i.i)
  %phi.cmp.i.i = icmp eq i32 %call7.pn.i.i.i, %retval.0.i.i.i.i
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %state23.i) #14
  call void @__sanitizer_cov_trace_cmp4(i32 %conv2.i.i, i32 %conv.i.i)
  %cmp.i.i = icmp ne i32 %conv2.i.i, %conv.i.i
  %or.cond.i.i = select i1 %cmp.i.i, i1 true, i1 %phi.cmp.i.i
  br i1 %or.cond.i.i, label %ixgbevf_get_tx_pending.exit.i.i.ixgbevf_check_tx_hang.exit.thread.i_crit_edge, label %ixgbevf_check_tx_hang.exit.i

ixgbevf_get_tx_pending.exit.i.i.ixgbevf_check_tx_hang.exit.thread.i_crit_edge: ; preds = %ixgbevf_get_tx_pending.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_check_tx_hang.exit.thread.i

ixgbevf_check_tx_hang.exit.thread.i:              ; preds = %ixgbevf_get_tx_pending.exit.i.i.ixgbevf_check_tx_hang.exit.thread.i_crit_edge, %ixgbevf_get_tx_pending.exit.thread.i.i
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %state23.i) #14
  %conv9.i.i = and i64 %82, 4294967295
  %101 = ptrtoint ptr %tx_done_old1.i.i to i32
  call void @__asan_store8_noabort(i32 %101)
  store i64 %conv9.i.i, ptr %tx_done_old1.i.i, align 16
  br label %if.end136.i

ixgbevf_check_tx_hang.exit.i:                     ; preds = %ixgbevf_get_tx_pending.exit.i.i
  %call6.i.i = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %state23.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.i.not.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.i.not.i, label %ixgbevf_check_tx_hang.exit.i.if.end136.i_crit_edge, label %if.then102.i

ixgbevf_check_tx_hang.exit.i.if.end136.i_crit_edge: ; preds = %ixgbevf_check_tx_hang.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end136.i

if.then102.i:                                     ; preds = %ixgbevf_check_tx_hang.exit.i
  %hw103.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %4, i32 0, i32 26
  %102 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %13, align 8
  %arrayidx105.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %103, i32 %add81.i
  %104 = ptrtoint ptr %arrayidx105.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %arrayidx105.i, align 4
  %106 = ptrtoint ptr %state23.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile i32, ptr %state23.i, align 4
  %108 = and i32 %107, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %108)
  %tobool112.not.i = icmp eq i32 %108, 0
  %cond.i = select i1 %tobool112.not.i, ptr @.str.120, ptr @.str.119
  %queue_index.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 22
  %109 = ptrtoint ptr %queue_index.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %queue_index.i, align 4
  %111 = ptrtoint ptr %reg_idx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %reg_idx.i.i.i, align 16
  %conv113.i = zext i16 %112 to i32
  %mul.i = shl nuw nsw i32 %conv113.i, 6
  %add114.i = add nuw nsw i32 %mul.i, 8208
  %hw_addr.i168 = getelementptr inbounds %struct.ixgbevf_adapter, ptr %4, i32 0, i32 26, i32 1
  %113 = ptrtoint ptr %hw_addr.i168 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile ptr, ptr %hw_addr.i168, align 4
  %tobool.not.i169 = icmp eq ptr %114, null
  br i1 %tobool.not.i169, label %if.then102.i.ixgbevf_read_reg.exit176_crit_edge, label %if.end.i172, !prof !308

if.then102.i.ixgbevf_read_reg.exit176_crit_edge:  ; preds = %if.then102.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit176

if.end.i172:                                      ; preds = %if.then102.i
  %add.ptr.i170 = getelementptr i8, ptr %114, i32 %add114.i
  %115 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i170) #14, !srcloc !309
  %116 = tail call i32 @llvm.bswap.i32(i32 %115) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %115)
  %cmp.i171 = icmp eq i32 %115, -1
  br i1 %cmp.i171, label %if.then12.i173, label %if.end.i172.ixgbevf_read_reg.exit176_crit_edge, !prof !308

if.end.i172.ixgbevf_read_reg.exit176_crit_edge:   ; preds = %if.end.i172
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit176

if.then12.i173:                                   ; preds = %if.end.i172
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw103.i, i32 noundef %add114.i) #14
  br label %ixgbevf_read_reg.exit176

ixgbevf_read_reg.exit176:                         ; preds = %if.then12.i173, %if.end.i172.ixgbevf_read_reg.exit176_crit_edge, %if.then102.i.ixgbevf_read_reg.exit176_crit_edge
  %retval.0.i174 = phi i32 [ -1, %if.then102.i.ixgbevf_read_reg.exit176_crit_edge ], [ %116, %if.then12.i173 ], [ %116, %if.end.i172.ixgbevf_read_reg.exit176_crit_edge ]
  %117 = ptrtoint ptr %reg_idx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %117)
  %118 = load i16, ptr %reg_idx.i.i.i, align 16
  %conv117.i = zext i16 %118 to i32
  %mul118.i = shl nuw nsw i32 %conv117.i, 6
  %add119.i = add nuw nsw i32 %mul118.i, 8216
  %119 = ptrtoint ptr %hw_addr.i168 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile ptr, ptr %hw_addr.i168, align 4
  %tobool.not.i162 = icmp eq ptr %120, null
  br i1 %tobool.not.i162, label %ixgbevf_read_reg.exit176.ixgbevf_read_reg.exit_crit_edge, label %if.end.i165, !prof !308

ixgbevf_read_reg.exit176.ixgbevf_read_reg.exit_crit_edge: ; preds = %ixgbevf_read_reg.exit176
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.end.i165:                                      ; preds = %ixgbevf_read_reg.exit176
  %add.ptr.i163 = getelementptr i8, ptr %120, i32 %add119.i
  %121 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i163) #14, !srcloc !309
  %122 = tail call i32 @llvm.bswap.i32(i32 %121) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !310
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %121)
  %cmp.i164 = icmp eq i32 %121, -1
  br i1 %cmp.i164, label %if.then12.i, label %if.end.i165.ixgbevf_read_reg.exit_crit_edge, !prof !308

if.end.i165.ixgbevf_read_reg.exit_crit_edge:      ; preds = %if.end.i165
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_read_reg.exit

if.then12.i:                                      ; preds = %if.end.i165
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_check_remove(ptr noundef %hw103.i, i32 noundef %add119.i) #14
  br label %ixgbevf_read_reg.exit

ixgbevf_read_reg.exit:                            ; preds = %if.then12.i, %if.end.i165.ixgbevf_read_reg.exit_crit_edge, %ixgbevf_read_reg.exit176.ixgbevf_read_reg.exit_crit_edge
  %retval.0.i166 = phi i32 [ -1, %ixgbevf_read_reg.exit176.ixgbevf_read_reg.exit_crit_edge ], [ %122, %if.then12.i ], [ %122, %if.end.i165.ixgbevf_read_reg.exit_crit_edge ]
  %next_to_use.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 9
  %123 = ptrtoint ptr %next_to_use.i to i32
  call void @__asan_load2_noabort(i32 %123)
  %124 = load i16, ptr %next_to_use.i, align 2
  %conv121.i = zext i16 %124 to i32
  %tobool122.not.i = icmp eq ptr %105, null
  br i1 %tobool122.not.i, label %ixgbevf_read_reg.exit.cond.end.i_crit_edge, label %cond.true.i

ixgbevf_read_reg.exit.cond.end.i_crit_edge:       ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i

cond.true.i:                                      ; preds = %ixgbevf_read_reg.exit
  call void @__sanitizer_cov_trace_pc() #16
  %status123.i = getelementptr inbounds %struct.anon.197, ptr %105, i32 0, i32 2
  %125 = ptrtoint ptr %status123.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %status123.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %ixgbevf_read_reg.exit.cond.end.i_crit_edge
  %cond124.i = phi i32 [ %126, %cond.true.i ], [ 0, %ixgbevf_read_reg.exit.cond.end.i_crit_edge ]
  %127 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %13, align 8
  %time_stamp.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %128, i32 %add81.i, i32 1
  %129 = ptrtoint ptr %time_stamp.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %time_stamp.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %131 = load volatile i32, ptr @jiffies, align 128
  %call126.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.117, ptr noundef nonnull %cond.i, i32 noundef %110, i32 noundef %retval.0.i174, i32 noundef %retval.0.i166, i32 noundef %conv121.i, i32 noundef %add81.i, ptr noundef %105, i32 noundef %cond124.i, i32 noundef %130, i32 noundef %131) #17
  %132 = ptrtoint ptr %state23.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile i32, ptr %state23.i, align 4
  %134 = and i32 %133, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %134)
  %tobool129.not.i = icmp eq i32 %134, 0
  br i1 %tobool129.not.i, label %if.then130.i, label %cond.end.i.if.end133.i_crit_edge

cond.end.i.if.end133.i_crit_edge:                 ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end133.i

if.then130.i:                                     ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %135 = ptrtoint ptr %netdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %netdev.i.i.i, align 8
  %137 = ptrtoint ptr %queue_index.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %queue_index.i, align 4
  %conv.i303.i = and i32 %138, 65535
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %136, i32 0, i32 103
  %139 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %_tx.i.i.i, align 128
  %state.i.i.i = getelementptr %struct.netdev_queue, ptr %140, i32 %conv.i303.i, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i.i) #14
  br label %if.end133.i

if.end133.i:                                      ; preds = %if.then130.i, %cond.end.i.if.end133.i_crit_edge
  %141 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load volatile i32, ptr %state.i, align 4
  %143 = and i32 %142, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %143)
  %tobool.not.i153 = icmp eq i32 %143, 0
  br i1 %tobool.not.i153, label %if.then.i155, label %if.end133.i.ixgbevf_clean_tx_irq.exit_crit_edge

if.end133.i.ixgbevf_clean_tx_irq.exit_crit_edge:  ; preds = %if.end133.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_tx_irq.exit

if.then.i155:                                     ; preds = %if.end133.i
  tail call void @_set_bit(i32 noundef 7, ptr noundef %state.i) #14
  %144 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load volatile i32, ptr %state.i, align 4
  %146 = and i32 %145, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %146)
  %tobool.not.i.i154 = icmp eq i32 %146, 0
  br i1 %tobool.not.i.i154, label %land.lhs.true.i.i, label %if.then.i155.ixgbevf_clean_tx_irq.exit_crit_edge

if.then.i155.ixgbevf_clean_tx_irq.exit_crit_edge: ; preds = %if.then.i155
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_tx_irq.exit

land.lhs.true.i.i:                                ; preds = %if.then.i155
  %147 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile i32, ptr %state.i, align 4
  %149 = and i32 %148, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %149)
  %tobool3.not.i.i156 = icmp eq i32 %149, 0
  br i1 %tobool3.not.i.i156, label %land.lhs.true4.i.i, label %land.lhs.true.i.i.ixgbevf_clean_tx_irq.exit_crit_edge

land.lhs.true.i.i.ixgbevf_clean_tx_irq.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_tx_irq.exit

land.lhs.true4.i.i:                               ; preds = %land.lhs.true.i.i
  %call6.i.i157 = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i157)
  %tobool7.not.i.i158 = icmp eq i32 %call6.i.i157, 0
  br i1 %tobool7.not.i.i158, label %if.then.i.i160, label %land.lhs.true4.i.i.ixgbevf_clean_tx_irq.exit_crit_edge

land.lhs.true4.i.i.ixgbevf_clean_tx_irq.exit_crit_edge: ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_tx_irq.exit

if.then.i.i160:                                   ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %150 = load ptr, ptr @ixgbevf_wq, align 4
  %service_task.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %4, i32 0, i32 39
  %call.i.i.i159 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %150, ptr noundef %service_task.i.i) #14
  br label %ixgbevf_clean_tx_irq.exit

if.end136.i:                                      ; preds = %ixgbevf_check_tx_hang.exit.i.if.end136.i_crit_edge, %ixgbevf_check_tx_hang.exit.thread.i, %do.end78.i.if.end136.i_crit_edge
  %151 = ptrtoint ptr %state23.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %state23.i, align 4
  %153 = and i32 %152, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %tobool139.not.i = icmp eq i32 %153, 0
  br i1 %tobool139.not.i, label %if.end146.i, label %if.then140.i

if.then140.i:                                     ; preds = %if.end136.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %budget.1325.i)
  %tobool141.i = icmp ne i32 %budget.1325.i, 0
  br label %ixgbevf_clean_tx_irq.exit

if.end146.i:                                      ; preds = %if.end136.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %total_packets.1323.i)
  %tobool147.not.i = icmp eq i32 %total_packets.1323.i, 0
  br i1 %tobool147.not.i, label %if.end146.i.if.end184.i_crit_edge, label %land.lhs.true148.i

if.end146.i.if.end184.i_crit_edge:                ; preds = %if.end146.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184.i

land.lhs.true148.i:                               ; preds = %if.end146.i
  %netdev149.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 2
  %154 = ptrtoint ptr %netdev149.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %netdev149.i, align 8
  %state.i304.i = getelementptr inbounds %struct.net_device, ptr %155, i32 0, i32 6
  %156 = ptrtoint ptr %state.i304.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load volatile i32, ptr %state.i304.i, align 4
  %158 = and i32 %157, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %158)
  %tobool.not.i.i = icmp eq i32 %158, 0
  br i1 %tobool.not.i.i, label %land.rhs.i, label %land.lhs.true148.i.if.end184.i_crit_edge

land.lhs.true148.i.if.end184.i_crit_edge:         ; preds = %land.lhs.true148.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184.i

land.rhs.i:                                       ; preds = %land.lhs.true148.i
  %159 = ptrtoint ptr %next_to_clean.i to i32
  call void @__asan_load2_noabort(i32 %159)
  %160 = load i16, ptr %next_to_clean.i, align 4
  %next_to_use.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 9
  %161 = ptrtoint ptr %next_to_use.i.i to i32
  call void @__asan_load2_noabort(i32 %161)
  %162 = load i16, ptr %next_to_use.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %160, i16 %162)
  %cmp.i305.i = icmp ugt i16 %160, %162
  br i1 %cmp.i305.i, label %land.rhs.i.ixgbevf_desc_unused.exit.i_crit_edge, label %cond.false.i.i

land.rhs.i.ixgbevf_desc_unused.exit.i_crit_edge:  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_desc_unused.exit.i

cond.false.i.i:                                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  %163 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %163)
  %164 = load i16, ptr %count.i, align 32
  br label %ixgbevf_desc_unused.exit.i

ixgbevf_desc_unused.exit.i:                       ; preds = %cond.false.i.i, %land.rhs.i.ixgbevf_desc_unused.exit.i_crit_edge
  %cond.i.i = phi i16 [ %164, %cond.false.i.i ], [ 0, %land.rhs.i.ixgbevf_desc_unused.exit.i_crit_edge ]
  %165 = xor i16 %162, -1
  %add.i.i = add i16 %160, %165
  %sub6.i.i = add i16 %add.i.i, %cond.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 41, i16 %sub6.i.i)
  %cmp154.i = icmp ugt i16 %sub6.i.i, 41
  br i1 %cmp154.i, label %do.end166.i, label %ixgbevf_desc_unused.exit.i.if.end184.i_crit_edge, !prof !308

ixgbevf_desc_unused.exit.i.if.end184.i_crit_edge: ; preds = %ixgbevf_desc_unused.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184.i

do.end166.i:                                      ; preds = %ixgbevf_desc_unused.exit.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !343
  %166 = ptrtoint ptr %netdev149.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %netdev149.i, align 8
  %queue_index170.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 22
  %168 = ptrtoint ptr %queue_index170.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %queue_index170.i, align 4
  %conv.i306.i = and i32 %169, 65535
  %_tx.i.i307.i = getelementptr inbounds %struct.net_device, ptr %167, i32 0, i32 103
  %170 = ptrtoint ptr %_tx.i.i307.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %_tx.i.i307.i, align 128
  %state.i.i308.i = getelementptr %struct.netdev_queue, ptr %171, i32 %conv.i306.i, i32 13
  %172 = ptrtoint ptr %state.i.i308.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load volatile i32, ptr %state.i.i308.i, align 4
  %and1.i.i.i.i = and i32 %173, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool.i.i.not.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool.i.i.not.i, label %do.end166.i.if.end184.i_crit_edge, label %land.lhs.true174.i

do.end166.i.if.end184.i_crit_edge:                ; preds = %do.end166.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184.i

land.lhs.true174.i:                               ; preds = %do.end166.i
  %174 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load volatile i32, ptr %state.i, align 4
  %176 = and i32 %175, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %176)
  %tobool177.not.i = icmp eq i32 %176, 0
  br i1 %tobool177.not.i, label %if.then178.i, label %land.lhs.true174.i.if.end184.i_crit_edge

land.lhs.true174.i.if.end184.i_crit_edge:         ; preds = %land.lhs.true174.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184.i

if.then178.i:                                     ; preds = %land.lhs.true174.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i.i = getelementptr %struct.netdev_queue, ptr %171, i32 %conv.i306.i
  tail call void @netif_tx_wake_queue(ptr noundef %arrayidx.i.i.i) #14
  %177 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.0212, i32 0, i32 16
  %178 = ptrtoint ptr %177 to i32
  call void @__asan_load8_noabort(i32 %178)
  %179 = load i64, ptr %177, align 32
  %inc182.i = add i64 %179, 1
  store i64 %inc182.i, ptr %177, align 32
  br label %if.end184.i

if.end184.i:                                      ; preds = %if.then178.i, %land.lhs.true174.i.if.end184.i_crit_edge, %do.end166.i.if.end184.i_crit_edge, %ixgbevf_desc_unused.exit.i.if.end184.i_crit_edge, %land.lhs.true148.i.if.end184.i_crit_edge, %if.end146.i.if.end184.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %budget.1325.i)
  %tobool185.i = icmp ne i32 %budget.1325.i, 0
  br label %ixgbevf_clean_tx_irq.exit

ixgbevf_clean_tx_irq.exit:                        ; preds = %if.end184.i, %if.then140.i, %if.then.i.i160, %land.lhs.true4.i.i.ixgbevf_clean_tx_irq.exit_crit_edge, %land.lhs.true.i.i.ixgbevf_clean_tx_irq.exit_crit_edge, %if.then.i155.ixgbevf_clean_tx_irq.exit_crit_edge, %if.end133.i.ixgbevf_clean_tx_irq.exit_crit_edge, %for.body.ixgbevf_clean_tx_irq.exit_crit_edge
  %retval.0.i = phi i1 [ %tobool141.i, %if.then140.i ], [ %tobool185.i, %if.end184.i ], [ true, %for.body.ixgbevf_clean_tx_irq.exit_crit_edge ], [ true, %if.end133.i.ixgbevf_clean_tx_irq.exit_crit_edge ], [ true, %if.then.i155.ixgbevf_clean_tx_irq.exit_crit_edge ], [ true, %land.lhs.true.i.i.ixgbevf_clean_tx_irq.exit_crit_edge ], [ true, %land.lhs.true4.i.i.ixgbevf_clean_tx_irq.exit_crit_edge ], [ true, %if.then.i.i160 ]
  %spec.select = select i1 %retval.0.i, i1 %clean_complete.0.off0211, i1 false
  %180 = ptrtoint ptr %ring.0212 to i32
  call void @__asan_load4_noabort(i32 %180)
  %ring.0 = load ptr, ptr %ring.0212, align 8
  %cmp.not = icmp eq ptr %ring.0, null
  br i1 %cmp.not, label %ixgbevf_clean_tx_irq.exit.for.end_crit_edge, label %ixgbevf_clean_tx_irq.exit.for.body_crit_edge

ixgbevf_clean_tx_irq.exit.for.body_crit_edge:     ; preds = %ixgbevf_clean_tx_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

ixgbevf_clean_tx_irq.exit.for.end_crit_edge:      ; preds = %ixgbevf_clean_tx_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %ixgbevf_clean_tx_irq.exit.for.end_crit_edge, %entry.for.end_crit_edge
  %clean_complete.0.off0.lcssa = phi i1 [ true, %entry.for.end_crit_edge ], [ %spec.select, %ixgbevf_clean_tx_irq.exit.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %budget)
  %cmp3 = icmp slt i32 %budget, 1
  br i1 %cmp3, label %for.end.cleanup_crit_edge, label %if.end5

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %for.end
  %rx = getelementptr i8, ptr %napi, i32 224
  %count = getelementptr i8, ptr %napi, i32 236
  %181 = ptrtoint ptr %count to i32
  call void @__asan_load1_noabort(i32 %181)
  %182 = load i8, ptr %count, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %182)
  %cmp6 = icmp ugt i8 %182, 1
  br i1 %cmp6, label %if.then8, label %if.end5.if.end15_crit_edge

if.end5.if.end15_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i8 %182 to i32
  %div177 = udiv i32 %budget, %conv
  %183 = tail call i32 @llvm.umax.i32(i32 %div177, i32 1)
  br label %if.end15

if.end15:                                         ; preds = %if.then8, %if.end5.if.end15_crit_edge
  %per_ring_budget.0 = phi i32 [ %183, %if.then8 ], [ %budget, %if.end5.if.end15_crit_edge ]
  %184 = ptrtoint ptr %rx to i32
  call void @__asan_load4_noabort(i32 %184)
  %ring.1213 = load ptr, ptr %rx, align 8
  %cmp19.not214 = icmp eq ptr %ring.1213, null
  br i1 %cmp19.not214, label %if.end15.for.end29_crit_edge, label %for.body21.lr.ph

if.end15.for.end29_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end29

for.body21.lr.ph:                                 ; preds = %if.end15
  %185 = getelementptr inbounds %struct.xdp_buff, ptr %xdp.i, i32 0, i32 1
  %186 = getelementptr inbounds %struct.xdp_buff, ptr %xdp.i, i32 0, i32 2
  %187 = getelementptr inbounds %struct.xdp_buff, ptr %xdp.i, i32 0, i32 3
  %188 = getelementptr inbounds %struct.xdp_buff, ptr %xdp.i, i32 0, i32 4
  %189 = getelementptr inbounds %struct.xdp_buff, ptr %xdp.i, i32 0, i32 6
  %total_packets.i = getelementptr i8, ptr %napi, i32 232
  %total_bytes.i = getelementptr i8, ptr %napi, i32 228
  br label %for.body21

for.body21:                                       ; preds = %ixgbevf_clean_rx_irq.exit.for.body21_crit_edge, %for.body21.lr.ph
  %ring.1217 = phi ptr [ %ring.1213, %for.body21.lr.ph ], [ %ring.1, %ixgbevf_clean_rx_irq.exit.for.body21_crit_edge ]
  %clean_complete.2.off0216 = phi i1 [ %clean_complete.0.off0.lcssa, %for.body21.lr.ph ], [ %spec.select97, %ixgbevf_clean_rx_irq.exit.for.body21_crit_edge ]
  %work_done.0215 = phi i32 [ 0, %for.body21.lr.ph ], [ %add, %ixgbevf_clean_rx_irq.exit.for.body21_crit_edge ]
  %190 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %add.ptr, align 128
  %next_to_clean.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 10
  %192 = ptrtoint ptr %next_to_clean.i.i to i32
  call void @__asan_load2_noabort(i32 %192)
  %193 = load i16, ptr %next_to_clean.i.i, align 4
  %next_to_use.i.i100 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 9
  %194 = ptrtoint ptr %next_to_use.i.i100 to i32
  call void @__asan_load2_noabort(i32 %194)
  %195 = load i16, ptr %next_to_use.i.i100, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %193, i16 %195)
  %cmp.i.i101 = icmp ugt i16 %193, %195
  br i1 %cmp.i.i101, label %for.body21.while.body.lr.ph.i_crit_edge, label %cond.false.i.i102

for.body21.while.body.lr.ph.i_crit_edge:          ; preds = %for.body21
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.lr.ph.i

cond.false.i.i102:                                ; preds = %for.body21
  call void @__sanitizer_cov_trace_pc() #16
  %count.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 8
  %196 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load2_noabort(i32 %196)
  %197 = load i16, ptr %count.i.i, align 32
  br label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %cond.false.i.i102, %for.body21.while.body.lr.ph.i_crit_edge
  %cond.i.i103 = phi i16 [ %197, %cond.false.i.i102 ], [ 0, %for.body21.while.body.lr.ph.i_crit_edge ]
  %skb2.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 20
  %198 = ptrtoint ptr %skb2.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %skb2.i, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %xdp.i) #14
  %state.i.i.i104 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 13
  %200 = call ptr @memset(ptr %xdp.i, i32 255, i32 24)
  %201 = ptrtoint ptr %state.i.i.i104 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load volatile i32, ptr %state.i.i.i104, align 4
  %and1.i.i.i.i105 = and i32 %202, 1
  %shl.i.i = shl nuw nsw i32 4096, %and1.i.i.i.i105
  %div1.i.i = lshr exact i32 %shl.i.i, 1
  %xdp_rxq.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 17
  %203 = ptrtoint ptr %189 to i32
  call void @__asan_store4_noabort(i32 %203)
  store i32 %div1.i.i, ptr %189, align 4
  %204 = ptrtoint ptr %188 to i32
  call void @__asan_store4_noabort(i32 %204)
  store ptr %xdp_rxq.i, ptr %188, align 4
  %205 = xor i16 %195, -1
  %add.i.i107 = add i16 %193, %205
  %sub6.i.i108 = add i16 %add.i.i107, %cond.i.i103
  %desc.i109 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 5
  %206 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 12
  %dev.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 4
  %q_vector.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 1
  %count.i234.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 8
  %netdev5.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 2
  %csum_err13.i.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 16, i32 0, i32 3
  br label %while.body.i110

while.body.i110:                                  ; preds = %cleanup.i123.while.body.i110_crit_edge, %while.body.lr.ph.i
  %total_rx_bytes.0327.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %total_rx_bytes.2.i, %cleanup.i123.while.body.i110_crit_edge ]
  %total_rx_packets.0326.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %total_rx_packets.2.i, %cleanup.i123.while.body.i110_crit_edge ]
  %xdp_xmit.0.off0325.i = phi i1 [ false, %while.body.lr.ph.i ], [ %xdp_xmit.2.off0267.i, %cleanup.i123.while.body.i110_crit_edge ]
  %skb.0324.i = phi ptr [ %199, %while.body.lr.ph.i ], [ %skb.3.i, %cleanup.i123.while.body.i110_crit_edge ]
  %cleaned_count.0323.i = phi i16 [ %sub6.i.i108, %while.body.lr.ph.i ], [ %inc47.i, %cleanup.i123.while.body.i110_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 15, i16 %cleaned_count.0323.i)
  %cmp5.i = icmp ugt i16 %cleaned_count.0323.i, 15
  br i1 %cmp5.i, label %if.then.i, label %while.body.i110.if.end.i112_crit_edge

while.body.i110.if.end.i112_crit_edge:            ; preds = %while.body.i110
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i112

if.then.i:                                        ; preds = %while.body.i110
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @ixgbevf_alloc_rx_buffers(ptr noundef %ring.1217, i16 noundef zeroext %cleaned_count.0323.i) #14
  br label %if.end.i112

if.end.i112:                                      ; preds = %if.then.i, %while.body.i110.if.end.i112_crit_edge
  %cleaned_count.1.i = phi i16 [ 0, %if.then.i ], [ %cleaned_count.0323.i, %while.body.i110.if.end.i112_crit_edge ]
  %207 = ptrtoint ptr %desc.i109 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %desc.i109, align 4
  %209 = ptrtoint ptr %next_to_clean.i.i to i32
  call void @__asan_load2_noabort(i32 %209)
  %210 = load i16, ptr %next_to_clean.i.i, align 4
  %idxprom.i = zext i16 %210 to i32
  %arrayidx.i111 = getelementptr %union.ixgbe_adv_rx_desc, ptr %208, i32 %idxprom.i
  %upper.i = getelementptr inbounds %struct.anon.203, ptr %arrayidx.i111, i32 0, i32 1
  %length.i = getelementptr inbounds %struct.anon.209, ptr %upper.i, i32 0, i32 1
  %211 = ptrtoint ptr %length.i to i32
  call void @__asan_load2_noabort(i32 %211)
  %212 = load i16, ptr %length.i, align 4
  %213 = call i16 @llvm.bswap.i16(i16 %212) #14
  %conv7.i = zext i16 %213 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %212)
  %tobool8.not.i = icmp eq i16 %212, 0
  br i1 %tobool8.not.i, label %cleanup.thread.i, label %if.end10.i

if.end10.i:                                       ; preds = %if.end.i112
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !344
  %214 = ptrtoint ptr %206 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %206, align 8
  %216 = ptrtoint ptr %next_to_clean.i.i to i32
  call void @__asan_load2_noabort(i32 %216)
  %217 = load i16, ptr %next_to_clean.i.i, align 4
  %idxprom.i.i = zext i16 %217 to i32
  %arrayidx.i.i = getelementptr %struct.ixgbevf_rx_buffer, ptr %215, i32 %idxprom.i.i
  %page.i.i = getelementptr %struct.ixgbevf_rx_buffer, ptr %215, i32 %idxprom.i.i, i32 1
  %218 = ptrtoint ptr %page.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %page.i.i, align 4
  call void @llvm.prefetch.p0(ptr %219, i32 1, i32 3, i32 1) #14
  %220 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %dev.i.i, align 16
  %222 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %arrayidx.i.i, align 4
  %page_offset.i.i = getelementptr %struct.ixgbevf_rx_buffer, ptr %215, i32 %idxprom.i.i, i32 2
  %224 = ptrtoint ptr %page_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %224)
  %225 = load i16, ptr %page_offset.i.i, align 4
  %conv.i.i113 = zext i16 %225 to i32
  %add.i.i.i114 = add i32 %223, %conv.i.i113
  call void @dma_sync_single_for_cpu(ptr noundef %221, i32 noundef %add.i.i.i114, i32 noundef %conv7.i, i32 noundef 2) #14
  %pagecnt_bias.i.i = getelementptr %struct.ixgbevf_rx_buffer, ptr %215, i32 %idxprom.i.i, i32 3
  %226 = ptrtoint ptr %pagecnt_bias.i.i to i32
  call void @__asan_load2_noabort(i32 %226)
  %227 = load i16, ptr %pagecnt_bias.i.i, align 2
  %dec.i.i = add i16 %227, -1
  store i16 %dec.i.i, ptr %pagecnt_bias.i.i, align 2
  %tobool12.not.i = icmp eq ptr %skb.0324.i, null
  br i1 %tobool12.not.i, label %if.then13.i, label %if.end10.i.if.end19.i_crit_edge

if.end10.i.if.end19.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

if.then13.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %228 = ptrtoint ptr %state.i.i.i104 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load volatile i32, ptr %state.i.i.i104, align 4
  %230 = and i32 %229, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %230)
  %tobool.not.i.i115 = icmp eq i32 %230, 0
  %cond.i187.neg.i = select i1 %tobool.not.i.i115, i32 0, i32 -130
  %cond.i187.i = select i1 %tobool.not.i.i115, i32 0, i32 130
  %231 = ptrtoint ptr %page.i.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %page.i.i, align 4
  %call15.i = call ptr @page_address(ptr noundef %232) #14
  %233 = ptrtoint ptr %page_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %233)
  %234 = load i16, ptr %page_offset.i.i, align 4
  %conv16.i = zext i16 %234 to i32
  %add.ptr.i = getelementptr i8, ptr %call15.i, i32 %conv16.i
  %add.ptr17.i = getelementptr i8, ptr %add.ptr.i, i32 %cond.i187.neg.i
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr17.i, i32 %cond.i187.i
  %235 = ptrtoint ptr %187 to i32
  call void @__asan_store4_noabort(i32 %235)
  store ptr %add.ptr17.i, ptr %187, align 4
  %236 = ptrtoint ptr %xdp.i to i32
  call void @__asan_store4_noabort(i32 %236)
  store ptr %add.ptr.i.i, ptr %xdp.i, align 4
  %add.ptr2.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv7.i
  %237 = ptrtoint ptr %185 to i32
  call void @__asan_store4_noabort(i32 %237)
  store ptr %add.ptr2.i.i, ptr %185, align 4
  %238 = ptrtoint ptr %186 to i32
  call void @__asan_store4_noabort(i32 %238)
  store ptr %add.ptr.i.i, ptr %186, align 4
  %call18.i = call fastcc ptr @ixgbevf_run_xdp(ptr noundef %191, ptr noundef %ring.1217, ptr noundef nonnull %xdp.i) #14
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then13.i, %if.end10.i.if.end19.i_crit_edge
  %skb.1.i = phi ptr [ %skb.0324.i, %if.end10.i.if.end19.i_crit_edge ], [ %call18.i, %if.then13.i ]
  %cmp.i188.i = icmp ugt ptr %skb.1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i188.i, label %if.then21.i, label %if.else28.i

if.then21.i:                                      ; preds = %if.end19.i
  %cmp23.i = icmp eq ptr %skb.1.i, inttoptr (i32 -2 to ptr)
  br i1 %cmp23.i, label %if.then25.i, label %if.else.i116

if.then25.i:                                      ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #16
  %239 = ptrtoint ptr %state.i.i.i104 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load volatile i32, ptr %state.i.i.i104, align 4
  %and1.i.i.i.i.i = and i32 %240, 1
  %shl.i.i.i = shl nuw nsw i32 4096, %and1.i.i.i.i.i
  %div1.i.i.i = lshr exact i32 %shl.i.i.i, 1
  %241 = ptrtoint ptr %page_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %241)
  %242 = load i16, ptr %page_offset.i.i, align 4
  %243 = trunc i32 %div1.i.i.i to i16
  %conv1.i.i = xor i16 %242, %243
  store i16 %conv1.i.i, ptr %page_offset.i.i, align 4
  br label %if.end40.i

if.else.i116:                                     ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #16
  %244 = ptrtoint ptr %pagecnt_bias.i.i to i32
  call void @__asan_load2_noabort(i32 %244)
  %245 = load i16, ptr %pagecnt_bias.i.i, align 2
  %inc.i = add i16 %245, 1
  store i16 %inc.i, ptr %pagecnt_bias.i.i, align 2
  br label %if.end40.i

if.else28.i:                                      ; preds = %if.end19.i
  %tobool29.not.i = icmp eq ptr %skb.1.i, null
  %246 = ptrtoint ptr %state.i.i.i104 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load volatile i32, ptr %state.i.i.i104, align 4
  br i1 %tobool29.not.i, label %if.else31.i, label %if.then30.i

if.then30.i:                                      ; preds = %if.else28.i
  call void @__sanitizer_cov_trace_pc() #16
  %and1.i.i.i191.i = and i32 %247, 1
  %shl.i192.i = shl nuw nsw i32 4096, %and1.i.i.i191.i
  %div10.i.i = lshr exact i32 %shl.i192.i, 1
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1.i, i32 0, i32 17
  %248 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %end.i.i.i, align 4
  %nr_frags.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %249, i32 0, i32 2
  %250 = ptrtoint ptr %nr_frags.i.i to i32
  call void @__asan_load1_noabort(i32 %250)
  %251 = load i8, ptr %nr_frags.i.i, align 2
  %conv.i193.i = zext i8 %251 to i32
  %252 = ptrtoint ptr %page.i.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %page.i.i, align 4
  %254 = ptrtoint ptr %page_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %254)
  %255 = load i16, ptr %page_offset.i.i, align 4
  %conv2.i.i117 = zext i16 %255 to i32
  call void @skb_add_rx_frag(ptr noundef nonnull %skb.1.i, i32 noundef %conv.i193.i, ptr noundef %253, i32 noundef %conv2.i.i117, i32 noundef %conv7.i, i32 noundef %div10.i.i) #14
  %256 = ptrtoint ptr %page_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %256)
  %257 = load i16, ptr %page_offset.i.i, align 4
  %258 = trunc i32 %div10.i.i to i16
  %conv5.i.i = xor i16 %257, %258
  store i16 %conv5.i.i, ptr %page_offset.i.i, align 4
  br label %if.end46.i

if.else31.i:                                      ; preds = %if.else28.i
  %259 = and i32 %247, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %259)
  %tobool33.not.i = icmp eq i32 %259, 0
  br i1 %tobool33.not.i, label %if.else36.i, label %if.then34.i

if.then34.i:                                      ; preds = %if.else31.i
  %260 = ptrtoint ptr %xdp.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %xdp.i, align 4
  %262 = ptrtoint ptr %186 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %186, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %261 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %263 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %264 = ptrtoint ptr %state.i.i.i104 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load volatile i32, ptr %state.i.i.i104, align 4
  %and1.i.i.i198.i = and i32 %265, 1
  %shl.i199.i = shl nuw nsw i32 4096, %and1.i.i.i198.i
  %div1.i200.i = lshr exact i32 %shl.i199.i, 1
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %263) #14, !srcloc !340
  %266 = ptrtoint ptr %187 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %187, align 4
  %call2.i.i = call ptr @napi_build_skb(ptr noundef %267, i32 noundef %div1.i200.i) #14
  %tobool.not.i202.i = icmp eq ptr %call2.i.i, null
  br i1 %tobool.not.i202.i, label %if.then34.i.if.then42.i_crit_edge, label %if.end.i.i, !prof !308

if.then34.i.if.then42.i_crit_edge:                ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42.i

if.end.i.i:                                       ; preds = %if.then34.i
  %268 = ptrtoint ptr %xdp.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load ptr, ptr %xdp.i, align 4
  %270 = ptrtoint ptr %187 to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %187, align 4
  %sub.ptr.lhs.cast8.i.i = ptrtoint ptr %269 to i32
  %sub.ptr.rhs.cast9.i.i = ptrtoint ptr %271 to i32
  %sub.ptr.sub10.i.i = sub i32 %sub.ptr.lhs.cast8.i.i, %sub.ptr.rhs.cast9.i.i
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call2.i.i, i32 0, i32 19
  %272 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load ptr, ptr %data.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %273, i32 %sub.ptr.sub10.i.i
  store ptr %add.ptr.i.i.i, ptr %data.i.i.i, align 4
  %tail.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call2.i.i, i32 0, i32 16
  %274 = ptrtoint ptr %tail.i.i.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %tail.i.i.i, align 8
  %add.ptr1.i.i.i = getelementptr i8, ptr %275, i32 %sub.ptr.sub10.i.i
  store ptr %add.ptr1.i.i.i, ptr %tail.i.i.i, align 8
  %data_len.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call2.i.i, i32 0, i32 7
  %276 = ptrtoint ptr %data_len.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %data_len.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %277)
  %tobool.i.not.i.i.i = icmp eq i32 %277, 0
  br i1 %tobool.i.not.i.i.i, label %__skb_put.exit.i.i, label %do.body3.i.i.i, !prof !322

do.body3.i.i.i:                                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #14, !srcloc !345
  unreachable

__skb_put.exit.i.i:                               ; preds = %if.end.i.i
  %278 = ptrtoint ptr %185 to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load ptr, ptr %185, align 4
  %sub.ptr.lhs.cast12.i.i = ptrtoint ptr %279 to i32
  %sub.ptr.sub14.i.i = sub i32 %sub.ptr.lhs.cast12.i.i, %sub.ptr.lhs.cast8.i.i
  %add.ptr.i2.i.i = getelementptr i8, ptr %add.ptr1.i.i.i, i32 %sub.ptr.sub14.i.i
  %280 = ptrtoint ptr %tail.i.i.i to i32
  call void @__asan_store4_noabort(i32 %280)
  store ptr %add.ptr.i2.i.i, ptr %tail.i.i.i, align 8
  %len9.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call2.i.i, i32 0, i32 6
  %281 = ptrtoint ptr %len9.i.i.i to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load i32, ptr %len9.i.i.i, align 4
  %add.i.i204.i = add i32 %282, %sub.ptr.sub14.i.i
  store i32 %add.i.i204.i, ptr %len9.i.i.i, align 4
  %tobool16.not.i.i = icmp eq ptr %261, %263
  br i1 %tobool16.not.i.i, label %__skb_put.exit.i.i.if.end18.i.i_crit_edge, label %if.then17.i.i

__skb_put.exit.i.i.if.end18.i.i_crit_edge:        ; preds = %__skb_put.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18.i.i

if.then17.i.i:                                    ; preds = %__skb_put.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i205.i = trunc i32 %sub.ptr.sub.i.i to i8
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call2.i.i, i32 0, i32 17
  %283 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %end.i.i.i.i, align 4
  %meta_len1.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %284, i32 0, i32 1
  %285 = ptrtoint ptr %meta_len1.i.i.i to i32
  call void @__asan_store1_noabort(i32 %285)
  store i8 %conv.i205.i, ptr %meta_len1.i.i.i, align 1
  br label %if.end18.i.i

if.end18.i.i:                                     ; preds = %if.then17.i.i, %__skb_put.exit.i.i.if.end18.i.i_crit_edge
  %286 = ptrtoint ptr %page_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %286)
  %287 = load i16, ptr %page_offset.i.i, align 4
  %288 = trunc i32 %div1.i200.i to i16
  %conv20.i.i = xor i16 %287, %288
  store i16 %conv20.i.i, ptr %page_offset.i.i, align 4
  br label %if.end46.i

if.else36.i:                                      ; preds = %if.else31.i
  %289 = ptrtoint ptr %185 to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %185, align 4
  %291 = ptrtoint ptr %xdp.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %xdp.i, align 4
  %sub.ptr.lhs.cast.i208.i = ptrtoint ptr %290 to i32
  %sub.ptr.rhs.cast.i209.i = ptrtoint ptr %292 to i32
  %sub.ptr.sub.i210.i = sub i32 %sub.ptr.lhs.cast.i208.i, %sub.ptr.rhs.cast.i209.i
  %293 = ptrtoint ptr %state.i.i.i104 to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load volatile i32, ptr %state.i.i.i104, align 4
  %and1.i.i.i212.i = and i32 %294, 1
  %shl.i213.i = shl nuw nsw i32 4096, %and1.i.i.i212.i
  %div1.i214.i = lshr exact i32 %shl.i213.i, 1
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %292) #14, !srcloc !340
  %295 = ptrtoint ptr %q_vector.i.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load ptr, ptr %q_vector.i.i, align 4
  %napi.i.i = getelementptr inbounds %struct.ixgbevf_q_vector, ptr %296, i32 0, i32 3
  %call.i.i.i = call ptr @__napi_alloc_skb(ptr noundef %napi.i.i, i32 noundef 256, i32 noundef 2592) #14
  %tobool.not.i215.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i215.i, label %if.else36.i.if.then42.i_crit_edge, label %if.end.i217.i, !prof !308

if.else36.i.if.then42.i_crit_edge:                ; preds = %if.else36.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42.i

if.end.i217.i:                                    ; preds = %if.else36.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %sub.ptr.sub.i210.i)
  %cmp.i216.i = icmp ugt i32 %sub.ptr.sub.i210.i, 256
  br i1 %cmp.i216.i, label %if.then6.i.i, label %if.end.i217.i.if.end9.i.i_crit_edge

if.end.i217.i.if.end9.i.i_crit_edge:              ; preds = %if.end.i217.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i.i

if.then6.i.i:                                     ; preds = %if.end.i217.i
  call void @__sanitizer_cov_trace_pc() #16
  %297 = getelementptr inbounds %struct.anon.51, ptr %call.i.i.i, i32 0, i32 2
  %298 = ptrtoint ptr %297 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %297, align 8
  %300 = ptrtoint ptr %xdp.i to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %xdp.i, align 4
  %call8.i.i = call i32 @eth_get_headlen(ptr noundef %299, ptr noundef %301, i32 noundef 256) #14
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.then6.i.i, %if.end.i217.i.if.end9.i.i_crit_edge
  %headlen.0.i.i = phi i32 [ %call8.i.i, %if.then6.i.i ], [ %sub.ptr.sub.i210.i, %if.end.i217.i.if.end9.i.i_crit_edge ]
  %data_len.i.i.i218.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 7
  %302 = ptrtoint ptr %data_len.i.i.i218.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %data_len.i.i.i218.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %303)
  %tobool.i.not.i.i219.i = icmp eq i32 %303, 0
  br i1 %tobool.i.not.i.i219.i, label %__skb_put.exit.i225.i, label %do.body3.i.i220.i, !prof !322

do.body3.i.i220.i:                                ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #14, !srcloc !345
  unreachable

__skb_put.exit.i225.i:                            ; preds = %if.end9.i.i
  %tail.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 16
  %304 = ptrtoint ptr %tail.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %tail.i.i.i.i, align 8
  %add.ptr.i.i221.i = getelementptr i8, ptr %305, i32 %headlen.0.i.i
  store ptr %add.ptr.i.i221.i, ptr %tail.i.i.i.i, align 8
  %len9.i.i222.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 6
  %306 = ptrtoint ptr %len9.i.i222.i to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %len9.i.i222.i, align 4
  %add.i.i223.i = add i32 %307, %headlen.0.i.i
  store i32 %add.i.i223.i, ptr %len9.i.i222.i, align 4
  %308 = ptrtoint ptr %xdp.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %xdp.i, align 4
  %add.i224.i = add i32 %headlen.0.i.i, 3
  %and.i.i = and i32 %add.i224.i, -4
  %310 = call ptr @memcpy(ptr %305, ptr %309, i32 %and.i.i)
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i210.i, i32 %headlen.0.i.i)
  %tobool12.not.i.i = icmp eq i32 %sub.ptr.sub.i210.i, %headlen.0.i.i
  br i1 %tobool12.not.i.i, label %if.else.i.i, label %if.then13.i.i

if.then13.i.i:                                    ; preds = %__skb_put.exit.i225.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = sub i32 %sub.ptr.sub.i210.i, %headlen.0.i.i
  %311 = ptrtoint ptr %page.i.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load ptr, ptr %page.i.i, align 4
  %313 = ptrtoint ptr %xdp.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %xdp.i, align 4
  %add.ptr.i227.i = getelementptr i8, ptr %314, i32 %headlen.0.i.i
  %call16.i.i = call ptr @page_address(ptr noundef %312) #14
  %sub.ptr.lhs.cast17.i.i = ptrtoint ptr %add.ptr.i227.i to i32
  %sub.ptr.rhs.cast18.i.i = ptrtoint ptr %call16.i.i to i32
  %sub.ptr.sub19.i.i = sub i32 %sub.ptr.lhs.cast17.i.i, %sub.ptr.rhs.cast18.i.i
  call void @skb_add_rx_frag(ptr noundef nonnull %call.i.i.i, i32 noundef 0, ptr noundef %312, i32 noundef %sub.ptr.sub19.i.i, i32 noundef %sub.i.i, i32 noundef %div1.i214.i) #14
  %315 = ptrtoint ptr %page_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %315)
  %316 = load i16, ptr %page_offset.i.i, align 4
  %317 = trunc i32 %div1.i214.i to i16
  %conv20.i229.i = xor i16 %316, %317
  store i16 %conv20.i229.i, ptr %page_offset.i.i, align 4
  br label %if.end46.i

if.else.i.i:                                      ; preds = %__skb_put.exit.i225.i
  call void @__sanitizer_cov_trace_pc() #16
  %318 = ptrtoint ptr %pagecnt_bias.i.i to i32
  call void @__asan_load2_noabort(i32 %318)
  %319 = load i16, ptr %pagecnt_bias.i.i, align 2
  %inc.i.i = add i16 %319, 1
  store i16 %inc.i.i, ptr %pagecnt_bias.i.i, align 2
  br label %if.end46.i

if.end40.i:                                       ; preds = %if.else.i116, %if.then25.i
  %xdp_xmit.1.off0.i = phi i1 [ true, %if.then25.i ], [ %xdp_xmit.0.off0325.i, %if.else.i116 ]
  %inc27.i = add nuw i32 %total_rx_packets.0326.i, 1
  %add.i118 = add i32 %total_rx_bytes.0327.i, %conv7.i
  br label %if.end46.i

if.then42.i:                                      ; preds = %if.else36.i.if.then42.i_crit_edge, %if.then34.i.if.then42.i_crit_edge
  %alloc_rx_buff_failed.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 16, i32 0, i32 1
  %320 = ptrtoint ptr %alloc_rx_buff_failed.i to i32
  call void @__asan_load8_noabort(i32 %320)
  %321 = load i64, ptr %alloc_rx_buff_failed.i, align 8
  %inc43.i = add i64 %321, 1
  store i64 %inc43.i, ptr %alloc_rx_buff_failed.i, align 8
  %322 = ptrtoint ptr %pagecnt_bias.i.i to i32
  call void @__asan_load2_noabort(i32 %322)
  %323 = load i16, ptr %pagecnt_bias.i.i, align 2
  %inc45.i = add i16 %323, 1
  store i16 %inc45.i, ptr %pagecnt_bias.i.i, align 2
  %324 = ptrtoint ptr %skb2.i to i32
  call void @__asan_store4_noabort(i32 %324)
  store ptr null, ptr %skb2.i, align 4
  br i1 %xdp_xmit.0.off0325.i, label %if.then42.i.if.then75.i_crit_edge, label %if.then42.i.ixgbevf_clean_rx_irq.exit_crit_edge

if.then42.i.ixgbevf_clean_rx_irq.exit_crit_edge:  ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_rx_irq.exit

if.then42.i.if.then75.i_crit_edge:                ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then75.i

if.end46.i:                                       ; preds = %if.end40.i, %if.else.i.i, %if.then13.i.i, %if.end18.i.i, %if.then30.i
  %total_rx_bytes.1270.i = phi i32 [ %add.i118, %if.end40.i ], [ %total_rx_bytes.0327.i, %if.then30.i ], [ %total_rx_bytes.0327.i, %if.end18.i.i ], [ %total_rx_bytes.0327.i, %if.then13.i.i ], [ %total_rx_bytes.0327.i, %if.else.i.i ]
  %total_rx_packets.1269.i = phi i32 [ %inc27.i, %if.end40.i ], [ %total_rx_packets.0326.i, %if.then30.i ], [ %total_rx_packets.0326.i, %if.end18.i.i ], [ %total_rx_packets.0326.i, %if.then13.i.i ], [ %total_rx_packets.0326.i, %if.else.i.i ]
  %xdp_xmit.2.off0267.i = phi i1 [ %xdp_xmit.1.off0.i, %if.end40.i ], [ %xdp_xmit.0.off0325.i, %if.then30.i ], [ %xdp_xmit.0.off0325.i, %if.end18.i.i ], [ %xdp_xmit.0.off0325.i, %if.then13.i.i ], [ %xdp_xmit.0.off0325.i, %if.else.i.i ]
  %skb.2262.i = phi ptr [ %skb.1.i, %if.end40.i ], [ %skb.1.i, %if.then30.i ], [ %call2.i.i, %if.end18.i.i ], [ %call.i.i.i, %if.then13.i.i ], [ %call.i.i.i, %if.else.i.i ]
  call fastcc void @ixgbevf_put_rx_buffer(ptr noundef %ring.1217, ptr noundef %arrayidx.i.i, ptr noundef nonnull %skb.2262.i) #14
  %inc47.i = add nuw nsw i16 %cleaned_count.1.i, 1
  %325 = ptrtoint ptr %next_to_clean.i.i to i32
  call void @__asan_load2_noabort(i32 %325)
  %326 = load i16, ptr %next_to_clean.i.i, align 4
  %conv.i232.i = zext i16 %326 to i32
  %add.i233.i = add nuw nsw i32 %conv.i232.i, 1
  %327 = ptrtoint ptr %count.i234.i to i32
  call void @__asan_load2_noabort(i32 %327)
  %328 = load i16, ptr %count.i234.i, align 32
  %conv1.i235.i = zext i16 %328 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i233.i, i32 %conv1.i235.i)
  %cmp.i236.i = icmp ult i32 %add.i233.i, %conv1.i235.i
  %spec.select.i.i = select i1 %cmp.i236.i, i32 %add.i233.i, i32 0
  %conv3.i.i = trunc i32 %spec.select.i.i to i16
  %329 = ptrtoint ptr %next_to_clean.i.i to i32
  call void @__asan_store2_noabort(i32 %329)
  store i16 %conv3.i.i, ptr %next_to_clean.i.i, align 4
  %330 = ptrtoint ptr %desc.i109 to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %desc.i109, align 4
  %arrayidx.i237.i = getelementptr %union.ixgbe_adv_rx_desc, ptr %331, i32 %spec.select.i.i
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %arrayidx.i237.i) #14, !srcloc !340
  %332 = ptrtoint ptr %upper.i to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %upper.i, align 8
  %and.i.i.i = and i32 %333, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i238.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i238.i, label %if.end46.i.cleanup.i123_crit_edge, label %if.end50.i119

if.end46.i.cleanup.i123_crit_edge:                ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i123

if.end50.i119:                                    ; preds = %if.end46.i
  %cmp.i.i.i = icmp ugt ptr %skb.2262.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.end50.i119.cleanup.i123_crit_edge, label %if.end.i242.i

if.end50.i119.cleanup.i123_crit_edge:             ; preds = %if.end50.i119
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i123

if.end.i242.i:                                    ; preds = %if.end50.i119
  %and.i.i240.i = and i32 %333, 59
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i240.i)
  %tobool.not.i241.i = icmp eq i32 %and.i.i240.i, 0
  br i1 %tobool.not.i241.i, label %if.end.i242.i.if.end9.i244.i_crit_edge, label %if.then4.i.i, !prof !322

if.end.i242.i.if.end9.i244.i_crit_edge:           ; preds = %if.end.i242.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i244.i

if.then4.i.i:                                     ; preds = %if.end.i242.i
  %334 = ptrtoint ptr %netdev5.i.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %netdev5.i.i, align 8
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %335, i32 0, i32 23
  %336 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %336)
  %337 = load i64, ptr %features.i.i, align 16
  %and.i243.i = and i64 %337, 17592186044416
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i243.i)
  %tobool6.not.i.i = icmp eq i64 %and.i243.i, 0
  br i1 %tobool6.not.i.i, label %cleanup.i.i, label %if.then4.i.i.if.end9.i244.i_crit_edge

if.then4.i.i.if.end9.i244.i_crit_edge:            ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i244.i

cleanup.i.i:                                      ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__dev_kfree_skb_any(ptr noundef nonnull %skb.2262.i, i32 noundef 1) #14
  br label %cleanup.i123

if.end9.i244.i:                                   ; preds = %if.then4.i.i.if.end9.i244.i_crit_edge, %if.end.i242.i.if.end9.i244.i_crit_edge
  %len1.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 6
  %338 = ptrtoint ptr %len1.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %len1.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 60, i32 %339)
  %cmp.i.i.i.i.i = icmp ult i32 %339, 60
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i.i.i.i, label %if.end9.i244.i.if.end53.i_crit_edge, !prof !308

if.end9.i244.i.if.end53.i_crit_edge:              ; preds = %if.end9.i244.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end53.i

if.then.i.i.i.i.i:                                ; preds = %if.end9.i244.i
  %sub.i.i.i.i.i = sub nuw nsw i32 60, %339
  %call.i.i.i.i.i = call i32 @__skb_pad(ptr noundef nonnull %skb.2262.i, i32 noundef %sub.i.i.i.i.i, i1 noundef zeroext true) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i.i)
  %tobool4.not.i.i.i.i.i = icmp eq i32 %call.i.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then.i.i.i.i.i.cleanup.i123_crit_edge

if.then.i.i.i.i.i.cleanup.i123_crit_edge:         ; preds = %if.then.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i123

if.end.i.i.i.i.i:                                 ; preds = %if.then.i.i.i.i.i
  %data_len.i.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 7
  %340 = ptrtoint ptr %data_len.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %data_len.i.i.i.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %341)
  %tobool.i.not.i.i.i.i.i.i = icmp eq i32 %341, 0
  br i1 %tobool.i.not.i.i.i.i.i.i, label %__skb_put.exit.i.i.i.i.i, label %do.body3.i.i.i.i.i.i, !prof !322

do.body3.i.i.i.i.i.i:                             ; preds = %if.end.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #14, !srcloc !345
  unreachable

__skb_put.exit.i.i.i.i.i:                         ; preds = %if.end.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %tail.i.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 16
  %342 = ptrtoint ptr %tail.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load ptr, ptr %tail.i.i.i.i.i.i.i, align 8
  %add.ptr.i.i.i.i.i.i = getelementptr i8, ptr %343, i32 %sub.i.i.i.i.i
  store ptr %add.ptr.i.i.i.i.i.i, ptr %tail.i.i.i.i.i.i.i, align 8
  %344 = ptrtoint ptr %len1.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %len1.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %345, %sub.i.i.i.i.i
  store i32 %add.i.i.i.i.i.i, ptr %len1.i.i.i.i.i, align 4
  br label %if.end53.i

if.end53.i:                                       ; preds = %__skb_put.exit.i.i.i.i.i, %if.end9.i244.i.if.end53.i_crit_edge
  %346 = ptrtoint ptr %len1.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load i32, ptr %len1.i.i.i.i.i, align 4
  %add54.i = add i32 %347, %total_rx_bytes.1270.i
  %pkt_type.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 15
  %348 = ptrtoint ptr %pkt_type.i to i32
  call void @__asan_load2_noabort(i32 %348)
  %bf.load.i = load i16, ptr %pkt_type.i, align 8
  %bf.lshr.i = lshr i16 %bf.load.i, 13
  %bf.lshr.off.i = add nsw i16 %bf.lshr.i, -1
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %bf.lshr.off.i)
  %switch185.i = icmp ult i16 %bf.lshr.off.i, 2
  br i1 %switch185.i, label %land.lhs.true.i121, label %if.end53.i.if.end69.i_crit_edge

if.end53.i.if.end69.i_crit_edge:                  ; preds = %if.end53.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69.i

land.lhs.true.i121:                               ; preds = %if.end53.i
  %349 = ptrtoint ptr %netdev5.i.i to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load ptr, ptr %netdev5.i.i, align 8
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %350, i32 0, i32 86
  %351 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load ptr, ptr %dev_addr.i, align 64
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 18
  %353 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load ptr, ptr %head.i.i.i, align 8
  %mac_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 15, i32 0, i32 21
  %355 = ptrtoint ptr %mac_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %355)
  %356 = load i16, ptr %mac_header.i.i.i, align 2
  %conv.i.i.i120 = zext i16 %356 to i32
  %add.ptr.i.i245.i = getelementptr i8, ptr %354, i32 %conv.i.i.i120
  %h_source.i = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i245.i, i32 0, i32 1
  %357 = ptrtoint ptr %352 to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %352, align 4
  %359 = ptrtoint ptr %h_source.i to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load i32, ptr %h_source.i, align 4
  %xor.i.i = xor i32 %360, %358
  %add.ptr.i246.i = getelementptr i8, ptr %352, i32 4
  %361 = ptrtoint ptr %add.ptr.i246.i to i32
  call void @__asan_load2_noabort(i32 %361)
  %362 = load i16, ptr %add.ptr.i246.i, align 2
  %add.ptr1.i.i = getelementptr i8, ptr %h_source.i, i32 4
  %363 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load2_noabort(i32 %363)
  %364 = load i16, ptr %add.ptr1.i.i, align 2
  %xor37.i.i = xor i16 %364, %362
  %xor3.i.i = zext i16 %xor37.i.i to i32
  %or.i.i = or i32 %xor.i.i, %xor3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i247.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i247.i, label %if.then68.i, label %land.lhs.true.i121.if.end69.i_crit_edge

land.lhs.true.i121.if.end69.i_crit_edge:          ; preds = %land.lhs.true.i121
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69.i

if.then68.i:                                      ; preds = %land.lhs.true.i121
  call void @__sanitizer_cov_trace_pc() #16
  call void @__dev_kfree_skb_irq(ptr noundef nonnull %skb.2262.i, i32 noundef 1) #14
  br label %cleanup.i123

if.end69.i:                                       ; preds = %land.lhs.true.i121.if.end69.i_crit_edge, %if.end53.i.if.end69.i_crit_edge
  %365 = ptrtoint ptr %netdev5.i.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load ptr, ptr %netdev5.i.i, align 8
  %features.i.i.i = getelementptr inbounds %struct.net_device, ptr %366, i32 0, i32 23
  %367 = ptrtoint ptr %features.i.i.i to i32
  call void @__asan_load8_noabort(i32 %367)
  %368 = load i64, ptr %features.i.i.i, align 16
  %and.i27.i.i = and i64 %368, 549755813888
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i27.i.i)
  %tobool.not.i.i.i = icmp eq i64 %and.i27.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end69.i.ixgbevf_rx_hash.exit.i.i_crit_edge, label %if.end.i.i.i

if.end69.i.ixgbevf_rx_hash.exit.i.i_crit_edge:    ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_hash.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end69.i
  %369 = ptrtoint ptr %arrayidx.i111 to i32
  call void @__asan_load2_noabort(i32 %369)
  %370 = load i16, ptr %arrayidx.i111, align 8
  %371 = lshr i16 %370, 8
  %372 = and i16 %371, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %372)
  %tobool3.not.i.i.i = icmp eq i16 %372, 0
  br i1 %tobool3.not.i.i.i, label %if.end.i.i.i.ixgbevf_rx_hash.exit.i.i_crit_edge, label %if.end5.i.i.i

if.end.i.i.i.ixgbevf_rx_hash.exit.i.i_crit_edge:  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_hash.exit.i.i

if.end5.i.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %hi_dword.i.i.i = getelementptr inbounds %struct.anon.204, ptr %arrayidx.i111, i32 0, i32 1
  %373 = ptrtoint ptr %hi_dword.i.i.i to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load i32, ptr %hi_dword.i.i.i, align 4
  %375 = call i32 @llvm.bswap.i32(i32 %374) #14
  %conv7.i.i.i = zext i16 %372 to i32
  %shl.i.i248.i = shl nuw nsw i32 1, %conv7.i.i.i
  %and8.i.i.i = and i32 %shl.i.i248.i, 394
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i.i)
  %tobool9.not.not.i.i.i = icmp eq i32 %and8.i.i.i, 0
  %bf.shl.i.i.i.i.i = select i1 %tobool9.not.not.i.i.i, i16 0, i16 128
  %bf.clear.i.i.i.i.i = and i16 %bf.load.i, -193
  %bf.set.i.i.i.i.i = or i16 %bf.shl.i.i.i.i.i, %bf.clear.i.i.i.i.i
  %376 = ptrtoint ptr %pkt_type.i to i32
  call void @__asan_store2_noabort(i32 %376)
  store i16 %bf.set.i.i.i.i.i, ptr %pkt_type.i, align 8
  %hash10.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 15, i32 0, i32 8
  %377 = ptrtoint ptr %hash10.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %377)
  store i32 %375, ptr %hash10.i.i.i.i.i, align 4
  br label %ixgbevf_rx_hash.exit.i.i

ixgbevf_rx_hash.exit.i.i:                         ; preds = %if.end5.i.i.i, %if.end.i.i.i.ixgbevf_rx_hash.exit.i.i_crit_edge, %if.end69.i.ixgbevf_rx_hash.exit.i.i_crit_edge
  %378 = ptrtoint ptr %netdev5.i.i to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load ptr, ptr %netdev5.i.i, align 8
  %features.i29.i.i = getelementptr inbounds %struct.net_device, ptr %379, i32 0, i32 23
  %380 = ptrtoint ptr %features.i29.i.i to i32
  call void @__asan_load8_noabort(i32 %380)
  %381 = load i64, ptr %features.i29.i.i, align 16
  %and.i30.i.i = and i64 %381, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i30.i.i)
  %tobool.not.i31.i.i = icmp eq i64 %and.i30.i.i, 0
  br i1 %tobool.not.i31.i.i, label %ixgbevf_rx_hash.exit.i.i.ixgbevf_rx_checksum.exit.i.i_crit_edge, label %if.end.i32.i.i

ixgbevf_rx_hash.exit.i.i.ixgbevf_rx_checksum.exit.i.i_crit_edge: ; preds = %ixgbevf_rx_hash.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_checksum.exit.i.i

if.end.i32.i.i:                                   ; preds = %ixgbevf_rx_hash.exit.i.i
  %382 = ptrtoint ptr %upper.i to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load i32, ptr %upper.i, align 8
  %384 = and i32 %383, 1073741952
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741952, i32 %384)
  %.not.i.i.i = icmp eq i32 %384, 1073741952
  br i1 %.not.i.i.i, label %if.then4.i.i.i, label %if.end5.i33.i.i

if.then4.i.i.i:                                   ; preds = %if.end.i32.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %385 = ptrtoint ptr %csum_err13.i.i.i to i32
  call void @__asan_load8_noabort(i32 %385)
  %386 = load i64, ptr %csum_err13.i.i.i, align 8
  %inc.i.i.i = add i64 %386, 1
  store i64 %inc.i.i.i, ptr %csum_err13.i.i.i, align 8
  br label %ixgbevf_rx_checksum.exit.i.i

if.end5.i33.i.i:                                  ; preds = %if.end.i32.i.i
  %and.i25.i.i.i = and i32 %383, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i25.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %and.i25.i.i.i, 0
  br i1 %tobool7.not.i.i.i, label %if.end5.i33.i.i.ixgbevf_rx_checksum.exit.i.i_crit_edge, label %if.end9.i.i.i

if.end5.i33.i.i.ixgbevf_rx_checksum.exit.i.i_crit_edge: ; preds = %if.end5.i33.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_rx_checksum.exit.i.i

if.end9.i.i.i:                                    ; preds = %if.end5.i33.i.i
  %and.i27.i.i.i = and i32 %383, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i27.i.i.i)
  %tobool11.not.i.i.i = icmp eq i32 %and.i27.i.i.i, 0
  br i1 %tobool11.not.i.i.i, label %if.end15.i.i.i, label %if.then12.i.i.i

if.then12.i.i.i:                                  ; preds = %if.end9.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %387 = ptrtoint ptr %csum_err13.i.i.i to i32
  call void @__asan_load8_noabort(i32 %387)
  %388 = load i64, ptr %csum_err13.i.i.i, align 8
  %inc14.i.i.i = add i64 %388, 1
  store i64 %inc14.i.i.i, ptr %csum_err13.i.i.i, align 8
  br label %ixgbevf_rx_checksum.exit.i.i

if.end15.i.i.i:                                   ; preds = %if.end9.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %389 = ptrtoint ptr %pkt_type.i to i32
  call void @__asan_load2_noabort(i32 %389)
  %bf.load.i.i.i = load i16, ptr %pkt_type.i, align 8
  %bf.clear.i.i.i = and i16 %bf.load.i.i.i, -1537
  %bf.set.i.i.i = or i16 %bf.clear.i.i.i, 512
  store i16 %bf.set.i.i.i, ptr %pkt_type.i, align 8
  br label %ixgbevf_rx_checksum.exit.i.i

ixgbevf_rx_checksum.exit.i.i:                     ; preds = %if.end15.i.i.i, %if.then12.i.i.i, %if.end5.i33.i.i.ixgbevf_rx_checksum.exit.i.i_crit_edge, %if.then4.i.i.i, %ixgbevf_rx_hash.exit.i.i.ixgbevf_rx_checksum.exit.i.i_crit_edge
  %390 = ptrtoint ptr %upper.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load i32, ptr %upper.i, align 8
  %and.i34.i.i = and i32 %391, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i34.i.i)
  %tobool.not.i250.i = icmp eq i32 %and.i34.i.i, 0
  br i1 %tobool.not.i250.i, label %ixgbevf_rx_checksum.exit.i.i.if.end5.i.i_crit_edge, label %if.then.i.i

ixgbevf_rx_checksum.exit.i.i.if.end5.i.i_crit_edge: ; preds = %ixgbevf_rx_checksum.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5.i.i

if.then.i.i:                                      ; preds = %ixgbevf_rx_checksum.exit.i.i
  %vlan.i.i = getelementptr inbounds %struct.anon.203, ptr %arrayidx.i111, i32 0, i32 1, i32 2
  %392 = ptrtoint ptr %vlan.i.i to i32
  call void @__asan_load2_noabort(i32 %392)
  %393 = load i16, ptr %vlan.i.i, align 2
  %394 = call i16 @llvm.bswap.i16(i16 %393) #14
  %395 = ptrtoint ptr %netdev5.i.i to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load ptr, ptr %netdev5.i.i, align 8
  %add.ptr.i.i251.i = getelementptr i8, ptr %396, i32 2304
  %397 = and i16 %394, 4095
  %and.i252.i = zext i16 %397 to i32
  %div3.i.i.i = lshr i32 %and.i252.i, 5
  %arrayidx.i.i.i122 = getelementptr i32, ptr %add.ptr.i.i251.i, i32 %div3.i.i.i
  %398 = ptrtoint ptr %arrayidx.i.i.i122 to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load volatile i32, ptr %arrayidx.i.i.i122, align 4
  %and.i.i253.i = and i32 %and.i252.i, 31
  %400 = shl nuw i32 1, %and.i.i253.i
  %401 = and i32 %400, %399
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %401)
  %tobool3.not.i.i = icmp eq i32 %401, 0
  br i1 %tobool3.not.i.i, label %if.then.i.i.if.end5.i.i_crit_edge, label %if.then4.i254.i

if.then.i.i.if.end5.i.i_crit_edge:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5.i.i

if.then4.i254.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %vlan_proto1.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 15, i32 0, i32 9
  %402 = ptrtoint ptr %vlan_proto1.i.i.i to i32
  call void @__asan_store2_noabort(i32 %402)
  store i16 -32512, ptr %vlan_proto1.i.i.i, align 8
  %vlan_tci2.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 15, i32 0, i32 10
  %403 = ptrtoint ptr %vlan_tci2.i.i.i to i32
  call void @__asan_store2_noabort(i32 %403)
  store i16 %394, ptr %vlan_tci2.i.i.i, align 2
  %vlan_present.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 15, i32 0, i32 3
  %404 = ptrtoint ptr %vlan_present.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %404, i32 4)
  %bf.load.i35.i.i = load i32, ptr %vlan_present.i.i.i, align 2
  %bf.set.i36.i.i = or i32 %bf.load.i35.i.i, -2147483648
  store i32 %bf.set.i36.i.i, ptr %vlan_present.i.i.i, align 2
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i254.i, %if.then.i.i.if.end5.i.i_crit_edge, %ixgbevf_rx_checksum.exit.i.i.if.end5.i.i_crit_edge
  %405 = ptrtoint ptr %upper.i to i32
  call void @__asan_load4_noabort(i32 %405)
  %406 = load i32, ptr %upper.i, align 8
  %and.i38.i.i = and i32 %406, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i38.i.i)
  %tobool7.not.i.i = icmp eq i32 %and.i38.i.i, 0
  br i1 %tobool7.not.i.i, label %if.end5.i.i.ixgbevf_process_skb_fields.exit.i_crit_edge, label %if.then8.i.i

if.end5.i.i.ixgbevf_process_skb_fields.exit.i_crit_edge: ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_process_skb_fields.exit.i

if.then8.i.i:                                     ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @ixgbevf_ipsec_rx(ptr noundef %ring.1217, ptr noundef %arrayidx.i111, ptr noundef nonnull %skb.2262.i) #14
  br label %ixgbevf_process_skb_fields.exit.i

ixgbevf_process_skb_fields.exit.i:                ; preds = %if.then8.i.i, %if.end5.i.i.ixgbevf_process_skb_fields.exit.i_crit_edge
  %407 = ptrtoint ptr %netdev5.i.i to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load ptr, ptr %netdev5.i.i, align 8
  %call11.i.i = call zeroext i16 @eth_type_trans(ptr noundef nonnull %skb.2262.i, ptr noundef %408) #14
  %protocol.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.2262.i, i32 0, i32 15, i32 0, i32 18
  %409 = ptrtoint ptr %protocol.i.i to i32
  call void @__asan_store2_noabort(i32 %409)
  store i16 %call11.i.i, ptr %protocol.i.i, align 8
  %call.i.i = call i32 @napi_gro_receive(ptr noundef %napi, ptr noundef nonnull %skb.2262.i) #14
  %inc70.i = add i32 %total_rx_packets.1269.i, 1
  br label %cleanup.i123

cleanup.thread.i:                                 ; preds = %if.end.i112
  %410 = ptrtoint ptr %skb2.i to i32
  call void @__asan_store4_noabort(i32 %410)
  store ptr %skb.0324.i, ptr %skb2.i, align 4
  br i1 %xdp_xmit.0.off0325.i, label %cleanup.thread.i.if.then75.i_crit_edge, label %cleanup.thread.i.ixgbevf_clean_rx_irq.exit_crit_edge

cleanup.thread.i.ixgbevf_clean_rx_irq.exit_crit_edge: ; preds = %cleanup.thread.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_rx_irq.exit

cleanup.thread.i.if.then75.i_crit_edge:           ; preds = %cleanup.thread.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then75.i

cleanup.i123:                                     ; preds = %ixgbevf_process_skb_fields.exit.i, %if.then68.i, %if.then.i.i.i.i.i.cleanup.i123_crit_edge, %cleanup.i.i, %if.end50.i119.cleanup.i123_crit_edge, %if.end46.i.cleanup.i123_crit_edge
  %skb.3.i = phi ptr [ %skb.2262.i, %if.then68.i ], [ null, %ixgbevf_process_skb_fields.exit.i ], [ %skb.2262.i, %if.end46.i.cleanup.i123_crit_edge ], [ null, %cleanup.i.i ], [ null, %if.end50.i119.cleanup.i123_crit_edge ], [ null, %if.then.i.i.i.i.i.cleanup.i123_crit_edge ]
  %total_rx_packets.2.i = phi i32 [ %total_rx_packets.1269.i, %if.then68.i ], [ %inc70.i, %ixgbevf_process_skb_fields.exit.i ], [ %total_rx_packets.1269.i, %if.end46.i.cleanup.i123_crit_edge ], [ %total_rx_packets.1269.i, %cleanup.i.i ], [ %total_rx_packets.1269.i, %if.end50.i119.cleanup.i123_crit_edge ], [ %total_rx_packets.1269.i, %if.then.i.i.i.i.i.cleanup.i123_crit_edge ]
  %total_rx_bytes.2.i = phi i32 [ %add54.i, %if.then68.i ], [ %add54.i, %ixgbevf_process_skb_fields.exit.i ], [ %total_rx_bytes.1270.i, %if.end46.i.cleanup.i123_crit_edge ], [ %total_rx_bytes.1270.i, %cleanup.i.i ], [ %total_rx_bytes.1270.i, %if.end50.i119.cleanup.i123_crit_edge ], [ %total_rx_bytes.1270.i, %if.then.i.i.i.i.i.cleanup.i123_crit_edge ]
  %cmp.i = icmp ult i32 %total_rx_packets.2.i, %per_ring_budget.0
  br i1 %cmp.i, label %cleanup.i123.while.body.i110_crit_edge, label %while.end.i124, !prof !322

cleanup.i123.while.body.i110_crit_edge:           ; preds = %cleanup.i123
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i110

while.end.i124:                                   ; preds = %cleanup.i123
  %411 = ptrtoint ptr %skb2.i to i32
  call void @__asan_store4_noabort(i32 %411)
  store ptr %skb.3.i, ptr %skb2.i, align 4
  br i1 %xdp_xmit.2.off0267.i, label %while.end.i124.if.then75.i_crit_edge, label %while.end.i124.ixgbevf_clean_rx_irq.exit_crit_edge

while.end.i124.ixgbevf_clean_rx_irq.exit_crit_edge: ; preds = %while.end.i124
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_clean_rx_irq.exit

while.end.i124.if.then75.i_crit_edge:             ; preds = %while.end.i124
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then75.i

if.then75.i:                                      ; preds = %while.end.i124.if.then75.i_crit_edge, %cleanup.thread.i.if.then75.i_crit_edge, %if.then42.i.if.then75.i_crit_edge
  %total_rx_bytes.3294.i = phi i32 [ %total_rx_bytes.0327.i, %cleanup.thread.i.if.then75.i_crit_edge ], [ %total_rx_bytes.2.i, %while.end.i124.if.then75.i_crit_edge ], [ %total_rx_bytes.0327.i, %if.then42.i.if.then75.i_crit_edge ]
  %total_rx_packets.3292.i = phi i32 [ %total_rx_packets.0326.i, %cleanup.thread.i.if.then75.i_crit_edge ], [ %total_rx_packets.2.i, %while.end.i124.if.then75.i_crit_edge ], [ %total_rx_packets.0326.i, %if.then42.i.if.then75.i_crit_edge ]
  %queue_index.i125 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 22
  %412 = ptrtoint ptr %queue_index.i125 to i32
  call void @__asan_load4_noabort(i32 %412)
  %413 = load i32, ptr %queue_index.i125, align 4
  %arrayidx77.i = getelementptr %struct.ixgbevf_adapter, ptr %191, i32 0, i32 7, i32 %413
  %414 = ptrtoint ptr %arrayidx77.i to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load ptr, ptr %arrayidx77.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !346
  call void @arm_heavy_mb() #14
  %next_to_use.i126 = getelementptr inbounds %struct.ixgbevf_ring, ptr %415, i32 0, i32 9
  %416 = ptrtoint ptr %next_to_use.i126 to i32
  call void @__asan_load2_noabort(i32 %416)
  %417 = load i16, ptr %next_to_use.i126, align 2
  %conv78.i = zext i16 %417 to i32
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !317
  call void @arm_heavy_mb() #14
  %418 = call i32 @llvm.bswap.i32(i32 %conv78.i) #14
  %tail.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %415, i32 0, i32 19
  %419 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %419)
  %420 = load ptr, ptr %tail.i.i, align 8
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %420, i32 %418) #14, !srcloc !312
  br label %ixgbevf_clean_rx_irq.exit

ixgbevf_clean_rx_irq.exit:                        ; preds = %if.then75.i, %while.end.i124.ixgbevf_clean_rx_irq.exit_crit_edge, %cleanup.thread.i.ixgbevf_clean_rx_irq.exit_crit_edge, %if.then42.i.ixgbevf_clean_rx_irq.exit_crit_edge
  %total_rx_bytes.3293.i = phi i32 [ %total_rx_bytes.0327.i, %cleanup.thread.i.ixgbevf_clean_rx_irq.exit_crit_edge ], [ %total_rx_bytes.3294.i, %if.then75.i ], [ %total_rx_bytes.2.i, %while.end.i124.ixgbevf_clean_rx_irq.exit_crit_edge ], [ %total_rx_bytes.0327.i, %if.then42.i.ixgbevf_clean_rx_irq.exit_crit_edge ]
  %total_rx_packets.3291.i = phi i32 [ %total_rx_packets.0326.i, %cleanup.thread.i.ixgbevf_clean_rx_irq.exit_crit_edge ], [ %total_rx_packets.3292.i, %if.then75.i ], [ %total_rx_packets.2.i, %while.end.i124.ixgbevf_clean_rx_irq.exit_crit_edge ], [ %total_rx_packets.0326.i, %if.then42.i.ixgbevf_clean_rx_irq.exit_crit_edge ]
  %syncp.i127 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 15
  call fastcc void @u64_stats_update_begin(ptr noundef %syncp.i127) #14
  %conv80.i128 = zext i32 %total_rx_packets.3291.i to i64
  %stats.i129 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 14
  %421 = ptrtoint ptr %stats.i129 to i32
  call void @__asan_load8_noabort(i32 %421)
  %422 = load i64, ptr %stats.i129, align 16
  %add81.i130 = add i64 %422, %conv80.i128
  store i64 %add81.i130, ptr %stats.i129, align 16
  %conv82.i131 = zext i32 %total_rx_bytes.3293.i to i64
  %bytes.i132 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 14, i32 1
  %423 = ptrtoint ptr %bytes.i132 to i32
  call void @__asan_load8_noabort(i32 %423)
  %424 = load i64, ptr %bytes.i132, align 8
  %add84.i = add i64 %424, %conv82.i131
  store i64 %add84.i, ptr %bytes.i132, align 8
  %dep_map.i.i.i133 = getelementptr inbounds %struct.ixgbevf_ring, ptr %ring.1217, i32 0, i32 15, i32 0, i32 1
  %425 = call ptr @llvm.returnaddress(i32 0) #14
  %426 = ptrtoint ptr %425 to i32
  call void @lock_release(ptr noundef %dep_map.i.i.i133, i32 noundef %426) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !342
  %427 = ptrtoint ptr %syncp.i127 to i32
  call void @__asan_load4_noabort(i32 %427)
  %428 = load i32, ptr %syncp.i127, align 4
  %inc.i.i.i.i134 = add i32 %428, 1
  store i32 %inc.i.i.i.i134, ptr %syncp.i127, align 4
  %429 = ptrtoint ptr %total_packets.i to i32
  call void @__asan_load4_noabort(i32 %429)
  %430 = load i32, ptr %total_packets.i, align 8
  %add86.i = add i32 %430, %total_rx_packets.3291.i
  store i32 %add86.i, ptr %total_packets.i, align 8
  %431 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_load4_noabort(i32 %431)
  %432 = load i32, ptr %total_bytes.i, align 4
  %add88.i135 = add i32 %432, %total_rx_bytes.3293.i
  store i32 %add88.i135, ptr %total_bytes.i, align 4
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %xdp.i) #14
  %add = add i32 %total_rx_packets.3291.i, %work_done.0215
  call void @__sanitizer_cov_trace_cmp4(i32 %total_rx_packets.3291.i, i32 %per_ring_budget.0)
  %cmp23.not = icmp slt i32 %total_rx_packets.3291.i, %per_ring_budget.0
  %spec.select97 = select i1 %cmp23.not, i1 %clean_complete.2.off0216, i1 false
  %433 = ptrtoint ptr %ring.1217 to i32
  call void @__asan_load4_noabort(i32 %433)
  %ring.1 = load ptr, ptr %ring.1217, align 8
  %cmp19.not = icmp eq ptr %ring.1, null
  br i1 %cmp19.not, label %ixgbevf_clean_rx_irq.exit.for.end29_crit_edge, label %ixgbevf_clean_rx_irq.exit.for.body21_crit_edge

ixgbevf_clean_rx_irq.exit.for.body21_crit_edge:   ; preds = %ixgbevf_clean_rx_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body21

ixgbevf_clean_rx_irq.exit.for.end29_crit_edge:    ; preds = %ixgbevf_clean_rx_irq.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end29

for.end29:                                        ; preds = %ixgbevf_clean_rx_irq.exit.for.end29_crit_edge, %if.end15.for.end29_crit_edge
  %work_done.0.lcssa = phi i32 [ 0, %if.end15.for.end29_crit_edge ], [ %add, %ixgbevf_clean_rx_irq.exit.for.end29_crit_edge ]
  %clean_complete.2.off0.lcssa = phi i1 [ %clean_complete.0.off0.lcssa, %if.end15.for.end29_crit_edge ], [ %spec.select97, %ixgbevf_clean_rx_irq.exit.for.end29_crit_edge ]
  br i1 %clean_complete.2.off0.lcssa, label %if.end31, label %for.end29.cleanup_crit_edge

for.end29.cleanup_crit_edge:                      ; preds = %for.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end31:                                         ; preds = %for.end29
  %call32 = call zeroext i1 @napi_complete_done(ptr noundef %napi, i32 noundef %work_done.0.lcssa) #14
  br i1 %call32, label %if.then35, label %if.end31.if.end49_crit_edge, !prof !322

if.end31.if.end49_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

if.then35:                                        ; preds = %if.end31
  %rx_itr_setting = getelementptr inbounds %struct.ixgbevf_adapter, ptr %1, i32 0, i32 2
  %434 = ptrtoint ptr %rx_itr_setting to i32
  call void @__asan_load2_noabort(i32 %434)
  %435 = load i16, ptr %rx_itr_setting, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %435)
  %cmp37 = icmp eq i16 %435, 1
  br i1 %cmp37, label %if.then39, label %if.then35.if.end40_crit_edge

if.then35.if.end40_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.then39:                                        ; preds = %if.then35
  %itr.i = getelementptr i8, ptr %napi, i32 -2
  %436 = ptrtoint ptr %itr.i to i32
  call void @__asan_load2_noabort(i32 %436)
  %437 = load i16, ptr %itr.i, align 2
  %conv.i = zext i16 %437 to i32
  %total_bytes.i.i = getelementptr i8, ptr %napi, i32 244
  %total_packets.i.i = getelementptr i8, ptr %napi, i32 248
  %438 = ptrtoint ptr %total_packets.i.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load i32, ptr %total_packets.i.i, align 4
  %itr.i.i = getelementptr i8, ptr %napi, i32 253
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %439)
  %cmp.i.i136 = icmp eq i32 %439, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %437)
  %cmp2.i.i = icmp ult i16 %437, 4
  %or.cond.i = select i1 %cmp.i.i136, i1 true, i1 %cmp2.i.i
  br i1 %or.cond.i, label %if.then39.ixgbevf_update_itr.exit.i_crit_edge, label %if.end5.i.i137

if.then39.ixgbevf_update_itr.exit.i_crit_edge:    ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_update_itr.exit.i

if.end5.i.i137:                                   ; preds = %if.then39
  %440 = ptrtoint ptr %itr.i.i to i32
  call void @__asan_load1_noabort(i32 %440)
  %441 = load i8, ptr %itr.i.i, align 1
  %442 = ptrtoint ptr %total_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load i32, ptr %total_bytes.i.i, align 4
  %444 = lshr i16 %437, 2
  %445 = zext i16 %444 to i32
  %div.i.i = udiv i32 %443, %445
  %446 = zext i8 %441 to i64
  call void @__sanitizer_cov_trace_switch(i64 %446, ptr @__sancov_gen_cov_switch_values.137)
  switch i8 %441, label %if.end5.i.i137.sw.epilog.i.i_crit_edge [
    i8 0, label %sw.bb.i.i
    i8 1, label %sw.bb12.i.i
    i8 2, label %sw.bb21.i.i
  ]

if.end5.i.i137.sw.epilog.i.i_crit_edge:           ; preds = %if.end5.i.i137
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i.i

sw.bb.i.i:                                        ; preds = %if.end5.i.i137
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %div.i.i)
  %cmp8.i.i = icmp ugt i32 %div.i.i, 10
  %spec.select.i.i138 = zext i1 %cmp8.i.i to i8
  br label %sw.epilog.i.i

sw.bb12.i.i:                                      ; preds = %if.end5.i.i137
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %div.i.i)
  %cmp13.i.i = icmp ugt i32 %div.i.i, 20
  br i1 %cmp13.i.i, label %sw.bb12.i.i.sw.epilog.i.i_crit_edge, label %if.else.i.i139

sw.bb12.i.i.sw.epilog.i.i_crit_edge:              ; preds = %sw.bb12.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i.i

if.else.i.i139:                                   ; preds = %sw.bb12.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %div.i.i)
  %cmp16.i.i = icmp ugt i32 %div.i.i, 10
  %spec.select43.i.i = zext i1 %cmp16.i.i to i8
  br label %sw.epilog.i.i

sw.bb21.i.i:                                      ; preds = %if.end5.i.i137
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %div.i.i)
  %cmp22.i.i = icmp ult i32 %div.i.i, 21
  %spec.select44.i.i = select i1 %cmp22.i.i, i8 1, i8 2
  br label %sw.epilog.i.i

sw.epilog.i.i:                                    ; preds = %sw.bb21.i.i, %if.else.i.i139, %sw.bb12.i.i.sw.epilog.i.i_crit_edge, %sw.bb.i.i, %if.end5.i.i137.sw.epilog.i.i_crit_edge
  %itr_setting.0.i.i = phi i8 [ %441, %if.end5.i.i137.sw.epilog.i.i_crit_edge ], [ %spec.select.i.i138, %sw.bb.i.i ], [ 2, %sw.bb12.i.i.sw.epilog.i.i_crit_edge ], [ %spec.select43.i.i, %if.else.i.i139 ], [ %spec.select44.i.i, %sw.bb21.i.i ]
  %447 = ptrtoint ptr %total_bytes.i.i to i32
  call void @__asan_store4_noabort(i32 %447)
  store i32 0, ptr %total_bytes.i.i, align 4
  %448 = ptrtoint ptr %total_packets.i.i to i32
  call void @__asan_store4_noabort(i32 %448)
  store i32 0, ptr %total_packets.i.i, align 4
  %449 = ptrtoint ptr %itr.i.i to i32
  call void @__asan_store1_noabort(i32 %449)
  store i8 %itr_setting.0.i.i, ptr %itr.i.i, align 1
  br label %ixgbevf_update_itr.exit.i

ixgbevf_update_itr.exit.i:                        ; preds = %sw.epilog.i.i, %if.then39.ixgbevf_update_itr.exit.i_crit_edge
  %total_bytes.i42.i = getelementptr i8, ptr %napi, i32 228
  %total_packets.i43.i = getelementptr i8, ptr %napi, i32 232
  %450 = ptrtoint ptr %total_packets.i43.i to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load i32, ptr %total_packets.i43.i, align 4
  %itr.i44.i = getelementptr i8, ptr %napi, i32 237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %451)
  %cmp.i45.i = icmp eq i32 %451, 0
  %or.cond68.i = select i1 %cmp.i45.i, i1 true, i1 %cmp2.i.i
  br i1 %or.cond68.i, label %ixgbevf_update_itr.exit.i.ixgbevf_update_itr.exit64.i_crit_edge, label %if.end5.i50.i

ixgbevf_update_itr.exit.i.ixgbevf_update_itr.exit64.i_crit_edge: ; preds = %ixgbevf_update_itr.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_update_itr.exit64.i

if.end5.i50.i:                                    ; preds = %ixgbevf_update_itr.exit.i
  %452 = ptrtoint ptr %itr.i44.i to i32
  call void @__asan_load1_noabort(i32 %452)
  %453 = load i8, ptr %itr.i44.i, align 1
  %454 = ptrtoint ptr %total_bytes.i42.i to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load i32, ptr %total_bytes.i42.i, align 4
  %456 = lshr i16 %437, 2
  %457 = zext i16 %456 to i32
  %div.i49.i = udiv i32 %455, %457
  %458 = zext i8 %453 to i64
  call void @__sanitizer_cov_trace_switch(i64 %458, ptr @__sancov_gen_cov_switch_values.138)
  switch i8 %453, label %if.end5.i50.i.sw.epilog.i63.i_crit_edge [
    i8 0, label %sw.bb.i53.i
    i8 1, label %sw.bb12.i55.i
    i8 2, label %sw.bb21.i61.i
  ]

if.end5.i50.i.sw.epilog.i63.i_crit_edge:          ; preds = %if.end5.i50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i63.i

sw.bb.i53.i:                                      ; preds = %if.end5.i50.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %div.i49.i)
  %cmp8.i51.i = icmp ugt i32 %div.i49.i, 10
  %spec.select.i52.i = zext i1 %cmp8.i51.i to i8
  br label %sw.epilog.i63.i

sw.bb12.i55.i:                                    ; preds = %if.end5.i50.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %div.i49.i)
  %cmp13.i54.i = icmp ugt i32 %div.i49.i, 20
  br i1 %cmp13.i54.i, label %sw.bb12.i55.i.sw.epilog.i63.i_crit_edge, label %if.else.i58.i

sw.bb12.i55.i.sw.epilog.i63.i_crit_edge:          ; preds = %sw.bb12.i55.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i63.i

if.else.i58.i:                                    ; preds = %sw.bb12.i55.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %div.i49.i)
  %cmp16.i56.i = icmp ugt i32 %div.i49.i, 10
  %spec.select43.i57.i = zext i1 %cmp16.i56.i to i8
  br label %sw.epilog.i63.i

sw.bb21.i61.i:                                    ; preds = %if.end5.i50.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %div.i49.i)
  %cmp22.i59.i = icmp ult i32 %div.i49.i, 21
  %spec.select44.i60.i = select i1 %cmp22.i59.i, i8 1, i8 2
  br label %sw.epilog.i63.i

sw.epilog.i63.i:                                  ; preds = %sw.bb21.i61.i, %if.else.i58.i, %sw.bb12.i55.i.sw.epilog.i63.i_crit_edge, %sw.bb.i53.i, %if.end5.i50.i.sw.epilog.i63.i_crit_edge
  %itr_setting.0.i62.i = phi i8 [ %453, %if.end5.i50.i.sw.epilog.i63.i_crit_edge ], [ %spec.select.i52.i, %sw.bb.i53.i ], [ 2, %sw.bb12.i55.i.sw.epilog.i63.i_crit_edge ], [ %spec.select43.i57.i, %if.else.i58.i ], [ %spec.select44.i60.i, %sw.bb21.i61.i ]
  %459 = ptrtoint ptr %total_bytes.i42.i to i32
  call void @__asan_store4_noabort(i32 %459)
  store i32 0, ptr %total_bytes.i42.i, align 4
  %460 = ptrtoint ptr %total_packets.i43.i to i32
  call void @__asan_store4_noabort(i32 %460)
  store i32 0, ptr %total_packets.i43.i, align 4
  %461 = ptrtoint ptr %itr.i44.i to i32
  call void @__asan_store1_noabort(i32 %461)
  store i8 %itr_setting.0.i62.i, ptr %itr.i44.i, align 1
  br label %ixgbevf_update_itr.exit64.i

ixgbevf_update_itr.exit64.i:                      ; preds = %sw.epilog.i63.i, %ixgbevf_update_itr.exit.i.ixgbevf_update_itr.exit64.i_crit_edge
  %462 = ptrtoint ptr %itr.i44.i to i32
  call void @__asan_load1_noabort(i32 %462)
  %463 = load i8, ptr %itr.i44.i, align 1
  %464 = ptrtoint ptr %itr.i.i to i32
  call void @__asan_load1_noabort(i32 %464)
  %465 = load i8, ptr %itr.i.i, align 1
  %466 = call i8 @llvm.umax.i8(i8 %463, i8 %465) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %466)
  %467 = icmp ult i8 %466, 3
  br i1 %467, label %switch.lookup, label %ixgbevf_update_itr.exit64.i.if.end40_crit_edge

ixgbevf_update_itr.exit64.i.if.end40_crit_edge:   ; preds = %ixgbevf_update_itr.exit64.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

switch.lookup:                                    ; preds = %ixgbevf_update_itr.exit64.i
  %468 = sext i8 %466 to i32
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.ixgbevf_poll, i32 0, i32 %468
  %469 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %469)
  %switch.load = load i32, ptr %switch.gep, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %switch.load, i32 %conv.i)
  %cmp16.not.i = icmp eq i32 %switch.load, %conv.i
  br i1 %cmp16.not.i, label %switch.lookup.if.end40_crit_edge, label %if.then.i144

switch.lookup.if.end40_crit_edge:                 ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.then.i144:                                     ; preds = %switch.lookup
  %mul.i140 = mul nuw nsw i32 %conv.i, 10
  %mul20.i = mul nuw nsw i32 %mul.i140, %switch.load
  %mul21.i = mul nuw nsw i32 %switch.load, 9
  %add.i141 = add nuw nsw i32 %mul21.i, %conv.i
  %div.i142 = udiv i32 %mul20.i, %add.i141
  %conv24.i = trunc i32 %div.i142 to i16
  %470 = ptrtoint ptr %itr.i to i32
  call void @__asan_store2_noabort(i32 %470)
  store i16 %conv24.i, ptr %itr.i, align 2
  %471 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %471)
  %472 = load ptr, ptr %add.ptr, align 128
  %v_idx3.i.i = getelementptr i8, ptr %napi, i32 -4
  %473 = ptrtoint ptr %v_idx3.i.i to i32
  call void @__asan_load2_noabort(i32 %473)
  %474 = load i16, ptr %v_idx3.i.i, align 4
  %hw_addr.i.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %472, i32 0, i32 26, i32 1
  %475 = ptrtoint ptr %hw_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %475)
  %476 = load volatile ptr, ptr %hw_addr.i.i.i, align 4
  %tobool.not.i.i.i143 = icmp eq ptr %476, null
  br i1 %tobool.not.i.i.i143, label %if.then.i144.if.end40_crit_edge, label %do.body4.i.i.i, !prof !308

if.then.i144.if.end40_crit_edge:                  ; preds = %if.then.i144
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

do.body4.i.i.i:                                   ; preds = %if.then.i144
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i145 = zext i16 %474 to i32
  %mul.i.i = shl nuw nsw i32 %conv.i.i145, 2
  %add.i.i146 = add nuw nsw i32 %mul.i.i, 2080
  %477 = and i32 %div.i142, 4088
  %or.i.i147 = or i32 %477, -2147483648
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %478 = call i32 @llvm.bswap.i32(i32 %or.i.i147) #14
  %add.ptr.i.i.i148 = getelementptr i8, ptr %476, i32 %add.i.i146
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i.i148, i32 %478) #14, !srcloc !312
  br label %if.end40

if.end40:                                         ; preds = %do.body4.i.i.i, %if.then.i144.if.end40_crit_edge, %switch.lookup.if.end40_crit_edge, %ixgbevf_update_itr.exit64.i.if.end40_crit_edge, %if.then35.if.end40_crit_edge
  %state = getelementptr inbounds %struct.ixgbevf_adapter, ptr %1, i32 0, i32 30
  %479 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %479)
  %480 = load volatile i32, ptr %state, align 4
  %481 = and i32 %480, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %481)
  %tobool42.not = icmp eq i32 %481, 0
  br i1 %tobool42.not, label %land.lhs.true, label %if.end40.if.end49_crit_edge

if.end40.if.end49_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

land.lhs.true:                                    ; preds = %if.end40
  %482 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %482)
  %483 = load volatile i32, ptr %state, align 4
  %484 = and i32 %483, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %484)
  %tobool45.not = icmp eq i32 %484, 0
  br i1 %tobool45.not, label %if.then46, label %land.lhs.true.if.end49_crit_edge

land.lhs.true.if.end49_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

if.then46:                                        ; preds = %land.lhs.true
  %v_idx = getelementptr i8, ptr %napi, i32 -4
  %485 = ptrtoint ptr %v_idx to i32
  call void @__asan_load2_noabort(i32 %485)
  %486 = load i16, ptr %v_idx, align 4
  %hw_addr.i.i = getelementptr inbounds %struct.ixgbevf_adapter, ptr %1, i32 0, i32 26, i32 1
  %487 = ptrtoint ptr %hw_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %487)
  %488 = load volatile ptr, ptr %hw_addr.i.i, align 4
  %tobool.not.i.i150 = icmp eq ptr %488, null
  br i1 %tobool.not.i.i150, label %if.then46.if.end49_crit_edge, label %do.body4.i.i, !prof !308

if.then46.if.end49_crit_edge:                     ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

do.body4.i.i:                                     ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #16
  %conv47 = zext i16 %486 to i32
  %shl = shl nuw i32 1, %conv47
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !311
  call void @arm_heavy_mb() #14
  %489 = call i32 @llvm.bswap.i32(i32 %shl) #14
  %add.ptr.i.i151 = getelementptr i8, ptr %488, i32 264
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i151, i32 %489) #14, !srcloc !312
  br label %if.end49

if.end49:                                         ; preds = %do.body4.i.i, %if.then46.if.end49_crit_edge, %land.lhs.true.if.end49_crit_edge, %if.end40.if.end49_crit_edge, %if.end31.if.end49_crit_edge
  %sub = add i32 %budget, -1
  %490 = call i32 @llvm.smin.i32(i32 %work_done.0.lcssa, i32 %sub)
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %for.end29.cleanup_crit_edge, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %490, %if.end49 ], [ %budget, %for.end.cleanup_crit_edge ], [ %budget, %for.end29.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_complete_done(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_consume_skb(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @u64_stats_update_begin(ptr noundef %syncp) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %entry.__seqprop_assert.exit_crit_edge, label %land.lhs.true.i

entry.__seqprop_assert.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %__seqprop_assert.exit

land.lhs.true.i:                                  ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !347
  %5 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !348
  %14 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i7.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i7.i to ptr
  %preempt_count.i.i8.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i8.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i8.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool20.not.i = icmp eq i32 %13, 0
  br i1 %tobool20.not.i, label %land.rhs.i, label %land.lhs.true.i.__seqprop_assert.exit_crit_edge

land.lhs.true.i.__seqprop_assert.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__seqprop_assert.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %18 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp.i = icmp eq i32 %21, 0
  br i1 %cmp.i, label %land.rhs22.i, label %land.rhs.i.__seqprop_assert.exit_crit_edge

land.rhs.i.__seqprop_assert.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__seqprop_assert.exit

land.rhs22.i:                                     ; preds = %land.rhs.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i9.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %add.i11.i = add i32 %25, 1
  store volatile i32 %add.i11.i, ptr %preempt_count.i.i10.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !349
  %26 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i, align 4
  %arrayidx46.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx46.i, align 4
  %add47.i = add i32 %29, ptrtoint (ptr @hardirqs_enabled to i32)
  %30 = inttoptr i32 %add47.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !350
  %33 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i12.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i12.i to ptr
  %preempt_count.i.i13.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i13.i, align 4
  %sub.i14.i = add i32 %36, -1
  store volatile i32 %sub.i14.i, ptr %preempt_count.i.i13.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool54.not.i = icmp eq i32 %32, 0
  br i1 %tobool54.not.i, label %land.rhs22.i.__seqprop_assert.exit_crit_edge, label %land.rhs58.i

land.rhs22.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__seqprop_assert.exit

land.rhs58.i:                                     ; preds = %land.rhs22.i
  %.b1.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i, label %land.rhs58.i.__seqprop_assert.exit_crit_edge, label %if.then.i, !prof !322

land.rhs58.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__seqprop_assert.exit

if.then.i:                                        ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.121, i32 noundef 271, i32 noundef 9, ptr noundef null) #14
  br label %__seqprop_assert.exit

__seqprop_assert.exit:                            ; preds = %if.then.i, %land.rhs58.i.__seqprop_assert.exit_crit_edge, %land.rhs22.i.__seqprop_assert.exit_crit_edge, %land.rhs.i.__seqprop_assert.exit_crit_edge, %land.lhs.true.i.__seqprop_assert.exit_crit_edge, %entry.__seqprop_assert.exit_crit_edge
  %37 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %38, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !351
  %dep_map.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %39 = tail call ptr @llvm.returnaddress(i32 0) #14
  %40 = ptrtoint ptr %39 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %40) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_wake_queue(ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @ixgbevf_run_xdp(ptr nocapture noundef readonly %adapter, ptr noundef %rx_ring, ptr noundef %xdp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %xdp_prog1 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 3
  %0 = ptrtoint ptr %xdp_prog1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %xdp_prog1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.xdp_out_crit_edge, label %if.end

entry.xdp_out_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %xdp_out

if.end:                                           ; preds = %entry
  tail call void @__cant_migrate(ptr noundef nonnull @.str.122, i32 noundef 613) #14
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @bpf_stats_enabled_key, ptr blockaddress(@ixgbevf_run_xdp, %if.then.i.i)) #14
          to label %if.else.i.i [label %if.then.i.i], !srcloc !314

if.then.i.i:                                      ; preds = %if.end
  %call3.i.i = tail call i64 @sched_clock() #14
  %insnsi.i.i = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 1
  %bpf_func.i.i = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %bpf_func.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bpf_func.i.i, align 4
  %call4.i.i = tail call i32 @bpf_dispatcher_xdp_func(ptr noundef %xdp, ptr noundef %insnsi.i.i, ptr noundef %3) #14
  %stats9.i.i = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %stats9.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %stats9.i.i, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %12, %6
  %13 = inttoptr i32 %add.i.i to ptr
  %syncp.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %13, i32 0, i32 3
  %14 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #14, !srcloc !333
  %and.i.i.i.i = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.then.i.i.do.body12.i.i.i_crit_edge

if.then.i.i.do.body12.i.i.i_crit_edge:            ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body12.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @trace_hardirqs_off() #14
  br label %do.body12.i.i.i

do.body12.i.i.i:                                  ; preds = %if.then.i.i.i, %if.then.i.i.do.body12.i.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %15 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i.i.i.i = icmp eq i32 %15, 0
  br i1 %tobool.not.i.i.i.i, label %do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %land.lhs.true.i.i.i.i

do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %do.body12.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.lhs.true.i.i.i.i:                            ; preds = %do.body12.i.i.i
  %16 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i.i.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %19, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !347
  %20 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %25, ptrtoint (ptr @lockdep_recursion to i32)
  %26 = inttoptr i32 %add.i.i.i.i to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !348
  %29 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i7.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i7.i.i.i.i to ptr
  %preempt_count.i.i8.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i8.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i8.i.i.i.i, align 4
  %sub.i.i.i.i.i = add i32 %32, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i8.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool20.not.i.i.i.i = icmp eq i32 %28, 0
  br i1 %tobool20.not.i.i.i.i, label %land.rhs.i.i.i.i, label %land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge

land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs.i.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i
  %33 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp.i.i.i.i = icmp eq i32 %36, 0
  br i1 %cmp.i.i.i.i, label %land.rhs22.i.i.i.i, label %land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge

land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs22.i.i.i.i:                               ; preds = %land.rhs.i.i.i.i
  %37 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i9.i.i.i.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i9.i.i.i.i to ptr
  %preempt_count.i.i10.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i10.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i10.i.i.i.i, align 4
  %add.i11.i.i.i.i = add i32 %40, 1
  store volatile i32 %add.i11.i.i.i.i, ptr %preempt_count.i.i10.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !349
  %41 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx46.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx46.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx46.i.i.i.i, align 4
  %add47.i.i.i.i = add i32 %44, ptrtoint (ptr @hardirqs_enabled to i32)
  %45 = inttoptr i32 %add47.i.i.i.i to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !350
  %48 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i12.i.i.i.i = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i12.i.i.i.i to ptr
  %preempt_count.i.i13.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i13.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i13.i.i.i.i, align 4
  %sub.i14.i.i.i.i = add i32 %51, -1
  store volatile i32 %sub.i14.i.i.i.i, ptr %preempt_count.i.i13.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool54.not.i.i.i.i = icmp eq i32 %47, 0
  br i1 %tobool54.not.i.i.i.i, label %land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %land.rhs58.i.i.i.i

land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs22.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs58.i.i.i.i:                               ; preds = %land.rhs22.i.i.i.i
  %.b1.i.i.i.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i.i.i.i, label %land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %if.then.i.i.i.i, !prof !322

land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs58.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %u64_stats_update_begin_irqsave.exit.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs58.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.121, i32 noundef 271, i32 noundef 9, ptr noundef null) #14
  br label %u64_stats_update_begin_irqsave.exit.i.i

u64_stats_update_begin_irqsave.exit.i.i:          ; preds = %if.then.i.i.i.i, %land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge
  %52 = ptrtoint ptr %syncp.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %syncp.i.i, align 4
  %inc.i.i.i.i.i.i = add i32 %53, 1
  store i32 %inc.i.i.i.i.i.i, ptr %syncp.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !351
  %dep_map.i.i.i.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %13, i32 0, i32 3, i32 0, i32 1
  %54 = tail call ptr @llvm.returnaddress(i32 0) #14
  %55 = ptrtoint ptr %54 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %55) #14
  %56 = ptrtoint ptr %13 to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %13, align 8
  %inc.i.i.i = add i64 %57, 1
  store i64 %inc.i.i.i, ptr %13, align 8
  %nsecs.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %13, i32 0, i32 1
  %call13.i.i = tail call i64 @sched_clock() #14
  %sub.i.i = sub i64 %call13.i.i, %call3.i.i
  %conv.i.i.i = and i64 %sub.i.i, 4294967295
  %58 = ptrtoint ptr %nsecs.i.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %nsecs.i.i, align 8
  %add.i.i.i = add i64 %conv.i.i.i, %59
  store i64 %add.i.i.i, ptr %nsecs.i.i, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i.i.i.i, i32 noundef %55) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !342
  %60 = ptrtoint ptr %syncp.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %syncp.i.i, align 4
  %inc.i.i.i.i.i = add i32 %61, 1
  store i32 %inc.i.i.i.i.i, ptr %syncp.i.i, align 4
  br i1 %tobool.not.i.i.i, label %if.then8.i.i.i, label %u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge

u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge: ; preds = %u64_stats_update_begin_irqsave.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10.i.i.i

if.then8.i.i.i:                                   ; preds = %u64_stats_update_begin_irqsave.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @trace_hardirqs_on() #14
  br label %do.body10.i.i.i

do.body10.i.i.i:                                  ; preds = %if.then8.i.i.i, %u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge
  %62 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #14, !srcloc !334
  %and.i.i.i3.i.i = and i32 %62, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i3.i.i)
  %tobool18.not.i.i.i = icmp eq i32 %and.i.i.i3.i.i, 0
  br i1 %tobool18.not.i.i.i, label %if.then22.i.i.i, label %do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge, !prof !308

do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge: ; preds = %do.body10.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %u64_stats_update_end_irqrestore.exit.i.i

if.then22.i.i.i:                                  ; preds = %do.body10.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @warn_bogus_irq_restore() #14
  br label %u64_stats_update_end_irqrestore.exit.i.i

u64_stats_update_end_irqrestore.exit.i.i:         ; preds = %if.then22.i.i.i, %do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %14) #14, !srcloc !335
  br label %__bpf_prog_run.exit.i

if.else.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %insnsi15.i.i = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 1
  %bpf_func17.i.i = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 9
  %63 = ptrtoint ptr %bpf_func17.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %bpf_func17.i.i, align 4
  %call18.i.i = tail call i32 @bpf_dispatcher_xdp_func(ptr noundef %xdp, ptr noundef %insnsi15.i.i, ptr noundef %64) #14
  br label %__bpf_prog_run.exit.i

__bpf_prog_run.exit.i:                            ; preds = %if.else.i.i, %u64_stats_update_end_irqrestore.exit.i.i
  %ret.0.i.i = phi i32 [ %call4.i.i, %u64_stats_update_end_irqrestore.exit.i.i ], [ %call18.i.i, %if.else.i.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @bpf_master_redirect_enabled_key, ptr blockaddress(@ixgbevf_run_xdp, %l_yes.i.i)) #14
          to label %arch_static_branch.exit.i [label %l_yes.i.i], !srcloc !314

l_yes.i.i:                                        ; preds = %__bpf_prog_run.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %arch_static_branch.exit.i

arch_static_branch.exit.i:                        ; preds = %l_yes.i.i, %__bpf_prog_run.exit.i
  %retval.0.i.i = phi i1 [ true, %l_yes.i.i ], [ false, %__bpf_prog_run.exit.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %ret.0.i.i)
  %cmp.i = icmp eq i32 %ret.0.i.i, 3
  %or.cond.i = select i1 %retval.0.i.i, i1 %cmp.i, i1 false
  br i1 %or.cond.i, label %land.lhs.true.i, label %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge

arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge: ; preds = %arch_static_branch.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %bpf_prog_run_xdp.exit

land.lhs.true.i:                                  ; preds = %arch_static_branch.exit.i
  %rxq.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 4
  %65 = ptrtoint ptr %rxq.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %rxq.i, align 4
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %66, align 128
  %flags.i.i = getelementptr inbounds %struct.net_device, ptr %68, i32 0, i32 14
  %69 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %flags.i.i, align 8
  %and.i.i = and i32 %70, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.sw.bb_crit_edge, label %netif_is_bond_slave.exit.i

land.lhs.true.i.sw.bb_crit_edge:                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

netif_is_bond_slave.exit.i:                       ; preds = %land.lhs.true.i
  %priv_flags.i.i = getelementptr inbounds %struct.net_device, ptr %68, i32 0, i32 15
  %71 = ptrtoint ptr %priv_flags.i.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %priv_flags.i.i, align 16
  %and1.i.i = and i64 %72, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool2.i.not.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool2.i.not.i, label %netif_is_bond_slave.exit.i.sw.bb_crit_edge, label %if.then5.i

netif_is_bond_slave.exit.i.sw.bb_crit_edge:       ; preds = %netif_is_bond_slave.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

if.then5.i:                                       ; preds = %netif_is_bond_slave.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call6.i = tail call i32 @xdp_master_redirect(ptr noundef %xdp) #14
  br label %bpf_prog_run_xdp.exit

bpf_prog_run_xdp.exit:                            ; preds = %if.then5.i, %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge
  %act.0.i = phi i32 [ %call6.i, %if.then5.i ], [ %ret.0.i.i, %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge ]
  %73 = zext i32 %act.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %73, ptr @__sancov_gen_cov_switch_values.139)
  switch i32 %act.0.i, label %sw.default [
    i32 2, label %bpf_prog_run_xdp.exit.xdp_out_crit_edge
    i32 3, label %bpf_prog_run_xdp.exit.sw.bb_crit_edge
    i32 0, label %bpf_prog_run_xdp.exit.out_failure_crit_edge
    i32 1, label %bpf_prog_run_xdp.exit.sw.bb8_crit_edge
  ]

bpf_prog_run_xdp.exit.sw.bb8_crit_edge:           ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb8

bpf_prog_run_xdp.exit.out_failure_crit_edge:      ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_failure

bpf_prog_run_xdp.exit.sw.bb_crit_edge:            ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

bpf_prog_run_xdp.exit.xdp_out_crit_edge:          ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %xdp_out

sw.bb:                                            ; preds = %bpf_prog_run_xdp.exit.sw.bb_crit_edge, %netif_is_bond_slave.exit.i.sw.bb_crit_edge, %land.lhs.true.i.sw.bb_crit_edge
  %queue_index = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 22
  %74 = ptrtoint ptr %queue_index to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %queue_index, align 4
  %arrayidx = getelementptr %struct.ixgbevf_adapter, ptr %adapter, i32 0, i32 7, i32 %75
  %76 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %arrayidx, align 4
  %data_end.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 1
  %78 = ptrtoint ptr %data_end.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %data_end.i, align 4
  %80 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %xdp, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %79 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %81 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %next_to_clean.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 10
  %82 = ptrtoint ptr %next_to_clean.i.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %next_to_clean.i.i, align 4
  %next_to_use.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 9
  %84 = ptrtoint ptr %next_to_use.i.i to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %next_to_use.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %83, i16 %85)
  %cmp.i.i = icmp ugt i16 %83, %85
  br i1 %cmp.i.i, label %sw.bb.ixgbevf_desc_unused.exit.i_crit_edge, label %cond.false.i.i

sw.bb.ixgbevf_desc_unused.exit.i_crit_edge:       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_desc_unused.exit.i

cond.false.i.i:                                   ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %count.i.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 8
  %86 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load2_noabort(i32 %86)
  %87 = load i16, ptr %count.i.i, align 32
  br label %ixgbevf_desc_unused.exit.i

ixgbevf_desc_unused.exit.i:                       ; preds = %cond.false.i.i, %sw.bb.ixgbevf_desc_unused.exit.i_crit_edge
  %cond.i.i = phi i16 [ %87, %cond.false.i.i ], [ 0, %sw.bb.ixgbevf_desc_unused.exit.i_crit_edge ]
  %88 = xor i16 %85, -1
  %add.i.i20 = add i16 %83, %88
  %sub6.i.i = sub i16 0, %cond.i.i
  call void @__sanitizer_cov_trace_cmp2(i16 %add.i.i20, i16 %sub6.i.i)
  %tobool.not.i = icmp eq i16 %add.i.i20, %sub6.i.i
  br i1 %tobool.not.i, label %ixgbevf_desc_unused.exit.i.out_failure_crit_edge, label %if.end.i, !prof !308

ixgbevf_desc_unused.exit.i.out_failure_crit_edge: ; preds = %ixgbevf_desc_unused.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_failure

if.end.i:                                         ; preds = %ixgbevf_desc_unused.exit.i
  %dev.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 4
  %89 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %dev.i, align 16
  %call.i.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %81) #14
  br i1 %call.i.i, label %land.rhs.i.i, label %dma_map_single_attrs.exit.i

land.rhs.i.i:                                     ; preds = %if.end.i
  %.b1.i.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs.i.i.dma_map_single_attrs.exit.thread.i_crit_edge, label %if.then.i.i22, !prof !322

land.rhs.i.i.dma_map_single_attrs.exit.thread.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dma_map_single_attrs.exit.thread.i

if.then.i.i22:                                    ; preds = %land.rhs.i.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i.i = tail call ptr @dev_driver_string(ptr noundef %90) #14
  %init_name.i.i.i = getelementptr inbounds %struct.device, ptr %90, i32 0, i32 3
  %91 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i21 = icmp eq ptr %92, null
  br i1 %tobool.not.i.i.i21, label %if.end.i.i.i, label %if.then.i.i22.dev_name.exit.i.i_crit_edge

if.then.i.i22.dev_name.exit.i.i_crit_edge:        ; preds = %if.then.i.i22
  call void @__sanitizer_cov_trace_pc() #16
  br label %dev_name.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i22
  call void @__sanitizer_cov_trace_pc() #16
  %93 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %90, align 4
  br label %dev_name.exit.i.i

dev_name.exit.i.i:                                ; preds = %if.end.i.i.i, %if.then.i.i22.dev_name.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %94, %if.end.i.i.i ], [ %92, %if.then.i.i22.dev_name.exit.i.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.77, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.78, ptr noundef %call16.i.i, ptr noundef %retval.0.i.i.i) #14
  br label %dma_map_single_attrs.exit.thread.i

dma_map_single_attrs.exit.thread.i:               ; preds = %dev_name.exit.i.i, %land.rhs.i.i.dma_map_single_attrs.exit.thread.i_crit_edge
  %95 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %dev.i, align 16
  tail call void @debug_dma_mapping_error(ptr noundef %96, i32 noundef -1) #14
  br label %out_failure

dma_map_single_attrs.exit.i:                      ; preds = %if.end.i
  tail call void @debug_dma_map_single(ptr noundef %90, ptr noundef %81, i32 noundef %sub.ptr.sub.i) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %97 = load ptr, ptr @mem_map, align 4
  %sub.i.i23 = add i32 %sub.ptr.rhs.cast.i, 1073741824
  %shr.i75.i = lshr i32 %sub.i.i23, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %97, i32 %shr.i75.i
  %and.i.i24 = and i32 %sub.ptr.rhs.cast.i, 4095
  %call41.i.i = tail call i32 @dma_map_page_attrs(ptr noundef %90, ptr noundef %add.ptr.i.i, i32 noundef %and.i.i24, i32 noundef %sub.ptr.sub.i, i32 noundef 1, i32 noundef 0) #14
  %98 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %dev.i, align 16
  tail call void @debug_dma_mapping_error(ptr noundef %99, i32 noundef %call41.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call41.i.i)
  %cmp.i76.i = icmp eq i32 %call41.i.i, -1
  br i1 %cmp.i76.i, label %dma_map_single_attrs.exit.i.out_failure_crit_edge, label %if.end10.i

dma_map_single_attrs.exit.i.out_failure_crit_edge: ; preds = %dma_map_single_attrs.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_failure

if.end10.i:                                       ; preds = %dma_map_single_attrs.exit.i
  %100 = ptrtoint ptr %next_to_use.i.i to i32
  call void @__asan_load2_noabort(i32 %100)
  %101 = load i16, ptr %next_to_use.i.i, align 2
  %102 = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 12
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %102, align 8
  %idxprom.i = zext i16 %101 to i32
  %arrayidx.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %104, i32 %idxprom.i
  %len11.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %104, i32 %idxprom.i, i32 7
  %105 = ptrtoint ptr %len11.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %sub.ptr.sub.i, ptr %len11.i, align 4
  %dma12.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %104, i32 %idxprom.i, i32 6
  %106 = ptrtoint ptr %dma12.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %call41.i.i, ptr %dma12.i, align 4
  %107 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %xdp, align 4
  %109 = getelementptr %struct.ixgbevf_tx_buffer, ptr %104, i32 %idxprom.i, i32 2
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr %108, ptr %109, align 4
  %bytecount.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %104, i32 %idxprom.i, i32 3
  %111 = ptrtoint ptr %bytecount.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 %sub.ptr.sub.i, ptr %bytecount.i, align 4
  %gso_segs.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %104, i32 %idxprom.i, i32 4
  %112 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_store2_noabort(i32 %112)
  store i16 1, ptr %gso_segs.i, align 4
  %protocol.i = getelementptr %struct.ixgbevf_tx_buffer, ptr %104, i32 %idxprom.i, i32 5
  %113 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %113)
  store i16 0, ptr %protocol.i, align 2
  %state.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 13
  %114 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %state.i, align 4
  %116 = and i32 %115, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %116)
  %tobool15.not.i = icmp eq i32 %116, 0
  br i1 %tobool15.not.i, label %if.then16.i, label %if.end10.i.ixgbevf_xmit_xdp_ring.exit_crit_edge

if.end10.i.ixgbevf_xmit_xdp_ring.exit_crit_edge:  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ixgbevf_xmit_xdp_ring.exit

if.then16.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_set_bit(i32 noundef 5, ptr noundef %state.i) #14
  %desc.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 5
  %117 = ptrtoint ptr %desc.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %desc.i, align 4
  %119 = ptrtoint ptr %118 to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 1835008, ptr %118, align 4
  %fceof_saidx.i = getelementptr inbounds %struct.ixgbe_adv_tx_context_desc, ptr %118, i32 0, i32 1
  %120 = ptrtoint ptr %fceof_saidx.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 0, ptr %fceof_saidx.i, align 4
  %type_tucmd_mlhl.i = getelementptr inbounds %struct.ixgbe_adv_tx_context_desc, ptr %118, i32 0, i32 2
  %121 = ptrtoint ptr %type_tucmd_mlhl.i to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 8224, ptr %type_tucmd_mlhl.i, align 4
  %mss_l4len_idx.i = getelementptr inbounds %struct.ixgbe_adv_tx_context_desc, ptr %118, i32 0, i32 3
  %122 = ptrtoint ptr %mss_l4len_idx.i to i32
  call void @__asan_store4_noabort(i32 %122)
  store i32 0, ptr %mss_l4len_idx.i, align 4
  br label %ixgbevf_xmit_xdp_ring.exit

ixgbevf_xmit_xdp_ring.exit:                       ; preds = %if.then16.i, %if.end10.i.ixgbevf_xmit_xdp_ring.exit_crit_edge
  %i.0.i = phi i16 [ %101, %if.end10.i.ixgbevf_xmit_xdp_ring.exit_crit_edge ], [ 1, %if.then16.i ]
  %or20.i = or i32 %sub.ptr.sub.i, 724566016
  %desc21.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 5
  %123 = ptrtoint ptr %desc21.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %desc21.i, align 4
  %idxprom22.i = zext i16 %i.0.i to i32
  %arrayidx23.i = getelementptr %union.ixgbe_adv_tx_desc, ptr %124, i32 %idxprom22.i
  %conv.i = zext i32 %call41.i.i to i64
  %125 = tail call i64 @llvm.bswap.i64(i64 %conv.i) #14
  %126 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_store8_noabort(i32 %126)
  store i64 %125, ptr %arrayidx23.i, align 8
  %127 = tail call i32 @llvm.bswap.i32(i32 %or20.i) #14
  %cmd_type_len.i = getelementptr inbounds %struct.anon.196, ptr %arrayidx23.i, i32 0, i32 1
  %128 = ptrtoint ptr %cmd_type_len.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %127, ptr %cmd_type_len.i, align 8
  %shl.i = shl i32 %sub.ptr.sub.i, 14
  %or24.i = or i32 %shl.i, 128
  %129 = tail call i32 @llvm.bswap.i32(i32 %or24.i) #14
  %olinfo_status.i = getelementptr inbounds %struct.anon.196, ptr %arrayidx23.i, i32 0, i32 2
  %130 = ptrtoint ptr %olinfo_status.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 %129, ptr %olinfo_status.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  %inc.i = add i16 %i.0.i, 1
  %count.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %77, i32 0, i32 8
  %131 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %131)
  %132 = load i16, ptr %count.i, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc.i, i16 %132)
  %cmp.i25 = icmp eq i16 %inc.i, %132
  %spec.store.select.i = select i1 %cmp.i25, i16 0, i16 %inc.i
  %133 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store ptr %arrayidx23.i, ptr %arrayidx.i, align 4
  %134 = ptrtoint ptr %next_to_use.i.i to i32
  call void @__asan_store2_noabort(i32 %134)
  store i16 %spec.store.select.i, ptr %next_to_use.i.i, align 2
  br label %xdp_out

sw.default:                                       ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #16
  %netdev = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 2
  %135 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %netdev, align 8
  tail call void @bpf_warn_invalid_xdp_action(ptr noundef %136, ptr noundef nonnull %1, i32 noundef %act.0.i) #14
  br label %out_failure

out_failure:                                      ; preds = %sw.default, %dma_map_single_attrs.exit.i.out_failure_crit_edge, %dma_map_single_attrs.exit.thread.i, %ixgbevf_desc_unused.exit.i.out_failure_crit_edge, %bpf_prog_run_xdp.exit.out_failure_crit_edge
  %act.0.i27 = phi i32 [ %act.0.i, %sw.default ], [ %act.0.i, %bpf_prog_run_xdp.exit.out_failure_crit_edge ], [ 3, %ixgbevf_desc_unused.exit.i.out_failure_crit_edge ], [ 3, %dma_map_single_attrs.exit.i.out_failure_crit_edge ], [ 3, %dma_map_single_attrs.exit.thread.i ]
  %netdev7 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 2
  %137 = ptrtoint ptr %netdev7 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %netdev7, align 8
  tail call fastcc void @trace_xdp_exception(ptr noundef %138, ptr noundef nonnull %1, i32 noundef %act.0.i27)
  br label %sw.bb8

sw.bb8:                                           ; preds = %out_failure, %bpf_prog_run_xdp.exit.sw.bb8_crit_edge
  br label %xdp_out

xdp_out:                                          ; preds = %sw.bb8, %ixgbevf_xmit_xdp_ring.exit, %bpf_prog_run_xdp.exit.xdp_out_crit_edge, %entry.xdp_out_crit_edge
  %result.0.neg = phi ptr [ inttoptr (i32 -1 to ptr), %sw.bb8 ], [ inttoptr (i32 -2 to ptr), %ixgbevf_xmit_xdp_ring.exit ], [ null, %bpf_prog_run_xdp.exit.xdp_out_crit_edge ], [ null, %entry.xdp_out_crit_edge ]
  ret ptr %result.0.neg
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ixgbevf_put_rx_buffer(ptr noundef %rx_ring, ptr nocapture noundef %rx_buffer, ptr noundef readnone %skb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pagecnt_bias1.i = getelementptr inbounds %struct.ixgbevf_rx_buffer, ptr %rx_buffer, i32 0, i32 3
  %0 = ptrtoint ptr %pagecnt_bias1.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %pagecnt_bias1.i, align 2
  %page2.i = getelementptr inbounds %struct.ixgbevf_rx_buffer, ptr %rx_buffer, i32 0, i32 1
  %2 = ptrtoint ptr %page2.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %page2.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %cmp.i.not.i.i.i = icmp eq i32 %5, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %dev_page_is_reusable.exit.i, !prof !308

if.then.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %3, ptr noundef nonnull @.str.126) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #14, !srcloc !353
  unreachable

dev_page_is_reusable.exit.i:                      ; preds = %entry
  %6 = getelementptr inbounds %struct.page, ptr %3, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %9 = ptrtoint ptr %8 to i32
  %and.i.i.i = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i, label %dev_page_is_reusable.exit.i.if.else_crit_edge

dev_page_is_reusable.exit.i.if.else_crit_edge:    ; preds = %dev_page_is_reusable.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.end.i:                                         ; preds = %dev_page_is_reusable.exit.i
  %conv.i = zext i16 %1 to i32
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %3, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #14
  %10 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %_refcount.i.i, align 4
  %sub.i = sub i32 %11, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i)
  %cmp.i = icmp ugt i32 %sub.i, 1
  br i1 %cmp.i, label %if.end.i.if.else_crit_edge, label %if.end7.i, !prof !308

if.end.i.if.else_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.end7.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool8.not.i = icmp eq i16 %1, 0
  br i1 %tobool8.not.i, label %if.then17.i, label %if.end7.i.if.then_crit_edge, !prof !308

if.end7.i.if.then_crit_edge:                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then17.i:                                      ; preds = %if.end7.i
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #14
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 65535, ptr elementtype(i32) %_refcount.i.i) #14, !srcloc !354
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@ixgbevf_put_rx_buffer, %if.then.i)) #14
          to label %page_ref_add.exit [label %if.then.i], !srcloc !314

if.then.i:                                        ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__page_ref_mod(ptr noundef %3, i32 noundef 65535) #14
  br label %page_ref_add.exit

page_ref_add.exit:                                ; preds = %if.then.i, %if.then17.i
  %13 = ptrtoint ptr %pagecnt_bias1.i to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 -1, ptr %pagecnt_bias1.i, align 2
  br label %if.then

if.then:                                          ; preds = %page_ref_add.exit, %if.end7.i.if.then_crit_edge
  %next_to_alloc.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 11
  %14 = ptrtoint ptr %next_to_alloc.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %next_to_alloc.i, align 2
  %16 = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 12
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 8
  %inc.i = add i16 %15, 1
  %count.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 8
  %19 = ptrtoint ptr %count.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %count.i, align 32
  call void @__sanitizer_cov_trace_cmp2(i16 %inc.i, i16 %20)
  %cmp.i13 = icmp ult i16 %inc.i, %20
  %spec.select.i = select i1 %cmp.i13, i16 %inc.i, i16 0
  %idxprom.i = zext i16 %15 to i32
  %arrayidx.i = getelementptr %struct.ixgbevf_rx_buffer, ptr %18, i32 %idxprom.i
  %21 = ptrtoint ptr %next_to_alloc.i to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %spec.select.i, ptr %next_to_alloc.i, align 2
  %22 = ptrtoint ptr %page2.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %page2.i, align 4
  %page6.i = getelementptr %struct.ixgbevf_rx_buffer, ptr %18, i32 %idxprom.i, i32 1
  %24 = ptrtoint ptr %page6.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %page6.i, align 4
  %25 = ptrtoint ptr %rx_buffer to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %rx_buffer, align 4
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx.i, align 4
  %page_offset.i = getelementptr inbounds %struct.ixgbevf_rx_buffer, ptr %rx_buffer, i32 0, i32 2
  %28 = ptrtoint ptr %page_offset.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %page_offset.i, align 4
  %page_offset8.i = getelementptr %struct.ixgbevf_rx_buffer, ptr %18, i32 %idxprom.i, i32 2
  %30 = ptrtoint ptr %page_offset8.i to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %29, ptr %page_offset8.i, align 4
  %31 = ptrtoint ptr %pagecnt_bias1.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %pagecnt_bias1.i, align 2
  %pagecnt_bias9.i = getelementptr %struct.ixgbevf_rx_buffer, ptr %18, i32 %idxprom.i, i32 3
  %33 = ptrtoint ptr %pagecnt_bias9.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %32, ptr %pagecnt_bias9.i, align 2
  br label %if.end4

if.else:                                          ; preds = %if.end.i.if.else_crit_edge, %dev_page_is_reusable.exit.i.if.else_crit_edge
  %cmp.i14 = icmp ugt ptr %skb, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i14, label %if.then2, label %if.else.if.end_crit_edge

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then2:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 4
  %34 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dev, align 16
  %36 = ptrtoint ptr %rx_buffer to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rx_buffer, align 4
  %state.i = getelementptr inbounds %struct.ixgbevf_ring, ptr %rx_ring, i32 0, i32 13
  %38 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %39, 1
  %shl = shl nuw nsw i32 4096, %and1.i.i
  tail call void @dma_unmap_page_attrs(ptr noundef %35, i32 noundef %37, i32 noundef %shl, i32 noundef 2, i32 noundef 34) #14
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.else.if.end_crit_edge
  %40 = ptrtoint ptr %page2.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %page2.i, align 4
  %42 = ptrtoint ptr %pagecnt_bias1.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %pagecnt_bias1.i, align 2
  %conv = zext i16 %43 to i32
  tail call void @__page_frag_cache_drain(ptr noundef %41, i32 noundef %conv) #14
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %44 = ptrtoint ptr %page2.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %page2.i, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_warn_invalid_xdp_action(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xdp_exception(ptr noundef %dev, ptr noundef %xdp, i32 noundef %act) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 1), ptr blockaddress(@trace_xdp_exception, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !314

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !322

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.125, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !355
  %call42 = tail call i32 @__traceiter_xdp_exception(ptr noundef null, ptr noundef %dev, ptr noundef %xdp, i32 noundef %act) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !356
  %13 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !322

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.125, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !357
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xdp_exception.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_xdp_exception.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.123, i32 noundef 51, ptr noundef nonnull @.str.124) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !358
  %31 = tail call i32 @llvm.read_register.i32(metadata !298) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_dispatcher_xdp_func(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_master_redirect(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__cant_migrate(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xdp_exception(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_add_rx_frag(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @napi_build_skb(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_get_headlen(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__napi_alloc_skb(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_irq(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ixgbevf_ipsec_rx(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @napi_gro_receive(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__netif_napi_del(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_net() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_msix(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_work_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ixgbevf_stop_ipsec_offload(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_suspend(ptr nocapture noundef readonly %dev_d) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev_d, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  tail call void @rtnl_lock() #14
  tail call void @netif_device_detach(ptr noundef %1) #14
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_close_suspend(ptr noundef %add.ptr.i)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call fastcc void @ixgbevf_clear_interrupt_scheme(ptr noundef %add.ptr.i)
  tail call void @rtnl_unlock() #14
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_detach(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_io_error_detected(ptr noundef %pdev, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %state2 = getelementptr i8, ptr %1, i32 3432
  %2 = ptrtoint ptr %state2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state2, align 4
  %4 = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @rtnl_lock() #14
  tail call void @netif_device_detach(ptr noundef %1) #14
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %5 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @ixgbevf_close_suspend(ptr noundef %add.ptr.i)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %state)
  %cmp = icmp eq i32 %state, 3
  br i1 %cmp, label %if.end6.cleanup.sink.split_crit_edge, label %if.end8

if.end6.cleanup.sink.split_crit_edge:             ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end8:                                          ; preds = %if.end6
  %call10 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %state2) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.then12, label %if.end8.cleanup.sink.split_crit_edge

if.end8.cleanup.sink.split_crit_edge:             ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.then12:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then12, %if.end8.cleanup.sink.split_crit_edge, %if.end6.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ 4, %if.end6.cleanup.sink.split_crit_edge ], [ 3, %if.then12 ], [ 3, %if.end8.cleanup.sink.split_crit_edge ]
  tail call void @rtnl_unlock() #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 4, %entry.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_io_slot_reset(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %call2 = tail call i32 @pci_enable_device_mem(ptr noundef %pdev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.129) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %io_addr = getelementptr i8, ptr %1, i32 3460
  %2 = ptrtoint ptr %io_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %io_addr, align 4
  %hw_addr = getelementptr i8, ptr %1, i32 3052
  %4 = ptrtoint ptr %hw_addr to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %hw_addr, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !359
  %state = getelementptr i8, ptr %1, i32 3432
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %state) #14
  tail call void @pci_set_master(ptr noundef %pdev) #14
  tail call void @ixgbevf_reset(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end
  %retval.0 = phi i32 [ 4, %do.end ], [ 5, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ixgbevf_io_resume(ptr nocapture noundef readonly %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  tail call void @rtnl_lock() #14
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call2 = tail call i32 @ixgbevf_open(ptr noundef %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @netif_device_attach(ptr noundef %1) #14
  tail call void @rtnl_unlock() #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device_mem(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_attach(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @ixgbevf_resume(ptr noundef %dev_d) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev_d, i32 -136
  %driver_data.i.i = getelementptr i8, ptr %dev_d, i32 164
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %io_addr = getelementptr i8, ptr %1, i32 3460
  %2 = ptrtoint ptr %io_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %io_addr, align 4
  %hw_addr = getelementptr i8, ptr %1, i32 3052
  %4 = ptrtoint ptr %hw_addr to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %hw_addr, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !360
  %state = getelementptr i8, ptr %1, i32 3432
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %state) #14
  tail call void @pci_set_master(ptr noundef %add.ptr) #14
  tail call void @ixgbevf_reset(ptr noundef %add.ptr.i)
  tail call void @rtnl_lock() #14
  %call5 = tail call fastcc i32 @ixgbevf_init_interrupt_scheme(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end.thread29

if.end.thread29:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @rtnl_unlock() #14
  br label %cleanup

land.lhs.true:                                    ; preds = %entry
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %5 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end.thread, label %if.end

if.end.thread:                                    ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @rtnl_unlock() #14
  br label %if.end10

if.end:                                           ; preds = %land.lhs.true
  %call7 = tail call i32 @ixgbevf_open(ptr noundef %1)
  tail call void @rtnl_unlock() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end.if.end10_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.end10:                                         ; preds = %if.end.if.end10_crit_edge, %if.end.thread
  tail call void @netif_device_attach(ptr noundef %1) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.end.cleanup_crit_edge, %if.end.thread29
  %err.027 = phi i32 [ %call7, %if.end.cleanup_crit_edge ], [ 0, %if.end10 ], [ %call5, %if.end.thread29 ]
  ret i32 %err.027
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umax.i8(i8, i8) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #2

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 149)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 149)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nounwind readonly }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #12 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #13 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { cold nounwind }
attributes #18 = { nounwind allocsize(0) }
attributes #19 = { nounwind allocsize(2) }
attributes #20 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !9, !11, !12, !14, !16, !17, !18, !19, !20, !22, !23, !25, !26, !27, !29, !30, !32, !33, !34, !35, !36, !37, !39, !40, !41, !42, !44, !46, !48, !49, !51, !53, !54, !55, !56, !58, !59, !60, !62, !63, !64, !65, !67, !68, !69, !70, !72, !74, !75, !76, !77, !79, !81, !82, !83, !85, !86, !88, !89, !90, !92, !93, !94, !96, !98, !100, !102, !103, !104, !106, !107, !109, !110, !111, !112, !114, !115, !117, !119, !120, !121, !123, !125, !127, !129, !131, !132, !133, !134, !136, !137, !138, !140, !141, !142, !144, !145, !147, !148, !150, !152, !153, !154, !155, !157, !158, !159, !161, !162, !163, !165, !166, !167, !169, !170, !171, !173, !175, !177, !179, !181, !183, !185, !186, !187, !188, !190, !191, !192, !194, !195, !196, !197, !198, !200, !201, !203, !204, !205, !207, !208, !210, !211, !213, !214, !215, !216, !218, !219, !220, !222, !223, !224, !226, !227, !228, !230, !231, !232, !234, !235, !236, !237, !238, !239, !240, !241, !243, !244, !245, !246, !248, !249, !250, !252, !253, !255, !256, !257, !258, !260, !261, !262, !263, !265, !266, !267, !268, !269, !270, !272, !273, !275, !277, !278, !279, !280, !282, !283, !285, !287, !288, !289, !291, !293, !294, !295, !296}
!llvm.named.register.sp = !{!298}
!llvm.module.flags = !{!299, !300, !301, !302, !303, !304, !305, !306}
!llvm.ident = !{!307}

!0 = !{ptr @ixgbevf_driver_name, !1, !"ixgbevf_driver_name", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 37, i32 12}
!2 = !{ptr @__UNIQUE_ID_author634, !3, !"__UNIQUE_ID_author634", i1 false, i1 false}
!3 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 79, i32 1}
!4 = !{ptr @__UNIQUE_ID_description635, !5, !"__UNIQUE_ID_description635", i1 false, i1 false}
!5 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 80, i32 1}
!6 = !{ptr @__UNIQUE_ID_file636, !7, !"__UNIQUE_ID_file636", i1 false, i1 false}
!7 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 81, i32 1}
!8 = !{ptr @__UNIQUE_ID_license637, !7, !"__UNIQUE_ID_license637", i1 false, i1 false}
!9 = !{ptr @__param_debug, !10, !"__param_debug", i1 false, i1 false}
!10 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 85, i32 1}
!11 = !{ptr @__UNIQUE_ID_debugtype638, !10, !"__UNIQUE_ID_debugtype638", i1 false, i1 false}
!12 = !{ptr @__UNIQUE_ID_debug639, !13, !"__UNIQUE_ID_debug639", i1 false, i1 false}
!13 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 86, i32 1}
!14 = !{ptr @.str, !15, !"<string literal>", i1 false, i1 false}
!15 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 2544, i32 3}
!16 = !{ptr @.str.1, !15, !"<string literal>", i1 false, i1 false}
!17 = !{ptr @.str.2, !15, !"<string literal>", i1 false, i1 false}
!18 = !{ptr @.str.3, !15, !"<string literal>", i1 false, i1 false}
!19 = !{ptr @ixgbevf_reset.__UNIQUE_ID_ddebug658, !15, !"__UNIQUE_ID_ddebug658", i1 false, i1 false}
!20 = !{ptr @ixgbevf_setup_tx_resources.__key, !21, !"__key", i1 false, i1 false}
!21 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3409, i32 2}
!22 = !{ptr @.str.4, !21, !"<string literal>", i1 false, i1 false}
!23 = !{ptr @.str.5, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3425, i32 2}
!25 = !{ptr @.str.6, !24, !"<string literal>", i1 false, i1 false}
!26 = !{ptr @ixgbevf_setup_tx_resources.__UNIQUE_ID_ddebug669, !24, !"__UNIQUE_ID_ddebug669", i1 false, i1 false}
!27 = !{ptr @ixgbevf_setup_rx_resources.__key, !28, !"__key", i1 false, i1 false}
!28 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3487, i32 2}
!29 = !{ptr @.str.7, !28, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @.str.8, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3510, i32 2}
!32 = !{ptr @.str.9, !31, !"<string literal>", i1 false, i1 false}
!33 = !{ptr @.str.10, !31, !"<string literal>", i1 false, i1 false}
!34 = !{ptr @.str.11, !31, !"<string literal>", i1 false, i1 false}
!35 = !{ptr @ixgbevf_setup_rx_resources._entry, !31, !"_entry", i1 false, i1 false}
!36 = !{ptr @ixgbevf_setup_rx_resources._entry_ptr, !31, !"_entry_ptr", i1 false, i1 false}
!37 = !{ptr @.str.12, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3614, i32 4}
!39 = !{ptr @.str.13, !38, !"<string literal>", i1 false, i1 false}
!40 = !{ptr @ixgbevf_open._entry, !38, !"_entry", i1 false, i1 false}
!41 = !{ptr @ixgbevf_open._entry_ptr, !38, !"_entry_ptr", i1 false, i1 false}
!42 = !{ptr @__initcall__kmod_ixgbevf__675_4882_ixgbevf_init_module6, !43, !"__initcall__kmod_ixgbevf__675_4882_ixgbevf_init_module6", i1 false, i1 false}
!43 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4882, i32 1}
!44 = !{ptr @__exitcall_ixgbevf_exit_module, !45, !"__exitcall_ixgbevf_exit_module", i1 false, i1 false}
!45 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4913, i32 1}
!46 = !{ptr @ixgbevf_wq, !47, !"ixgbevf_wq", i1 false, i1 false}
!47 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 88, i32 33}
!48 = !{ptr @__param_str_debug, !10, !"__param_str_debug", i1 false, i1 false}
!49 = !{ptr @debug, !50, !"debug", i1 false, i1 false}
!50 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 84, i32 12}
!51 = !{ptr @.str.14, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 122, i32 2}
!53 = !{ptr @.str.15, !52, !"<string literal>", i1 false, i1 false}
!54 = !{ptr @ixgbevf_remove_adapter._entry, !52, !"_entry", i1 false, i1 false}
!55 = !{ptr @ixgbevf_remove_adapter._entry_ptr, !52, !"_entry_ptr", i1 false, i1 false}
!56 = !{ptr @.str.16, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1745, i32 3}
!58 = !{ptr @.str.17, !57, !"<string literal>", i1 false, i1 false}
!59 = !{ptr @ixgbevf_configure_tx_ring.__UNIQUE_ID_ddebug653, !57, !"__UNIQUE_ID_ddebug653", i1 false, i1 false}
!60 = !{ptr @.str.18, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 2019, i32 3}
!62 = !{ptr @.str.19, !61, !"<string literal>", i1 false, i1 false}
!63 = !{ptr @ixgbevf_configure_rx._entry, !61, !"_entry", i1 false, i1 false}
!64 = !{ptr @ixgbevf_configure_rx._entry_ptr, !61, !"_entry_ptr", i1 false, i1 false}
!65 = !{ptr @.str.20, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1844, i32 3}
!67 = !{ptr @.str.21, !66, !"<string literal>", i1 false, i1 false}
!68 = !{ptr @ixgbevf_rx_desc_queue_enable._entry, !66, !"_entry", i1 false, i1 false}
!69 = !{ptr @ixgbevf_rx_desc_queue_enable._entry_ptr, !66, !"_entry_ptr", i1 false, i1 false}
!70 = distinct !{null, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!72 = !{ptr @.str.23, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1824, i32 3}
!74 = !{ptr @.str.24, !73, !"<string literal>", i1 false, i1 false}
!75 = !{ptr @ixgbevf_disable_rx_queue._entry, !73, !"_entry", i1 false, i1 false}
!76 = !{ptr @ixgbevf_disable_rx_queue._entry_ptr, !73, !"_entry_ptr", i1 false, i1 false}
!77 = distinct !{null, !78, !"api", i1 false, i1 false}
!78 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 2269, i32 19}
!79 = !{ptr @.str.25, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3447, i32 3}
!81 = !{ptr @.str.26, !80, !"<string literal>", i1 false, i1 false}
!82 = !{ptr @ixgbevf_setup_all_tx_resources.__UNIQUE_ID_ddebug670, !80, !"__UNIQUE_ID_ddebug670", i1 false, i1 false}
!83 = !{ptr @.str.27, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3455, i32 3}
!85 = !{ptr @ixgbevf_setup_all_tx_resources.__UNIQUE_ID_ddebug671, !84, !"__UNIQUE_ID_ddebug671", i1 false, i1 false}
!86 = !{ptr @.str.28, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3532, i32 3}
!88 = !{ptr @.str.29, !87, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @ixgbevf_setup_all_rx_resources.__UNIQUE_ID_ddebug672, !87, !"__UNIQUE_ID_ddebug672", i1 false, i1 false}
!90 = !{ptr @.str.30, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1616, i32 3}
!92 = !{ptr @.str.31, !91, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @ixgbevf_request_irq.__UNIQUE_ID_ddebug652, !91, !"__UNIQUE_ID_ddebug652", i1 false, i1 false}
!94 = !{ptr @.str.32, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1552, i32 6}
!96 = !{ptr @.str.33, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1556, i32 6}
!98 = !{ptr @.str.34, !99, !"<string literal>", i1 false, i1 false}
!99 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1559, i32 6}
!100 = !{ptr @.str.35, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1567, i32 4}
!102 = !{ptr @.str.36, !101, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @ixgbevf_request_msix_irqs.__UNIQUE_ID_ddebug650, !101, !"__UNIQUE_ID_ddebug650", i1 false, i1 false}
!104 = !{ptr @.str.37, !105, !"<string literal>", i1 false, i1 false}
!105 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 1577, i32 3}
!106 = !{ptr @ixgbevf_request_msix_irqs.__UNIQUE_ID_ddebug651, !105, !"__UNIQUE_ID_ddebug651", i1 false, i1 false}
!107 = !{ptr @.str.38, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4871, i32 2}
!109 = !{ptr @.str.39, !108, !"<string literal>", i1 false, i1 false}
!110 = !{ptr @ixgbevf_init_module._entry, !108, !"_entry", i1 false, i1 false}
!111 = !{ptr @ixgbevf_init_module._entry_ptr, !108, !"_entry_ptr", i1 false, i1 false}
!112 = !{ptr @ixgbevf_init_module._entry.40, !113, !"_entry", i1 false, i1 false}
!113 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4872, i32 2}
!114 = !{ptr @ixgbevf_init_module._entry_ptr.41, !113, !"_entry_ptr", i1 false, i1 false}
!115 = !{ptr @.str.42, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4873, i32 15}
!117 = !{ptr @.str.44, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4875, i32 3}
!119 = !{ptr @ixgbevf_init_module._entry.43, !118, !"_entry", i1 false, i1 false}
!120 = !{ptr @ixgbevf_init_module._entry_ptr.45, !118, !"_entry_ptr", i1 false, i1 false}
!121 = !{ptr @ixgbevf_driver_string, !122, !"ixgbevf_driver_string", i1 false, i1 false}
!122 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 38, i32 19}
!123 = !{ptr @ixgbevf_copyright, !124, !"ixgbevf_copyright", i1 false, i1 false}
!124 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 41, i32 13}
!125 = !{ptr @ixgbevf_driver, !126, !"ixgbevf_driver", i1 false, i1 false}
!126 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4850, i32 26}
!127 = !{ptr @ixgbevf_pci_tbl, !128, !"ixgbevf_pci_tbl", i1 false, i1 false}
!128 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 64, i32 35}
!129 = !{ptr @.str.46, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4527, i32 4}
!131 = !{ptr @.str.47, !130, !"<string literal>", i1 false, i1 false}
!132 = !{ptr @ixgbevf_probe._entry, !130, !"_entry", i1 false, i1 false}
!133 = !{ptr @ixgbevf_probe._entry_ptr, !130, !"_entry_ptr", i1 false, i1 false}
!134 = !{ptr @.str.49, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4535, i32 3}
!136 = !{ptr @ixgbevf_probe._entry.48, !135, !"_entry", i1 false, i1 false}
!137 = !{ptr @ixgbevf_probe._entry_ptr.50, !135, !"_entry_ptr", i1 false, i1 false}
!138 = !{ptr @.str.52, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4587, i32 3}
!140 = !{ptr @ixgbevf_probe._entry.51, !139, !"_entry", i1 false, i1 false}
!141 = !{ptr @ixgbevf_probe._entry_ptr.53, !139, !"_entry_ptr", i1 false, i1 false}
!142 = !{ptr @ixgbevf_probe.__key, !143, !"__key", i1 false, i1 false}
!143 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4655, i32 2}
!144 = !{ptr @.str.54, !143, !"<string literal>", i1 false, i1 false}
!145 = !{ptr @ixgbevf_probe.__key.55, !146, !"__key", i1 false, i1 false}
!146 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4657, i32 2}
!147 = !{ptr @.str.56, !146, !"<string literal>", i1 false, i1 false}
!148 = !{ptr @.str.57, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4665, i32 23}
!150 = !{ptr @.str.59, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4678, i32 2}
!152 = !{ptr @.str.60, !151, !"<string literal>", i1 false, i1 false}
!153 = !{ptr @ixgbevf_probe._entry.58, !151, !"_entry", i1 false, i1 false}
!154 = !{ptr @ixgbevf_probe._entry_ptr.61, !151, !"_entry_ptr", i1 false, i1 false}
!155 = !{ptr @.str.63, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4679, i32 2}
!157 = !{ptr @ixgbevf_probe._entry.62, !156, !"_entry", i1 false, i1 false}
!158 = !{ptr @ixgbevf_probe._entry_ptr.64, !156, !"_entry_ptr", i1 false, i1 false}
!159 = !{ptr @.str.66, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4683, i32 3}
!161 = !{ptr @ixgbevf_probe._entry.65, !160, !"_entry", i1 false, i1 false}
!162 = !{ptr @ixgbevf_probe._entry_ptr.67, !160, !"_entry_ptr", i1 false, i1 false}
!163 = !{ptr @.str.69, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4686, i32 3}
!165 = !{ptr @ixgbevf_probe._entry.68, !164, !"_entry", i1 false, i1 false}
!166 = !{ptr @ixgbevf_probe._entry_ptr.70, !164, !"_entry_ptr", i1 false, i1 false}
!167 = !{ptr @.str.72, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4690, i32 3}
!169 = !{ptr @ixgbevf_probe._entry.71, !168, !"_entry", i1 false, i1 false}
!170 = !{ptr @ixgbevf_probe._entry_ptr.73, !168, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @ixgbevf_info_tbl, !172, !"ixgbevf_info_tbl", i1 false, i1 false}
!172 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 44, i32 35}
!173 = !{ptr @ixgbevf_netdev_ops, !174, !"ixgbevf_netdev_ops", i1 false, i1 false}
!174 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4475, i32 36}
!175 = distinct !{null, !176, !"b", i1 false, i1 false}
!176 = !{!"../include/linux/etherdevice.h", i32 86, i32 23}
!177 = distinct !{null, !178, !"m", i1 false, i1 false}
!178 = !{!"../include/linux/etherdevice.h", i32 87, i32 22}
!179 = distinct !{null, !180, !"eth_reserved_addr_base", i1 false, i1 false}
!180 = !{!"../include/linux/etherdevice.h", i32 70, i32 17}
!181 = !{ptr @.str.74, !182, !"<string literal>", i1 false, i1 false}
!182 = !{!"../include/linux/if_vlan.h", i32 598, i32 8}
!183 = !{ptr @.str.75, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4055, i32 2}
!185 = !{ptr @.str.76, !184, !"<string literal>", i1 false, i1 false}
!186 = !{ptr @ixgbevf_tx_map._entry, !184, !"_entry", i1 false, i1 false}
!187 = !{ptr @ixgbevf_tx_map._entry_ptr, !184, !"_entry_ptr", i1 false, i1 false}
!188 = distinct !{null, !189, !"__already_done", i1 false, i1 false}
!189 = !{!"../include/linux/dma-mapping.h", i32 326, i32 6}
!190 = !{ptr @.str.77, !189, !"<string literal>", i1 false, i1 false}
!191 = !{ptr @.str.78, !189, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @.str.79, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4264, i32 3}
!194 = !{ptr @.str.80, !193, !"<string literal>", i1 false, i1 false}
!195 = !{ptr @.str.81, !193, !"<string literal>", i1 false, i1 false}
!196 = !{ptr @ixgbevf_change_mtu._entry, !193, !"_entry", i1 false, i1 false}
!197 = !{ptr @ixgbevf_change_mtu._entry_ptr, !193, !"_entry_ptr", i1 false, i1 false}
!198 = !{ptr @.str.82, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4275, i32 2}
!200 = !{ptr @ixgbevf_change_mtu.__UNIQUE_ID_ddebug673, !199, !"__UNIQUE_ID_ddebug673", i1 false, i1 false}
!201 = distinct !{null, !202, !"__warned", i1 false, i1 false}
!202 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!203 = !{ptr @.str.83, !202, !"<string literal>", i1 false, i1 false}
!204 = !{ptr @.str.84, !202, !"<string literal>", i1 false, i1 false}
!205 = distinct !{null, !206, !"__warned", i1 false, i1 false}
!206 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!207 = !{ptr @.str.85, !206, !"<string literal>", i1 false, i1 false}
!208 = !{ptr @ixgbevf_sw_init.__key, !209, !"__key", i1 false, i1 false}
!209 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3047, i32 2}
!210 = !{ptr @.str.86, !209, !"<string literal>", i1 false, i1 false}
!211 = !{ptr @.str.87, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3051, i32 3}
!213 = !{ptr @.str.88, !212, !"<string literal>", i1 false, i1 false}
!214 = !{ptr @ixgbevf_sw_init._entry, !212, !"_entry", i1 false, i1 false}
!215 = !{ptr @ixgbevf_sw_init._entry_ptr, !212, !"_entry_ptr", i1 false, i1 false}
!216 = !{ptr @.str.90, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3056, i32 4}
!218 = !{ptr @ixgbevf_sw_init._entry.89, !217, !"_entry", i1 false, i1 false}
!219 = !{ptr @ixgbevf_sw_init._entry_ptr.91, !217, !"_entry_ptr", i1 false, i1 false}
!220 = !{ptr @.str.93, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3062, i32 4}
!222 = !{ptr @ixgbevf_sw_init._entry.92, !221, !"_entry", i1 false, i1 false}
!223 = !{ptr @ixgbevf_sw_init._entry_ptr.94, !221, !"_entry_ptr", i1 false, i1 false}
!224 = !{ptr @.str.96, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3064, i32 4}
!226 = !{ptr @ixgbevf_sw_init._entry.95, !225, !"_entry", i1 false, i1 false}
!227 = !{ptr @ixgbevf_sw_init._entry_ptr.97, !225, !"_entry_ptr", i1 false, i1 false}
!228 = !{ptr @.str.99, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3070, i32 3}
!230 = !{ptr @ixgbevf_sw_init._entry.98, !229, !"_entry", i1 false, i1 false}
!231 = !{ptr @ixgbevf_sw_init._entry_ptr.100, !229, !"_entry_ptr", i1 false, i1 false}
!232 = !{ptr @.str.101, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3271, i32 2}
!234 = !{ptr @.str.102, !233, !"<string literal>", i1 false, i1 false}
!235 = !{ptr @ixgbevf_watchdog_link_is_up._entry, !233, !"_entry", i1 false, i1 false}
!236 = !{ptr @ixgbevf_watchdog_link_is_up._entry_ptr, !233, !"_entry_ptr", i1 false, i1 false}
!237 = !{ptr @.str.103, !233, !"<string literal>", i1 false, i1 false}
!238 = !{ptr @.str.104, !233, !"<string literal>", i1 false, i1 false}
!239 = !{ptr @.str.105, !233, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @.str.106, !233, !"<string literal>", i1 false, i1 false}
!241 = !{ptr @.str.107, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 3298, i32 2}
!243 = !{ptr @.str.108, !242, !"<string literal>", i1 false, i1 false}
!244 = !{ptr @ixgbevf_watchdog_link_is_down._entry, !242, !"_entry", i1 false, i1 false}
!245 = !{ptr @ixgbevf_watchdog_link_is_down._entry_ptr, !242, !"_entry_ptr", i1 false, i1 false}
!246 = !{ptr @.str.109, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 2970, i32 3}
!248 = !{ptr @.str.110, !247, !"<string literal>", i1 false, i1 false}
!249 = !{ptr @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug666, !247, !"__UNIQUE_ID_ddebug666", i1 false, i1 false}
!250 = !{ptr @.str.111, !251, !"<string literal>", i1 false, i1 false}
!251 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 2977, i32 3}
!252 = !{ptr @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug667, !251, !"__UNIQUE_ID_ddebug667", i1 false, i1 false}
!253 = !{ptr @.str.112, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 2981, i32 2}
!255 = !{ptr @ixgbevf_init_interrupt_scheme.__UNIQUE_ID_ddebug668, !254, !"__UNIQUE_ID_ddebug668", i1 false, i1 false}
!256 = !{ptr @.str.113, !254, !"<string literal>", i1 false, i1 false}
!257 = !{ptr @.str.114, !254, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @.str.115, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 2578, i32 3}
!260 = !{ptr @.str.116, !259, !"<string literal>", i1 false, i1 false}
!261 = !{ptr @ixgbevf_acquire_msix_vectors._entry, !259, !"_entry", i1 false, i1 false}
!262 = !{ptr @ixgbevf_acquire_msix_vectors._entry_ptr, !259, !"_entry_ptr", i1 false, i1 false}
!263 = !{ptr @.str.117, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 373, i32 3}
!265 = !{ptr @.str.118, !264, !"<string literal>", i1 false, i1 false}
!266 = !{ptr @ixgbevf_clean_tx_irq._entry, !264, !"_entry", i1 false, i1 false}
!267 = !{ptr @ixgbevf_clean_tx_irq._entry_ptr, !264, !"_entry_ptr", i1 false, i1 false}
!268 = !{ptr @.str.119, !264, !"<string literal>", i1 false, i1 false}
!269 = !{ptr @.str.120, !264, !"<string literal>", i1 false, i1 false}
!270 = distinct !{null, !271, !"__already_done", i1 false, i1 false}
!271 = !{!"../include/linux/seqlock.h", i32 271, i32 2}
!272 = !{ptr @.str.121, !271, !"<string literal>", i1 false, i1 false}
!273 = !{ptr @.str.122, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../include/linux/filter.h", i32 613, i32 2}
!275 = distinct !{null, !276, !"__already_done", i1 false, i1 false}
!276 = !{!"../include/trace/events/xdp.h", i32 28, i32 1}
!277 = !{ptr @.str.123, !276, !"<string literal>", i1 false, i1 false}
!278 = distinct !{null, !276, !"__warned", i1 false, i1 false}
!279 = !{ptr @.str.124, !276, !"<string literal>", i1 false, i1 false}
!280 = distinct !{null, !281, !"__already_done", i1 false, i1 false}
!281 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!282 = !{ptr @.str.125, !281, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @.str.126, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../include/linux/mm.h", i32 1368, i32 10}
!285 = !{ptr @.str.127, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4747, i32 2}
!287 = !{ptr @.str.128, !286, !"<string literal>", i1 false, i1 false}
!288 = !{ptr @ixgbevf_remove.__UNIQUE_ID_ddebug674, !286, !"__UNIQUE_ID_ddebug674", i1 false, i1 false}
!289 = !{ptr @ixgbevf_err_handler, !290, !"ixgbevf_err_handler", i1 false, i1 false}
!290 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4842, i32 40}
!291 = !{ptr @.str.129, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4806, i32 3}
!293 = !{ptr @.str.130, !292, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @ixgbevf_io_slot_reset._entry, !292, !"_entry", i1 false, i1 false}
!295 = !{ptr @ixgbevf_io_slot_reset._entry_ptr, !292, !"_entry_ptr", i1 false, i1 false}
!296 = !{ptr @ixgbevf_pm_ops, !297, !"ixgbevf_pm_ops", i1 false, i1 false}
!297 = !{!"../drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c", i32 4848, i32 8}
!298 = !{!"sp"}
!299 = !{i32 1, !"wchar_size", i32 2}
!300 = !{i32 1, !"min_enum_size", i32 4}
!301 = !{i32 8, !"branch-target-enforcement", i32 0}
!302 = !{i32 8, !"sign-return-address", i32 0}
!303 = !{i32 8, !"sign-return-address-all", i32 0}
!304 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!305 = !{i32 7, !"uwtable", i32 1}
!306 = !{i32 7, !"frame-pointer", i32 2}
!307 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!308 = !{!"branch_weights", i32 1, i32 2000}
!309 = !{i64 5113296}
!310 = !{i64 2159713877}
!311 = !{i64 2159688216}
!312 = !{i64 5112878}
!313 = !{i64 2159775122}
!314 = !{i64 2149086328, i64 2149086333, i64 2149086346, i64 2149086390, i64 2149086424, i64 2149086445}
!315 = !{i8 0, i8 2}
!316 = !{i64 2159727429}
!317 = !{i64 2159697983}
!318 = !{i64 2159707309, i64 2159707823, i64 2159707346, i64 2159707402, i64 2159707436, i64 2159707460, i64 2159707501, i64 2159707522, i64 2159707550, i64 2159707584}
!319 = !{i64 2159708761}
!320 = !{!"auto-init"}
!321 = !{i64 7869198}
!322 = !{!"branch_weights", i32 2000, i32 1}
!323 = !{i64 2159845245}
!324 = !{i64 2149489110}
!325 = !{i64 2150104777}
!326 = !{i64 2149489376}
!327 = !{i64 2159857141}
!328 = !{i64 802246, i64 802263, i64 802287, i64 802313, i64 802331}
!329 = !{i64 2159857487}
!330 = !{i64 2159858422}
!331 = !{i64 2159858781}
!332 = !{i64 2159847488}
!333 = !{i64 687959, i64 688020}
!334 = !{i64 690691}
!335 = !{i64 690976}
!336 = !{i64 2154904817}
!337 = !{i64 2154904659}
!338 = !{i64 2154904987}
!339 = !{i64 2159715563}
!340 = !{i64 792969}
!341 = !{!"branch_weights", i32 2002, i32 2000}
!342 = !{i64 2150105427}
!343 = !{i64 2159723170}
!344 = !{i64 2159734620}
!345 = !{i64 2155523357, i64 2155523845, i64 2155523394, i64 2155523450, i64 2155523484, i64 2155523508, i64 2155523549, i64 2155523570, i64 2155523598, i64 2155523632}
!346 = !{i64 2159734937}
!347 = !{i64 2149997109}
!348 = !{i64 2150002041}
!349 = !{i64 2150023753}
!350 = !{i64 2150028645}
!351 = !{i64 2150105102}
!352 = !{i64 2159730907}
!353 = !{i64 2154379093, i64 2154379577, i64 2154379130, i64 2154379186, i64 2154379220, i64 2154379244, i64 2154379285, i64 2154379306, i64 2154379334, i64 2154379368}
!354 = !{i64 2148295478, i64 2148295504, i64 2148295533, i64 2148295567, i64 2148295598, i64 2148295621}
!355 = !{i64 2158962813}
!356 = !{i64 2158963028}
!357 = !{i64 2149497669}
!358 = !{i64 2149498705}
!359 = !{i64 2159889268}
!360 = !{i64 2159854576}
