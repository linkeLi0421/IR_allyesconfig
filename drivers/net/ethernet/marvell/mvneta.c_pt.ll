; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/marvell/mvneta.c_pt.bc'
source_filename = "../drivers/net/ethernet/marvell/mvneta.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.platform_driver = type { ptr, ptr, ptr, ptr, ptr, %struct.device_driver, ptr, i8 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.164 }
%union.anon.164 = type { ptr }
%struct.cpumask = type { [1 x i32] }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.phylink_mac_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ethtool_ops = type { i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.phylink_pcs_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.sk_buff_head, %struct.anon.195, [100 x i8], i32, [124 x i8], %struct.__call_single_data, ptr, i32, i32, i32, %struct.sk_buff_head, %struct.napi_struct, [72 x i8] }
%struct.list_head = type { ptr, ptr }
%struct.anon.195 = type { i16, i8 }
%struct.__call_single_data = type { %struct.__call_single_node, ptr, ptr }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%struct.llist_node = type { ptr }
%union.anon.20 = type { i32 }
%struct.sk_buff_head = type { %union.anon.78, i32, %struct.spinlock }
%union.anon.78 = type { %struct.anon.79 }
%struct.anon.79 = type { ptr, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.mvneta_statistic = type { i16, i16, [32 x i8] }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon.165 }
%struct.atomic_t = type { i32 }
%union.anon.165 = type { i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mvneta_port = type { i8, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, %struct.hlist_node, %struct.hlist_node, i32, %struct.spinlock, i8, i32, %struct.napi_struct, ptr, ptr, ptr, [256 x i8], i16, i16, i32, ptr, i32, ptr, %struct.phylink_config, %struct.phylink_pcs, ptr, ptr, ptr, ptr, i32, i8, i8, i8, [42 x i64], [1 x i32], i8, i16, ptr }
%struct.phylink_config = type { ptr, i32, i8, i8, i8, i8, ptr, [1 x i32], i32 }
%struct.phylink_pcs = type { ptr, i8 }
%struct.mvneta_pcpu_port = type { ptr, %struct.napi_struct, i32 }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.170, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.191, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.170 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.rb_root = type { ptr }
%struct.hlist_head = type { ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.possible_net_t = type { ptr }
%union.anon.191 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.netdev_queue = type { ptr, ptr, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, ptr, [88 x i8], %struct.spinlock, i32, i32, i32, [72 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [116 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [88 x i8] }
%struct.platform_device = type { ptr, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, ptr, ptr, ptr, ptr, %struct.pdev_archdata }
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.pdev_archdata = type { ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.mbus_dram_target_info = type { i8, i32, [4 x %struct.mbus_dram_window] }
%struct.mbus_dram_window = type { i8, i8, i64, i64 }
%struct.of_phandle_args = type { ptr, i32, [16 x i32] }
%struct.mvneta_bm = type { ptr, ptr, ptr, ptr, ptr, i32, ptr }
%struct.mvneta_bm_pool = type { %struct.hwbm_pool, i8, i32, i32, i32, ptr, i32, i8, ptr }
%struct.hwbm_pool = type { i32, i32, i32, ptr, %struct.mutex, ptr }
%struct.mvneta_tx_queue = type { i8, i32, i32, i32, i32, i32, ptr, i32, i32, i32, ptr, i32, i32, i32, ptr, i32, %struct.cpumask }
%struct.mvneta_rx_queue = type { i8, i32, i32, i32, ptr, [108 x i8], %struct.xdp_rxq_info, ptr, ptr, i32, i32, i32, i32, i32, [100 x i8] }
%struct.xdp_rxq_info = type { ptr, i32, i32, %struct.xdp_mem_info, i32, [104 x i8] }
%struct.xdp_mem_info = type { i32, i32 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.mvneta_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.xdp_buff = type { ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.mvneta_rx_desc = type { i16, i16, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.sk_buff = type { %union.anon.50, %union.anon.53, %union.anon.54, [48 x i8], %union.anon.55, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.57, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { ptr, ptr, %union.anon.52 }
%union.anon.52 = type { ptr }
%union.anon.53 = type { ptr }
%union.anon.54 = type { i64 }
%union.anon.55 = type { %struct.anon.56 }
%struct.anon.56 = type { i32, ptr }
%union.anon.57 = type { %struct.anon.58 }
%struct.anon.58 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.59, i32, i32, i32, i16, i16, %union.anon.61, i32, %union.anon.62, %union.anon.63, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.59 = type { i32 }
%union.anon.61 = type { i32 }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i16 }
%struct.mvneta_pcpu_stats = type { %struct.u64_stats_sync, %struct.mvneta_ethtool_stats, i64, i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.mvneta_ethtool_stats = type { %struct.mvneta_stats, i64, i64 }
%struct.page_pool_params = type { i32, i32, i32, i32, ptr, i32, i32, i32, ptr, ptr }
%struct.page = type { i32, %union.anon.2, %union.anon.163, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.163 = type { %struct.atomic_t }
%struct.phylink_link_state = type { [3 x i32], [3 x i32], i32, i32, i32, i32, i8 }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.tso_t = type { i32, i32, ptr, i16, i8, i8, i32 }
%struct.mvneta_tx_buf = type { i32, %union.anon.194 }
%union.anon.194 = type { ptr }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.mvneta_tx_desc = type { i16, i16, i32, i32, i32, [4 x i32] }
%struct.netdev_hw_addr = type { %struct.list_head, %struct.rb_node, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.tc_mqprio_qopt = type { i8, [16 x i8], i8, [16 x i16], [16 x i16] }
%struct.tc_mqprio_qopt_offload = type { %struct.tc_mqprio_qopt, i16, i16, i32, [16 x i64], [16 x i64] }
%struct.netdev_bpf = type { i32, %union.anon.175 }
%union.anon.175 = type { %struct.anon.176 }
%struct.anon.176 = type { i32, ptr, ptr }
%struct.xdp_frame = type { ptr, i16, i16, i32, %struct.xdp_mem_info, ptr }
%struct.xdp_frame_bulk = type { i32, ptr, [16 x ptr] }
%struct.vlan_hdr = type { i16, i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.71 }
%union.anon.71 = type { [4 x i32] }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.185, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.185 = type { i32 }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.112 }
%union.anon.112 = type { %struct.anon.113 }
%struct.anon.113 = type { %struct.anon.114, [0 x %struct.sock_filter] }
%struct.anon.114 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync, [8 x i8] }
%struct.u64_stats_t = type { i64 }

@__initcall__kmod_mvneta__711_5764_mvneta_driver_init6 = internal global ptr @mvneta_driver_init, section ".initcall6.init", align 4
@mvneta_driver = internal global { %struct.platform_driver, [56 x i8] } { %struct.platform_driver { ptr @mvneta_probe, ptr @mvneta_remove, ptr null, ptr null, ptr null, %struct.device_driver { ptr @.str.3, ptr null, ptr null, ptr null, i8 0, i32 0, ptr @mvneta_match, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_pm_ops, ptr null, ptr null }, ptr null, i8 0 }, [56 x i8] zeroinitializer }, align 32
@online_hpstate = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__exitcall_mvneta_driver_exit = internal global ptr @mvneta_driver_exit, section ".exitcall.exit", align 4
@__UNIQUE_ID_description712 = internal constant [66 x i8] c"mvneta.description=Marvell NETA Ethernet Driver - www.marvell.com\00", section ".modinfo", align 1
@__UNIQUE_ID_author713 = internal constant [102 x i8] c"mvneta.author=Rami Rosen <rosenr@marvell.com>, Thomas Petazzoni <thomas.petazzoni@free-electrons.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_file714 = internal constant [48 x i8] c"mvneta.file=drivers/net/ethernet/marvell/mvneta\00", section ".modinfo", align 1
@__UNIQUE_ID_license715 = internal constant [19 x i8] c"mvneta.license=GPL\00", section ".modinfo", align 1
@__param_str_rxq_number = internal constant [18 x i8] c"mvneta.rxq_number\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@rxq_number = internal global { i32, [28 x i8] } { i32 8, [28 x i8] zeroinitializer }, align 32
@__param_rxq_number = internal constant %struct.kernel_param { ptr @__param_str_rxq_number, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.164 { ptr @rxq_number } }, section "__param", align 4
@__UNIQUE_ID_rxq_numbertype716 = internal constant [31 x i8] c"mvneta.parmtype=rxq_number:int\00", section ".modinfo", align 1
@__param_str_txq_number = internal constant [18 x i8] c"mvneta.txq_number\00", align 1
@txq_number = internal global { i32, [28 x i8] } { i32 8, [28 x i8] zeroinitializer }, align 32
@__param_txq_number = internal constant %struct.kernel_param { ptr @__param_str_txq_number, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.164 { ptr @txq_number } }, section "__param", align 4
@__UNIQUE_ID_txq_numbertype717 = internal constant [31 x i8] c"mvneta.parmtype=txq_number:int\00", section ".modinfo", align 1
@__param_str_rxq_def = internal constant [15 x i8] c"mvneta.rxq_def\00", align 1
@rxq_def = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_rxq_def = internal constant %struct.kernel_param { ptr @__param_str_rxq_def, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.164 { ptr @rxq_def } }, section "__param", align 4
@__UNIQUE_ID_rxq_deftype718 = internal constant [28 x i8] c"mvneta.parmtype=rxq_def:int\00", section ".modinfo", align 1
@__param_str_rx_copybreak = internal constant [20 x i8] c"mvneta.rx_copybreak\00", align 1
@rx_copybreak = internal global i32 256, section ".data..read_mostly", align 4
@__param_rx_copybreak = internal constant %struct.kernel_param { ptr @__param_str_rx_copybreak, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.164 { ptr @rx_copybreak } }, section "__param", align 4
@__UNIQUE_ID_rx_copybreaktype719 = internal constant [33 x i8] c"mvneta.parmtype=rx_copybreak:int\00", section ".modinfo", align 1
@.str = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"net/mvneta:online\00", [46 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"net/mvneta:dead\00", [16 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__cpu_present_mask = external dso_local global %struct.cpumask, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.2 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"mvneta\00", [25 x i8] zeroinitializer }, align 32
@mvneta_match = internal constant { [4 x %struct.of_device_id], [208 x i8] } { [4 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"marvell,armada-370-neta\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"marvell,armada-xp-neta\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"marvell,armada-3700-neta\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null }, %struct.of_device_id zeroinitializer], [208 x i8] zeroinitializer }, align 32
@mvneta_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr @mvneta_suspend, ptr @mvneta_resume, ptr @mvneta_suspend, ptr @mvneta_resume, ptr @mvneta_suspend, ptr @mvneta_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@mvneta_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.4, ptr @.str.5, ptr @.str.6, i32 5330, ptr @.str.7, ptr @.str.8 }, [40 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"incorrect phy-mode\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mvneta_probe\00", [19 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"drivers/net/ethernet/marvell/mvneta.c\00", [58 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@mvneta_probe._entry_ptr = internal global ptr @mvneta_probe._entry, section ".printk_index", align 4
@mvneta_probe.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.9 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"&pp->lock\00", [22 x i8] zeroinitializer }, align 32
@mvneta_phylink_ops = internal constant { %struct.phylink_mac_ops, [60 x i8] } { %struct.phylink_mac_ops { ptr @phylink_generic_validate, ptr null, ptr null, ptr @mvneta_mac_prepare, ptr @mvneta_mac_config, ptr @mvneta_mac_finish, ptr null, ptr @mvneta_mac_link_down, ptr @mvneta_mac_link_up }, [60 x i8] zeroinitializer }, align 32
@mvneta_netdev_ops = internal constant { %struct.net_device_ops, [80 x i8] } { %struct.net_device_ops { ptr null, ptr null, ptr @mvneta_open, ptr @mvneta_stop, ptr @mvneta_tx, ptr null, ptr null, ptr null, ptr @mvneta_set_rx_mode, ptr @mvneta_set_mac_addr, ptr null, ptr null, ptr @mvneta_ioctl, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_change_mtu, ptr null, ptr null, ptr @mvneta_get_stats64, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_setup_tc, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_fix_features, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_xdp, ptr @mvneta_xdp_xmit, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [80 x i8] zeroinitializer }, align 32
@mvneta_eth_tool_ops = internal constant { %struct.ethtool_ops, [68 x i8] } { %struct.ethtool_ops { i8 0, i32 35, i32 0, ptr @mvneta_ethtool_get_drvinfo, ptr null, ptr null, ptr @mvneta_ethtool_get_wol, ptr @mvneta_ethtool_set_wol, ptr null, ptr null, ptr @mvneta_ethtool_nway_reset, ptr @ethtool_op_get_link, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_ethtool_get_coalesce, ptr @mvneta_ethtool_set_coalesce, ptr @mvneta_ethtool_get_ringparam, ptr @mvneta_ethtool_set_ringparam, ptr null, ptr @mvneta_ethtool_get_pauseparam, ptr @mvneta_ethtool_set_pauseparam, ptr null, ptr @mvneta_ethtool_get_strings, ptr null, ptr @mvneta_ethtool_get_stats, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_ethtool_get_sset_count, ptr @mvneta_ethtool_get_rxnfc, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_ethtool_get_rxfh_indir_size, ptr @mvneta_ethtool_get_rxfh, ptr @mvneta_ethtool_set_rxfh, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_ethtool_get_eee, ptr @mvneta_ethtool_set_eee, ptr null, ptr null, ptr null, ptr null, ptr @mvneta_ethtool_get_link_ksettings, ptr @mvneta_ethtool_set_link_ksettings, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [68 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"marvell,armada-3700-neta\00", [39 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"core\00", [27 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"bus\00", [28 x i8] zeroinitializer }, align 32
@mvneta_phylink_pcs_ops = internal constant { %struct.phylink_pcs_ops, [44 x i8] } { %struct.phylink_pcs_ops { ptr @mvneta_pcs_validate, ptr @mvneta_pcs_get_state, ptr @mvneta_pcs_config, ptr @mvneta_pcs_an_restart, ptr null }, [44 x i8] zeroinitializer }, align 32
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@mvneta_probe.__key.13 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.14 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&(&stat->syncp)->seq\00", [43 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"device tree\00", [20 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"hardware\00", [23 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"random\00", [25 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"tx-csum-limit\00", [18 x i8] zeroinitializer }, align 32
@mvneta_probe._entry.19 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.5, ptr @.str.6, i32 5458, ptr @.str.21, ptr @.str.8 }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Wrong TX csum limit in DT, set to %dB\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@mvneta_probe._entry_ptr.22 = internal global ptr @mvneta_probe._entry.19, section ".printk_index", align 4
@.str.23 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"marvell,armada-370-neta\00", [40 x i8] zeroinitializer }, align 32
@global_port_id = internal global { i32, [28 x i8] } zeroinitializer, align 32
@.str.24 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"buffer-manager\00", [17 x i8] zeroinitializer }, align 32
@mvneta_probe._entry.25 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.5, ptr @.str.6, i32 5492, ptr @.str.21, ptr @.str.8 }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"use SW buffer management\0A\00", [38 x i8] zeroinitializer }, align 32
@mvneta_probe._entry_ptr.27 = internal global ptr @mvneta_probe._entry.25, section ".printk_index", align 4
@mvneta_probe._entry.28 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.5, ptr @.str.6, i32 5517, ptr @.str.7, ptr @.str.8 }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"can't power up port\0A\00", [43 x i8] zeroinitializer }, align 32
@mvneta_probe._entry_ptr.30 = internal global ptr @mvneta_probe._entry.28, section ".printk_index", align 4
@mvneta_probe._entry.31 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.5, ptr @.str.6, i32 5551, ptr @.str.7, ptr @.str.8 }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"failed to register\0A\00", [44 x i8] zeroinitializer }, align 32
@mvneta_probe._entry_ptr.33 = internal global ptr @mvneta_probe._entry.31, section ".printk_index", align 4
@.str.34 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Using %s mac address %pM\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"TIMEOUT for RX stopped ! rx_queue_cmd: 0x%08x\0A\00", [49 x i8] zeroinitializer }, align 32
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@.str.36 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"TIMEOUT for TX stopped status=0x%08x\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"TX FIFO empty timeout status=0x%08x\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"cannot request irq %d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"cannot probe MDIO bus\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: can't create rxq=%d\0A\00", [39 x i8] zeroinitializer }, align 32
@__func__.mvneta_setup_rxqs = private unnamed_addr constant [18 x i8] c"mvneta_setup_rxqs\00", align 1
@.str.41 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s:rxq %d, %d of %d buffs  filled\0A\00", [61 x i8] zeroinitializer }, align 32
@__func__.mvneta_rxq_fill = private unnamed_addr constant [16 x i8] c"mvneta_rxq_fill\00", align 1
@.str.42 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: can't create txq=%d\0A\00", [39 x i8] zeroinitializer }, align 32
@__func__.mvneta_setup_txqs = private unnamed_addr constant [18 x i8] c"mvneta_setup_txqs\00", align 1
@__const.mvneta_mdio_probe.wol = private unnamed_addr constant { i32, i32, i32, [6 x i8], [2 x i8] } { i32 5, i32 0, i32 0, [6 x i8] zeroinitializer, [2 x i8] zeroinitializer }, align 4
@.str.43 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"could not attach PHY: %d\0A\00", [38 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.44 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.46 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@mvneta_tx_tso._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.47, ptr @.str.48, ptr @.str.6, i32 2692, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016*** Is this even possible?\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mvneta_tx_tso\00", [18 x i8] zeroinitializer }, align 32
@mvneta_tx_tso._entry_ptr = internal global ptr @mvneta_tx_tso._entry, section ".printk_index", align 4
@.str.49 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/if_vlan.h\00", [40 x i8] zeroinitializer }, align 32
@dma_map_single_attrs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.50 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/dma-mapping.h\00", [36 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", [52 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@softnet_data = external dso_local global %struct.softnet_data, section ".data..percpu..shared_aligned", align 128
@__seqprop_assert.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@.str.53 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/seqlock.h\00", [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01\00^\00\00\00", [26 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"No valid Mcast for crc8=0x%02x\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"After delete there are %d valid Mcast for crc8=0x%02x\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Illegal MTU value %d for XDP mode\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"unable to setup rxqs after MTU change\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"unable to setup txqs after MTU change\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"cannot free all buffers in pool %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"pool %d: %d of %d allocated\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"fail to update MTU, fall back to software BM\0A\00", [50 x i8] zeroinitializer }, align 32
@mvneta_bm_pool_bufsize_set._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.64, ptr @.str.65, ptr @.str.6, i32 1065, ptr @.str.66, ptr @.str.8 }, [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"illegal buf_size value %d, round to %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"mvneta_bm_pool_bufsize_set\00", [37 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@mvneta_bm_pool_bufsize_set._entry_ptr = internal global ptr @mvneta_bm_pool_bufsize_set._entry, section ".printk_index", align 4
@.str.67 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Disable IP checksum for MTU greater than %dB\0A\00", [50 x i8] zeroinitializer }, align 32
@mvneta_xdp_setup.__msg = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"mvneta: MTU too large for XDP\00", [34 x i8] zeroinitializer }, align 32
@mvneta_xdp_setup.__msg.68 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"mvneta: Hardware Buffer Management not supported on XDP\00", [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"1.0\00", [28 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"TX queue size set to %u (requested %u)\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"error on opening device after ring param change\0A\00", [47 x i8] zeroinitializer }, align 32
@mvneta_statistics = internal constant { [42 x %struct.mvneta_statistic], [376 x i8] } { [42 x %struct.mvneta_statistic] [%struct.mvneta_statistic { i16 12288, i16 64, [32 x i8] c"good_octets_received\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12304, i16 32, [32 x i8] c"good_frames_received\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12296, i16 32, [32 x i8] c"bad_octets_received\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12308, i16 32, [32 x i8] c"bad_frames_received\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12312, i16 32, [32 x i8] c"broadcast_frames_received\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12316, i16 32, [32 x i8] c"multicast_frames_received\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12368, i16 32, [32 x i8] c"unrec_mac_control_received\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12376, i16 32, [32 x i8] c"good_fc_received\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12380, i16 32, [32 x i8] c"bad_fc_received\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12384, i16 32, [32 x i8] c"undersize_received\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12388, i16 32, [32 x i8] c"fragments_received\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12392, i16 32, [32 x i8] c"oversize_received\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12396, i16 32, [32 x i8] c"jabber_received\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12400, i16 32, [32 x i8] c"mac_receive_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12404, i16 32, [32 x i8] c"bad_crc_event\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12408, i16 32, [32 x i8] c"collision\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12412, i16 32, [32 x i8] c"late_collision\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 9348, i16 32, [32 x i8] c"rx_discard\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 9352, i16 32, [32 x i8] c"rx_overrun\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12320, i16 32, [32 x i8] c"frames_64_octets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12324, i16 32, [32 x i8] c"frames_65_to_127_octets\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12328, i16 32, [32 x i8] c"frames_128_to_255_octets\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12332, i16 32, [32 x i8] c"frames_256_to_511_octets\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12336, i16 32, [32 x i8] c"frames_512_to_1023_octets\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12340, i16 32, [32 x i8] c"frames_1024_to_max_octets\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12344, i16 64, [32 x i8] c"good_octets_sent\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12352, i16 32, [32 x i8] c"good_frames_sent\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12356, i16 32, [32 x i8] c"excessive_collision\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12360, i16 32, [32 x i8] c"multicast_frames_sent\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12364, i16 32, [32 x i8] c"broadcast_frames_sent\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12372, i16 32, [32 x i8] c"fc_sent\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 12300, i16 32, [32 x i8] c"internal_mac_transmit_err\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 0, i16 1, [32 x i8] c"eee_wakeup_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 1, i16 1, [32 x i8] c"skb_alloc_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 2, i16 1, [32 x i8] c"refill_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 3, i16 1, [32 x i8] c"rx_xdp_redirect\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 4, i16 1, [32 x i8] c"rx_xdp_pass\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 5, i16 1, [32 x i8] c"rx_xdp_drop\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 6, i16 1, [32 x i8] c"rx_xdp_tx\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 7, i16 1, [32 x i8] c"rx_xdp_tx_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 8, i16 1, [32 x i8] c"tx_xdp_xmit\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.mvneta_statistic { i16 9, i16 1, [32 x i8] c"tx_xdp_xmit_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }], [376 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"bm,pool-long\00", [19 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"missing long pool id\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"fail to obtain long pool for port\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"bm,pool-short\00", [18 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"fail to obtain short pool for port\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"fail to configure mbus window to BM\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Linux processing - Can't refill\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"bad rx status %08x (crc error), size=%d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"bad rx status %08x (overrun error), size=%d\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"bad rx status %08x (max frame length error), size=%d\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"bad rx status %08x (resource error), size=%d\0A\00", [50 x i8] zeroinitializer }, align 32
@bpf_master_redirect_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.83 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/filter.h\00", [41 x i8] zeroinitializer }, align 32
@bpf_stats_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.84 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Driver BUG: missing reserved tailroom\00", [58 x i8] zeroinitializer }, align 32
@__func__.xdp_update_frame_from_buff = private unnamed_addr constant [27 x i8] c"xdp_update_frame_from_buff\00", align 1
@__tracepoint_xdp_exception = external dso_local global %struct.tracepoint, align 4
@.str.85 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/xdp.h\00", [37 x i8] zeroinitializer }, align 32
@trace_xdp_exception.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.86 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@mvneta_rx_refill_queue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.88, ptr @.str.6, i32 2044, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013Can't refill queue %d. Done %d from %d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mvneta_rx_refill_queue\00", [41 x i8] zeroinitializer }, align 32
@mvneta_rx_refill_queue._entry_ptr = internal global ptr @mvneta_rx_refill_queue._entry, section ".printk_index", align 4
@mvneta_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.89, ptr @.str.6, i32 5667, ptr @.str.21, ptr @.str.8 }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mvneta_resume\00", [18 x i8] zeroinitializer }, align 32
@mvneta_resume._entry_ptr = internal global ptr @mvneta_resume._entry, section ".printk_index", align 4
@mvneta_resume._entry.90 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.89, ptr @.str.6, i32 5675, ptr @.str.7, ptr @.str.8 }, [40 x i8] zeroinitializer }, align 32
@mvneta_resume._entry_ptr.91 = internal global ptr @mvneta_resume._entry.90, section ".printk_index", align 4
@switch.table.mvneta_rx_error = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82], [16 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 21, i64 22]
@__sancov_gen_cov_switch_values.92 = internal global [10 x i64] [i64 8, i64 32, i64 4, i64 9, i64 10, i64 11, i64 12, i64 18, i64 21, i64 22]
@__sancov_gen_cov_switch_values.93 = internal global [4 x i64] [i64 2, i64 32, i64 4, i64 18]
@__sancov_gen_cov_switch_values.94 = internal global [5 x i64] [i64 3, i64 32, i64 100, i64 1000, i64 2500]
@__sancov_gen_cov_switch_values.95 = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 21, i64 22]
@__sancov_gen_cov_switch_values.96 = internal global [6 x i64] [i64 4, i64 32, i64 4, i64 18, i64 21, i64 22]
@__sancov_gen_cov_switch_values.97 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.98 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.99 = internal global [4 x i64] [i64 2, i64 16, i64 2048, i64 34525]
@__sancov_gen_cov_switch_values.100 = internal global [5 x i64] [i64 3, i64 16, i64 1, i64 32, i64 64]
@__sancov_gen_cov_switch_values.101 = internal global [12 x i64] [i64 10, i64 16, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.102 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.103 = internal global [10 x i64] [i64 8, i64 32, i64 4, i64 9, i64 10, i64 11, i64 12, i64 18, i64 21, i64 22]
@___asan_gen_.104 = private unnamed_addr constant [14 x i8] c"mvneta_driver\00", align 1
@___asan_gen_.106 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5727, i32 31 }
@___asan_gen_.107 = private unnamed_addr constant [15 x i8] c"online_hpstate\00", align 1
@___asan_gen_.109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 733, i32 25 }
@___asan_gen_.110 = private unnamed_addr constant [11 x i8] c"rxq_number\00", align 1
@___asan_gen_.112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 737, i32 12 }
@___asan_gen_.113 = private unnamed_addr constant [11 x i8] c"txq_number\00", align 1
@___asan_gen_.115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 738, i32 12 }
@___asan_gen_.116 = private unnamed_addr constant [8 x i8] c"rxq_def\00", align 1
@___asan_gen_.118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 740, i32 12 }
@___asan_gen_.121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5741, i32 53 }
@___asan_gen_.124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5747, i32 55 }
@___asan_gen_.126 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.126, i32 108, i32 2 }
@___asan_gen_.130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5731, i32 11 }
@___asan_gen_.131 = private unnamed_addr constant [13 x i8] c"mvneta_match\00", align 1
@___asan_gen_.133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5719, i32 34 }
@___asan_gen_.134 = private unnamed_addr constant [14 x i8] c"mvneta_pm_ops\00", align 1
@___asan_gen_.136 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5717, i32 8 }
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5330, i32 3 }
@___asan_gen_.160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5343, i32 2 }
@___asan_gen_.161 = private unnamed_addr constant [19 x i8] c"mvneta_phylink_ops\00", align 1
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4177, i32 37 }
@___asan_gen_.164 = private unnamed_addr constant [18 x i8] c"mvneta_netdev_ops\00", align 1
@___asan_gen_.166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5152, i32 36 }
@___asan_gen_.167 = private unnamed_addr constant [20 x i8] c"mvneta_eth_tool_ops\00", align 1
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5167, i32 33 }
@___asan_gen_.172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5398, i32 34 }
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5401, i32 37 }
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5411, i32 41 }
@___asan_gen_.179 = private unnamed_addr constant [23 x i8] c"mvneta_phylink_pcs_ops\00", align 1
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3965, i32 37 }
@___asan_gen_.182 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5432, i32 14 }
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5440, i32 14 }
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5444, i32 15 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5447, i32 15 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5452, i32 32 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5456, i32 4 }
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5460, i32 41 }
@___asan_gen_.212 = private unnamed_addr constant [15 x i8] c"global_port_id\00", align 1
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 745, i32 12 }
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5485, i32 33 }
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5491, i32 5 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5517, i32 3 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5551, i32 3 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5555, i32 19 }
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1287, i32 9 }
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1310, i32 9 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1326, i32 9 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4386, i32 23 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4413, i32 19 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3565, i32 24 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3297, i32 8 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3583, i32 24 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4192, i32 23 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.273, i32 695, i32 2 }
@___asan_gen_.273 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.273, i32 723, i32 2 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 2692, i32 3 }
@___asan_gen_.285 = private unnamed_addr constant [27 x i8] c"../include/linux/if_vlan.h\00", align 1
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.285, i32 598, i32 8 }
@___asan_gen_.291 = private unnamed_addr constant [31 x i8] c"../include/linux/dma-mapping.h\00", align 1
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.291, i32 326, i32 6 }
@___asan_gen_.294 = private unnamed_addr constant [27 x i8] c"../include/linux/seqlock.h\00", align 1
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.294, i32 271, i32 2 }
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3038, i32 21 }
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3046, i32 25 }
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3054, i32 9 }
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3752, i32 20 }
@___asan_gen_.310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3782, i32 19 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3788, i32 19 }
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1211, i32 3 }
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1224, i32 3 }
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1239, i32 23 }
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1063, i32 3 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 3808, i32 8 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4494, i32 3 }
@___asan_gen_.341 = private unnamed_addr constant [6 x i8] c"__msg\00", align 1
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4499, i32 3 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4606, i32 28 }
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4643, i32 20 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 4650, i32 8 }
@___asan_gen_.353 = private unnamed_addr constant [18 x i8] c"mvneta_statistics\00", align 1
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 401, i32 38 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1159, i32 31 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1160, i32 24 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1169, i32 24 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1179, i32 31 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1187, i32 24 }
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1136, i32 24 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 2575, i32 20 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1817, i32 23 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1821, i32 23 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1825, i32 23 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 1829, i32 23 }
@___asan_gen_.390 = private unnamed_addr constant [26 x i8] c"../include/linux/filter.h\00", align 1
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.390, i32 613, i32 2 }
@___asan_gen_.393 = private unnamed_addr constant [21 x i8] c"../include/net/xdp.h\00", align 1
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.393, i32 200, i32 3 }
@___asan_gen_.399 = private unnamed_addr constant [30 x i8] c"../include/trace/events/xdp.h\00", align 1
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.399, i32 28, i32 1 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 2043, i32 5 }
@___asan_gen_.413 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5667, i32 4 }
@___asan_gen_.416 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.417 = private constant [41 x i8] c"../drivers/net/ethernet/marvell/mvneta.c\00", align 1
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.417, i32 5675, i32 3 }
@___asan_gen_.419 = private unnamed_addr constant [29 x i8] c"switch.table.mvneta_rx_error\00", align 1
@llvm.compiler.used = appending global [131 x ptr] [ptr @__UNIQUE_ID_author713, ptr @__UNIQUE_ID_description712, ptr @__UNIQUE_ID_file714, ptr @__UNIQUE_ID_license715, ptr @__UNIQUE_ID_rx_copybreaktype719, ptr @__UNIQUE_ID_rxq_deftype718, ptr @__UNIQUE_ID_rxq_numbertype716, ptr @__UNIQUE_ID_txq_numbertype717, ptr @__exitcall_mvneta_driver_exit, ptr @__initcall__kmod_mvneta__711_5764_mvneta_driver_init6, ptr @__param_rx_copybreak, ptr @__param_rxq_def, ptr @__param_rxq_number, ptr @__param_txq_number, ptr @mvneta_bm_pool_bufsize_set._entry, ptr @mvneta_bm_pool_bufsize_set._entry_ptr, ptr @mvneta_driver_exit, ptr @mvneta_probe._entry, ptr @mvneta_probe._entry.19, ptr @mvneta_probe._entry.25, ptr @mvneta_probe._entry.28, ptr @mvneta_probe._entry.31, ptr @mvneta_probe._entry_ptr, ptr @mvneta_probe._entry_ptr.22, ptr @mvneta_probe._entry_ptr.27, ptr @mvneta_probe._entry_ptr.30, ptr @mvneta_probe._entry_ptr.33, ptr @mvneta_resume._entry, ptr @mvneta_resume._entry.90, ptr @mvneta_resume._entry_ptr, ptr @mvneta_resume._entry_ptr.91, ptr @mvneta_rx_refill_queue._entry, ptr @mvneta_rx_refill_queue._entry_ptr, ptr @mvneta_tx_tso._entry, ptr @mvneta_tx_tso._entry_ptr, ptr @mvneta_driver, ptr @online_hpstate, ptr @rxq_number, ptr @txq_number, ptr @rxq_def, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @mvneta_match, ptr @mvneta_pm_ops, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @mvneta_probe.__key, ptr @.str.9, ptr @mvneta_phylink_ops, ptr @mvneta_netdev_ops, ptr @mvneta_eth_tool_ops, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @mvneta_phylink_pcs_ops, ptr @mvneta_probe.__key.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.20, ptr @.str.21, ptr @.str.23, ptr @global_port_id, ptr @.str.24, ptr @.str.26, ptr @.str.29, ptr @.str.32, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @mvneta_xdp_setup.__msg, ptr @mvneta_xdp_setup.__msg.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @mvneta_statistics, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @switch.table.mvneta_rx_error], section "llvm.metadata"
@0 = internal global [106 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_driver to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.104 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @online_hpstate to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.107 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxq_number to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.110 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @txq_number to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxq_def to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.116 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_match to i32), i32 784, i32 992, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.136 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_probe.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_phylink_ops to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.161 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_netdev_ops to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_eth_tool_ops to i32), i32 284, i32 352, i32 ptrtoint (ptr @___asan_gen_.167 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_phylink_pcs_ops to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_probe.__key.13 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_probe._entry.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @global_port_id to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_probe._entry.25 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_probe._entry.28 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_probe._entry.31 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_tx_tso._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_bm_pool_bufsize_set._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_xdp_setup.__msg to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_xdp_setup.__msg.68 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_statistics to i32), i32 1512, i32 1888, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_rx_refill_queue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mvneta_resume._entry.90 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.mvneta_rx_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_driver_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__cpuhp_setup_state(i32 noundef 194, ptr noundef nonnull @.str, i1 noundef zeroext false, ptr noundef nonnull @mvneta_cpu_online, ptr noundef nonnull @mvneta_cpu_down_prepare, i1 noundef zeroext true) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 %call.i, ptr @online_hpstate, align 4
  %call.i12 = tail call i32 @__cpuhp_setup_state(i32 noundef 17, ptr noundef nonnull @.str.1, i1 noundef zeroext false, ptr noundef null, ptr noundef nonnull @mvneta_cpu_dead, i1 noundef zeroext true) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12)
  %tobool.not = icmp eq i32 %call.i12, 0
  br i1 %tobool.not, label %if.end3, label %if.end.err_dead_crit_edge

if.end.err_dead_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_dead

if.end3:                                          ; preds = %if.end
  %call4 = tail call i32 @__platform_driver_register(ptr noundef nonnull @mvneta_driver, ptr noundef null) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end3.cleanup_crit_edge, label %err

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

err:                                              ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__cpuhp_remove_state(i32 noundef 17, i1 noundef zeroext false) #20
  br label %err_dead

err_dead:                                         ; preds = %err, %if.end.err_dead_crit_edge
  %ret.0 = phi i32 [ %call.i12, %if.end.err_dead_crit_edge ], [ %call4, %err ]
  %0 = load i32, ptr @online_hpstate, align 4
  tail call void @__cpuhp_remove_state(i32 noundef %0, i1 noundef zeroext false) #20
  br label %cleanup

cleanup:                                          ; preds = %err_dead, %if.end3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end3.cleanup_crit_edge ], [ %call.i, %entry.cleanup_crit_edge ], [ %ret.0, %err_dead ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_driver_exit() #0 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @platform_driver_unregister(ptr noundef nonnull @mvneta_driver) #20
  tail call void @__cpuhp_remove_state(i32 noundef 17, i1 noundef zeroext false) #20
  %0 = load i32, ptr @online_hpstate, align 4
  tail call void @__cpuhp_remove_state(i32 noundef %0, i1 noundef zeroext false) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @platform_driver_unregister(ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_cpu_online(i32 noundef %cpu, ptr noundef %node) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %node, null
  %add.ptr = getelementptr i8, ptr %node, i32 -36
  %spec.select = select i1 %tobool.not, ptr null, ptr %add.ptr
  %ports = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 1
  %0 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ports, align 4
  %2 = ptrtoint ptr %1 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx, align 4
  %add = add i32 %4, %2
  %5 = inttoptr i32 %add to ptr
  %neta_armada3700 = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 38
  %6 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool4.not = icmp eq i8 %7, 0
  br i1 %tobool4.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %lock = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 12
  tail call void @_raw_spin_lock(ptr noundef %lock) #20
  %is_stopped = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 13
  %8 = ptrtoint ptr %is_stopped to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %is_stopped, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool5.not = icmp eq i8 %9, 0
  br i1 %tobool5.not, label %if.end8, label %if.end.cleanup.sink.split_crit_edge

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.sink.split

if.end8:                                          ; preds = %if.end
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 8
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %11) #20
  %call45 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %12 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call45, i32 %12)
  %cmp46 = icmp ult i32 %call45, %12
  br i1 %cmp46, label %if.end8.for.body_crit_edge, label %if.end8.for.end_crit_edge

if.end8.for.end_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

if.end8.for.body_crit_edge:                       ; preds = %if.end8
  br label %for.body

for.body:                                         ; preds = %if.end21.for.body_crit_edge, %if.end8.for.body_crit_edge
  %call47 = phi i32 [ %call, %if.end21.for.body_crit_edge ], [ %call45, %if.end8.for.body_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %call47, i32 %cpu)
  %cmp9.not = icmp eq i32 %call47, %cpu
  br i1 %cmp9.not, label %for.body.if.end21_crit_edge, label %if.then10

for.body.if.end21_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end21

if.then10:                                        ; preds = %for.body
  %13 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ports, align 4
  %15 = ptrtoint ptr %14 to i32
  %arrayidx19 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call47
  %16 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx19, align 4
  %add20 = add i32 %17, %15
  %18 = inttoptr i32 %add20 to ptr
  %state.i = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %18, i32 0, i32 1, i32 1
  %19 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %state.i, align 4
  %and1.i1.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i1.i)
  %tobool.not2.i = icmp eq i32 %and1.i1.i, 0
  br i1 %tobool.not2.i, label %if.then10.if.end21_crit_edge, label %if.then10.while.body.i_crit_edge

if.then10.while.body.i_crit_edge:                 ; preds = %if.then10
  br label %while.body.i

if.then10.if.end21_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end21

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.then10.while.body.i_crit_edge
  tail call void @msleep(i32 noundef 1) #20
  %21 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %22, 1
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %while.body.i.if.end21_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.body.i.if.end21_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end21

if.end21:                                         ; preds = %while.body.i.if.end21_crit_edge, %if.then10.if.end21_crit_edge, %for.body.if.end21_crit_edge
  %call = tail call i32 @cpumask_next(i32 noundef %call47, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %23 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %23
  br i1 %cmp, label %if.end21.for.body_crit_edge, label %if.end21.for.end_crit_edge

if.end21.for.end_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

if.end21.for.body_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %if.end21.for.end_crit_edge, %if.end8.for.end_crit_edge
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_mask_interrupt, ptr noundef %spec.select, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  %napi22 = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %5, i32 0, i32 1
  tail call void @napi_enable(ptr noundef %napi22) #20
  %24 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dev, align 8
  %irq.i = getelementptr inbounds %struct.net_device, ptr %25, i32 0, i32 64
  %26 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %irq.i, align 4
  tail call void @enable_percpu_irq(i32 noundef %27, i32 noundef 0) #20
  tail call fastcc void @mvneta_percpu_elect(ptr noundef %spec.select)
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_unmask_interrupt, ptr noundef %spec.select, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 5
  %28 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %29, i32 9652
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 50331648) #20, !srcloc !256
  %30 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dev, align 8
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 104
  %32 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp4.not.i = icmp eq i32 %33, 0
  br i1 %cmp4.not.i, label %for.end.cleanup.sink.split_crit_edge, label %for.body.lr.ph.i

for.end.cleanup.sink.split_crit_edge:             ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.sink.split

for.body.lr.ph.i:                                 ; preds = %for.end
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %34 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %35, i32 %i.05.i, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #20
  %inc.i = add nuw i32 %i.05.i, 1
  %36 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %37
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.cleanup.sink.split_crit_edge

for.body.i.cleanup.sink.split_crit_edge:          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.sink.split

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

cleanup.sink.split:                               ; preds = %for.body.i.cleanup.sink.split_crit_edge, %for.end.cleanup.sink.split_crit_edge, %if.end.cleanup.sink.split_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #20
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_cpu_down_prepare(i32 noundef %cpu, ptr noundef %node) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %node, null
  %add.ptr = getelementptr i8, ptr %node, i32 -36
  %spec.select = select i1 %tobool.not, ptr null, ptr %add.ptr
  %ports = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 1
  %0 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ports, align 4
  %2 = ptrtoint ptr %1 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx, align 4
  %add = add i32 %4, %2
  %5 = inttoptr i32 %add to ptr
  %lock = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 12
  tail call void @_raw_spin_lock(ptr noundef %lock) #20
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_mask_interrupt, ptr noundef %spec.select, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call void @_raw_spin_unlock(ptr noundef %lock) #20
  %state.i = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %5, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i, align 4
  %and1.i1.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i1.i)
  %tobool.not2.i = icmp eq i32 %and1.i1.i, 0
  br i1 %tobool.not2.i, label %entry.napi_synchronize.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.napi_synchronize.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_synchronize.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  tail call void @msleep(i32 noundef 1) #20
  %8 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %9, 1
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %while.body.i.napi_synchronize.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.body.i.napi_synchronize.exit_crit_edge:     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_synchronize.exit

napi_synchronize.exit:                            ; preds = %while.body.i.napi_synchronize.exit_crit_edge, %entry.napi_synchronize.exit_crit_edge
  %napi = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %5, i32 0, i32 1
  tail call void @napi_disable(ptr noundef %napi) #20
  %dev.i = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 8
  %10 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev.i, align 8
  %irq.i = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 64
  %12 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %irq.i, align 4
  tail call void @disable_percpu_irq(i32 noundef %13) #20
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_cpu_dead(i32 noundef %cpu, ptr noundef %node) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %node, null
  %add.ptr = getelementptr i8, ptr %node, i32 -44
  %spec.select = select i1 %tobool.not, ptr null, ptr %add.ptr
  %lock = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 12
  tail call void @_raw_spin_lock(ptr noundef %lock) #20
  tail call fastcc void @mvneta_percpu_elect(ptr noundef %spec.select)
  tail call void @_raw_spin_unlock(ptr noundef %lock) #20
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_unmask_interrupt, ptr noundef %spec.select, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 5
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 9652
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 50331648) #20, !srcloc !256
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %spec.select, i32 0, i32 8
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 8
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 104
  %4 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp4.not.i = icmp eq i32 %5, 0
  br i1 %cmp4.not.i, label %entry.netif_tx_start_all_queues.exit_crit_edge, label %for.body.lr.ph.i

entry.netif_tx_start_all_queues.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %netif_tx_start_all_queues.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %6 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %7, i32 %i.05.i, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #20
  %inc.i = add nuw i32 %i.05.i, 1
  %8 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %9
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.netif_tx_start_all_queues.exit_crit_edge

for.body.i.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %netif_tx_start_all_queues.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

netif_tx_start_all_queues.exit:                   ; preds = %for.body.i.netif_tx_start_all_queues.exit_crit_edge, %entry.netif_tx_start_all_queues.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__platform_driver_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_setup_state(i32 noundef, ptr noundef, i1 noundef zeroext, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_stop_all_queues(ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_percpu_mask_interrupt(ptr nocapture noundef readonly %arg) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %arg, i32 0, i32 5
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 9636
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %2 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i, align 4
  %add.ptr.i4 = getelementptr i8, ptr %3, i32 9644
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i4, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %4 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %base.i, align 4
  %add.ptr.i6 = getelementptr i8, ptr %5, i32 9652
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6, i32 0) #20, !srcloc !256
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_enable(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_percpu_enable(ptr nocapture noundef readonly %arg) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %arg, i32 0, i32 8
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %irq = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 64
  %2 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %irq, align 4
  tail call void @enable_percpu_irq(i32 noundef %3, i32 noundef 0) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_percpu_elect(ptr noundef %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %rxq_def = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 11
  %0 = ptrtoint ptr %rxq_def to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rxq_def, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %1)
  %cmp.not.i.i.i.i = icmp ugt i32 %2, %1
  br i1 %cmp.not.i.i.i.i, label %entry.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

entry.cpu_online.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %entry
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !257

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %entry.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %1, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %3 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %1, 31
  %5 = shl nuw i32 1, %and.i.i.i
  %6 = and i32 %4, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not = icmp eq i32 %6, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end.i.i_crit_edge, label %if.then

cpu_online.exit.if.end.i.i_crit_edge:             ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

if.then:                                          ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %7 = ptrtoint ptr %rxq_def to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rxq_def, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then, %cpu_online.exit.if.end.i.i_crit_edge
  %elected_cpu.0 = phi i32 [ %8, %if.then ], [ 0, %cpu_online.exit.if.end.i.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_present_mask, i32 noundef %9) #20
  %call352 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %10 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call352, i32 %10)
  %cmp53 = icmp ult i32 %call352, %10
  br i1 %cmp53, label %for.cond4.preheader.lr.ph, label %if.end.i.i.for.end27_crit_edge

if.end.i.i.for.end27_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end27

for.cond4.preheader.lr.ph:                        ; preds = %if.end.i.i
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %if.end21.for.cond4.preheader_crit_edge, %for.cond4.preheader.lr.ph
  %call354 = phi i32 [ %call352, %for.cond4.preheader.lr.ph ], [ %call3, %if.end21.for.cond4.preheader_crit_edge ]
  %11 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp549 = icmp sgt i32 %11, 0
  br i1 %cmp549, label %for.cond4.preheader.for.body6_crit_edge, label %for.cond4.preheader.for.end_crit_edge

for.cond4.preheader.for.end_crit_edge:            ; preds = %for.cond4.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.cond4.preheader.for.body6_crit_edge:          ; preds = %for.cond4.preheader
  br label %for.body6

for.body6:                                        ; preds = %for.body6.for.body6_crit_edge, %for.cond4.preheader.for.body6_crit_edge
  %rxq.051 = phi i32 [ %inc, %for.body6.for.body6_crit_edge ], [ 0, %for.cond4.preheader.for.body6_crit_edge ]
  %rxq_map.050 = phi i32 [ %rxq_map.1, %for.body6.for.body6_crit_edge ], [ 0, %for.cond4.preheader.for.body6_crit_edge ]
  %rem = srem i32 %rxq.051, %call4.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %rem, i32 %call354)
  %cmp7 = icmp eq i32 %rem, %call354
  %shl = shl nuw i32 1, %rxq.051
  %or = select i1 %cmp7, i32 %shl, i32 0
  %rxq_map.1 = or i32 %or, %rxq_map.050
  %inc = add nuw nsw i32 %rxq.051, 1
  %exitcond.not = icmp eq i32 %inc, %11
  br i1 %exitcond.not, label %for.body6.for.end_crit_edge, label %for.body6.for.body6_crit_edge

for.body6.for.body6_crit_edge:                    ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body6

for.body6.for.end_crit_edge:                      ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %for.body6.for.end_crit_edge, %for.cond4.preheader.for.end_crit_edge
  %rxq_map.0.lcssa = phi i32 [ 0, %for.cond4.preheader.for.end_crit_edge ], [ %rxq_map.1, %for.body6.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %call354, i32 %elected_cpu.0)
  %cmp10 = icmp eq i32 %call354, %elected_cpu.0
  br i1 %cmp10, label %if.then11, label %for.end.if.end15_crit_edge

for.end.if.end15_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.then11:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  %12 = ptrtoint ptr %rxq_def to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rxq_def, align 4
  %shl13 = shl nuw i32 1, %13
  %or14 = or i32 %shl13, %rxq_map.0.lcssa
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %for.end.if.end15_crit_edge
  %rxq_map.2 = phi i32 [ %or14, %if.then11 ], [ %rxq_map.0.lcssa, %for.end.if.end15_crit_edge ]
  %14 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp16 = icmp eq i32 %14, 1
  br i1 %cmp16, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  %cond = select i1 %cmp10, i32 512, i32 0
  %.pre = shl i32 %call354, 2
  %.pre55 = add i32 %.pre, 9536
  br label %if.end21

if.else:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  %shl19 = shl i32 %call354, 2
  %add = add i32 %shl19, 9536
  %15 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %16, i32 %add
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #20, !srcloc !258
  %18 = lshr i32 %17, 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and = and i32 %18, 65280
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then17
  %add23.pre-phi = phi i32 [ %add, %if.else ], [ %.pre55, %if.then17 ]
  %txq_map.0 = phi i32 [ %and, %if.else ], [ %cond, %if.then17 ]
  %or24 = or i32 %txq_map.0, %rxq_map.2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %19 = tail call i32 @llvm.bswap.i32(i32 %or24) #20
  %20 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %base.i, align 4
  %add.ptr.i48 = getelementptr i8, ptr %21, i32 %add23.pre-phi
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i48, i32 %19) #20, !srcloc !256
  %call25 = tail call i32 @smp_call_function_single(i32 noundef %call354, ptr noundef nonnull @mvneta_percpu_unmask_interrupt, ptr noundef %pp, i32 noundef 1) #20
  %call3 = tail call i32 @cpumask_next(i32 noundef %call354, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %22 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call3, %22
  br i1 %cmp, label %if.end21.for.cond4.preheader_crit_edge, label %if.end21.for.end27_crit_edge

if.end21.for.end27_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end27

if.end21.for.cond4.preheader_crit_edge:           ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond4.preheader

for.end27:                                        ; preds = %if.end21.for.end27_crit_edge, %if.end.i.i.for.end27_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_percpu_unmask_interrupt(ptr nocapture noundef readonly %arg) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %arg, i32 0, i32 5
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 9636
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 -65408) #20, !srcloc !256
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @on_each_cpu_cond_mask(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @enable_percpu_irq(i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smp_call_function_single(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_disable(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_percpu_disable(ptr nocapture noundef readonly %arg) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %arg, i32 0, i32 8
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %irq = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 64
  %2 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %irq, align 4
  tail call void @disable_percpu_irq(i32 noundef %3) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @disable_percpu_irq(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_probe(ptr noundef %pdev) #3 align 64 {
entry:
  %hw_mac_addr = alloca [6 x i8], align 4
  %phy_mode = alloca i32, align 4
  %tx_csum_limit = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  %of_node = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %hw_mac_addr) #20
  %2 = getelementptr inbounds [6 x i8], ptr %hw_mac_addr, i32 0, i32 1
  %3 = getelementptr inbounds [6 x i8], ptr %hw_mac_addr, i32 0, i32 2
  %4 = getelementptr inbounds [6 x i8], ptr %hw_mac_addr, i32 0, i32 3
  %5 = getelementptr inbounds [6 x i8], ptr %hw_mac_addr, i32 0, i32 4
  %6 = getelementptr inbounds [6 x i8], ptr %hw_mac_addr, i32 0, i32 5
  %7 = call ptr @memset(ptr %hw_mac_addr, i32 255, i32 6)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %phy_mode) #20
  %8 = ptrtoint ptr %phy_mode to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %phy_mode, align 4, !annotation !260
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tx_csum_limit) #20
  %9 = ptrtoint ptr %tx_csum_limit to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %tx_csum_limit, align 4, !annotation !260
  %10 = load i32, ptr @txq_number, align 4
  %11 = load i32, ptr @rxq_number, align 4
  %call = tail call ptr @devm_alloc_etherdev_mqs(ptr noundef %dev, i32 noundef 1032, i32 noundef %10, i32 noundef %11) #20
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @irq_of_parse_and_map(ptr noundef %1, i32 noundef 0) #20
  %irq = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 64
  %12 = ptrtoint ptr %irq to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %call3, ptr %irq, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp = icmp eq i32 %call3, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call7 = call i32 @of_get_phy_mode(ptr noundef %1, ptr noundef nonnull %phy_mode) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end11, label %do.end

do.end:                                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.4) #24
  br label %err_free_irq

if.end11:                                         ; preds = %if.end6
  %call13 = call ptr @devm_of_phy_get(ptr noundef %dev, ptr noundef %1, ptr noundef null) #20
  %cmp15 = icmp eq ptr %call13, inttoptr (i32 -517 to ptr)
  br i1 %cmp15, label %if.end11.err_free_irq_crit_edge, label %if.else

if.end11.err_free_irq_crit_edge:                  ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_free_irq

if.else:                                          ; preds = %if.end11
  %cmp.i = icmp ugt ptr %call13, inttoptr (i32 -4096 to ptr)
  %spec.select = select i1 %cmp.i, ptr null, ptr %call13
  %add.ptr.i = getelementptr i8, ptr %call, i32 2304
  %lock = getelementptr i8, ptr %call, i32 2360
  call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.9, ptr noundef nonnull @mvneta_probe.__key, i16 noundef signext 3) #20
  %dev26 = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 133
  %phylink_config = getelementptr i8, ptr %call, i32 2928
  %13 = ptrtoint ptr %phylink_config to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %dev26, ptr %phylink_config, align 8
  %type = getelementptr i8, ptr %call, i32 2932
  %14 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %type, align 4
  %mac_capabilities = getelementptr i8, ptr %call, i32 2948
  %15 = ptrtoint ptr %mac_capabilities to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 445, ptr %mac_capabilities, align 4
  %supported_interfaces = getelementptr i8, ptr %call, i32 2944
  %16 = ptrtoint ptr %supported_interfaces to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %supported_interfaces, align 4
  %or.i = or i32 %17, 269824
  store i32 %or.i, ptr %supported_interfaces, align 4
  %tobool34.not = icmp eq ptr %spec.select, null
  br i1 %tobool34.not, label %if.else45, label %if.else.if.end63.sink.split_crit_edge

if.else.if.end63.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end63.sink.split

if.else45:                                        ; preds = %if.else
  %18 = ptrtoint ptr %phy_mode to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %phy_mode, align 4
  %20 = zext i32 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values)
  switch i32 %19, label %if.else45.if.end63_crit_edge [
    i32 22, label %if.else45.if.end63.sink.split_crit_edge
    i32 21, label %if.else45.if.then54_crit_edge
    i32 4, label %if.else45.if.then54_crit_edge478
  ]

if.else45.if.then54_crit_edge478:                 ; preds = %if.else45
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then54

if.else45.if.then54_crit_edge:                    ; preds = %if.else45
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then54

if.else45.if.end63.sink.split_crit_edge:          ; preds = %if.else45
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end63.sink.split

if.else45.if.end63_crit_edge:                     ; preds = %if.else45
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end63

if.then54:                                        ; preds = %if.else45.if.then54_crit_edge, %if.else45.if.then54_crit_edge478
  br label %if.end63.sink.split

if.end63.sink.split:                              ; preds = %if.then54, %if.else45.if.end63.sink.split_crit_edge, %if.else.if.end63.sink.split_crit_edge
  %.sink = phi i32 [ 2366992, %if.then54 ], [ 6561296, %if.else.if.end63.sink.split_crit_edge ], [ 4464128, %if.else45.if.end63.sink.split_crit_edge ]
  %or.i449 = or i32 %17, %.sink
  %21 = ptrtoint ptr %supported_interfaces to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %or.i449, ptr %supported_interfaces, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.end63.sink.split, %if.else45.if.end63_crit_edge
  %fwnode = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 28
  %22 = ptrtoint ptr %fwnode to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %fwnode, align 4
  %24 = ptrtoint ptr %phy_mode to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %phy_mode, align 4
  %call66 = call ptr @phylink_create(ptr noundef %phylink_config, ptr noundef %23, i32 noundef %25, ptr noundef nonnull @mvneta_phylink_ops) #20
  %cmp.i452 = icmp ugt ptr %call66, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i452, label %if.then68, label %if.end70

if.then68:                                        ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #22
  %26 = ptrtoint ptr %call66 to i32
  br label %err_free_irq

if.end70:                                         ; preds = %if.end63
  %tx_queue_len = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 107
  %27 = ptrtoint ptr %tx_queue_len to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 1024, ptr %tx_queue_len, align 16
  %watchdog_timeo = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 115
  %28 = ptrtoint ptr %watchdog_timeo to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 500, ptr %watchdog_timeo, align 4
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 16
  %29 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @mvneta_netdev_ops, ptr %netdev_ops, align 8
  %ethtool_ops = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 44
  %30 = ptrtoint ptr %ethtool_ops to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr @mvneta_eth_tool_ops, ptr %ethtool_ops, align 16
  %phylink71 = getelementptr i8, ptr %call, i32 2924
  %31 = ptrtoint ptr %phylink71 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call66, ptr %phylink71, align 4
  %comphy72 = getelementptr i8, ptr %call, i32 2960
  %32 = ptrtoint ptr %comphy72 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %spec.select, ptr %comphy72, align 8
  %33 = ptrtoint ptr %phy_mode to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %phy_mode, align 4
  %phy_interface = getelementptr i8, ptr %call, i32 2912
  %35 = ptrtoint ptr %phy_interface to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %phy_interface, align 8
  %dn73 = getelementptr i8, ptr %call, i32 2916
  %36 = ptrtoint ptr %dn73 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %1, ptr %dn73, align 4
  %37 = load i32, ptr @rxq_def, align 4
  %rxq_def = getelementptr i8, ptr %call, i32 2356
  %38 = ptrtoint ptr %rxq_def to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %rxq_def, align 4
  %indir = getelementptr i8, ptr %call, i32 3320
  %39 = ptrtoint ptr %indir to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %37, ptr %indir, align 8
  %call74 = call i32 @of_device_is_compatible(ptr noundef %1, ptr noundef nonnull @.str.10) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74)
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %if.end70.if.end77_crit_edge, label %if.then76

if.end70.if.end77_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end77

if.then76:                                        ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #22
  %neta_armada3700 = getelementptr i8, ptr %call, i32 3324
  %40 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 1, ptr %neta_armada3700, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.end70.if.end77_crit_edge
  %call79 = call ptr @devm_clk_get(ptr noundef %dev, ptr noundef nonnull @.str.11) #20
  %clk = getelementptr i8, ptr %call, i32 2644
  %41 = ptrtoint ptr %clk to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %call79, ptr %clk, align 4
  %cmp.i453 = icmp ugt ptr %call79, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i453, label %if.then82, label %if.end77.if.end86_crit_edge

if.end77.if.end86_crit_edge:                      ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end86

if.then82:                                        ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #22
  %call84 = call ptr @devm_clk_get(ptr noundef %dev, ptr noundef null) #20
  %42 = ptrtoint ptr %clk to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %call84, ptr %clk, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then82, %if.end77.if.end86_crit_edge
  %43 = phi ptr [ %call84, %if.then82 ], [ %call79, %if.end77.if.end86_crit_edge ]
  %cmp.i454 = icmp ugt ptr %43, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i454, label %if.then89, label %if.end92

if.then89:                                        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #22
  %44 = ptrtoint ptr %43 to i32
  br label %err_free_phylink

if.end92:                                         ; preds = %if.end86
  %call.i = call i32 @clk_prepare(ptr noundef %43) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end92.clk_prepare_enable.exit_crit_edge

if.end92.clk_prepare_enable.exit_crit_edge:       ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #22
  br label %clk_prepare_enable.exit

if.end.i:                                         ; preds = %if.end92
  %call1.i = call i32 @clk_enable(ptr noundef %43) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end.i.clk_prepare_enable.exit_crit_edge, label %if.then3.i

if.end.i.clk_prepare_enable.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %clk_prepare_enable.exit

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @clk_unprepare(ptr noundef %43) #20
  br label %clk_prepare_enable.exit

clk_prepare_enable.exit:                          ; preds = %if.then3.i, %if.end.i.clk_prepare_enable.exit_crit_edge, %if.end92.clk_prepare_enable.exit_crit_edge
  %call96 = call ptr @devm_clk_get(ptr noundef %dev, ptr noundef nonnull @.str.12) #20
  %clk_bus = getelementptr i8, ptr %call, i32 2648
  %45 = ptrtoint ptr %clk_bus to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %call96, ptr %clk_bus, align 8
  %cmp.i455 = icmp ugt ptr %call96, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i455, label %clk_prepare_enable.exit.if.end102_crit_edge, label %if.then99

clk_prepare_enable.exit.if.end102_crit_edge:      ; preds = %clk_prepare_enable.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end102

if.then99:                                        ; preds = %clk_prepare_enable.exit
  %call.i456 = call i32 @clk_prepare(ptr noundef %call96) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i456)
  %tobool.not.i457 = icmp eq i32 %call.i456, 0
  br i1 %tobool.not.i457, label %if.end.i460, label %if.then99.if.end102_crit_edge

if.then99.if.end102_crit_edge:                    ; preds = %if.then99
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end102

if.end.i460:                                      ; preds = %if.then99
  %call1.i458 = call i32 @clk_enable(ptr noundef %call96) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i458)
  %tobool2.not.i459 = icmp eq i32 %call1.i458, 0
  br i1 %tobool2.not.i459, label %if.end.i460.if.end102_crit_edge, label %if.then3.i461

if.end.i460.if.end102_crit_edge:                  ; preds = %if.end.i460
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end102

if.then3.i461:                                    ; preds = %if.end.i460
  call void @__sanitizer_cov_trace_pc() #22
  call void @clk_unprepare(ptr noundef %call96) #20
  br label %if.end102

if.end102:                                        ; preds = %if.then3.i461, %if.end.i460.if.end102_crit_edge, %if.then99.if.end102_crit_edge, %clk_prepare_enable.exit.if.end102_crit_edge
  %call103 = call ptr @devm_platform_ioremap_resource(ptr noundef %pdev, i32 noundef 0) #20
  %base = getelementptr i8, ptr %call, i32 2324
  %46 = ptrtoint ptr %base to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %call103, ptr %base, align 4
  %cmp.i463 = icmp ugt ptr %call103, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i463, label %if.then106, label %if.end109

if.then106:                                       ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #22
  %47 = ptrtoint ptr %call103 to i32
  br label %err_clk

if.end109:                                        ; preds = %if.end102
  %phylink_pcs = getelementptr i8, ptr %call, i32 2952
  %48 = ptrtoint ptr %phylink_pcs to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @mvneta_phylink_pcs_ops, ptr %phylink_pcs, align 8
  call void @phylink_set_pcs(ptr noundef %call66, ptr noundef %phylink_pcs) #20
  %call111 = call noalias ptr @__alloc_percpu(i32 noundef 240, i32 noundef 8) #25
  %ports = getelementptr i8, ptr %call, i32 2308
  %49 = ptrtoint ptr %ports to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %call111, ptr %ports, align 4
  %tobool113.not = icmp eq ptr %call111, null
  br i1 %tobool113.not, label %if.end109.err_clk_crit_edge, label %if.end115

if.end109.err_clk_crit_edge:                      ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_clk

if.end115:                                        ; preds = %if.end109
  %call116 = call noalias ptr @__alloc_percpu_gfp(i32 noundef 152, i32 noundef 8, i32 noundef 3264) #25
  %tobool117.not = icmp eq ptr %call116, null
  br i1 %tobool117.not, label %if.end129.thread, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end115
  %call119472 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %50 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call119472, i32 %50)
  %cmp120473 = icmp ult i32 %call119472, %50
  br i1 %cmp120473, label %for.body.lr.ph, label %for.cond.preheader.if.end134_crit_edge

for.cond.preheader.if.end134_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end134

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %51 = ptrtoint ptr %call116 to i32
  br label %for.body

if.end129.thread:                                 ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #22
  %stats468 = getelementptr i8, ptr %call, i32 2312
  %52 = ptrtoint ptr %stats468 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr null, ptr %stats468, align 8
  br label %err_free_ports

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %call119474 = phi i32 [ %call119472, %for.body.lr.ph ], [ %call119, %for.body.for.body_crit_edge ]
  %arrayidx125 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call119474
  %53 = ptrtoint ptr %arrayidx125 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx125, align 4
  %add = add i32 %54, %51
  %55 = inttoptr i32 %add to ptr
  %dep_map.i = getelementptr inbounds %struct.seqcount, ptr %55, i32 0, i32 1
  call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef nonnull @.str.14, ptr noundef nonnull @mvneta_probe.__key.13, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #20
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %55, align 4
  %call119 = call i32 @cpumask_next(i32 noundef %call119474, ptr noundef nonnull @__cpu_possible_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %57 = load i32, ptr @nr_cpu_ids, align 4
  %cmp120 = icmp ult i32 %call119, %57
  br i1 %cmp120, label %for.body.for.body_crit_edge, label %for.body.if.end134_crit_edge

for.body.if.end134_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end134

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end134:                                        ; preds = %for.body.if.end134_crit_edge, %for.cond.preheader.if.end134_crit_edge
  %stats = getelementptr i8, ptr %call, i32 2312
  %58 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %call116, ptr %stats, align 8
  %call135 = call i32 @of_get_ethdev_address(ptr noundef %1, ptr noundef %call) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call135)
  %tobool136.not = icmp eq i32 %call135, 0
  br i1 %tobool136.not, label %if.end134.if.end146_crit_edge, label %if.else138

if.end134.if.end146_crit_edge:                    ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end146

if.else138:                                       ; preds = %if.end134
  %59 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %base, align 4
  %add.ptr.i.i = getelementptr i8, ptr %60, i32 9236
  %61 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  %62 = call i32 @llvm.bswap.i32(i32 %61) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %63 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %base, align 4
  %add.ptr.i31.i = getelementptr i8, ptr %64, i32 9240
  %65 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i31.i) #20, !srcloc !258
  %66 = call i32 @llvm.bswap.i32(i32 %65) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %shr.i = lshr i32 %66, 24
  %conv.i = trunc i32 %shr.i to i8
  %67 = ptrtoint ptr %hw_mac_addr to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 %conv.i, ptr %hw_mac_addr, align 4
  %shr2.i = lshr i32 %66, 16
  %conv4.i = trunc i32 %shr2.i to i8
  %68 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 %conv4.i, ptr %2, align 1
  %shr6.i = lshr i32 %66, 8
  %conv8.i = trunc i32 %shr6.i to i8
  %69 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 %conv8.i, ptr %3, align 2
  %conv11.i = trunc i32 %66 to i8
  %70 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %conv11.i, ptr %4, align 1
  %shr13.i = lshr i32 %62, 8
  %conv15.i = trunc i32 %shr13.i to i8
  %71 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %conv15.i, ptr %5, align 4
  %conv18.i = trunc i32 %62 to i8
  %72 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %72)
  store i8 %conv18.i, ptr %6, align 1
  %73 = load i32, ptr %hw_mac_addr, align 4
  %74 = and i32 %73, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool.i.not.i = icmp eq i32 %74, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %if.else138.if.else144_crit_edge

if.else138.if.else144_crit_edge:                  ; preds = %if.else138
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else144

is_valid_ether_addr.exit:                         ; preds = %if.else138
  %75 = ptrtoint ptr %5 to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %5, align 4
  %conv.i.i = zext i16 %76 to i32
  %or.i.i = or i32 %73, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.if.else144_crit_edge, label %if.then142

is_valid_ether_addr.exit.if.else144_crit_edge:    ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else144

if.then142:                                       ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #22
  call void @dev_addr_mod(ptr noundef %call, i32 noundef 0, ptr noundef nonnull %hw_mac_addr, i32 noundef 6) #20
  br label %if.end146

if.else144:                                       ; preds = %is_valid_ether_addr.exit.if.else144_crit_edge, %if.else138.if.else144_crit_edge
  call fastcc void @eth_hw_addr_random(ptr noundef %call)
  br label %if.end146

if.end146:                                        ; preds = %if.else144, %if.then142, %if.end134.if.end146_crit_edge
  %mac_from.0 = phi ptr [ @.str.16, %if.then142 ], [ @.str.17, %if.else144 ], [ @.str.15, %if.end134.if.end146_crit_edge ]
  %call.i.i = call i32 @of_property_read_variable_u32_array(ptr noundef %1, ptr noundef nonnull @.str.18, ptr noundef nonnull %tx_csum_limit, i32 noundef 1, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i)
  %tobool148.not = icmp sgt i32 %call.i.i, -1
  br i1 %tobool148.not, label %if.then149, label %if.else159

if.then149:                                       ; preds = %if.end146
  %77 = ptrtoint ptr %tx_csum_limit to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %tx_csum_limit, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9800, i32 %78)
  %79 = icmp ugt i32 %78, 9800
  br i1 %79, label %if.then153, label %if.then149.if.end165_crit_edge

if.then149.if.end165_crit_edge:                   ; preds = %if.then149
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end165

if.then153:                                       ; preds = %if.then149
  call void @__sanitizer_cov_trace_pc() #22
  %80 = ptrtoint ptr %tx_csum_limit to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 1600, ptr %tx_csum_limit, align 4
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.20, i32 noundef 1600) #24
  br label %if.end165

if.else159:                                       ; preds = %if.end146
  %call160 = call i32 @of_device_is_compatible(ptr noundef %1, ptr noundef nonnull @.str.23) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call160)
  %tobool161.not = icmp eq i32 %call160, 0
  br i1 %tobool161.not, label %if.else163, label %if.then162

if.then162:                                       ; preds = %if.else159
  call void @__sanitizer_cov_trace_pc() #22
  %81 = ptrtoint ptr %tx_csum_limit to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 1600, ptr %tx_csum_limit, align 4
  br label %if.end165

if.else163:                                       ; preds = %if.else159
  call void @__sanitizer_cov_trace_pc() #22
  %82 = ptrtoint ptr %tx_csum_limit to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 9800, ptr %tx_csum_limit, align 4
  br label %if.end165

if.end165:                                        ; preds = %if.else163, %if.then162, %if.then153, %if.then149.if.end165_crit_edge
  %83 = ptrtoint ptr %tx_csum_limit to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %tx_csum_limit, align 4
  %tx_csum_limit166 = getelementptr i8, ptr %call, i32 2920
  %85 = ptrtoint ptr %tx_csum_limit166 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %84, ptr %tx_csum_limit166, align 8
  %call167 = call ptr @mv_mbus_dram_info() #20
  %dram_target_info = getelementptr i8, ptr %call, i32 3328
  %86 = ptrtoint ptr %dram_target_info to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %call167, ptr %dram_target_info, align 8
  %tobool169.not = icmp eq ptr %call167, null
  br i1 %tobool169.not, label %lor.lhs.false170, label %if.end165.if.then173_crit_edge

if.end165.if.then173_crit_edge:                   ; preds = %if.end165
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then173

lor.lhs.false170:                                 ; preds = %if.end165
  %neta_armada3700171 = getelementptr i8, ptr %call, i32 3324
  %87 = ptrtoint ptr %neta_armada3700171 to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %neta_armada3700171, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %88)
  %tobool172.not = icmp eq i8 %88, 0
  br i1 %tobool172.not, label %lor.lhs.false170.if.end175_crit_edge, label %lor.lhs.false170.if.then173_crit_edge

lor.lhs.false170.if.then173_crit_edge:            ; preds = %lor.lhs.false170
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then173

lor.lhs.false170.if.end175_crit_edge:             ; preds = %lor.lhs.false170
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end175

if.then173:                                       ; preds = %lor.lhs.false170.if.then173_crit_edge, %if.end165.if.then173_crit_edge
  call fastcc void @mvneta_conf_mbus_windows(ptr noundef %add.ptr.i, ptr noundef %call167)
  br label %if.end175

if.end175:                                        ; preds = %if.then173, %lor.lhs.false170.if.end175_crit_edge
  %tx_ring_size = getelementptr i8, ptr %call, i32 2908
  %89 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 1024, ptr %tx_ring_size, align 4
  %rx_ring_size = getelementptr i8, ptr %call, i32 2910
  %90 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_store2_noabort(i32 %90)
  store i16 512, ptr %rx_ring_size, align 2
  %dev176 = getelementptr i8, ptr %call, i32 2336
  %91 = ptrtoint ptr %dev176 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %call, ptr %dev176, align 8
  %parent = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 133, i32 1
  %92 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %dev, ptr %parent, align 8
  %93 = load i32, ptr @global_port_id, align 4
  %inc = add i32 %93, 1
  store i32 %inc, ptr @global_port_id, align 4
  %conv = trunc i32 %93 to i8
  %94 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store1_noabort(i32 %94)
  store i8 %conv, ptr %add.ptr.i, align 8
  %call179 = call fastcc ptr @of_parse_phandle(ptr noundef %1)
  %tobool180.not = icmp eq ptr %call179, null
  br i1 %tobool180.not, label %if.end175.if.end198_crit_edge, label %if.then181

if.end175.if.end198_crit_edge:                    ; preds = %if.end175
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end198

if.then181:                                       ; preds = %if.end175
  %call182 = call ptr @mvneta_bm_get(ptr noundef nonnull %call179) #20
  %bm_priv = getelementptr i8, ptr %call, i32 2964
  %95 = ptrtoint ptr %bm_priv to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %call182, ptr %bm_priv, align 4
  %tobool184.not = icmp eq ptr %call182, null
  br i1 %tobool184.not, label %if.then181.if.end197_crit_edge, label %if.then185

if.then181.if.end197_crit_edge:                   ; preds = %if.then181
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end197

if.then185:                                       ; preds = %if.then181
  %call186 = call fastcc i32 @mvneta_bm_port_init(ptr noundef %pdev, ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call186)
  %cmp187 = icmp slt i32 %call186, 0
  br i1 %cmp187, label %do.end192, label %if.then185.if.end197_crit_edge

if.then185.if.end197_crit_edge:                   ; preds = %if.then185
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end197

do.end192:                                        ; preds = %if.then185
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.26) #24
  %96 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %bm_priv, align 4
  call void @mvneta_bm_put(ptr noundef %97) #20
  %98 = ptrtoint ptr %bm_priv to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr null, ptr %bm_priv, align 4
  br label %if.end197

if.end197:                                        ; preds = %do.end192, %if.then185.if.end197_crit_edge, %if.then181.if.end197_crit_edge
  %rx_offset_correction = getelementptr i8, ptr %call, i32 3326
  %99 = ptrtoint ptr %rx_offset_correction to i32
  call void @__asan_store2_noabort(i32 %99)
  store i16 64, ptr %rx_offset_correction, align 2
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.end175.if.end198_crit_edge
  call void @of_node_put(ptr noundef %call179) #20
  %bm_priv199 = getelementptr i8, ptr %call, i32 2964
  %100 = ptrtoint ptr %bm_priv199 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %bm_priv199, align 4
  %tobool200.not = icmp eq ptr %101, null
  br i1 %tobool200.not, label %if.then201, label %if.end198.if.end203_crit_edge

if.end198.if.end203_crit_edge:                    ; preds = %if.end198
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end203

if.then201:                                       ; preds = %if.end198
  call void @__sanitizer_cov_trace_pc() #22
  %rx_offset_correction202 = getelementptr i8, ptr %call, i32 3326
  %102 = ptrtoint ptr %rx_offset_correction202 to i32
  call void @__asan_store2_noabort(i32 %102)
  store i16 256, ptr %rx_offset_correction202, align 2
  br label %if.end203

if.end203:                                        ; preds = %if.then201, %if.end198.if.end203_crit_edge
  %call205 = call fastcc i32 @mvneta_init(ptr noundef %dev, ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call205)
  %cmp206 = icmp slt i32 %call205, 0
  br i1 %cmp206, label %if.end203.err_netdev_crit_edge, label %if.end209

if.end203.err_netdev_crit_edge:                   ; preds = %if.end203
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_netdev

if.end209:                                        ; preds = %if.end203
  %103 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %phy_interface, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %105 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %base, align 4
  %add.ptr.i.i466 = getelementptr i8, ptr %106, i32 8320
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i466, i32 0) #20, !srcloc !256
  %107 = zext i32 %104 to i64
  call void @__sanitizer_cov_trace_switch(i64 %107, ptr @__sancov_gen_cov_switch_values.92)
  switch i32 %104, label %if.end209.err_netdev.sink.split_crit_edge [
    i32 18, label %if.end209.if.end219_crit_edge
    i32 4, label %if.end209.if.end219_crit_edge479
    i32 22, label %if.end209.if.end219_crit_edge480
    i32 21, label %if.end209.if.end219_crit_edge481
    i32 12, label %if.end209.if.end219_crit_edge482
    i32 11, label %if.end209.if.end219_crit_edge483
    i32 10, label %if.end209.if.end219_crit_edge484
    i32 9, label %if.end209.if.end219_crit_edge485
  ]

if.end209.if.end219_crit_edge485:                 ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end219

if.end209.if.end219_crit_edge484:                 ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end219

if.end209.if.end219_crit_edge483:                 ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end219

if.end209.if.end219_crit_edge482:                 ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end219

if.end209.if.end219_crit_edge481:                 ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end219

if.end209.if.end219_crit_edge480:                 ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end219

if.end209.if.end219_crit_edge479:                 ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end219

if.end209.if.end219_crit_edge:                    ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end219

if.end209.err_netdev.sink.split_crit_edge:        ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_netdev.sink.split

if.end219:                                        ; preds = %if.end209.if.end219_crit_edge, %if.end209.if.end219_crit_edge479, %if.end209.if.end219_crit_edge480, %if.end209.if.end219_crit_edge481, %if.end209.if.end219_crit_edge482, %if.end209.if.end219_crit_edge483, %if.end209.if.end219_crit_edge484, %if.end209.if.end219_crit_edge485
  %neta_armada3700220 = getelementptr i8, ptr %call, i32 3324
  %108 = ptrtoint ptr %neta_armada3700220 to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %neta_armada3700220, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %109)
  %tobool221.not = icmp eq i8 %109, 0
  br i1 %tobool221.not, label %for.cond224.preheader, label %if.then222

for.cond224.preheader:                            ; preds = %if.end219
  %call225475 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_present_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %110 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call225475, i32 %110)
  %cmp226476 = icmp ult i32 %call225475, %110
  br i1 %cmp226476, label %for.cond224.preheader.for.body228_crit_edge, label %for.cond224.preheader.if.end242_crit_edge

for.cond224.preheader.if.end242_crit_edge:        ; preds = %for.cond224.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end242

for.cond224.preheader.for.body228_crit_edge:      ; preds = %for.cond224.preheader
  br label %for.body228

if.then222:                                       ; preds = %if.end219
  call void @__sanitizer_cov_trace_pc() #22
  %napi = getelementptr i8, ptr %call, i32 2416
  call void @netif_napi_add(ptr noundef %call, ptr noundef %napi, ptr noundef nonnull @mvneta_poll, i32 noundef 64) #20
  br label %if.end242

for.body228:                                      ; preds = %for.body228.for.body228_crit_edge, %for.cond224.preheader.for.body228_crit_edge
  %call225477 = phi i32 [ %call225, %for.body228.for.body228_crit_edge ], [ %call225475, %for.cond224.preheader.for.body228_crit_edge ]
  %111 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %ports, align 4
  %113 = ptrtoint ptr %112 to i32
  %arrayidx237 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call225477
  %114 = ptrtoint ptr %arrayidx237 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %arrayidx237, align 4
  %add238 = add i32 %115, %113
  %116 = inttoptr i32 %add238 to ptr
  %napi239 = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %116, i32 0, i32 1
  call void @netif_napi_add(ptr noundef %call, ptr noundef %napi239, ptr noundef nonnull @mvneta_poll, i32 noundef 64) #20
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr %add.ptr.i, ptr %116, align 8
  %call225 = call i32 @cpumask_next(i32 noundef %call225477, ptr noundef nonnull @__cpu_present_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %118 = load i32, ptr @nr_cpu_ids, align 4
  %cmp226 = icmp ult i32 %call225, %118
  br i1 %cmp226, label %for.body228.for.body228_crit_edge, label %for.body228.if.end242_crit_edge

for.body228.if.end242_crit_edge:                  ; preds = %for.body228
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end242

for.body228.for.body228_crit_edge:                ; preds = %for.body228
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body228

if.end242:                                        ; preds = %for.body228.if.end242_crit_edge, %if.then222, %for.cond224.preheader.if.end242_crit_edge
  %features = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 23
  %119 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %119)
  store i64 1099511693331, ptr %features, align 16
  %hw_features = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 24
  %120 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %120)
  %121 = load i64, ptr %hw_features, align 8
  %or = or i64 %121, 1099511693331
  store i64 %or, ptr %hw_features, align 8
  %vlan_features = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 26
  %122 = ptrtoint ptr %vlan_features to i32
  call void @__asan_load8_noabort(i32 %122)
  %123 = load i64, ptr %vlan_features, align 8
  %or245 = or i64 %123, 1099511693331
  store i64 %or245, ptr %vlan_features, align 8
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 15
  %124 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %124)
  %125 = load i64, ptr %priv_flags, align 16
  %or246 = or i64 %125, 32768
  store i64 %or246, ptr %priv_flags, align 16
  %gso_max_segs.i = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 138
  %126 = ptrtoint ptr %gso_max_segs.i to i32
  call void @__asan_store2_noabort(i32 %126)
  store volatile i16 100, ptr %gso_max_segs.i, align 4
  %min_mtu = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 30
  %127 = ptrtoint ptr %min_mtu to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 68, ptr %min_mtu, align 8
  %max_mtu = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 31
  %128 = ptrtoint ptr %max_mtu to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 9676, ptr %max_mtu, align 4
  %call247 = call i32 @register_netdev(ptr noundef %call) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call247)
  %cmp248 = icmp slt i32 %call247, 0
  br i1 %cmp248, label %if.end242.err_netdev.sink.split_crit_edge, label %if.end255

if.end242.err_netdev.sink.split_crit_edge:        ; preds = %if.end242
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_netdev.sink.split

if.end255:                                        ; preds = %if.end242
  call void @__sanitizer_cov_trace_pc() #22
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 86
  %129 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %dev_addr, align 64
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %call, ptr noundef nonnull @.str.34, ptr noundef nonnull %mac_from.0, ptr noundef %130) #24
  %131 = ptrtoint ptr %dev176 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %dev176, align 8
  %driver_data.i.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 8
  %133 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store ptr %132, ptr %driver_data.i.i, align 4
  br label %cleanup

err_netdev.sink.split:                            ; preds = %if.end242.err_netdev.sink.split_crit_edge, %if.end209.err_netdev.sink.split_crit_edge
  %.str.32.sink = phi ptr [ @.str.29, %if.end209.err_netdev.sink.split_crit_edge ], [ @.str.32, %if.end242.err_netdev.sink.split_crit_edge ]
  %err.0.ph = phi i32 [ -22, %if.end209.err_netdev.sink.split_crit_edge ], [ %call247, %if.end242.err_netdev.sink.split_crit_edge ]
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull %.str.32.sink) #24
  br label %err_netdev

err_netdev:                                       ; preds = %err_netdev.sink.split, %if.end203.err_netdev_crit_edge
  %err.0 = phi i32 [ %call205, %if.end203.err_netdev_crit_edge ], [ %err.0.ph, %err_netdev.sink.split ]
  %134 = ptrtoint ptr %bm_priv199 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %bm_priv199, align 4
  %tobool258.not = icmp eq ptr %135, null
  br i1 %tobool258.not, label %err_netdev.if.end270_crit_edge, label %if.then259

err_netdev.if.end270_crit_edge:                   ; preds = %err_netdev
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end270

if.then259:                                       ; preds = %err_netdev
  call void @__sanitizer_cov_trace_pc() #22
  %pool_long = getelementptr i8, ptr %call, i32 2968
  %136 = ptrtoint ptr %pool_long to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %pool_long, align 8
  %138 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %138)
  %139 = load i8, ptr %add.ptr.i, align 8
  %conv262 = zext i8 %139 to i32
  %shl = shl nuw i32 1, %conv262
  %conv263 = trunc i32 %shl to i8
  call void @mvneta_bm_pool_destroy(ptr noundef nonnull %135, ptr noundef %137, i8 noundef zeroext %conv263) #20
  %140 = ptrtoint ptr %bm_priv199 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %bm_priv199, align 4
  %pool_short = getelementptr i8, ptr %call, i32 2972
  %142 = ptrtoint ptr %pool_short to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %pool_short, align 4
  %144 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %144)
  %145 = load i8, ptr %add.ptr.i, align 8
  %conv266 = zext i8 %145 to i32
  %shl267 = shl nuw i32 1, %conv266
  %conv268 = trunc i32 %shl267 to i8
  call void @mvneta_bm_pool_destroy(ptr noundef %141, ptr noundef %143, i8 noundef zeroext %conv268) #20
  %146 = ptrtoint ptr %bm_priv199 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %bm_priv199, align 4
  call void @mvneta_bm_put(ptr noundef %147) #20
  br label %if.end270

if.end270:                                        ; preds = %if.then259, %err_netdev.if.end270_crit_edge
  %148 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %stats, align 8
  call void @free_percpu(ptr noundef %149) #20
  br label %err_free_ports

err_free_ports:                                   ; preds = %if.end270, %if.end129.thread
  %err.1 = phi i32 [ %err.0, %if.end270 ], [ -12, %if.end129.thread ]
  %150 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %ports, align 4
  call void @free_percpu(ptr noundef %151) #20
  br label %err_clk

err_clk:                                          ; preds = %err_free_ports, %if.end109.err_clk_crit_edge, %if.then106
  %err.2 = phi i32 [ %47, %if.then106 ], [ %err.1, %err_free_ports ], [ -12, %if.end109.err_clk_crit_edge ]
  %152 = ptrtoint ptr %clk_bus to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %clk_bus, align 8
  call void @clk_disable(ptr noundef %153) #20
  call void @clk_unprepare(ptr noundef %153) #20
  %154 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %clk, align 4
  call void @clk_disable(ptr noundef %155) #20
  call void @clk_unprepare(ptr noundef %155) #20
  br label %err_free_phylink

err_free_phylink:                                 ; preds = %err_clk, %if.then89
  %err.3 = phi i32 [ %44, %if.then89 ], [ %err.2, %err_clk ]
  %156 = ptrtoint ptr %phylink71 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %phylink71, align 4
  %tobool276.not = icmp eq ptr %157, null
  br i1 %tobool276.not, label %err_free_phylink.err_free_irq_crit_edge, label %if.then277

err_free_phylink.err_free_irq_crit_edge:          ; preds = %err_free_phylink
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_free_irq

if.then277:                                       ; preds = %err_free_phylink
  call void @__sanitizer_cov_trace_pc() #22
  call void @phylink_destroy(ptr noundef nonnull %157) #20
  br label %err_free_irq

err_free_irq:                                     ; preds = %if.then277, %err_free_phylink.err_free_irq_crit_edge, %if.then68, %if.end11.err_free_irq_crit_edge, %do.end
  %err.4 = phi i32 [ %call7, %do.end ], [ %26, %if.then68 ], [ %err.3, %if.then277 ], [ %err.3, %err_free_phylink.err_free_irq_crit_edge ], [ -517, %if.end11.err_free_irq_crit_edge ]
  %158 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %irq, align 4
  call void @irq_dispose_mapping(i32 noundef %159) #20
  br label %cleanup

cleanup:                                          ; preds = %err_free_irq, %if.end255, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.4, %err_free_irq ], [ 0, %if.end255 ], [ -12, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tx_csum_limit) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %phy_mode) #20
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %hw_mac_addr) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_remove(ptr nocapture noundef readonly %pdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  tail call void @unregister_netdev(ptr noundef %1) #20
  %clk_bus = getelementptr i8, ptr %1, i32 2648
  %2 = ptrtoint ptr %clk_bus to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %clk_bus, align 8
  tail call void @clk_disable(ptr noundef %3) #20
  tail call void @clk_unprepare(ptr noundef %3) #20
  %clk = getelementptr i8, ptr %1, i32 2644
  %4 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %clk, align 4
  tail call void @clk_disable(ptr noundef %5) #20
  tail call void @clk_unprepare(ptr noundef %5) #20
  %ports = getelementptr i8, ptr %1, i32 2308
  %6 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ports, align 4
  tail call void @free_percpu(ptr noundef %7) #20
  %stats = getelementptr i8, ptr %1, i32 2312
  %8 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %stats, align 8
  tail call void @free_percpu(ptr noundef %9) #20
  %irq = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 64
  %10 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %irq, align 4
  tail call void @irq_dispose_mapping(i32 noundef %11) #20
  %phylink = getelementptr i8, ptr %1, i32 2924
  %12 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %phylink, align 4
  tail call void @phylink_destroy(ptr noundef %13) #20
  %bm_priv = getelementptr i8, ptr %1, i32 2964
  %14 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bm_priv, align 4
  %tobool.not = icmp eq ptr %15, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %pool_long = getelementptr i8, ptr %1, i32 2968
  %16 = ptrtoint ptr %pool_long to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pool_long, align 8
  %18 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %add.ptr.i, align 8
  %conv = zext i8 %19 to i32
  %shl = shl nuw i32 1, %conv
  %conv3 = trunc i32 %shl to i8
  tail call void @mvneta_bm_pool_destroy(ptr noundef nonnull %15, ptr noundef %17, i8 noundef zeroext %conv3) #20
  %20 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %bm_priv, align 4
  %pool_short = getelementptr i8, ptr %1, i32 2972
  %22 = ptrtoint ptr %pool_short to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pool_short, align 4
  %24 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %add.ptr.i, align 8
  %conv6 = zext i8 %25 to i32
  %shl7 = shl nuw i32 1, %conv6
  %conv8 = trunc i32 %shl7 to i8
  tail call void @mvneta_bm_pool_destroy(ptr noundef %21, ptr noundef %23, i8 noundef zeroext %conv8) #20
  %26 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %bm_priv, align 4
  tail call void @mvneta_bm_put(ptr noundef %27) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_alloc_etherdev_mqs(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @irq_of_parse_and_map(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_get_phy_mode(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_of_phy_get(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @phylink_create(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_device_is_compatible(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_clk_get(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_platform_ioremap_resource(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_set_pcs(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu_gfp(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_get_ethdev_address(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @eth_hw_addr_random(ptr noundef %dev) unnamed_addr #8 align 64 {
entry:
  %addr = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %addr) #20
  %0 = call ptr @memset(ptr %addr, i32 255, i32 6)
  call void @get_random_bytes(ptr noundef nonnull %addr, i32 noundef 6) #20
  %1 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %addr, align 1
  %3 = and i8 %2, -4
  %4 = or i8 %3, 2
  store i8 %4, ptr %addr, align 1
  call void @dev_addr_mod(ptr noundef %dev, i32 noundef 0, ptr noundef nonnull %addr, i32 noundef 6) #20
  %addr_assign_type = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 55
  %5 = ptrtoint ptr %addr_assign_type to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %addr_assign_type, align 4
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %addr) #20
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mv_mbus_dram_info() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_conf_mbus_windows(ptr nocapture noundef readonly %pp, ptr noundef readonly %dram) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.072 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %shl = shl i32 %i.072, 3
  %add = add nuw nsw i32 %shl, 8704
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #20, !srcloc !256
  %add2 = add nuw nsw i32 %shl, 8708
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %2 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i, align 4
  %add.ptr.i59 = getelementptr i8, ptr %3, i32 %add2
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i59, i32 0) #20, !srcloc !256
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %i.072)
  %cmp3 = icmp ult i32 %i.072, 4
  br i1 %cmp3, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %shl4 = shl nuw nsw i32 %i.072, 2
  %add5 = add nuw nsw i32 %shl4, 8832
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %4 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %base.i, align 4
  %add.ptr.i61 = getelementptr i8, ptr %5, i32 %add5
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i61, i32 0) #20, !srcloc !256
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.072, 1
  %exitcond.not = icmp eq i32 %inc, 6
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.inc
  %tobool.not = icmp eq ptr %dram, null
  br i1 %tobool.not, label %if.else, label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.end
  %num_cs = getelementptr inbounds %struct.mbus_dram_target_info, ptr %dram, i32 0, i32 1
  %6 = ptrtoint ptr %num_cs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_cs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp874 = icmp sgt i32 %7, 0
  br i1 %cmp874, label %for.body9.lr.ph, label %for.cond7.preheader.if.end30_crit_edge

for.cond7.preheader.if.end30_crit_edge:           ; preds = %for.cond7.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

for.body9.lr.ph:                                  ; preds = %for.cond7.preheader
  %cs10 = getelementptr inbounds %struct.mbus_dram_target_info, ptr %dram, i32 0, i32 2
  br label %for.body9

for.body9:                                        ; preds = %for.body9.for.body9_crit_edge, %for.body9.lr.ph
  %win_enable.077 = phi i32 [ 63, %for.body9.lr.ph ], [ %and23, %for.body9.for.body9_crit_edge ]
  %i.176 = phi i32 [ 0, %for.body9.lr.ph ], [ %inc27, %for.body9.for.body9_crit_edge ]
  %win_protect.075 = phi i32 [ 0, %for.body9.lr.ph ], [ %or25, %for.body9.for.body9_crit_edge ]
  %shl11 = shl i32 %i.176, 3
  %add12 = add i32 %shl11, 8704
  %base = getelementptr %struct.mbus_dram_window, ptr %cs10, i32 %i.176, i32 2
  %8 = ptrtoint ptr %base to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %base, align 8
  %and = and i64 %9, 4294901760
  %mbus_attr = getelementptr %struct.mbus_dram_window, ptr %cs10, i32 %i.176, i32 1
  %10 = ptrtoint ptr %mbus_attr to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %mbus_attr, align 1
  %conv = zext i8 %11 to i32
  %shl13 = shl nuw nsw i32 %conv, 8
  %12 = ptrtoint ptr %dram to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %dram, align 8
  %conv15 = zext i8 %13 to i64
  %or = or i64 %and, %conv15
  %14 = trunc i64 %or to i32
  %conv17 = or i32 %shl13, %14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %15 = tail call i32 @llvm.bswap.i32(i32 %conv17) #20
  %16 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %base.i, align 4
  %add.ptr.i63 = getelementptr i8, ptr %17, i32 %add12
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i63, i32 %15) #20, !srcloc !256
  %add19 = add i32 %shl11, 8708
  %size = getelementptr %struct.mbus_dram_window, ptr %cs10, i32 %i.176, i32 3
  %18 = ptrtoint ptr %size to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %size, align 8
  %20 = trunc i64 %19 to i32
  %21 = add i32 %20, -1
  %conv21 = and i32 %21, -65536
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %22 = tail call i32 @llvm.bswap.i32(i32 %conv21) #20
  %23 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %base.i, align 4
  %add.ptr.i65 = getelementptr i8, ptr %24, i32 %add19
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i65, i32 %22) #20, !srcloc !256
  %shl22 = shl nuw i32 1, %i.176
  %neg = xor i32 %shl22, -1
  %and23 = and i32 %win_enable.077, %neg
  %mul = shl nuw i32 %i.176, 1
  %shl24 = shl i32 3, %mul
  %or25 = or i32 %shl24, %win_protect.075
  %inc27 = add nuw nsw i32 %i.176, 1
  %25 = ptrtoint ptr %num_cs to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %num_cs, align 4
  %cmp8 = icmp slt i32 %inc27, %26
  br i1 %cmp8, label %for.body9.for.body9_crit_edge, label %for.body9.if.end30_crit_edge

for.body9.if.end30_crit_edge:                     ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

for.body9.for.body9_crit_edge:                    ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body9

if.else:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %27 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %base.i, align 4
  %add.ptr.i67 = getelementptr i8, ptr %28, i32 8708
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i67, i32 65535) #20, !srcloc !256
  br label %if.end30

if.end30:                                         ; preds = %if.else, %for.body9.if.end30_crit_edge, %for.cond7.preheader.if.end30_crit_edge
  %win_protect.1 = phi i32 [ 3, %if.else ], [ 0, %for.cond7.preheader.if.end30_crit_edge ], [ %or25, %for.body9.if.end30_crit_edge ]
  %win_enable.1 = phi i32 [ 62, %if.else ], [ 63, %for.cond7.preheader.if.end30_crit_edge ], [ %and23, %for.body9.if.end30_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %29 = tail call i32 @llvm.bswap.i32(i32 %win_enable.1) #20
  %30 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %base.i, align 4
  %add.ptr.i69 = getelementptr i8, ptr %31, i32 8848
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i69, i32 %29) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %32 = tail call i32 @llvm.bswap.i32(i32 %win_protect.1) #20
  %33 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %base.i, align 4
  %add.ptr.i71 = getelementptr i8, ptr %34, i32 8852
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i71, i32 %32) #20, !srcloc !256
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @of_parse_phandle(ptr noundef %np) unnamed_addr #8 align 64 {
entry:
  %args = alloca %struct.of_phandle_args, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %args) #20
  %0 = call ptr @memset(ptr %args, i32 255, i32 72)
  %call = call i32 @__of_parse_phandle_with_args(ptr noundef %np, ptr noundef nonnull @.str.24, ptr noundef null, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %args) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %1 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %args, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %2, %if.end ], [ null, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args) #20
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mvneta_bm_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mvneta_bm_port_init(ptr nocapture noundef readonly %pdev, ptr nocapture noundef %pp) unnamed_addr #3 align 64 {
entry:
  %wsize.i = alloca i32, align 4
  %target.i = alloca i8, align 1
  %attr.i = alloca i8, align 1
  %long_pool_id = alloca i32, align 4
  %short_pool_id = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %of_node = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %long_pool_id) #20
  %2 = ptrtoint ptr %long_pool_id to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %long_pool_id, align 4, !annotation !260
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %short_pool_id) #20
  %3 = ptrtoint ptr %short_pool_id to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %short_pool_id, align 4, !annotation !260
  %neta_armada3700 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 38
  %4 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end3_crit_edge

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end3

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %wsize.i) #20
  %6 = ptrtoint ptr %wsize.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %wsize.i, align 4, !annotation !260
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %target.i) #20
  %7 = ptrtoint ptr %target.i to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 -1, ptr %target.i, align 1, !annotation !260
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %attr.i) #20
  %8 = ptrtoint ptr %attr.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 -1, ptr %attr.i, align 1, !annotation !260
  %bm_priv.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 29
  %9 = ptrtoint ptr %bm_priv.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bm_priv.i, align 4
  %bppi_phys_addr.i = getelementptr inbounds %struct.mvneta_bm, ptr %10, i32 0, i32 5
  %11 = ptrtoint ptr %bppi_phys_addr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bppi_phys_addr.i, align 4
  %call.i = call i32 @mvebu_mbus_get_io_win_info(i32 noundef %12, ptr noundef nonnull %wsize.i, ptr noundef nonnull %target.i, ptr noundef nonnull %attr.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then.mvneta_bm_port_mbus_init.exit.thread_crit_edge, label %if.end.i

if.then.mvneta_bm_port_mbus_init.exit.thread_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_bm_port_mbus_init.exit.thread

if.end.i:                                         ; preds = %if.then
  %bm_win_id.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 32
  %13 = ptrtoint ptr %bm_win_id.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %bm_win_id.i, align 8
  %14 = ptrtoint ptr %bm_priv.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bm_priv.i, align 4
  %bppi_phys_addr2.i = getelementptr inbounds %struct.mvneta_bm, ptr %15, i32 0, i32 5
  %16 = ptrtoint ptr %bppi_phys_addr2.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %bppi_phys_addr2.i, align 4
  %18 = ptrtoint ptr %wsize.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %wsize.i, align 4
  %20 = ptrtoint ptr %target.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %target.i, align 1
  %22 = ptrtoint ptr %attr.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %attr.i, align 1
  %base.i.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %24 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %25, i32 8848
  %26 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #20, !srcloc !258
  %27 = call i32 @llvm.bswap.i32(i32 %26) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %28 = ptrtoint ptr %bm_win_id.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %bm_win_id.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp.i.i = icmp slt i32 %29, 0
  br i1 %cmp.i.i, label %for.body.preheader.i.i, label %if.end.i.if.end8.i.i_crit_edge

if.end.i.if.end8.i.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i

for.body.preheader.i.i:                           ; preds = %if.end.i
  %and.i.i = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %for.inc.i.i, label %for.body.preheader.i.i.for.end.thread.i.i_crit_edge

for.body.preheader.i.i.for.end.thread.i.i_crit_edge: ; preds = %for.body.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.thread.i.i

for.end.thread.i.i:                               ; preds = %for.inc.4.i.i.for.end.thread.i.i_crit_edge, %for.inc.3.i.i.for.end.thread.i.i_crit_edge, %for.inc.2.i.i.for.end.thread.i.i_crit_edge, %for.inc.1.i.i.for.end.thread.i.i_crit_edge, %for.inc.i.i.for.end.thread.i.i_crit_edge, %for.body.preheader.i.i.for.end.thread.i.i_crit_edge
  %i.077.lcssa.i.i = phi i32 [ 0, %for.body.preheader.i.i.for.end.thread.i.i_crit_edge ], [ 1, %for.inc.i.i.for.end.thread.i.i_crit_edge ], [ 2, %for.inc.1.i.i.for.end.thread.i.i_crit_edge ], [ 3, %for.inc.2.i.i.for.end.thread.i.i_crit_edge ], [ 4, %for.inc.3.i.i.for.end.thread.i.i_crit_edge ], [ 5, %for.inc.4.i.i.for.end.thread.i.i_crit_edge ]
  %30 = ptrtoint ptr %bm_win_id.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %i.077.lcssa.i.i, ptr %bm_win_id.i, align 8
  br label %if.end8.i.i

for.inc.i.i:                                      ; preds = %for.body.preheader.i.i
  %and.1.i.i = and i32 %27, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1.i.i)
  %tobool.not.1.i.i = icmp eq i32 %and.1.i.i, 0
  br i1 %tobool.not.1.i.i, label %for.inc.1.i.i, label %for.inc.i.i.for.end.thread.i.i_crit_edge

for.inc.i.i.for.end.thread.i.i_crit_edge:         ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.thread.i.i

for.inc.1.i.i:                                    ; preds = %for.inc.i.i
  %and.2.i.i = and i32 %27, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2.i.i)
  %tobool.not.2.i.i = icmp eq i32 %and.2.i.i, 0
  br i1 %tobool.not.2.i.i, label %for.inc.2.i.i, label %for.inc.1.i.i.for.end.thread.i.i_crit_edge

for.inc.1.i.i.for.end.thread.i.i_crit_edge:       ; preds = %for.inc.1.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.thread.i.i

for.inc.2.i.i:                                    ; preds = %for.inc.1.i.i
  %and.3.i.i = and i32 %27, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3.i.i)
  %tobool.not.3.i.i = icmp eq i32 %and.3.i.i, 0
  br i1 %tobool.not.3.i.i, label %for.inc.3.i.i, label %for.inc.2.i.i.for.end.thread.i.i_crit_edge

for.inc.2.i.i.for.end.thread.i.i_crit_edge:       ; preds = %for.inc.2.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.thread.i.i

for.inc.3.i.i:                                    ; preds = %for.inc.2.i.i
  %and.4.i.i = and i32 %27, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4.i.i)
  %tobool.not.4.i.i = icmp eq i32 %and.4.i.i, 0
  br i1 %tobool.not.4.i.i, label %for.inc.4.i.i, label %for.inc.3.i.i.for.end.thread.i.i_crit_edge

for.inc.3.i.i.for.end.thread.i.i_crit_edge:       ; preds = %for.inc.3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.thread.i.i

for.inc.4.i.i:                                    ; preds = %for.inc.3.i.i
  %and.5.i.i = and i32 %27, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5.i.i)
  %tobool.not.5.i.i = icmp eq i32 %and.5.i.i, 0
  br i1 %tobool.not.5.i.i, label %if.then5.i, label %for.inc.4.i.i.for.end.thread.i.i_crit_edge

for.inc.4.i.i.for.end.thread.i.i_crit_edge:       ; preds = %for.inc.4.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.thread.i.i

if.end8.i.i:                                      ; preds = %for.end.thread.i.i, %if.end.i.if.end8.i.i_crit_edge
  %i.1.i.i = phi i32 [ %29, %if.end.i.if.end8.i.i_crit_edge ], [ %i.077.lcssa.i.i, %for.end.thread.i.i ]
  %shl9.i.i = shl i32 %i.1.i.i, 3
  %add.i.i = add i32 %shl9.i.i, 8704
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %31 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i60.i.i = getelementptr i8, ptr %32, i32 %add.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i60.i.i, i32 0) #20, !srcloc !256
  %add11.i.i = add i32 %shl9.i.i, 8708
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %33 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i62.i.i = getelementptr i8, ptr %34, i32 %add11.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i62.i.i, i32 0) #20, !srcloc !256
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %i.1.i.i)
  %cmp12.i.i = icmp ult i32 %i.1.i.i, 4
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end8.i.i.mvneta_bm_port_mbus_init.exit_crit_edge

if.end8.i.i.mvneta_bm_port_mbus_init.exit_crit_edge: ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_bm_port_mbus_init.exit

if.then13.i.i:                                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %shl14.i.i = shl nuw nsw i32 %i.1.i.i, 2
  %add15.i.i = add nuw nsw i32 %shl14.i.i, 8832
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %35 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i64.i.i = getelementptr i8, ptr %36, i32 %add15.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i64.i.i, i32 0) #20, !srcloc !256
  br label %mvneta_bm_port_mbus_init.exit

if.then5.i:                                       ; preds = %for.inc.4.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %dev.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %37 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dev.i, align 8
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %38, ptr noundef nonnull @.str.77) #24
  br label %mvneta_bm_port_mbus_init.exit.thread

mvneta_bm_port_mbus_init.exit.thread:             ; preds = %if.then5.i, %if.then.mvneta_bm_port_mbus_init.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ %call.i, %if.then.mvneta_bm_port_mbus_init.exit.thread_crit_edge ], [ -12, %if.then5.i ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %attr.i) #20
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %target.i) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %wsize.i) #20
  br label %cleanup62

mvneta_bm_port_mbus_init.exit:                    ; preds = %if.then13.i.i, %if.end8.i.i.mvneta_bm_port_mbus_init.exit_crit_edge
  %and19.i.i = and i32 %17, -65536
  %conv.i.i = zext i8 %23 to i32
  %shl20.i.i = shl nuw nsw i32 %conv.i.i, 8
  %or.i.i = or i32 %shl20.i.i, %and19.i.i
  %conv21.i.i = zext i8 %21 to i32
  %or22.i.i = or i32 %or.i.i, %conv21.i.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %39 = call i32 @llvm.bswap.i32(i32 %or22.i.i) #20
  %40 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i66.i.i = getelementptr i8, ptr %41, i32 %add.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i66.i.i, i32 %39) #20, !srcloc !256
  %sub.i.i = add i32 %19, -1
  %and25.i.i = and i32 %sub.i.i, -65536
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %42 = call i32 @llvm.bswap.i32(i32 %and25.i.i) #20
  %43 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i68.i.i = getelementptr i8, ptr %44, i32 %add11.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i68.i.i, i32 %42) #20, !srcloc !256
  %45 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i70.i.i = getelementptr i8, ptr %46, i32 8852
  %47 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i70.i.i) #20, !srcloc !258
  %48 = call i32 @llvm.bswap.i32(i32 %47) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %mul.i.i = shl nuw i32 %i.1.i.i, 1
  %shl27.i.i = shl i32 3, %mul.i.i
  %or28.i.i = or i32 %48, %shl27.i.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %49 = call i32 @llvm.bswap.i32(i32 %or28.i.i) #20
  %50 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i72.i.i = getelementptr i8, ptr %51, i32 8852
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i72.i.i, i32 %49) #20, !srcloc !256
  %shl29.i.i = shl nuw i32 1, %i.1.i.i
  %neg.i.i = xor i32 %shl29.i.i, -1
  %and30.i.i = and i32 %27, %neg.i.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %52 = call i32 @llvm.bswap.i32(i32 %and30.i.i) #20
  %53 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i74.i.i = getelementptr i8, ptr %54, i32 8848
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i74.i.i, i32 %52) #20, !srcloc !256
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %attr.i) #20
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %target.i) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %wsize.i) #20
  br label %if.end3

if.end3:                                          ; preds = %mvneta_bm_port_mbus_init.exit, %entry.if.end3_crit_edge
  %call.i.i = call i32 @of_property_read_variable_u32_array(ptr noundef %1, ptr noundef nonnull @.str.72, ptr noundef nonnull %long_pool_id, i32 noundef 1, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i)
  %tobool5.not = icmp sgt i32 %call.i.i, -1
  br i1 %tobool5.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  %dev7 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %55 = ptrtoint ptr %dev7 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %dev7, align 8
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %56, ptr noundef nonnull @.str.73) #24
  br label %cleanup62

if.end8:                                          ; preds = %if.end3
  %bm_priv = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 29
  %57 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %bm_priv, align 4
  %59 = ptrtoint ptr %long_pool_id to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %long_pool_id, align 4
  %conv = trunc i32 %60 to i8
  %61 = ptrtoint ptr %pp to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %pp, align 8
  %dev9 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %63 = ptrtoint ptr %dev9 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %dev9, align 8
  %mtu = getelementptr inbounds %struct.net_device, ptr %64, i32 0, i32 20
  %65 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %mtu, align 4
  %add13 = add i32 %66, 151
  %and = and i32 %add13, -128
  %call14 = call ptr @mvneta_bm_pool_use(ptr noundef %58, i8 noundef zeroext %conv, i32 noundef 1, i8 noundef zeroext %62, i32 noundef %and) #20
  %pool_long = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 30
  %67 = ptrtoint ptr %pool_long to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %call14, ptr %pool_long, align 8
  %tobool16.not = icmp eq ptr %call14, null
  br i1 %tobool16.not, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  %68 = ptrtoint ptr %dev9 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %dev9, align 8
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %69, ptr noundef nonnull @.str.74) #24
  br label %cleanup62

if.end19:                                         ; preds = %if.end8
  %70 = ptrtoint ptr %pp to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %pp, align 8
  %conv21 = zext i8 %71 to i32
  %shl = shl nuw i32 1, %conv21
  %port_map = getelementptr inbounds %struct.mvneta_bm_pool, ptr %call14, i32 0, i32 7
  %72 = ptrtoint ptr %port_map to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %port_map, align 4
  %74 = trunc i32 %shl to i8
  %conv24 = or i8 %73, %74
  store i8 %conv24, ptr %port_map, align 4
  %75 = ptrtoint ptr %pool_long to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %pool_long, align 8
  %buf_size = getelementptr inbounds %struct.mvneta_bm_pool, ptr %76, i32 0, i32 4
  %77 = ptrtoint ptr %buf_size to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %buf_size, align 4
  %id27 = getelementptr inbounds %struct.mvneta_bm_pool, ptr %76, i32 0, i32 1
  %79 = ptrtoint ptr %id27 to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %id27, align 4
  %and.i = and i32 %78, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp.i93 = icmp eq i32 %and.i, 0
  br i1 %cmp.i93, label %if.end19.mvneta_bm_pool_bufsize_set.exit_crit_edge, label %do.end.i

if.end19.mvneta_bm_pool_bufsize_set.exit_crit_edge: ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_bm_pool_bufsize_set.exit

do.end.i:                                         ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  %81 = ptrtoint ptr %dev9 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %dev9, align 8
  %parent.i = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 133, i32 1
  %83 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %parent.i, align 8
  %add.i = add i32 %78, 7
  %and2.i = and i32 %add.i, -8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %84, ptr noundef nonnull @.str.64, i32 noundef %78, i32 noundef %and2.i) #24
  br label %mvneta_bm_pool_bufsize_set.exit

mvneta_bm_pool_bufsize_set.exit:                  ; preds = %do.end.i, %if.end19.mvneta_bm_pool_bufsize_set.exit_crit_edge
  %buf_size.addr.0.i = phi i32 [ %78, %if.end19.mvneta_bm_pool_bufsize_set.exit_crit_edge ], [ %and2.i, %do.end.i ]
  %conv.i = zext i8 %80 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 2
  %add5.i = add nuw nsw i32 %shl.i, 5888
  %base.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %85 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %86, i32 %add5.i
  %87 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  %88 = call i32 @llvm.bswap.i32(i32 %87) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and6.i = and i32 %buf_size.addr.0.i, 65528
  %or.i = or i32 %88, %and6.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %89 = call i32 @llvm.bswap.i32(i32 %or.i) #20
  %90 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i19.i = getelementptr i8, ptr %91, i32 %add5.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i19.i, i32 %89) #20, !srcloc !256
  %call.i.i96 = call i32 @of_property_read_variable_u32_array(ptr noundef %1, ptr noundef nonnull @.str.75, ptr noundef nonnull %short_pool_id, i32 noundef 1, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i96)
  %tobool29.not = icmp sgt i32 %call.i.i96, -1
  br i1 %tobool29.not, label %mvneta_bm_pool_bufsize_set.exit.if.end31_crit_edge, label %if.then30

mvneta_bm_pool_bufsize_set.exit.if.end31_crit_edge: ; preds = %mvneta_bm_pool_bufsize_set.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end31

if.then30:                                        ; preds = %mvneta_bm_pool_bufsize_set.exit
  call void @__sanitizer_cov_trace_pc() #22
  %92 = ptrtoint ptr %long_pool_id to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %long_pool_id, align 4
  %94 = ptrtoint ptr %short_pool_id to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %93, ptr %short_pool_id, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %mvneta_bm_pool_bufsize_set.exit.if.end31_crit_edge
  %95 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %bm_priv, align 4
  %97 = ptrtoint ptr %short_pool_id to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %short_pool_id, align 4
  %conv33 = trunc i32 %98 to i8
  %99 = ptrtoint ptr %pp to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %pp, align 8
  %call35 = call ptr @mvneta_bm_pool_use(ptr noundef %96, i8 noundef zeroext %conv33, i32 noundef 2, i8 noundef zeroext %100, i32 noundef 256) #20
  %pool_short = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 31
  %101 = ptrtoint ptr %pool_short to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %call35, ptr %pool_short, align 4
  %tobool37.not = icmp eq ptr %call35, null
  br i1 %tobool37.not, label %if.then38, label %if.end46

if.then38:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #22
  %102 = ptrtoint ptr %dev9 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %dev9, align 8
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %103, ptr noundef nonnull @.str.76) #24
  %104 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %bm_priv, align 4
  %106 = ptrtoint ptr %pool_long to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %pool_long, align 8
  %108 = ptrtoint ptr %pp to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %pp, align 8
  %conv43 = zext i8 %109 to i32
  %shl44 = shl nuw i32 1, %conv43
  %conv45 = trunc i32 %shl44 to i8
  call void @mvneta_bm_pool_destroy(ptr noundef %105, ptr noundef %107, i8 noundef zeroext %conv45) #20
  br label %cleanup62

if.end46:                                         ; preds = %if.end31
  %110 = ptrtoint ptr %short_pool_id to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %short_pool_id, align 4
  %112 = ptrtoint ptr %long_pool_id to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %long_pool_id, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %111, i32 %113)
  %cmp.not = icmp eq i32 %111, %113
  br i1 %cmp.not, label %if.end46.cleanup62_crit_edge, label %if.then48

if.end46.cleanup62_crit_edge:                     ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup62

if.then48:                                        ; preds = %if.end46
  %114 = ptrtoint ptr %pp to i32
  call void @__asan_load1_noabort(i32 %114)
  %115 = load i8, ptr %pp, align 8
  %conv50 = zext i8 %115 to i32
  %shl51 = shl nuw i32 1, %conv50
  %port_map53 = getelementptr inbounds %struct.mvneta_bm_pool, ptr %call35, i32 0, i32 7
  %116 = ptrtoint ptr %port_map53 to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %port_map53, align 4
  %118 = trunc i32 %shl51 to i8
  %conv56 = or i8 %117, %118
  store i8 %conv56, ptr %port_map53, align 4
  %119 = ptrtoint ptr %pool_short to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %pool_short, align 4
  %buf_size58 = getelementptr inbounds %struct.mvneta_bm_pool, ptr %120, i32 0, i32 4
  %121 = ptrtoint ptr %buf_size58 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %buf_size58, align 4
  %id60 = getelementptr inbounds %struct.mvneta_bm_pool, ptr %120, i32 0, i32 1
  %123 = ptrtoint ptr %id60 to i32
  call void @__asan_load1_noabort(i32 %123)
  %124 = load i8, ptr %id60, align 4
  %and.i97 = and i32 %122, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i97)
  %cmp.i98 = icmp eq i32 %and.i97, 0
  br i1 %cmp.i98, label %if.then48.mvneta_bm_pool_bufsize_set.exit114_crit_edge, label %do.end.i103

if.then48.mvneta_bm_pool_bufsize_set.exit114_crit_edge: ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_bm_pool_bufsize_set.exit114

do.end.i103:                                      ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #22
  %125 = ptrtoint ptr %dev9 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %dev9, align 8
  %parent.i100 = getelementptr inbounds %struct.net_device, ptr %126, i32 0, i32 133, i32 1
  %127 = ptrtoint ptr %parent.i100 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %parent.i100, align 8
  %add.i101 = add i32 %122, 7
  %and2.i102 = and i32 %add.i101, -8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %128, ptr noundef nonnull @.str.64, i32 noundef %122, i32 noundef %and2.i102) #24
  br label %mvneta_bm_pool_bufsize_set.exit114

mvneta_bm_pool_bufsize_set.exit114:               ; preds = %do.end.i103, %if.then48.mvneta_bm_pool_bufsize_set.exit114_crit_edge
  %buf_size.addr.0.i104 = phi i32 [ %122, %if.then48.mvneta_bm_pool_bufsize_set.exit114_crit_edge ], [ %and2.i102, %do.end.i103 ]
  %conv.i105 = zext i8 %124 to i32
  %shl.i106 = shl nuw nsw i32 %conv.i105, 2
  %add5.i107 = add nuw nsw i32 %shl.i106, 5888
  %129 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i109 = getelementptr i8, ptr %130, i32 %add5.i107
  %131 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i109) #20, !srcloc !258
  %132 = call i32 @llvm.bswap.i32(i32 %131) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and6.i110 = and i32 %buf_size.addr.0.i104, 65528
  %or.i111 = or i32 %132, %and6.i110
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %133 = call i32 @llvm.bswap.i32(i32 %or.i111) #20
  %134 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i19.i112 = getelementptr i8, ptr %135, i32 %add5.i107
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i19.i112, i32 %133) #20, !srcloc !256
  br label %cleanup62

cleanup62:                                        ; preds = %mvneta_bm_pool_bufsize_set.exit114, %if.end46.cleanup62_crit_edge, %if.then38, %if.then17, %if.then6, %mvneta_bm_port_mbus_init.exit.thread
  %retval.1 = phi i32 [ -22, %if.then6 ], [ -12, %if.then38 ], [ -12, %if.then17 ], [ 0, %mvneta_bm_pool_bufsize_set.exit114 ], [ 0, %if.end46.cleanup62_crit_edge ], [ %retval.0.i.ph, %mvneta_bm_port_mbus_init.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %short_pool_id) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %long_pool_id) #20
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mvneta_bm_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_node_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mvneta_init(ptr noundef %dev, ptr noundef %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %base.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %0 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 11264
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %3 = and i32 %2, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %4 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i4.i = getelementptr i8, ptr %5, i32 11264
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i4.i, i32 %3) #20, !srcloc !256
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %6 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %6(i32 noundef 42949600) #20
  tail call fastcc void @mvneta_defaults_set(ptr noundef %pp)
  %7 = load i32, ptr @txq_number, align 4
  %8 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %7, i32 68) #20
  %9 = extractvalue { i32, i1 } %8, 1
  br i1 %9, label %devm_kcalloc.exit.thread, label %devm_kcalloc.exit, !prof !261

devm_kcalloc.exit.thread:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %txqs62 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 7
  %10 = ptrtoint ptr %txqs62 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %txqs62, align 4
  br label %cleanup30

devm_kcalloc.exit:                                ; preds = %entry
  %11 = extractvalue { i32, i1 } %8, 0
  %call5.i.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev, i32 noundef %11, i32 noundef 3520) #20
  %txqs = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 7
  %12 = ptrtoint ptr %txqs to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call5.i.i, ptr %txqs, align 4
  %tobool.not = icmp eq ptr %call5.i.i, null
  br i1 %tobool.not, label %devm_kcalloc.exit.cleanup30_crit_edge, label %for.cond.preheader

devm_kcalloc.exit.cleanup30_crit_edge:            ; preds = %devm_kcalloc.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup30

for.cond.preheader:                               ; preds = %devm_kcalloc.exit
  %13 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp70 = icmp sgt i32 %13, 0
  br i1 %cmp70, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tx_ring_size = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 20
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %queue.071 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %14 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %txqs, align 4
  %arrayidx = getelementptr %struct.mvneta_tx_queue, ptr %15, i32 %queue.071
  %conv = trunc i32 %queue.071 to i8
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv, ptr %arrayidx, align 4
  %17 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %tx_ring_size, align 4
  %conv3 = zext i16 %18 to i32
  %size = getelementptr %struct.mvneta_tx_queue, ptr %15, i32 %queue.071, i32 1
  %19 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %conv3, ptr %size, align 4
  %done_pkts_coal = getelementptr %struct.mvneta_tx_queue, ptr %15, i32 %queue.071, i32 9
  %20 = ptrtoint ptr %done_pkts_coal to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %done_pkts_coal, align 4
  %inc = add nuw nsw i32 %queue.071, 1
  %21 = load i32, ptr @txq_number, align 4
  %cmp = icmp slt i32 %inc, %21
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %22 = load i32, ptr @rxq_number, align 4
  %23 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %22, i32 384) #20
  %24 = extractvalue { i32, i1 } %23, 1
  br i1 %24, label %devm_kcalloc.exit60.thread, label %devm_kcalloc.exit60, !prof !261

devm_kcalloc.exit60.thread:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  %rxqs65 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 6
  %25 = ptrtoint ptr %rxqs65 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %rxqs65, align 8
  br label %cleanup30

devm_kcalloc.exit60:                              ; preds = %for.end
  %26 = extractvalue { i32, i1 } %23, 0
  %call5.i.i57 = tail call noalias ptr @devm_kmalloc(ptr noundef %dev, i32 noundef %26, i32 noundef 3520) #20
  %rxqs = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 6
  %27 = ptrtoint ptr %rxqs to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %call5.i.i57, ptr %rxqs, align 8
  %tobool6.not = icmp eq ptr %call5.i.i57, null
  br i1 %tobool6.not, label %devm_kcalloc.exit60.cleanup30_crit_edge, label %for.cond9.preheader

devm_kcalloc.exit60.cleanup30_crit_edge:          ; preds = %devm_kcalloc.exit60
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup30

for.cond9.preheader:                              ; preds = %devm_kcalloc.exit60
  %28 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp1072 = icmp sgt i32 %28, 0
  br i1 %cmp1072, label %for.body12.lr.ph, label %for.cond9.preheader.cleanup30_crit_edge

for.cond9.preheader.cleanup30_crit_edge:          ; preds = %for.cond9.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup30

for.body12.lr.ph:                                 ; preds = %for.cond9.preheader
  %rx_ring_size = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 21
  %dev19 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  br label %for.body12

for.cond9:                                        ; preds = %for.body12
  %inc28 = add nuw nsw i32 %queue.173, 1
  %29 = load i32, ptr @rxq_number, align 4
  %cmp10 = icmp slt i32 %inc28, %29
  br i1 %cmp10, label %for.cond9.for.body12_crit_edge, label %for.cond9.cleanup30_crit_edge

for.cond9.cleanup30_crit_edge:                    ; preds = %for.cond9
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup30

for.cond9.for.body12_crit_edge:                   ; preds = %for.cond9
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body12

for.body12:                                       ; preds = %for.cond9.for.body12_crit_edge, %for.body12.lr.ph
  %queue.173 = phi i32 [ 0, %for.body12.lr.ph ], [ %inc28, %for.cond9.for.body12_crit_edge ]
  %30 = ptrtoint ptr %rxqs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rxqs, align 8
  %arrayidx14 = getelementptr %struct.mvneta_rx_queue, ptr %31, i32 %queue.173
  %conv15 = trunc i32 %queue.173 to i8
  %32 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %conv15, ptr %arrayidx14, align 128
  %33 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %rx_ring_size, align 2
  %conv17 = zext i16 %34 to i32
  %size18 = getelementptr %struct.mvneta_rx_queue, ptr %31, i32 %queue.173, i32 1
  %35 = ptrtoint ptr %size18 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %conv17, ptr %size18, align 4
  %pkts_coal = getelementptr %struct.mvneta_rx_queue, ptr %31, i32 %queue.173, i32 2
  %36 = ptrtoint ptr %pkts_coal to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 32, ptr %pkts_coal, align 8
  %time_coal = getelementptr %struct.mvneta_rx_queue, ptr %31, i32 %queue.173, i32 3
  %37 = ptrtoint ptr %time_coal to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 100, ptr %time_coal, align 4
  %38 = shl nuw nsw i32 %conv17, 2
  %39 = ptrtoint ptr %dev19 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev19, align 8
  %parent = getelementptr inbounds %struct.net_device, ptr %40, i32 0, i32 133, i32 1
  %41 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %parent, align 8
  %call5.i = tail call noalias ptr @devm_kmalloc(ptr noundef %42, i32 noundef %38, i32 noundef 3264) #20
  %buf_virt_addr = getelementptr %struct.mvneta_rx_queue, ptr %31, i32 %queue.173, i32 7
  %43 = ptrtoint ptr %buf_virt_addr to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %call5.i, ptr %buf_virt_addr, align 128
  %tobool24.not = icmp eq ptr %call5.i, null
  br i1 %tobool24.not, label %for.body12.cleanup30_crit_edge, label %for.cond9

for.body12.cleanup30_crit_edge:                   ; preds = %for.body12
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup30

cleanup30:                                        ; preds = %for.body12.cleanup30_crit_edge, %for.cond9.cleanup30_crit_edge, %for.cond9.preheader.cleanup30_crit_edge, %devm_kcalloc.exit60.cleanup30_crit_edge, %devm_kcalloc.exit60.thread, %devm_kcalloc.exit.cleanup30_crit_edge, %devm_kcalloc.exit.thread
  %retval.2 = phi i32 [ -12, %devm_kcalloc.exit.cleanup30_crit_edge ], [ -12, %devm_kcalloc.exit60.cleanup30_crit_edge ], [ -12, %devm_kcalloc.exit.thread ], [ -12, %devm_kcalloc.exit60.thread ], [ 0, %for.cond9.preheader.cleanup30_crit_edge ], [ -12, %for.body12.cleanup30_crit_edge ], [ 0, %for.cond9.cleanup30_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_napi_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_poll(ptr noundef %napi, i32 noundef %budget) #3 align 64 {
entry:
  %sinfo.i = alloca %struct.skb_shared_info, align 8
  %ps.i = alloca %struct.mvneta_stats, align 8
  %xdp_buf.i = alloca %struct.xdp_buff, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 7
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %ports = getelementptr i8, ptr %1, i32 2308
  %2 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ports, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %dev3 = getelementptr i8, ptr %1, i32 2336
  %12 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev3, align 8
  %state.i = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call zeroext i1 @napi_complete_done(ptr noundef %napi, i32 noundef 0) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %base.i = getelementptr i8, ptr %1, i32 2324
  %16 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %base.i, align 4
  %add.ptr.i154 = getelementptr i8, ptr %17, i32 9632
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i154) #20, !srcloc !258
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %tobool.not = icmp sgt i32 %19, -1
  br i1 %tobool.not, label %if.end.if.end13_crit_edge, label %if.then7

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.then7:                                         ; preds = %if.end
  %20 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %base.i, align 4
  %add.ptr.i156 = getelementptr i8, ptr %21, i32 9648
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i156) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %23 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %base.i, align 4
  %add.ptr.i158 = getelementptr i8, ptr %24, i32 9648
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i158, i32 0) #20, !srcloc !256
  %25 = and i32 %22, 50331648
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool10.not = icmp eq i32 %25, 0
  br i1 %tobool10.not, label %if.then7.if.end13_crit_edge, label %if.then11

if.then7.if.end13_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.then11:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  %26 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %27, i32 11280
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %phylink.i = getelementptr i8, ptr %1, i32 2924
  %29 = ptrtoint ptr %phylink.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %phylink.i, align 4
  %31 = and i32 %28, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.i159 = icmp ne i32 %31, 0
  tail call void @phylink_mac_change(ptr noundef %30, i1 noundef zeroext %tobool.i159) #20
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.then7.if.end13_crit_edge, %if.end.if.end13_crit_edge
  %and14 = and i32 %19, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %if.end13.if.end19_crit_edge, label %while.body.lr.ph.i

if.end13.if.end19_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

while.body.lr.ph.i:                               ; preds = %if.end13
  %32 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i to ptr
  %cpu1.i = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %cpu1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cpu1.i, align 4
  %txqs.i.i = getelementptr i8, ptr %1, i32 2332
  br label %while.body.i

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %cause_tx_done.addr.021.i = phi i32 [ %and14, %while.body.lr.ph.i ], [ %and.i160, %if.end.i.while.body.i_crit_edge ]
  %36 = tail call i32 @llvm.ctlz.i32(i32 %cause_tx_done.addr.021.i, i1 true) #20, !range !262
  %sub.i.op.i.i = xor i32 %36, 31
  %37 = ptrtoint ptr %txqs.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %txqs.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.mvneta_tx_queue, ptr %38, i32 %sub.i.op.i.i
  %39 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev3, align 8
  %41 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx.i.i, align 4
  %conv.i = zext i8 %42 to i32
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %40, i32 0, i32 103
  %43 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %_tx.i.i, align 128
  %_xmit_lock.i.i = getelementptr %struct.netdev_queue, ptr %44, i32 %conv.i, i32 10
  tail call void @_raw_spin_lock(ptr noundef %_xmit_lock.i.i) #20
  %xmit_lock_owner.i.i = getelementptr %struct.netdev_queue, ptr %44, i32 %conv.i, i32 11
  %45 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile i32 %35, ptr %xmit_lock_owner.i.i, align 4
  %count.i = getelementptr %struct.mvneta_tx_queue, ptr %38, i32 %sub.i.op.i.i, i32 2
  %46 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool4.not.i = icmp eq i32 %47, 0
  br i1 %tobool4.not.i, label %while.body.i.if.end.i_crit_edge, label %if.then.i

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then.i:                                        ; preds = %while.body.i
  %48 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %dev3, align 8
  %50 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %arrayidx.i.i, align 4
  %conv.i.i = zext i8 %51 to i32
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %49, i32 0, i32 103
  %52 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %_tx.i.i.i, align 128
  %arrayidx.i.i.i = getelementptr %struct.netdev_queue, ptr %53, i32 %conv.i.i
  %shl.i.i.i.i = shl nuw nsw i32 %conv.i.i, 2
  %add.i.i.i.i = add nuw nsw i32 %shl.i.i.i.i, 15424
  %54 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %55, i32 %add.i.i.i.i
  %56 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.i.i) #20, !srcloc !258
  %57 = tail call i32 @llvm.bswap.i32(i32 %56) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and.i.i.i.i = lshr i32 %57, 16
  %shr.i.i.i.i = and i32 %and.i.i.i.i, 16383
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr.i.i.i.i)
  %tobool.not.i.i16.i = icmp eq i32 %shr.i.i.i.i, 0
  br i1 %tobool.not.i.i16.i, label %if.then.i.if.end.i_crit_edge, label %if.then.i.i.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then.i.i.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %shr.i.i.i.i)
  %cmp13.i.i.i.i = icmp ugt i32 %shr.i.i.i.i, 255
  br i1 %cmp13.i.i.i.i, label %if.then.i.i.i.while.body.i.i.i.i_crit_edge, label %if.then.i.i.i.if.end.i.i_crit_edge

if.then.i.i.i.if.end.i.i_crit_edge:               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

if.then.i.i.i.while.body.i.i.i.i_crit_edge:       ; preds = %if.then.i.i.i
  br label %while.body.i.i.i.i

while.body.i.i.i.i:                               ; preds = %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge, %if.then.i.i.i.while.body.i.i.i.i_crit_edge
  %sent_desc.addr.014.i.i.i.i = phi i32 [ %sub.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %shr.i.i.i.i, %if.then.i.i.i.while.body.i.i.i.i_crit_edge ]
  %58 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %arrayidx.i.i, align 4
  %conv.i6.i.i.i = zext i8 %59 to i32
  %shl.i7.i.i.i = shl nuw nsw i32 %conv.i6.i.i.i, 2
  %add.i8.i.i.i = add nuw nsw i32 %shl.i7.i.i.i, 15456
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %60 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i9.i.i.i = getelementptr i8, ptr %61, i32 %add.i8.i.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i9.i.i.i, i32 65280) #20, !srcloc !256
  %sub.i.i.i.i = add nsw i32 %sent_desc.addr.014.i.i.i.i, -255
  %cmp.i.i.i.i = icmp ugt i32 %sent_desc.addr.014.i.i.i.i, 510
  br i1 %cmp.i.i.i.i, label %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge, label %while.body.i.i.i.i.if.end.i.i_crit_edge

while.body.i.i.i.i.if.end.i.i_crit_edge:          ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

while.body.i.i.i.i.while.body.i.i.i.i_crit_edge:  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.i.i.i

if.end.i.i:                                       ; preds = %while.body.i.i.i.i.if.end.i.i_crit_edge, %if.then.i.i.i.if.end.i.i_crit_edge
  %sent_desc.addr.0.lcssa.i.i.i.i = phi i32 [ %shr.i.i.i.i, %if.then.i.i.i.if.end.i.i_crit_edge ], [ %sub.i.i.i.i, %while.body.i.i.i.i.if.end.i.i_crit_edge ]
  %62 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %arrayidx.i.i, align 4
  %conv3.i.i.i.i = zext i8 %63 to i32
  %shl4.i.i.i.i = shl nuw nsw i32 %conv3.i.i.i.i, 2
  %add5.i.i.i.i = add nuw nsw i32 %shl4.i.i.i.i, 15456
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %64 = tail call i32 @llvm.bswap.i32(i32 %sent_desc.addr.0.lcssa.i.i.i.i) #20
  %65 = lshr i32 %64, 16
  %66 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %base.i, align 4
  %add.ptr.i12.i.i.i.i = getelementptr i8, ptr %67, i32 %add5.i.i.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i12.i.i.i.i, i32 %65) #20, !srcloc !256
  tail call fastcc void @mvneta_txq_bufs_free(ptr noundef %add.ptr.i, ptr noundef %arrayidx.i.i, i32 noundef %shr.i.i.i.i, ptr noundef %arrayidx.i.i.i, i1 noundef zeroext true) #20
  %68 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %count.i, align 4
  %sub.i17.i = sub i32 %69, %shr.i.i.i.i
  store i32 %sub.i17.i, ptr %count.i, align 4
  %state.i.i.i = getelementptr %struct.netdev_queue, ptr %53, i32 %conv.i.i, i32 13
  %70 = ptrtoint ptr %state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %state.i.i.i, align 4
  %and1.i.i.i.i = and i32 %71, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i.i.if.end.i_crit_edge, label %if.then3.i.i

if.end.i.i.if.end.i_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  %tx_wake_threshold.i.i = getelementptr %struct.mvneta_tx_queue, ptr %38, i32 %sub.i.op.i.i, i32 5
  %72 = ptrtoint ptr %tx_wake_threshold.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %tx_wake_threshold.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i17.i, i32 %73)
  %cmp.not.i.i = icmp sgt i32 %sub.i17.i, %73
  br i1 %cmp.not.i.i, label %if.then3.i.i.if.end.i_crit_edge, label %if.then6.i.i

if.then3.i.i.if.end.i_crit_edge:                  ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then6.i.i:                                     ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @netif_tx_wake_queue(ptr noundef %arrayidx.i.i.i) #20
  br label %if.end.i

if.end.i:                                         ; preds = %if.then6.i.i, %if.then3.i.i.if.end.i_crit_edge, %if.end.i.i.if.end.i_crit_edge, %if.then.i.if.end.i_crit_edge, %while.body.i.if.end.i_crit_edge
  %74 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 -1, ptr %xmit_lock_owner.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i.i) #20
  %75 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %arrayidx.i.i, align 4
  %conv6.i = zext i8 %76 to i32
  %shl.i = shl nuw i32 1, %conv6.i
  %neg.i = xor i32 %shl.i, -1
  %and.i160 = and i32 %cause_tx_done.addr.021.i, %neg.i
  %tobool.not.i161 = icmp eq i32 %and.i160, 0
  br i1 %tobool.not.i161, label %mvneta_tx_done_gbe.exit, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

mvneta_tx_done_gbe.exit:                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %and18 = and i32 %19, -256
  br label %if.end19

if.end19:                                         ; preds = %mvneta_tx_done_gbe.exit, %if.end13.if.end19_crit_edge
  %cause_rx_tx.0 = phi i32 [ %and18, %mvneta_tx_done_gbe.exit ], [ %19, %if.end13.if.end19_crit_edge ]
  %neta_armada3700 = getelementptr i8, ptr %1, i32 3324
  %77 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %78)
  %tobool20.not = icmp eq i8 %78, 0
  %cause_rx_tx21 = getelementptr i8, ptr %1, i32 2408
  %cause_rx_tx22 = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %11, i32 0, i32 2
  %cond.in = select i1 %tobool20.not, ptr %cause_rx_tx22, ptr %cause_rx_tx21
  %79 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %79)
  %cond = load i32, ptr %cond.in, align 8
  %or = or i32 %cond, %cause_rx_tx.0
  %shr = lshr i32 %or, 8
  %and23 = and i32 %shr, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool.not.i = icmp eq i32 %and23, 0
  br i1 %tobool.not.i, label %if.end19.if.end35_crit_edge, label %if.then26

if.end19.if.end35_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

if.then26:                                        ; preds = %if.end19
  %80 = tail call i32 @llvm.ctlz.i32(i32 %and23, i1 true) #20, !range !262
  %sub = xor i32 %80, 31
  %bm_priv = getelementptr i8, ptr %1, i32 2964
  %81 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %bm_priv, align 4
  %tobool27.not = icmp eq ptr %82, null
  %rxqs31 = getelementptr i8, ptr %1, i32 2328
  %83 = ptrtoint ptr %rxqs31 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %rxqs31, align 8
  %arrayidx32 = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub
  %85 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %dev3, align 8
  br i1 %tobool27.not, label %if.else, label %if.then28

if.then28:                                        ; preds = %if.then26
  %87 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %arrayidx32, align 128
  %conv.i.i162 = zext i8 %88 to i32
  %shl.i.i = shl nuw nsw i32 %conv.i.i162, 2
  %add.i.i = add nuw nsw i32 %shl.i.i, 5344
  %89 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %90, i32 %add.i.i
  %91 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %92 = and i32 %91, -12648448
  %93 = tail call i32 @llvm.bswap.i32(i32 %92) #20
  %94 = tail call i32 @llvm.smin.i32(i32 %93, i32 %budget) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %cmp2207.i = icmp sgt i32 %94, 0
  br i1 %cmp2207.i, label %while.body.lr.ph.i163, label %if.then28.mvneta_rx_hwbm.exit_crit_edge

if.then28.mvneta_rx_hwbm.exit_crit_edge:          ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rx_hwbm.exit

while.body.lr.ph.i163:                            ; preds = %if.then28
  %next_desc_to_proc.i.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 11
  %last_desc.i.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 10
  %descs.i.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 8
  %stats39.i = getelementptr i8, ptr %1, i32 2312
  br label %while.body.i168

while.body.i168:                                  ; preds = %cleanup.i.while.body.i168_crit_edge, %while.body.lr.ph.i163
  %rx_done.0214.i = phi i32 [ 0, %while.body.lr.ph.i163 ], [ %inc.i, %cleanup.i.while.body.i168_crit_edge ]
  %rcvd_pkts.0211.i = phi i32 [ 0, %while.body.lr.ph.i163 ], [ %rcvd_pkts.1.i, %cleanup.i.while.body.i168_crit_edge ]
  %rcvd_bytes.0208.i = phi i32 [ 0, %while.body.lr.ph.i163 ], [ %rcvd_bytes.1.i, %cleanup.i.while.body.i168_crit_edge ]
  %95 = ptrtoint ptr %next_desc_to_proc.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %next_desc_to_proc.i.i, align 16
  %97 = ptrtoint ptr %last_desc.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %last_desc.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %96, i32 %98)
  %cmp.i.i = icmp slt i32 %96, %98
  %add.i183.i = add i32 %96, 1
  %spec.select.i.i = select i1 %cmp.i.i, i32 %add.i183.i, i32 0
  %99 = ptrtoint ptr %next_desc_to_proc.i.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 %spec.select.i.i, ptr %next_desc_to_proc.i.i, align 16
  %100 = ptrtoint ptr %descs.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %descs.i.i, align 4
  %add.ptr.i.i164 = getelementptr %struct.mvneta_rx_desc, ptr %101, i32 %spec.select.i.i
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %add.ptr.i.i164) #20, !srcloc !263
  %102 = ptrtoint ptr %descs.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %descs.i.i, align 4
  %add.ptr4.i.i = getelementptr %struct.mvneta_rx_desc, ptr %103, i32 %96
  %inc.i = add nuw nsw i32 %rx_done.0214.i, 1
  %status.i = getelementptr %struct.mvneta_rx_desc, ptr %103, i32 %96, i32 2
  %104 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %status.i, align 4
  %106 = ptrtoint ptr %add.ptr4.i.i to i32
  call void @__asan_load2_noabort(i32 %106)
  %107 = load i16, ptr %add.ptr4.i.i, align 4
  %conv.i165 = zext i16 %107 to i32
  %sub.i166 = add nsw i32 %conv.i165, -6
  %buf_cookie.i = getelementptr %struct.mvneta_rx_desc, ptr %103, i32 %96, i32 7
  %108 = ptrtoint ptr %buf_cookie.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %buf_cookie.i, align 4
  %110 = inttoptr i32 %109 to ptr
  %buf_phys_addr.i = getelementptr %struct.mvneta_rx_desc, ptr %103, i32 %96, i32 4
  %111 = ptrtoint ptr %buf_phys_addr.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %buf_phys_addr.i, align 4
  %and.i167 = lshr i32 %105, 13
  %conv5.i = and i32 %and.i167, 3
  %113 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %bm_priv, align 4
  %bm_pools.i = getelementptr inbounds %struct.mvneta_bm, ptr %114, i32 0, i32 6
  %115 = ptrtoint ptr %bm_pools.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %bm_pools.i, align 4
  %arrayidx.i = getelementptr %struct.mvneta_bm_pool, ptr %116, i32 %conv5.i
  %117 = and i32 %105, 201392128
  call void @__sanitizer_cov_trace_const_cmp4(i32 201326592, i32 %117)
  %118 = icmp eq i32 %117, 201326592
  br i1 %118, label %if.end12.i, label %while.body.i168.err_drop_frame_ret_pool.i_crit_edge

while.body.i168.err_drop_frame_ret_pool.i_crit_edge: ; preds = %while.body.i168
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_drop_frame_ret_pool.i

err_drop_frame_ret_pool.i:                        ; preds = %if.then38.i, %if.then15.i.err_drop_frame_ret_pool.i_crit_edge, %while.body.i168.err_drop_frame_ret_pool.i_crit_edge
  %119 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %bm_priv, align 4
  %121 = ptrtoint ptr %buf_phys_addr.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %buf_phys_addr.i, align 4
  %123 = tail call i32 @llvm.bswap.i32(i32 %122) #20
  %bppi_virt_addr.i.i = getelementptr inbounds %struct.mvneta_bm, ptr %120, i32 0, i32 4
  %124 = ptrtoint ptr %bppi_virt_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %bppi_virt_addr.i.i, align 4
  %id.i.i = getelementptr %struct.mvneta_bm_pool, ptr %116, i32 %conv5.i, i32 1
  %126 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %id.i.i, align 4
  %conv.i186.i = zext i8 %127 to i32
  %shl.i187.i = shl nuw nsw i32 %conv.i186.i, 8
  %add.ptr.i188.i = getelementptr i8, ptr %125, i32 %shl.i187.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i188.i, i32 %123) #20, !srcloc !256
  br label %err_drop_frame.i

err_drop_frame.i:                                 ; preds = %if.end46.i.err_drop_frame.i_crit_edge, %err_drop_frame_ret_pool.i
  tail call fastcc void @mvneta_rx_error(ptr noundef %add.ptr.i, ptr noundef %add.ptr4.i.i) #20
  br label %cleanup.i

if.end12.i:                                       ; preds = %while.body.i168
  %128 = load i32, ptr @rx_copybreak, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i166, i32 %128)
  %cmp13.not.i = icmp sgt i32 %sub.i166, %128
  br i1 %cmp13.not.i, label %if.end35.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.end12.i
  %add.i.i.i = add nsw i32 %conv.i165, -4
  %call.i.i.i = tail call ptr @__netdev_alloc_skb(ptr noundef %86, i32 noundef %add.i.i.i, i32 noundef 2592) #20
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.then15.i.err_drop_frame_ret_pool.i_crit_edge, label %if.end22.i

if.then15.i.err_drop_frame_ret_pool.i_crit_edge:  ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_drop_frame_ret_pool.i

if.end22.i:                                       ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #22
  %data.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 19
  %129 = ptrtoint ptr %data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %data.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %130, i32 2
  store ptr %add.ptr.i.i.i.i, ptr %data.i.i.i.i, align 4
  %tail.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 16
  %131 = ptrtoint ptr %tail.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %tail.i.i.i.i, align 8
  %add.ptr1.i.i.i.i = getelementptr i8, ptr %132, i32 2
  store ptr %add.ptr1.i.i.i.i, ptr %tail.i.i.i.i, align 8
  %133 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %bm_priv, align 4
  %pdev.i = getelementptr inbounds %struct.mvneta_bm, ptr %134, i32 0, i32 2
  %135 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %pdev.i, align 4
  %dev24.i = getelementptr inbounds %struct.platform_device, ptr %136, i32 0, i32 3
  %137 = ptrtoint ptr %buf_phys_addr.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %buf_phys_addr.i, align 4
  %add.i189.i = add i32 %138, 130
  tail call void @dma_sync_single_for_cpu(ptr noundef %dev24.i, i32 noundef %add.i189.i, i32 noundef %sub.i166, i32 noundef 2) #20
  %add.ptr26.i = getelementptr i8, ptr %110, i32 130
  %call.i.i = tail call ptr @skb_put(ptr noundef nonnull %call.i.i.i, i32 noundef %sub.i166) #20
  %139 = call ptr @memcpy(ptr %call.i.i, ptr %add.ptr26.i, i32 %sub.i166)
  %call28.i = tail call zeroext i16 @eth_type_trans(ptr noundef nonnull %call.i.i.i, ptr noundef %86) #20
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 15, i32 0, i32 18
  %140 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %140)
  store i16 %call28.i, ptr %protocol.i, align 8
  %141 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %dev3, align 8
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %142, i32 0, i32 23
  %143 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %143)
  %144 = load i64, ptr %features.i.i, align 16
  %and.i190.i = and i64 %144, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i190.i)
  %tobool.not.i.i = icmp ne i64 %and.i190.i, 0
  %145 = and i32 %105, 1107296256
  call void @__sanitizer_cov_trace_const_cmp4(i32 1107296256, i32 %145)
  %146 = icmp eq i32 %145, 1107296256
  %not..i.i = and i1 %146, %tobool.not.i.i
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 15
  %147 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %147)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.value.i = select i1 %not..i.i, i16 512, i16 0
  %bf.clear.i = and i16 %bf.load.i, -1537
  %bf.set.i = or i16 %bf.value.i, %bf.clear.i
  store i16 %bf.set.i, ptr %ip_summed.i, align 8
  %call31.i = tail call i32 @napi_gro_receive(ptr noundef %napi, ptr noundef nonnull %call.i.i.i) #20
  %inc32.i = add i32 %rcvd_pkts.0211.i, 1
  %add.i = add i32 %sub.i166, %rcvd_bytes.0208.i
  %148 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %bm_priv, align 4
  %150 = ptrtoint ptr %buf_phys_addr.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %buf_phys_addr.i, align 4
  %152 = tail call i32 @llvm.bswap.i32(i32 %151) #20
  %bppi_virt_addr.i191.i = getelementptr inbounds %struct.mvneta_bm, ptr %149, i32 0, i32 4
  %153 = ptrtoint ptr %bppi_virt_addr.i191.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %bppi_virt_addr.i191.i, align 4
  %id.i192.i = getelementptr %struct.mvneta_bm_pool, ptr %116, i32 %conv5.i, i32 1
  %155 = ptrtoint ptr %id.i192.i to i32
  call void @__asan_load1_noabort(i32 %155)
  %156 = load i8, ptr %id.i192.i, align 4
  %conv.i193.i = zext i8 %156 to i32
  %shl.i194.i = shl nuw nsw i32 %conv.i193.i, 8
  %add.ptr.i195.i = getelementptr i8, ptr %154, i32 %shl.i194.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i195.i, i32 %152) #20, !srcloc !256
  br label %cleanup.i

if.end35.i:                                       ; preds = %if.end12.i
  %call36.i = tail call i32 @hwbm_pool_refill(ptr noundef %arrayidx.i, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36.i)
  %tobool37.not.i = icmp eq i32 %call36.i, 0
  br i1 %tobool37.not.i, label %if.end46.i, label %if.then38.i

if.then38.i:                                      ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %86, ptr noundef nonnull @.str.78) #24
  %157 = ptrtoint ptr %stats39.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %stats39.i, align 8
  %159 = ptrtoint ptr %158 to i32
  %160 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i196.i = and i32 %160, -16384
  %161 = inttoptr i32 %and.i196.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %161, i32 0, i32 3
  %162 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %cpu.i, align 4
  %arrayidx42.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %163
  %164 = ptrtoint ptr %arrayidx42.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %arrayidx42.i, align 4
  %add43.i = add i32 %165, %159
  %166 = inttoptr i32 %add43.i to ptr
  tail call fastcc void @u64_stats_update_begin(ptr noundef %166) #20
  %refill_error.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %166, i32 0, i32 1, i32 2
  %167 = ptrtoint ptr %refill_error.i to i32
  call void @__asan_load8_noabort(i32 %167)
  %168 = load i64, ptr %refill_error.i, align 8
  %inc44.i = add i64 %168, 1
  store i64 %inc44.i, ptr %refill_error.i, align 8
  %dep_map.i.i.i = getelementptr inbounds %struct.seqcount, ptr %166, i32 0, i32 1
  %169 = tail call ptr @llvm.returnaddress(i32 0) #20
  %170 = ptrtoint ptr %169 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %170) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %171 = ptrtoint ptr %166 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %166, align 4
  %inc.i.i.i.i = add i32 %172, 1
  store i32 %inc.i.i.i.i, ptr %166, align 4
  br label %err_drop_frame_ret_pool.i

if.end46.i:                                       ; preds = %if.end35.i
  %frag_size48.i = getelementptr inbounds %struct.hwbm_pool, ptr %arrayidx.i, i32 0, i32 1
  %173 = ptrtoint ptr %frag_size48.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %frag_size48.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %174)
  %cmp49.i = icmp ugt i32 %174, 4096
  %spec.select182.i = select i1 %cmp49.i, i32 0, i32 %174
  %call51.i = tail call ptr @build_skb(ptr noundef %110, i32 noundef %spec.select182.i) #20
  %175 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %bm_priv, align 4
  %pdev53.i = getelementptr inbounds %struct.mvneta_bm, ptr %176, i32 0, i32 2
  %177 = ptrtoint ptr %pdev53.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %pdev53.i, align 4
  %dev54.i = getelementptr inbounds %struct.platform_device, ptr %178, i32 0, i32 3
  %buf_size.i = getelementptr %struct.mvneta_bm_pool, ptr %116, i32 %conv5.i, i32 4
  %179 = ptrtoint ptr %buf_size.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %buf_size.i, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %dev54.i, i32 noundef %112, i32 noundef %180, i32 noundef 2, i32 noundef 0) #20
  %tobool55.not.i = icmp eq ptr %call51.i, null
  br i1 %tobool55.not.i, label %if.end46.i.err_drop_frame.i_crit_edge, label %if.end57.i

if.end46.i.err_drop_frame.i_crit_edge:            ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_drop_frame.i

if.end57.i:                                       ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #22
  %inc58.i = add i32 %rcvd_pkts.0211.i, 1
  %add59.i = add i32 %sub.i166, %rcvd_bytes.0208.i
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %call51.i, i32 0, i32 19
  %181 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i197.i = getelementptr i8, ptr %182, i32 130
  store ptr %add.ptr.i197.i, ptr %data.i.i, align 4
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %call51.i, i32 0, i32 16
  %183 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %tail.i.i, align 8
  %add.ptr1.i.i = getelementptr i8, ptr %184, i32 130
  store ptr %add.ptr1.i.i, ptr %tail.i.i, align 8
  %call60.i = tail call ptr @skb_put(ptr noundef nonnull %call51.i, i32 noundef %sub.i166) #20
  %call61.i = tail call zeroext i16 @eth_type_trans(ptr noundef nonnull %call51.i, ptr noundef %86) #20
  %protocol62.i = getelementptr inbounds %struct.sk_buff, ptr %call51.i, i32 0, i32 15, i32 0, i32 18
  %185 = ptrtoint ptr %protocol62.i to i32
  call void @__asan_store2_noabort(i32 %185)
  store i16 %call61.i, ptr %protocol62.i, align 8
  %186 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %dev3, align 8
  %features.i199.i = getelementptr inbounds %struct.net_device, ptr %187, i32 0, i32 23
  %188 = ptrtoint ptr %features.i199.i to i32
  call void @__asan_load8_noabort(i32 %188)
  %189 = load i64, ptr %features.i199.i, align 16
  %and.i200.i = and i64 %189, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i200.i)
  %tobool.not.i201.i = icmp ne i64 %and.i200.i, 0
  %190 = and i32 %105, 1107296256
  call void @__sanitizer_cov_trace_const_cmp4(i32 1107296256, i32 %190)
  %191 = icmp eq i32 %190, 1107296256
  %not..i202.i = and i1 %191, %tobool.not.i201.i
  %ip_summed65.i = getelementptr inbounds %struct.sk_buff, ptr %call51.i, i32 0, i32 15
  %192 = ptrtoint ptr %ip_summed65.i to i32
  call void @__asan_load2_noabort(i32 %192)
  %bf.load66.i = load i16, ptr %ip_summed65.i, align 8
  %bf.value67.i = select i1 %not..i202.i, i16 512, i16 0
  %bf.clear69.i = and i16 %bf.load66.i, -1537
  %bf.set70.i = or i16 %bf.value67.i, %bf.clear69.i
  store i16 %bf.set70.i, ptr %ip_summed65.i, align 8
  %call72.i = tail call i32 @napi_gro_receive(ptr noundef %napi, ptr noundef nonnull %call51.i) #20
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end57.i, %if.end22.i, %err_drop_frame.i
  %rcvd_bytes.1.i = phi i32 [ %rcvd_bytes.0208.i, %err_drop_frame.i ], [ %add.i, %if.end22.i ], [ %add59.i, %if.end57.i ]
  %rcvd_pkts.1.i = phi i32 [ %rcvd_pkts.0211.i, %err_drop_frame.i ], [ %inc32.i, %if.end22.i ], [ %inc58.i, %if.end57.i ]
  %exitcond.not.i = icmp eq i32 %inc.i, %94
  br i1 %exitcond.not.i, label %while.end.i, label %cleanup.i.while.body.i168_crit_edge

cleanup.i.while.body.i168_crit_edge:              ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i168

while.end.i:                                      ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rcvd_pkts.1.i)
  %tobool82.not.i = icmp eq i32 %rcvd_pkts.1.i, 0
  br i1 %tobool82.not.i, label %while.end.i.mvneta_rx_hwbm.exit_crit_edge, label %if.then83.i

while.end.i.mvneta_rx_hwbm.exit_crit_edge:        ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rx_hwbm.exit

if.then83.i:                                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %193 = ptrtoint ptr %stats39.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %stats39.i, align 8
  %195 = ptrtoint ptr %194 to i32
  %196 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i204.i = and i32 %196, -16384
  %197 = inttoptr i32 %and.i204.i to ptr
  %cpu94.i = getelementptr inbounds %struct.thread_info, ptr %197, i32 0, i32 3
  %198 = ptrtoint ptr %cpu94.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %cpu94.i, align 4
  %arrayidx95.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %199
  %200 = ptrtoint ptr %arrayidx95.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %arrayidx95.i, align 4
  %add96.i = add i32 %201, %195
  %202 = inttoptr i32 %add96.i to ptr
  tail call fastcc void @u64_stats_update_begin(ptr noundef %202) #20
  %conv98.i = zext i32 %rcvd_pkts.1.i to i64
  %es99.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %202, i32 0, i32 1
  %203 = ptrtoint ptr %es99.i to i32
  call void @__asan_load8_noabort(i32 %203)
  %204 = load i64, ptr %es99.i, align 8
  %add100.i = add i64 %204, %conv98.i
  store i64 %add100.i, ptr %es99.i, align 8
  %conv101.i = zext i32 %rcvd_bytes.1.i to i64
  %rx_bytes104.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %202, i32 0, i32 1, i32 0, i32 1
  %205 = ptrtoint ptr %rx_bytes104.i to i32
  call void @__asan_load8_noabort(i32 %205)
  %206 = load i64, ptr %rx_bytes104.i, align 8
  %add105.i = add i64 %206, %conv101.i
  store i64 %add105.i, ptr %rx_bytes104.i, align 8
  %dep_map.i.i205.i = getelementptr inbounds %struct.seqcount, ptr %202, i32 0, i32 1
  %207 = tail call ptr @llvm.returnaddress(i32 0) #20
  %208 = ptrtoint ptr %207 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i205.i, i32 noundef %208) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %209 = ptrtoint ptr %202 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %202, align 4
  %inc.i.i.i206.i = add i32 %210, 1
  store i32 %inc.i.i.i206.i, ptr %202, align 4
  br label %mvneta_rx_hwbm.exit

mvneta_rx_hwbm.exit:                              ; preds = %if.then83.i, %while.end.i.mvneta_rx_hwbm.exit_crit_edge, %if.then28.mvneta_rx_hwbm.exit_crit_edge
  %rx_done.0.lcssa221.i = phi i32 [ %94, %if.then83.i ], [ %94, %while.end.i.mvneta_rx_hwbm.exit_crit_edge ], [ 0, %if.then28.mvneta_rx_hwbm.exit_crit_edge ]
  tail call fastcc void @mvneta_rxq_desc_num_update(ptr noundef %add.ptr.i, ptr noundef %arrayidx32, i32 noundef %rx_done.0.lcssa221.i, i32 noundef %rx_done.0.lcssa221.i) #20
  br label %if.end35

if.else:                                          ; preds = %if.then26
  call void @llvm.lifetime.start.p0(i64 248, ptr nonnull %sinfo.i) #20
  %211 = call ptr @memset(ptr %sinfo.i, i32 255, i32 248)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %ps.i) #20
  %212 = call ptr @memset(ptr %ps.i, i32 0, i32 88)
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %xdp_buf.i) #20
  %213 = getelementptr inbounds %struct.xdp_buff, ptr %xdp_buf.i, i32 0, i32 1
  %214 = getelementptr inbounds %struct.xdp_buff, ptr %xdp_buf.i, i32 0, i32 2
  %215 = getelementptr inbounds %struct.xdp_buff, ptr %xdp_buf.i, i32 0, i32 3
  %216 = getelementptr inbounds %struct.xdp_buff, ptr %xdp_buf.i, i32 0, i32 4
  %217 = getelementptr inbounds %struct.xdp_buff, ptr %xdp_buf.i, i32 0, i32 6
  %xdp_rxq.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 6
  %218 = call ptr @memset(ptr %xdp_buf.i, i32 255, i32 24)
  %219 = ptrtoint ptr %217 to i32
  call void @__asan_store4_noabort(i32 %219)
  store i32 4096, ptr %217, align 4
  %220 = ptrtoint ptr %216 to i32
  call void @__asan_store4_noabort(i32 %220)
  store ptr %xdp_rxq.i, ptr %216, align 4
  %221 = ptrtoint ptr %215 to i32
  call void @__asan_store4_noabort(i32 %221)
  store ptr null, ptr %215, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %sinfo.i, i32 0, i32 2
  %222 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_store1_noabort(i32 %222)
  store i8 0, ptr %nr_frags.i, align 2
  %223 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load1_noabort(i32 %223)
  %224 = load i8, ptr %arrayidx32, align 128
  %conv.i.i170 = zext i8 %224 to i32
  %shl.i.i171 = shl nuw nsw i32 %conv.i.i170, 2
  %add.i.i172 = add nuw nsw i32 %shl.i.i171, 5344
  %225 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i.i174 = getelementptr i8, ptr %226, i32 %add.i.i172
  %227 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i174) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %228 = and i32 %227, -12648448
  %229 = tail call i32 @llvm.bswap.i32(i32 %228) #20
  %xdp_prog2.i = getelementptr i8, ptr %1, i32 2640
  %230 = ptrtoint ptr %xdp_prog2.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load volatile ptr, ptr %xdp_prog2.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %budget)
  %cmp247.i = icmp sgt i32 %budget, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %228)
  %cmp3248.i = icmp ne i32 %228, 0
  %or.cond249.i = select i1 %cmp247.i, i1 %cmp3248.i, i1 false
  br i1 %or.cond249.i, label %while.body.lr.ph.i178, label %if.else.while.end.i209_crit_edge

if.else.while.end.i209_crit_edge:                 ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i209

while.body.lr.ph.i178:                            ; preds = %if.else
  %next_desc_to_proc.i.i175 = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 11
  %last_desc.i.i176 = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 10
  %descs.i.i177 = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 8
  %buf_virt_addr.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 7
  %refill_num.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 13
  %page_pool.i.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 4
  %rx_offset_correction.i.i = getelementptr i8, ptr %1, i32 3326
  %frags20.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %sinfo.i, i32 0, i32 12
  %tobool24.not.i = icmp eq ptr %231, null
  %rx_bytes.i = getelementptr inbounds %struct.mvneta_stats, ptr %ps.i, i32 0, i32 1
  %stats37.i = getelementptr i8, ptr %1, i32 2312
  br label %while.body.i188

while.body.i188:                                  ; preds = %cleanup.i208.while.body.i188_crit_edge, %while.body.lr.ph.i178
  %rx_proc.0253.i = phi i32 [ 0, %while.body.lr.ph.i178 ], [ %inc.i185, %cleanup.i208.while.body.i188_crit_edge ]
  %desc_status.0252.i = phi i32 [ -1, %while.body.lr.ph.i178 ], [ %desc_status.3.i, %cleanup.i208.while.body.i188_crit_edge ]
  %frame_sz.0251.i = phi i32 [ -1, %while.body.lr.ph.i178 ], [ %frame_sz.3.i, %cleanup.i208.while.body.i188_crit_edge ]
  %size.0250.i = phi i32 [ 0, %while.body.lr.ph.i178 ], [ %size.3.i, %cleanup.i208.while.body.i188_crit_edge ]
  %232 = ptrtoint ptr %next_desc_to_proc.i.i175 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %next_desc_to_proc.i.i175, align 16
  %234 = ptrtoint ptr %last_desc.i.i176 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %last_desc.i.i176, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %233, i32 %235)
  %cmp.i.i179 = icmp slt i32 %233, %235
  %add.i133.i = add i32 %233, 1
  %spec.select.i.i180 = select i1 %cmp.i.i179, i32 %add.i133.i, i32 0
  %236 = ptrtoint ptr %next_desc_to_proc.i.i175 to i32
  call void @__asan_store4_noabort(i32 %236)
  store i32 %spec.select.i.i180, ptr %next_desc_to_proc.i.i175, align 16
  %237 = ptrtoint ptr %descs.i.i177 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %descs.i.i177, align 4
  %add.ptr.i.i181 = getelementptr %struct.mvneta_rx_desc, ptr %238, i32 %spec.select.i.i180
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %add.ptr.i.i181) #20, !srcloc !263
  %239 = ptrtoint ptr %descs.i.i177 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load ptr, ptr %descs.i.i177, align 4
  %add.ptr4.i.i182 = getelementptr %struct.mvneta_rx_desc, ptr %240, i32 %233
  %add.ptr4.i.idx.i = shl i32 %233, 5
  %sub.ptr.div.i = ashr exact i32 %add.ptr4.i.idx.i, 5
  %241 = ptrtoint ptr %buf_virt_addr.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %buf_virt_addr.i, align 128
  %arrayidx.i183 = getelementptr ptr, ptr %242, i32 %sub.ptr.div.i
  %243 = ptrtoint ptr %arrayidx.i183 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %arrayidx.i183, align 4
  %status.i184 = getelementptr %struct.mvneta_rx_desc, ptr %240, i32 %233, i32 2
  %245 = ptrtoint ptr %status.i184 to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %status.i184, align 4
  %inc.i185 = add nuw nsw i32 %rx_proc.0253.i, 1
  %247 = ptrtoint ptr %refill_num.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %refill_num.i, align 8
  %inc5.i = add i32 %248, 1
  store i32 %inc5.i, ptr %refill_num.i, align 8
  %and.i186 = and i32 %246, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i186)
  %tobool.not.i187 = icmp eq i32 %and.i186, 0
  br i1 %tobool.not.i187, label %if.else.i, label %if.then.i189

if.then.i189:                                     ; preds = %while.body.i188
  %and6.i = and i32 %246, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %tobool7.not.i = icmp eq i32 %and6.i, 0
  br i1 %tobool7.not.i, label %if.end.i193, label %if.then8.i

if.then8.i:                                       ; preds = %if.then.i189
  call void @__sanitizer_cov_trace_pc() #22
  call fastcc void @mvneta_rx_error(ptr noundef %add.ptr.i, ptr noundef %add.ptr4.i.i182) #20
  br label %next.i

if.end.i193:                                      ; preds = %if.then.i189
  call void @__sanitizer_cov_trace_pc() #22
  %249 = ptrtoint ptr %add.ptr4.i.i182 to i32
  call void @__asan_load2_noabort(i32 %249)
  %250 = load i16, ptr %add.ptr4.i.i182, align 4
  %conv.i190 = zext i16 %250 to i32
  %sub.i191 = add nsw i32 %conv.i190, -4
  %call.i.i192 = call ptr @page_address(ptr noundef %244) #20
  %251 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load ptr, ptr %dev3, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 3584, i16 %250)
  %cmp.i134.i = icmp ugt i16 %250, 3584
  %add2.i.i = add nsw i32 %conv.i190, -6
  %data_len.0.i.i = select i1 %cmp.i134.i, i32 3582, i32 %add2.i.i
  %253 = call i32 @llvm.umin.i32(i32 %conv.i190, i32 3584) #20
  %sub3.i.i = sub nsw i32 %conv.i190, %253
  %254 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %page_pool.i.i, align 16
  %dma_dir.i.i.i = getelementptr inbounds %struct.page_pool_params, ptr %255, i32 0, i32 5
  %256 = ptrtoint ptr %dma_dir.i.i.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load i32, ptr %dma_dir.i.i.i, align 4
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %252, i32 0, i32 133, i32 1
  %258 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %parent.i.i, align 8
  %buf_phys_addr.i.i = getelementptr %struct.mvneta_rx_desc, ptr %240, i32 %233, i32 4
  %260 = ptrtoint ptr %buf_phys_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %buf_phys_addr.i.i, align 4
  call void @dma_sync_single_for_cpu(ptr noundef %259, i32 noundef %261, i32 noundef %253, i32 noundef %257) #20
  %262 = ptrtoint ptr %buf_phys_addr.i.i to i32
  call void @__asan_store4_noabort(i32 %262)
  store i32 0, ptr %buf_phys_addr.i.i, align 4
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %call.i.i192) #20, !srcloc !263
  %263 = ptrtoint ptr %rx_offset_correction.i.i to i32
  call void @__asan_load2_noabort(i32 %263)
  %264 = load i16, ptr %rx_offset_correction.i.i, align 2
  %conv.i135.i = zext i16 %264 to i32
  %add7.i.i = add nuw nsw i32 %conv.i135.i, 2
  %add.ptr.i.i136.i = getelementptr i8, ptr %call.i.i192, i32 %add7.i.i
  %265 = ptrtoint ptr %215 to i32
  call void @__asan_store4_noabort(i32 %265)
  store ptr %call.i.i192, ptr %215, align 4
  %266 = ptrtoint ptr %xdp_buf.i to i32
  call void @__asan_store4_noabort(i32 %266)
  store ptr %add.ptr.i.i136.i, ptr %xdp_buf.i, align 4
  %add.ptr2.i.i.i = getelementptr i8, ptr %add.ptr.i.i136.i, i32 %data_len.0.i.i
  %267 = ptrtoint ptr %213 to i32
  call void @__asan_store4_noabort(i32 %267)
  store ptr %add.ptr2.i.i.i, ptr %213, align 4
  %add.ptr3.i.i.i = getelementptr i8, ptr %add.ptr.i.i136.i, i32 1
  %268 = ptrtoint ptr %214 to i32
  call void @__asan_store4_noabort(i32 %268)
  store ptr %add.ptr3.i.i.i, ptr %214, align 4
  %269 = ptrtoint ptr %217 to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load i32, ptr %217, align 4
  %add.ptr.i22.i.i = getelementptr i8, ptr %call.i.i192, i32 -256
  %add.ptr1.i.i.i = getelementptr i8, ptr %add.ptr.i22.i.i, i32 %270
  %nr_frags.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr1.i.i.i, i32 0, i32 2
  %271 = ptrtoint ptr %nr_frags.i.i to i32
  call void @__asan_store1_noabort(i32 %271)
  store i8 0, ptr %nr_frags.i.i, align 2
  br label %if.end16.i

if.else.i:                                        ; preds = %while.body.i188
  %272 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load ptr, ptr %215, align 4
  %tobool10.not.i = icmp eq ptr %273, null
  br i1 %tobool10.not.i, label %if.then14.i, label %if.end15.i, !prof !261

if.then14.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  %buf_phys_addr.i194 = getelementptr %struct.mvneta_rx_desc, ptr %240, i32 %233, i32 4
  %274 = ptrtoint ptr %buf_phys_addr.i194 to i32
  call void @__asan_store4_noabort(i32 %274)
  store i32 0, ptr %buf_phys_addr.i194, align 4
  %275 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %page_pool.i.i, align 16
  call void @page_pool_put_page(ptr noundef %276, ptr noundef %244, i32 noundef -1, i1 noundef zeroext true) #20
  br label %next.i

if.end15.i:                                       ; preds = %if.else.i
  %277 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load ptr, ptr %dev3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3584, i32 %size.0250.i)
  %cmp.i138.i = icmp ugt i32 %size.0250.i, 3584
  %sub.i.i = add i32 %size.0250.i, -4
  %data_len.0.i139.i = select i1 %cmp.i138.i, i32 3584, i32 %sub.i.i
  %279 = call i32 @llvm.umin.i32(i32 %size.0250.i, i32 3584) #20
  %280 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %page_pool.i.i, align 16
  %dma_dir.i.i141.i = getelementptr inbounds %struct.page_pool_params, ptr %281, i32 0, i32 5
  %282 = ptrtoint ptr %dma_dir.i.i141.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %dma_dir.i.i141.i, align 4
  %parent.i142.i = getelementptr inbounds %struct.net_device, ptr %278, i32 0, i32 133, i32 1
  %284 = ptrtoint ptr %parent.i142.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %parent.i142.i, align 8
  %buf_phys_addr.i143.i = getelementptr %struct.mvneta_rx_desc, ptr %240, i32 %233, i32 4
  %286 = ptrtoint ptr %buf_phys_addr.i143.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %buf_phys_addr.i143.i, align 4
  call void @dma_sync_single_for_cpu(ptr noundef %285, i32 noundef %287, i32 noundef %279, i32 noundef %283) #20
  %288 = ptrtoint ptr %buf_phys_addr.i143.i to i32
  call void @__asan_store4_noabort(i32 %288)
  store i32 0, ptr %buf_phys_addr.i143.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %data_len.0.i139.i)
  %cmp4.i.i = icmp sgt i32 %data_len.0.i139.i, 0
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %if.end15.i.if.else10.i.i_crit_edge

if.end15.i.if.else10.i.i_crit_edge:               ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else10.i.i

land.lhs.true.i.i:                                ; preds = %if.end15.i
  %289 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %289)
  %290 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 17, i8 %290)
  %cmp5.i.i = icmp ult i8 %290, 17
  br i1 %cmp5.i.i, label %if.then7.i.i, label %land.lhs.true.i.i.if.else10.i.i_crit_edge

land.lhs.true.i.i.if.else10.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else10.i.i

if.then7.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i145.i = zext i8 %290 to i32
  %inc.i.i = add nuw nsw i8 %290, 1
  %291 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_store1_noabort(i32 %291)
  store i8 %inc.i.i, ptr %nr_frags.i, align 2
  %arrayidx.i.i195 = getelementptr %struct.skb_shared_info, ptr %sinfo.i, i32 0, i32 12, i32 %conv.i145.i
  %292 = ptrtoint ptr %rx_offset_correction.i.i to i32
  call void @__asan_load2_noabort(i32 %292)
  %293 = load i16, ptr %rx_offset_correction.i.i, align 2
  %conv9.i.i = zext i16 %293 to i32
  %bv_offset.i.i.i = getelementptr %struct.skb_shared_info, ptr %sinfo.i, i32 0, i32 12, i32 %conv.i145.i, i32 2
  %294 = ptrtoint ptr %bv_offset.i.i.i to i32
  call void @__asan_store4_noabort(i32 %294)
  store i32 %conv9.i.i, ptr %bv_offset.i.i.i, align 4
  %bv_len.i.i.i = getelementptr %struct.skb_shared_info, ptr %sinfo.i, i32 0, i32 12, i32 %conv.i145.i, i32 1
  %295 = ptrtoint ptr %bv_len.i.i.i to i32
  call void @__asan_store4_noabort(i32 %295)
  store i32 %data_len.0.i139.i, ptr %bv_len.i.i.i, align 4
  %296 = ptrtoint ptr %arrayidx.i.i195 to i32
  call void @__asan_store4_noabort(i32 %296)
  store ptr %244, ptr %arrayidx.i.i195, align 4
  br label %if.end12.i.i

if.else10.i.i:                                    ; preds = %land.lhs.true.i.i.if.else10.i.i_crit_edge, %if.end15.i.if.else10.i.i_crit_edge
  %297 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load ptr, ptr %page_pool.i.i, align 16
  call void @page_pool_put_page(ptr noundef %298, ptr noundef %244, i32 noundef -1, i1 noundef zeroext true) #20
  br label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.else10.i.i, %if.then7.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3585, i32 %size.0250.i)
  %cmp13.i.i = icmp ult i32 %size.0250.i, 3585
  br i1 %cmp13.i.i, label %if.then15.i.i, label %if.end12.i.i.mvneta_swbm_add_rx_fragment.exit.i_crit_edge

if.end12.i.i.mvneta_swbm_add_rx_fragment.exit.i_crit_edge: ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_swbm_add_rx_fragment.exit.i

if.then15.i.i:                                    ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %299 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load ptr, ptr %215, align 4
  %301 = ptrtoint ptr %217 to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %217, align 4
  %add.ptr.i.i149.i = getelementptr i8, ptr %300, i32 -256
  %add.ptr1.i.i150.i = getelementptr i8, ptr %add.ptr.i.i149.i, i32 %302
  %303 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %303)
  %304 = load i8, ptr %nr_frags.i, align 2
  %nr_frags18.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr1.i.i150.i, i32 0, i32 2
  %305 = ptrtoint ptr %nr_frags18.i.i to i32
  call void @__asan_store1_noabort(i32 %305)
  store i8 %304, ptr %nr_frags18.i.i, align 2
  %frags19.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr1.i.i150.i, i32 0, i32 12
  %conv23.i.i = zext i8 %304 to i32
  %mul.i.i = mul nuw nsw i32 %conv23.i.i, 12
  %306 = call ptr @memcpy(ptr %frags19.i.i, ptr %frags20.i.i, i32 %mul.i.i)
  br label %mvneta_swbm_add_rx_fragment.exit.i

mvneta_swbm_add_rx_fragment.exit.i:               ; preds = %if.then15.i.i, %if.end12.i.i.mvneta_swbm_add_rx_fragment.exit.i_crit_edge
  %sub25.i.i = sub i32 %size.0250.i, %279
  br label %if.end16.i

if.end16.i:                                       ; preds = %mvneta_swbm_add_rx_fragment.exit.i, %if.end.i193
  %size.1.i = phi i32 [ %sub25.i.i, %mvneta_swbm_add_rx_fragment.exit.i ], [ %sub3.i.i, %if.end.i193 ]
  %frame_sz.1.i = phi i32 [ %frame_sz.0251.i, %mvneta_swbm_add_rx_fragment.exit.i ], [ %sub.i191, %if.end.i193 ]
  %desc_status.1.i = phi i32 [ %desc_status.0252.i, %mvneta_swbm_add_rx_fragment.exit.i ], [ %246, %if.end.i193 ]
  %and17.i = and i32 %246, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  br i1 %tobool18.not.i, label %if.end16.i.cleanup.i208_crit_edge, label %if.end20.i

if.end16.i.cleanup.i208_crit_edge:                ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i208

if.end20.i:                                       ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size.1.i)
  %tobool21.not.i = icmp eq i32 %size.1.i, 0
  br i1 %tobool21.not.i, label %if.end23.i, label %if.then22.i

if.then22.i:                                      ; preds = %if.end20.i
  %307 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %307)
  %308 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %308)
  %cmp2.not.i.i = icmp eq i8 %308, 0
  br i1 %cmp2.not.i.i, label %if.then22.i.for.end.i.i_crit_edge, label %for.body.lr.ph.i.i

if.then22.i.for.end.i.i_crit_edge:                ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i.i

for.body.lr.ph.i.i:                               ; preds = %if.then22.i
  %conv.i155.i = zext i8 %308 to i32
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.03.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i154.i, %for.body.i.i.for.body.i.i_crit_edge ]
  %309 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load ptr, ptr %page_pool.i.i, align 16
  %arrayidx.i153.i = getelementptr %struct.skb_shared_info, ptr %sinfo.i, i32 0, i32 12, i32 %i.03.i.i
  %311 = ptrtoint ptr %arrayidx.i153.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load ptr, ptr %arrayidx.i153.i, align 4
  call void @page_pool_put_page(ptr noundef %310, ptr noundef %312, i32 noundef -1, i1 noundef zeroext true) #20
  %inc.i154.i = add nuw nsw i32 %i.03.i.i, 1
  %exitcond.not.i196 = icmp eq i32 %inc.i154.i, %conv.i155.i
  br i1 %exitcond.not.i196, label %for.body.i.i.for.end.i.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i.i

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body.i.i.for.end.i.i_crit_edge, %if.then22.i.for.end.i.i_crit_edge
  %313 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %page_pool.i.i, align 16
  %315 = ptrtoint ptr %xdp_buf.i to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %xdp_buf.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %317 = load ptr, ptr @mem_map, align 4
  %318 = ptrtoint ptr %316 to i32
  %sub.i.i.i = add i32 %318, 1073741824
  %shr.i.i.i = lshr i32 %sub.i.i.i, 12
  %319 = getelementptr %struct.page, ptr %317, i32 %shr.i.i.i, i32 1
  %320 = ptrtoint ptr %319 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load volatile i32, ptr %319, align 4
  %and.i.i.i.i197 = and i32 %321, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i197)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i197, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i, !prof !257

if.then.i.i.i.i:                                  ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i.i198 = add i32 %321, -1
  br label %mvneta_xdp_put_buff.exit.i

if.end.i.i.i.i:                                   ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i.i157.i = getelementptr %struct.page, ptr %317, i32 %shr.i.i.i
  %322 = ptrtoint ptr %add.ptr.i.i157.i to i32
  br label %mvneta_xdp_put_buff.exit.i

mvneta_xdp_put_buff.exit.i:                       ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i198, %if.then.i.i.i.i ], [ %322, %if.end.i.i.i.i ]
  %323 = inttoptr i32 %retval.0.i.i.i.i to ptr
  call void @page_pool_put_page(ptr noundef %314, ptr noundef %323, i32 noundef -1, i1 noundef zeroext true) #20
  br label %next.i

if.end23.i:                                       ; preds = %if.end20.i
  br i1 %tobool24.not.i, label %if.end23.i.if.end28.i_crit_edge, label %land.lhs.true.i

if.end23.i.if.end28.i_crit_edge:                  ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28.i

land.lhs.true.i:                                  ; preds = %if.end23.i
  %call25.i = call fastcc i32 @mvneta_run_xdp(ptr noundef %add.ptr.i, ptr noundef %arrayidx32, ptr noundef nonnull %231, ptr noundef nonnull %xdp_buf.i, i32 noundef %frame_sz.1.i, ptr noundef nonnull %ps.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool26.not.i = icmp eq i32 %call25.i, 0
  br i1 %tobool26.not.i, label %land.lhs.true.i.if.end28.i_crit_edge, label %land.lhs.true.i.next.i_crit_edge

land.lhs.true.i.next.i_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %next.i

land.lhs.true.i.if.end28.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28.i

if.end28.i:                                       ; preds = %land.lhs.true.i.if.end28.i_crit_edge, %if.end23.i.if.end28.i_crit_edge
  %324 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load ptr, ptr %215, align 4
  %326 = ptrtoint ptr %217 to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load i32, ptr %217, align 4
  %add.ptr.i.i160.i = getelementptr i8, ptr %325, i32 -256
  %add.ptr1.i.i161.i = getelementptr i8, ptr %add.ptr.i.i160.i, i32 %327
  %nr_frags.i162.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr1.i.i161.i, i32 0, i32 2
  %328 = ptrtoint ptr %nr_frags.i162.i to i32
  call void @__asan_load1_noabort(i32 %328)
  %329 = load i8, ptr %nr_frags.i162.i, align 2
  %conv.i163.i = zext i8 %329 to i32
  %call1.i.i = call ptr @build_skb(ptr noundef %325, i32 noundef 4096) #20
  %tobool.not.i.i199 = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i.i199, label %if.end28.i.if.then32.i_crit_edge, label %if.end.i.i201

if.end28.i.if.then32.i_crit_edge:                 ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then32.i

if.end.i.i201:                                    ; preds = %if.end28.i
  %pp_recycle.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call1.i.i, i32 0, i32 12
  %330 = ptrtoint ptr %pp_recycle.i.i.i to i32
  call void @__asan_load1_noabort(i32 %330)
  %bf.load.i.i.i = load i8, ptr %pp_recycle.i.i.i, align 2
  %bf.set.i.i.i = or i8 %bf.load.i.i.i, 1
  store i8 %bf.set.i.i.i, ptr %pp_recycle.i.i.i, align 2
  %331 = ptrtoint ptr %xdp_buf.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load ptr, ptr %xdp_buf.i, align 4
  %333 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %215, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %332 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %334 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call1.i.i, i32 0, i32 19
  %335 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load ptr, ptr %data.i.i.i, align 4
  %add.ptr.i1.i.i = getelementptr i8, ptr %336, i32 %sub.ptr.sub.i.i
  store ptr %add.ptr.i1.i.i, ptr %data.i.i.i, align 4
  %tail.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call1.i.i, i32 0, i32 16
  %337 = ptrtoint ptr %tail.i.i.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load ptr, ptr %tail.i.i.i, align 8
  %add.ptr1.i2.i.i = getelementptr i8, ptr %338, i32 %sub.ptr.sub.i.i
  store ptr %add.ptr1.i2.i.i, ptr %tail.i.i.i, align 8
  %339 = ptrtoint ptr %213 to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load ptr, ptr %213, align 4
  %sub.ptr.lhs.cast5.i.i = ptrtoint ptr %340 to i32
  %sub.ptr.sub7.i.i = sub i32 %sub.ptr.lhs.cast5.i.i, %sub.ptr.lhs.cast.i.i
  %call8.i.i = call ptr @skb_put(ptr noundef nonnull %call1.i.i, i32 noundef %sub.ptr.sub7.i.i) #20
  %341 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load ptr, ptr %dev3, align 8
  %features.i.i.i = getelementptr inbounds %struct.net_device, ptr %342, i32 0, i32 23
  %343 = ptrtoint ptr %features.i.i.i to i32
  call void @__asan_load8_noabort(i32 %343)
  %344 = load i64, ptr %features.i.i.i, align 16
  %and.i.i.i = and i64 %344, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.not.i.i.i200 = icmp ne i64 %and.i.i.i, 0
  %345 = and i32 %desc_status.1.i, 1107296256
  call void @__sanitizer_cov_trace_const_cmp4(i32 1107296256, i32 %345)
  %346 = icmp eq i32 %345, 1107296256
  %not..i.i.i = and i1 %346, %tobool.not.i.i.i200
  %ip_summed.i.i = getelementptr inbounds %struct.sk_buff, ptr %call1.i.i, i32 0, i32 15
  %347 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %347)
  %bf.load.i.i = load i16, ptr %ip_summed.i.i, align 8
  %bf.value.i.i = select i1 %not..i.i.i, i16 512, i16 0
  %bf.clear.i.i = and i16 %bf.load.i.i, -1537
  %bf.set.i.i = or i16 %bf.value.i.i, %bf.clear.i.i
  store i16 %bf.set.i.i, ptr %ip_summed.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %329)
  %cmp3.not.i.i = icmp eq i8 %329, 0
  br i1 %cmp3.not.i.i, label %if.end.i.i201.mvneta_swbm_build_skb.exit.i_crit_edge, label %for.body.lr.ph.i164.i

if.end.i.i201.mvneta_swbm_build_skb.exit.i_crit_edge: ; preds = %if.end.i.i201
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_swbm_build_skb.exit.i

for.body.lr.ph.i164.i:                            ; preds = %if.end.i.i201
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call1.i.i, i32 0, i32 17
  br label %for.body.i169.i

for.body.i169.i:                                  ; preds = %for.body.i169.i.for.body.i169.i_crit_edge, %for.body.lr.ph.i164.i
  %i.04.i.i = phi i32 [ 0, %for.body.lr.ph.i164.i ], [ %inc.i168.i, %for.body.i169.i.for.body.i169.i_crit_edge ]
  %arrayidx.i165.i = getelementptr %struct.skb_shared_info, ptr %add.ptr1.i.i161.i, i32 0, i32 12, i32 %i.04.i.i
  %348 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load ptr, ptr %end.i.i.i, align 4
  %nr_frags13.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %349, i32 0, i32 2
  %350 = ptrtoint ptr %nr_frags13.i.i to i32
  call void @__asan_load1_noabort(i32 %350)
  %351 = load i8, ptr %nr_frags13.i.i, align 2
  %conv14.i.i = zext i8 %351 to i32
  %352 = ptrtoint ptr %arrayidx.i165.i to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load ptr, ptr %arrayidx.i165.i, align 4
  %bv_offset.i.i166.i = getelementptr inbounds %struct.bio_vec, ptr %arrayidx.i165.i, i32 0, i32 2
  %354 = ptrtoint ptr %bv_offset.i.i166.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load i32, ptr %bv_offset.i.i166.i, align 4
  %bv_len.i.i167.i = getelementptr inbounds %struct.bio_vec, ptr %arrayidx.i165.i, i32 0, i32 1
  %356 = ptrtoint ptr %bv_len.i.i167.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %bv_len.i.i167.i, align 4
  call void @skb_add_rx_frag(ptr noundef nonnull %call1.i.i, i32 noundef %conv14.i.i, ptr noundef %353, i32 noundef %355, i32 noundef %357, i32 noundef 4096) #20
  %inc.i168.i = add nuw nsw i32 %i.04.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i168.i, %conv.i163.i
  br i1 %exitcond.not.i.i, label %for.body.i169.i.mvneta_swbm_build_skb.exit.i_crit_edge, label %for.body.i169.i.for.body.i169.i_crit_edge

for.body.i169.i.for.body.i169.i_crit_edge:        ; preds = %for.body.i169.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i169.i

for.body.i169.i.mvneta_swbm_build_skb.exit.i_crit_edge: ; preds = %for.body.i169.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_swbm_build_skb.exit.i

mvneta_swbm_build_skb.exit.i:                     ; preds = %for.body.i169.i.mvneta_swbm_build_skb.exit.i_crit_edge, %if.end.i.i201.mvneta_swbm_build_skb.exit.i_crit_edge
  %cmp.i170.i = icmp ugt ptr %call1.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i170.i, label %mvneta_swbm_build_skb.exit.i.if.then32.i_crit_edge, label %if.end44.i

mvneta_swbm_build_skb.exit.i.if.then32.i_crit_edge: ; preds = %mvneta_swbm_build_skb.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then32.i

if.then32.i:                                      ; preds = %mvneta_swbm_build_skb.exit.i.if.then32.i_crit_edge, %if.end28.i.if.then32.i_crit_edge
  %358 = ptrtoint ptr %stats37.i to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load ptr, ptr %stats37.i, align 8
  %360 = ptrtoint ptr %359 to i32
  %361 = call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i202 = and i32 %361, -16384
  %362 = inttoptr i32 %and.i.i202 to ptr
  %cpu.i203 = getelementptr inbounds %struct.thread_info, ptr %362, i32 0, i32 3
  %363 = ptrtoint ptr %cpu.i203 to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load i32, ptr %cpu.i203, align 4
  %arrayidx40.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %364
  %365 = ptrtoint ptr %arrayidx40.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load i32, ptr %arrayidx40.i, align 4
  %add.i204 = add i32 %366, %360
  %367 = inttoptr i32 %add.i204 to ptr
  %368 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %368)
  %369 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %369)
  %cmp2.not.i172.i = icmp eq i8 %369, 0
  br i1 %cmp2.not.i172.i, label %if.then32.i.for.end.i186.i_crit_edge, label %for.body.lr.ph.i174.i

if.then32.i.for.end.i186.i_crit_edge:             ; preds = %if.then32.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i186.i

for.body.lr.ph.i174.i:                            ; preds = %if.then32.i
  %conv.i178.i = zext i8 %369 to i32
  br label %for.body.i180.i

for.body.i180.i:                                  ; preds = %for.body.i180.i.for.body.i180.i_crit_edge, %for.body.lr.ph.i174.i
  %i.03.i175.i = phi i32 [ 0, %for.body.lr.ph.i174.i ], [ %inc.i177.i, %for.body.i180.i.for.body.i180.i_crit_edge ]
  %370 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load ptr, ptr %page_pool.i.i, align 16
  %arrayidx.i176.i = getelementptr %struct.skb_shared_info, ptr %sinfo.i, i32 0, i32 12, i32 %i.03.i175.i
  %372 = ptrtoint ptr %arrayidx.i176.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %arrayidx.i176.i, align 4
  call void @page_pool_put_page(ptr noundef %371, ptr noundef %373, i32 noundef -1, i1 noundef zeroext true) #20
  %inc.i177.i = add nuw nsw i32 %i.03.i175.i, 1
  %exitcond256.not.i = icmp eq i32 %inc.i177.i, %conv.i178.i
  br i1 %exitcond256.not.i, label %for.body.i180.i.for.end.i186.i_crit_edge, label %for.body.i180.i.for.body.i180.i_crit_edge

for.body.i180.i.for.body.i180.i_crit_edge:        ; preds = %for.body.i180.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i180.i

for.body.i180.i.for.end.i186.i_crit_edge:         ; preds = %for.body.i180.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i186.i

for.end.i186.i:                                   ; preds = %for.body.i180.i.for.end.i186.i_crit_edge, %if.then32.i.for.end.i186.i_crit_edge
  %374 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load ptr, ptr %page_pool.i.i, align 16
  %376 = ptrtoint ptr %xdp_buf.i to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load ptr, ptr %xdp_buf.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %378 = load ptr, ptr @mem_map, align 4
  %379 = ptrtoint ptr %377 to i32
  %sub.i.i182.i = add i32 %379, 1073741824
  %shr.i.i183.i = lshr i32 %sub.i.i182.i, 12
  %380 = getelementptr %struct.page, ptr %378, i32 %shr.i.i183.i, i32 1
  %381 = ptrtoint ptr %380 to i32
  call void @__asan_load4_noabort(i32 %381)
  %382 = load volatile i32, ptr %380, align 4
  %and.i.i.i184.i = and i32 %382, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i184.i)
  %tobool.not.i.i.i185.i = icmp eq i32 %and.i.i.i184.i, 0
  br i1 %tobool.not.i.i.i185.i, label %if.end.i.i.i190.i, label %if.then.i.i.i188.i, !prof !257

if.then.i.i.i188.i:                               ; preds = %for.end.i186.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i187.i = add i32 %382, -1
  br label %mvneta_xdp_put_buff.exit192.i

if.end.i.i.i190.i:                                ; preds = %for.end.i186.i
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i.i189.i = getelementptr %struct.page, ptr %378, i32 %shr.i.i183.i
  %383 = ptrtoint ptr %add.ptr.i.i189.i to i32
  br label %mvneta_xdp_put_buff.exit192.i

mvneta_xdp_put_buff.exit192.i:                    ; preds = %if.end.i.i.i190.i, %if.then.i.i.i188.i
  %retval.0.i.i.i191.i = phi i32 [ %sub.i.i.i187.i, %if.then.i.i.i188.i ], [ %383, %if.end.i.i.i190.i ]
  %384 = inttoptr i32 %retval.0.i.i.i191.i to ptr
  call void @page_pool_put_page(ptr noundef %375, ptr noundef %384, i32 noundef -1, i1 noundef zeroext true) #20
  call fastcc void @u64_stats_update_begin(ptr noundef %367) #20
  %skb_alloc_error.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %367, i32 0, i32 1, i32 1
  %385 = ptrtoint ptr %skb_alloc_error.i to i32
  call void @__asan_load8_noabort(i32 %385)
  %386 = load i64, ptr %skb_alloc_error.i, align 8
  %inc41.i = add i64 %386, 1
  store i64 %inc41.i, ptr %skb_alloc_error.i, align 8
  %rx_dropped.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %367, i32 0, i32 2
  %387 = ptrtoint ptr %rx_dropped.i to i32
  call void @__asan_load8_noabort(i32 %387)
  %388 = load i64, ptr %rx_dropped.i, align 8
  %inc42.i = add i64 %388, 1
  store i64 %inc42.i, ptr %rx_dropped.i, align 8
  %dep_map.i.i.i205 = getelementptr inbounds %struct.seqcount, ptr %367, i32 0, i32 1
  %389 = call ptr @llvm.returnaddress(i32 0) #20
  %390 = ptrtoint ptr %389 to i32
  call void @lock_release(ptr noundef %dep_map.i.i.i205, i32 noundef %390) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %391 = ptrtoint ptr %367 to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load i32, ptr %367, align 4
  %inc.i.i.i.i206 = add i32 %392, 1
  store i32 %inc.i.i.i.i206, ptr %367, align 4
  br label %next.i

if.end44.i:                                       ; preds = %mvneta_swbm_build_skb.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %call1.i.i, i32 0, i32 6
  %393 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load i32, ptr %len.i, align 4
  %conv45.i = zext i32 %394 to i64
  %395 = ptrtoint ptr %rx_bytes.i to i32
  call void @__asan_load8_noabort(i32 %395)
  %396 = load i64, ptr %rx_bytes.i, align 8
  %add46.i = add i64 %396, %conv45.i
  store i64 %add46.i, ptr %rx_bytes.i, align 8
  %397 = ptrtoint ptr %ps.i to i32
  call void @__asan_load8_noabort(i32 %397)
  %398 = load i64, ptr %ps.i, align 8
  %inc47.i = add i64 %398, 1
  store i64 %inc47.i, ptr %ps.i, align 8
  %call48.i = call zeroext i16 @eth_type_trans(ptr noundef nonnull %call1.i.i, ptr noundef %86) #20
  %protocol.i207 = getelementptr inbounds %struct.sk_buff, ptr %call1.i.i, i32 0, i32 15, i32 0, i32 18
  %399 = ptrtoint ptr %protocol.i207 to i32
  call void @__asan_store2_noabort(i32 %399)
  store i16 %call48.i, ptr %protocol.i207, align 8
  %call49.i = call i32 @napi_gro_receive(ptr noundef %napi, ptr noundef nonnull %call1.i.i) #20
  br label %next.i

next.i:                                           ; preds = %if.end44.i, %mvneta_xdp_put_buff.exit192.i, %land.lhs.true.i.next.i_crit_edge, %mvneta_xdp_put_buff.exit.i, %if.then14.i, %if.then8.i
  %size.2.i = phi i32 [ %size.0250.i, %if.then14.i ], [ 0, %mvneta_xdp_put_buff.exit192.i ], [ 0, %if.end44.i ], [ 0, %land.lhs.true.i.next.i_crit_edge ], [ %size.1.i, %mvneta_xdp_put_buff.exit.i ], [ %size.0250.i, %if.then8.i ]
  %frame_sz.2.i = phi i32 [ %frame_sz.0251.i, %if.then14.i ], [ %frame_sz.1.i, %mvneta_xdp_put_buff.exit192.i ], [ %frame_sz.1.i, %if.end44.i ], [ %frame_sz.1.i, %land.lhs.true.i.next.i_crit_edge ], [ %frame_sz.1.i, %mvneta_xdp_put_buff.exit.i ], [ %frame_sz.0251.i, %if.then8.i ]
  %desc_status.2.i = phi i32 [ %desc_status.0252.i, %if.then14.i ], [ %desc_status.1.i, %mvneta_xdp_put_buff.exit192.i ], [ %desc_status.1.i, %if.end44.i ], [ %desc_status.1.i, %land.lhs.true.i.next.i_crit_edge ], [ %desc_status.1.i, %mvneta_xdp_put_buff.exit.i ], [ %desc_status.0252.i, %if.then8.i ]
  %400 = ptrtoint ptr %215 to i32
  call void @__asan_store4_noabort(i32 %400)
  store ptr null, ptr %215, align 4
  %401 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_store1_noabort(i32 %401)
  store i8 0, ptr %nr_frags.i, align 2
  br label %cleanup.i208

cleanup.i208:                                     ; preds = %next.i, %if.end16.i.cleanup.i208_crit_edge
  %size.3.i = phi i32 [ %size.2.i, %next.i ], [ %size.1.i, %if.end16.i.cleanup.i208_crit_edge ]
  %frame_sz.3.i = phi i32 [ %frame_sz.2.i, %next.i ], [ %frame_sz.1.i, %if.end16.i.cleanup.i208_crit_edge ]
  %desc_status.3.i = phi i32 [ %desc_status.2.i, %next.i ], [ %desc_status.1.i, %if.end16.i.cleanup.i208_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i185, i32 %budget)
  %cmp.i = icmp slt i32 %inc.i185, %budget
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i185, i32 %229)
  %cmp3.i = icmp ult i32 %inc.i185, %229
  %or.cond.i = select i1 %cmp.i, i1 %cmp3.i, i1 false
  br i1 %or.cond.i, label %cleanup.i208.while.body.i188_crit_edge, label %cleanup.i208.while.end.i209_crit_edge

cleanup.i208.while.end.i209_crit_edge:            ; preds = %cleanup.i208
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i209

cleanup.i208.while.body.i188_crit_edge:           ; preds = %cleanup.i208
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i188

while.end.i209:                                   ; preds = %cleanup.i208.while.end.i209_crit_edge, %if.else.while.end.i209_crit_edge
  %rx_proc.0.lcssa.i = phi i32 [ 0, %if.else.while.end.i209_crit_edge ], [ %inc.i185, %cleanup.i208.while.end.i209_crit_edge ]
  %402 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load ptr, ptr %215, align 4
  %tobool58.not.i = icmp eq ptr %403, null
  br i1 %tobool58.not.i, label %while.end.i209.if.end60.i_crit_edge, label %if.then59.i

while.end.i209.if.end60.i_crit_edge:              ; preds = %while.end.i209
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end60.i

if.then59.i:                                      ; preds = %while.end.i209
  %404 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %404)
  %405 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %405)
  %cmp2.not.i194.i = icmp eq i8 %405, 0
  br i1 %cmp2.not.i194.i, label %if.then59.i.for.end.i208.i_crit_edge, label %for.body.lr.ph.i196.i

if.then59.i.for.end.i208.i_crit_edge:             ; preds = %if.then59.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i208.i

for.body.lr.ph.i196.i:                            ; preds = %if.then59.i
  %page_pool.i195.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 4
  %conv.i200.i = zext i8 %405 to i32
  br label %for.body.i202.i

for.body.i202.i:                                  ; preds = %for.body.i202.i.for.body.i202.i_crit_edge, %for.body.lr.ph.i196.i
  %i.03.i197.i = phi i32 [ 0, %for.body.lr.ph.i196.i ], [ %inc.i199.i, %for.body.i202.i.for.body.i202.i_crit_edge ]
  %406 = ptrtoint ptr %page_pool.i195.i to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load ptr, ptr %page_pool.i195.i, align 16
  %arrayidx.i198.i = getelementptr %struct.skb_shared_info, ptr %sinfo.i, i32 0, i32 12, i32 %i.03.i197.i
  %408 = ptrtoint ptr %arrayidx.i198.i to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load ptr, ptr %arrayidx.i198.i, align 4
  call void @page_pool_put_page(ptr noundef %407, ptr noundef %409, i32 noundef -1, i1 noundef zeroext true) #20
  %inc.i199.i = add nuw nsw i32 %i.03.i197.i, 1
  %exitcond257.not.i = icmp eq i32 %inc.i199.i, %conv.i200.i
  br i1 %exitcond257.not.i, label %for.body.i202.i.for.end.i208.i_crit_edge, label %for.body.i202.i.for.body.i202.i_crit_edge

for.body.i202.i.for.body.i202.i_crit_edge:        ; preds = %for.body.i202.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i202.i

for.body.i202.i.for.end.i208.i_crit_edge:         ; preds = %for.body.i202.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i208.i

for.end.i208.i:                                   ; preds = %for.body.i202.i.for.end.i208.i_crit_edge, %if.then59.i.for.end.i208.i_crit_edge
  %page_pool2.i203.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 4
  %410 = ptrtoint ptr %page_pool2.i203.i to i32
  call void @__asan_load4_noabort(i32 %410)
  %411 = load ptr, ptr %page_pool2.i203.i, align 16
  %412 = ptrtoint ptr %xdp_buf.i to i32
  call void @__asan_load4_noabort(i32 %412)
  %413 = load ptr, ptr %xdp_buf.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %414 = load ptr, ptr @mem_map, align 4
  %415 = ptrtoint ptr %413 to i32
  %sub.i.i204.i = add i32 %415, 1073741824
  %shr.i.i205.i = lshr i32 %sub.i.i204.i, 12
  %416 = getelementptr %struct.page, ptr %414, i32 %shr.i.i205.i, i32 1
  %417 = ptrtoint ptr %416 to i32
  call void @__asan_load4_noabort(i32 %417)
  %418 = load volatile i32, ptr %416, align 4
  %and.i.i.i206.i = and i32 %418, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i206.i)
  %tobool.not.i.i.i207.i = icmp eq i32 %and.i.i.i206.i, 0
  br i1 %tobool.not.i.i.i207.i, label %if.end.i.i.i212.i, label %if.then.i.i.i210.i, !prof !257

if.then.i.i.i210.i:                               ; preds = %for.end.i208.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i209.i = add i32 %418, -1
  br label %mvneta_xdp_put_buff.exit214.i

if.end.i.i.i212.i:                                ; preds = %for.end.i208.i
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i.i211.i = getelementptr %struct.page, ptr %414, i32 %shr.i.i205.i
  %419 = ptrtoint ptr %add.ptr.i.i211.i to i32
  br label %mvneta_xdp_put_buff.exit214.i

mvneta_xdp_put_buff.exit214.i:                    ; preds = %if.end.i.i.i212.i, %if.then.i.i.i210.i
  %retval.0.i.i.i213.i = phi i32 [ %sub.i.i.i209.i, %if.then.i.i.i210.i ], [ %419, %if.end.i.i.i212.i ]
  %420 = inttoptr i32 %retval.0.i.i.i213.i to ptr
  call void @page_pool_put_page(ptr noundef %411, ptr noundef %420, i32 noundef -1, i1 noundef zeroext true) #20
  br label %if.end60.i

if.end60.i:                                       ; preds = %mvneta_xdp_put_buff.exit214.i, %while.end.i209.if.end60.i_crit_edge
  %xdp_redirect.i = getelementptr inbounds %struct.mvneta_stats, ptr %ps.i, i32 0, i32 4
  %421 = ptrtoint ptr %xdp_redirect.i to i32
  call void @__asan_load8_noabort(i32 %421)
  %422 = load i64, ptr %xdp_redirect.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %422)
  %tobool61.not.i = icmp eq i64 %422, 0
  br i1 %tobool61.not.i, label %if.end60.i.if.end63.i_crit_edge, label %if.then62.i

if.end60.i.if.end63.i_crit_edge:                  ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end63.i

if.then62.i:                                      ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @xdp_do_flush() #20
  br label %if.end63.i

if.end63.i:                                       ; preds = %if.then62.i, %if.end60.i.if.end63.i_crit_edge
  %423 = ptrtoint ptr %ps.i to i32
  call void @__asan_load8_noabort(i32 %423)
  %424 = load i64, ptr %ps.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %424)
  %tobool65.not.i = icmp eq i64 %424, 0
  br i1 %tobool65.not.i, label %if.end63.i.if.end67.i_crit_edge, label %if.then66.i

if.end63.i.if.end67.i_crit_edge:                  ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end67.i

if.then66.i:                                      ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #22
  %stats1.i.i = getelementptr i8, ptr %1, i32 2312
  %425 = ptrtoint ptr %stats1.i.i to i32
  call void @__asan_load4_noabort(i32 %425)
  %426 = load ptr, ptr %stats1.i.i, align 8
  %427 = ptrtoint ptr %426 to i32
  %428 = call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i215.i = and i32 %428, -16384
  %429 = inttoptr i32 %and.i.i215.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %429, i32 0, i32 3
  %430 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i216.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %431
  %432 = ptrtoint ptr %arrayidx.i216.i to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load i32, ptr %arrayidx.i216.i, align 4
  %add.i217.i = add i32 %433, %427
  %434 = inttoptr i32 %add.i217.i to ptr
  call fastcc void @u64_stats_update_begin(ptr noundef %434) #20
  %es.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %434, i32 0, i32 1
  %435 = ptrtoint ptr %es.i.i to i32
  call void @__asan_load8_noabort(i32 %435)
  %436 = load i64, ptr %es.i.i, align 8
  %add5.i.i = add i64 %436, %424
  store i64 %add5.i.i, ptr %es.i.i, align 8
  %rx_bytes.i.i = getelementptr inbounds %struct.mvneta_stats, ptr %ps.i, i32 0, i32 1
  %437 = ptrtoint ptr %rx_bytes.i.i to i32
  call void @__asan_load8_noabort(i32 %437)
  %438 = load i64, ptr %rx_bytes.i.i, align 8
  %rx_bytes8.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %434, i32 0, i32 1, i32 0, i32 1
  %439 = ptrtoint ptr %rx_bytes8.i.i to i32
  call void @__asan_load8_noabort(i32 %439)
  %440 = load i64, ptr %rx_bytes8.i.i, align 8
  %add9.i.i = add i64 %440, %438
  store i64 %add9.i.i, ptr %rx_bytes8.i.i, align 8
  %xdp_redirect12.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %434, i32 0, i32 1, i32 0, i32 4
  %441 = ptrtoint ptr %xdp_redirect12.i.i to i32
  call void @__asan_load8_noabort(i32 %441)
  %442 = load i64, ptr %xdp_redirect12.i.i, align 8
  %add13.i.i = add i64 %442, %422
  store i64 %add13.i.i, ptr %xdp_redirect12.i.i, align 8
  %xdp_pass.i.i = getelementptr inbounds %struct.mvneta_stats, ptr %ps.i, i32 0, i32 5
  %443 = ptrtoint ptr %xdp_pass.i.i to i32
  call void @__asan_load8_noabort(i32 %443)
  %444 = load i64, ptr %xdp_pass.i.i, align 8
  %xdp_pass16.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %434, i32 0, i32 1, i32 0, i32 5
  %445 = ptrtoint ptr %xdp_pass16.i.i to i32
  call void @__asan_load8_noabort(i32 %445)
  %446 = load i64, ptr %xdp_pass16.i.i, align 8
  %add17.i.i = add i64 %446, %444
  store i64 %add17.i.i, ptr %xdp_pass16.i.i, align 8
  %xdp_drop.i.i = getelementptr inbounds %struct.mvneta_stats, ptr %ps.i, i32 0, i32 6
  %447 = ptrtoint ptr %xdp_drop.i.i to i32
  call void @__asan_load8_noabort(i32 %447)
  %448 = load i64, ptr %xdp_drop.i.i, align 8
  %xdp_drop20.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %434, i32 0, i32 1, i32 0, i32 6
  %449 = ptrtoint ptr %xdp_drop20.i.i to i32
  call void @__asan_load8_noabort(i32 %449)
  %450 = load i64, ptr %xdp_drop20.i.i, align 8
  %add21.i.i = add i64 %450, %448
  store i64 %add21.i.i, ptr %xdp_drop20.i.i, align 8
  %dep_map.i.i.i.i = getelementptr inbounds %struct.seqcount, ptr %434, i32 0, i32 1
  %451 = call ptr @llvm.returnaddress(i32 0) #20
  %452 = ptrtoint ptr %451 to i32
  call void @lock_release(ptr noundef %dep_map.i.i.i.i, i32 noundef %452) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %453 = ptrtoint ptr %434 to i32
  call void @__asan_load4_noabort(i32 %453)
  %454 = load i32, ptr %434, align 4
  %inc.i.i.i.i.i = add i32 %454, 1
  store i32 %inc.i.i.i.i.i, ptr %434, align 4
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.then66.i, %if.end63.i.if.end67.i_crit_edge
  %first_to_refill.i.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 12
  %455 = ptrtoint ptr %first_to_refill.i.i to i32
  call void @__asan_load4_noabort(i32 %455)
  %456 = load i32, ptr %first_to_refill.i.i, align 4
  %refill_num.i.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 13
  %457 = ptrtoint ptr %refill_num.i.i to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load i32, ptr %refill_num.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %458)
  %cmp50.not.i.i = icmp eq i32 %458, 0
  br i1 %cmp50.not.i.i, label %if.end67.i.mvneta_rx_swbm.exit_crit_edge, label %for.body.lr.ph.i220.i

if.end67.i.mvneta_rx_swbm.exit_crit_edge:         ; preds = %if.end67.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rx_swbm.exit

for.body.lr.ph.i220.i:                            ; preds = %if.end67.i
  %descs.i218.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 8
  %page_pool.i.i.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 4
  %rx_offset_correction.i.i.i = getelementptr i8, ptr %1, i32 3326
  %buf_virt_addr.i.i.i.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 7
  %last_desc.i219.i = getelementptr %struct.mvneta_rx_queue, ptr %84, i32 %sub, i32 10
  br label %for.body.i223.i

for.body.i223.i:                                  ; preds = %if.end14.i.i.for.body.i223.i_crit_edge, %for.body.lr.ph.i220.i
  %curr_desc.053.i.i = phi i32 [ %456, %for.body.lr.ph.i220.i ], [ %spec.select.i235.i, %if.end14.i.i.for.body.i223.i_crit_edge ]
  %i.051.i.i = phi i32 [ 0, %for.body.lr.ph.i220.i ], [ %inc18.i.i, %if.end14.i.i.for.body.i223.i_crit_edge ]
  %459 = ptrtoint ptr %descs.i218.i to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load ptr, ptr %descs.i218.i, align 4
  %buf_phys_addr.i221.i = getelementptr %struct.mvneta_rx_desc, ptr %460, i32 %curr_desc.053.i.i, i32 4
  %461 = ptrtoint ptr %buf_phys_addr.i221.i to i32
  call void @__asan_load4_noabort(i32 %461)
  %462 = load i32, ptr %buf_phys_addr.i221.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %462)
  %tobool.not.i222.i = icmp eq i32 %462, 0
  br i1 %tobool.not.i222.i, label %if.then.i.i, label %for.body.i223.i.if.end14.i.i_crit_edge

for.body.i223.i.if.end14.i.i_crit_edge:           ; preds = %for.body.i223.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14.i.i

if.then.i.i:                                      ; preds = %for.body.i223.i
  %463 = ptrtoint ptr %page_pool.i.i.i to i32
  call void @__asan_load4_noabort(i32 %463)
  %464 = load ptr, ptr %page_pool.i.i.i, align 16
  %call.i.i.i210 = call ptr @page_pool_alloc_pages(ptr noundef %464, i32 noundef 10784) #20
  %tobool.not.i.i224.i = icmp eq ptr %call.i.i.i210, null
  br i1 %tobool.not.i.i224.i, label %if.then3.i.i212, label %mvneta_rx_refill.exit.thread.i.i

mvneta_rx_refill.exit.thread.i.i:                 ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i225.i = getelementptr %struct.mvneta_rx_desc, ptr %460, i32 %curr_desc.053.i.i
  %dma_addr.i.i.i.i = getelementptr inbounds %struct.page, ptr %call.i.i.i210, i32 0, i32 1, i32 0, i32 2
  %465 = ptrtoint ptr %dma_addr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %465)
  %466 = load i32, ptr %dma_addr.i.i.i.i, align 4
  %467 = ptrtoint ptr %rx_offset_correction.i.i.i to i32
  call void @__asan_load2_noabort(i32 %467)
  %468 = load i16, ptr %rx_offset_correction.i.i.i, align 2
  %conv.i.i.i = zext i16 %468 to i32
  %add.i.i.i211 = add i32 %466, %conv.i.i.i
  %469 = ptrtoint ptr %buf_phys_addr.i221.i to i32
  call void @__asan_store4_noabort(i32 %469)
  store i32 %add.i.i.i211, ptr %buf_phys_addr.i221.i, align 4
  %470 = ptrtoint ptr %descs.i218.i to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load ptr, ptr %descs.i218.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %add.ptr.i225.i to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %471 to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  %sub.ptr.div.i.i.i.i = ashr exact i32 %sub.ptr.sub.i.i.i.i, 5
  %472 = ptrtoint ptr %buf_virt_addr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load ptr, ptr %buf_virt_addr.i.i.i.i, align 128
  %arrayidx.i.i.i.i = getelementptr ptr, ptr %473, i32 %sub.ptr.div.i.i.i.i
  %474 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %474)
  store ptr %call.i.i.i210, ptr %arrayidx.i.i.i.i, align 4
  br label %if.end14.i.i

if.then3.i.i212:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %475 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load1_noabort(i32 %475)
  %476 = load i8, ptr %arrayidx32, align 128
  %conv.i226.i = zext i8 %476 to i32
  %477 = ptrtoint ptr %refill_num.i.i to i32
  call void @__asan_load4_noabort(i32 %477)
  %478 = load i32, ptr %refill_num.i.i, align 8
  %call5.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87, i32 noundef %conv.i226.i, i32 noundef %i.051.i.i, i32 noundef %478) #24
  %stats10.i.i = getelementptr i8, ptr %1, i32 2312
  %479 = ptrtoint ptr %stats10.i.i to i32
  call void @__asan_load4_noabort(i32 %479)
  %480 = load ptr, ptr %stats10.i.i, align 8
  %481 = ptrtoint ptr %480 to i32
  %482 = call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i227.i = and i32 %482, -16384
  %483 = inttoptr i32 %and.i.i227.i to ptr
  %cpu.i228.i = getelementptr inbounds %struct.thread_info, ptr %483, i32 0, i32 3
  %484 = ptrtoint ptr %cpu.i228.i to i32
  call void @__asan_load4_noabort(i32 %484)
  %485 = load i32, ptr %cpu.i228.i, align 4
  %arrayidx.i229.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %485
  %486 = ptrtoint ptr %arrayidx.i229.i to i32
  call void @__asan_load4_noabort(i32 %486)
  %487 = load i32, ptr %arrayidx.i229.i, align 4
  %add.i230.i = add i32 %487, %481
  %488 = inttoptr i32 %add.i230.i to ptr
  call fastcc void @u64_stats_update_begin(ptr noundef %488) #20
  %refill_error.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %488, i32 0, i32 1, i32 2
  %489 = ptrtoint ptr %refill_error.i.i to i32
  call void @__asan_load8_noabort(i32 %489)
  %490 = load i64, ptr %refill_error.i.i, align 8
  %inc.i231.i = add i64 %490, 1
  store i64 %inc.i231.i, ptr %refill_error.i.i, align 8
  %dep_map.i.i.i232.i = getelementptr inbounds %struct.seqcount, ptr %488, i32 0, i32 1
  %491 = call ptr @llvm.returnaddress(i32 0) #20
  %492 = ptrtoint ptr %491 to i32
  call void @lock_release(ptr noundef %dep_map.i.i.i232.i, i32 noundef %492) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %493 = ptrtoint ptr %488 to i32
  call void @__asan_load4_noabort(i32 %493)
  %494 = load i32, ptr %488, align 4
  %inc.i.i.i.i233.i = add i32 %494, 1
  store i32 %inc.i.i.i.i233.i, ptr %488, align 4
  br label %mvneta_rx_swbm.exit

if.end14.i.i:                                     ; preds = %mvneta_rx_refill.exit.thread.i.i, %for.body.i223.i.if.end14.i.i_crit_edge
  %495 = ptrtoint ptr %last_desc.i219.i to i32
  call void @__asan_load4_noabort(i32 %495)
  %496 = load i32, ptr %last_desc.i219.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %curr_desc.053.i.i, i32 %496)
  %cmp15.i.i = icmp slt i32 %curr_desc.053.i.i, %496
  %add17.i234.i = add i32 %curr_desc.053.i.i, 1
  %spec.select.i235.i = select i1 %cmp15.i.i, i32 %add17.i234.i, i32 0
  %inc18.i.i = add nuw nsw i32 %i.051.i.i, 1
  %497 = ptrtoint ptr %refill_num.i.i to i32
  call void @__asan_load4_noabort(i32 %497)
  %498 = load i32, ptr %refill_num.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %inc18.i.i, i32 %498)
  %cmp.i236.i = icmp ult i32 %inc18.i.i, %498
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %i.051.i.i)
  %cmp1.i.i = icmp ult i32 %i.051.i.i, 63
  %or.cond.i.i = and i1 %cmp1.i.i, %cmp.i236.i
  br i1 %or.cond.i.i, label %if.end14.i.i.for.body.i223.i_crit_edge, label %if.end14.i.i.mvneta_rx_swbm.exit_crit_edge

if.end14.i.i.mvneta_rx_swbm.exit_crit_edge:       ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rx_swbm.exit

if.end14.i.i.for.body.i223.i_crit_edge:           ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i223.i

mvneta_rx_swbm.exit:                              ; preds = %if.end14.i.i.mvneta_rx_swbm.exit_crit_edge, %if.then3.i.i212, %if.end67.i.mvneta_rx_swbm.exit_crit_edge
  %i.048.i.i = phi i32 [ %i.051.i.i, %if.then3.i.i212 ], [ 0, %if.end67.i.mvneta_rx_swbm.exit_crit_edge ], [ %inc18.i.i, %if.end14.i.i.mvneta_rx_swbm.exit_crit_edge ]
  %curr_desc.046.i.i = phi i32 [ %curr_desc.053.i.i, %if.then3.i.i212 ], [ %456, %if.end67.i.mvneta_rx_swbm.exit_crit_edge ], [ %spec.select.i235.i, %if.end14.i.i.mvneta_rx_swbm.exit_crit_edge ]
  %499 = ptrtoint ptr %refill_num.i.i to i32
  call void @__asan_load4_noabort(i32 %499)
  %500 = load i32, ptr %refill_num.i.i, align 8
  %sub.i237.i = sub i32 %500, %i.048.i.i
  store i32 %sub.i237.i, ptr %refill_num.i.i, align 8
  %501 = ptrtoint ptr %first_to_refill.i.i to i32
  call void @__asan_store4_noabort(i32 %501)
  store i32 %curr_desc.046.i.i, ptr %first_to_refill.i.i, align 4
  call fastcc void @mvneta_rxq_desc_num_update(ptr noundef %add.ptr.i, ptr noundef %arrayidx32, i32 noundef %rx_proc.0.lcssa.i, i32 noundef %i.048.i.i) #20
  %conv70.i = trunc i64 %424 to i32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %xdp_buf.i) #20
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %ps.i) #20
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %sinfo.i) #20
  br label %if.end35

if.end35:                                         ; preds = %mvneta_rx_swbm.exit, %mvneta_rx_hwbm.exit, %if.end19.if.end35_crit_edge
  %rx_done.0 = phi i32 [ %rx_done.0.lcssa221.i, %mvneta_rx_hwbm.exit ], [ %conv70.i, %mvneta_rx_swbm.exit ], [ 0, %if.end19.if.end35_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %rx_done.0, i32 %budget)
  %cmp = icmp slt i32 %rx_done.0, %budget
  br i1 %cmp, label %if.then36, label %if.end35.if.end101_crit_edge

if.end35.if.end101_crit_edge:                     ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end101

if.then36:                                        ; preds = %if.end35
  %call37 = call zeroext i1 @napi_complete_done(ptr noundef %napi, i32 noundef %rx_done.0) #20
  %502 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %502)
  %503 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %503)
  %tobool39.not = icmp eq i8 %503, 0
  br i1 %tobool39.not, label %if.else98, label %if.then40

if.then40:                                        ; preds = %if.then36
  %504 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !265
  %and.i213 = and i32 %504, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i213)
  %tobool55.not = icmp eq i32 %and.i213, 0
  br i1 %tobool55.not, label %if.then56, label %if.then40.do.end59_crit_edge

if.then40.do.end59_crit_edge:                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end59

if.then56:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #22
  call void @trace_hardirqs_off() #20
  br label %do.end59

do.end59:                                         ; preds = %if.then56, %if.then40.do.end59_crit_edge
  %505 = load i32, ptr @rxq_number, align 4
  %notmask = shl nsw i32 -1, %505
  %sub60 = xor i32 %notmask, -1
  %shl61 = shl i32 %sub60, 8
  %506 = load i32, ptr @txq_number, align 4
  %notmask153 = shl nsw i32 -1, %506
  %sub63 = xor i32 %notmask153, -1
  %or65 = or i32 %shl61, %sub63
  %or66 = or i32 %or65, -2147483648
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %507 = call i32 @llvm.bswap.i32(i32 %or66) #20
  %508 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %508)
  %509 = load ptr, ptr %base.i, align 4
  %add.ptr.i215 = getelementptr i8, ptr %509, i32 9636
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i215, i32 %507) #20, !srcloc !256
  br i1 %tobool55.not, label %if.then76, label %do.end59.do.body78_crit_edge

do.end59.do.body78_crit_edge:                     ; preds = %do.end59
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body78

if.then76:                                        ; preds = %do.end59
  call void @__sanitizer_cov_trace_pc() #22
  call void @trace_hardirqs_on() #20
  br label %do.body78

do.body78:                                        ; preds = %if.then76, %do.end59.do.body78_crit_edge
  %510 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !266
  %and.i.i217 = and i32 %510, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i217)
  %tobool86.not = icmp eq i32 %and.i.i217, 0
  br i1 %tobool86.not, label %if.then90, label %do.body78.do.end93_crit_edge, !prof !261

do.body78.do.end93_crit_edge:                     ; preds = %do.body78
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end93

if.then90:                                        ; preds = %do.body78
  call void @__sanitizer_cov_trace_pc() #22
  call void @warn_bogus_irq_restore() #20
  br label %do.end93

do.end93:                                         ; preds = %if.then90, %do.body78.do.end93_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %504) #20, !srcloc !267
  br label %if.end101

if.else98:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #22
  %511 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %511)
  %512 = load ptr, ptr %dev3, align 8
  %irq = getelementptr inbounds %struct.net_device, ptr %512, i32 0, i32 64
  %513 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %513)
  %514 = load i32, ptr %irq, align 4
  call void @enable_percpu_irq(i32 noundef %514, i32 noundef 0) #20
  br label %if.end101

if.end101:                                        ; preds = %if.else98, %do.end93, %if.end35.if.end101_crit_edge
  %cause_rx_tx.1 = phi i32 [ 0, %do.end93 ], [ 0, %if.else98 ], [ %or, %if.end35.if.end101_crit_edge ]
  %515 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %515)
  %516 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %516)
  %tobool103.not = icmp eq i8 %516, 0
  br i1 %tobool103.not, label %if.else106, label %if.then104

if.then104:                                       ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #22
  %517 = ptrtoint ptr %cause_rx_tx21 to i32
  call void @__asan_store4_noabort(i32 %517)
  store i32 %cause_rx_tx.1, ptr %cause_rx_tx21, align 8
  br label %cleanup

if.else106:                                       ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #22
  %518 = ptrtoint ptr %cause_rx_tx22 to i32
  call void @__asan_store4_noabort(i32 %518)
  store i32 %cause_rx_tx.1, ptr %cause_rx_tx22, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.else106, %if.then104, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %rx_done.0, %if.else106 ], [ %rx_done.0, %if.then104 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdev(ptr noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @mvneta_bm_pool_destroy(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_dispose_mapping(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_generic_validate(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_mac_prepare(ptr nocapture noundef readonly %config, i32 noundef %mode, i32 noundef %interface) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %phy_interface = getelementptr i8, ptr %1, i32 1808
  %2 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %phy_interface, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %interface)
  %cmp.not = icmp ne i32 %3, %interface
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode)
  %cmp.i = icmp eq i32 %mode, 2
  %or.cond = or i1 %cmp.i, %cmp.not
  br i1 %or.cond, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %base.i = getelementptr i8, ptr %1, i32 1220
  %4 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %base.i, align 4
  %add.ptr.i46 = getelementptr i8, ptr %5, i32 11276
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i46) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %7 = and i32 %6, -50331649
  %8 = or i32 %7, 16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %9 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %base.i, align 4
  %add.ptr.i48 = getelementptr i8, ptr %10, i32 11276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i48, i32 %8) #20, !srcloc !256
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %11 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %phy_interface, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %interface)
  %cmp4.not = icmp eq i32 %12, %interface
  br i1 %cmp4.not, label %if.end.if.end29_crit_edge, label %if.then5

if.end.if.end29_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29

if.then5:                                         ; preds = %if.end
  %comphy = getelementptr i8, ptr %1, i32 1856
  %13 = ptrtoint ptr %comphy to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %comphy, align 8
  %call6 = tail call i32 @phy_power_off(ptr noundef %14) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.then5.if.end29_crit_edge, label %do.end, !prof !257

if.then5.if.end29_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29

do.end:                                           ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3993, i32 noundef 9, ptr noundef null) #20
  br label %if.end29

if.end29:                                         ; preds = %do.end, %if.then5.if.end29_crit_edge, %if.end.if.end29_crit_edge
  br i1 %cmp.i, label %if.then31, label %if.end29.if.end34_crit_edge

if.end29.if.end34_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end34

if.then31:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  %clk = getelementptr i8, ptr %1, i32 1540
  %15 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %clk, align 4
  %call32 = tail call i32 @clk_get_rate(ptr noundef %16) #20
  %div = udiv i32 %call32, 1000
  %or33 = or i32 %div, -2147483648
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %17 = tail call i32 @llvm.bswap.i32(i32 %or33) #20
  %base.i50 = getelementptr i8, ptr %1, i32 1220
  %18 = ptrtoint ptr %base.i50 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %base.i50, align 4
  %add.ptr.i51 = getelementptr i8, ptr %19, i32 9460
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i51, i32 %17) #20, !srcloc !256
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end29.if.end34_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_mac_config(ptr nocapture noundef readonly %config, i32 noundef %mode, ptr nocapture noundef readonly %state) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %base.i = getelementptr i8, ptr %1, i32 1220
  %2 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i, align 4
  %add.ptr.i64 = getelementptr i8, ptr %3, i32 11264
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i64) #20, !srcloc !258
  %5 = tail call i32 @llvm.bswap.i32(i32 %4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %6 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %base.i, align 4
  %add.ptr.i66 = getelementptr i8, ptr %7, i32 11272
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i66) #20, !srcloc !258
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %10 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i, align 4
  %add.ptr.i68 = getelementptr i8, ptr %11, i32 11408
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i68) #20, !srcloc !258
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and = and i32 %5, -3
  %and4 = and i32 %9, -82
  %and5 = and i32 %13, -3
  %interface = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %14 = ptrtoint ptr %interface to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %interface, align 4
  %16 = zext i32 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.93)
  switch i32 %15, label %lor.lhs.false8 [
    i32 18, label %entry.if.then_crit_edge
    i32 4, label %entry.if.then_crit_edge77
  ]

entry.if.then_crit_edge77:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

lor.lhs.false8:                                   ; preds = %entry
  %or = or i32 %and4, 16
  %17 = add i32 %15, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %17)
  %18 = icmp ult i32 %17, 2
  br i1 %18, label %lor.lhs.false8.if.then_crit_edge, label %lor.lhs.false8.if.end_crit_edge

lor.lhs.false8.if.end_crit_edge:                  ; preds = %lor.lhs.false8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

lor.lhs.false8.if.then_crit_edge:                 ; preds = %lor.lhs.false8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false8.if.then_crit_edge, %entry.if.then_crit_edge, %entry.if.then_crit_edge77
  %or11 = or i32 %and4, 24
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false8.if.end_crit_edge
  %new_ctrl2.0 = phi i32 [ %or11, %if.then ], [ %or, %lor.lhs.false8.if.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode)
  %cmp.i = icmp eq i32 %mode, 2
  br i1 %cmp.i, label %if.else, label %if.end.if.end21_crit_edge

if.end.if.end21_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end21

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %15)
  %cmp15 = icmp eq i32 %15, 4
  br i1 %cmp15, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %or17 = or i32 %new_ctrl2.0, 1
  br label %if.end21

if.else18:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %or19 = or i32 %5, 2
  br label %if.end21

if.end21:                                         ; preds = %if.else18, %if.then16, %if.end.if.end21_crit_edge
  %new_ctrl0.0 = phi i32 [ %and, %if.then16 ], [ %or19, %if.else18 ], [ %and, %if.end.if.end21_crit_edge ]
  %new_ctrl2.1 = phi i32 [ %or17, %if.then16 ], [ %new_ctrl2.0, %if.else18 ], [ %new_ctrl2.0, %if.end.if.end21_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 22, i32 %15)
  %cmp23 = icmp eq i32 %15, 22
  %masksel = select i1 %cmp23, i32 2, i32 0
  %spec.select = or i32 %masksel, %and5
  call void @__sanitizer_cov_trace_cmp4(i32 %new_ctrl0.0, i32 %5)
  %cmp27.not = icmp eq i32 %new_ctrl0.0, %5
  br i1 %cmp27.not, label %if.end21.if.end29_crit_edge, label %if.then28

if.end21.if.end29_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29

if.then28:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %19 = tail call i32 @llvm.bswap.i32(i32 %new_ctrl0.0) #20
  %20 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %base.i, align 4
  %add.ptr.i70 = getelementptr i8, ptr %21, i32 11264
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i70, i32 %19) #20, !srcloc !256
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %if.end21.if.end29_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %new_ctrl2.1, i32 %9)
  %cmp30.not = icmp eq i32 %new_ctrl2.1, %9
  br i1 %cmp30.not, label %if.end29.if.end32_crit_edge, label %if.then31

if.end29.if.end32_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end32

if.then31:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %22 = tail call i32 @llvm.bswap.i32(i32 %new_ctrl2.1) #20
  %23 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %base.i, align 4
  %add.ptr.i72 = getelementptr i8, ptr %24, i32 11272
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i72, i32 %22) #20, !srcloc !256
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end29.if.end32_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %spec.select, i32 %13)
  %cmp33.not = icmp eq i32 %spec.select, %13
  br i1 %cmp33.not, label %if.end32.if.end35_crit_edge, label %if.then34

if.end32.if.end35_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

if.then34:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %25 = tail call i32 @llvm.bswap.i32(i32 %spec.select) #20
  %26 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %base.i, align 4
  %add.ptr.i74 = getelementptr i8, ptr %27, i32 11408
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i74, i32 %25) #20, !srcloc !256
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end32.if.end35_crit_edge
  %and36 = and i32 %9, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool.not = icmp eq i32 %and36, 0
  br i1 %tobool.not, label %if.end35.if.end41_crit_edge, label %if.end35.while.cond_crit_edge

if.end35.while.cond_crit_edge:                    ; preds = %if.end35
  br label %while.cond

if.end35.if.end41_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end41

while.cond:                                       ; preds = %while.cond.while.cond_crit_edge, %if.end35.while.cond_crit_edge
  %28 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %base.i, align 4
  %add.ptr.i76 = getelementptr i8, ptr %29, i32 11272
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i76) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %31 = and i32 %30, 1073741824
  %cmp40.not = icmp eq i32 %31, 0
  br i1 %cmp40.not, label %while.cond.if.end41_crit_edge, label %while.cond.while.cond_crit_edge

while.cond.while.cond_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond

while.cond.if.end41_crit_edge:                    ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end41

if.end41:                                         ; preds = %while.cond.if.end41_crit_edge, %if.end35.if.end41_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_mac_finish(ptr nocapture noundef readonly %config, i32 noundef %mode, i32 noundef %interface) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 1200
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode)
  %cmp.i = icmp eq i32 %mode, 2
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %base.i = getelementptr i8, ptr %1, i32 1220
  %2 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i, align 4
  %add.ptr.i43 = getelementptr i8, ptr %3, i32 9460
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i43) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %5 = and i32 %4, -129
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %6 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %base.i, align 4
  %add.ptr.i45 = getelementptr i8, ptr %7, i32 9460
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i45, i32 %5) #20, !srcloc !256
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %phy_interface = getelementptr i8, ptr %1, i32 1808
  %8 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %phy_interface, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %interface)
  %cmp.not = icmp eq i32 %9, %interface
  br i1 %cmp.not, label %if.end.if.end27_crit_edge, label %if.then3

if.end.if.end27_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end27

if.then3:                                         ; preds = %if.end
  %call4 = tail call fastcc i32 @mvneta_config_interface(ptr noundef %add.ptr.i, i32 noundef %interface)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then3.if.end27_crit_edge, label %do.end, !prof !257

if.then3.if.end27_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end27

do.end:                                           ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 4078, i32 noundef 9, ptr noundef null) #20
  br label %if.end27

if.end27:                                         ; preds = %do.end, %if.then3.if.end27_crit_edge, %if.end.if.end27_crit_edge
  br i1 %cmp.i, label %if.then29, label %if.end27.if.end32_crit_edge

if.end27.if.end32_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end32

if.then29:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #22
  %base.i47 = getelementptr i8, ptr %1, i32 1220
  %10 = ptrtoint ptr %base.i47 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i47, align 4
  %add.ptr.i48 = getelementptr i8, ptr %11, i32 11276
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i48) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %13 = and i32 %12, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %14 = ptrtoint ptr %base.i47 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %base.i47, align 4
  %add.ptr.i50 = getelementptr i8, ptr %15, i32 11276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i50, i32 %13) #20, !srcloc !256
  br label %if.end32

if.end32:                                         ; preds = %if.then29, %if.end27.if.end32_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_mac_link_down(ptr nocapture noundef readonly %config, i32 noundef %mode, i32 noundef %interface) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 1200
  tail call fastcc void @mvneta_port_down(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode)
  %cmp.i = icmp eq i32 %mode, 2
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %base.i = getelementptr i8, ptr %1, i32 1220
  %2 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i, align 4
  %add.ptr.i9 = getelementptr i8, ptr %3, i32 11276
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i9) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %5 = and i32 %4, -50331649
  %6 = or i32 %5, 16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %7 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %base.i, align 4
  %add.ptr.i11 = getelementptr i8, ptr %8, i32 11276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11, i32 %6) #20, !srcloc !256
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %eee_active = getelementptr i8, ptr %1, i32 1877
  %9 = ptrtoint ptr %eee_active to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %eee_active, align 1
  %base.i.i = getelementptr i8, ptr %1, i32 1220
  %10 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %11, i32 11460
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %13 = and i32 %12, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %14 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i5.i = getelementptr i8, ptr %15, i32 11460
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i5.i, i32 %13) #20, !srcloc !256
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_mac_link_up(ptr nocapture noundef readonly %config, ptr noundef %phy, i32 noundef %mode, i32 noundef %interface, i32 noundef %speed, i32 noundef %duplex, i1 noundef zeroext %tx_pause, i1 noundef zeroext %rx_pause) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode)
  %cmp.i = icmp eq i32 %mode, 2
  %base.i66 = getelementptr i8, ptr %1, i32 1220
  %2 = ptrtoint ptr %base.i66 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i66, align 4
  %add.ptr.i67 = getelementptr i8, ptr %3, i32 11276
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i67) #20
  br i1 %cmp.i, label %if.else20, label %if.then

if.then:                                          ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %5 = and i32 %4, -1662058497
  %6 = tail call i32 @llvm.bswap.i32(i32 %5)
  %or = or i32 %6, 2
  %7 = zext i32 %speed to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.94)
  switch i32 %speed, label %if.then.if.end10_crit_edge [
    i32 1000, label %if.then.if.then5_crit_edge
    i32 2500, label %if.then.if.then5_crit_edge72
    i32 100, label %if.then8
  ]

if.then.if.then5_crit_edge72:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

if.then.if.then5_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

if.then.if.end10_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10

if.then5:                                         ; preds = %if.then.if.then5_crit_edge, %if.then.if.then5_crit_edge72
  %or6 = or i32 %6, 66
  br label %if.end10

if.then8:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %or9 = or i32 %6, 34
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.then5, %if.then.if.end10_crit_edge
  %val.0 = phi i32 [ %or6, %if.then5 ], [ %or9, %if.then8 ], [ %or, %if.then.if.end10_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %duplex)
  %cmp11 = icmp eq i32 %duplex, 1
  %or13 = or i32 %val.0, 4096
  %spec.select = select i1 %cmp11, i32 %or13, i32 %val.0
  %brmerge = or i1 %tx_pause, %rx_pause
  %or18 = or i32 %spec.select, 256
  %val.2 = select i1 %brmerge, i32 %or18, i32 %spec.select
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %8 = tail call i32 @llvm.bswap.i32(i32 %val.2) #20
  %9 = ptrtoint ptr %base.i66 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %base.i66, align 4
  %add.ptr.i65 = getelementptr i8, ptr %10, i32 11276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i65, i32 %8) #20, !srcloc !256
  br label %if.end29

if.else20:                                        ; preds = %entry
  %11 = tail call i32 @llvm.bswap.i32(i32 %4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  br i1 %tx_pause, label %if.else20.if.then26_crit_edge, label %lor.lhs.false24

if.else20.if.then26_crit_edge:                    ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then26

lor.lhs.false24:                                  ; preds = %if.else20
  %and22 = and i32 %11, -257
  br i1 %rx_pause, label %lor.lhs.false24.if.then26_crit_edge, label %lor.lhs.false24.if.end28_crit_edge

lor.lhs.false24.if.end28_crit_edge:               ; preds = %lor.lhs.false24
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

lor.lhs.false24.if.then26_crit_edge:              ; preds = %lor.lhs.false24
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then26

if.then26:                                        ; preds = %lor.lhs.false24.if.then26_crit_edge, %if.else20.if.then26_crit_edge
  %or27 = or i32 %11, 256
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %lor.lhs.false24.if.end28_crit_edge
  %val.3 = phi i32 [ %or27, %if.then26 ], [ %and22, %lor.lhs.false24.if.end28_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %12 = tail call i32 @llvm.bswap.i32(i32 %val.3) #20
  %13 = ptrtoint ptr %base.i66 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %base.i66, align 4
  %add.ptr.i69 = getelementptr i8, ptr %14, i32 11276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i69, i32 %12) #20, !srcloc !256
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end10
  %15 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp29.i = icmp sgt i32 %15, 0
  br i1 %cmp29.i, label %for.body.lr.ph.i, label %if.end29.for.end.i_crit_edge

if.end29.for.end.i_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end29
  %txqs.i = getelementptr i8, ptr %1, i32 1228
  %16 = ptrtoint ptr %txqs.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %txqs.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %queue.031.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %q_map.030.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %q_map.1.i, %for.body.i.for.body.i_crit_edge ]
  %descs.i = getelementptr %struct.mvneta_tx_queue, ptr %17, i32 %queue.031.i, i32 10
  %18 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %descs.i, align 4
  %tobool.not.i = icmp eq ptr %19, null
  %shl.i = shl nuw i32 1, %queue.031.i
  %or.i = select i1 %tobool.not.i, i32 0, i32 %shl.i
  %q_map.1.i = or i32 %or.i, %q_map.030.i
  %inc.i = add nuw nsw i32 %queue.031.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %15
  br i1 %exitcond.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %if.end29.for.end.i_crit_edge
  %q_map.0.lcssa.i = phi i32 [ 0, %if.end29.for.end.i_crit_edge ], [ %q_map.1.i, %for.body.i.for.end.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %20 = tail call i32 @llvm.bswap.i32(i32 %q_map.0.lcssa.i) #20
  %base.i.i = getelementptr i8, ptr %1, i32 1220
  %21 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %22, i32 9288
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %20) #20, !srcloc !256
  %23 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp232.i = icmp sgt i32 %23, 0
  br i1 %cmp232.i, label %for.body3.lr.ph.i, label %for.end.i.mvneta_port_up.exit_crit_edge

for.end.i.mvneta_port_up.exit_crit_edge:          ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_port_up.exit

for.body3.lr.ph.i:                                ; preds = %for.end.i
  %rxqs.i = getelementptr i8, ptr %1, i32 1224
  %24 = ptrtoint ptr %rxqs.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %rxqs.i, align 8
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.body3.i.for.body3.i_crit_edge, %for.body3.lr.ph.i
  %queue.134.i = phi i32 [ 0, %for.body3.lr.ph.i ], [ %inc12.i, %for.body3.i.for.body3.i_crit_edge ]
  %q_map.233.i = phi i32 [ 0, %for.body3.lr.ph.i ], [ %q_map.3.i, %for.body3.i.for.body3.i_crit_edge ]
  %descs5.i = getelementptr %struct.mvneta_rx_queue, ptr %25, i32 %queue.134.i, i32 8
  %26 = ptrtoint ptr %descs5.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %descs5.i, align 4
  %tobool6.not.i = icmp eq ptr %27, null
  %shl8.i = shl nuw i32 1, %queue.134.i
  %or9.i = select i1 %tobool6.not.i, i32 0, i32 %shl8.i
  %q_map.3.i = or i32 %or9.i, %q_map.233.i
  %inc12.i = add nuw nsw i32 %queue.134.i, 1
  %exitcond36.not.i = icmp eq i32 %inc12.i, %23
  br i1 %exitcond36.not.i, label %for.body3.i.mvneta_port_up.exit_crit_edge, label %for.body3.i.for.body3.i_crit_edge

for.body3.i.for.body3.i_crit_edge:                ; preds = %for.body3.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body3.i

for.body3.i.mvneta_port_up.exit_crit_edge:        ; preds = %for.body3.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_port_up.exit

mvneta_port_up.exit:                              ; preds = %for.body3.i.mvneta_port_up.exit_crit_edge, %for.end.i.mvneta_port_up.exit_crit_edge
  %q_map.2.lcssa.i = phi i32 [ 0, %for.end.i.mvneta_port_up.exit_crit_edge ], [ %q_map.3.i, %for.body3.i.mvneta_port_up.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %28 = tail call i32 @llvm.bswap.i32(i32 %q_map.2.lcssa.i) #20
  %29 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i28.i = getelementptr i8, ptr %30, i32 9856
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i28.i, i32 %28) #20, !srcloc !256
  %tobool30.not = icmp eq ptr %phy, null
  br i1 %tobool30.not, label %mvneta_port_up.exit.if.end39_crit_edge, label %land.lhs.true

mvneta_port_up.exit.if.end39_crit_edge:           ; preds = %mvneta_port_up.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end39

land.lhs.true:                                    ; preds = %mvneta_port_up.exit
  %eee_enabled = getelementptr i8, ptr %1, i32 1876
  %31 = ptrtoint ptr %eee_enabled to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %eee_enabled, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool31.not = icmp eq i8 %32, 0
  br i1 %tobool31.not, label %land.lhs.true.if.end39_crit_edge, label %if.then32

land.lhs.true.if.end39_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end39

if.then32:                                        ; preds = %land.lhs.true
  %call33 = tail call i32 @phy_init_eee(ptr noundef nonnull %phy, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call33)
  %cmp34 = icmp sgt i32 %call33, -1
  %eee_active = getelementptr i8, ptr %1, i32 1877
  %call33.lobit = lshr i32 %call33, 31
  %33 = trunc i32 %call33.lobit to i8
  %.not = xor i8 %33, 1
  %34 = ptrtoint ptr %eee_active to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %.not, ptr %eee_active, align 1
  br i1 %cmp34, label %land.rhs, label %if.then32.land.end_crit_edge

if.then32.land.end_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

land.rhs:                                         ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #22
  %tx_lpi_enabled = getelementptr i8, ptr %1, i32 1878
  %35 = ptrtoint ptr %tx_lpi_enabled to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %tx_lpi_enabled, align 2, !range !254
  %37 = zext i8 %36 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then32.land.end_crit_edge
  %38 = phi i32 [ 0, %if.then32.land.end_crit_edge ], [ %37, %land.rhs ]
  %39 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i71 = getelementptr i8, ptr %40, i32 11460
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i71) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %42 = and i32 %41, -16777217
  %43 = tail call i32 @llvm.bswap.i32(i32 %42) #20
  %lpi_ctl1.0.i = or i32 %43, %38
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %44 = tail call i32 @llvm.bswap.i32(i32 %lpi_ctl1.0.i) #20
  %45 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i5.i = getelementptr i8, ptr %46, i32 11460
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i5.i, i32 %44) #20, !srcloc !256
  br label %if.end39

if.end39:                                         ; preds = %land.end, %land.lhs.true.if.end39_crit_edge, %mvneta_port_up.exit.if.end39_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_power_off(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clk_get_rate(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mvneta_config_interface(ptr nocapture noundef %pp, i32 noundef %interface) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %comphy = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 28
  %0 = ptrtoint ptr %comphy to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %comphy, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %2 = zext i32 %interface to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.95)
  switch i32 %interface, label %if.then.if.end7_crit_edge [
    i32 4, label %if.then.if.then4_crit_edge
    i32 21, label %if.then.if.then4_crit_edge22
    i32 22, label %if.then.if.then4_crit_edge23
  ]

if.then.if.then4_crit_edge23:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then4

if.then.if.then4_crit_edge22:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then4

if.then.if.then4_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then4

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

if.then4:                                         ; preds = %if.then.if.then4_crit_edge, %if.then.if.then4_crit_edge22, %if.then.if.then4_crit_edge23
  %call.i = tail call i32 @phy_set_mode_ext(ptr noundef nonnull %1, i32 noundef 15, i32 noundef %interface) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then4.if.end7_crit_edge

if.then4.if.end7_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

if.end.i:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  %3 = ptrtoint ptr %comphy to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %comphy, align 8
  %call2.i = tail call i32 @phy_power_on(ptr noundef %4) #20
  br label %if.end7

if.else:                                          ; preds = %entry
  %5 = zext i32 %interface to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.96)
  switch i32 %interface, label %if.else.if.end7_crit_edge [
    i32 18, label %sw.bb
    i32 4, label %if.else.sw.bb5_crit_edge
    i32 21, label %if.else.sw.bb5_crit_edge24
    i32 22, label %sw.bb6
  ]

if.else.sw.bb5_crit_edge24:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb5

if.else.sw.bb5_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb5

if.else.if.end7_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

sw.bb:                                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %6 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 9376
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 1728446464) #20, !srcloc !256
  br label %if.end7

sw.bb5:                                           ; preds = %if.else.sw.bb5_crit_edge, %if.else.sw.bb5_crit_edge24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i18 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %8 = ptrtoint ptr %base.i18 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %base.i18, align 4
  %add.ptr.i19 = getelementptr i8, ptr %9, i32 9376
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i19, i32 -955514880) #20, !srcloc !256
  br label %if.end7

sw.bb6:                                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i20 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %10 = ptrtoint ptr %base.i20 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i20, align 4
  %add.ptr.i21 = getelementptr i8, ptr %11, i32 9376
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i21, i32 118554624) #20, !srcloc !256
  br label %if.end7

if.end7:                                          ; preds = %sw.bb6, %sw.bb5, %sw.bb, %if.else.if.end7_crit_edge, %if.end.i, %if.then4.if.end7_crit_edge, %if.then.if.end7_crit_edge
  %ret.0 = phi i32 [ 0, %if.else.if.end7_crit_edge ], [ 0, %sw.bb6 ], [ 0, %sw.bb5 ], [ 0, %sw.bb ], [ 0, %if.then.if.end7_crit_edge ], [ %call2.i, %if.end.i ], [ %call.i, %if.then4.if.end7_crit_edge ]
  %phy_interface = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 22
  %12 = ptrtoint ptr %phy_interface to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %interface, ptr %phy_interface, align 8
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_set_mode_ext(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_power_on(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_port_down(ptr nocapture noundef readonly %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 9856
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  call void @__sanitizer_cov_trace_const_cmp4(i32 16777216, i32 %2)
  %cmp.not = icmp ult i32 %2, 16777216
  br i1 %cmp.not, label %entry.if.end3.preheader_crit_edge, label %if.then

entry.if.end3.preheader_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end3.preheader

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %3 = lshr i32 %2, 8
  %4 = and i32 %3, 16711680
  %5 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %base.i, align 4
  %add.ptr.i58 = getelementptr i8, ptr %6, i32 9856
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i58, i32 %4) #20, !srcloc !256
  br label %if.end3.preheader

if.end3.preheader:                                ; preds = %if.then, %entry.if.end3.preheader_crit_edge
  br label %if.end3

do.body:                                          ; preds = %if.end3
  %inc = add nuw nsw i32 %count.072, 1
  %exitcond = icmp eq i32 %inc, 1000
  br i1 %exitcond, label %if.then2, label %do.body.if.end3_crit_edge

do.body.if.end3_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end3

if.then2:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev, align 8
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %8, ptr noundef nonnull @.str.35, i32 noundef %13) #24
  br label %do.end

if.end3:                                          ; preds = %do.body.if.end3_crit_edge, %if.end3.preheader
  %count.072 = phi i32 [ %inc, %do.body.if.end3_crit_edge ], [ 0, %if.end3.preheader ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %9 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %9(i32 noundef 214748000) #20
  %10 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i, align 4
  %add.ptr.i60 = getelementptr i8, ptr %11, i32 9856
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i60) #20, !srcloc !258
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and5 = and i32 %13, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool.not = icmp eq i32 %and5, 0
  br i1 %tobool.not, label %if.end3.do.end_crit_edge, label %do.body

if.end3.do.end_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

do.end:                                           ; preds = %if.end3.do.end_crit_edge, %if.then2
  %14 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %base.i, align 4
  %add.ptr.i62 = getelementptr i8, ptr %15, i32 9288
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i62) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  call void @__sanitizer_cov_trace_const_cmp4(i32 16777216, i32 %16)
  %cmp8.not = icmp ult i32 %16, 16777216
  br i1 %cmp8.not, label %do.end.if.end17.preheader_crit_edge, label %if.then9

do.end.if.end17.preheader_crit_edge:              ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17.preheader

if.then9:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %17 = lshr i32 %16, 8
  %18 = and i32 %17, 16711680
  %19 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %base.i, align 4
  %add.ptr.i64 = getelementptr i8, ptr %20, i32 9288
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i64, i32 %18) #20, !srcloc !256
  br label %if.end17.preheader

if.end17.preheader:                               ; preds = %if.then9, %do.end.if.end17.preheader_crit_edge
  br label %if.end17

do.body12:                                        ; preds = %if.end17
  %inc13 = add nuw nsw i32 %count.173, 1
  %exitcond78 = icmp eq i32 %inc13, 1000
  br i1 %exitcond78, label %if.then15, label %do.body12.if.end17_crit_edge

do.body12.if.end17_crit_edge:                     ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.then15:                                        ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #22
  %dev16 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %21 = ptrtoint ptr %dev16 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev16, align 8
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %22, ptr noundef nonnull @.str.36, i32 noundef %27) #24
  br label %if.end28.preheader

if.end17:                                         ; preds = %do.body12.if.end17_crit_edge, %if.end17.preheader
  %count.173 = phi i32 [ %inc13, %do.body12.if.end17_crit_edge ], [ 0, %if.end17.preheader ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %23 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %23(i32 noundef 214748000) #20
  %24 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %base.i, align 4
  %add.ptr.i66 = getelementptr i8, ptr %25, i32 9288
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i66) #20, !srcloc !258
  %27 = tail call i32 @llvm.bswap.i32(i32 %26) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and20 = and i32 %27, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %if.end17.if.end28.preheader_crit_edge, label %do.body12

if.end17.if.end28.preheader_crit_edge:            ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28.preheader

if.end28.preheader:                               ; preds = %if.end17.if.end28.preheader_crit_edge, %if.then15
  br label %if.end28

do.body23:                                        ; preds = %if.end28
  %inc24 = add nuw nsw i32 %count.274, 1
  %exitcond79 = icmp eq i32 %inc24, 10000
  br i1 %exitcond79, label %if.then26, label %do.body23.if.end28_crit_edge

do.body23.if.end28_crit_edge:                     ; preds = %do.body23
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.then26:                                        ; preds = %do.body23
  call void @__sanitizer_cov_trace_pc() #22
  %dev27 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %28 = ptrtoint ptr %dev27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev27, align 8
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %29, ptr noundef nonnull @.str.37, i32 noundef %34) #24
  br label %do.end35

if.end28:                                         ; preds = %do.body23.if.end28_crit_edge, %if.end28.preheader
  %count.274 = phi i32 [ %inc24, %do.body23.if.end28_crit_edge ], [ 0, %if.end28.preheader ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %30 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %30(i32 noundef 214748000) #20
  %31 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %base.i, align 4
  %add.ptr.i68 = getelementptr i8, ptr %32, i32 9284
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i68) #20, !srcloc !258
  %34 = tail call i32 @llvm.bswap.i32(i32 %33) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %35 = and i32 %34, 257
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %.not = icmp eq i32 %35, 1
  br i1 %.not, label %do.body23, label %if.end28.do.end35_crit_edge

if.end28.do.end35_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end35

do.end35:                                         ; preds = %if.end28.do.end35_crit_edge, %if.then26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %36 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %36(i32 noundef 42949600) #20
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phy_init_eee(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_open(ptr noundef %dev) #3 align 64 {
entry:
  %wol.i = alloca %struct.ethtool_wolinfo, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %dev1 = getelementptr i8, ptr %dev, i32 2336
  %0 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev1, align 8
  %mtu = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 20
  %2 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mtu, align 4
  %add5 = add i32 %3, 151
  %and = and i32 %add5, -128
  %pkt_size = getelementptr i8, ptr %dev, i32 2320
  %4 = ptrtoint ptr %pkt_size to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %and, ptr %pkt_size, align 8
  %call6 = tail call fastcc i32 @mvneta_setup_rxqs(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call7 = tail call fastcc i32 @mvneta_setup_txqs(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end10, label %if.end.err_cleanup_rxqs_crit_edge

if.end.err_cleanup_rxqs_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_cleanup_rxqs

if.end10:                                         ; preds = %if.end
  %neta_armada3700 = getelementptr i8, ptr %dev, i32 3324
  %5 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool11.not = icmp eq i8 %6, 0
  %7 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev1, align 8
  %irq16 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 64
  %9 = ptrtoint ptr %irq16 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %irq16, align 4
  br i1 %tobool11.not, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i32 @request_threaded_irq(i32 noundef %10, ptr noundef nonnull @mvneta_isr, ptr noundef null, i32 noundef 0, ptr noundef %dev, ptr noundef %add.ptr.i) #20
  br label %if.end20

if.else:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  %ports = getelementptr i8, ptr %dev, i32 2308
  %11 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ports, align 4
  %call.i105 = tail call i32 @__request_percpu_irq(i32 noundef %10, ptr noundef nonnull @mvneta_percpu_isr, i32 noundef 0, ptr noundef %dev, ptr noundef %12) #20
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then12
  %ret.0 = phi i32 [ %call.i, %if.then12 ], [ %call.i105, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool21.not = icmp eq i32 %ret.0, 0
  br i1 %tobool21.not, label %if.end26, label %if.then22

if.then22:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #22
  %13 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev1, align 8
  %irq25 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 64
  %15 = ptrtoint ptr %irq25 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %irq25, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str.38, i32 noundef %16) #24
  br label %err_cleanup_txqs

if.end26:                                         ; preds = %if.end20
  %17 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool28.not = icmp eq i8 %18, 0
  br i1 %tobool28.not, label %if.then29, label %if.end26.if.end38_crit_edge

if.end26.if.end38_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end38

if.then29:                                        ; preds = %if.end26
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_enable, ptr noundef %add.ptr.i, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  %is_stopped = getelementptr i8, ptr %dev, i32 2404
  %19 = ptrtoint ptr %is_stopped to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 0, ptr %is_stopped, align 4
  %20 = load i32, ptr @online_hpstate, align 4
  %node_online = getelementptr i8, ptr %dev, i32 2340
  %call.i106 = tail call i32 @__cpuhp_state_add_instance(i32 noundef %20, ptr noundef %node_online, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i106)
  %tobool31.not = icmp eq i32 %call.i106, 0
  br i1 %tobool31.not, label %if.end33, label %if.then29.err_free_irq_crit_edge

if.then29.err_free_irq_crit_edge:                 ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_free_irq

if.end33:                                         ; preds = %if.then29
  %node_dead = getelementptr i8, ptr %dev, i32 2348
  %call.i107 = tail call i32 @__cpuhp_state_add_instance(i32 noundef 17, ptr noundef %node_dead, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i107)
  %tobool35.not = icmp eq i32 %call.i107, 0
  br i1 %tobool35.not, label %if.end33.if.end38_crit_edge, label %if.end33.err_free_online_hp_crit_edge

if.end33.err_free_online_hp_crit_edge:            ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_free_online_hp

if.end33.if.end38_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end38

if.end38:                                         ; preds = %if.end33.if.end38_crit_edge, %if.end26.if.end38_crit_edge
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wol.i) #20
  %21 = call ptr @memcpy(ptr %wol.i, ptr @__const.mvneta_mdio_probe.wol, i32 20)
  %phylink.i = getelementptr i8, ptr %dev, i32 2924
  %22 = ptrtoint ptr %phylink.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %phylink.i, align 4
  %dn.i = getelementptr i8, ptr %dev, i32 2916
  %24 = ptrtoint ptr %dn.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dn.i, align 4
  %call.i108 = tail call i32 @phylink_of_phy_connect(ptr noundef %23, ptr noundef %25, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i108)
  %tobool.not.i = icmp eq i32 %call.i108, 0
  br i1 %tobool.not.i, label %if.end38.if.end.i_crit_edge, label %if.then.i

if.end38.if.end.i_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then.i:                                        ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #22
  %26 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev1, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %27, ptr noundef nonnull @.str.43, i32 noundef %call.i108) #24
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end38.if.end.i_crit_edge
  %28 = ptrtoint ptr %phylink.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %phylink.i, align 4
  call void @phylink_ethtool_get_wol(ptr noundef %29, ptr noundef nonnull %wol.i) #20
  %30 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dev1, align 8
  %dev3.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 133
  %supported.i = getelementptr inbounds %struct.ethtool_wolinfo, ptr %wol.i, i32 0, i32 1
  %32 = ptrtoint ptr %supported.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %supported.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool4.i = icmp ne i32 %33, 0
  call void @device_set_wakeup_capable(ptr noundef %dev3.i, i1 noundef zeroext %tobool4.i) #20
  %34 = ptrtoint ptr %supported.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %supported.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool7.not.i = icmp eq i32 %35, 0
  br i1 %tobool7.not.i, label %if.end.i.mvneta_mdio_probe.exit_crit_edge, label %if.then8.i

if.end.i.mvneta_mdio_probe.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_mdio_probe.exit

if.then8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %36 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev1, align 8
  %dev10.i = getelementptr inbounds %struct.net_device, ptr %37, i32 0, i32 133
  %wolopts.i = getelementptr inbounds %struct.ethtool_wolinfo, ptr %wol.i, i32 0, i32 2
  %38 = ptrtoint ptr %wolopts.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %wolopts.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool11.i = icmp ne i32 %39, 0
  %call14.i = call i32 @device_set_wakeup_enable(ptr noundef %dev10.i, i1 noundef zeroext %tobool11.i) #20
  br label %mvneta_mdio_probe.exit

mvneta_mdio_probe.exit:                           ; preds = %if.then8.i, %if.end.i.mvneta_mdio_probe.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wol.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i108)
  %cmp = icmp slt i32 %call.i108, 0
  br i1 %cmp, label %if.then40, label %if.end41

if.then40:                                        ; preds = %mvneta_mdio_probe.exit
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.39) #24
  %40 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool43.not = icmp eq i8 %41, 0
  br i1 %tobool43.not, label %if.then44, label %if.then40.if.then56_crit_edge

if.then40.if.then56_crit_edge:                    ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then56

if.end41:                                         ; preds = %mvneta_mdio_probe.exit
  call void @__sanitizer_cov_trace_pc() #22
  call fastcc void @mvneta_start_dev(ptr noundef %add.ptr.i)
  br label %cleanup

if.then44:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #22
  %node_dead45 = getelementptr i8, ptr %dev, i32 2348
  %call.i109 = call i32 @__cpuhp_state_remove_instance(i32 noundef 17, ptr noundef %node_dead45, i1 noundef zeroext false) #20
  br label %err_free_online_hp

err_free_online_hp:                               ; preds = %if.then44, %if.end33.err_free_online_hp_crit_edge
  %ret.1.ph = phi i32 [ %call.i107, %if.end33.err_free_online_hp_crit_edge ], [ %call.i108, %if.then44 ]
  %42 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %42)
  %.pr = load i8, ptr %neta_armada3700, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool49.not = icmp eq i8 %.pr, 0
  br i1 %tobool49.not, label %if.then50, label %err_free_online_hp.if.then56_crit_edge

err_free_online_hp.if.then56_crit_edge:           ; preds = %err_free_online_hp
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then56

if.then50:                                        ; preds = %err_free_online_hp
  call void @__sanitizer_cov_trace_pc() #22
  %43 = load i32, ptr @online_hpstate, align 4
  %node_online51 = getelementptr i8, ptr %dev, i32 2340
  %call.i110 = call i32 @__cpuhp_state_remove_instance(i32 noundef %43, ptr noundef %node_online51, i1 noundef zeroext false) #20
  br label %err_free_irq

err_free_irq:                                     ; preds = %if.then50, %if.then29.err_free_irq_crit_edge
  %ret.2.ph = phi i32 [ %call.i106, %if.then29.err_free_irq_crit_edge ], [ %ret.1.ph, %if.then50 ]
  %44 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %44)
  %.pr113 = load i8, ptr %neta_armada3700, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr113)
  %tobool55.not = icmp eq i8 %.pr113, 0
  br i1 %tobool55.not, label %if.else60, label %err_free_irq.if.then56_crit_edge

err_free_irq.if.then56_crit_edge:                 ; preds = %err_free_irq
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then56

if.then56:                                        ; preds = %err_free_irq.if.then56_crit_edge, %err_free_online_hp.if.then56_crit_edge, %if.then40.if.then56_crit_edge
  %ret.2117 = phi i32 [ %ret.2.ph, %err_free_irq.if.then56_crit_edge ], [ %ret.1.ph, %err_free_online_hp.if.then56_crit_edge ], [ %call.i108, %if.then40.if.then56_crit_edge ]
  %45 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dev1, align 8
  %irq58 = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 64
  %47 = ptrtoint ptr %irq58 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %irq58, align 4
  %call59 = call ptr @free_irq(i32 noundef %48, ptr noundef %add.ptr.i) #20
  br label %err_cleanup_txqs

if.else60:                                        ; preds = %err_free_irq
  call void @__sanitizer_cov_trace_pc() #22
  call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_disable, ptr noundef %add.ptr.i, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  %49 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %dev1, align 8
  %irq62 = getelementptr inbounds %struct.net_device, ptr %50, i32 0, i32 64
  %51 = ptrtoint ptr %irq62 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %irq62, align 4
  %ports63 = getelementptr i8, ptr %dev, i32 2308
  %53 = ptrtoint ptr %ports63 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ports63, align 4
  call void @free_percpu_irq(i32 noundef %52, ptr noundef %54) #20
  br label %err_cleanup_txqs

err_cleanup_txqs:                                 ; preds = %if.else60, %if.then56, %if.then22
  %ret.3 = phi i32 [ %ret.0, %if.then22 ], [ %ret.2117, %if.then56 ], [ %ret.2.ph, %if.else60 ]
  call fastcc void @mvneta_cleanup_txqs(ptr noundef %add.ptr.i)
  br label %err_cleanup_rxqs

err_cleanup_rxqs:                                 ; preds = %err_cleanup_txqs, %if.end.err_cleanup_rxqs_crit_edge
  %ret.4 = phi i32 [ %call7, %if.end.err_cleanup_rxqs_crit_edge ], [ %ret.3, %err_cleanup_txqs ]
  %55 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %cmp4.i = icmp sgt i32 %55, 0
  br i1 %cmp4.i, label %for.body.lr.ph.i, label %err_cleanup_rxqs.cleanup_crit_edge

err_cleanup_rxqs.cleanup_crit_edge:               ; preds = %err_cleanup_rxqs
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %err_cleanup_rxqs
  %rxqs.i = getelementptr i8, ptr %dev, i32 2328
  br label %for.body.i

for.body.i:                                       ; preds = %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %queue.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge ]
  %56 = ptrtoint ptr %rxqs.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %rxqs.i, align 8
  %arrayidx.i = getelementptr %struct.mvneta_rx_queue, ptr %57, i32 %queue.05.i
  call fastcc void @mvneta_rxq_drop_pkts(ptr noundef %add.ptr.i, ptr noundef %arrayidx.i) #20
  %descs.i.i = getelementptr %struct.mvneta_rx_queue, ptr %57, i32 %queue.05.i, i32 8
  %58 = ptrtoint ptr %descs.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %descs.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %59, null
  br i1 %tobool.not.i.i, label %for.body.i.mvneta_rxq_deinit.exit.i_crit_edge, label %if.then.i.i

for.body.i.mvneta_rxq_deinit.exit.i_crit_edge:    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_deinit.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %60 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %dev1, align 8
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %61, i32 0, i32 133, i32 1
  %62 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %parent.i.i, align 8
  %size.i.i = getelementptr %struct.mvneta_rx_queue, ptr %57, i32 %queue.05.i, i32 1
  %64 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %size.i.i, align 4
  %mul.i.i = shl i32 %65, 5
  %descs_phys.i.i = getelementptr %struct.mvneta_rx_queue, ptr %57, i32 %queue.05.i, i32 9
  %66 = ptrtoint ptr %descs_phys.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %descs_phys.i.i, align 8
  call void @dma_free_attrs(ptr noundef %63, i32 noundef %mul.i.i, ptr noundef nonnull %59, i32 noundef %67, i32 noundef 0) #20
  br label %mvneta_rxq_deinit.exit.i

mvneta_rxq_deinit.exit.i:                         ; preds = %if.then.i.i, %for.body.i.mvneta_rxq_deinit.exit.i_crit_edge
  %68 = call ptr @memset(ptr %descs.i.i, i32 0, i32 24)
  %inc.i = add nuw nsw i32 %queue.05.i, 1
  %69 = load i32, ptr @rxq_number, align 4
  %cmp.i = icmp slt i32 %inc.i, %69
  br i1 %cmp.i, label %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge, label %mvneta_rxq_deinit.exit.i.cleanup_crit_edge

mvneta_rxq_deinit.exit.i.cleanup_crit_edge:       ; preds = %mvneta_rxq_deinit.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

mvneta_rxq_deinit.exit.i.for.body.i_crit_edge:    ; preds = %mvneta_rxq_deinit.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

cleanup:                                          ; preds = %mvneta_rxq_deinit.exit.i.cleanup_crit_edge, %err_cleanup_rxqs.cleanup_crit_edge, %if.end41, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end41 ], [ %call6, %entry.cleanup_crit_edge ], [ %ret.4, %err_cleanup_rxqs.cleanup_crit_edge ], [ %ret.4, %mvneta_rxq_deinit.exit.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_stop(ptr noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %neta_armada3700 = getelementptr i8, ptr %dev, i32 3324
  %0 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %lock = getelementptr i8, ptr %dev, i32 2360
  tail call void @_raw_spin_lock(ptr noundef %lock) #20
  %is_stopped = getelementptr i8, ptr %dev, i32 2404
  %2 = ptrtoint ptr %is_stopped to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %is_stopped, align 4
  tail call void @_raw_spin_unlock(ptr noundef %lock) #20
  tail call fastcc void @mvneta_stop_dev(ptr noundef %add.ptr.i)
  %phylink.i = getelementptr i8, ptr %dev, i32 2924
  %3 = ptrtoint ptr %phylink.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %phylink.i, align 4
  tail call void @phylink_disconnect_phy(ptr noundef %4) #20
  %5 = load i32, ptr @online_hpstate, align 4
  %node_online = getelementptr i8, ptr %dev, i32 2340
  %call.i = tail call i32 @__cpuhp_state_remove_instance(i32 noundef %5, ptr noundef %node_online, i1 noundef zeroext false) #20
  %node_dead = getelementptr i8, ptr %dev, i32 2348
  %call.i22 = tail call i32 @__cpuhp_state_remove_instance(i32 noundef 17, ptr noundef %node_dead, i1 noundef zeroext false) #20
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_disable, ptr noundef %add.ptr.i, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  %irq = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 64
  %6 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %irq, align 4
  %ports = getelementptr i8, ptr %dev, i32 2308
  %8 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ports, align 4
  tail call void @free_percpu_irq(i32 noundef %7, ptr noundef %9) #20
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @mvneta_stop_dev(ptr noundef %add.ptr.i)
  %phylink.i23 = getelementptr i8, ptr %dev, i32 2924
  %10 = ptrtoint ptr %phylink.i23 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %phylink.i23, align 4
  tail call void @phylink_disconnect_phy(ptr noundef %11) #20
  %irq4 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 64
  %12 = ptrtoint ptr %irq4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %irq4, align 4
  %call5 = tail call ptr @free_irq(i32 noundef %13, ptr noundef %add.ptr.i) #20
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp4.i = icmp sgt i32 %14, 0
  br i1 %cmp4.i, label %for.body.lr.ph.i, label %if.end.mvneta_cleanup_rxqs.exit_crit_edge

if.end.mvneta_cleanup_rxqs.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_cleanup_rxqs.exit

for.body.lr.ph.i:                                 ; preds = %if.end
  %rxqs.i = getelementptr i8, ptr %dev, i32 2328
  %dev.i.i = getelementptr i8, ptr %dev, i32 2336
  br label %for.body.i

for.body.i:                                       ; preds = %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %queue.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge ]
  %15 = ptrtoint ptr %rxqs.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rxqs.i, align 8
  %arrayidx.i = getelementptr %struct.mvneta_rx_queue, ptr %16, i32 %queue.05.i
  tail call fastcc void @mvneta_rxq_drop_pkts(ptr noundef %add.ptr.i, ptr noundef %arrayidx.i) #20
  %descs.i.i = getelementptr %struct.mvneta_rx_queue, ptr %16, i32 %queue.05.i, i32 8
  %17 = ptrtoint ptr %descs.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %descs.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %for.body.i.mvneta_rxq_deinit.exit.i_crit_edge, label %if.then.i.i

for.body.i.mvneta_rxq_deinit.exit.i_crit_edge:    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_deinit.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %19 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dev.i.i, align 8
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %20, i32 0, i32 133, i32 1
  %21 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %parent.i.i, align 8
  %size.i.i = getelementptr %struct.mvneta_rx_queue, ptr %16, i32 %queue.05.i, i32 1
  %23 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %size.i.i, align 4
  %mul.i.i = shl i32 %24, 5
  %descs_phys.i.i = getelementptr %struct.mvneta_rx_queue, ptr %16, i32 %queue.05.i, i32 9
  %25 = ptrtoint ptr %descs_phys.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %descs_phys.i.i, align 8
  tail call void @dma_free_attrs(ptr noundef %22, i32 noundef %mul.i.i, ptr noundef nonnull %18, i32 noundef %26, i32 noundef 0) #20
  br label %mvneta_rxq_deinit.exit.i

mvneta_rxq_deinit.exit.i:                         ; preds = %if.then.i.i, %for.body.i.mvneta_rxq_deinit.exit.i_crit_edge
  %27 = call ptr @memset(ptr %descs.i.i, i32 0, i32 24)
  %inc.i = add nuw nsw i32 %queue.05.i, 1
  %28 = load i32, ptr @rxq_number, align 4
  %cmp.i = icmp slt i32 %inc.i, %28
  br i1 %cmp.i, label %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge, label %mvneta_rxq_deinit.exit.i.mvneta_cleanup_rxqs.exit_crit_edge

mvneta_rxq_deinit.exit.i.mvneta_cleanup_rxqs.exit_crit_edge: ; preds = %mvneta_rxq_deinit.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_cleanup_rxqs.exit

mvneta_rxq_deinit.exit.i.for.body.i_crit_edge:    ; preds = %mvneta_rxq_deinit.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

mvneta_cleanup_rxqs.exit:                         ; preds = %mvneta_rxq_deinit.exit.i.mvneta_cleanup_rxqs.exit_crit_edge, %if.end.mvneta_cleanup_rxqs.exit_crit_edge
  tail call fastcc void @mvneta_cleanup_txqs(ptr noundef %add.ptr.i)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_tx(ptr noundef %skb, ptr noundef %dev) #3 align 64 {
entry:
  %tso.i = alloca %struct.tso_t, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_mapping.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %0 = ptrtoint ptr %queue_mapping.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %queue_mapping.i, align 8
  %txqs = getelementptr i8, ptr %dev, i32 2332
  %2 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %txqs, align 4
  %idxprom = zext i16 %1 to i32
  %arrayidx = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom
  %buf2 = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 6
  %4 = ptrtoint ptr %buf2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %buf2, align 4
  %txq_put_index = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 7
  %6 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %txq_put_index, align 4
  %arrayidx3 = getelementptr %struct.mvneta_tx_buf, ptr %5, i32 %7
  %len4 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %8 = ptrtoint ptr %len4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len4, align 4
  %state.i136 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %10 = ptrtoint ptr %state.i136 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i136, align 4
  %and1.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.if.else74_crit_edge, label %if.end

entry.if.else74_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else74

if.end:                                           ; preds = %entry
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %12 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %end.i.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %gso_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool.i137.not = icmp eq i16 %15, 0
  br i1 %tobool.i137.not, label %if.end9, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %tso.i) #20
  %16 = getelementptr inbounds %struct.tso_t, ptr %tso.i, i32 0, i32 1
  %17 = getelementptr inbounds %struct.tso_t, ptr %tso.i, i32 0, i32 2
  %count.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 2
  %18 = call ptr @memset(ptr %tso.i, i32 255, i32 20)
  %19 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %count.i, align 4
  %call1.i = tail call i32 @tso_count_descs(ptr noundef %skb) #20
  %add.i = add i32 %call1.i, %20
  %size.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 1
  %21 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %22)
  %cmp.not.i = icmp slt i32 %add.i, %22
  br i1 %cmp.not.i, label %if.end.i, label %if.then7.out.thread226_crit_edge

if.then7.out.thread226_crit_edge:                 ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.thread226

if.end.i:                                         ; preds = %if.then7
  %23 = ptrtoint ptr %len4 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %len4, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %25 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %24, %26
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %27 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %head.i.i.i, align 8
  %transport_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %29 = ptrtoint ptr %transport_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %transport_header.i.i.i, align 2
  %conv.i.i.i = zext i16 %30 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %28, i32 %conv.i.i.i
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %31 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %data.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %32 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %doff.i.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i.i, i32 0, i32 4
  %33 = ptrtoint ptr %doff.i.i.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %bf.load.i.i.i = load i16, ptr %doff.i.i.i, align 4
  %34 = lshr i16 %bf.load.i.i.i, 10
  %35 = and i16 %34, 60
  %mul.i.i.i = zext i16 %35 to i32
  %add5.i = add i32 %sub.ptr.sub.i.i, %mul.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %add5.i)
  %cmp6.i = icmp ult i32 %sub.i.i, %add5.i
  br i1 %cmp6.i, label %do.end.i, label %if.end9.i

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.47) #24
  br label %out.thread226

if.end9.i:                                        ; preds = %if.end.i
  %call10.i = call i32 @tso_start(ptr noundef %skb, ptr noundef nonnull %tso.i) #20
  %36 = ptrtoint ptr %len4 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %len4, align 4
  %sub.i = sub i32 %37, %call10.i
  %tso_hdrs.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 14
  %next_desc_to_proc.i.i.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 13
  %last_desc.i.i.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 12
  %descs.i.i.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 10
  %tso_hdrs_phys.i.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 15
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp11.i233 = icmp sgt i32 %sub.i, 0
  br i1 %cmp11.i233, label %if.end9.i.while.body.i_crit_edge, label %out.thread

if.end9.i.while.body.i_crit_edge:                 ; preds = %if.end9.i
  br label %while.body.i

out.thread:                                       ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %tso.i) #20
  br label %if.else74

while.body.i:                                     ; preds = %cleanup41.i.while.body.i_crit_edge, %if.end9.i.while.body.i_crit_edge
  %total_len.0.i235 = phi i32 [ %sub16.i, %cleanup41.i.while.body.i_crit_edge ], [ %sub.i, %if.end9.i.while.body.i_crit_edge ]
  %desc_count.0.i234 = phi i32 [ %desc_count.2.i, %cleanup41.i.while.body.i_crit_edge ], [ 0, %if.end9.i.while.body.i_crit_edge ]
  %38 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %end.i.i, align 4
  %gso_size.i139 = getelementptr inbounds %struct.skb_shared_info, ptr %39, i32 0, i32 4
  %40 = ptrtoint ptr %gso_size.i139 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %gso_size.i139, align 4
  %conv.i = zext i16 %41 to i32
  %42 = call i32 @llvm.umin.i32(i32 %total_len.0.i235, i32 %conv.i) #20
  %sub16.i = sub nsw i32 %total_len.0.i235, %42
  %inc.i = add i32 %desc_count.0.i234, 1
  %43 = ptrtoint ptr %tso_hdrs.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %tso_hdrs.i, align 4
  %45 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %txq_put_index, align 4
  %mul.i = shl i32 %46, 8
  %add.ptr.i140 = getelementptr i8, ptr %44, i32 %mul.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub16.i)
  %cmp17.i = icmp eq i32 %sub16.i, 0
  call void @tso_build_hdr(ptr noundef %skb, ptr noundef %add.ptr.i140, ptr noundef nonnull %tso.i, i32 noundef %42, i1 noundef zeroext %cmp17.i) #20
  %47 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %head.i.i.i, align 8
  %49 = ptrtoint ptr %transport_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %transport_header.i.i.i, align 2
  %conv.i.i.i122.i = zext i16 %50 to i32
  %add.ptr.i.i.i123.i = getelementptr i8, ptr %48, i32 %conv.i.i.i122.i
  %51 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %data.i.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %add.ptr.i.i.i123.i to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %52 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %doff.i.i.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i.i123.i, i32 0, i32 4
  %53 = ptrtoint ptr %doff.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %53)
  %bf.load.i.i.i.i = load i16, ptr %doff.i.i.i.i, align 4
  %54 = lshr i16 %bf.load.i.i.i.i, 10
  %55 = and i16 %54, 60
  %56 = ptrtoint ptr %buf2 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %buf2, align 4
  %58 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %txq_put_index, align 4
  %arrayidx.i.i = getelementptr %struct.mvneta_tx_buf, ptr %57, i32 %59
  %60 = ptrtoint ptr %next_desc_to_proc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %next_desc_to_proc.i.i.i, align 4
  %62 = ptrtoint ptr %last_desc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %last_desc.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %61, i32 %63)
  %cmp.i.i.i = icmp slt i32 %61, %63
  %add.i.i.i = add i32 %61, 1
  %spec.select.i.i.i = select i1 %cmp.i.i.i, i32 %add.i.i.i, i32 0
  %64 = ptrtoint ptr %next_desc_to_proc.i.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %spec.select.i.i.i, ptr %next_desc_to_proc.i.i.i, align 4
  %65 = ptrtoint ptr %descs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %descs.i.i.i, align 4
  %add.ptr.i.i124.i = getelementptr %struct.mvneta_tx_desc, ptr %66, i32 %61
  %67 = trunc i32 %sub.ptr.sub.i.i.i to i16
  %conv.i.i = add i16 %55, %67
  %68 = ptrtoint ptr %add.ptr.i.i124.i to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %conv.i.i, ptr %add.ptr.i.i124.i, align 4
  %call4.i.i = call fastcc i32 @mvneta_skb_tx_csum(ptr noundef %skb) #20
  %command.i.i = getelementptr %struct.mvneta_tx_desc, ptr %66, i32 %61, i32 2
  %or.i.i = or i32 %call4.i.i, 2097152
  %69 = ptrtoint ptr %command.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %or.i.i, ptr %command.i.i, align 4
  %70 = ptrtoint ptr %tso_hdrs_phys.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %tso_hdrs_phys.i.i, align 4
  %72 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %txq_put_index, align 4
  %mul.i.i = shl i32 %73, 8
  %add7.i.i = add i32 %mul.i.i, %71
  %buf_phys_addr.i.i = getelementptr %struct.mvneta_tx_desc, ptr %66, i32 %61, i32 4
  %74 = ptrtoint ptr %buf_phys_addr.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %add7.i.i, ptr %buf_phys_addr.i.i, align 4
  %75 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 0, ptr %arrayidx.i.i, align 4
  %76 = getelementptr %struct.mvneta_tx_buf, ptr %57, i32 %59, i32 1
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr null, ptr %76, align 4
  %78 = load i32, ptr %txq_put_index, align 4
  %inc.i.i.i = add i32 %78, 1
  %79 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i.i, i32 %80)
  %cmp.i19.i.i = icmp eq i32 %inc.i.i.i, %80
  %spec.store.select.i.i.i = select i1 %cmp.i19.i.i, i32 0, i32 %inc.i.i.i
  %81 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %spec.store.select.i.i.i, ptr %txq_put_index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp20156.not.i = icmp eq i32 %42, 0
  br i1 %cmp20156.not.i, label %while.body.i.cleanup41.i_crit_edge, label %while.body.i.while.body22.i_crit_edge

while.body.i.while.body22.i_crit_edge:            ; preds = %while.body.i
  br label %while.body22.i

while.body.i.cleanup41.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup41.i

while.body22.i:                                   ; preds = %cleanup.i.while.body22.i_crit_edge, %while.body.i.while.body22.i_crit_edge
  %desc_count.1158.i = phi i32 [ %inc24.i, %cleanup.i.while.body22.i_crit_edge ], [ %inc.i, %while.body.i.while.body22.i_crit_edge ]
  %data_left.0157.i = phi i32 [ %sub40.i, %cleanup.i.while.body22.i_crit_edge ], [ %42, %while.body.i.while.body22.i_crit_edge ]
  %inc24.i = add i32 %desc_count.1158.i, 1
  %82 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %16, align 4
  %84 = call i32 @llvm.smin.i32(i32 %83, i32 %data_left.0157.i) #20
  %85 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %17, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %data_left.0157.i, i32 %83)
  %cmp33.not.i = icmp sgt i32 %data_left.0157.i, %83
  %87 = ptrtoint ptr %buf2 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %buf2, align 4
  %89 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %txq_put_index, align 4
  %91 = ptrtoint ptr %next_desc_to_proc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %next_desc_to_proc.i.i.i, align 4
  %93 = ptrtoint ptr %last_desc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %last_desc.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %92, i32 %94)
  %cmp.i.i129.i = icmp slt i32 %92, %94
  %add.i.i130.i = add i32 %92, 1
  %spec.select.i.i131.i = select i1 %cmp.i.i129.i, i32 %add.i.i130.i, i32 0
  %95 = ptrtoint ptr %next_desc_to_proc.i.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %spec.select.i.i131.i, ptr %next_desc_to_proc.i.i.i, align 4
  %96 = ptrtoint ptr %descs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %descs.i.i.i, align 4
  %add.ptr.i.i133.i = getelementptr %struct.mvneta_tx_desc, ptr %97, i32 %92
  %conv.i134.i = trunc i32 %84 to i16
  %98 = ptrtoint ptr %add.ptr.i.i133.i to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 %conv.i134.i, ptr %add.ptr.i.i133.i, align 4
  %99 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %parent.i.i, align 8
  %call.i.i.i = call zeroext i1 @is_vmalloc_addr(ptr noundef %86) #20
  br i1 %call.i.i.i, label %land.rhs.i.i.i, label %if.end39.i.i.i

land.rhs.i.i.i:                                   ; preds = %while.body22.i
  %.b1.i.i.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i.i.i, label %land.rhs.i.i.i.dma_map_single_attrs.exit.i.i_crit_edge, label %if.then.i.i.i, !prof !257

land.rhs.i.i.i.dma_map_single_attrs.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dma_map_single_attrs.exit.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i.i.i = call ptr @dev_driver_string(ptr noundef %100) #20
  %init_name.i.i.i.i = getelementptr inbounds %struct.device, ptr %100, i32 0, i32 3
  %101 = ptrtoint ptr %init_name.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %init_name.i.i.i.i, align 8
  %tobool.not.i.i.i.i = icmp eq ptr %102, null
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.dev_name.exit.i.i.i_crit_edge

if.then.i.i.i.dev_name.exit.i.i.i_crit_edge:      ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dev_name.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %103 = ptrtoint ptr %100 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %100, align 4
  br label %dev_name.exit.i.i.i

dev_name.exit.i.i.i:                              ; preds = %if.end.i.i.i.i, %if.then.i.i.i.dev_name.exit.i.i.i_crit_edge
  %retval.0.i.i.i.i = phi ptr [ %104, %if.end.i.i.i.i ], [ %102, %if.then.i.i.i.dev_name.exit.i.i.i_crit_edge ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.50, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.51, ptr noundef %call16.i.i.i, ptr noundef %retval.0.i.i.i.i) #20
  br label %dma_map_single_attrs.exit.i.i

if.end39.i.i.i:                                   ; preds = %while.body22.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @debug_dma_map_single(ptr noundef %100, ptr noundef %86, i32 noundef %84) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %105 = load ptr, ptr @mem_map, align 4
  %106 = ptrtoint ptr %86 to i32
  %sub.i.i.i = add i32 %106, 1073741824
  %shr.i.i.i = lshr i32 %sub.i.i.i, 12
  %add.ptr.i31.i.i = getelementptr %struct.page, ptr %105, i32 %shr.i.i.i
  %and.i.i.i = and i32 %106, 4095
  %call41.i.i.i = call i32 @dma_map_page_attrs(ptr noundef %100, ptr noundef %add.ptr.i31.i.i, i32 noundef %and.i.i.i, i32 noundef %84, i32 noundef 1, i32 noundef 0) #20
  br label %dma_map_single_attrs.exit.i.i

dma_map_single_attrs.exit.i.i:                    ; preds = %if.end39.i.i.i, %dev_name.exit.i.i.i, %land.rhs.i.i.i.dma_map_single_attrs.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %call41.i.i.i, %if.end39.i.i.i ], [ -1, %dev_name.exit.i.i.i ], [ -1, %land.rhs.i.i.i.dma_map_single_attrs.exit.i.i_crit_edge ]
  %buf_phys_addr.i135.i = getelementptr %struct.mvneta_tx_desc, ptr %97, i32 %92, i32 4
  %107 = ptrtoint ptr %buf_phys_addr.i135.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %retval.0.i.i.i, ptr %buf_phys_addr.i135.i, align 4
  %108 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %parent.i.i, align 8
  call void @debug_dma_mapping_error(ptr noundef %109, i32 noundef %retval.0.i.i.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i.i.i)
  %cmp.i32.i.i = icmp eq i32 %retval.0.i.i.i, -1
  br i1 %cmp.i32.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %dma_map_single_attrs.exit.i.i
  %110 = ptrtoint ptr %next_desc_to_proc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %next_desc_to_proc.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %111)
  %cmp.i34.i.i = icmp eq i32 %111, 0
  br i1 %cmp.i34.i.i, label %if.then.i36.i.i, label %if.then.i.i.for.cond.preheader.i_crit_edge

if.then.i.i.for.cond.preheader.i_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.preheader.i

if.then.i36.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %112 = ptrtoint ptr %last_desc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %last_desc.i.i.i, align 4
  br label %for.cond.preheader.i

if.end.i.i:                                       ; preds = %dma_map_single_attrs.exit.i.i
  %arrayidx.i136.i = getelementptr %struct.mvneta_tx_buf, ptr %88, i32 %90
  %command.i137.i = getelementptr %struct.mvneta_tx_desc, ptr %97, i32 %92, i32 2
  %114 = ptrtoint ptr %command.i137.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 0, ptr %command.i137.i, align 4
  %115 = ptrtoint ptr %arrayidx.i136.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 0, ptr %arrayidx.i136.i, align 4
  %116 = getelementptr %struct.mvneta_tx_buf, ptr %88, i32 %90, i32 1
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr null, ptr %116, align 4
  br i1 %cmp33.not.i, label %if.end.i.i.cleanup.i_crit_edge, label %if.then12.i.i

if.end.i.i.cleanup.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i

if.then12.i.i:                                    ; preds = %if.end.i.i
  %118 = ptrtoint ptr %command.i137.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 1048576, ptr %command.i137.i, align 4
  br i1 %cmp17.i, label %if.then15.i.i, label %if.then12.i.i.cleanup.i_crit_edge

if.then12.i.i.cleanup.i_crit_edge:                ; preds = %if.then12.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i

if.then15.i.i:                                    ; preds = %if.then12.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %119 = ptrtoint ptr %116 to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr %skb, ptr %116, align 4
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then15.i.i, %if.then12.i.i.cleanup.i_crit_edge, %if.end.i.i.cleanup.i_crit_edge
  %120 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %txq_put_index, align 4
  %inc.i.i138.i = add i32 %121, 1
  %122 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i138.i, i32 %123)
  %cmp.i37.i.i = icmp eq i32 %inc.i.i138.i, %123
  %spec.store.select.i.i140.i = select i1 %cmp.i37.i.i, i32 0, i32 %inc.i.i138.i
  %124 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_store4_noabort(i32 %124)
  store i32 %spec.store.select.i.i140.i, ptr %txq_put_index, align 4
  %sub40.i = sub i32 %data_left.0157.i, %84
  call void @tso_build_data(ptr noundef %skb, ptr noundef nonnull %tso.i, i32 noundef %84) #20
  %cmp20.i = icmp sgt i32 %sub40.i, 0
  br i1 %cmp20.i, label %cleanup.i.while.body22.i_crit_edge, label %cleanup.i.cleanup41.i_crit_edge

cleanup.i.cleanup41.i_crit_edge:                  ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup41.i

cleanup.i.while.body22.i_crit_edge:               ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body22.i

cleanup41.i:                                      ; preds = %cleanup.i.cleanup41.i_crit_edge, %while.body.i.cleanup41.i_crit_edge
  %desc_count.2.i = phi i32 [ %inc.i, %while.body.i.cleanup41.i_crit_edge ], [ %inc24.i, %cleanup.i.cleanup41.i_crit_edge ]
  %cmp11.i = icmp sgt i32 %sub16.i, 0
  br i1 %cmp11.i, label %cleanup41.i.while.body.i_crit_edge, label %out

cleanup41.i.while.body.i_crit_edge:               ; preds = %cleanup41.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

for.cond.preheader.i:                             ; preds = %if.then.i36.i.i, %if.then.i.i.for.cond.preheader.i_crit_edge
  %storemerge.in.i.i.i = phi i32 [ %113, %if.then.i36.i.i ], [ %111, %if.then.i.i.for.cond.preheader.i_crit_edge ]
  %storemerge.i.i.i = add i32 %storemerge.in.i.i.i, -1
  %125 = ptrtoint ptr %next_desc_to_proc.i.i.i to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 %storemerge.i.i.i, ptr %next_desc_to_proc.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %desc_count.1158.i)
  %cmp46162.i = icmp sgt i32 %desc_count.1158.i, -1
  br i1 %cmp46162.i, label %for.body.lr.ph.i, label %for.cond.preheader.i.out.thread226_crit_edge

for.cond.preheader.i.out.thread226_crit_edge:     ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.thread226

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %dev59.i = getelementptr i8, ptr %dev, i32 2336
  br label %for.body.i

for.body.i:                                       ; preds = %mvneta_txq_desc_put.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0163.i = phi i32 [ %desc_count.1158.i, %for.body.lr.ph.i ], [ %i.0.i, %mvneta_txq_desc_put.exit.i.for.body.i_crit_edge ]
  %126 = ptrtoint ptr %descs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %descs.i.i.i, align 4
  %add.ptr48.i = getelementptr %struct.mvneta_tx_desc, ptr %127, i32 %i.0163.i
  %buf_phys_addr.i = getelementptr %struct.mvneta_tx_desc, ptr %127, i32 %i.0163.i, i32 4
  %128 = ptrtoint ptr %buf_phys_addr.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %buf_phys_addr.i, align 4
  %130 = ptrtoint ptr %tso_hdrs_phys.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %tso_hdrs_phys.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %129, i32 %131)
  %cmp49.not.i = icmp ult i32 %129, %131
  br i1 %cmp49.not.i, label %for.body.i.if.then58.i_crit_edge, label %land.lhs.true.i

for.body.i.if.then58.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then58.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %132 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %size.i, align 4
  %mul54.i = shl i32 %133, 8
  %add55.i = add i32 %mul54.i, %131
  call void @__sanitizer_cov_trace_cmp4(i32 %129, i32 %add55.i)
  %cmp56.i = icmp ult i32 %129, %add55.i
  br i1 %cmp56.i, label %land.lhs.true.i.if.end63.i_crit_edge, label %land.lhs.true.i.if.then58.i_crit_edge

land.lhs.true.i.if.then58.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then58.i

land.lhs.true.i.if.end63.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end63.i

if.then58.i:                                      ; preds = %land.lhs.true.i.if.then58.i_crit_edge, %for.body.i.if.then58.i_crit_edge
  %134 = ptrtoint ptr %dev59.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %dev59.i, align 8
  %parent.i = getelementptr inbounds %struct.net_device, ptr %135, i32 0, i32 133, i32 1
  %136 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %parent.i, align 8
  %138 = ptrtoint ptr %add.ptr48.i to i32
  call void @__asan_load2_noabort(i32 %138)
  %139 = load i16, ptr %add.ptr48.i, align 4
  %conv62.i = zext i16 %139 to i32
  call void @dma_unmap_page_attrs(ptr noundef %137, i32 noundef %129, i32 noundef %conv62.i, i32 noundef 1, i32 noundef 0) #20
  br label %if.end63.i

if.end63.i:                                       ; preds = %if.then58.i, %land.lhs.true.i.if.end63.i_crit_edge
  %140 = ptrtoint ptr %next_desc_to_proc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %next_desc_to_proc.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %141)
  %cmp.i.i = icmp eq i32 %141, 0
  br i1 %cmp.i.i, label %if.then.i141.i, label %if.end63.i.mvneta_txq_desc_put.exit.i_crit_edge

if.end63.i.mvneta_txq_desc_put.exit.i_crit_edge:  ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_txq_desc_put.exit.i

if.then.i141.i:                                   ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #22
  %142 = ptrtoint ptr %last_desc.i.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %last_desc.i.i.i, align 4
  br label %mvneta_txq_desc_put.exit.i

mvneta_txq_desc_put.exit.i:                       ; preds = %if.then.i141.i, %if.end63.i.mvneta_txq_desc_put.exit.i_crit_edge
  %storemerge.in.i.i = phi i32 [ %143, %if.then.i141.i ], [ %141, %if.end63.i.mvneta_txq_desc_put.exit.i_crit_edge ]
  %storemerge.i.i = add i32 %storemerge.in.i.i, -1
  %144 = ptrtoint ptr %next_desc_to_proc.i.i.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %storemerge.i.i, ptr %next_desc_to_proc.i.i.i, align 4
  %i.0.i = add nsw i32 %i.0163.i, -1
  %cmp46.i = icmp sgt i32 %i.0163.i, 0
  br i1 %cmp46.i, label %mvneta_txq_desc_put.exit.i.for.body.i_crit_edge, label %mvneta_txq_desc_put.exit.i.out.thread226_crit_edge

mvneta_txq_desc_put.exit.i.out.thread226_crit_edge: ; preds = %mvneta_txq_desc_put.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.thread226

mvneta_txq_desc_put.exit.i.for.body.i_crit_edge:  ; preds = %mvneta_txq_desc_put.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

if.end9:                                          ; preds = %if.end
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %13, i32 0, i32 2
  %145 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %145)
  %146 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %146 to i32
  %add = add nuw nsw i32 %conv, 1
  %next_desc_to_proc.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 13
  %147 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %next_desc_to_proc.i, align 4
  %last_desc.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 12
  %149 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %last_desc.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %148, i32 %150)
  %cmp.i = icmp slt i32 %148, %150
  %add.i141 = add i32 %148, 1
  %spec.select.i = select i1 %cmp.i, i32 %add.i141, i32 0
  %151 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %spec.select.i, ptr %next_desc_to_proc.i, align 4
  %descs.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 10
  %152 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %descs.i, align 4
  %add.ptr.i142 = getelementptr %struct.mvneta_tx_desc, ptr %153, i32 %148
  %call12 = tail call fastcc i32 @mvneta_skb_tx_csum(ptr noundef %skb)
  %154 = ptrtoint ptr %len4 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %len4, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %156 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %data_len.i, align 8
  %sub.i143 = sub i32 %155, %157
  %conv14 = trunc i32 %sub.i143 to i16
  %158 = ptrtoint ptr %add.ptr.i142 to i32
  call void @__asan_store2_noabort(i32 %158)
  store i16 %conv14, ptr %add.ptr.i142, align 4
  %parent = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133, i32 1
  %159 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %parent, align 8
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %161 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %data, align 4
  %call.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %162) #20
  br i1 %call.i, label %land.rhs.i, label %if.end39.i

land.rhs.i:                                       ; preds = %if.end9
  %.b1.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.dma_map_single_attrs.exit_crit_edge, label %if.then.i, !prof !257

land.rhs.i.dma_map_single_attrs.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dma_map_single_attrs.exit

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i = tail call ptr @dev_driver_string(ptr noundef %160) #20
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %160, i32 0, i32 3
  %163 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %164, null
  br i1 %tobool.not.i.i, label %if.end.i.i144, label %if.then.i.dev_name.exit.i_crit_edge

if.then.i.dev_name.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dev_name.exit.i

if.end.i.i144:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %165 = ptrtoint ptr %160 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %160, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i144, %if.then.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %166, %if.end.i.i144 ], [ %164, %if.then.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.50, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.51, ptr noundef %call16.i, ptr noundef %retval.0.i.i) #20
  br label %dma_map_single_attrs.exit

if.end39.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  %conv17 = and i32 %sub.i143, 65535
  tail call void @debug_dma_map_single(ptr noundef %160, ptr noundef %162, i32 noundef %conv17) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %167 = load ptr, ptr @mem_map, align 4
  %168 = ptrtoint ptr %162 to i32
  %sub.i145 = add i32 %168, 1073741824
  %shr.i = lshr i32 %sub.i145, 12
  %add.ptr.i146 = getelementptr %struct.page, ptr %167, i32 %shr.i
  %and.i = and i32 %168, 4095
  %call41.i = tail call i32 @dma_map_page_attrs(ptr noundef %160, ptr noundef %add.ptr.i146, i32 noundef %and.i, i32 noundef %conv17, i32 noundef 1, i32 noundef 0) #20
  br label %dma_map_single_attrs.exit

dma_map_single_attrs.exit:                        ; preds = %if.end39.i, %dev_name.exit.i, %land.rhs.i.dma_map_single_attrs.exit_crit_edge
  %retval.0.i147 = phi i32 [ %call41.i, %if.end39.i ], [ -1, %dev_name.exit.i ], [ -1, %land.rhs.i.dma_map_single_attrs.exit_crit_edge ]
  %buf_phys_addr = getelementptr %struct.mvneta_tx_desc, ptr %153, i32 %148, i32 4
  %169 = ptrtoint ptr %buf_phys_addr to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 %retval.0.i147, ptr %buf_phys_addr, align 4
  %170 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %parent, align 8
  tail call void @debug_dma_mapping_error(ptr noundef %171, i32 noundef %retval.0.i147) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i147)
  %cmp.i148 = icmp eq i32 %retval.0.i147, -1
  br i1 %cmp.i148, label %if.then25, label %if.end26

if.then25:                                        ; preds = %dma_map_single_attrs.exit
  %172 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %next_desc_to_proc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %173)
  %cmp.i150 = icmp eq i32 %173, 0
  br i1 %cmp.i150, label %if.then.i152, label %if.then25.mvneta_txq_desc_put.exit_crit_edge

if.then25.mvneta_txq_desc_put.exit_crit_edge:     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_txq_desc_put.exit

if.then.i152:                                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #22
  %174 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %last_desc.i, align 4
  br label %mvneta_txq_desc_put.exit

mvneta_txq_desc_put.exit:                         ; preds = %if.then.i152, %if.then25.mvneta_txq_desc_put.exit_crit_edge
  %storemerge.in.i = phi i32 [ %175, %if.then.i152 ], [ %173, %if.then25.mvneta_txq_desc_put.exit_crit_edge ]
  %storemerge.i = add i32 %storemerge.in.i, -1
  %176 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %176)
  store i32 %storemerge.i, ptr %next_desc_to_proc.i, align 4
  br label %if.else74

if.end26:                                         ; preds = %dma_map_single_attrs.exit
  %177 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 0, ptr %arrayidx3, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %146)
  %cmp = icmp eq i8 %146, 0
  br i1 %cmp, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #22
  %or = or i32 %call12, 3670016
  %command = getelementptr %struct.mvneta_tx_desc, ptr %153, i32 %148, i32 2
  %178 = ptrtoint ptr %command to i32
  call void @__asan_store4_noabort(i32 %178)
  store i32 %or, ptr %command, align 4
  %179 = getelementptr %struct.mvneta_tx_buf, ptr %5, i32 %7, i32 1
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_store4_noabort(i32 %180)
  store ptr %skb, ptr %179, align 4
  %181 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %txq_put_index, align 4
  %inc.i155 = add i32 %182, 1
  %size.i156 = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 1
  %183 = ptrtoint ptr %size.i156 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %size.i156, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i155, i32 %184)
  %cmp.i157 = icmp eq i32 %inc.i155, %184
  %spec.store.select.i = select i1 %cmp.i157, i32 0, i32 %inc.i155
  %185 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_store4_noabort(i32 %185)
  store i32 %spec.store.select.i, ptr %txq_put_index, align 4
  br label %if.then43

if.else:                                          ; preds = %if.end26
  %or29 = or i32 %call12, 2097152
  %186 = getelementptr %struct.mvneta_tx_buf, ptr %5, i32 %7, i32 1
  %187 = ptrtoint ptr %186 to i32
  call void @__asan_store4_noabort(i32 %187)
  store ptr null, ptr %186, align 4
  %188 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %txq_put_index, align 4
  %inc.i159 = add i32 %189, 1
  %size.i160 = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 1
  %190 = ptrtoint ptr %size.i160 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %size.i160, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i159, i32 %191)
  %cmp.i161 = icmp eq i32 %inc.i159, %191
  %spec.store.select.i162 = select i1 %cmp.i161, i32 0, i32 %inc.i159
  %192 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_store4_noabort(i32 %192)
  store i32 %spec.store.select.i162, ptr %txq_put_index, align 4
  %command30 = getelementptr %struct.mvneta_tx_desc, ptr %153, i32 %148, i32 2
  %193 = ptrtoint ptr %command30 to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %or29, ptr %command30, align 4
  %194 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %end.i.i, align 4
  %nr_frags1.i = getelementptr inbounds %struct.skb_shared_info, ptr %195, i32 0, i32 2
  %196 = ptrtoint ptr %nr_frags1.i to i32
  call void @__asan_load1_noabort(i32 %196)
  %197 = load i8, ptr %nr_frags1.i, align 2
  %conv.i164 = zext i8 %197 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %197)
  %cmp90.not.i = icmp eq i8 %197, 0
  br i1 %cmp90.not.i, label %if.else.if.then43_crit_edge, label %for.body.lr.ph.i167

if.else.if.then43_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then43

for.body.lr.ph.i167:                              ; preds = %if.else
  %dev.i = getelementptr i8, ptr %dev, i32 2336
  %sub.i166 = add nsw i32 %conv.i164, -1
  br label %for.body.i170

for.body.i170:                                    ; preds = %if.end.i179.for.body.i170_crit_edge, %for.body.lr.ph.i167
  %i.091.i = phi i32 [ 0, %for.body.lr.ph.i167 ], [ %inc.i178, %if.end.i179.for.body.i170_crit_edge ]
  %198 = ptrtoint ptr %buf2 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %buf2, align 4
  %200 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %txq_put_index, align 4
  %arrayidx.i = getelementptr %struct.mvneta_tx_buf, ptr %199, i32 %201
  %202 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %end.i.i, align 4
  %arrayidx5.i = getelementptr %struct.skb_shared_info, ptr %203, i32 0, i32 12, i32 %i.091.i
  %204 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %arrayidx5.i, align 4
  %call1.i.i = tail call ptr @page_address(ptr noundef %205) #20
  %bv_offset.i.i.i = getelementptr %struct.skb_shared_info, ptr %203, i32 0, i32 12, i32 %i.091.i, i32 2
  %206 = ptrtoint ptr %bv_offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %bv_offset.i.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %call1.i.i, i32 %207
  %208 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %next_desc_to_proc.i, align 4
  %210 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %last_desc.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %209, i32 %211)
  %cmp.i.i168 = icmp slt i32 %209, %211
  %add.i.i = add i32 %209, 1
  %spec.select.i.i = select i1 %cmp.i.i168, i32 %add.i.i, i32 0
  %212 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %212)
  store i32 %spec.select.i.i, ptr %next_desc_to_proc.i, align 4
  %213 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %descs.i, align 4
  %add.ptr.i71.i = getelementptr %struct.mvneta_tx_desc, ptr %214, i32 %209
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %203, i32 0, i32 12, i32 %i.091.i, i32 1
  %215 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %bv_len.i.i, align 4
  %conv9.i = trunc i32 %216 to i16
  %217 = ptrtoint ptr %add.ptr.i71.i to i32
  call void @__asan_store2_noabort(i32 %217)
  store i16 %conv9.i, ptr %add.ptr.i71.i, align 4
  %218 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %dev.i, align 8
  %parent.i169 = getelementptr inbounds %struct.net_device, ptr %219, i32 0, i32 133, i32 1
  %220 = ptrtoint ptr %parent.i169 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %parent.i169, align 8
  %call.i.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %add.ptr.i.i) #20
  br i1 %call.i.i, label %land.rhs.i.i, label %if.end39.i.i

land.rhs.i.i:                                     ; preds = %for.body.i170
  %.b1.i.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge, label %if.then.i.i171, !prof !257

land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dma_map_single_attrs.exit.i

if.then.i.i171:                                   ; preds = %land.rhs.i.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i.i = tail call ptr @dev_driver_string(ptr noundef %221) #20
  %init_name.i.i.i = getelementptr inbounds %struct.device, ptr %221, i32 0, i32 3
  %222 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %223, null
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i171.dev_name.exit.i.i_crit_edge

if.then.i.i171.dev_name.exit.i.i_crit_edge:       ; preds = %if.then.i.i171
  call void @__sanitizer_cov_trace_pc() #22
  br label %dev_name.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i171
  call void @__sanitizer_cov_trace_pc() #22
  %224 = ptrtoint ptr %221 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %221, align 4
  br label %dev_name.exit.i.i

dev_name.exit.i.i:                                ; preds = %if.end.i.i.i, %if.then.i.i171.dev_name.exit.i.i_crit_edge
  %retval.0.i.i.i172 = phi ptr [ %225, %if.end.i.i.i ], [ %223, %if.then.i.i171.dev_name.exit.i.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.50, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.51, ptr noundef %call16.i.i, ptr noundef %retval.0.i.i.i172) #20
  br label %dma_map_single_attrs.exit.i

if.end39.i.i:                                     ; preds = %for.body.i170
  call void @__sanitizer_cov_trace_pc() #22
  %conv12.i = and i32 %216, 65535
  tail call void @debug_dma_map_single(ptr noundef %221, ptr noundef %add.ptr.i.i, i32 noundef %conv12.i) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %226 = load ptr, ptr @mem_map, align 4
  %227 = ptrtoint ptr %add.ptr.i.i to i32
  %sub.i.i173 = add i32 %227, 1073741824
  %shr.i.i = lshr i32 %sub.i.i173, 12
  %add.ptr.i72.i = getelementptr %struct.page, ptr %226, i32 %shr.i.i
  %and.i.i = and i32 %227, 4095
  %call41.i.i = tail call i32 @dma_map_page_attrs(ptr noundef %221, ptr noundef %add.ptr.i72.i, i32 noundef %and.i.i, i32 noundef %conv12.i, i32 noundef 1, i32 noundef 0) #20
  br label %dma_map_single_attrs.exit.i

dma_map_single_attrs.exit.i:                      ; preds = %if.end39.i.i, %dev_name.exit.i.i, %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge
  %retval.0.i.i174 = phi i32 [ %call41.i.i, %if.end39.i.i ], [ -1, %dev_name.exit.i.i ], [ -1, %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge ]
  %buf_phys_addr.i175 = getelementptr %struct.mvneta_tx_desc, ptr %214, i32 %209, i32 4
  %228 = ptrtoint ptr %buf_phys_addr.i175 to i32
  call void @__asan_store4_noabort(i32 %228)
  store i32 %retval.0.i.i174, ptr %buf_phys_addr.i175, align 4
  %229 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %dev.i, align 8
  %parent16.i = getelementptr inbounds %struct.net_device, ptr %230, i32 0, i32 133, i32 1
  %231 = ptrtoint ptr %parent16.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %parent16.i, align 8
  tail call void @debug_dma_mapping_error(ptr noundef %232, i32 noundef %retval.0.i.i174) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i.i174)
  %cmp.i73.i = icmp eq i32 %retval.0.i.i174, -1
  br i1 %cmp.i73.i, label %if.then.i176, label %if.end.i179

if.then.i176:                                     ; preds = %dma_map_single_attrs.exit.i
  %233 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %next_desc_to_proc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %234)
  %cmp.i75.i = icmp eq i32 %234, 0
  br i1 %cmp.i75.i, label %if.then.i77.i, label %if.then.i176.cleanup.i181_crit_edge

if.then.i176.cleanup.i181_crit_edge:              ; preds = %if.then.i176
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i181

if.then.i77.i:                                    ; preds = %if.then.i176
  call void @__sanitizer_cov_trace_pc() #22
  %235 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %last_desc.i, align 4
  br label %cleanup.i181

if.end.i179:                                      ; preds = %dma_map_single_attrs.exit.i
  call void @__sanitizer_cov_trace_cmp4(i32 %i.091.i, i32 %sub.i166)
  %cmp19.i = icmp eq i32 %i.091.i, %sub.i166
  %spec.select.i177 = select i1 %cmp19.i, i32 1572864, i32 0
  %spec.select101.i = select i1 %cmp19.i, ptr %skb, ptr null
  %237 = getelementptr %struct.mvneta_tx_desc, ptr %214, i32 %209, i32 2
  %238 = ptrtoint ptr %237 to i32
  call void @__asan_store4_noabort(i32 %238)
  store i32 %spec.select.i177, ptr %237, align 4
  %239 = getelementptr %struct.mvneta_tx_buf, ptr %199, i32 %201, i32 1
  %240 = ptrtoint ptr %239 to i32
  call void @__asan_store4_noabort(i32 %240)
  store ptr %spec.select101.i, ptr %239, align 4
  %241 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 0, ptr %arrayidx.i, align 4
  %242 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %txq_put_index, align 4
  %inc.i.i = add i32 %243, 1
  %244 = ptrtoint ptr %size.i160 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %size.i160, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i, i32 %245)
  %cmp.i78.i = icmp eq i32 %inc.i.i, %245
  %spec.store.select.i.i = select i1 %cmp.i78.i, i32 0, i32 %inc.i.i
  %246 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_store4_noabort(i32 %246)
  store i32 %spec.store.select.i.i, ptr %txq_put_index, align 4
  %inc.i178 = add nuw nsw i32 %i.091.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i178, %conv.i164
  br i1 %exitcond.not.i, label %if.end.i179.if.then43_crit_edge, label %if.end.i179.for.body.i170_crit_edge

if.end.i179.for.body.i170_crit_edge:              ; preds = %if.end.i179
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i170

if.end.i179.if.then43_crit_edge:                  ; preds = %if.end.i179
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then43

cleanup.i181:                                     ; preds = %if.then.i77.i, %if.then.i176.cleanup.i181_crit_edge
  %storemerge.in.i.i180 = phi i32 [ %236, %if.then.i77.i ], [ %234, %if.then.i176.cleanup.i181_crit_edge ]
  %storemerge92.i = add i32 %storemerge.in.i.i180, -1
  %247 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %247)
  store i32 %storemerge92.i, ptr %next_desc_to_proc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.091.i)
  %cmp2894.not.i = icmp eq i32 %i.091.i, 0
  br i1 %cmp2894.not.i, label %cleanup.i181.if.then33_crit_edge, label %cleanup.i181.for.body30.i_crit_edge

cleanup.i181.for.body30.i_crit_edge:              ; preds = %cleanup.i181
  br label %for.body30.i

cleanup.i181.if.then33_crit_edge:                 ; preds = %cleanup.i181
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then33

for.body30.i:                                     ; preds = %mvneta_txq_desc_put.exit85.i.for.body30.i_crit_edge, %cleanup.i181.for.body30.i_crit_edge
  %i.195.in.i = phi i32 [ %i.195.i, %mvneta_txq_desc_put.exit85.i.for.body30.i_crit_edge ], [ %i.091.i, %cleanup.i181.for.body30.i_crit_edge ]
  %i.195.i = add nsw i32 %i.195.in.i, -1
  %248 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %descs.i, align 4
  %add.ptr.i182 = getelementptr %struct.mvneta_tx_desc, ptr %249, i32 %i.195.i
  %250 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %dev.i, align 8
  %parent33.i = getelementptr inbounds %struct.net_device, ptr %251, i32 0, i32 133, i32 1
  %252 = ptrtoint ptr %parent33.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %parent33.i, align 8
  %buf_phys_addr34.i = getelementptr %struct.mvneta_tx_desc, ptr %249, i32 %i.195.i, i32 4
  %254 = ptrtoint ptr %buf_phys_addr34.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %buf_phys_addr34.i, align 4
  %256 = ptrtoint ptr %add.ptr.i182 to i32
  call void @__asan_load2_noabort(i32 %256)
  %257 = load i16, ptr %add.ptr.i182, align 4
  %conv36.i = zext i16 %257 to i32
  tail call void @dma_unmap_page_attrs(ptr noundef %253, i32 noundef %255, i32 noundef %conv36.i, i32 noundef 1, i32 noundef 0) #20
  %258 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %next_desc_to_proc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %259)
  %cmp.i80.i = icmp eq i32 %259, 0
  br i1 %cmp.i80.i, label %if.then.i82.i, label %for.body30.i.mvneta_txq_desc_put.exit85.i_crit_edge

for.body30.i.mvneta_txq_desc_put.exit85.i_crit_edge: ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_txq_desc_put.exit85.i

if.then.i82.i:                                    ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #22
  %260 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %last_desc.i, align 4
  br label %mvneta_txq_desc_put.exit85.i

mvneta_txq_desc_put.exit85.i:                     ; preds = %if.then.i82.i, %for.body30.i.mvneta_txq_desc_put.exit85.i_crit_edge
  %storemerge.in.i83.i = phi i32 [ %261, %if.then.i82.i ], [ %259, %for.body30.i.mvneta_txq_desc_put.exit85.i_crit_edge ]
  %storemerge.i183 = add i32 %storemerge.in.i83.i, -1
  %262 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %262)
  store i32 %storemerge.i183, ptr %next_desc_to_proc.i, align 4
  %cmp28.i = icmp sgt i32 %i.195.in.i, 1
  br i1 %cmp28.i, label %mvneta_txq_desc_put.exit85.i.for.body30.i_crit_edge, label %mvneta_txq_desc_put.exit85.i.if.then33_crit_edge

mvneta_txq_desc_put.exit85.i.if.then33_crit_edge: ; preds = %mvneta_txq_desc_put.exit85.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then33

mvneta_txq_desc_put.exit85.i.for.body30.i_crit_edge: ; preds = %mvneta_txq_desc_put.exit85.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body30.i

if.then33:                                        ; preds = %mvneta_txq_desc_put.exit85.i.if.then33_crit_edge, %cleanup.i181.if.then33_crit_edge
  %263 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %parent, align 8
  %265 = ptrtoint ptr %buf_phys_addr to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load i32, ptr %buf_phys_addr, align 4
  %267 = ptrtoint ptr %add.ptr.i142 to i32
  call void @__asan_load2_noabort(i32 %267)
  %268 = load i16, ptr %add.ptr.i142, align 4
  %conv38 = zext i16 %268 to i32
  tail call void @dma_unmap_page_attrs(ptr noundef %264, i32 noundef %266, i32 noundef %conv38, i32 noundef 1, i32 noundef 0) #20
  %269 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load i32, ptr %next_desc_to_proc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %270)
  %cmp.i186 = icmp eq i32 %270, 0
  br i1 %cmp.i186, label %if.then.i188, label %if.then33.mvneta_txq_desc_put.exit192_crit_edge

if.then33.mvneta_txq_desc_put.exit192_crit_edge:  ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_txq_desc_put.exit192

if.then.i188:                                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #22
  %271 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %last_desc.i, align 4
  br label %mvneta_txq_desc_put.exit192

mvneta_txq_desc_put.exit192:                      ; preds = %if.then.i188, %if.then33.mvneta_txq_desc_put.exit192_crit_edge
  %storemerge.in.i189 = phi i32 [ %272, %if.then.i188 ], [ %270, %if.then33.mvneta_txq_desc_put.exit192_crit_edge ]
  %storemerge.i190 = add i32 %storemerge.in.i189, -1
  %273 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %273)
  store i32 %storemerge.i190, ptr %next_desc_to_proc.i, align 4
  br label %if.else74

out.thread226:                                    ; preds = %mvneta_txq_desc_put.exit.i.out.thread226_crit_edge, %for.cond.preheader.i.out.thread226_crit_edge, %do.end.i, %if.then7.out.thread226_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %tso.i) #20
  br label %if.else74

out:                                              ; preds = %cleanup41.i
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %tso.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %desc_count.2.i)
  %cmp41 = icmp sgt i32 %desc_count.2.i, 0
  br i1 %cmp41, label %out.if.then43_crit_edge, label %out.if.else74_crit_edge

out.if.else74_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else74

out.if.then43_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then43

if.then43:                                        ; preds = %out.if.then43_crit_edge, %if.end.i179.if.then43_crit_edge, %if.else.if.then43_crit_edge, %if.then28
  %frags.0224 = phi i32 [ %desc_count.2.i, %out.if.then43_crit_edge ], [ 1, %if.then28 ], [ %add, %if.else.if.then43_crit_edge ], [ %add, %if.end.i179.if.then43_crit_edge ]
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %274 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %_tx.i, align 128
  %stats46 = getelementptr i8, ptr %dev, i32 2312
  %276 = ptrtoint ptr %stats46 to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %stats46, align 8
  %278 = ptrtoint ptr %277 to i32
  %279 = call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i194 = and i32 %279, -16384
  %280 = inttoptr i32 %and.i194 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %280, i32 0, i32 3
  %281 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load i32, ptr %cpu, align 4
  %arrayidx49 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %282
  %283 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load i32, ptr %arrayidx49, align 4
  %add50 = add i32 %284, %278
  %285 = inttoptr i32 %add50 to ptr
  %dql.i = getelementptr %struct.netdev_queue, ptr %275, i32 %idxprom, i32 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 268435455, i32 %9)
  %cmp.i.i195 = icmp ugt i32 %9, 268435455
  br i1 %cmp.i.i195, label %do.body2.i.i, label %dql_queued.exit.i, !prof !261

do.body2.i.i:                                     ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #22
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/dynamic_queue_limits.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 77, 0\0A.popsection", ""() #20, !srcloc !268
  unreachable

dql_queued.exit.i:                                ; preds = %if.then43
  %last_obj_cnt.i.i = getelementptr %struct.netdev_queue, ptr %275, i32 %idxprom, i32 15, i32 2
  %286 = ptrtoint ptr %last_obj_cnt.i.i to i32
  call void @__asan_store4_noabort(i32 %286)
  store i32 %9, ptr %last_obj_cnt.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !269
  %287 = ptrtoint ptr %dql.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load i32, ptr %dql.i, align 128
  %add.i.i196 = add i32 %288, %9
  store i32 %add.i.i196, ptr %dql.i, align 128
  %adj_limit.i.i = getelementptr %struct.netdev_queue, ptr %275, i32 %idxprom, i32 15, i32 1
  %289 = ptrtoint ptr %adj_limit.i.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load volatile i32, ptr %adj_limit.i.i, align 4
  %291 = load volatile i32, ptr %dql.i, align 128
  %sub.i.i197 = sub i32 %290, %291
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i.i197)
  %cmp.i198 = icmp sgt i32 %sub.i.i197, -1
  br i1 %cmp.i198, label %dql_queued.exit.i.netdev_tx_sent_queue.exit_crit_edge, label %if.end.i200, !prof !257

dql_queued.exit.i.netdev_tx_sent_queue.exit_crit_edge: ; preds = %dql_queued.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %netdev_tx_sent_queue.exit

if.end.i200:                                      ; preds = %dql_queued.exit.i
  %state.i199 = getelementptr %struct.netdev_queue, ptr %275, i32 %idxprom, i32 13
  call void @_set_bit(i32 noundef 1, ptr noundef %state.i199) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !270
  %292 = ptrtoint ptr %adj_limit.i.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load volatile i32, ptr %adj_limit.i.i, align 4
  %294 = ptrtoint ptr %dql.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load volatile i32, ptr %dql.i, align 128
  %sub.i22.i = sub i32 %293, %295
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i22.i)
  %cmp7.i = icmp sgt i32 %sub.i22.i, -1
  br i1 %cmp7.i, label %if.then14.i, label %if.end.i200.netdev_tx_sent_queue.exit_crit_edge, !prof !261

if.end.i200.netdev_tx_sent_queue.exit_crit_edge:  ; preds = %if.end.i200
  call void @__sanitizer_cov_trace_pc() #22
  br label %netdev_tx_sent_queue.exit

if.then14.i:                                      ; preds = %if.end.i200
  call void @__sanitizer_cov_trace_pc() #22
  call void @_clear_bit(i32 noundef 1, ptr noundef %state.i199) #20
  br label %netdev_tx_sent_queue.exit

netdev_tx_sent_queue.exit:                        ; preds = %if.then14.i, %if.end.i200.netdev_tx_sent_queue.exit_crit_edge, %dql_queued.exit.i.netdev_tx_sent_queue.exit_crit_edge
  %count = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 2
  %296 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %count, align 4
  %add51 = add i32 %297, %frags.0224
  store i32 %add51, ptr %count, align 4
  %tx_stop_threshold = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 4
  %298 = ptrtoint ptr %tx_stop_threshold to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %tx_stop_threshold, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add51, i32 %299)
  %cmp53.not = icmp slt i32 %add51, %299
  br i1 %cmp53.not, label %netdev_tx_sent_queue.exit.if.end56_crit_edge, label %if.then55

netdev_tx_sent_queue.exit.if.end56_crit_edge:     ; preds = %netdev_tx_sent_queue.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end56

if.then55:                                        ; preds = %netdev_tx_sent_queue.exit
  call void @__sanitizer_cov_trace_pc() #22
  %state.i = getelementptr %struct.netdev_queue, ptr %275, i32 %idxprom, i32 13
  call void @_set_bit(i32 noundef 0, ptr noundef %state.i) #20
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %netdev_tx_sent_queue.exit.if.end56_crit_edge
  %300 = call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i201 = and i32 %300, -16384
  %301 = inttoptr i32 %and.i.i201 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %301, i32 0, i32 3
  %302 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %cpu.i, align 4
  %arrayidx.i202 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %303
  %304 = ptrtoint ptr %arrayidx.i202 to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %arrayidx.i202, align 4
  %add.i203 = add i32 %305, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11, i32 1) to i32)
  %306 = inttoptr i32 %add.i203 to ptr
  %307 = ptrtoint ptr %306 to i32
  call void @__asan_load1_noabort(i32 %307)
  %308 = load i8, ptr %306, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %308)
  %tobool.i204.not = icmp eq i8 %308, 0
  br i1 %tobool.i204.not, label %if.end56.if.then64_crit_edge, label %lor.lhs.false

if.end56.if.then64_crit_edge:                     ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then64

lor.lhs.false:                                    ; preds = %if.end56
  %state.i205 = getelementptr %struct.netdev_queue, ptr %275, i32 %idxprom, i32 13
  %309 = ptrtoint ptr %state.i205 to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load i32, ptr %state.i205, align 4
  %and.i206 = and i32 %310, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i206)
  %tobool.i207.not = icmp eq i32 %and.i206, 0
  br i1 %tobool.i207.not, label %lor.lhs.false60, label %lor.lhs.false.if.then64_crit_edge

lor.lhs.false.if.then64_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then64

lor.lhs.false60:                                  ; preds = %lor.lhs.false
  %pending = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 3
  %311 = ptrtoint ptr %pending to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load i32, ptr %pending, align 4
  %add61 = add i32 %312, %frags.0224
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %add61)
  %cmp62 = icmp sgt i32 %add61, 255
  br i1 %cmp62, label %lor.lhs.false60.if.then64_crit_edge, label %if.else65

lor.lhs.false60.if.then64_crit_edge:              ; preds = %lor.lhs.false60
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then64

if.then64:                                        ; preds = %lor.lhs.false60.if.then64_crit_edge, %lor.lhs.false.if.then64_crit_edge, %if.end56.if.then64_crit_edge
  %pending.i = getelementptr %struct.mvneta_tx_queue, ptr %3, i32 %idxprom, i32 3
  %313 = ptrtoint ptr %pending.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %pending.i, align 4
  %add.i208 = add i32 %314, %frags.0224
  %base.i.i = getelementptr i8, ptr %dev, i32 2324
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.then64
  %pend_desc.addr.0.i = phi i32 [ %add.i208, %if.then64 ], [ %sub.i211, %do.body.i.do.body.i_crit_edge ]
  %315 = call i32 @llvm.smin.i32(i32 %pend_desc.addr.0.i, i32 255) #20
  %316 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %316)
  %317 = load i8, ptr %arrayidx, align 4
  %conv.i209 = zext i8 %317 to i32
  %shl.i = shl nuw nsw i32 %conv.i209, 2
  %add1.i = add nuw nsw i32 %shl.i, 15456
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %318 = call i32 @llvm.bswap.i32(i32 %315) #20
  %319 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i210 = getelementptr i8, ptr %320, i32 %add1.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i210, i32 %318) #20, !srcloc !256
  %sub.i211 = sub i32 %pend_desc.addr.0.i, %315
  %cmp2.i = icmp sgt i32 %sub.i211, 0
  br i1 %cmp2.i, label %do.body.i.do.body.i_crit_edge, label %mvneta_txq_pend_desc_add.exit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

mvneta_txq_pend_desc_add.exit:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %321 = ptrtoint ptr %pending.i to i32
  call void @__asan_store4_noabort(i32 %321)
  store i32 0, ptr %pending.i, align 4
  br label %if.end68

if.else65:                                        ; preds = %lor.lhs.false60
  call void @__sanitizer_cov_trace_pc() #22
  %322 = ptrtoint ptr %pending to i32
  call void @__asan_store4_noabort(i32 %322)
  store i32 %add61, ptr %pending, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.else65, %mvneta_txq_pend_desc_add.exit
  call fastcc void @u64_stats_update_begin(ptr noundef %285)
  %conv69 = sext i32 %9 to i64
  %tx_bytes = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %285, i32 0, i32 1, i32 0, i32 3
  %323 = ptrtoint ptr %tx_bytes to i32
  call void @__asan_load8_noabort(i32 %323)
  %324 = load i64, ptr %tx_bytes, align 8
  %add70 = add i64 %324, %conv69
  store i64 %add70, ptr %tx_bytes, align 8
  %tx_packets = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %285, i32 0, i32 1, i32 0, i32 2
  %325 = ptrtoint ptr %tx_packets to i32
  call void @__asan_load8_noabort(i32 %325)
  %326 = load i64, ptr %tx_packets, align 8
  %inc = add i64 %326, 1
  store i64 %inc, ptr %tx_packets, align 8
  %dep_map.i.i = getelementptr inbounds %struct.seqcount, ptr %285, i32 0, i32 1
  %327 = call ptr @llvm.returnaddress(i32 0) #20
  %328 = ptrtoint ptr %327 to i32
  call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %328) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %329 = ptrtoint ptr %285 to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load i32, ptr %285, align 4
  %inc.i.i.i213 = add i32 %330, 1
  store i32 %inc.i.i.i213, ptr %285, align 4
  br label %if.end77

if.else74:                                        ; preds = %out.if.else74_crit_edge, %out.thread226, %mvneta_txq_desc_put.exit192, %mvneta_txq_desc_put.exit, %out.thread, %entry.if.else74_crit_edge
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36, i32 7
  %331 = ptrtoint ptr %tx_dropped to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %tx_dropped, align 4
  %inc76 = add i32 %332, 1
  store i32 %inc76, ptr %tx_dropped, align 4
  call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #20
  br label %if.end77

if.end77:                                         ; preds = %if.else74, %if.end68
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_set_rx_mode(ptr noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = and i32 %1, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %base.i.i77 = getelementptr i8, ptr %dev, i32 2324
  %2 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i78 = getelementptr i8, ptr %3, i32 9216
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i78) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20
  %5 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i14.i79 = getelementptr i8, ptr %6, i32 9404
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i14.i79) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %8 = or i32 %4, 16777216
  %9 = or i32 %7, 8192
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %10 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i16.i = getelementptr i8, ptr %11, i32 9236
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i16.i, i32 -65536) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %12 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i18.i = getelementptr i8, ptr %13, i32 9240
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i18.i, i32 -1) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %14 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i20.i = getelementptr i8, ptr %15, i32 9216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i20.i, i32 %8) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %16 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i22.i = getelementptr i8, ptr %17, i32 9404
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i22.i, i32 %9) #20, !srcloc !256
  %rxq_def = getelementptr i8, ptr %dev, i32 2356
  %18 = ptrtoint ptr %rxq_def to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rxq_def, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %cmp.i = icmp eq i32 %19, -1
  %shl.i = shl i32 %19, 1
  %or.i52 = or i32 %shl.i, 1
  %shl1.i = shl i32 %or.i52, 24
  %shl2.i = shl i32 %or.i52, 16
  %shl4.i = shl i32 %or.i52, 8
  %or3.i = or i32 %shl2.i, %or.i52
  %or5.i = or i32 %or3.i, %shl1.i
  %or6.i = or i32 %or5.i, %shl4.i
  %val.0.i = select i1 %cmp.i, i32 0, i32 %or6.i
  %20 = tail call i32 @llvm.bswap.i32(i32 %val.0.i) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %21 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i54 = getelementptr i8, ptr %22, i32 13824
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i54, i32 %20) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %23 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.1.i = getelementptr i8, ptr %24, i32 13828
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.1.i, i32 %20) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %25 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.2.i = getelementptr i8, ptr %26, i32 13832
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.2.i, i32 %20) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %27 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.3.i = getelementptr i8, ptr %28, i32 13836
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.3.i, i32 %20) #20, !srcloc !256
  %29 = ptrtoint ptr %rxq_def to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rxq_def, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %30)
  %cmp.i55 = icmp eq i32 %30, -1
  %shl.i56 = shl i32 %30, 1
  %or.i57 = or i32 %shl.i56, 1
  %shl1.i58 = shl i32 %or.i57, 24
  %shl2.i59 = shl i32 %or.i57, 16
  %shl4.i60 = shl i32 %or.i57, 8
  %or3.i61 = or i32 %shl2.i59, %or.i57
  %or5.i62 = or i32 %or3.i61, %shl1.i58
  %or6.i63 = or i32 %or5.i62, %shl4.i60
  %val.0.i64 = select i1 %cmp.i55, i32 0, i32 %or6.i63
  %31 = tail call i32 @llvm.bswap.i32(i32 %val.0.i64) #20
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then
  %offset.016.i = phi i32 [ 0, %if.then ], [ %add8.i, %for.body.i.for.body.i_crit_edge ]
  %add.i = add nuw nsw i32 %offset.016.i, 13312
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %32 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i66 = getelementptr i8, ptr %33, i32 %add.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i66, i32 %31) #20, !srcloc !256
  %add8.i = add nuw nsw i32 %offset.016.i, 4
  %cmp7.i = icmp ult i32 %offset.016.i, 249
  br i1 %cmp7.i, label %for.body.i.for.body.i_crit_edge, label %mvneta_set_special_mcast_table.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

mvneta_set_special_mcast_table.exit:              ; preds = %for.body.i
  %34 = ptrtoint ptr %rxq_def to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rxq_def, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %35)
  %cmp.i67 = icmp eq i32 %35, -1
  %mcast_count.i = getelementptr i8, ptr %dev, i32 2652
  br i1 %cmp.i67, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %mvneta_set_special_mcast_table.exit
  call void @__sanitizer_cov_trace_pc() #22
  %36 = call ptr @memset(ptr %mcast_count.i, i32 0, i32 256)
  br label %if.end.i

if.else.i:                                        ; preds = %mvneta_set_special_mcast_table.exit
  call void @__sanitizer_cov_trace_pc() #22
  %37 = call ptr @memset(ptr %mcast_count.i, i32 1, i32 256)
  %shl.i68 = shl i32 %35, 1
  %or.i69 = or i32 %shl.i68, 1
  %shl3.i = shl i32 %or.i69, 24
  %shl4.i70 = shl i32 %or.i69, 16
  %shl6.i = shl i32 %or.i69, 8
  %or5.i71 = or i32 %shl4.i70, %or.i69
  %or7.i = or i32 %or5.i71, %shl3.i
  %or8.i = or i32 %or7.i, %shl6.i
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %val.0.i72 = phi i32 [ 0, %if.then.i ], [ %or8.i, %if.else.i ]
  %38 = tail call i32 @llvm.bswap.i32(i32 %val.0.i72) #20
  br label %for.body.i76

for.body.i76:                                     ; preds = %for.body.i76.for.body.i76_crit_edge, %if.end.i
  %offset.020.i = phi i32 [ 0, %if.end.i ], [ %add10.i, %for.body.i76.for.body.i76_crit_edge ]
  %add.i74 = add nuw nsw i32 %offset.020.i, 13568
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %39 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i75 = getelementptr i8, ptr %40, i32 %add.i74
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i75, i32 %38) #20, !srcloc !256
  %add10.i = add nuw nsw i32 %offset.020.i, 4
  %cmp9.i = icmp ult i32 %offset.020.i, 249
  br i1 %cmp9.i, label %for.body.i76.for.body.i76_crit_edge, label %for.body.i76.if.end25_crit_edge

for.body.i76.if.end25_crit_edge:                  ; preds = %for.body.i76
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

for.body.i76.for.body.i76_crit_edge:              ; preds = %for.body.i76
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i76

if.else:                                          ; preds = %entry
  %41 = and i32 %4, -16777217
  %42 = and i32 %7, -8193
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %43 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i20.i82 = getelementptr i8, ptr %44, i32 9216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i20.i82, i32 %41) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %45 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i22.i83 = getelementptr i8, ptr %46, i32 9404
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i22.i83, i32 %42) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %47 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i86 = getelementptr i8, ptr %48, i32 13824
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i86, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %49 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.1.i87 = getelementptr i8, ptr %50, i32 13828
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.1.i87, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %51 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.2.i88 = getelementptr i8, ptr %52, i32 13832
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.2.i88, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %53 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.3.i89 = getelementptr i8, ptr %54, i32 13836
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.3.i89, i32 0) #20, !srcloc !256
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %55 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %dev_addr, align 64
  %rxq_def3 = getelementptr i8, ptr %dev, i32 2356
  %57 = ptrtoint ptr %rxq_def3 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %rxq_def3, align 4
  tail call fastcc void @mvneta_mac_addr_set(ptr noundef %add.ptr.i, ptr noundef %56, i32 noundef %58)
  %59 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %flags, align 8
  %and5 = and i32 %60, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.else.for.body.i136_crit_edge, label %if.then7

if.else.for.body.i136_crit_edge:                  ; preds = %if.else
  br label %for.body.i136

if.then7:                                         ; preds = %if.else
  %61 = ptrtoint ptr %rxq_def3 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %rxq_def3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %62)
  %cmp.i90 = icmp eq i32 %62, -1
  %shl.i91 = shl i32 %62, 1
  %or.i92 = or i32 %shl.i91, 1
  %shl1.i93 = shl i32 %or.i92, 24
  %shl2.i94 = shl i32 %or.i92, 16
  %shl4.i95 = shl i32 %or.i92, 8
  %or3.i96 = or i32 %shl2.i94, %or.i92
  %or5.i97 = or i32 %or3.i96, %shl1.i93
  %or6.i98 = or i32 %or5.i97, %shl4.i95
  %val.0.i99 = select i1 %cmp.i90, i32 0, i32 %or6.i98
  %63 = tail call i32 @llvm.bswap.i32(i32 %val.0.i99) #20
  br label %for.body.i106

for.body.i106:                                    ; preds = %for.body.i106.for.body.i106_crit_edge, %if.then7
  %offset.016.i101 = phi i32 [ 0, %if.then7 ], [ %add8.i104, %for.body.i106.for.body.i106_crit_edge ]
  %add.i102 = add nuw nsw i32 %offset.016.i101, 13312
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %64 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i103 = getelementptr i8, ptr %65, i32 %add.i102
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i103, i32 %63) #20, !srcloc !256
  %add8.i104 = add nuw nsw i32 %offset.016.i101, 4
  %cmp7.i105 = icmp ult i32 %offset.016.i101, 249
  br i1 %cmp7.i105, label %for.body.i106.for.body.i106_crit_edge, label %mvneta_set_special_mcast_table.exit107

for.body.i106.for.body.i106_crit_edge:            ; preds = %for.body.i106
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i106

mvneta_set_special_mcast_table.exit107:           ; preds = %for.body.i106
  %66 = ptrtoint ptr %rxq_def3 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %rxq_def3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %67)
  %cmp.i108 = icmp eq i32 %67, -1
  %mcast_count.i109 = getelementptr i8, ptr %dev, i32 2652
  br i1 %cmp.i108, label %if.then.i110, label %if.else.i119

if.then.i110:                                     ; preds = %mvneta_set_special_mcast_table.exit107
  call void @__sanitizer_cov_trace_pc() #22
  %68 = call ptr @memset(ptr %mcast_count.i109, i32 0, i32 256)
  br label %if.end.i122

if.else.i119:                                     ; preds = %mvneta_set_special_mcast_table.exit107
  call void @__sanitizer_cov_trace_pc() #22
  %69 = call ptr @memset(ptr %mcast_count.i109, i32 1, i32 256)
  %shl.i111 = shl i32 %67, 1
  %or.i112 = or i32 %shl.i111, 1
  %shl3.i113 = shl i32 %or.i112, 24
  %shl4.i114 = shl i32 %or.i112, 16
  %shl6.i115 = shl i32 %or.i112, 8
  %or5.i116 = or i32 %shl4.i114, %or.i112
  %or7.i117 = or i32 %or5.i116, %shl3.i113
  %or8.i118 = or i32 %or7.i117, %shl6.i115
  br label %if.end.i122

if.end.i122:                                      ; preds = %if.else.i119, %if.then.i110
  %val.0.i120 = phi i32 [ 0, %if.then.i110 ], [ %or8.i118, %if.else.i119 ]
  %70 = tail call i32 @llvm.bswap.i32(i32 %val.0.i120) #20
  br label %for.body.i128

for.body.i128:                                    ; preds = %for.body.i128.for.body.i128_crit_edge, %if.end.i122
  %offset.020.i123 = phi i32 [ 0, %if.end.i122 ], [ %add10.i126, %for.body.i128.for.body.i128_crit_edge ]
  %add.i124 = add nuw nsw i32 %offset.020.i123, 13568
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %71 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i125 = getelementptr i8, ptr %72, i32 %add.i124
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i125, i32 %70) #20, !srcloc !256
  %add10.i126 = add nuw nsw i32 %offset.020.i123, 4
  %cmp9.i127 = icmp ult i32 %offset.020.i123, 249
  br i1 %cmp9.i127, label %for.body.i128.for.body.i128_crit_edge, label %for.body.i128.if.end25_crit_edge

for.body.i128.if.end25_crit_edge:                 ; preds = %for.body.i128
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

for.body.i128.for.body.i128_crit_edge:            ; preds = %for.body.i128
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i128

for.body.i136:                                    ; preds = %for.body.i136.for.body.i136_crit_edge, %if.else.for.body.i136_crit_edge
  %offset.016.i131 = phi i32 [ %add8.i134, %for.body.i136.for.body.i136_crit_edge ], [ 0, %if.else.for.body.i136_crit_edge ]
  %add.i132 = add nuw nsw i32 %offset.016.i131, 13312
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %73 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i133 = getelementptr i8, ptr %74, i32 %add.i132
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i133, i32 0) #20, !srcloc !256
  %add8.i134 = add nuw nsw i32 %offset.016.i131, 4
  %cmp7.i135 = icmp ult i32 %offset.016.i131, 249
  br i1 %cmp7.i135, label %for.body.i136.for.body.i136_crit_edge, label %mvneta_set_special_mcast_table.exit137

for.body.i136.for.body.i136_crit_edge:            ; preds = %for.body.i136
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i136

mvneta_set_special_mcast_table.exit137:           ; preds = %for.body.i136
  %mcast_count.i138 = getelementptr i8, ptr %dev, i32 2652
  %75 = call ptr @memset(ptr %mcast_count.i138, i32 0, i32 256)
  br label %for.body.i148

for.body.i148:                                    ; preds = %for.body.i148.for.body.i148_crit_edge, %mvneta_set_special_mcast_table.exit137
  %offset.020.i143 = phi i32 [ 0, %mvneta_set_special_mcast_table.exit137 ], [ %add10.i146, %for.body.i148.for.body.i148_crit_edge ]
  %add.i144 = add nuw nsw i32 %offset.020.i143, 13568
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %76 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i145 = getelementptr i8, ptr %77, i32 %add.i144
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i145, i32 0) #20, !srcloc !256
  %add10.i146 = add nuw nsw i32 %offset.020.i143, 4
  %cmp9.i147 = icmp ult i32 %offset.020.i143, 249
  br i1 %cmp9.i147, label %for.body.i148.for.body.i148_crit_edge, label %mvneta_set_other_mcast_table.exit149

for.body.i148.for.body.i148_crit_edge:            ; preds = %for.body.i148
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i148

mvneta_set_other_mcast_table.exit149:             ; preds = %for.body.i148
  %mc = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 66
  %count = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 66, i32 1
  %78 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %cmp = icmp eq i32 %79, 0
  br i1 %cmp, label %mvneta_set_other_mcast_table.exit149.if.end25_crit_edge, label %for.cond.preheader

mvneta_set_other_mcast_table.exit149.if.end25_crit_edge: ; preds = %mvneta_set_other_mcast_table.exit149
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

for.cond.preheader:                               ; preds = %mvneta_set_other_mcast_table.exit149
  %80 = ptrtoint ptr %mc to i32
  call void @__asan_load4_noabort(i32 %80)
  %ha.0156 = load ptr, ptr %mc, align 4
  %cmp16.not157 = icmp eq ptr %ha.0156, %mc
  br i1 %cmp16.not157, label %for.cond.preheader.if.end25_crit_edge, label %for.body.lr.ph

for.cond.preheader.if.end25_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %dev22.i = getelementptr i8, ptr %dev, i32 2336
  br label %for.body

for.body:                                         ; preds = %mvneta_mcast_addr_set.exit.for.body_crit_edge, %for.body.lr.ph
  %ha.0158 = phi ptr [ %ha.0156, %for.body.lr.ph ], [ %ha.0, %mvneta_mcast_addr_set.exit.for.body_crit_edge ]
  %addr = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0158, i32 0, i32 2
  %81 = ptrtoint ptr %rxq_def3 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %rxq_def3, align 4
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(5) %addr, ptr noundef nonnull dereferenceable(5) @.str.54, i32 5) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp.i150 = icmp eq i32 %bcmp.i, 0
  br i1 %cmp.i150, label %if.then.i151, label %for.body.for.body.i.i_crit_edge

for.body.for.body.i.i_crit_edge:                  ; preds = %for.body
  br label %for.body.i.i

if.then.i151:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx.i = getelementptr %struct.netdev_hw_addr, ptr %ha.0158, i32 0, i32 2, i32 5
  %83 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %arrayidx.i, align 1
  %conv.i.i = zext i8 %84 to i32
  %div23.i.i = and i32 %conv.i.i, 252
  %add.i.i = or i32 %div23.i.i, 13312
  %85 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %86, i32 %add.i.i
  %87 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #20, !srcloc !258
  %88 = tail call i32 @llvm.bswap.i32(i32 %87) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %82)
  %cmp.i.i = icmp eq i32 %82, -1
  %rem.i.i = shl nuw nsw i32 %conv.i.i, 3
  %mul3.i.i = and i32 %rem.i.i, 24
  %shl.i.i = shl nuw i32 255, %mul3.i.i
  %neg.i.i = xor i32 %shl.i.i, -1
  %and.i.i = and i32 %88, %neg.i.i
  %shl8.i.i = shl i32 %82, 1
  %or.i.i = or i32 %shl8.i.i, 1
  %shl10.i.i = shl i32 %or.i.i, %mul3.i.i
  %or11.i.i = select i1 %cmp.i.i, i32 0, i32 %shl10.i.i
  %smc_table_reg.0.i.i = or i32 %and.i.i, %or11.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %89 = tail call i32 @llvm.bswap.i32(i32 %smc_table_reg.0.i.i) #20
  %90 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i25.i.i = getelementptr i8, ptr %91, i32 %add.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i25.i.i, i32 %89) #20, !srcloc !256
  br label %mvneta_mcast_addr_set.exit

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.for.body.i.i_crit_edge
  %i.021.i.i = phi i32 [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.body.for.body.i.i_crit_edge ]
  %crc.020.i.i = phi i32 [ %crc.2.7.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.body.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr i8, ptr %addr, i32 %i.021.i.i
  %92 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %arrayidx.i.i, align 1
  %conv.i1.i = zext i8 %93 to i32
  %xor.i.i = xor i32 %crc.020.i.i, %conv.i1.i
  %shl.i2.i = shl i32 %xor.i.i, 8
  %94 = and i32 %xor.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %tobool.not.i.i = icmp eq i32 %94, 0
  %xor7.i.i = select i1 %tobool.not.i.i, i32 0, i32 33664
  %crc.2.i.i = xor i32 %xor7.i.i, %shl.i2.i
  %95 = and i32 %xor.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool.not.1.i.i = icmp eq i32 %95, 0
  %xor7.1.i.i = select i1 %tobool.not.1.i.i, i32 0, i32 16832
  %crc.2.1.i.i = xor i32 %crc.2.i.i, %xor7.1.i.i
  %96 = and i32 %xor.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool.not.2.i.i = icmp eq i32 %96, 0
  %xor7.2.i.i = select i1 %tobool.not.2.i.i, i32 0, i32 8416
  %97 = and i32 %xor.i.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %tobool.not.3.i.i = icmp eq i32 %97, 0
  %xor7.3.i.i = select i1 %tobool.not.3.i.i, i32 0, i32 4208
  %98 = and i32 %xor.i.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %98)
  %tobool.not.4.i.i = icmp eq i32 %98, 0
  %xor7.4.i.i = select i1 %tobool.not.4.i.i, i32 0, i32 2104
  %99 = and i32 %xor.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %tobool.not.5.i.i = icmp eq i32 %99, 0
  %xor7.5.i.i = select i1 %tobool.not.5.i.i, i32 0, i32 1052
  %and.6.i.i = and i32 %crc.2.i.i, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6.i.i)
  %tobool.not.6.i.i = icmp eq i32 %and.6.i.i, 0
  %xor7.6.i.i = select i1 %tobool.not.6.i.i, i32 0, i32 526
  %and.7.i.i = and i32 %crc.2.1.i.i, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.7.i.i)
  %tobool.not.7.i.i = icmp eq i32 %and.7.i.i, 0
  %xor7.7.i.i = select i1 %tobool.not.7.i.i, i32 0, i32 263
  %crc.2.2.i.i = xor i32 %xor7.3.i.i, %xor7.2.i.i
  %crc.2.3.i.i = xor i32 %crc.2.2.i.i, %xor7.4.i.i
  %crc.2.4.i.i = xor i32 %crc.2.3.i.i, %xor7.5.i.i
  %crc.2.5.i.i = xor i32 %crc.2.4.i.i, %crc.2.1.i.i
  %crc.2.6.i.i = xor i32 %crc.2.5.i.i, %xor7.6.i.i
  %crc.2.7.i.i = xor i32 %crc.2.6.i.i, %xor7.7.i.i
  %inc.i.i = add nuw nsw i32 %i.021.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 6
  br i1 %exitcond.not.i.i, label %mvneta_addr_crc.exit.i, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i.i

mvneta_addr_crc.exit.i:                           ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %82)
  %cmp2.i = icmp eq i32 %82, -1
  %idxprom.i = and i32 %crc.2.7.i.i, 255
  %arrayidx5.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 19, i32 %idxprom.i
  %100 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load1_noabort(i32 %100)
  %101 = load i8, ptr %arrayidx5.i, align 1
  br i1 %cmp2.i, label %if.then4.i, label %if.else.i153

if.then4.i:                                       ; preds = %mvneta_addr_crc.exit.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %101)
  %cmp7.i152 = icmp eq i8 %101, 0
  br i1 %cmp7.i152, label %if.then9.i, label %if.end11.i

if.then9.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #22
  %102 = ptrtoint ptr %dev22.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %dev22.i, align 8
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %103, ptr noundef nonnull @.str.55, i32 noundef %idxprom.i) #24
  br label %mvneta_mcast_addr_set.exit

if.end11.i:                                       ; preds = %if.then4.i
  %dec.i = add i8 %101, -1
  %104 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_store1_noabort(i32 %104)
  store i8 %dec.i, ptr %arrayidx5.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %dec.i)
  %cmp19.not.i = icmp eq i8 %dec.i, 0
  br i1 %cmp19.not.i, label %if.end11.i.if.end32.i_crit_edge, label %if.then21.i

if.end11.i.if.end32.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end32.i

if.then21.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv18.i = zext i8 %dec.i to i32
  %105 = ptrtoint ptr %dev22.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %dev22.i, align 8
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %106, ptr noundef nonnull @.str.56, i32 noundef %conv18.i, i32 noundef %idxprom.i) #24
  br label %mvneta_mcast_addr_set.exit

if.else.i153:                                     ; preds = %mvneta_addr_crc.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %inc.i = add i8 %101, 1
  %107 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_store1_noabort(i32 %107)
  store i8 %inc.i, ptr %arrayidx5.i, align 1
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.else.i153, %if.end11.i.if.end32.i_crit_edge
  %div22.i.i = and i32 %crc.2.7.i.i, 252
  %add.i4.i = or i32 %div22.i.i, 13568
  %108 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i.i6.i = getelementptr i8, ptr %109, i32 %add.i4.i
  %110 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i6.i) #20, !srcloc !258
  %111 = tail call i32 @llvm.bswap.i32(i32 %110) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %conv.i3.i = shl i32 %crc.2.7.i.i, 3
  %mul3.i9.i = and i32 %conv.i3.i, 24
  %shl.i10.i = shl nuw i32 255, %mul3.i9.i
  %neg.i11.i = xor i32 %shl.i10.i, -1
  %and.i12.i = and i32 %111, %neg.i11.i
  %shl8.i13.i = shl i32 %82, 1
  %or.i14.i = or i32 %shl8.i13.i, 1
  %shl10.i15.i = shl i32 %or.i14.i, %mul3.i9.i
  %or11.i16.i = select i1 %cmp2.i, i32 0, i32 %shl10.i15.i
  %omc_table_reg.0.i.i = or i32 %and.i12.i, %or11.i16.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %112 = tail call i32 @llvm.bswap.i32(i32 %omc_table_reg.0.i.i) #20
  %113 = ptrtoint ptr %base.i.i77 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %base.i.i77, align 4
  %add.ptr.i24.i.i = getelementptr i8, ptr %114, i32 %add.i4.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i24.i.i, i32 %112) #20, !srcloc !256
  br label %mvneta_mcast_addr_set.exit

mvneta_mcast_addr_set.exit:                       ; preds = %if.end32.i, %if.then21.i, %if.then9.i, %if.then.i151
  %115 = ptrtoint ptr %ha.0158 to i32
  call void @__asan_load4_noabort(i32 %115)
  %ha.0 = load ptr, ptr %ha.0158, align 4
  %cmp16.not = icmp eq ptr %ha.0, %mc
  br i1 %cmp16.not, label %mvneta_mcast_addr_set.exit.if.end25_crit_edge, label %mvneta_mcast_addr_set.exit.for.body_crit_edge

mvneta_mcast_addr_set.exit.for.body_crit_edge:    ; preds = %mvneta_mcast_addr_set.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

mvneta_mcast_addr_set.exit.if.end25_crit_edge:    ; preds = %mvneta_mcast_addr_set.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

if.end25:                                         ; preds = %mvneta_mcast_addr_set.exit.if.end25_crit_edge, %for.cond.preheader.if.end25_crit_edge, %mvneta_set_other_mcast_table.exit149.if.end25_crit_edge, %for.body.i128.if.end25_crit_edge, %for.body.i76.if.end25_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_set_mac_addr(ptr noundef %dev, ptr noundef %addr) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call1 = tail call i32 @eth_prepare_mac_addr_change(ptr noundef %dev, ptr noundef %addr) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %0 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_addr, align 64
  %arrayidx18.i = getelementptr i8, ptr %1, i32 5
  %2 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx18.i, align 1
  %4 = and i8 %3, 15
  %conv2.i.i = zext i8 %4 to i32
  %div26.i.i = and i32 %conv2.i.i, 12
  %add.i.i = or i32 %div26.i.i, 13824
  %base.i.i.i = getelementptr i8, ptr %dev, i32 2324
  %5 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 %add.i.i
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #20, !srcloc !258
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %rem.i.i = shl nuw nsw i32 %conv2.i.i, 3
  %mul5.i.i = and i32 %rem.i.i, 24
  %shl.i.i = shl nuw i32 255, %mul5.i.i
  %neg.i.i = xor i32 %shl.i.i, -1
  %and6.i.i = and i32 %8, %neg.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %9 = tail call i32 @llvm.bswap.i32(i32 %and6.i.i) #20
  %10 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i28.i.i = getelementptr i8, ptr %11, i32 %add.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i28.i.i, i32 %9) #20, !srcloc !256
  %sa_data = getelementptr inbounds %struct.sockaddr, ptr %addr, i32 0, i32 1
  %rxq_def = getelementptr i8, ptr %dev, i32 2356
  %12 = ptrtoint ptr %rxq_def to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rxq_def, align 4
  tail call fastcc void @mvneta_mac_addr_set(ptr noundef %add.ptr.i, ptr noundef %sa_data, i32 noundef %13)
  tail call void @eth_commit_mac_addr_change(ptr noundef %dev, ptr noundef %addr) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ %call1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ioctl(ptr nocapture noundef readonly %dev, ptr noundef %ifr, i32 noundef %cmd) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %dev, i32 2924
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 4
  %call1 = tail call i32 @phylink_mii_ioctl(ptr noundef %1, ptr noundef %ifr, i32 noundef %cmd) #20
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_change_mtu(ptr noundef %dev, i32 noundef %mtu) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %xdp_prog = getelementptr i8, ptr %dev, i32 2640
  %0 = ptrtoint ptr %xdp_prog to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xdp_prog, align 8
  %tobool.not = icmp ne ptr %1, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 3584, i32 %mtu)
  %cmp22 = icmp ugt i32 %mtu, 3584
  %or.cond = and i1 %cmp22, %tobool.not
  br i1 %or.cond, label %if.then23, label %if.end24

if.then23:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %dev, ptr noundef nonnull @.str.58, i32 noundef %mtu) #24
  br label %cleanup

if.end24:                                         ; preds = %entry
  %mtu25 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %2 = ptrtoint ptr %mtu25 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %mtu, ptr %mtu25, align 4
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %3 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.then27, label %if.end31

if.then27:                                        ; preds = %if.end24
  %bm_priv = getelementptr i8, ptr %dev, i32 2964
  %5 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bm_priv, align 4
  %tobool28.not = icmp eq ptr %6, null
  br i1 %tobool28.not, label %if.then27.if.end30_crit_edge, label %if.then29

if.then27.if.end30_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

if.then29:                                        ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @mvneta_bm_update_mtu(ptr noundef %add.ptr.i, i32 noundef %mtu)
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.then27.if.end30_crit_edge
  tail call void @netdev_update_features(ptr noundef %dev) #20
  br label %cleanup

if.end31:                                         ; preds = %if.end24
  tail call fastcc void @mvneta_stop_dev(ptr noundef %add.ptr.i)
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_disable, ptr noundef %add.ptr.i, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call fastcc void @mvneta_cleanup_txqs(ptr noundef %add.ptr.i)
  %7 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp4.i = icmp sgt i32 %7, 0
  br i1 %cmp4.i, label %for.body.lr.ph.i, label %if.end31.mvneta_cleanup_rxqs.exit_crit_edge

if.end31.mvneta_cleanup_rxqs.exit_crit_edge:      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_cleanup_rxqs.exit

for.body.lr.ph.i:                                 ; preds = %if.end31
  %rxqs.i = getelementptr i8, ptr %dev, i32 2328
  %dev.i.i = getelementptr i8, ptr %dev, i32 2336
  br label %for.body.i

for.body.i:                                       ; preds = %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %queue.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge ]
  %8 = ptrtoint ptr %rxqs.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rxqs.i, align 8
  %arrayidx.i = getelementptr %struct.mvneta_rx_queue, ptr %9, i32 %queue.05.i
  tail call fastcc void @mvneta_rxq_drop_pkts(ptr noundef %add.ptr.i, ptr noundef %arrayidx.i) #20
  %descs.i.i = getelementptr %struct.mvneta_rx_queue, ptr %9, i32 %queue.05.i, i32 8
  %10 = ptrtoint ptr %descs.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %descs.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %for.body.i.mvneta_rxq_deinit.exit.i_crit_edge, label %if.then.i.i

for.body.i.mvneta_rxq_deinit.exit.i_crit_edge:    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_deinit.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %12 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev.i.i, align 8
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 133, i32 1
  %14 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %parent.i.i, align 8
  %size.i.i = getelementptr %struct.mvneta_rx_queue, ptr %9, i32 %queue.05.i, i32 1
  %16 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %size.i.i, align 4
  %mul.i.i = shl i32 %17, 5
  %descs_phys.i.i = getelementptr %struct.mvneta_rx_queue, ptr %9, i32 %queue.05.i, i32 9
  %18 = ptrtoint ptr %descs_phys.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %descs_phys.i.i, align 8
  tail call void @dma_free_attrs(ptr noundef %15, i32 noundef %mul.i.i, ptr noundef nonnull %11, i32 noundef %19, i32 noundef 0) #20
  br label %mvneta_rxq_deinit.exit.i

mvneta_rxq_deinit.exit.i:                         ; preds = %if.then.i.i, %for.body.i.mvneta_rxq_deinit.exit.i_crit_edge
  %20 = call ptr @memset(ptr %descs.i.i, i32 0, i32 24)
  %inc.i = add nuw nsw i32 %queue.05.i, 1
  %21 = load i32, ptr @rxq_number, align 4
  %cmp.i = icmp slt i32 %inc.i, %21
  br i1 %cmp.i, label %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge, label %mvneta_rxq_deinit.exit.i.mvneta_cleanup_rxqs.exit_crit_edge

mvneta_rxq_deinit.exit.i.mvneta_cleanup_rxqs.exit_crit_edge: ; preds = %mvneta_rxq_deinit.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_cleanup_rxqs.exit

mvneta_rxq_deinit.exit.i.for.body.i_crit_edge:    ; preds = %mvneta_rxq_deinit.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

mvneta_cleanup_rxqs.exit:                         ; preds = %mvneta_rxq_deinit.exit.i.mvneta_cleanup_rxqs.exit_crit_edge, %if.end31.mvneta_cleanup_rxqs.exit_crit_edge
  %bm_priv32 = getelementptr i8, ptr %dev, i32 2964
  %22 = ptrtoint ptr %bm_priv32 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %bm_priv32, align 4
  %tobool33.not = icmp eq ptr %23, null
  br i1 %tobool33.not, label %mvneta_cleanup_rxqs.exit.if.end35_crit_edge, label %if.then34

mvneta_cleanup_rxqs.exit.if.end35_crit_edge:      ; preds = %mvneta_cleanup_rxqs.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35

if.then34:                                        ; preds = %mvneta_cleanup_rxqs.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @mvneta_bm_update_mtu(ptr noundef %add.ptr.i, i32 noundef %mtu)
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %mvneta_cleanup_rxqs.exit.if.end35_crit_edge
  %24 = ptrtoint ptr %mtu25 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %mtu25, align 4
  %add41 = add i32 %25, 151
  %and42 = and i32 %add41, -128
  %pkt_size = getelementptr i8, ptr %dev, i32 2320
  %26 = ptrtoint ptr %pkt_size to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %and42, ptr %pkt_size, align 8
  %call43 = tail call fastcc i32 @mvneta_setup_rxqs(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %if.end46, label %if.then45

if.then45:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.59) #24
  br label %cleanup

if.end46:                                         ; preds = %if.end35
  %call47 = tail call fastcc i32 @mvneta_setup_txqs(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %if.end50, label %if.then49

if.then49:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.60) #24
  br label %cleanup

if.end50:                                         ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_enable, ptr noundef %add.ptr.i, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call fastcc void @mvneta_start_dev(ptr noundef %add.ptr.i)
  tail call void @netdev_update_features(ptr noundef %dev) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end50, %if.then49, %if.then45, %if.end30, %if.then23
  %retval.0 = phi i32 [ -22, %if.then23 ], [ %call43, %if.then45 ], [ %call47, %if.then49 ], [ 0, %if.end50 ], [ 0, %if.end30 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_get_stats64(ptr nocapture noundef readonly %dev, ptr nocapture noundef %stats) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call157 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call157, i32 %0)
  %cmp58 = icmp ult i32 %call157, %0
  br i1 %cmp58, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %stats2 = getelementptr i8, ptr %dev, i32 2312
  %rx_bytes24 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 2
  %rx_dropped26 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 6
  %rx_errors28 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 4
  %tx_packets30 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 1
  %tx_bytes32 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %do.end21.for.body_crit_edge, %for.body.lr.ph
  %call159 = phi i32 [ %call157, %for.body.lr.ph ], [ %call1, %do.end21.for.body_crit_edge ]
  %1 = ptrtoint ptr %stats2 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %stats2, align 8
  %3 = ptrtoint ptr %2 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call159
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, %3
  %6 = inttoptr i32 %add to ptr
  %es = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %6, i32 0, i32 1
  %rx_bytes9 = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %6, i32 0, i32 1, i32 0, i32 1
  %rx_dropped10 = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %6, i32 0, i32 2
  %rx_errors11 = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %6, i32 0, i32 3
  %tx_packets14 = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %6, i32 0, i32 1, i32 0, i32 2
  %tx_bytes17 = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %6, i32 0, i32 1, i32 0, i32 3
  br label %do.body4

do.body4:                                         ; preds = %do.body4.do.body4_crit_edge, %for.body
  %call5 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %6)
  %7 = ptrtoint ptr %es to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %es, align 8
  %9 = ptrtoint ptr %rx_bytes9 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %rx_bytes9, align 8
  %11 = ptrtoint ptr %rx_dropped10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %rx_dropped10, align 8
  %13 = ptrtoint ptr %rx_errors11 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %rx_errors11, align 8
  %15 = ptrtoint ptr %tx_packets14 to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %tx_packets14, align 8
  %17 = ptrtoint ptr %tx_bytes17 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %tx_bytes17, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !271
  %19 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %6, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %20, %call5
  br i1 %cmp.i.i.i.i.not, label %do.end21, label %do.body4.do.body4_crit_edge

do.body4.do.body4_crit_edge:                      ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body4

do.end21:                                         ; preds = %do.body4
  %21 = ptrtoint ptr %stats to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %stats, align 8
  %add23 = add i64 %22, %8
  store i64 %add23, ptr %stats, align 8
  %23 = ptrtoint ptr %rx_bytes24 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %rx_bytes24, align 8
  %add25 = add i64 %24, %10
  store i64 %add25, ptr %rx_bytes24, align 8
  %25 = ptrtoint ptr %rx_dropped26 to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %rx_dropped26, align 8
  %add27 = add i64 %26, %12
  store i64 %add27, ptr %rx_dropped26, align 8
  %27 = ptrtoint ptr %rx_errors28 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %rx_errors28, align 8
  %add29 = add i64 %28, %14
  store i64 %add29, ptr %rx_errors28, align 8
  %29 = ptrtoint ptr %tx_packets30 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %tx_packets30, align 8
  %add31 = add i64 %30, %16
  store i64 %add31, ptr %tx_packets30, align 8
  %31 = ptrtoint ptr %tx_bytes32 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %tx_bytes32, align 8
  %add33 = add i64 %32, %18
  store i64 %add33, ptr %tx_bytes32, align 8
  %call1 = tail call i32 @cpumask_next(i32 noundef %call159, ptr noundef nonnull @__cpu_possible_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %33 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call1, %33
  br i1 %cmp, label %do.end21.for.body_crit_edge, label %do.end21.for.end_crit_edge

do.end21.for.end_crit_edge:                       ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

do.end21.for.body_crit_edge:                      ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %do.end21.for.end_crit_edge, %entry.for.end_crit_edge
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36, i32 7
  %34 = ptrtoint ptr %tx_dropped to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %tx_dropped, align 4
  %conv = zext i32 %35 to i64
  %tx_dropped35 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %stats, i32 0, i32 7
  %36 = ptrtoint ptr %tx_dropped35 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %conv, ptr %tx_dropped35, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_setup_tc(ptr noundef %dev, i32 noundef %type, ptr nocapture noundef readonly %type_data) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type)
  %cond = icmp eq i32 %type, 0
  br i1 %cond, label %sw.bb, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

sw.bb:                                            ; preds = %entry
  %hw.i = getelementptr inbounds %struct.tc_mqprio_qopt, ptr %type_data, i32 0, i32 2
  %0 = ptrtoint ptr %hw.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %hw.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %1)
  %cmp.not.i = icmp eq i8 %1, 1
  br i1 %cmp.not.i, label %if.end.i, label %sw.bb.return_crit_edge

sw.bb.return_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end.i:                                         ; preds = %sw.bb
  %2 = ptrtoint ptr %type_data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %type_data, align 8
  %conv4.i = zext i8 %3 to i32
  %4 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %conv4.i)
  %cmp5.i = icmp slt i32 %4, %conv4.i
  br i1 %cmp5.i, label %if.end.i.return_crit_edge, label %if.end8.i

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end8.i:                                        ; preds = %if.end.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i.i.i = getelementptr i8, ptr %dev, i32 2324
  %5 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 9280
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i.i, i32 0) #20, !srcloc !256
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %if.then9.i, label %if.end10.i

if.then9.i:                                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %7 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i160.i = getelementptr i8, ptr %8, i32 15872
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i160.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %10 = or i32 %9, 150994944
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %11 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i4.i.i = getelementptr i8, ptr %12, i32 15872
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i4.i.i, i32 %10) #20, !srcloc !256
  tail call void @netdev_reset_tc(ptr noundef %dev) #20
  br label %return

if.end10.i:                                       ; preds = %if.end8.i
  %13 = ptrtoint ptr %type_data to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %type_data, align 8
  %call13.i = tail call i32 @netdev_set_num_tc(ptr noundef %dev, i8 noundef zeroext %14) #20
  %15 = ptrtoint ptr %type_data to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %type_data, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %cmp17172.not.i = icmp eq i8 %16, 0
  br i1 %cmp17172.not.i, label %if.end10.i.for.end48.i_crit_edge, label %if.end10.i.for.body.i_crit_edge

if.end10.i.for.body.i_crit_edge:                  ; preds = %if.end10.i
  br label %for.body.i

if.end10.i.for.end48.i_crit_edge:                 ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end48.i

for.body.i:                                       ; preds = %for.inc46.i.for.body.i_crit_edge, %if.end10.i.for.body.i_crit_edge
  %tc.0173.i = phi i32 [ %inc47.i, %for.inc46.i.for.body.i_crit_edge ], [ 0, %if.end10.i.for.body.i_crit_edge ]
  %conv19.i = trunc i32 %tc.0173.i to i8
  %arrayidx.i = getelementptr %struct.tc_mqprio_qopt, ptr %type_data, i32 0, i32 3, i32 %tc.0173.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %arrayidx.i, align 2
  %arrayidx22.i = getelementptr %struct.tc_mqprio_qopt, ptr %type_data, i32 0, i32 4, i32 %tc.0173.i
  %19 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %arrayidx22.i, align 2
  %call23.i = tail call i32 @netdev_set_tc_queue(ptr noundef %dev, i8 noundef zeroext %conv19.i, i16 noundef zeroext %18, i16 noundef zeroext %20) #20
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %arrayidx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %cmp37169.not.i = icmp eq i16 %22, 0
  br i1 %cmp37169.not.i, label %for.body.i.for.inc46.i_crit_edge, label %for.body39.lr.ph.i

for.body.i.for.inc46.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc46.i

for.body39.lr.ph.i:                               ; preds = %for.body.i
  %23 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %arrayidx22.i, align 2
  %conv27.i = zext i16 %24 to i32
  %mul.i.i = mul nuw nsw i32 %tc.0173.i, 3
  %shl.i.i = shl i32 7, %mul.i.i
  %neg.i.i = xor i32 %shl.i.i, -1
  br label %for.body39.i

for.body39.i:                                     ; preds = %if.end43.i.for.body39.i_crit_edge, %for.body39.lr.ph.i
  %rxq.0170.i = phi i32 [ %conv27.i, %for.body39.lr.ph.i ], [ %inc.i, %if.end43.i.for.body39.i_crit_edge ]
  %25 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %rxq.0170.i, i32 %25)
  %cmp40.not.i = icmp slt i32 %rxq.0170.i, %25
  br i1 %cmp40.not.i, label %if.end43.i, label %for.body39.i.return_crit_edge

for.body39.i.return_crit_edge:                    ; preds = %for.body39.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end43.i:                                       ; preds = %for.body39.i
  %26 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i162.i = getelementptr i8, ptr %27, i32 9280
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i162.i) #20, !srcloc !258
  %29 = tail call i32 @llvm.bswap.i32(i32 %28) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and.i.i = and i32 %29, %neg.i.i
  %conv1.i.i = and i32 %rxq.0170.i, 255
  %shl4.i.i = shl i32 %conv1.i.i, %mul.i.i
  %or.i.i = or i32 %and.i.i, %shl4.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %30 = tail call i32 @llvm.bswap.i32(i32 %or.i.i) #20
  %31 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i10.i.i = getelementptr i8, ptr %32, i32 9280
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i10.i.i, i32 %30) #20, !srcloc !256
  %inc.i = add nuw nsw i32 %rxq.0170.i, 1
  %33 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %arrayidx.i, align 2
  %conv32.i = zext i16 %34 to i32
  %35 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %arrayidx22.i, align 2
  %conv36.i = zext i16 %36 to i32
  %add.i = add nuw nsw i32 %conv36.i, %conv32.i
  %cmp37.i = icmp ult i32 %inc.i, %add.i
  br i1 %cmp37.i, label %if.end43.i.for.body39.i_crit_edge, label %if.end43.i.for.inc46.i_crit_edge

if.end43.i.for.inc46.i_crit_edge:                 ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc46.i

if.end43.i.for.body39.i_crit_edge:                ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body39.i

for.inc46.i:                                      ; preds = %if.end43.i.for.inc46.i_crit_edge, %for.body.i.for.inc46.i_crit_edge
  %inc47.i = add nuw nsw i32 %tc.0173.i, 1
  %37 = ptrtoint ptr %type_data to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %type_data, align 8
  %conv16.i = zext i8 %38 to i32
  %cmp17.i = icmp ult i32 %inc47.i, %conv16.i
  br i1 %cmp17.i, label %for.inc46.i.for.body.i_crit_edge, label %for.end48.i.loopexit

for.inc46.i.for.body.i_crit_edge:                 ; preds = %for.inc46.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.end48.i.loopexit:                             ; preds = %for.inc46.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv16.i.le = zext i8 %38 to i32
  br label %for.end48.i

for.end48.i:                                      ; preds = %for.end48.i.loopexit, %if.end10.i.for.end48.i_crit_edge
  %.lcssa.i = phi i32 [ 0, %if.end10.i.for.end48.i_crit_edge ], [ %conv16.i.le, %for.end48.i.loopexit ]
  %shaper.i = getelementptr inbounds %struct.tc_mqprio_qopt_offload, ptr %type_data, i32 0, i32 2
  %39 = ptrtoint ptr %shaper.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %shaper.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %40)
  %cmp50.not.i = icmp eq i16 %40, 1
  br i1 %cmp50.not.i, label %if.end53.i, label %if.then52.i

if.then52.i:                                      ; preds = %for.end48.i
  call void @__sanitizer_cov_trace_pc() #22
  %41 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i11 = getelementptr i8, ptr %42, i32 15872
  %43 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i11) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %44 = or i32 %43, 150994944
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %45 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i4.i = getelementptr i8, ptr %46, i32 15872
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i4.i, i32 %44) #20, !srcloc !256
  br label %return

if.end53.i:                                       ; preds = %for.end48.i
  %47 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %47, i32 %.lcssa.i)
  %cmp57.i = icmp slt i32 %47, %.lcssa.i
  br i1 %cmp57.i, label %if.end53.i.return_crit_edge, label %if.end60.i

if.end53.i.return_crit_edge:                      ; preds = %if.end53.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end60.i:                                       ; preds = %if.end53.i
  %clk.i = getelementptr i8, ptr %dev, i32 2644
  %48 = ptrtoint ptr %clk.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %clk.i, align 4
  %call.i = tail call i32 @clk_get_rate(ptr noundef %49) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i6 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i6, label %if.end60.i.return_crit_edge, label %for.cond65.preheader.i

if.end60.i.return_crit_edge:                      ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

for.cond65.preheader.i:                           ; preds = %if.end60.i
  %div.i = udiv i32 1000000000, %call.i
  %div1.i = udiv i32 100, %div.i
  %50 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i8 = getelementptr i8, ptr %51, i32 15872
  %52 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i8) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %53 = and i32 %52, -150994945
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %54 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i14.i = getelementptr i8, ptr %55, i32 15872
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i14.i, i32 %53) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %56 = shl nuw nsw i32 %div1.i, 24
  %57 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i16.i = getelementptr i8, ptr %58, i32 15880
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i16.i, i32 %56) #20, !srcloc !256
  %59 = ptrtoint ptr %type_data to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %type_data, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %60)
  %cmp69181.not.i = icmp eq i8 %60, 0
  br i1 %cmp69181.not.i, label %for.cond65.preheader.i.return_crit_edge, label %for.cond65.preheader.i.for.body71.i_crit_edge

for.cond65.preheader.i.for.body71.i_crit_edge:    ; preds = %for.cond65.preheader.i
  br label %for.body71.i

for.cond65.preheader.i.return_crit_edge:          ; preds = %for.cond65.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

for.body71.i:                                     ; preds = %for.inc102.i.for.body71.i_crit_edge, %for.cond65.preheader.i.for.body71.i_crit_edge
  %tc.1182.i = phi i32 [ %inc103.i, %for.inc102.i.for.body71.i_crit_edge ], [ 0, %for.cond65.preheader.i.for.body71.i_crit_edge ]
  %arrayidx74.i = getelementptr %struct.tc_mqprio_qopt, ptr %type_data, i32 0, i32 4, i32 %tc.1182.i
  %arrayidx79.i = getelementptr %struct.tc_mqprio_qopt, ptr %type_data, i32 0, i32 3, i32 %tc.1182.i
  %61 = ptrtoint ptr %arrayidx79.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %arrayidx79.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %62)
  %cmp86178.not.i = icmp eq i16 %62, 0
  br i1 %cmp86178.not.i, label %for.body71.i.for.inc102.i_crit_edge, label %for.body88.lr.ph.i

for.body71.i.for.inc102.i_crit_edge:              ; preds = %for.body71.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc102.i

for.body88.lr.ph.i:                               ; preds = %for.body71.i
  %63 = ptrtoint ptr %arrayidx74.i to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %arrayidx74.i, align 2
  %conv75.i = zext i16 %64 to i32
  %arrayidx93.i = getelementptr %struct.tc_mqprio_qopt_offload, ptr %type_data, i32 0, i32 4, i32 %tc.1182.i
  %arrayidx94.i = getelementptr %struct.tc_mqprio_qopt_offload, ptr %type_data, i32 0, i32 5, i32 %tc.1182.i
  br label %for.body88.i

for.cond76.i:                                     ; preds = %if.end.i2
  %or.i = or i32 %conv159.i.i, 1048576000
  %shl.i = shl i32 %txq.0179.i, 2
  %add.i3 = add nuw nsw i32 %shl.i, 15904
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %65 = tail call i32 @llvm.bswap.i32(i32 %or.i) #20
  %66 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i4 = getelementptr i8, ptr %67, i32 %add.i3
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i4, i32 %65) #20, !srcloc !256
  %inc100.i = add nuw nsw i32 %txq.0179.i, 1
  %68 = ptrtoint ptr %arrayidx79.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %arrayidx79.i, align 2
  %conv80.i = zext i16 %69 to i32
  %70 = ptrtoint ptr %arrayidx74.i to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %arrayidx74.i, align 2
  %conv84.i = zext i16 %71 to i32
  %add85.i = add nuw nsw i32 %conv84.i, %conv80.i
  %cmp86.i = icmp ult i32 %inc100.i, %add85.i
  br i1 %cmp86.i, label %for.cond76.i.for.body88.i_crit_edge, label %for.cond76.i.for.inc102.i_crit_edge

for.cond76.i.for.inc102.i_crit_edge:              ; preds = %for.cond76.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc102.i

for.cond76.i.for.body88.i_crit_edge:              ; preds = %for.cond76.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body88.i

for.body88.i:                                     ; preds = %for.cond76.i.for.body88.i_crit_edge, %for.body88.lr.ph.i
  %txq.0179.i = phi i32 [ %conv75.i, %for.body88.lr.ph.i ], [ %inc100.i, %for.cond76.i.for.body88.i_crit_edge ]
  %72 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %txq.0179.i, i32 %72)
  %cmp89.not.i = icmp slt i32 %txq.0179.i, %72
  br i1 %cmp89.not.i, label %if.end92.i, label %for.body88.i.return_crit_edge

for.body88.i.return_crit_edge:                    ; preds = %for.body88.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end92.i:                                       ; preds = %for.body88.i
  %73 = ptrtoint ptr %arrayidx93.i to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %arrayidx93.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %74)
  %tobool.not.i1 = icmp eq i64 %74, 0
  br i1 %tobool.not.i1, label %if.end.i2, label %if.end92.i.return_crit_edge

if.end92.i.return_crit_edge:                      ; preds = %if.end92.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end.i2:                                        ; preds = %if.end92.i
  %75 = ptrtoint ptr %arrayidx94.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %arrayidx94.i, align 8
  %mul.i = shl i64 %76, 3
  %77 = tail call i64 asm "umull\09${0:Q}, ${0:R}, ${1:Q}, ${2:Q}\0A\09mov\09${0:Q}, #0", "=&r,r,r,~{cc}"(i64 3777893186295716171, i64 %mul.i) #27, !srcloc !272
  %78 = tail call i64 asm "umlal\09${0:R}, ${0:Q}, ${1:R}, ${2:Q}\0A\09umlal\09${0:R}, ${0:Q}, ${1:Q}, ${2:R}\0A\09mov\09${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${1:R}, ${2:R}", "=&r,r,r,0,~{cc}"(i64 3777893186295716171, i64 %mul.i, i64 %77) #27, !srcloc !273
  %conv14.i.i = trunc i64 %mul.i to i32
  %div1581.i.i = lshr i64 %78, 11
  %conv159.i.i = trunc i64 %div1581.i.i to i32
  %mul160.neg.i.i = mul i32 %conv159.i.i, -10000
  %sub161.i.i = sub i32 0, %conv14.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %mul160.neg.i.i, i32 %sub161.i.i)
  %tobool1.not.i = icmp ne i32 %mul160.neg.i.i, %sub161.i.i
  %79 = add i32 %conv159.i.i, -524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 -524287, i32 %79)
  %80 = icmp ult i32 %79, -524287
  %81 = or i1 %80, %tobool1.not.i
  br i1 %81, label %if.end.i2.return_crit_edge, label %for.cond76.i

if.end.i2.return_crit_edge:                       ; preds = %if.end.i2
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

for.inc102.i:                                     ; preds = %for.cond76.i.for.inc102.i_crit_edge, %for.body71.i.for.inc102.i_crit_edge
  %inc103.i = add nuw nsw i32 %tc.1182.i, 1
  %82 = ptrtoint ptr %type_data to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %type_data, align 8
  %conv68.i = zext i8 %83 to i32
  %cmp69.i = icmp ult i32 %inc103.i, %conv68.i
  br i1 %cmp69.i, label %for.inc102.i.for.body71.i_crit_edge, label %for.inc102.i.return_crit_edge

for.inc102.i.return_crit_edge:                    ; preds = %for.inc102.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

for.inc102.i.for.body71.i_crit_edge:              ; preds = %for.inc102.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body71.i

return:                                           ; preds = %for.inc102.i.return_crit_edge, %if.end.i2.return_crit_edge, %if.end92.i.return_crit_edge, %for.body88.i.return_crit_edge, %for.cond65.preheader.i.return_crit_edge, %if.end60.i.return_crit_edge, %if.end53.i.return_crit_edge, %if.then52.i, %for.body39.i.return_crit_edge, %if.then9.i, %if.end.i.return_crit_edge, %sw.bb.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -95, %entry.return_crit_edge ], [ 0, %if.then52.i ], [ 0, %if.then9.i ], [ 0, %sw.bb.return_crit_edge ], [ -22, %if.end.i.return_crit_edge ], [ -22, %if.end53.i.return_crit_edge ], [ 0, %for.cond65.preheader.i.return_crit_edge ], [ -22, %if.end60.i.return_crit_edge ], [ -22, %for.body88.i.return_crit_edge ], [ -22, %if.end92.i.return_crit_edge ], [ -22, %if.end.i2.return_crit_edge ], [ 0, %for.inc102.i.return_crit_edge ], [ -22, %for.body39.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i64 @mvneta_fix_features(ptr noundef %dev, i64 noundef %features) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tx_csum_limit = getelementptr i8, ptr %dev, i32 2920
  %0 = ptrtoint ptr %tx_csum_limit to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tx_csum_limit, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %2 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mtu, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %1)
  %cmp = icmp ugt i32 %3, %1
  br i1 %cmp, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %and = and i64 %features, -65539
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %dev, ptr noundef nonnull @.str.67, i32 noundef %1) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %features.addr.0 = phi i64 [ %and, %if.then ], [ %features, %land.lhs.true.if.end_crit_edge ], [ %features, %entry.if.end_crit_edge ]
  ret i64 %features.addr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_xdp(ptr noundef %dev, ptr nocapture noundef readonly %xdp) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %xdp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cond = icmp eq i32 %1, 0
  br i1 %cond, label %sw.bb, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

sw.bb:                                            ; preds = %entry
  %prog = getelementptr inbounds %struct.netdev_bpf, ptr %xdp, i32 0, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prog, align 4
  %extack = getelementptr inbounds %struct.netdev_bpf, ptr %xdp, i32 0, i32 1, i32 0, i32 2
  %4 = ptrtoint ptr %extack to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %extack, align 4
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %6 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  %tobool.i = icmp ne ptr %3, null
  br i1 %tobool.i, label %land.lhs.true.i, label %sw.bb.if.end4.i_crit_edge

sw.bb.if.end4.i_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i

land.lhs.true.i:                                  ; preds = %sw.bb
  %mtu.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %8 = ptrtoint ptr %mtu.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mtu.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3584, i32 %9)
  %cmp.i = icmp ugt i32 %9, 3584
  br i1 %cmp.i, label %do.body.i, label %land.lhs.true.i.if.end4.i_crit_edge

land.lhs.true.i.if.end4.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i

do.body.i:                                        ; preds = %land.lhs.true.i
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @mvneta_xdp_setup.__msg) #20
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %do.body.i.return_crit_edge, label %if.then3.i

do.body.i.return_crit_edge:                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %10 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @mvneta_xdp_setup.__msg, ptr %5, align 4
  br label %return

if.end4.i:                                        ; preds = %land.lhs.true.i.if.end4.i_crit_edge, %sw.bb.if.end4.i_crit_edge
  %bm_priv.i = getelementptr i8, ptr %dev, i32 2964
  %11 = ptrtoint ptr %bm_priv.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bm_priv.i, align 4
  %tobool5.not.i = icmp eq ptr %12, null
  br i1 %tobool5.not.i, label %if.end15.i, label %do.body7.i

do.body7.i:                                       ; preds = %if.end4.i
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @mvneta_xdp_setup.__msg.68) #20
  %tobool9.not.i = icmp eq ptr %5, null
  br i1 %tobool9.not.i, label %do.body7.i.return_crit_edge, label %if.then10.i

do.body7.i.return_crit_edge:                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then10.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #22
  %13 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @mvneta_xdp_setup.__msg.68, ptr %5, align 4
  br label %return

if.end15.i:                                       ; preds = %if.end4.i
  %xdp_prog.i = getelementptr i8, ptr %dev, i32 2640
  %14 = ptrtoint ptr %xdp_prog.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %xdp_prog.i, align 8
  %tobool16.i = icmp eq ptr %15, null
  %cmp23.not.i = xor i1 %tobool.i, %tobool16.i
  %brmerge.i = select i1 %tobool.i.not.i, i1 true, i1 %cmp23.not.i
  br i1 %brmerge.i, label %if.end15.i.if.end30.i_crit_edge, label %if.then28.i

if.end15.i.if.end30.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30.i

if.then28.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #22
  %call29.i = tail call i32 @mvneta_stop(ptr noundef %dev) #20
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then28.i, %if.end15.i.if.end30.i_crit_edge
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %xdp_prog.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !274
  %16 = ptrtoint ptr %3 to i32
  tail call void @llvm.prefetch.p0(ptr %xdp_prog.i, i32 1, i32 3, i32 1) #20
  %17 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %16, ptr %xdp_prog.i) #20, !srcloc !275
  %asmresult.i.i = extractvalue { i32, i32 } %17, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !276
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %tobool50.not.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool50.not.i, label %if.end30.i.if.end52.i_crit_edge, label %if.then51.i

if.end30.i.if.end52.i_crit_edge:                  ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52.i

if.then51.i:                                      ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #22
  %18 = inttoptr i32 %asmresult.i.i to ptr
  tail call void @bpf_prog_put(ptr noundef nonnull %18) #20
  br label %if.end52.i

if.end52.i:                                       ; preds = %if.then51.i, %if.end30.i.if.end52.i_crit_edge
  br i1 %brmerge.i, label %if.end52.i.return_crit_edge, label %if.then56.i

if.end52.i.return_crit_edge:                      ; preds = %if.end52.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then56.i:                                      ; preds = %if.end52.i
  call void @__sanitizer_cov_trace_pc() #22
  %call57.i = tail call i32 @mvneta_open(ptr noundef %dev) #20
  br label %return

return:                                           ; preds = %if.then56.i, %if.end52.i.return_crit_edge, %if.then10.i, %do.body7.i.return_crit_edge, %if.then3.i, %do.body.i.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -22, %entry.return_crit_edge ], [ %call57.i, %if.then56.i ], [ -95, %if.then3.i ], [ -95, %do.body.i.return_crit_edge ], [ -95, %if.then10.i ], [ -95, %do.body7.i.return_crit_edge ], [ 0, %if.end52.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_xdp_xmit(ptr noundef %dev, i32 noundef %num_frame, ptr nocapture noundef readonly %frames, i32 noundef %flags) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %stats1 = getelementptr i8, ptr %dev, i32 2312
  %0 = ptrtoint ptr %stats1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stats1, align 8
  %2 = ptrtoint ptr %1 to i32
  %3 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx, align 4
  %add = add i32 %8, %2
  %9 = inttoptr i32 %add to ptr
  %state = getelementptr i8, ptr %dev, i32 2316
  %10 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state, align 4
  %and1.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge, !prof !257

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %flags)
  %tobool10.not = icmp ult i32 %flags, 2
  br i1 %tobool10.not, label %if.end18, label %if.end.cleanup_crit_edge, !prof !257

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end18:                                         ; preds = %if.end
  %txqs = getelementptr i8, ptr %dev, i32 2332
  %12 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %txqs, align 4
  %14 = load i32, ptr @txq_number, align 4
  %rem = srem i32 %6, %14
  %arrayidx19 = getelementptr %struct.mvneta_tx_queue, ptr %13, i32 %rem
  %dev20 = getelementptr i8, ptr %dev, i32 2336
  %15 = ptrtoint ptr %dev20 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev20, align 8
  %17 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx19, align 4
  %conv = zext i8 %18 to i32
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 103
  %19 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %_tx.i, align 128
  %_xmit_lock.i = getelementptr %struct.netdev_queue, ptr %20, i32 %conv, i32 10
  tail call void @_raw_spin_lock(ptr noundef %_xmit_lock.i) #20
  %xmit_lock_owner.i = getelementptr %struct.netdev_queue, ptr %20, i32 %conv, i32 11
  %21 = ptrtoint ptr %xmit_lock_owner.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile i32 %6, ptr %xmit_lock_owner.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_frame)
  %cmp93 = icmp sgt i32 %num_frame, 0
  br i1 %cmp93, label %if.end18.for.body_crit_edge, label %if.end18.for.end_crit_edge

if.end18.for.end_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

if.end18.for.body_crit_edge:                      ; preds = %if.end18
  br label %for.body

for.body:                                         ; preds = %if.end28.for.body_crit_edge, %if.end18.for.body_crit_edge
  %nxmit.096 = phi i32 [ %inc, %if.end28.for.body_crit_edge ], [ 0, %if.end18.for.body_crit_edge ]
  %nxmit_byte.095 = phi i32 [ %add31, %if.end28.for.body_crit_edge ], [ 0, %if.end18.for.body_crit_edge ]
  %arrayidx23 = getelementptr ptr, ptr %frames, i32 %nxmit.096
  %22 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx23, align 4
  %call24 = tail call fastcc i32 @mvneta_xdp_submit_frame(ptr noundef %add.ptr.i, ptr noundef %arrayidx19, ptr noundef %23, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call24)
  %cmp25.not = icmp eq i32 %call24, 2
  br i1 %cmp25.not, label %if.end28, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

if.end28:                                         ; preds = %for.body
  %24 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx23, align 4
  %len = getelementptr inbounds %struct.xdp_frame, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %len to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %len, align 4
  %conv30 = zext i16 %27 to i32
  %add31 = add i32 %nxmit_byte.095, %conv30
  %inc = add nuw nsw i32 %nxmit.096, 1
  %exitcond.not = icmp eq i32 %inc, %num_frame
  br i1 %exitcond.not, label %if.end28.for.end_crit_edge, label %if.end28.for.body_crit_edge

if.end28.for.body_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end28.for.end_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %if.end28.for.end_crit_edge, %for.body.for.end_crit_edge, %if.end18.for.end_crit_edge
  %nxmit_byte.0.lcssa = phi i32 [ 0, %if.end18.for.end_crit_edge ], [ %nxmit_byte.095, %for.body.for.end_crit_edge ], [ %add31, %if.end28.for.end_crit_edge ]
  %nxmit.0.lcssa = phi i32 [ 0, %if.end18.for.end_crit_edge ], [ %nxmit.096, %for.body.for.end_crit_edge ], [ %num_frame, %if.end28.for.end_crit_edge ]
  %and33 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33)
  %tobool34.not = icmp eq i32 %and33, 0
  br i1 %tobool34.not, label %for.end.if.end42_crit_edge, label %if.then41, !prof !257

for.end.if.end42_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end42

if.then41:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @mvneta_txq_pend_desc_add(ptr noundef %add.ptr.i, ptr noundef %arrayidx19, i32 noundef 0)
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %for.end.if.end42_crit_edge
  %28 = ptrtoint ptr %xmit_lock_owner.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile i32 -1, ptr %xmit_lock_owner.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i) #20
  tail call fastcc void @u64_stats_update_begin(ptr noundef %9)
  %conv43 = sext i32 %nxmit_byte.0.lcssa to i64
  %tx_bytes = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %9, i32 0, i32 1, i32 0, i32 3
  %29 = ptrtoint ptr %tx_bytes to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %tx_bytes, align 8
  %add44 = add i64 %30, %conv43
  store i64 %add44, ptr %tx_bytes, align 8
  %conv45 = sext i32 %nxmit.0.lcssa to i64
  %tx_packets = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %9, i32 0, i32 1, i32 0, i32 2
  %31 = ptrtoint ptr %tx_packets to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %tx_packets, align 8
  %add48 = add i64 %32, %conv45
  store i64 %add48, ptr %tx_packets, align 8
  %xdp_xmit = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %9, i32 0, i32 1, i32 0, i32 7
  %33 = ptrtoint ptr %xdp_xmit to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %xdp_xmit, align 8
  %add52 = add i64 %34, %conv45
  store i64 %add52, ptr %xdp_xmit, align 8
  %sub = sub i32 %num_frame, %nxmit.0.lcssa
  %conv53 = sext i32 %sub to i64
  %xdp_xmit_err = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %9, i32 0, i32 1, i32 0, i32 8
  %35 = ptrtoint ptr %xdp_xmit_err to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %xdp_xmit_err, align 8
  %add56 = add i64 %36, %conv53
  store i64 %add56, ptr %xdp_xmit_err, align 8
  %dep_map.i.i = getelementptr inbounds %struct.seqcount, ptr %9, i32 0, i32 1
  %37 = tail call ptr @llvm.returnaddress(i32 0) #20
  %38 = ptrtoint ptr %37 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %38) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %39 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %9, align 4
  %inc.i.i.i = add i32 %40, 1
  store i32 %inc.i.i.i, ptr %9, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end42, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %nxmit.0.lcssa, %if.end42 ], [ -100, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mvneta_setup_rxqs(ptr noundef %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp23 = icmp sgt i32 %0, 0
  br i1 %cmp23, label %for.body.lr.ph, label %entry.cleanup1_crit_edge

entry.cleanup1_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup1

for.body.lr.ph:                                   ; preds = %entry
  %rxqs = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 6
  %rx_ring_size.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 21
  %dev.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %queue.024 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %1 = ptrtoint ptr %rxqs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rxqs, align 8
  %3 = ptrtoint ptr %rx_ring_size.i.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %rx_ring_size.i.i, align 2
  %conv.i.i = zext i16 %4 to i32
  %size.i.i = getelementptr %struct.mvneta_rx_queue, ptr %2, i32 %queue.024, i32 1
  %5 = ptrtoint ptr %size.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv.i.i, ptr %size.i.i, align 4
  %6 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev.i.i, align 8
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 133, i32 1
  %8 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i.i, align 8
  %mul.i.i = shl nuw nsw i32 %conv.i.i, 5
  %descs_phys.i.i = getelementptr %struct.mvneta_rx_queue, ptr %2, i32 %queue.024, i32 9
  %call.i.i.i = tail call ptr @dma_alloc_attrs(ptr noundef %9, i32 noundef %mul.i.i, ptr noundef %descs_phys.i.i, i32 noundef 3264, i32 noundef 0) #20
  %descs.i.i = getelementptr %struct.mvneta_rx_queue, ptr %2, i32 %queue.024, i32 8
  %10 = ptrtoint ptr %descs.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call.i.i.i, ptr %descs.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %11 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev.i.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %12, ptr noundef nonnull @.str.40, ptr noundef nonnull @__func__.mvneta_setup_rxqs, i32 noundef %queue.024) #24
  %13 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp4.i = icmp sgt i32 %13, 0
  br i1 %cmp4.i, label %if.then.for.body.i_crit_edge, label %if.then.cleanup1_crit_edge

if.then.cleanup1_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup1

if.then.for.body.i_crit_edge:                     ; preds = %if.then
  br label %for.body.i

for.body.i:                                       ; preds = %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge, %if.then.for.body.i_crit_edge
  %queue.05.i = phi i32 [ %inc.i, %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge ], [ 0, %if.then.for.body.i_crit_edge ]
  %14 = ptrtoint ptr %rxqs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rxqs, align 8
  %arrayidx.i = getelementptr %struct.mvneta_rx_queue, ptr %15, i32 %queue.05.i
  tail call fastcc void @mvneta_rxq_drop_pkts(ptr noundef %pp, ptr noundef %arrayidx.i) #20
  %descs.i.i10 = getelementptr %struct.mvneta_rx_queue, ptr %15, i32 %queue.05.i, i32 8
  %16 = ptrtoint ptr %descs.i.i10 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %descs.i.i10, align 4
  %tobool.not.i.i11 = icmp eq ptr %17, null
  br i1 %tobool.not.i.i11, label %for.body.i.mvneta_rxq_deinit.exit.i_crit_edge, label %if.then.i.i

for.body.i.mvneta_rxq_deinit.exit.i_crit_edge:    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_deinit.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %18 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev.i.i, align 8
  %parent.i.i12 = getelementptr inbounds %struct.net_device, ptr %19, i32 0, i32 133, i32 1
  %20 = ptrtoint ptr %parent.i.i12 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %parent.i.i12, align 8
  %size.i.i13 = getelementptr %struct.mvneta_rx_queue, ptr %15, i32 %queue.05.i, i32 1
  %22 = ptrtoint ptr %size.i.i13 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %size.i.i13, align 4
  %mul.i.i14 = shl i32 %23, 5
  %descs_phys.i.i15 = getelementptr %struct.mvneta_rx_queue, ptr %15, i32 %queue.05.i, i32 9
  %24 = ptrtoint ptr %descs_phys.i.i15 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %descs_phys.i.i15, align 8
  tail call void @dma_free_attrs(ptr noundef %21, i32 noundef %mul.i.i14, ptr noundef nonnull %17, i32 noundef %25, i32 noundef 0) #20
  br label %mvneta_rxq_deinit.exit.i

mvneta_rxq_deinit.exit.i:                         ; preds = %if.then.i.i, %for.body.i.mvneta_rxq_deinit.exit.i_crit_edge
  %26 = call ptr @memset(ptr %descs.i.i10, i32 0, i32 24)
  %inc.i = add nuw nsw i32 %queue.05.i, 1
  %27 = load i32, ptr @rxq_number, align 4
  %cmp.i = icmp slt i32 %inc.i, %27
  br i1 %cmp.i, label %mvneta_rxq_deinit.exit.i.for.body.i_crit_edge, label %mvneta_rxq_deinit.exit.i.cleanup1_crit_edge

mvneta_rxq_deinit.exit.i.cleanup1_crit_edge:      ; preds = %mvneta_rxq_deinit.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup1

mvneta_rxq_deinit.exit.i.for.body.i_crit_edge:    ; preds = %mvneta_rxq_deinit.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.inc:                                          ; preds = %for.body
  %arrayidx = getelementptr %struct.mvneta_rx_queue, ptr %2, i32 %queue.024
  %28 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %size.i.i, align 4
  %sub.i.i = add i32 %29, -1
  %last_desc.i.i = getelementptr %struct.mvneta_rx_queue, ptr %2, i32 %queue.024, i32 10
  %30 = ptrtoint ptr %last_desc.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %sub.i.i, ptr %last_desc.i.i, align 4
  tail call fastcc void @mvneta_rxq_hw_init(ptr noundef %pp, ptr noundef %arrayidx) #20
  %inc = add nuw nsw i32 %queue.024, 1
  %31 = load i32, ptr @rxq_number, align 4
  %cmp = icmp slt i32 %inc, %31
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup1_crit_edge

for.inc.cleanup1_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup1

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

cleanup1:                                         ; preds = %for.inc.cleanup1_crit_edge, %mvneta_rxq_deinit.exit.i.cleanup1_crit_edge, %if.then.cleanup1_crit_edge, %entry.cleanup1_crit_edge
  %retval.2 = phi i32 [ -12, %if.then.cleanup1_crit_edge ], [ 0, %entry.cleanup1_crit_edge ], [ -12, %mvneta_rxq_deinit.exit.i.cleanup1_crit_edge ], [ 0, %for.inc.cleanup1_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mvneta_setup_txqs(ptr nocapture noundef readonly %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp23 = icmp sgt i32 %0, 0
  br i1 %cmp23, label %for.body.lr.ph, label %entry.cleanup1_crit_edge

entry.cleanup1_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup1

for.body.lr.ph:                                   ; preds = %entry
  %txqs = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 7
  %tx_ring_size.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 20
  %dev.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %neta_armada3700.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 38
  %rxq_def.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 11
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %queue.024 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %1 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %txqs, align 4
  %arrayidx = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024
  %3 = ptrtoint ptr %tx_ring_size.i.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tx_ring_size.i.i, align 4
  %conv.i.i = zext i16 %4 to i32
  %size.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 1
  %5 = ptrtoint ptr %size.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv.i.i, ptr %size.i.i, align 4
  %sub.i.i = add nsw i32 %conv.i.i, -217
  %tx_stop_threshold.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 4
  %6 = ptrtoint ptr %tx_stop_threshold.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sub.i.i, ptr %tx_stop_threshold.i.i, align 4
  %div.i.i = sdiv i32 %sub.i.i, 2
  %tx_wake_threshold.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 5
  %7 = ptrtoint ptr %tx_wake_threshold.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %div.i.i, ptr %tx_wake_threshold.i.i, align 4
  %8 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev.i.i, align 8
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 133, i32 1
  %10 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %parent.i.i, align 8
  %mul.i.i = shl nuw nsw i32 %conv.i.i, 5
  %descs_phys.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 11
  %call.i.i.i = tail call ptr @dma_alloc_attrs(ptr noundef %11, i32 noundef %mul.i.i, ptr noundef %descs_phys.i.i, i32 noundef 3264, i32 noundef 0) #20
  %descs.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 10
  %12 = ptrtoint ptr %descs.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call.i.i.i, ptr %descs.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i, label %for.body.cleanup_crit_edge, label %if.end.i.i

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i.i:                                       ; preds = %for.body
  %13 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %size.i.i, align 4
  %sub7.i.i = add i32 %14, -1
  %last_desc.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 12
  %15 = ptrtoint ptr %last_desc.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %sub7.i.i, ptr %last_desc.i.i, align 4
  %16 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %14, i32 8) #20
  %17 = extractvalue { i32, i1 } %16, 1
  br i1 %17, label %kmalloc_array.exit.thread.i.i, label %if.end7.i.i.i, !prof !261

kmalloc_array.exit.thread.i.i:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %buf172.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 6
  %18 = ptrtoint ptr %buf172.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %buf172.i.i, align 4
  br label %cleanup

if.end7.i.i.i:                                    ; preds = %if.end.i.i
  %19 = extractvalue { i32, i1 } %16, 0
  %call8.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %19, i32 noundef 3264) #25
  %buf.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 6
  %20 = ptrtoint ptr %buf.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call8.i.i.i, ptr %buf.i.i, align 4
  %tobool11.not.i.i = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool11.not.i.i, label %if.end7.i.i.i.cleanup_crit_edge, label %if.end13.i.i

if.end7.i.i.i.cleanup_crit_edge:                  ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end13.i.i:                                     ; preds = %if.end7.i.i.i
  %21 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev.i.i, align 8
  %parent16.i.i = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 133, i32 1
  %23 = ptrtoint ptr %parent16.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %parent16.i.i, align 8
  %25 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %size.i.i, align 4
  %mul18.i.i = shl i32 %26, 8
  %tso_hdrs_phys.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 15
  %call.i66.i.i = tail call ptr @dma_alloc_attrs(ptr noundef %24, i32 noundef %mul18.i.i, ptr noundef %tso_hdrs_phys.i.i, i32 noundef 3264, i32 noundef 0) #20
  %tso_hdrs.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 14
  %27 = ptrtoint ptr %tso_hdrs.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %call.i66.i.i, ptr %tso_hdrs.i.i, align 4
  %tobool21.not.i.i = icmp eq ptr %call.i66.i.i, null
  br i1 %tobool21.not.i.i, label %if.end13.i.i.cleanup_crit_edge, label %if.end23.i.i

if.end13.i.i.cleanup_crit_edge:                   ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end23.i.i:                                     ; preds = %if.end13.i.i
  %28 = ptrtoint ptr %neta_armada3700.i.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %neta_armada3700.i.i, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool24.not.i.i = icmp eq i8 %29, 0
  br i1 %tobool24.not.i.i, label %if.else.i.i, label %if.end23.i.i.if.end34.i.i_crit_edge

if.end23.i.i.if.end34.i.i_crit_edge:              ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end34.i.i

if.else.i.i:                                      ; preds = %if.end23.i.i
  %30 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp.i.i = icmp sgt i32 %30, 1
  br i1 %cmp.i.i, label %if.then27.i.i, label %if.else30.i.i

if.then27.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %31 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx, align 4
  %conv28.i.i = zext i8 %32 to i32
  br label %if.end34.i.i.sink.split

if.else30.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %33 = ptrtoint ptr %rxq_def.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rxq_def.i.i, align 4
  br label %if.end34.i.i.sink.split

if.end34.i.i.sink.split:                          ; preds = %if.else30.i.i, %if.then27.i.i
  %.sink = phi i32 [ %34, %if.else30.i.i ], [ %conv28.i.i, %if.then27.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %35 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i167.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_present_mask, i32 noundef %35) #20
  %rem32.i.i = urem i32 %.sink, %call4.i.i167.i.i
  br label %if.end34.i.i

if.end34.i.i:                                     ; preds = %if.end34.i.i.sink.split, %if.end23.i.i.if.end34.i.i_crit_edge
  %cpu.0.i.i = phi i32 [ 0, %if.end23.i.i.if.end34.i.i_crit_edge ], [ %rem32.i.i, %if.end34.i.i.sink.split ]
  %affinity_mask.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.024, i32 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %36 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %36, i32 %cpu.0.i.i)
  %cmp.not.i.i.i.i.i = icmp ugt i32 %36, %cpu.0.i.i
  br i1 %cmp.not.i.i.i.i.i, label %if.end34.i.i.for.inc_crit_edge, label %land.rhs.i.i.i.i.i

if.end34.i.i.for.inc_crit_edge:                   ; preds = %if.end34.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

land.rhs.i.i.i.i.i:                               ; preds = %if.end34.i.i
  %.b37.i.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i.i, label %land.rhs.i.i.i.i.i.for.inc_crit_edge, label %if.then.i.i.i.i.i, !prof !257

land.rhs.i.i.i.i.i.for.inc_crit_edge:             ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then.i.i.i.i.i:                                ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %for.inc

cleanup:                                          ; preds = %if.end13.i.i.cleanup_crit_edge, %if.end7.i.i.i.cleanup_crit_edge, %kmalloc_array.exit.thread.i.i, %for.body.cleanup_crit_edge
  %37 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dev.i.i, align 8
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %38, ptr noundef nonnull @.str.42, ptr noundef nonnull @__func__.mvneta_setup_txqs, i32 noundef %queue.024) #24
  tail call fastcc void @mvneta_cleanup_txqs(ptr noundef %pp)
  br label %cleanup1

for.inc:                                          ; preds = %if.then.i.i.i.i.i, %land.rhs.i.i.i.i.i.for.inc_crit_edge, %if.end34.i.i.for.inc_crit_edge
  tail call void @_set_bit(i32 noundef %cpu.0.i.i, ptr noundef %affinity_mask.i.i) #20
  %39 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev.i.i, align 8
  %41 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx, align 4
  %conv38.i.i = zext i8 %42 to i16
  %call39.i.i = tail call i32 @netif_set_xps_queue(ptr noundef %40, ptr noundef %affinity_mask.i.i, i16 noundef zeroext %conv38.i.i) #20
  tail call fastcc void @mvneta_txq_hw_init(ptr noundef %pp, ptr noundef %arrayidx) #20
  %inc = add nuw nsw i32 %queue.024, 1
  %43 = load i32, ptr @txq_number, align 4
  %cmp = icmp slt i32 %inc, %43
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup1_crit_edge

for.inc.cleanup1_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup1

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

cleanup1:                                         ; preds = %for.inc.cleanup1_crit_edge, %cleanup, %entry.cleanup1_crit_edge
  %retval.2 = phi i32 [ -12, %cleanup ], [ 0, %entry.cleanup1_crit_edge ], [ 0, %for.inc.cleanup1_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_isr(i32 noundef %irq, ptr noundef %dev_id) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %dev_id, i32 0, i32 5
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 9636
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #20, !srcloc !256
  %napi = getelementptr inbounds %struct.mvneta_port, ptr %dev_id, i32 0, i32 15
  %call.i = tail call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #20
  br i1 %call.i, label %if.then.i, label %entry.napi_schedule.exit_crit_edge

entry.napi_schedule.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_schedule.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__napi_schedule(ptr noundef %napi) #20
  br label %napi_schedule.exit

napi_schedule.exit:                               ; preds = %if.then.i, %entry.napi_schedule.exit_crit_edge
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_percpu_isr(i32 noundef %irq, ptr noundef %dev_id) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_id, align 8
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 8
  %irq1 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 64
  %4 = ptrtoint ptr %irq1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %irq1, align 4
  tail call void @disable_percpu_irq(i32 noundef %5) #20
  %napi = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %dev_id, i32 0, i32 1
  %call.i = tail call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #20
  br i1 %call.i, label %if.then.i, label %entry.napi_schedule.exit_crit_edge

entry.napi_schedule.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_schedule.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__napi_schedule(ptr noundef %napi) #20
  br label %napi_schedule.exit

napi_schedule.exit:                               ; preds = %if.then.i, %entry.napi_schedule.exit_crit_edge
  ret i32 1
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_start_dev(ptr noundef %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phy_interface = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 22
  %0 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %phy_interface, align 8
  %call = tail call fastcc i32 @mvneta_config_interface(ptr noundef %pp, i32 noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !257

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3646, i32 noundef 9, ptr noundef null) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %pkt_size = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 4
  %2 = ptrtoint ptr %pkt_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pkt_size, align 8
  %base.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %4 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 11264
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %7 = and i32 %6, 58785791
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #20
  %sub.i = add i32 %3, -2
  %div.i = sdiv i32 %sub.i, 2
  %shl.i = shl i32 %div.i, 2
  %or.i = or i32 %8, %shl.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %9 = tail call i32 @llvm.bswap.i32(i32 %or.i) #20
  %10 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i5.i = getelementptr i8, ptr %11, i32 11264
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i5.i, i32 %9) #20, !srcloc !256
  %12 = ptrtoint ptr %pkt_size to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pkt_size, align 8
  %mul.i = shl i32 %13, 3
  %14 = tail call i32 @llvm.umin.i32(i32 %mul.i, i32 262143) #20
  %15 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i52 = getelementptr i8, ptr %16, i32 15884
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i52) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %18 = and i32 %17, 64767
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #20
  %or.i53 = or i32 %19, %14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %20 = tail call i32 @llvm.bswap.i32(i32 %or.i53) #20
  %21 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i45.i = getelementptr i8, ptr %22, i32 15884
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i45.i, i32 %20) #20, !srcloc !256
  %23 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i47.i = getelementptr i8, ptr %24, i32 15892
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i47.i) #20, !srcloc !258
  %26 = tail call i32 @llvm.bswap.i32(i32 %25) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %14)
  %cmp3.i = icmp ult i32 %26, %14
  br i1 %cmp3.i, label %if.then4.i, label %if.end.if.end7.i_crit_edge

if.end.if.end7.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

if.then4.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %27 = tail call i32 @llvm.bswap.i32(i32 %14) #20
  %28 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i49.i = getelementptr i8, ptr %29, i32 15892
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i49.i, i32 %27) #20, !srcloc !256
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then4.i, %if.end.if.end7.i_crit_edge
  %30 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp854.i = icmp sgt i32 %30, 0
  br i1 %cmp854.i, label %if.end7.i.for.body.i_crit_edge, label %if.end7.i.mvneta_txq_max_tx_size_set.exit_crit_edge

if.end7.i.mvneta_txq_max_tx_size_set.exit_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_txq_max_tx_size_set.exit

if.end7.i.for.body.i_crit_edge:                   ; preds = %if.end7.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end7.i.for.body.i_crit_edge
  %queue.055.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end7.i.for.body.i_crit_edge ]
  %shl.i54 = shl i32 %queue.055.i, 2
  %add.i = add i32 %shl.i54, 15936
  %31 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i51.i = getelementptr i8, ptr %32, i32 %add.i
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i51.i) #20, !srcloc !258
  %34 = tail call i32 @llvm.bswap.i32(i32 %33) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and10.i = and i32 %34, 2147483647
  call void @__sanitizer_cov_trace_cmp4(i32 %and10.i, i32 %14)
  %cmp11.i = icmp ult i32 %and10.i, %14
  br i1 %cmp11.i, label %if.then12.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc.i

if.then12.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %and13.i = and i32 %34, -2147483648
  %or14.i = or i32 %and13.i, %14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %35 = tail call i32 @llvm.bswap.i32(i32 %or14.i) #20
  %36 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i53.i = getelementptr i8, ptr %37, i32 %add.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i53.i, i32 %35) #20, !srcloc !256
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then12.i, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %queue.055.i, 1
  %38 = load i32, ptr @txq_number, align 4
  %cmp8.i = icmp slt i32 %inc.i, %38
  br i1 %cmp8.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.mvneta_txq_max_tx_size_set.exit_crit_edge

for.inc.i.mvneta_txq_max_tx_size_set.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_txq_max_tx_size_set.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

mvneta_txq_max_tx_size_set.exit:                  ; preds = %for.inc.i.mvneta_txq_max_tx_size_set.exit_crit_edge, %if.end7.i.mvneta_txq_max_tx_size_set.exit_crit_edge
  %39 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i56 = getelementptr i8, ptr %40, i32 11264
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i56) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %42 = or i32 %41, 16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %43 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i4.i = getelementptr i8, ptr %44, i32 11264
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i4.i, i32 %42) #20, !srcloc !256
  %neta_armada3700 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 38
  %45 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool21.not = icmp eq i8 %46, 0
  br i1 %tobool21.not, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %mvneta_txq_max_tx_size_set.exit
  %call2359 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %47 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call2359, i32 %47)
  %cmp60 = icmp ult i32 %call2359, %47
  br i1 %cmp60, label %for.body.lr.ph, label %for.cond.preheader.if.end30_crit_edge

for.cond.preheader.if.end30_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ports = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %call2361 = phi i32 [ %call2359, %for.body.lr.ph ], [ %call23, %for.body.for.body_crit_edge ]
  %48 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %ports, align 4
  %50 = ptrtoint ptr %49 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call2361
  %51 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx, align 4
  %add = add i32 %52, %50
  %53 = inttoptr i32 %add to ptr
  %napi = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %53, i32 0, i32 1
  tail call void @napi_enable(ptr noundef %napi) #20
  %call23 = tail call i32 @cpumask_next(i32 noundef %call2361, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %54 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call23, %54
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.if.end30_crit_edge

for.body.if.end30_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.else:                                          ; preds = %mvneta_txq_max_tx_size_set.exit
  call void @__sanitizer_cov_trace_pc() #22
  %napi29 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 15
  tail call void @napi_enable(ptr noundef %napi29) #20
  br label %if.end30

if.end30:                                         ; preds = %if.else, %for.body.if.end30_crit_edge, %for.cond.preheader.if.end30_crit_edge
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_unmask_interrupt, ptr noundef %pp, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %55 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %56, i32 9652
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 50331648) #20, !srcloc !256
  %phylink = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 25
  %57 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %phylink, align 4
  tail call void @phylink_start(ptr noundef %58) #20
  %59 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %phylink, align 4
  %call32 = tail call i32 @phylink_speed_up(ptr noundef %60) #20
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %61 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %dev, align 8
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %62, i32 0, i32 104
  %63 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %cmp4.not.i = icmp eq i32 %64, 0
  br i1 %cmp4.not.i, label %if.end30.netif_tx_start_all_queues.exit_crit_edge, label %for.body.lr.ph.i

if.end30.netif_tx_start_all_queues.exit_crit_edge: ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #22
  br label %netif_tx_start_all_queues.exit

for.body.lr.ph.i:                                 ; preds = %if.end30
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %62, i32 0, i32 103
  br label %for.body.i58

for.body.i58:                                     ; preds = %for.body.i58.for.body.i58_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i57, %for.body.i58.for.body.i58_crit_edge ]
  %65 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %66, i32 %i.05.i, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #20
  %inc.i57 = add nuw i32 %i.05.i, 1
  %67 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i57, %68
  br i1 %cmp.i, label %for.body.i58.for.body.i58_crit_edge, label %for.body.i58.netif_tx_start_all_queues.exit_crit_edge

for.body.i58.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.body.i58
  call void @__sanitizer_cov_trace_pc() #22
  br label %netif_tx_start_all_queues.exit

for.body.i58.for.body.i58_crit_edge:              ; preds = %for.body.i58
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i58

netif_tx_start_all_queues.exit:                   ; preds = %for.body.i58.netif_tx_start_all_queues.exit_crit_edge, %if.end30.netif_tx_start_all_queues.exit_crit_edge
  %state = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 3
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu_irq(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_cleanup_txqs(ptr nocapture noundef readonly %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp4 = icmp sgt i32 %0, 0
  br i1 %cmp4, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %txqs = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 7
  %dev.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %base.i.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %mvneta_txq_deinit.exit.for.body_crit_edge, %for.body.lr.ph
  %queue.05 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %mvneta_txq_deinit.exit.for.body_crit_edge ]
  %1 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %txqs, align 4
  %arrayidx = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.05
  %3 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev.i.i, align 8
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 4
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 103
  %7 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %_tx.i.i.i, align 128
  %buf.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.05, i32 6
  %9 = ptrtoint ptr %buf.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %buf.i.i, align 4
  tail call void @kfree(ptr noundef %10) #20
  %tso_hdrs.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.05, i32 14
  %11 = ptrtoint ptr %tso_hdrs.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tso_hdrs.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i, label %for.body.if.end.i.i_crit_edge, label %if.then.i.i

for.body.if.end.i.i_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %13 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev.i.i, align 8
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 133, i32 1
  %15 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %parent.i.i, align 8
  %size.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.05, i32 1
  %17 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %size.i.i, align 4
  %mul.i.i = shl i32 %18, 8
  %tso_hdrs_phys.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.05, i32 15
  %19 = ptrtoint ptr %tso_hdrs_phys.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %tso_hdrs_phys.i.i, align 4
  tail call void @dma_free_attrs(ptr noundef %16, i32 noundef %mul.i.i, ptr noundef nonnull %12, i32 noundef %20, i32 noundef 0) #20
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.if.end.i.i_crit_edge
  %descs.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.05, i32 10
  %21 = ptrtoint ptr %descs.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %descs.i.i, align 4
  %tobool4.not.i.i = icmp eq ptr %22, null
  br i1 %tobool4.not.i.i, label %if.end.i.i.mvneta_txq_deinit.exit_crit_edge, label %if.then5.i.i

if.end.i.i.mvneta_txq_deinit.exit_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_txq_deinit.exit

if.then5.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %23 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dev.i.i, align 8
  %parent8.i.i = getelementptr inbounds %struct.net_device, ptr %24, i32 0, i32 133, i32 1
  %25 = ptrtoint ptr %parent8.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %parent8.i.i, align 8
  %size9.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.05, i32 1
  %27 = ptrtoint ptr %size9.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %size9.i.i, align 4
  %mul10.i.i = shl i32 %28, 5
  %descs_phys.i.i = getelementptr %struct.mvneta_tx_queue, ptr %2, i32 %queue.05, i32 11
  %29 = ptrtoint ptr %descs_phys.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %descs_phys.i.i, align 4
  tail call void @dma_free_attrs(ptr noundef %26, i32 noundef %mul10.i.i, ptr noundef nonnull %22, i32 noundef %30, i32 noundef 0) #20
  br label %mvneta_txq_deinit.exit

mvneta_txq_deinit.exit:                           ; preds = %if.then5.i.i, %if.end.i.i.mvneta_txq_deinit.exit_crit_edge
  %conv.i.i = zext i8 %6 to i32
  %state.i.i.i = getelementptr %struct.netdev_queue, ptr %8, i32 %conv.i.i, i32 13
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %state.i.i.i) #20
  %dql.i.i.i = getelementptr %struct.netdev_queue, ptr %8, i32 %conv.i.i, i32 15
  tail call void @dql_reset(ptr noundef %dql.i.i.i) #20
  %31 = call ptr @memset(ptr %descs.i.i, i32 0, i32 16)
  %32 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx, align 4
  %conv.i3.i = zext i8 %33 to i32
  %shl.i.i = shl nuw nsw i32 %conv.i3.i, 4
  %add.i.i = add nuw nsw i32 %shl.i.i, 9988
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %34 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %35, i32 %add.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i.i, i32 0) #20, !srcloc !256
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx, align 4
  %conv2.i.i = zext i8 %37 to i32
  %shl3.i.i = shl nuw nsw i32 %conv2.i.i, 4
  %add4.i.i = add nuw nsw i32 %shl3.i.i, 9984
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %38 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i20.i.i = getelementptr i8, ptr %39, i32 %add4.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i20.i.i, i32 0) #20, !srcloc !256
  %40 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %arrayidx, align 4
  %conv6.i.i = zext i8 %41 to i32
  %shl7.i.i = shl nuw nsw i32 %conv6.i.i, 2
  %add8.i.i = or i32 %shl7.i.i, 15360
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %42 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i22.i.i = getelementptr i8, ptr %43, i32 %add8.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i22.i.i, i32 0) #20, !srcloc !256
  %44 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx, align 4
  %conv10.i.i = zext i8 %45 to i32
  %shl11.i.i = shl nuw nsw i32 %conv10.i.i, 2
  %add12.i.i = add nuw nsw i32 %shl11.i.i, 15392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %46 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i24.i.i = getelementptr i8, ptr %47, i32 %add12.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i24.i.i, i32 0) #20, !srcloc !256
  %inc = add nuw nsw i32 %queue.05, 1
  %48 = load i32, ptr @txq_number, align 4
  %cmp = icmp slt i32 %inc, %48
  br i1 %cmp, label %mvneta_txq_deinit.exit.for.body_crit_edge, label %mvneta_txq_deinit.exit.for.end_crit_edge

mvneta_txq_deinit.exit.for.end_crit_edge:         ; preds = %mvneta_txq_deinit.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

mvneta_txq_deinit.exit.for.body_crit_edge:        ; preds = %mvneta_txq_deinit.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %mvneta_txq_deinit.exit.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_rxq_hw_init(ptr noundef %pp, ptr noundef %rxq) unnamed_addr #3 align 64 {
entry:
  %pp_params.i.i = alloca %struct.page_pool_params, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %rxq, align 128
  %conv = zext i8 %1 to i32
  %shl = shl nuw nsw i32 %conv, 2
  %add = add nuw nsw i32 %shl, 5248
  %descs_phys = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 9
  %2 = ptrtoint ptr %descs_phys to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %descs_phys, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %4 = tail call i32 @llvm.bswap.i32(i32 %3) #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %5 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %6, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %4) #20, !srcloc !256
  %7 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %rxq, align 128
  %conv2 = zext i8 %8 to i32
  %shl3 = shl nuw nsw i32 %conv2, 2
  %add4 = add nuw nsw i32 %shl3, 5280
  %size = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 1
  %9 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %size, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %11 = tail call i32 @llvm.bswap.i32(i32 %10) #20
  %12 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %base.i, align 4
  %add.ptr.i41 = getelementptr i8, ptr %13, i32 %add4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i41, i32 %11) #20, !srcloc !256
  %pkts_coal = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 2
  %14 = ptrtoint ptr %pkts_coal to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pkts_coal, align 8
  %16 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %rxq, align 128
  %conv.i = zext i8 %17 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 2
  %add.i = add nuw nsw i32 %shl.i, 5312
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %18 = tail call i32 @llvm.bswap.i32(i32 %15) #20
  %19 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %20, i32 %add.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %18) #20, !srcloc !256
  %time_coal = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 3
  %21 = ptrtoint ptr %time_coal to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %time_coal, align 4
  %clk.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 17
  %23 = ptrtoint ptr %clk.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %clk.i, align 4
  %call.i = tail call i32 @clk_get_rate(ptr noundef %24) #20
  %div.i = udiv i32 %call.i, 1000000
  %mul.i = mul i32 %div.i, %22
  %25 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %rxq, align 128
  %conv.i42 = zext i8 %26 to i32
  %shl.i43 = shl nuw nsw i32 %conv.i42, 2
  %add.i44 = add nuw nsw i32 %shl.i43, 9600
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %27 = tail call i32 @llvm.bswap.i32(i32 %mul.i) #20
  %28 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i46 = getelementptr i8, ptr %29, i32 %add.i44
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i46, i32 %27) #20, !srcloc !256
  %bm_priv = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 29
  %30 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bm_priv, align 4
  %tobool.not = icmp eq ptr %31, null
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %32 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %rxq, align 128
  %conv.i47 = zext i8 %33 to i32
  %shl.i48 = shl nuw nsw i32 %conv.i47, 2
  %add.i49 = or i32 %shl.i48, 5120
  %34 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i51 = getelementptr i8, ptr %35, i32 %add.i49
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i51) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %37 = and i32 %36, -983041
  %38 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %rxq, align 128
  %conv3.i = zext i8 %39 to i32
  %shl4.i = shl nuw nsw i32 %conv3.i, 2
  %add5.i = or i32 %shl4.i, 5120
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %40 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %base.i, align 4
  %add.ptr.i11.i = getelementptr i8, ptr %41, i32 %add5.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11.i, i32 %37) #20, !srcloc !256
  %42 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %rxq, align 128
  %conv.i52 = zext i8 %43 to i32
  %shl.i53 = shl nuw nsw i32 %conv.i52, 2
  %add.i54 = add nuw nsw i32 %shl.i53, 5280
  %44 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i56 = getelementptr i8, ptr %45, i32 %add.i54
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i56) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %47 = and i32 %46, -63744
  %48 = or i32 %47, 14
  %49 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %rxq, align 128
  %conv3.i57 = zext i8 %50 to i32
  %shl4.i58 = shl nuw nsw i32 %conv3.i57, 2
  %add5.i59 = add nuw nsw i32 %shl4.i58, 5280
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %51 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %base.i, align 4
  %add.ptr.i2.i = getelementptr i8, ptr %52, i32 %add5.i59
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i2.i, i32 %48) #20, !srcloc !256
  %53 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %rxq, align 128
  %conv.i60 = zext i8 %54 to i32
  %shl.i61 = shl nuw nsw i32 %conv.i60, 2
  %add.i62 = or i32 %shl.i61, 5120
  %55 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i64 = getelementptr i8, ptr %56, i32 %add.i62
  %57 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i64) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %58 = and i32 %57, -16777217
  %59 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %rxq, align 128
  %conv2.i = zext i8 %60 to i32
  %shl3.i = shl nuw nsw i32 %conv2.i, 2
  %add4.i = or i32 %shl3.i, 5120
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %61 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %base.i, align 4
  %add.ptr.i9.i = getelementptr i8, ptr %62, i32 %add4.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i9.i, i32 %58) #20, !srcloc !256
  %63 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %size, align 4
  %xdp_prog1.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 16
  %65 = ptrtoint ptr %xdp_prog1.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile ptr, ptr %xdp_prog1.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %pp_params.i.i) #20
  %67 = ptrtoint ptr %pp_params.i.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 3, ptr %pp_params.i.i, align 4
  %order.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 1
  %68 = ptrtoint ptr %order.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 0, ptr %order.i.i, align 4
  %pool_size.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 2
  %69 = ptrtoint ptr %pool_size.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %64, ptr %pool_size.i.i, align 4
  %nid.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 3
  %70 = ptrtoint ptr %nid.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 -1, ptr %nid.i.i, align 4
  %dev.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 4
  %dev2.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %71 = ptrtoint ptr %dev2.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %dev2.i.i, align 8
  %parent.i.i = getelementptr inbounds %struct.net_device, ptr %72, i32 0, i32 133, i32 1
  %73 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %parent.i.i, align 8
  %75 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %74, ptr %dev.i.i, align 4
  %dma_dir.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 5
  %tobool.not.i.i = icmp eq ptr %66, null
  %cond.i.i = select i1 %tobool.not.i.i, i32 2, i32 0
  %76 = ptrtoint ptr %dma_dir.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %cond.i.i, ptr %dma_dir.i.i, align 4
  %max_len.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 6
  %77 = ptrtoint ptr %max_len.i.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 3584, ptr %max_len.i.i, align 4
  %offset.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 7
  %rx_offset_correction.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 39
  %78 = ptrtoint ptr %rx_offset_correction.i.i to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %rx_offset_correction.i.i, align 2
  %conv.i.i = zext i16 %79 to i32
  %80 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %conv.i.i, ptr %offset.i.i, align 4
  %init_callback.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 8
  %81 = ptrtoint ptr %init_callback.i.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr null, ptr %init_callback.i.i, align 4
  %init_arg.i.i = getelementptr inbounds %struct.page_pool_params, ptr %pp_params.i.i, i32 0, i32 9
  %82 = ptrtoint ptr %init_arg.i.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr null, ptr %init_arg.i.i, align 4
  %call.i.i = call ptr @page_pool_create(ptr noundef nonnull %pp_params.i.i) #20
  %page_pool.i.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  %83 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %call.i.i, ptr %page_pool.i.i, align 16
  %cmp.i.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %84 = ptrtoint ptr %call.i.i to i32
  br label %mvneta_create_page_pool.exit.i

if.end.i.i:                                       ; preds = %if.then
  %xdp_rxq.i.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 6
  %85 = ptrtoint ptr %dev2.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %dev2.i.i, align 8
  %87 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %rxq, align 128
  %conv10.i.i = zext i8 %88 to i32
  %call11.i.i = call i32 @xdp_rxq_info_reg(ptr noundef %xdp_rxq.i.i, ptr noundef %86, i32 noundef %conv10.i.i, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i.i)
  %cmp.i.i = icmp slt i32 %call11.i.i, 0
  br i1 %cmp.i.i, label %if.end.i.i.err_free_pp.i.i_crit_edge, label %if.end14.i.i

if.end.i.i.err_free_pp.i.i_crit_edge:             ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_free_pp.i.i

if.end14.i.i:                                     ; preds = %if.end.i.i
  %89 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %page_pool.i.i, align 16
  %call17.i.i = call i32 @xdp_rxq_info_reg_mem_model(ptr noundef %xdp_rxq.i.i, i32 noundef 2, ptr noundef %90) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17.i.i)
  %tobool18.not.i.i = icmp eq i32 %call17.i.i, 0
  br i1 %tobool18.not.i.i, label %mvneta_create_page_pool.exit.thread.i, label %err_unregister_rxq.i.i

mvneta_create_page_pool.exit.thread.i:            ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %pp_params.i.i) #20
  br label %for.cond.preheader.i

err_unregister_rxq.i.i:                           ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @xdp_rxq_info_unreg(ptr noundef %xdp_rxq.i.i) #20
  br label %err_free_pp.i.i

err_free_pp.i.i:                                  ; preds = %err_unregister_rxq.i.i, %if.end.i.i.err_free_pp.i.i_crit_edge
  %err.0.i.i = phi i32 [ %call11.i.i, %if.end.i.i.err_free_pp.i.i_crit_edge ], [ %call17.i.i, %err_unregister_rxq.i.i ]
  %91 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %page_pool.i.i, align 16
  call void @page_pool_destroy(ptr noundef %92) #20
  br label %mvneta_create_page_pool.exit.i

mvneta_create_page_pool.exit.i:                   ; preds = %err_free_pp.i.i, %if.then.i.i
  %retval.0.ph.i.i = phi i32 [ %err.0.i.i, %err_free_pp.i.i ], [ %84, %if.then.i.i ]
  %93 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr null, ptr %page_pool.i.i, align 16
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %pp_params.i.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.ph.i.i)
  %cmp.i = icmp slt i32 %retval.0.ph.i.i, 0
  br i1 %cmp.i, label %mvneta_create_page_pool.exit.i.if.end_crit_edge, label %mvneta_create_page_pool.exit.i.for.cond.preheader.i_crit_edge

mvneta_create_page_pool.exit.i.for.cond.preheader.i_crit_edge: ; preds = %mvneta_create_page_pool.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.preheader.i

mvneta_create_page_pool.exit.i.if.end_crit_edge:  ; preds = %mvneta_create_page_pool.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

for.cond.preheader.i:                             ; preds = %mvneta_create_page_pool.exit.i.for.cond.preheader.i_crit_edge, %mvneta_create_page_pool.exit.thread.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %cmp115.i = icmp sgt i32 %64, 0
  br i1 %cmp115.i, label %for.body.lr.ph.i, label %for.cond.preheader.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge

for.cond.preheader.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_non_occup_desc_add.exit.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %descs.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 8
  %buf_virt_addr.i.i.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 7
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.016.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %94 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %descs.i, align 4
  %add.ptr.i65 = getelementptr %struct.mvneta_rx_desc, ptr %95, i32 %i.016.i
  %96 = call ptr @memset(ptr %add.ptr.i65, i32 0, i32 32)
  %97 = load ptr, ptr %descs.i, align 4
  %98 = ptrtoint ptr %page_pool.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %page_pool.i.i, align 16
  %call.i2.i = call ptr @page_pool_alloc_pages(ptr noundef %99, i32 noundef 11456) #20
  %tobool.not.i3.i = icmp eq ptr %call.i2.i, null
  br i1 %tobool.not.i3.i, label %if.then6.i, label %for.inc.i

if.then6.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %100 = ptrtoint ptr %dev2.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %dev2.i.i, align 8
  %102 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %rxq, align 128
  %conv.i66 = zext i8 %103 to i32
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %101, ptr noundef nonnull @.str.41, ptr noundef nonnull @__func__.mvneta_rxq_fill, i32 noundef %conv.i66, i32 noundef %i.016.i, i32 noundef %64) #24
  br label %for.end.i

for.inc.i:                                        ; preds = %for.body.i
  %add.ptr3.i = getelementptr %struct.mvneta_rx_desc, ptr %97, i32 %i.016.i
  %dma_addr.i.i.i = getelementptr inbounds %struct.page, ptr %call.i2.i, i32 0, i32 1, i32 0, i32 2
  %104 = ptrtoint ptr %dma_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %dma_addr.i.i.i, align 4
  %106 = ptrtoint ptr %rx_offset_correction.i.i to i32
  call void @__asan_load2_noabort(i32 %106)
  %107 = load i16, ptr %rx_offset_correction.i.i, align 2
  %conv.i5.i = zext i16 %107 to i32
  %add.i.i = add i32 %105, %conv.i5.i
  %buf_phys_addr.i.i.i = getelementptr %struct.mvneta_rx_desc, ptr %97, i32 %i.016.i, i32 4
  %108 = ptrtoint ptr %buf_phys_addr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %add.i.i, ptr %buf_phys_addr.i.i.i, align 4
  %109 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %descs.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %add.ptr3.i to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %110 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = ashr exact i32 %sub.ptr.sub.i.i.i, 5
  %111 = ptrtoint ptr %buf_virt_addr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %buf_virt_addr.i.i.i, align 128
  %arrayidx.i.i.i = getelementptr ptr, ptr %112, i32 %sub.ptr.div.i.i.i
  %113 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %call.i2.i, ptr %arrayidx.i.i.i, align 4
  %inc.i = add nuw nsw i32 %i.016.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %64
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then6.i
  %i.014.i = phi i32 [ %i.016.i, %if.then6.i ], [ %64, %for.inc.i.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %i.014.i)
  %cmp12.i.i = icmp sgt i32 %i.014.i, 255
  br i1 %cmp12.i.i, label %for.end.i.while.body.i.i_crit_edge, label %for.end.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge

for.end.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_non_occup_desc_add.exit.i

for.end.i.while.body.i.i_crit_edge:               ; preds = %for.end.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %for.end.i.while.body.i.i_crit_edge
  %ndescs.addr.013.i.i = phi i32 [ %sub.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ %i.014.i, %for.end.i.while.body.i.i_crit_edge ]
  %114 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %114)
  %115 = load i8, ptr %rxq, align 128
  %conv.i8.i = zext i8 %115 to i32
  %shl.i.i = shl nuw nsw i32 %conv.i8.i, 2
  %add.i9.i = add nuw nsw i32 %shl.i.i, 5376
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %116 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %117, i32 %add.i9.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i.i, i32 65280) #20, !srcloc !256
  %sub.i.i = add nsw i32 %ndescs.addr.013.i.i, -255
  %cmp.i10.i = icmp ugt i32 %ndescs.addr.013.i.i, 510
  br i1 %cmp.i10.i, label %while.body.i.i.while.body.i.i_crit_edge, label %while.body.i.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge

while.body.i.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_non_occup_desc_add.exit.i

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.i

mvneta_rxq_non_occup_desc_add.exit.i:             ; preds = %while.body.i.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge, %for.end.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge, %for.cond.preheader.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge
  %ndescs.addr.0.lcssa.i.i = phi i32 [ %i.014.i, %for.end.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge ], [ 0, %for.cond.preheader.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge ], [ %sub.i.i, %while.body.i.i.mvneta_rxq_non_occup_desc_add.exit.i_crit_edge ]
  %118 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %118)
  %119 = load i8, ptr %rxq, align 128
  %conv2.i.i = zext i8 %119 to i32
  %shl3.i.i = shl nuw nsw i32 %conv2.i.i, 2
  %add4.i.i = add nuw nsw i32 %shl3.i.i, 5376
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  call void @arm_heavy_mb() #20
  %120 = call i32 @llvm.bswap.i32(i32 %ndescs.addr.0.lcssa.i.i) #20
  %121 = lshr i32 %120, 16
  %122 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %base.i, align 4
  %add.ptr.i11.i.i = getelementptr i8, ptr %123, i32 %add4.i.i
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11.i.i, i32 %121) #20, !srcloc !256
  br label %if.end

if.else:                                          ; preds = %entry
  %rx_offset_correction = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 39
  %124 = ptrtoint ptr %rx_offset_correction to i32
  call void @__asan_load2_noabort(i32 %124)
  %125 = load i16, ptr %rx_offset_correction, align 2
  %conv6 = zext i16 %125 to i32
  %126 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %rxq, align 128
  %conv.i67 = zext i8 %127 to i32
  %shl.i68 = shl nuw nsw i32 %conv.i67, 2
  %add.i69 = or i32 %shl.i68, 5120
  %128 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i71 = getelementptr i8, ptr %129, i32 %add.i69
  %130 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i71) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %131 = and i32 %130, -983041
  %132 = tail call i32 @llvm.bswap.i32(i32 %131) #20
  %.neg = mul nsw i32 %conv6, -32
  %133 = add nsw i32 %.neg, 4096
  %shl1.i = and i32 %133, -256
  %or.i = or i32 %132, %shl1.i
  %134 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %rxq, align 128
  %conv3.i72 = zext i8 %135 to i32
  %shl4.i73 = shl nuw nsw i32 %conv3.i72, 2
  %add5.i74 = or i32 %shl4.i73, 5120
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %136 = tail call i32 @llvm.bswap.i32(i32 %or.i) #20
  %137 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %base.i, align 4
  %add.ptr.i11.i75 = getelementptr i8, ptr %138, i32 %add5.i74
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11.i75, i32 %136) #20, !srcloc !256
  %139 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %139)
  %140 = load i8, ptr %rxq, align 128
  %conv.i76 = zext i8 %140 to i32
  %shl.i77 = shl nuw nsw i32 %conv.i76, 2
  %add.i78 = or i32 %shl.i77, 5120
  %141 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i80 = getelementptr i8, ptr %142, i32 %add.i78
  %143 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i80) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %144 = or i32 %143, 16777216
  %145 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %145)
  %146 = load i8, ptr %rxq, align 128
  %conv2.i81 = zext i8 %146 to i32
  %shl3.i82 = shl nuw nsw i32 %conv2.i81, 2
  %add4.i83 = or i32 %shl3.i82, 5120
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %147 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %base.i, align 4
  %add.ptr.i9.i84 = getelementptr i8, ptr %148, i32 %add4.i83
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i9.i84, i32 %144) #20, !srcloc !256
  %149 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %149)
  %150 = load i8, ptr %rxq, align 128
  %conv.i85 = zext i8 %150 to i32
  %shl.i86 = shl nuw nsw i32 %conv.i85, 2
  %add.i87 = or i32 %shl.i86, 5120
  %151 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i89 = getelementptr i8, ptr %152, i32 %add.i87
  %153 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i89) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %154 = and i32 %153, 1073741823
  %155 = tail call i32 @llvm.bswap.i32(i32 %154) #20
  %pool_long.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 30
  %156 = ptrtoint ptr %pool_long.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %pool_long.i, align 8
  %id1.i = getelementptr inbounds %struct.mvneta_bm_pool, ptr %157, i32 0, i32 1
  %158 = ptrtoint ptr %id1.i to i32
  call void @__asan_load1_noabort(i32 %158)
  %159 = load i8, ptr %id1.i, align 4
  %conv2.i90 = zext i8 %159 to i32
  %shl3.i91 = shl nuw nsw i32 %conv2.i90, 6
  %or.i92 = or i32 %shl3.i91, %155
  %160 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %160)
  %161 = load i8, ptr %rxq, align 128
  %conv5.i = zext i8 %161 to i32
  %shl6.i = shl nuw nsw i32 %conv5.i, 2
  %add7.i = or i32 %shl6.i, 5120
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %162 = tail call i32 @llvm.bswap.i32(i32 %or.i92) #20
  %163 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %base.i, align 4
  %add.ptr.i14.i = getelementptr i8, ptr %164, i32 %add7.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i14.i, i32 %162) #20, !srcloc !256
  %165 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %165)
  %166 = load i8, ptr %rxq, align 128
  %conv.i93 = zext i8 %166 to i32
  %shl.i94 = shl nuw nsw i32 %conv.i93, 2
  %add.i95 = or i32 %shl.i94, 5120
  %167 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i97 = getelementptr i8, ptr %168, i32 %add.i95
  %169 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i97) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %170 = and i32 %169, -805306369
  %171 = tail call i32 @llvm.bswap.i32(i32 %170) #20
  %pool_short.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 31
  %172 = ptrtoint ptr %pool_short.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %pool_short.i, align 4
  %id1.i98 = getelementptr inbounds %struct.mvneta_bm_pool, ptr %173, i32 0, i32 1
  %174 = ptrtoint ptr %id1.i98 to i32
  call void @__asan_load1_noabort(i32 %174)
  %175 = load i8, ptr %id1.i98, align 4
  %conv2.i99 = zext i8 %175 to i32
  %shl3.i100 = shl nuw nsw i32 %conv2.i99, 4
  %or.i101 = or i32 %shl3.i100, %171
  %176 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %176)
  %177 = load i8, ptr %rxq, align 128
  %conv5.i102 = zext i8 %177 to i32
  %shl6.i103 = shl nuw nsw i32 %conv5.i102, 2
  %add7.i104 = or i32 %shl6.i103, 5120
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %178 = tail call i32 @llvm.bswap.i32(i32 %or.i101) #20
  %179 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %base.i, align 4
  %add.ptr.i14.i105 = getelementptr i8, ptr %180, i32 %add7.i104
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i14.i105, i32 %178) #20, !srcloc !256
  %181 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %182)
  %cmp12.i = icmp sgt i32 %182, 255
  br i1 %cmp12.i, label %if.else.while.body.i_crit_edge, label %if.else.mvneta_rxq_non_occup_desc_add.exit_crit_edge

if.else.mvneta_rxq_non_occup_desc_add.exit_crit_edge: ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_non_occup_desc_add.exit

if.else.while.body.i_crit_edge:                   ; preds = %if.else
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.else.while.body.i_crit_edge
  %ndescs.addr.013.i = phi i32 [ %sub.i, %while.body.i.while.body.i_crit_edge ], [ %182, %if.else.while.body.i_crit_edge ]
  %183 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %183)
  %184 = load i8, ptr %rxq, align 128
  %conv.i107 = zext i8 %184 to i32
  %shl.i108 = shl nuw nsw i32 %conv.i107, 2
  %add.i109 = add nuw nsw i32 %shl.i108, 5376
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %185 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i110 = getelementptr i8, ptr %186, i32 %add.i109
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i110, i32 65280) #20, !srcloc !256
  %sub.i = add nsw i32 %ndescs.addr.013.i, -255
  %cmp.i111 = icmp ugt i32 %ndescs.addr.013.i, 510
  br i1 %cmp.i111, label %while.body.i.while.body.i_crit_edge, label %while.body.i.mvneta_rxq_non_occup_desc_add.exit_crit_edge

while.body.i.mvneta_rxq_non_occup_desc_add.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_rxq_non_occup_desc_add.exit

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

mvneta_rxq_non_occup_desc_add.exit:               ; preds = %while.body.i.mvneta_rxq_non_occup_desc_add.exit_crit_edge, %if.else.mvneta_rxq_non_occup_desc_add.exit_crit_edge
  %ndescs.addr.0.lcssa.i = phi i32 [ %182, %if.else.mvneta_rxq_non_occup_desc_add.exit_crit_edge ], [ %sub.i, %while.body.i.mvneta_rxq_non_occup_desc_add.exit_crit_edge ]
  %187 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %187)
  %188 = load i8, ptr %rxq, align 128
  %conv2.i112 = zext i8 %188 to i32
  %shl3.i113 = shl nuw nsw i32 %conv2.i112, 2
  %add4.i114 = add nuw nsw i32 %shl3.i113, 5376
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %189 = tail call i32 @llvm.bswap.i32(i32 %ndescs.addr.0.lcssa.i) #20
  %190 = lshr i32 %189, 16
  %191 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %base.i, align 4
  %add.ptr.i11.i115 = getelementptr i8, ptr %192, i32 %add4.i114
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11.i115, i32 %190) #20, !srcloc !256
  br label %if.end

if.end:                                           ; preds = %mvneta_rxq_non_occup_desc_add.exit, %mvneta_rxq_non_occup_desc_add.exit.i, %mvneta_create_page_pool.exit.i.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dma_alloc_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_pool_create(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_rxq_info_reg(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_rxq_info_reg_mem_model(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_pool_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_pool_alloc_pages(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_txq_hw_init(ptr nocapture noundef readonly %pp, ptr nocapture noundef readonly %txq) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %txq to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %txq, align 4
  %conv = zext i8 %1 to i32
  %shl = shl nuw nsw i32 %conv, 4
  %add = add nuw nsw i32 %shl, 9988
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %2 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %3, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 -253) #20, !srcloc !256
  %4 = ptrtoint ptr %txq to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %txq, align 4
  %conv2 = zext i8 %5 to i32
  %shl3 = shl nuw nsw i32 %conv2, 4
  %add4 = add nuw nsw i32 %shl3, 9984
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %6 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %base.i, align 4
  %add.ptr.i25 = getelementptr i8, ptr %7, i32 %add4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i25, i32 -193) #20, !srcloc !256
  %8 = ptrtoint ptr %txq to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %txq, align 4
  %conv6 = zext i8 %9 to i32
  %shl7 = shl nuw nsw i32 %conv6, 2
  %add8 = or i32 %shl7, 15360
  %descs_phys = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 11
  %10 = ptrtoint ptr %descs_phys to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %descs_phys, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %12 = tail call i32 @llvm.bswap.i32(i32 %11) #20
  %13 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %base.i, align 4
  %add.ptr.i27 = getelementptr i8, ptr %14, i32 %add8
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i27, i32 %12) #20, !srcloc !256
  %15 = ptrtoint ptr %txq to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %txq, align 4
  %conv10 = zext i8 %16 to i32
  %shl11 = shl nuw nsw i32 %conv10, 2
  %add12 = add nuw nsw i32 %shl11, 15392
  %size = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 1
  %17 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %size, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #20
  %20 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %base.i, align 4
  %add.ptr.i29 = getelementptr i8, ptr %21, i32 %add12
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i29, i32 %19) #20, !srcloc !256
  %done_pkts_coal = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 9
  %22 = ptrtoint ptr %done_pkts_coal to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %done_pkts_coal, align 4
  %24 = ptrtoint ptr %txq to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %txq, align 4
  %conv.i = zext i8 %25 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 2
  %add.i = add nuw nsw i32 %shl.i, 15392
  %26 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %27, i32 %add.i
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %29 = and i32 %28, -65344
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #20
  %shl1.i = shl i32 %23, 16
  %or.i = or i32 %30, %shl1.i
  %31 = ptrtoint ptr %txq to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %txq, align 4
  %conv3.i = zext i8 %32 to i32
  %shl4.i = shl nuw nsw i32 %conv3.i, 2
  %add5.i = add nuw nsw i32 %shl4.i, 15392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %33 = tail call i32 @llvm.bswap.i32(i32 %or.i) #20
  %34 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %base.i, align 4
  %add.ptr.i11.i = getelementptr i8, ptr %35, i32 %add5.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11.i, i32 %33) #20, !srcloc !256
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_set_xps_queue(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #5

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_threaded_irq(i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_schedule_prep(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__napi_schedule(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__request_percpu_irq(i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_state_add_instance(i32 noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_of_phy_connect(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_ethtool_get_wol(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_set_wakeup_capable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_set_wakeup_enable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_start(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_speed_up(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_state_remove_instance(i32 noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_free_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dql_reset(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_rxq_drop_pkts(ptr nocapture noundef readonly %pp, ptr noundef %rxq) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %rxq, align 128
  %conv.i = zext i8 %1 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 2
  %add.i = add nuw nsw i32 %shl.i, 5344
  %base.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %2 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 %add.i
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %5 = and i32 %4, -12648448
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end, label %if.end.thread

if.end:                                           ; preds = %entry
  %bm_priv = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 29
  %7 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bm_priv, align 4
  %tobool1.not = icmp eq ptr %8, null
  br i1 %tobool1.not, label %if.end.for.cond7.preheader_crit_edge, label %if.end.cleanup28_crit_edge

if.end.cleanup28_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup28

if.end.for.cond7.preheader_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond7.preheader

if.end.thread:                                    ; preds = %entry
  tail call fastcc void @mvneta_rxq_desc_num_update(ptr noundef %pp, ptr noundef %rxq, i32 noundef %6, i32 noundef %6)
  %bm_priv65 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 29
  %9 = ptrtoint ptr %bm_priv65 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bm_priv65, align 4
  %tobool1.not66 = icmp eq ptr %10, null
  br i1 %tobool1.not66, label %if.end.thread.for.cond7.preheader_crit_edge, label %for.body.lr.ph

if.end.thread.for.cond7.preheader_crit_edge:      ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond7.preheader

for.body.lr.ph:                                   ; preds = %if.end.thread
  %next_desc_to_proc.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 11
  %last_desc.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 10
  %descs.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 8
  %umax = call i32 @llvm.umax.i32(i32 %6, i32 1)
  br label %for.body

for.cond7.preheader:                              ; preds = %if.end.thread.for.cond7.preheader_crit_edge, %if.end.for.cond7.preheader_crit_edge
  %size = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 1
  %11 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp862 = icmp sgt i32 %12, 0
  br i1 %cmp862, label %for.body10.lr.ph, label %for.cond7.preheader.for.end21_crit_edge

for.cond7.preheader.for.end21_crit_edge:          ; preds = %for.cond7.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end21

for.body10.lr.ph:                                 ; preds = %for.cond7.preheader
  %buf_virt_addr = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 7
  %descs = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 8
  %page_pool = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  br label %for.body10

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.061 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %13 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %next_desc_to_proc.i, align 16
  %15 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %last_desc.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %16)
  %cmp.i = icmp slt i32 %14, %16
  %add.i56 = add i32 %14, 1
  %spec.select.i = select i1 %cmp.i, i32 %add.i56, i32 0
  %17 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %spec.select.i, ptr %next_desc_to_proc.i, align 16
  %18 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %descs.i, align 4
  %add.ptr.i = getelementptr %struct.mvneta_rx_desc, ptr %19, i32 %spec.select.i
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %add.ptr.i) #20, !srcloc !263
  %20 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %descs.i, align 4
  %status = getelementptr %struct.mvneta_rx_desc, ptr %21, i32 %14, i32 2
  %22 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %status, align 4
  %and = lshr i32 %23, 13
  %conv = and i32 %and, 3
  %24 = ptrtoint ptr %bm_priv65 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %bm_priv65, align 4
  %bm_pools = getelementptr inbounds %struct.mvneta_bm, ptr %25, i32 0, i32 6
  %26 = ptrtoint ptr %bm_pools to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %bm_pools, align 4
  %buf_phys_addr = getelementptr %struct.mvneta_rx_desc, ptr %21, i32 %14, i32 4
  %28 = ptrtoint ptr %buf_phys_addr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %buf_phys_addr, align 4
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #20
  %bppi_virt_addr.i = getelementptr inbounds %struct.mvneta_bm, ptr %25, i32 0, i32 4
  %31 = ptrtoint ptr %bppi_virt_addr.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bppi_virt_addr.i, align 4
  %id.i = getelementptr %struct.mvneta_bm_pool, ptr %27, i32 %conv, i32 1
  %33 = ptrtoint ptr %id.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %id.i, align 4
  %conv.i57 = zext i8 %34 to i32
  %shl.i58 = shl nuw nsw i32 %conv.i57, 8
  %add.ptr.i59 = getelementptr i8, ptr %32, i32 %shl.i58
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i59, i32 %30) #20, !srcloc !256
  %inc = add nuw nsw i32 %i.061, 1
  %exitcond.not = icmp eq i32 %inc, %umax
  br i1 %exitcond.not, label %for.body.cleanup28_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.body.cleanup28_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup28

for.body10:                                       ; preds = %cleanup.for.body10_crit_edge, %for.body10.lr.ph
  %i.163 = phi i32 [ 0, %for.body10.lr.ph ], [ %inc20, %cleanup.for.body10_crit_edge ]
  %35 = ptrtoint ptr %buf_virt_addr to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %buf_virt_addr, align 128
  %arrayidx12 = getelementptr ptr, ptr %36, i32 %i.163
  %37 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx12, align 4
  %tobool13.not = icmp eq ptr %38, null
  br i1 %tobool13.not, label %for.body10.cleanup_crit_edge, label %lor.lhs.false

for.body10.cleanup_crit_edge:                     ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false:                                    ; preds = %for.body10
  %39 = ptrtoint ptr %descs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %descs, align 4
  %buf_phys_addr14 = getelementptr %struct.mvneta_rx_desc, ptr %40, i32 %i.163, i32 4
  %41 = ptrtoint ptr %buf_phys_addr14 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %buf_phys_addr14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool15.not = icmp eq i32 %42, 0
  br i1 %tobool15.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end17

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end17:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  %43 = ptrtoint ptr %page_pool to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %page_pool, align 16
  tail call void @page_pool_put_page(ptr noundef %44, ptr noundef nonnull %38, i32 noundef -1, i1 noundef zeroext false) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %lor.lhs.false.cleanup_crit_edge, %for.body10.cleanup_crit_edge
  %inc20 = add nuw nsw i32 %i.163, 1
  %45 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %size, align 4
  %cmp8 = icmp slt i32 %inc20, %46
  br i1 %cmp8, label %cleanup.for.body10_crit_edge, label %cleanup.for.end21_crit_edge

cleanup.for.end21_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end21

cleanup.for.body10_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body10

for.end21:                                        ; preds = %cleanup.for.end21_crit_edge, %for.cond7.preheader.for.end21_crit_edge
  %xdp_rxq = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 6
  %call22 = tail call zeroext i1 @xdp_rxq_info_is_reg(ptr noundef %xdp_rxq) #20
  br i1 %call22, label %if.then23, label %for.end21.if.end25_crit_edge

for.end21.if.end25_crit_edge:                     ; preds = %for.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

if.then23:                                        ; preds = %for.end21
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @xdp_rxq_info_unreg(ptr noundef %xdp_rxq) #20
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %for.end21.if.end25_crit_edge
  %page_pool26 = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  %47 = ptrtoint ptr %page_pool26 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %page_pool26, align 16
  tail call void @page_pool_destroy(ptr noundef %48) #20
  %49 = ptrtoint ptr %page_pool26 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %page_pool26, align 16
  br label %cleanup28

cleanup28:                                        ; preds = %if.end25, %for.body.cleanup28_crit_edge, %if.end.cleanup28_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_rxq_desc_num_update(ptr nocapture noundef readonly %pp, ptr nocapture noundef readonly %rxq, i32 noundef %rx_done, i32 noundef %rx_filled) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %rx_done)
  %cmp = icmp slt i32 %rx_done, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %rx_filled)
  %cmp1 = icmp slt i32 %rx_filled, 256
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rx_done)
  %cmp342 = icmp sgt i32 %rx_done, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rx_filled)
  %cmp543 = icmp sgt i32 %rx_filled, 0
  %or.cond3944 = or i1 %cmp342, %cmp543
  br i1 %or.cond3944, label %while.body.lr.ph, label %while.cond.preheader.cleanup_crit_edge

while.cond.preheader.cleanup_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %base.i40 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  br label %while.body

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %shl = shl i32 %rx_filled, 16
  %or = or i32 %shl, %rx_done
  %0 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %rxq, align 128
  %conv = zext i8 %1 to i32
  %shl2 = shl nuw nsw i32 %conv, 2
  %add = add nuw nsw i32 %shl2, 5376
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %2 = tail call i32 @llvm.bswap.i32(i32 %or) #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %3 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %4, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %2) #20, !srcloc !256
  br label %cleanup

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.lr.ph
  %rx_filled.addr.046 = phi i32 [ %rx_filled, %while.body.lr.ph ], [ %rx_filled.addr.1, %while.body.while.body_crit_edge ]
  %rx_done.addr.045 = phi i32 [ %rx_done, %while.body.lr.ph ], [ %rx_done.addr.1, %while.body.while.body_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %rx_done.addr.045)
  %cmp7 = icmp slt i32 %rx_done.addr.045, 256
  %sub = add i32 %rx_done.addr.045, -255
  %rx_done.addr.1 = select i1 %cmp7, i32 0, i32 %sub
  %val.0 = select i1 %cmp7, i32 %rx_done.addr.045, i32 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %rx_filled.addr.046)
  %cmp11 = icmp slt i32 %rx_filled.addr.046, 256
  %shl14 = shl i32 %rx_filled.addr.046, 16
  %sub18 = add i32 %rx_filled.addr.046, -255
  %rx_filled.addr.1 = select i1 %cmp11, i32 0, i32 %sub18
  %shl14.pn = select i1 %cmp11, i32 %shl14, i32 16711680
  %val.1 = or i32 %shl14.pn, %val.0
  %5 = ptrtoint ptr %rxq to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %rxq, align 128
  %conv21 = zext i8 %6 to i32
  %shl22 = shl nuw nsw i32 %conv21, 2
  %add23 = add nuw nsw i32 %shl22, 5376
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %7 = tail call i32 @llvm.bswap.i32(i32 %val.1) #20
  %8 = ptrtoint ptr %base.i40 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %base.i40, align 4
  %add.ptr.i41 = getelementptr i8, ptr %9, i32 %add23
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i41, i32 %7) #20, !srcloc !256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rx_done.addr.1)
  %cmp3 = icmp ne i32 %rx_done.addr.1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rx_filled.addr.1)
  %cmp5 = icmp ne i32 %rx_filled.addr.1, 0
  %or.cond39 = select i1 %cmp3, i1 true, i1 %cmp5
  br i1 %or.cond39, label %while.body.while.body_crit_edge, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

cleanup:                                          ; preds = %while.body.cleanup_crit_edge, %if.then, %while.cond.preheader.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xdp_rxq_info_is_reg(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_pool_put_page(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_stop_dev(ptr noundef %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 3
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state) #20
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %can_wakeup.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 133, i32 12, i32 1
  %2 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %device_may_wakeup.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

device_may_wakeup.exit:                           ; preds = %entry
  %wakeup.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 133, i32 12, i32 6
  %3 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %4, null
  br i1 %tobool2.i.not, label %device_may_wakeup.exit.if.end_crit_edge, label %if.then

device_may_wakeup.exit.if.end_crit_edge:          ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #22
  %phylink = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 25
  %5 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %phylink, align 4
  %call2 = tail call i32 @phylink_speed_down(ptr noundef %6, i1 noundef zeroext false) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %device_may_wakeup.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %phylink3 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 25
  %7 = ptrtoint ptr %phylink3 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %phylink3, align 4
  tail call void @phylink_stop(ptr noundef %8) #20
  %neta_armada3700 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 38
  %9 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not = icmp eq i8 %10, 0
  br i1 %tobool.not, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %if.end
  %call560 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call560, i32 %11)
  %cmp61 = icmp ult i32 %call560, %11
  br i1 %cmp61, label %for.body.lr.ph, label %for.cond.preheader.if.end8_crit_edge

for.cond.preheader.if.end8_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ports = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %call562 = phi i32 [ %call560, %for.body.lr.ph ], [ %call5, %for.body.for.body_crit_edge ]
  %12 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ports, align 4
  %14 = ptrtoint ptr %13 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call562
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %14
  %17 = inttoptr i32 %add to ptr
  %napi = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %17, i32 0, i32 1
  tail call void @napi_disable(ptr noundef %napi) #20
  %call5 = tail call i32 @cpumask_next(i32 noundef %call562, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %18 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call5, %18
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.if.end8_crit_edge

for.body.if.end8_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %napi7 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 15
  tail call void @napi_disable(ptr noundef %napi7) #20
  br label %if.end8

if.end8:                                          ; preds = %if.else, %for.body.if.end8_crit_edge, %for.cond.preheader.if.end8_crit_edge
  %19 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dev, align 8
  tail call void @netif_carrier_off(ptr noundef %20) #20
  tail call fastcc void @mvneta_port_down(ptr noundef %pp)
  %21 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %22) #20
  %base.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %23 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %24, i32 11264
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %26 = and i32 %25, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %27 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i4.i = getelementptr i8, ptr %28, i32 11264
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i4.i, i32 %26) #20, !srcloc !256
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %29 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %29(i32 noundef 42949600) #20
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_clear_intr_cause, ptr noundef %pp, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_mask_interrupt, ptr noundef %pp, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  %30 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp8.i = icmp sgt i32 %30, 0
  br i1 %cmp8.i, label %for.body.lr.ph.i, label %if.end8.mvneta_tx_reset.exit_crit_edge

if.end8.mvneta_tx_reset.exit_crit_edge:           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_tx_reset.exit

for.body.lr.ph.i:                                 ; preds = %if.end8
  %txqs.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 7
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %queue.09.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %31 = ptrtoint ptr %txqs.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %txqs.i, align 4
  %arrayidx.i = getelementptr %struct.mvneta_tx_queue, ptr %32, i32 %queue.09.i
  %33 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev, align 8
  %35 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx.i, align 4
  %conv.i.i = zext i8 %36 to i32
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %34, i32 0, i32 103
  %37 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %_tx.i.i.i, align 128
  %arrayidx.i.i.i = getelementptr %struct.netdev_queue, ptr %38, i32 %conv.i.i
  %count.i.i = getelementptr %struct.mvneta_tx_queue, ptr %32, i32 %queue.09.i, i32 2
  %39 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count.i.i, align 4
  tail call fastcc void @mvneta_txq_bufs_free(ptr noundef %pp, ptr noundef %arrayidx.i, i32 noundef %40, ptr noundef %arrayidx.i.i.i, i1 noundef zeroext false) #20
  %41 = ptrtoint ptr %count.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %count.i.i, align 4
  %txq_put_index.i.i = getelementptr %struct.mvneta_tx_queue, ptr %32, i32 %queue.09.i, i32 7
  %42 = ptrtoint ptr %txq_put_index.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %txq_put_index.i.i, align 4
  %txq_get_index.i.i = getelementptr %struct.mvneta_tx_queue, ptr %32, i32 %queue.09.i, i32 8
  %43 = ptrtoint ptr %txq_get_index.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %txq_get_index.i.i, align 4
  %inc.i = add nuw nsw i32 %queue.09.i, 1
  %44 = load i32, ptr @txq_number, align 4
  %cmp.i = icmp slt i32 %inc.i, %44
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.mvneta_tx_reset.exit_crit_edge

for.body.i.mvneta_tx_reset.exit_crit_edge:        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_tx_reset.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

mvneta_tx_reset.exit:                             ; preds = %for.body.i.mvneta_tx_reset.exit_crit_edge, %if.end8.mvneta_tx_reset.exit_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %45 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i57 = getelementptr i8, ptr %46, i32 15600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i57, i32 16777216) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %47 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i7.i = getelementptr i8, ptr %48, i32 15600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i7.i, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %49 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i59 = getelementptr i8, ptr %50, i32 7360
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i59, i32 16777216) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %51 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i3.i = getelementptr i8, ptr %52, i32 7360
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i3.i, i32 0) #20, !srcloc !256
  %comphy = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 28
  %53 = ptrtoint ptr %comphy to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %comphy, align 8
  %call11 = tail call i32 @phy_power_off(ptr noundef %54) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %mvneta_tx_reset.exit.if.end30_crit_edge, label %do.end24, !prof !257

mvneta_tx_reset.exit.if.end30_crit_edge:          ; preds = %mvneta_tx_reset.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

do.end24:                                         ; preds = %mvneta_tx_reset.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3722, i32 noundef 9, ptr noundef null) #20
  br label %if.end30

if.end30:                                         ; preds = %do.end24, %mvneta_tx_reset.exit.if.end30_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_speed_down(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_stop(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_percpu_clear_intr_cause(ptr nocapture noundef readonly %arg) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %arg, i32 0, i32 5
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 9632
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %2 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base.i, align 4
  %add.ptr.i4 = getelementptr i8, ptr %3, i32 9648
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i4, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %4 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %base.i, align 4
  %add.ptr.i6 = getelementptr i8, ptr %5, i32 9640
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6, i32 0) #20, !srcloc !256
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_txq_bufs_free(ptr nocapture noundef readonly %pp, ptr nocapture noundef %txq, i32 noundef %num, ptr noundef %nq, i1 noundef zeroext %napi) unnamed_addr #3 align 64 {
entry:
  %bq = alloca %struct.xdp_frame_bulk, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %bq) #20
  %0 = call ptr @memset(ptr %bq, i32 255, i32 72)
  %xa.i = getelementptr inbounds %struct.xdp_frame_bulk, ptr %bq, i32 0, i32 1
  %1 = ptrtoint ptr %xa.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %xa.i, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !277
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.44, i32 noundef 696, ptr noundef nonnull @.str.45) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num)
  %cmp79 = icmp sgt i32 %num, 0
  br i1 %cmp79, label %for.body.lr.ph, label %rcu_read_lock.exit.for.end_crit_edge

rcu_read_lock.exit.for.end_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %rcu_read_lock.exit
  %buf1 = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 6
  %txq_get_index = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 8
  %descs = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 10
  %size.i = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 1
  %tso_hdrs_phys = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 15
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  br label %for.body

for.body:                                         ; preds = %if.end34.for.body_crit_edge, %for.body.lr.ph
  %i.084 = phi i32 [ 0, %for.body.lr.ph ], [ %inc35, %if.end34.for.body_crit_edge ]
  %bytes_compl.080 = phi i32 [ 0, %for.body.lr.ph ], [ %bytes_compl.1, %if.end34.for.body_crit_edge ]
  %6 = ptrtoint ptr %buf1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %buf1, align 4
  %8 = ptrtoint ptr %txq_get_index to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %txq_get_index, align 4
  %arrayidx = getelementptr %struct.mvneta_tx_buf, ptr %7, i32 %9
  %10 = ptrtoint ptr %descs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %descs, align 4
  %add.ptr = getelementptr %struct.mvneta_tx_desc, ptr %11, i32 %9
  %inc.i = add i32 %9, 1
  %12 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %13)
  %cmp.i = icmp eq i32 %inc.i, %13
  %spec.store.select.i = select i1 %cmp.i, i32 0, i32 %inc.i
  %14 = ptrtoint ptr %txq_get_index to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %spec.store.select.i, ptr %txq_get_index, align 4
  %buf_phys_addr = getelementptr %struct.mvneta_tx_desc, ptr %11, i32 %9, i32 4
  %15 = ptrtoint ptr %buf_phys_addr to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %buf_phys_addr, align 4
  %17 = ptrtoint ptr %tso_hdrs_phys to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %tso_hdrs_phys, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %18)
  %cmp3.not = icmp uge i32 %16, %18
  %mul = shl i32 %13, 8
  %add = add i32 %18, %mul
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %add)
  %cmp6 = icmp ult i32 %16, %add
  %or.cond = select i1 %cmp3.not, i1 %cmp6, i1 false
  br i1 %or.cond, label %for.body.if.end_crit_edge, label %land.lhs.true7

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true7:                                   ; preds = %for.body
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp8.not = icmp eq i32 %20, 1
  br i1 %cmp8.not, label %land.lhs.true7.if.then23_crit_edge, label %if.then

land.lhs.true7.if.then23_crit_edge:               ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then23

if.then:                                          ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #22
  %21 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev, align 8
  %parent = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 133, i32 1
  %23 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %parent, align 8
  %25 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %add.ptr, align 4
  %conv = zext i16 %26 to i32
  call void @dma_unmap_page_attrs(ptr noundef %24, i32 noundef %16, i32 noundef %conv, i32 noundef 1, i32 noundef 0) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.if.end_crit_edge
  %27 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pr = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %cmp12 = icmp eq i32 %.pr, 0
  br i1 %cmp12, label %land.lhs.true14, label %if.else

land.lhs.true14:                                  ; preds = %if.end
  %28 = getelementptr %struct.mvneta_tx_buf, ptr %7, i32 %9, i32 1
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %tobool.not = icmp eq ptr %30, null
  br i1 %tobool.not, label %land.lhs.true14.if.end34_crit_edge, label %if.then15

land.lhs.true14.if.end34_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end34

if.then15:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #22
  %len = getelementptr inbounds %struct.sk_buff, ptr %30, i32 0, i32 6
  %31 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %len, align 4
  %add16 = add i32 %32, %bytes_compl.080
  call void @__dev_kfree_skb_any(ptr noundef nonnull %30, i32 noundef 1) #20
  br label %if.end34

if.else:                                          ; preds = %if.end
  %.off = add i32 %.pr, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.else.if.then23_crit_edge, label %if.else.if.end34_crit_edge

if.else.if.end34_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end34

if.else.if.then23_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then23

if.then23:                                        ; preds = %if.else.if.then23_crit_edge, %land.lhs.true7.if.then23_crit_edge
  %33 = phi i32 [ %.pr, %if.else.if.then23_crit_edge ], [ 1, %land.lhs.true7.if.then23_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %33)
  %cmp28 = icmp eq i32 %33, 1
  %or.cond78 = select i1 %napi, i1 %cmp28, i1 false
  %34 = getelementptr %struct.mvneta_tx_buf, ptr %7, i32 %9, i32 1
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 4
  br i1 %or.cond78, label %if.then30, label %if.else31

if.then30:                                        ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #22
  call void @xdp_return_frame_rx_napi(ptr noundef %36) #20
  br label %if.end34

if.else31:                                        ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #22
  call void @xdp_return_frame_bulk(ptr noundef %36, ptr noundef nonnull %bq) #20
  br label %if.end34

if.end34:                                         ; preds = %if.else31, %if.then30, %if.else.if.end34_crit_edge, %if.then15, %land.lhs.true14.if.end34_crit_edge
  %bytes_compl.1 = phi i32 [ %add16, %if.then15 ], [ %bytes_compl.080, %if.then30 ], [ %bytes_compl.080, %if.else31 ], [ %bytes_compl.080, %if.else.if.end34_crit_edge ], [ %bytes_compl.080, %land.lhs.true14.if.end34_crit_edge ]
  %inc35 = add nuw nsw i32 %i.084, 1
  %exitcond.not = icmp eq i32 %inc35, %num
  br i1 %exitcond.not, label %if.end34.for.end_crit_edge, label %if.end34.for.body_crit_edge

if.end34.for.body_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end34.for.end_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %if.end34.for.end_crit_edge, %rcu_read_lock.exit.for.end_crit_edge
  %bytes_compl.0.lcssa = phi i32 [ 0, %rcu_read_lock.exit.for.end_crit_edge ], [ %bytes_compl.1, %if.end34.for.end_crit_edge ]
  call void @xdp_flush_frame_bulk(ptr noundef nonnull %bq) #20
  %call.i61 = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i61, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i64

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true.i64:                                ; preds = %for.end
  %call1.i62 = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i62)
  %tobool.not.i63 = icmp eq i32 %call1.i62, 0
  br i1 %tobool.not.i63, label %land.lhs.true.i64.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i66

land.lhs.true.i64.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i64
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true2.i66:                               ; preds = %land.lhs.true.i64
  %.b4.i65 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i65, label %land.lhs.true2.i66.rcu_read_unlock.exit_crit_edge, label %if.then.i67

land.lhs.true2.i66.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i66
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

if.then.i67:                                      ; preds = %land.lhs.true2.i66
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.44, i32 noundef 724, ptr noundef nonnull @.str.46) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i67, %land.lhs.true2.i66.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i64.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !278
  %37 = call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i.i.i68 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i.i68 to ptr
  %preempt_count.i.i.i.i69 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i.i69 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i.i69, align 4
  %sub.i.i.i = add i32 %40, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i69, align 4
  call void @rcu_read_unlock_strict() #20
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bytes_compl.0.lcssa)
  %tobool.not.i70 = icmp eq i32 %bytes_compl.0.lcssa, 0
  br i1 %tobool.not.i70, label %rcu_read_unlock.exit.netdev_tx_completed_queue.exit_crit_edge, label %if.end.i, !prof !261

rcu_read_unlock.exit.netdev_tx_completed_queue.exit_crit_edge: ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %netdev_tx_completed_queue.exit

if.end.i:                                         ; preds = %rcu_read_unlock.exit
  %dql.i = getelementptr inbounds %struct.netdev_queue, ptr %nq, i32 0, i32 15
  call void @dql_completed(ptr noundef %dql.i, i32 noundef %bytes_compl.0.lcssa) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !279
  %adj_limit.i.i = getelementptr inbounds %struct.netdev_queue, ptr %nq, i32 0, i32 15, i32 1
  %41 = ptrtoint ptr %adj_limit.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %adj_limit.i.i, align 4
  %43 = ptrtoint ptr %dql.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %dql.i, align 128
  %sub.i.i = sub i32 %42, %44
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i71 = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i71, label %if.end.i.netdev_tx_completed_queue.exit_crit_edge, label %if.end14.i, !prof !261

if.end.i.netdev_tx_completed_queue.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %netdev_tx_completed_queue.exit

if.end14.i:                                       ; preds = %if.end.i
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %nq, i32 0, i32 13
  %call15.i = call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %state.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %if.end14.i.netdev_tx_completed_queue.exit_crit_edge, label %if.then17.i

if.end14.i.netdev_tx_completed_queue.exit_crit_edge: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %netdev_tx_completed_queue.exit

if.then17.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @netif_schedule_queue(ptr noundef %nq) #20
  br label %netdev_tx_completed_queue.exit

netdev_tx_completed_queue.exit:                   ; preds = %if.then17.i, %if.end14.i.netdev_tx_completed_queue.exit_crit_edge, %if.end.i.netdev_tx_completed_queue.exit_crit_edge, %rcu_read_unlock.exit.netdev_tx_completed_queue.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %bq) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_return_frame_rx_napi(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_return_frame_bulk(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_flush_frame_bulk(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_unmap_page_attrs(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_any(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dql_completed(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_schedule_queue(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_disconnect_phy(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mvneta_skb_tx_csum(ptr noundef %skb) unnamed_addr #3 align 64 {
entry:
  %vhdr.i.i = alloca %struct.vlan_hdr, align 2
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %ip_summed, align 8
  %1 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %1)
  %cmp = icmp eq i16 %1, 1536
  br i1 %cmp, label %if.then, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then:                                          ; preds = %entry
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %2 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %protocol.i, align 8
  %mac_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %4 = ptrtoint ptr %mac_len.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %mac_len.i.i, align 4
  %conv.i.i = zext i16 %5 to i32
  %6 = zext i16 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.97)
  switch i16 %3, label %if.then.vlan_get_protocol.exit_crit_edge [
    i16 -30552, label %if.then.if.then.i.i_crit_edge
    i16 -32512, label %if.then.if.then.i.i_crit_edge56
  ]

if.then.if.then.i.i_crit_edge56:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i

if.then.if.then.i.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i

if.then.vlan_get_protocol.exit_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %vlan_get_protocol.exit

if.then.i.i:                                      ; preds = %if.then.if.then.i.i_crit_edge, %if.then.if.then.i.i_crit_edge56
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not.i.i = icmp eq i16 %5, 0
  br i1 %tobool.not.i.i, label %if.then.i.i.if.end26.i.i_crit_edge, label %if.then1.i.i

if.then.i.i.if.end26.i.i_crit_edge:               ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end26.i.i

if.then1.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %5)
  %cmp.i.i = icmp ult i16 %5, 4
  br i1 %cmp.i.i, label %do.end.i.i, label %if.end25.i.i, !prof !261

do.end.i.i:                                       ; preds = %if.then1.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 598, i32 noundef 9, ptr noundef null) #20
  br label %return

if.end25.i.i:                                     ; preds = %if.then1.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add nsw i32 %conv.i.i, -4
  br label %if.end26.i.i

if.end26.i.i:                                     ; preds = %if.end25.i.i, %if.then.i.i.if.end26.i.i_crit_edge
  %vlan_depth.0.i.i = phi i32 [ %sub.i.i, %if.end25.i.i ], [ 14, %if.then.i.i.if.end26.i.i_crit_edge ]
  %7 = getelementptr inbounds %struct.vlan_hdr, ptr %vhdr.i.i, i32 0, i32 1
  %len.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %data_len.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %tobool2.not.i.i.i.i = icmp eq ptr %skb, null
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  br label %do.body27.i.i

do.body27.i.i:                                    ; preds = %do.body27.backedge.i.i, %if.end26.i.i
  %vlan_depth.1.i.i = phi i32 [ %vlan_depth.0.i.i, %if.end26.i.i ], [ %add.i.i, %do.body27.backedge.i.i ]
  %parse_depth.0.i.i = phi i32 [ 8, %if.end26.i.i ], [ %dec.i.i, %do.body27.backedge.i.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vhdr.i.i) #20
  %8 = ptrtoint ptr %vhdr.i.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %vhdr.i.i, align 2, !annotation !260
  %9 = ptrtoint ptr %7 to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 -1, ptr %7, align 2, !annotation !260
  %10 = ptrtoint ptr %len.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len.i.i.i.i, align 4
  %12 = ptrtoint ptr %data_len.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data_len.i.i.i.i, align 8
  %14 = add i32 %vlan_depth.1.i.i, %13
  %sub.i1.i.i.i = sub i32 %11, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.i1.i.i.i)
  %cmp.i.i.i.i = icmp sgt i32 %sub.i1.i.i.i, 3
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.end.i.i.i.i, !prof !257

if.then.i.i.i.i:                                  ; preds = %do.body27.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %15 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %data.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %16, i32 %vlan_depth.1.i.i
  br label %skb_header_pointer.exit.i.i

if.end.i.i.i.i:                                   ; preds = %do.body27.i.i
  br i1 %tobool2.not.i.i.i.i, label %if.end.i.i.i.i.cleanup.thread.i.i_crit_edge, label %lor.lhs.false.i.i.i.i

if.end.i.i.i.i.cleanup.thread.i.i_crit_edge:      ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %vlan_depth.1.i.i, ptr noundef nonnull %vhdr.i.i, i32 noundef 4) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp3.i.i.i.i = icmp slt i32 %call.i.i.i.i, 0
  %spec.select.i.i.i.i = select i1 %cmp3.i.i.i.i, ptr null, ptr %vhdr.i.i, !prof !261
  br label %skb_header_pointer.exit.i.i

skb_header_pointer.exit.i.i:                      ; preds = %lor.lhs.false.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i, %if.then.i.i.i.i ], [ %spec.select.i.i.i.i, %lor.lhs.false.i.i.i.i ]
  %tobool29.not.i.i = icmp eq ptr %retval.0.i.i.i.i, null
  %dec.i.i = add nsw i32 %parse_depth.0.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool30.not.i.i = icmp eq i32 %dec.i.i, 0
  %17 = select i1 %tobool29.not.i.i, i1 true, i1 %tobool30.not.i.i, !prof !261
  br i1 %17, label %skb_header_pointer.exit.i.i.cleanup.thread.i.i_crit_edge, label %do.cond42.i.i, !prof !261

skb_header_pointer.exit.i.i.cleanup.thread.i.i_crit_edge: ; preds = %skb_header_pointer.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread.i.i

cleanup.thread.i.i:                               ; preds = %skb_header_pointer.exit.i.i.cleanup.thread.i.i_crit_edge, %if.end.i.i.i.i.cleanup.thread.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vhdr.i.i) #20
  br label %return

do.cond42.i.i:                                    ; preds = %skb_header_pointer.exit.i.i
  %h_vlan_encapsulated_proto.i.i = getelementptr inbounds %struct.vlan_hdr, ptr %retval.0.i.i.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %h_vlan_encapsulated_proto.i.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %h_vlan_encapsulated_proto.i.i, align 2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vhdr.i.i) #20
  %20 = zext i16 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.98)
  switch i16 %19, label %do.cond42.i.i.vlan_get_protocol.exit_crit_edge [
    i16 -30552, label %do.cond42.i.i.do.body27.backedge.i.i_crit_edge
    i16 -32512, label %do.cond42.i.i.do.body27.backedge.i.i_crit_edge57
  ]

do.cond42.i.i.do.body27.backedge.i.i_crit_edge57: ; preds = %do.cond42.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body27.backedge.i.i

do.cond42.i.i.do.body27.backedge.i.i_crit_edge:   ; preds = %do.cond42.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body27.backedge.i.i

do.cond42.i.i.vlan_get_protocol.exit_crit_edge:   ; preds = %do.cond42.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %vlan_get_protocol.exit

do.body27.backedge.i.i:                           ; preds = %do.cond42.i.i.do.body27.backedge.i.i_crit_edge, %do.cond42.i.i.do.body27.backedge.i.i_crit_edge57
  %add.i.i = add nsw i32 %vlan_depth.1.i.i, 4
  br label %do.body27.i.i

vlan_get_protocol.exit:                           ; preds = %do.cond42.i.i.vlan_get_protocol.exit_crit_edge, %if.then.vlan_get_protocol.exit_crit_edge
  %retval.2.i.i = phi i16 [ %3, %if.then.vlan_get_protocol.exit_crit_edge ], [ %19, %do.cond42.i.i.vlan_get_protocol.exit_crit_edge ]
  %21 = zext i16 %retval.2.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.99)
  switch i16 %retval.2.i.i, label %vlan_get_protocol.exit.return_crit_edge [
    i16 2048, label %if.then5
    i16 -31011, label %if.then13
  ]

vlan_get_protocol.exit.return_crit_edge:          ; preds = %vlan_get_protocol.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then5:                                         ; preds = %vlan_get_protocol.exit
  call void @__sanitizer_cov_trace_pc() #22
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %22 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %24 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i39 = zext i16 %25 to i32
  %add.ptr.i.i = getelementptr i8, ptr %23, i32 %conv.i.i39
  %26 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load7 = load i8, ptr %add.ptr.i.i, align 4
  %bf.clear8 = and i8 %bf.load7, 15
  %conv9 = zext i8 %bf.clear8 to i32
  %protocol = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i, i32 0, i32 6
  br label %if.end22

if.then13:                                        ; preds = %vlan_get_protocol.exit
  call void @__sanitizer_cov_trace_pc() #22
  %head.i.i40 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %27 = ptrtoint ptr %head.i.i40 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %head.i.i40, align 8
  %network_header.i.i41 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %29 = ptrtoint ptr %network_header.i.i41 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %network_header.i.i41, align 4
  %conv.i.i42 = zext i16 %30 to i32
  %add.ptr.i.i43 = getelementptr i8, ptr %28, i32 %conv.i.i42
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %31 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %transport_header.i, align 2
  %conv.i = zext i16 %32 to i32
  %sub.i = sub nsw i32 %conv.i, %conv.i.i42
  call void @__sanitizer_cov_trace_cmp2(i16 %32, i16 %30)
  %cmp16.not = icmp eq i16 %32, %30
  %shr = lshr i32 %sub.i, 2
  %spec.select = select i1 %cmp16.not, i32 0, i32 %shr
  %nexthdr = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i43, i32 0, i32 3
  br label %if.end22

if.end22:                                         ; preds = %if.then13, %if.then5
  %ip_hdr_len.1 = phi i32 [ %conv9, %if.then5 ], [ %spec.select, %if.then13 ]
  %l4_proto.0.in = phi ptr [ %protocol, %if.then5 ], [ %nexthdr, %if.then13 ]
  %33 = ptrtoint ptr %l4_proto.0.in to i32
  call void @__asan_load1_noabort(i32 %33)
  %l4_proto.0 = load i8, ptr %l4_proto.0.in, align 1
  %head.i.i49 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %34 = ptrtoint ptr %head.i.i49 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %head.i.i49, align 8
  %network_header.i.i50 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %36 = ptrtoint ptr %network_header.i.i50 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %network_header.i.i50, align 4
  %conv.i.i51 = zext i16 %37 to i32
  %add.ptr.i.i52 = getelementptr i8, ptr %35, i32 %conv.i.i51
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %38 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i52 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %39 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %shl1.i = shl i32 %ip_hdr_len.1, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %retval.2.i.i)
  %cmp.i = icmp eq i16 %retval.2.i.i, 2048
  %command.0.v.i = select i1 %cmp.i, i32 262144, i32 131072
  call void @__sanitizer_cov_trace_const_cmp1(i8 17, i8 %l4_proto.0)
  %switch.selectcmp.i = icmp eq i8 %l4_proto.0, 17
  %switch.select.i = select i1 %switch.selectcmp.i, i32 1073807360, i32 -2147483648
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %l4_proto.0)
  %switch.selectcmp22.i = icmp eq i8 %l4_proto.0, 6
  %switch.select23.i = select i1 %switch.selectcmp22.i, i32 1073741824, i32 %switch.select.i
  %or.i = or i32 %shl1.i, %command.0.v.i
  %command.0.i = or i32 %or.i, %switch.select23.i
  %or10.i = or i32 %command.0.i, %sub.ptr.sub.i
  br label %return

return:                                           ; preds = %if.end22, %vlan_get_protocol.exit.return_crit_edge, %cleanup.thread.i.i, %do.end.i.i, %entry.return_crit_edge
  %retval.1 = phi i32 [ %or10.i, %if.end22 ], [ -2147483648, %vlan_get_protocol.exit.return_crit_edge ], [ -2147483648, %entry.return_crit_edge ], [ -2147483648, %do.end.i.i ], [ -2147483648, %cleanup.thread.i.i ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_txq_pend_desc_add(ptr nocapture noundef readonly %pp, ptr nocapture noundef %txq, i32 noundef %pend_desc) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %pending = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 3
  %0 = ptrtoint ptr %pending to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pending, align 4
  %add = add i32 %1, %pend_desc
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %entry
  %pend_desc.addr.0 = phi i32 [ %add, %entry ], [ %sub, %do.body.do.body_crit_edge ]
  %2 = tail call i32 @llvm.smin.i32(i32 %pend_desc.addr.0, i32 255)
  %3 = ptrtoint ptr %txq to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %txq, align 4
  %conv = zext i8 %4 to i32
  %shl = shl nuw nsw i32 %conv, 2
  %add1 = add nuw nsw i32 %shl, 15456
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %5 = tail call i32 @llvm.bswap.i32(i32 %2) #20
  %6 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %add1
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %5) #20, !srcloc !256
  %sub = sub i32 %pend_desc.addr.0, %2
  %cmp2 = icmp sgt i32 %sub, 0
  br i1 %cmp2, label %do.body.do.body_crit_edge, label %do.end

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  %8 = ptrtoint ptr %pending to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %pending, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @u64_stats_update_begin(ptr noundef %syncp) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %entry.__seqprop_assert.exit_crit_edge, label %land.lhs.true.i

entry.__seqprop_assert.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %__seqprop_assert.exit

land.lhs.true.i:                                  ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !280
  %5 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !281
  %14 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i7.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i7.i to ptr
  %preempt_count.i.i8.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i8.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i8.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool20.not.i = icmp eq i32 %13, 0
  br i1 %tobool20.not.i, label %land.rhs.i, label %land.lhs.true.i.__seqprop_assert.exit_crit_edge

land.lhs.true.i.__seqprop_assert.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__seqprop_assert.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %18 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp.i = icmp eq i32 %21, 0
  br i1 %cmp.i, label %land.rhs22.i, label %land.rhs.i.__seqprop_assert.exit_crit_edge

land.rhs.i.__seqprop_assert.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__seqprop_assert.exit

land.rhs22.i:                                     ; preds = %land.rhs.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i9.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %add.i11.i = add i32 %25, 1
  store volatile i32 %add.i11.i, ptr %preempt_count.i.i10.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !282
  %26 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i, align 4
  %arrayidx46.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx46.i, align 4
  %add47.i = add i32 %29, ptrtoint (ptr @hardirqs_enabled to i32)
  %30 = inttoptr i32 %add47.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !283
  %33 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i12.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i12.i to ptr
  %preempt_count.i.i13.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i13.i, align 4
  %sub.i14.i = add i32 %36, -1
  store volatile i32 %sub.i14.i, ptr %preempt_count.i.i13.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool54.not.i = icmp eq i32 %32, 0
  br i1 %tobool54.not.i, label %land.rhs22.i.__seqprop_assert.exit_crit_edge, label %land.rhs58.i

land.rhs22.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs22.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__seqprop_assert.exit

land.rhs58.i:                                     ; preds = %land.rhs22.i
  %.b1.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i, label %land.rhs58.i.__seqprop_assert.exit_crit_edge, label %if.then.i, !prof !257

land.rhs58.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__seqprop_assert.exit

if.then.i:                                        ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.53, i32 noundef 271, i32 noundef 9, ptr noundef null) #20
  br label %__seqprop_assert.exit

__seqprop_assert.exit:                            ; preds = %if.then.i, %land.rhs58.i.__seqprop_assert.exit_crit_edge, %land.rhs22.i.__seqprop_assert.exit_crit_edge, %land.rhs.i.__seqprop_assert.exit_crit_edge, %land.lhs.true.i.__seqprop_assert.exit_crit_edge, %entry.__seqprop_assert.exit_crit_edge
  %37 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %38, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !284
  %dep_map.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %39 = tail call ptr @llvm.returnaddress(i32 0) #20
  %40 = ptrtoint ptr %39 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %40) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tso_count_descs(ptr noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tso_start(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @tso_build_hdr(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @tso_build_data(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_map_single(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_map_page_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_mapping_error(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_mac_addr_set(ptr nocapture noundef readonly %pp, ptr nocapture noundef readonly %addr, i32 noundef %queue) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %queue)
  %cmp.not = icmp eq i32 %queue, -1
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx = getelementptr i8, ptr %addr, i32 4
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %1 to i32
  %shl = shl nuw nsw i32 %conv, 8
  %arrayidx1 = getelementptr i8, ptr %addr, i32 5
  %2 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx1, align 1
  %conv2 = zext i8 %3 to i32
  %or = or i32 %shl, %conv2
  %4 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %addr, align 1
  %conv4 = zext i8 %5 to i32
  %shl5 = shl nuw i32 %conv4, 24
  %arrayidx6 = getelementptr i8, ptr %addr, i32 1
  %6 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx6, align 1
  %conv7 = zext i8 %7 to i32
  %shl8 = shl nuw nsw i32 %conv7, 16
  %or9 = or i32 %shl8, %shl5
  %arrayidx10 = getelementptr i8, ptr %addr, i32 2
  %8 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx10, align 1
  %conv11 = zext i8 %9 to i32
  %shl12 = shl nuw nsw i32 %conv11, 8
  %or13 = or i32 %or9, %shl12
  %arrayidx14 = getelementptr i8, ptr %addr, i32 3
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx14, align 1
  %conv15 = zext i8 %11 to i32
  %or17 = or i32 %or13, %conv15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %12 = tail call i32 @llvm.bswap.i32(i32 %or) #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %13 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %14, i32 9236
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %12) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %15 = tail call i32 @llvm.bswap.i32(i32 %or17) #20
  %16 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %base.i, align 4
  %add.ptr.i29 = getelementptr i8, ptr %17, i32 9240
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i29, i32 %15) #20, !srcloc !256
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %arrayidx18 = getelementptr i8, ptr %addr, i32 5
  %18 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx18, align 1
  %20 = and i8 %19, 15
  %conv2.i = zext i8 %20 to i32
  %div26.i = and i32 %conv2.i, 12
  %add.i = or i32 %div26.i, 13824
  %base.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %21 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %22, i32 %add.i
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  %24 = tail call i32 @llvm.bswap.i32(i32 %23) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %rem.i = shl nuw nsw i32 %conv2.i, 3
  %mul5.i = and i32 %rem.i, 24
  %shl.i = shl nuw i32 255, %mul5.i
  %neg.i = xor i32 %shl.i, -1
  %and6.i = and i32 %24, %neg.i
  %shl11.i = shl i32 %queue, 1
  %or.i = or i32 %shl11.i, 1
  %shl13.i = shl i32 %or.i, %mul5.i
  %or14.i = select i1 %cmp.not, i32 0, i32 %shl13.i
  %unicast_reg.0.i = or i32 %and6.i, %or14.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %25 = tail call i32 @llvm.bswap.i32(i32 %unicast_reg.0.i) #20
  %26 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i28.i = getelementptr i8, ptr %27, i32 %add.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i28.i, i32 %25) #20, !srcloc !256
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_prepare_mac_addr_change(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @eth_commit_mac_addr_change(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_mii_ioctl(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_bm_update_mtu(ptr nocapture noundef %pp, i32 noundef %mtu) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %pool_long = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 30
  %0 = ptrtoint ptr %pool_long to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool_long, align 8
  %bm_priv = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 29
  %2 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bm_priv, align 4
  %4 = ptrtoint ptr %pp to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %pp, align 8
  %conv = zext i8 %5 to i32
  %shl = shl nuw i32 1, %conv
  %conv2 = trunc i32 %shl to i8
  tail call void @mvneta_bm_bufs_free(ptr noundef %3, ptr noundef %1, i8 noundef zeroext %conv2) #20
  %buf_num = getelementptr inbounds %struct.hwbm_pool, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %buf_num to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_num, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.end21, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %id8 = getelementptr inbounds %struct.mvneta_bm_pool, ptr %1, i32 0, i32 1
  %8 = ptrtoint ptr %id8 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %id8, align 4
  %conv9 = zext i8 %9 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1212, i32 noundef 9, ptr noundef nonnull @.str.61, i32 noundef %conv9) #20
  br label %bm_mtu_err

if.end21:                                         ; preds = %entry
  %add25 = add i32 %mtu, 151
  %and = and i32 %add25, -128
  %pkt_size = getelementptr inbounds %struct.mvneta_bm_pool, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %pkt_size to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %and, ptr %pkt_size, align 4
  %add27 = add i32 %and, 128
  %buf_size = getelementptr inbounds %struct.mvneta_bm_pool, ptr %1, i32 0, i32 4
  %11 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %add27, ptr %buf_size, align 4
  %12 = add i32 %and, 511
  %add32 = and i32 %12, -128
  %frag_size = getelementptr inbounds %struct.hwbm_pool, ptr %1, i32 0, i32 1
  %13 = ptrtoint ptr %frag_size to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %add32, ptr %frag_size, align 4
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %1, align 4
  %call = tail call i32 @hwbm_pool_add(ptr noundef %1, i32 noundef %15) #20
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call, i32 %17)
  %cmp.not = icmp eq i32 %call, %17
  br i1 %cmp.not, label %if.end65, label %do.end48

do.end48:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  %id49 = getelementptr inbounds %struct.mvneta_bm_pool, ptr %1, i32 0, i32 1
  %18 = ptrtoint ptr %id49 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %id49, align 4
  %conv50 = zext i8 %19 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1225, i32 noundef 9, ptr noundef nonnull @.str.62, i32 noundef %conv50, i32 noundef %call, i32 noundef %17) #20
  br label %bm_mtu_err

if.end65:                                         ; preds = %if.end21
  %20 = ptrtoint ptr %buf_size to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %buf_size, align 4
  %id67 = getelementptr inbounds %struct.mvneta_bm_pool, ptr %1, i32 0, i32 1
  %22 = ptrtoint ptr %id67 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %id67, align 4
  %and.i = and i32 %21, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 0
  br i1 %cmp.i, label %if.end65.mvneta_bm_pool_bufsize_set.exit_crit_edge, label %do.end.i

if.end65.mvneta_bm_pool_bufsize_set.exit_crit_edge: ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_bm_pool_bufsize_set.exit

do.end.i:                                         ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #22
  %dev.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %24 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dev.i, align 8
  %parent.i = getelementptr inbounds %struct.net_device, ptr %25, i32 0, i32 133, i32 1
  %26 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %parent.i, align 8
  %add.i = add i32 %21, 7
  %and2.i = and i32 %add.i, -8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %27, ptr noundef nonnull @.str.64, i32 noundef %21, i32 noundef %and2.i) #24
  br label %mvneta_bm_pool_bufsize_set.exit

mvneta_bm_pool_bufsize_set.exit:                  ; preds = %do.end.i, %if.end65.mvneta_bm_pool_bufsize_set.exit_crit_edge
  %buf_size.addr.0.i = phi i32 [ %21, %if.end65.mvneta_bm_pool_bufsize_set.exit_crit_edge ], [ %and2.i, %do.end.i ]
  %conv.i = zext i8 %23 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 2
  %add5.i = add nuw nsw i32 %shl.i, 5888
  %base.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %28 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %29, i32 %add5.i
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  %31 = tail call i32 @llvm.bswap.i32(i32 %30) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and6.i = and i32 %buf_size.addr.0.i, 65528
  %or.i = or i32 %31, %and6.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %32 = tail call i32 @llvm.bswap.i32(i32 %or.i) #20
  %33 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i19.i = getelementptr i8, ptr %34, i32 %add5.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i19.i, i32 %32) #20, !srcloc !256
  br label %cleanup

bm_mtu_err:                                       ; preds = %do.end48, %do.end
  %35 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bm_priv, align 4
  %37 = ptrtoint ptr %pool_long to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pool_long, align 8
  %39 = ptrtoint ptr %pp to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %pp, align 8
  %conv71 = zext i8 %40 to i32
  %shl72 = shl nuw i32 1, %conv71
  %conv73 = trunc i32 %shl72 to i8
  tail call void @mvneta_bm_pool_destroy(ptr noundef %36, ptr noundef %38, i8 noundef zeroext %conv73) #20
  %41 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bm_priv, align 4
  %pool_short = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 31
  %43 = ptrtoint ptr %pool_short to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pool_short, align 4
  %45 = ptrtoint ptr %pp to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %pp, align 8
  %conv76 = zext i8 %46 to i32
  %shl77 = shl nuw i32 1, %conv76
  %conv78 = trunc i32 %shl77 to i8
  tail call void @mvneta_bm_pool_destroy(ptr noundef %42, ptr noundef %44, i8 noundef zeroext %conv78) #20
  %47 = ptrtoint ptr %bm_priv to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %bm_priv, align 4
  %rx_offset_correction = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 39
  %48 = ptrtoint ptr %rx_offset_correction to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 256, ptr %rx_offset_correction, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %49 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %50, i32 9472
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 16777216) #20, !srcloc !256
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %51 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %dev, align 8
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %52, ptr noundef nonnull @.str.63) #24
  br label %cleanup

cleanup:                                          ; preds = %bm_mtu_err, %mvneta_bm_pool_bufsize_set.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_update_features(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mvneta_bm_bufs_free(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hwbm_pool_add(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !265
  %and.i.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %do.body24.critedge.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @trace_hardirqs_off() #20
  %dep_map.c.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %1 = tail call ptr @llvm.returnaddress(i32 0) #20
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #20
  tail call void @lock_release(ptr noundef %dep_map.c.i.i, i32 noundef %2) #20
  tail call void @trace_hardirqs_on() #20
  br label %do.body24.i.i

do.body24.critedge.i.i:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %dep_map.c48.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %3 = tail call ptr @llvm.returnaddress(i32 0) #20
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #20
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i, i32 noundef %4) #20
  br label %do.body24.i.i

do.body24.i.i:                                    ; preds = %do.body24.critedge.i.i, %if.then.i.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !266
  %and.i.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool32.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool32.not.i.i, label %if.then36.i.i, label %do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge, !prof !261

do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge: ; preds = %do.body24.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %seqcount_lockdep_reader_access.exit.i

if.then36.i.i:                                    ; preds = %do.body24.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @warn_bogus_irq_restore() #20
  br label %seqcount_lockdep_reader_access.exit.i

seqcount_lockdep_reader_access.exit.i:            ; preds = %if.then36.i.i, %do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #20, !srcloc !267
  %6 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %syncp, align 4
  %and18.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %tobool.not19.i = icmp eq i32 %and18.i, 0
  br i1 %tobool.not19.i, label %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge, label %seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge

seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i
  br label %do.end.i

seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__u64_stats_fetch_begin.exit

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !285
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #20, !srcloc !286
  %8 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %syncp, align 4
  %and.i = and i32 %9, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i.__u64_stats_fetch_begin.exit_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end.i

do.end.i.__u64_stats_fetch_begin.exit_crit_edge:  ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__u64_stats_fetch_begin.exit

__u64_stats_fetch_begin.exit:                     ; preds = %do.end.i.__u64_stats_fetch_begin.exit_crit_edge, %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge
  %.lcssa.i = phi i32 [ %7, %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge ], [ %9, %do.end.i.__u64_stats_fetch_begin.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !287
  ret i32 %.lcssa.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_reset_tc(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_set_num_tc(ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_set_tc_queue(ptr noundef, i8 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_trace_netlink_extack(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mvneta_xdp_submit_frame(ptr nocapture noundef readonly %pp, ptr nocapture noundef %txq, ptr noundef %xdpf, i1 noundef zeroext %dma_map) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %count = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 2
  %0 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count, align 4
  %tx_stop_threshold = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 4
  %2 = ptrtoint ptr %tx_stop_threshold to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tx_stop_threshold, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp slt i32 %1, %3
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %next_desc_to_proc.i = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 13
  %4 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %next_desc_to_proc.i, align 4
  %last_desc.i = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 12
  %6 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %last_desc.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp.i = icmp slt i32 %5, %7
  %add.i = add i32 %5, 1
  %spec.select.i = select i1 %cmp.i, i32 %add.i, i32 0
  %8 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %spec.select.i, ptr %next_desc_to_proc.i, align 4
  %descs.i = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 10
  %9 = ptrtoint ptr %descs.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %descs.i, align 4
  %add.ptr.i = getelementptr %struct.mvneta_tx_desc, ptr %10, i32 %5
  %buf1 = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 6
  %11 = ptrtoint ptr %buf1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %buf1, align 4
  %txq_put_index = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 7
  %13 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %txq_put_index, align 4
  %arrayidx = getelementptr %struct.mvneta_tx_buf, ptr %12, i32 %14
  br i1 %dma_map, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %15 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev, align 8
  %parent = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 133, i32 1
  %17 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %parent, align 8
  %19 = ptrtoint ptr %xdpf to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %xdpf, align 4
  %len = getelementptr inbounds %struct.xdp_frame, ptr %xdpf, i32 0, i32 1
  %21 = ptrtoint ptr %len to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %len, align 4
  %call.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %20) #20
  br i1 %call.i, label %land.rhs.i, label %if.end39.i

land.rhs.i:                                       ; preds = %if.then2
  %.b1.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.dma_map_single_attrs.exit_crit_edge, label %if.then.i, !prof !257

land.rhs.i.dma_map_single_attrs.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dma_map_single_attrs.exit

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i = tail call ptr @dev_driver_string(ptr noundef %18) #20
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 3
  %23 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %24, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.dev_name.exit.i_crit_edge

if.then.i.dev_name.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %25 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %18, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %26, %if.end.i.i ], [ %24, %if.then.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.50, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.51, ptr noundef %call16.i, ptr noundef %retval.0.i.i) #20
  br label %dma_map_single_attrs.exit

if.end39.i:                                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #22
  %conv = zext i16 %22 to i32
  tail call void @debug_dma_map_single(ptr noundef %18, ptr noundef %20, i32 noundef %conv) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %27 = load ptr, ptr @mem_map, align 4
  %28 = ptrtoint ptr %20 to i32
  %sub.i = add i32 %28, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  %add.ptr.i52 = getelementptr %struct.page, ptr %27, i32 %shr.i
  %and.i = and i32 %28, 4095
  %call41.i = tail call i32 @dma_map_page_attrs(ptr noundef %18, ptr noundef %add.ptr.i52, i32 noundef %and.i, i32 noundef %conv, i32 noundef 1, i32 noundef 0) #20
  br label %dma_map_single_attrs.exit

dma_map_single_attrs.exit:                        ; preds = %if.end39.i, %dev_name.exit.i, %land.rhs.i.dma_map_single_attrs.exit_crit_edge
  %retval.0.i = phi i32 [ %call41.i, %if.end39.i ], [ -1, %dev_name.exit.i ], [ -1, %land.rhs.i.dma_map_single_attrs.exit_crit_edge ]
  %29 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %dev, align 8
  %parent7 = getelementptr inbounds %struct.net_device, ptr %30, i32 0, i32 133, i32 1
  %31 = ptrtoint ptr %parent7 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %parent7, align 8
  tail call void @debug_dma_mapping_error(ptr noundef %32, i32 noundef %retval.0.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i)
  %cmp.i53 = icmp eq i32 %retval.0.i, -1
  br i1 %cmp.i53, label %if.then10, label %dma_map_single_attrs.exit.if.end24_crit_edge

dma_map_single_attrs.exit.if.end24_crit_edge:     ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.then10:                                        ; preds = %dma_map_single_attrs.exit
  %33 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %next_desc_to_proc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp.i55 = icmp eq i32 %34, 0
  br i1 %cmp.i55, label %if.then.i57, label %if.then10.mvneta_txq_desc_put.exit_crit_edge

if.then10.mvneta_txq_desc_put.exit_crit_edge:     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_txq_desc_put.exit

if.then.i57:                                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  %35 = ptrtoint ptr %last_desc.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %last_desc.i, align 4
  br label %mvneta_txq_desc_put.exit

mvneta_txq_desc_put.exit:                         ; preds = %if.then.i57, %if.then10.mvneta_txq_desc_put.exit_crit_edge
  %storemerge.in.i = phi i32 [ %36, %if.then.i57 ], [ %34, %if.then10.mvneta_txq_desc_put.exit_crit_edge ]
  %storemerge.i = add i32 %storemerge.in.i, -1
  %37 = ptrtoint ptr %next_desc_to_proc.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %storemerge.i, ptr %next_desc_to_proc.i, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %38 = load ptr, ptr @mem_map, align 4
  %39 = ptrtoint ptr %xdpf to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %xdpf, align 4
  %41 = ptrtoint ptr %40 to i32
  %sub = add i32 %41, 1073741824
  %shr = lshr i32 %sub, 12
  %dma_addr.i = getelementptr %struct.page, ptr %38, i32 %shr, i32 1, i32 0, i32 2
  %42 = ptrtoint ptr %dma_addr.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %dma_addr.i, align 4
  %add15 = add i32 %43, 24
  %headroom = getelementptr inbounds %struct.xdp_frame, ptr %xdpf, i32 0, i32 2
  %44 = ptrtoint ptr %headroom to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %headroom, align 2
  %conv16 = zext i16 %45 to i32
  %add17 = add i32 %add15, %conv16
  %dev18 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %46 = ptrtoint ptr %dev18 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %dev18, align 8
  %parent20 = getelementptr inbounds %struct.net_device, ptr %47, i32 0, i32 133, i32 1
  %48 = ptrtoint ptr %parent20 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %parent20, align 8
  %len21 = getelementptr inbounds %struct.xdp_frame, ptr %xdpf, i32 0, i32 1
  %50 = ptrtoint ptr %len21 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %len21, align 4
  %conv22 = zext i16 %51 to i32
  tail call void @dma_sync_single_for_device(ptr noundef %49, i32 noundef %add17, i32 noundef %conv22, i32 noundef 0) #20
  br label %if.end24

if.end24:                                         ; preds = %if.else, %dma_map_single_attrs.exit.if.end24_crit_edge
  %storemerge = phi i32 [ 1, %if.else ], [ 2, %dma_map_single_attrs.exit.if.end24_crit_edge ]
  %dma_addr.0 = phi i32 [ %add17, %if.else ], [ %retval.0.i, %dma_map_single_attrs.exit.if.end24_crit_edge ]
  %52 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %storemerge, ptr %arrayidx, align 4
  %53 = getelementptr %struct.mvneta_tx_buf, ptr %12, i32 %14, i32 1
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %xdpf, ptr %53, align 4
  %command = getelementptr %struct.mvneta_tx_desc, ptr %10, i32 %5, i32 2
  %55 = ptrtoint ptr %command to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 3670016, ptr %command, align 4
  %buf_phys_addr = getelementptr %struct.mvneta_tx_desc, ptr %10, i32 %5, i32 4
  %56 = ptrtoint ptr %buf_phys_addr to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %dma_addr.0, ptr %buf_phys_addr, align 4
  %len25 = getelementptr inbounds %struct.xdp_frame, ptr %xdpf, i32 0, i32 1
  %57 = ptrtoint ptr %len25 to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %len25, align 4
  %59 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 %58, ptr %add.ptr.i, align 4
  %60 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %txq_put_index, align 4
  %inc.i = add i32 %61, 1
  %size.i = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 1
  %62 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %size.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %63)
  %cmp.i58 = icmp eq i32 %inc.i, %63
  %spec.store.select.i = select i1 %cmp.i58, i32 0, i32 %inc.i
  %64 = ptrtoint ptr %txq_put_index to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %spec.store.select.i, ptr %txq_put_index, align 4
  %pending = getelementptr inbounds %struct.mvneta_tx_queue, ptr %txq, i32 0, i32 3
  %65 = ptrtoint ptr %pending to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %pending, align 4
  %inc = add i32 %66, 1
  store i32 %inc, ptr %pending, align 4
  %67 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %count, align 4
  %inc27 = add i32 %68, 1
  store i32 %inc27, ptr %count, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %mvneta_txq_desc_put.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %mvneta_txq_desc_put.exit ], [ 2, %if.end24 ], [ 1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_device(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_ethtool_get_drvinfo(ptr nocapture noundef readonly %dev, ptr noundef %drvinfo) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, ptr %drvinfo, i32 0, i32 1
  %call = tail call i32 @strlcpy(ptr noundef %driver, ptr noundef nonnull @.str.3, i32 noundef 32) #20
  %version = getelementptr inbounds %struct.ethtool_drvinfo, ptr %drvinfo, i32 0, i32 2
  %call2 = tail call i32 @strlcpy(ptr noundef %version, ptr noundef nonnull @.str.69, i32 noundef 32) #20
  %init_name.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133, i32 3
  %0 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.dev_name.exit_crit_edge

entry.dev_name.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %dev_name.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %dev4 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  %2 = ptrtoint ptr %dev4 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev4, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %entry.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %3, %if.end.i ], [ %1, %entry.dev_name.exit_crit_edge ]
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, ptr %drvinfo, i32 0, i32 4
  %call6 = tail call i32 @strlcpy(ptr noundef %bus_info, ptr noundef %retval.0.i, i32 noundef 32) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_ethtool_get_wol(ptr nocapture noundef readonly %dev, ptr noundef %wol) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %dev, i32 2924
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 4
  tail call void @phylink_ethtool_get_wol(ptr noundef %1, ptr noundef %wol) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_set_wol(ptr noundef %dev, ptr noundef %wol) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %dev, i32 2924
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 4
  %call1 = tail call i32 @phylink_ethtool_set_wol(ptr noundef %1, ptr noundef %wol) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %dev2 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, ptr %wol, i32 0, i32 2
  %2 = ptrtoint ptr %wolopts to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %wolopts, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool3 = icmp ne i32 %3, 0
  %call5 = tail call i32 @device_set_wakeup_enable(ptr noundef %dev2, i1 noundef zeroext %tobool3) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_nway_reset(ptr nocapture noundef readonly %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %dev, i32 2924
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 4
  %call1 = tail call i32 @phylink_ethtool_nway_reset(ptr noundef %1) #20
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ethtool_op_get_link(ptr noundef) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mvneta_ethtool_get_coalesce(ptr nocapture noundef readonly %dev, ptr nocapture noundef writeonly %c, ptr nocapture noundef readnone %kernel_coal, ptr nocapture noundef readnone %extack) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %rxqs = getelementptr i8, ptr %dev, i32 2328
  %0 = ptrtoint ptr %rxqs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rxqs, align 8
  %time_coal = getelementptr inbounds %struct.mvneta_rx_queue, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %time_coal to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %time_coal, align 4
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, ptr %c, i32 0, i32 1
  %4 = ptrtoint ptr %rx_coalesce_usecs to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %rx_coalesce_usecs, align 4
  %5 = load ptr, ptr %rxqs, align 8
  %pkts_coal = getelementptr inbounds %struct.mvneta_rx_queue, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %pkts_coal to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pkts_coal, align 8
  %rx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, ptr %c, i32 0, i32 2
  %8 = ptrtoint ptr %rx_max_coalesced_frames to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %rx_max_coalesced_frames, align 4
  %txqs = getelementptr i8, ptr %dev, i32 2332
  %9 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %txqs, align 4
  %done_pkts_coal = getelementptr inbounds %struct.mvneta_tx_queue, ptr %10, i32 0, i32 9
  %11 = ptrtoint ptr %done_pkts_coal to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %done_pkts_coal, align 4
  %tx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, ptr %c, i32 0, i32 6
  %13 = ptrtoint ptr %tx_max_coalesced_frames to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %tx_max_coalesced_frames, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_set_coalesce(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %c, ptr nocapture noundef readnone %kernel_coal, ptr nocapture noundef readnone %extack) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp39 = icmp sgt i32 %0, 0
  br i1 %cmp39, label %for.body.lr.ph, label %entry.for.cond3.preheader_crit_edge

entry.for.cond3.preheader_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond3.preheader

for.body.lr.ph:                                   ; preds = %entry
  %rxqs = getelementptr i8, ptr %dev, i32 2328
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, ptr %c, i32 0, i32 1
  %rx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, ptr %c, i32 0, i32 2
  %base.i.i = getelementptr i8, ptr %dev, i32 2324
  %clk.i = getelementptr i8, ptr %dev, i32 2644
  br label %for.body

for.cond3.preheader:                              ; preds = %for.body.for.cond3.preheader_crit_edge, %entry.for.cond3.preheader_crit_edge
  %1 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp441 = icmp sgt i32 %1, 0
  br i1 %cmp441, label %for.body5.lr.ph, label %for.cond3.preheader.for.end10_crit_edge

for.cond3.preheader.for.end10_crit_edge:          ; preds = %for.cond3.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end10

for.body5.lr.ph:                                  ; preds = %for.cond3.preheader
  %txqs = getelementptr i8, ptr %dev, i32 2332
  %tx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, ptr %c, i32 0, i32 6
  %base.i.i37 = getelementptr i8, ptr %dev, i32 2324
  br label %for.body5

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %queue.040 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %2 = ptrtoint ptr %rxqs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rxqs, align 8
  %arrayidx = getelementptr %struct.mvneta_rx_queue, ptr %3, i32 %queue.040
  %4 = ptrtoint ptr %rx_coalesce_usecs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rx_coalesce_usecs, align 4
  %time_coal = getelementptr %struct.mvneta_rx_queue, ptr %3, i32 %queue.040, i32 3
  %6 = ptrtoint ptr %time_coal to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %time_coal, align 4
  %7 = ptrtoint ptr %rx_max_coalesced_frames to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rx_max_coalesced_frames, align 4
  %pkts_coal = getelementptr %struct.mvneta_rx_queue, ptr %3, i32 %queue.040, i32 2
  %9 = ptrtoint ptr %pkts_coal to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %pkts_coal, align 8
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx, align 128
  %conv.i = zext i8 %11 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 2
  %add.i = add nuw nsw i32 %shl.i, 5312
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %12 = tail call i32 @llvm.bswap.i32(i32 %8) #20
  %13 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %14, i32 %add.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %12) #20, !srcloc !256
  %15 = ptrtoint ptr %time_coal to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %time_coal, align 4
  %17 = ptrtoint ptr %clk.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %clk.i, align 4
  %call.i = tail call i32 @clk_get_rate(ptr noundef %18) #20
  %div.i = udiv i32 %call.i, 1000000
  %mul.i = mul i32 %div.i, %16
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx, align 128
  %conv.i29 = zext i8 %20 to i32
  %shl.i30 = shl nuw nsw i32 %conv.i29, 2
  %add.i31 = add nuw nsw i32 %shl.i30, 9600
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %21 = tail call i32 @llvm.bswap.i32(i32 %mul.i) #20
  %22 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i33 = getelementptr i8, ptr %23, i32 %add.i31
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i33, i32 %21) #20, !srcloc !256
  %inc = add nuw nsw i32 %queue.040, 1
  %24 = load i32, ptr @rxq_number, align 4
  %cmp = icmp slt i32 %inc, %24
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.cond3.preheader_crit_edge

for.body.for.cond3.preheader_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond3.preheader

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.body5:                                        ; preds = %for.body5.for.body5_crit_edge, %for.body5.lr.ph
  %queue.142 = phi i32 [ 0, %for.body5.lr.ph ], [ %inc9, %for.body5.for.body5_crit_edge ]
  %25 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %txqs, align 4
  %arrayidx6 = getelementptr %struct.mvneta_tx_queue, ptr %26, i32 %queue.142
  %27 = ptrtoint ptr %tx_max_coalesced_frames to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %tx_max_coalesced_frames, align 4
  %done_pkts_coal = getelementptr %struct.mvneta_tx_queue, ptr %26, i32 %queue.142, i32 9
  %29 = ptrtoint ptr %done_pkts_coal to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %done_pkts_coal, align 4
  %30 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx6, align 4
  %conv.i34 = zext i8 %31 to i32
  %shl.i35 = shl nuw nsw i32 %conv.i34, 2
  %add.i36 = add nuw nsw i32 %shl.i35, 15392
  %32 = ptrtoint ptr %base.i.i37 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %base.i.i37, align 4
  %add.ptr.i.i38 = getelementptr i8, ptr %33, i32 %add.i36
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i38) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %35 = and i32 %34, -65344
  %36 = tail call i32 @llvm.bswap.i32(i32 %35) #20
  %shl1.i = shl i32 %28, 16
  %or.i = or i32 %36, %shl1.i
  %37 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %arrayidx6, align 4
  %conv3.i = zext i8 %38 to i32
  %shl4.i = shl nuw nsw i32 %conv3.i, 2
  %add5.i = add nuw nsw i32 %shl4.i, 15392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %39 = tail call i32 @llvm.bswap.i32(i32 %or.i) #20
  %40 = ptrtoint ptr %base.i.i37 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %base.i.i37, align 4
  %add.ptr.i11.i = getelementptr i8, ptr %41, i32 %add5.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11.i, i32 %39) #20, !srcloc !256
  %inc9 = add nuw nsw i32 %queue.142, 1
  %42 = load i32, ptr @txq_number, align 4
  %cmp4 = icmp slt i32 %inc9, %42
  br i1 %cmp4, label %for.body5.for.body5_crit_edge, label %for.body5.for.end10_crit_edge

for.body5.for.end10_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end10

for.body5.for.body5_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body5

for.end10:                                        ; preds = %for.body5.for.end10_crit_edge, %for.cond3.preheader.for.end10_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mvneta_ethtool_get_ringparam(ptr nocapture noundef readonly %netdev, ptr nocapture noundef writeonly %ring, ptr nocapture noundef readnone %kernel_ring, ptr nocapture noundef readnone %extack) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %rx_max_pending to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 512, ptr %rx_max_pending, align 4
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 4
  %1 = ptrtoint ptr %tx_max_pending to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1024, ptr %tx_max_pending, align 4
  %rx_ring_size = getelementptr i8, ptr %netdev, i32 2910
  %2 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %rx_ring_size, align 2
  %conv = zext i16 %3 to i32
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 5
  %4 = ptrtoint ptr %rx_pending to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %conv, ptr %rx_pending, align 4
  %tx_ring_size = getelementptr i8, ptr %netdev, i32 2908
  %5 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tx_ring_size, align 4
  %conv1 = zext i16 %6 to i32
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 8
  %7 = ptrtoint ptr %tx_pending to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv1, ptr %tx_pending, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_set_ringparam(ptr noundef %dev, ptr nocapture noundef readonly %ring, ptr nocapture noundef readnone %kernel_ring, ptr nocapture noundef readnone %extack) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 5
  %0 = ptrtoint ptr %rx_pending to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rx_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 8
  %2 = ptrtoint ptr %tx_pending to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tx_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1 = icmp eq i32 %3, 0
  br i1 %cmp1, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %4 = tail call i32 @llvm.umin.i32(i32 %1, i32 512)
  %5 = trunc i32 %4 to i16
  %rx_ring_size = getelementptr i8, ptr %dev, i32 2910
  %6 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %5, ptr %rx_ring_size, align 2
  %7 = ptrtoint ptr %tx_pending to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %tx_pending, align 4
  %conv7 = and i32 %8, 65535
  %9 = tail call i32 @llvm.umax.i32(i32 %conv7, i32 434)
  %10 = tail call i32 @llvm.umin.i32(i32 %9, i32 1024)
  %conv29 = trunc i32 %10 to i16
  %tx_ring_size = getelementptr i8, ptr %dev, i32 2908
  %11 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %conv29, ptr %tx_ring_size, align 4
  %12 = ptrtoint ptr %tx_pending to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tx_pending, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %13)
  %cmp33.not = icmp eq i32 %10, %13
  br i1 %cmp33.not, label %if.end.if.end39_crit_edge, label %if.then35

if.end.if.end39_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end39

if.then35:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %dev, ptr noundef nonnull @.str.70, i32 noundef %10, i32 noundef %13) #24
  br label %if.end39

if.end39:                                         ; preds = %if.then35, %if.end.if.end39_crit_edge
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %14 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end39.cleanup_crit_edge, label %if.then41

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then41:                                        ; preds = %if.end39
  %call42 = tail call i32 @mvneta_stop(ptr noundef %dev)
  %call43 = tail call i32 @mvneta_open(ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool.not = icmp eq i32 %call43, 0
  br i1 %tobool.not, label %if.then41.cleanup_crit_edge, label %if.then44

if.then41.cleanup_crit_edge:                      ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then44:                                        ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.71) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then44, %if.then41.cleanup_crit_edge, %if.end39.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then44 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ 0, %if.then41.cleanup_crit_edge ], [ 0, %if.end39.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_ethtool_get_pauseparam(ptr nocapture noundef readonly %dev, ptr noundef %pause) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %dev, i32 2924
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 4
  tail call void @phylink_ethtool_get_pauseparam(ptr noundef %1, ptr noundef %pause) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_set_pauseparam(ptr nocapture noundef readonly %dev, ptr noundef %pause) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %dev, i32 2924
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 4
  %call1 = tail call i32 @phylink_ethtool_set_pauseparam(ptr noundef %1, ptr noundef %pause) #20
  ret i32 %call1
}

; Function Attrs: argmemonly nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_ethtool_get_strings(ptr nocapture noundef readnone %netdev, i32 noundef %sset, ptr nocapture noundef writeonly %data) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sset)
  %cmp = icmp eq i32 %sset, 1
  br i1 %cmp, label %entry.for.body_crit_edge, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.05 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %mul = shl nuw nsw i32 %i.05, 5
  %add.ptr = getelementptr i8, ptr %data, i32 %mul
  %name = getelementptr [42 x %struct.mvneta_statistic], ptr @mvneta_statistics, i32 0, i32 %i.05, i32 2
  %0 = call ptr @memcpy(ptr %add.ptr, ptr %name, i32 32)
  %inc = add nuw nsw i32 %i.05, 1
  %exitcond.not = icmp eq i32 %inc, 42
  br i1 %exitcond.not, label %for.body.if.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %for.body.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_ethtool_get_stats(ptr nocapture noundef %dev, ptr nocapture noundef readnone %stats, ptr nocapture noundef writeonly %data) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %base1.i = getelementptr i8, ptr %dev, i32 2324
  %0 = ptrtoint ptr %base1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base1.i, align 4
  %call86.i.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call86.i.i, i32 %2)
  %cmp87.i.i = icmp ult i32 %call86.i.i, %2
  br i1 %cmp87.i.i, label %for.body.lr.ph.i.i, label %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge

entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_ethtool_update_pcpu_stats.exit.i

for.body.lr.ph.i.i:                               ; preds = %entry
  %stats1.i.i = getelementptr i8, ptr %dev, i32 2312
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %do.end32.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %stats.sroa.3.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add39.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %stats.sroa.6.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add42.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %stats.sroa.9.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add45.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %stats.sroa.12.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add48.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %stats.sroa.15.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add51.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %stats.sroa.18.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add54.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %stats.sroa.21.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add57.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %stats.sroa.24.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add34.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %stats.sroa.27.0.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add36.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %call88.i.i = phi i32 [ %call86.i.i, %for.body.lr.ph.i.i ], [ %call.i.i, %do.end32.i.i.for.body.i.i_crit_edge ]
  %3 = ptrtoint ptr %stats1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %stats1.i.i, align 8
  %5 = ptrtoint ptr %4 to i32
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call88.i.i
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %7, %5
  %8 = inttoptr i32 %add.i.i to ptr
  %skb_alloc_error6.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 1
  %refill_error8.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 2
  %xdp_redirect10.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 0, i32 4
  %xdp_pass13.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 0, i32 5
  %xdp_drop16.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 0, i32 6
  %xdp_xmit19.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 0, i32 7
  %xdp_xmit_err22.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 0, i32 8
  %xdp_tx25.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 0, i32 9
  %xdp_tx_err28.i.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %8, i32 0, i32 1, i32 0, i32 10
  br label %do.body3.i.i

do.body3.i.i:                                     ; preds = %do.body3.i.i.do.body3.i.i_crit_edge, %for.body.i.i
  %call4.i.i = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %8) #20
  %9 = ptrtoint ptr %skb_alloc_error6.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %skb_alloc_error6.i.i, align 8
  %11 = ptrtoint ptr %refill_error8.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %refill_error8.i.i, align 8
  %13 = ptrtoint ptr %xdp_redirect10.i.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %xdp_redirect10.i.i, align 8
  %15 = ptrtoint ptr %xdp_pass13.i.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %xdp_pass13.i.i, align 8
  %17 = ptrtoint ptr %xdp_drop16.i.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %xdp_drop16.i.i, align 8
  %19 = ptrtoint ptr %xdp_xmit19.i.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %xdp_xmit19.i.i, align 8
  %21 = ptrtoint ptr %xdp_xmit_err22.i.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %xdp_xmit_err22.i.i, align 8
  %23 = ptrtoint ptr %xdp_tx25.i.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %xdp_tx25.i.i, align 8
  %25 = ptrtoint ptr %xdp_tx_err28.i.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %xdp_tx_err28.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !271
  %27 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %8, align 4
  %cmp.i.i.i.i.not.i.i = icmp eq i32 %28, %call4.i.i
  br i1 %cmp.i.i.i.i.not.i.i, label %do.end32.i.i, label %do.body3.i.i.do.body3.i.i_crit_edge

do.body3.i.i.do.body3.i.i_crit_edge:              ; preds = %do.body3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body3.i.i

do.end32.i.i:                                     ; preds = %do.body3.i.i
  %add34.i.i = add i64 %10, %stats.sroa.24.0.i
  %add36.i.i = add i64 %12, %stats.sroa.27.0.i
  %add39.i.i = add i64 %14, %stats.sroa.3.0.i
  %add42.i.i = add i64 %16, %stats.sroa.6.0.i
  %add45.i.i = add i64 %18, %stats.sroa.9.0.i
  %add48.i.i = add i64 %20, %stats.sroa.12.0.i
  %add51.i.i = add i64 %22, %stats.sroa.15.0.i
  %add54.i.i = add i64 %24, %stats.sroa.18.0.i
  %add57.i.i = add i64 %26, %stats.sroa.21.0.i
  %call.i.i = tail call i32 @cpumask_next(i32 noundef %call88.i.i, ptr noundef nonnull @__cpu_possible_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %29 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i.i = icmp ult i32 %call.i.i, %29
  br i1 %cmp.i.i, label %do.end32.i.i.for.body.i.i_crit_edge, label %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge

do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge: ; preds = %do.end32.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mvneta_ethtool_update_pcpu_stats.exit.i

do.end32.i.i.for.body.i.i_crit_edge:              ; preds = %do.end32.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i.i

mvneta_ethtool_update_pcpu_stats.exit.i:          ; preds = %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge
  %stats.sroa.3.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add39.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %stats.sroa.6.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add42.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %stats.sroa.9.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add45.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %stats.sroa.12.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add48.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %stats.sroa.15.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add51.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %stats.sroa.18.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add54.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %stats.sroa.21.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add57.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %stats.sroa.24.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add34.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %stats.sroa.27.1.i = phi i64 [ 0, %entry.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ], [ %add36.i.i, %do.end32.i.i.mvneta_ethtool_update_pcpu_stats.exit.i_crit_edge ]
  %phylink.i = getelementptr i8, ptr %dev, i32 2924
  %add.ptr14.i = getelementptr i8, ptr %1, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %mvneta_ethtool_update_pcpu_stats.exit.i
  %s.0129.i = phi ptr [ @mvneta_statistics, %mvneta_ethtool_update_pcpu_stats.exit.i ], [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ]
  %i.0127.i = phi i32 [ 0, %mvneta_ethtool_update_pcpu_stats.exit.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %type.i = getelementptr inbounds %struct.mvneta_statistic, ptr %s.0129.i, i32 0, i32 1
  %30 = ptrtoint ptr %type.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %type.i, align 2
  %32 = zext i16 %31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.100)
  switch i16 %31, label %for.body.i.for.inc.i_crit_edge [
    i16 32, label %sw.bb.i
    i16 64, label %sw.bb4.i
    i16 1, label %sw.bb23.i
  ]

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc.i

sw.bb.i:                                          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %33 = ptrtoint ptr %s.0129.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %s.0129.i, align 2
  %conv2.i = zext i16 %34 to i32
  %add.ptr.i4 = getelementptr i8, ptr %1, i32 %conv2.i
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i4) #20, !srcloc !258
  %36 = tail call i32 @llvm.bswap.i32(i32 %35) #20
  %conv3.i = zext i32 %36 to i64
  %arrayidx.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %37 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %arrayidx.i, align 8
  %add.i = add i64 %38, %conv3.i
  store i64 %add.i, ptr %arrayidx.i, align 8
  br label %for.inc.i

sw.bb4.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %39 = ptrtoint ptr %s.0129.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %s.0129.i, align 2
  %conv7.i = zext i16 %40 to i32
  %add.ptr8.i = getelementptr i8, ptr %1, i32 %conv7.i
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr8.i) #20, !srcloc !258
  %42 = ptrtoint ptr %s.0129.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %s.0129.i, align 2
  %conv13.i = zext i16 %43 to i32
  %add.ptr15.i = getelementptr i8, ptr %add.ptr14.i, i32 %conv13.i
  %44 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15.i) #20, !srcloc !258
  %45 = zext i32 %44 to i64
  %46 = zext i32 %41 to i64
  %47 = shl nuw i64 %46, 32
  %48 = or i64 %47, %45
  %49 = tail call i64 @llvm.bswap.i64(i64 %48) #20
  %arrayidx21.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %50 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %arrayidx21.i, align 8
  %add22.i = add i64 %49, %51
  store i64 %add22.i, ptr %arrayidx21.i, align 8
  br label %for.inc.i

sw.bb23.i:                                        ; preds = %for.body.i
  %52 = ptrtoint ptr %s.0129.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %s.0129.i, align 2
  %54 = zext i16 %53 to i64
  call void @__sanitizer_cov_trace_switch(i64 %54, ptr @__sancov_gen_cov_switch_values.101)
  switch i16 %53, label %sw.bb23.i.for.inc.i_crit_edge [
    i16 0, label %sw.bb26.i
    i16 1, label %sw.bb32.i
    i16 2, label %sw.bb35.i
    i16 3, label %sw.bb38.i
    i16 4, label %sw.bb41.i
    i16 5, label %sw.bb45.i
    i16 6, label %sw.bb49.i
    i16 7, label %sw.bb53.i
    i16 8, label %sw.bb57.i
    i16 9, label %sw.bb61.i
  ]

sw.bb23.i.for.inc.i_crit_edge:                    ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc.i

sw.bb26.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %55 = ptrtoint ptr %phylink.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %phylink.i, align 4
  %call27.i = tail call i32 @phylink_get_eee_err(ptr noundef %56) #20
  %conv28.i = sext i32 %call27.i to i64
  %arrayidx30.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %57 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %arrayidx30.i, align 8
  %add31.i = add i64 %58, %conv28.i
  store i64 %add31.i, ptr %arrayidx30.i, align 8
  br label %for.inc.i

sw.bb32.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx34.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %59 = ptrtoint ptr %arrayidx34.i to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 %stats.sroa.24.1.i, ptr %arrayidx34.i, align 8
  br label %for.inc.i

sw.bb35.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx37.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %60 = ptrtoint ptr %arrayidx37.i to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %stats.sroa.27.1.i, ptr %arrayidx37.i, align 8
  br label %for.inc.i

sw.bb38.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx40.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %61 = ptrtoint ptr %arrayidx40.i to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 %stats.sroa.3.1.i, ptr %arrayidx40.i, align 8
  br label %for.inc.i

sw.bb41.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx44.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %62 = ptrtoint ptr %arrayidx44.i to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %stats.sroa.6.1.i, ptr %arrayidx44.i, align 8
  br label %for.inc.i

sw.bb45.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx48.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %63 = ptrtoint ptr %arrayidx48.i to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %stats.sroa.9.1.i, ptr %arrayidx48.i, align 8
  br label %for.inc.i

sw.bb49.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx52.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %64 = ptrtoint ptr %arrayidx52.i to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %stats.sroa.18.1.i, ptr %arrayidx52.i, align 8
  br label %for.inc.i

sw.bb53.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx56.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %65 = ptrtoint ptr %arrayidx56.i to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 %stats.sroa.21.1.i, ptr %arrayidx56.i, align 8
  br label %for.inc.i

sw.bb57.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx60.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %66 = ptrtoint ptr %arrayidx60.i to i32
  call void @__asan_store8_noabort(i32 %66)
  store i64 %stats.sroa.12.1.i, ptr %arrayidx60.i, align 8
  br label %for.inc.i

sw.bb61.i:                                        ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx64.i = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.0127.i
  %67 = ptrtoint ptr %arrayidx64.i to i32
  call void @__asan_store8_noabort(i32 %67)
  store i64 %stats.sroa.15.1.i, ptr %arrayidx64.i, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %sw.bb61.i, %sw.bb57.i, %sw.bb53.i, %sw.bb49.i, %sw.bb45.i, %sw.bb41.i, %sw.bb38.i, %sw.bb35.i, %sw.bb32.i, %sw.bb26.i, %sw.bb23.i.for.inc.i_crit_edge, %sw.bb4.i, %sw.bb.i, %for.body.i.for.inc.i_crit_edge
  %incdec.ptr.i = getelementptr %struct.mvneta_statistic, ptr %s.0129.i, i32 1
  %inc.i = add nuw nsw i32 %i.0127.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 42
  br i1 %exitcond.not.i, label %for.inc.i.for.body_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.inc.i.for.body_crit_edge:                     ; preds = %for.inc.i
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.inc.i.for.body_crit_edge
  %i.014 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.inc.i.for.body_crit_edge ]
  %data.addr.013 = phi ptr [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %data, %for.inc.i.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.mvneta_port, ptr %add.ptr.i, i32 0, i32 36, i32 %i.014
  %68 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %arrayidx, align 8
  %incdec.ptr = getelementptr i64, ptr %data.addr.013, i32 1
  %70 = ptrtoint ptr %data.addr.013 to i32
  call void @__asan_store8_noabort(i32 %70)
  store i64 %69, ptr %data.addr.013, align 8
  %inc = add nuw nsw i32 %i.014, 1
  %exitcond.not = icmp eq i32 %inc, 42
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mvneta_ethtool_get_sset_count(ptr nocapture noundef readnone %dev, i32 noundef %sset) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sset)
  %cmp = icmp eq i32 %sset, 1
  %. = select i1 %cmp, i32 42, i32 -95
  ret i32 %.
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mvneta_ethtool_get_rxnfc(ptr nocapture noundef readnone %dev, ptr nocapture noundef %info, ptr nocapture noundef readnone %rules) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %info, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 45, i32 %1)
  %cond = icmp eq i32 %1, 45
  br i1 %cond, label %sw.bb, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %2 = load i32, ptr @rxq_number, align 4
  %conv = sext i32 %2 to i64
  %data = getelementptr inbounds %struct.ethtool_rxnfc, ptr %info, i32 0, i32 2
  %3 = ptrtoint ptr %data to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %conv, ptr %data, align 8
  br label %return

return:                                           ; preds = %sw.bb, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %sw.bb ], [ -95, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mvneta_ethtool_get_rxfh_indir_size(ptr nocapture noundef readnone %dev) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 1
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mvneta_ethtool_get_rxfh(ptr nocapture noundef readonly %dev, ptr noundef writeonly %indir, ptr nocapture noundef readnone %key, ptr noundef writeonly %hfunc) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %neta_armada3700 = getelementptr i8, ptr %dev, i32 3324
  %0 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %hfunc, null
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %if.then2

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %2 = ptrtoint ptr %hfunc to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %hfunc, align 1
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end.if.end3_crit_edge
  %tobool4.not = icmp eq ptr %indir, null
  br i1 %tobool4.not, label %if.end3.cleanup_crit_edge, label %if.end6

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  %indir7 = getelementptr i8, ptr %dev, i32 3320
  %3 = ptrtoint ptr %indir7 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %indir7, align 8
  %5 = ptrtoint ptr %indir to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %4, ptr %indir, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -95, %entry.cleanup_crit_edge ], [ 0, %if.end3.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_set_rxfh(ptr noundef %dev, ptr noundef readonly %indir, ptr noundef readnone %key, i8 noundef zeroext %hfunc) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %neta_armada3700 = getelementptr i8, ptr %dev, i32 3324
  %0 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  %tobool1.not = icmp eq ptr %key, null
  %or.cond = and i1 %tobool1.not, %tobool.not
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %hfunc)
  %switch = icmp ult i8 %hfunc, 2
  %or.cond17 = and i1 %switch, %or.cond
  br i1 %or.cond17, label %if.end7, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end7:                                          ; preds = %entry
  %tobool8.not = icmp eq ptr %indir, null
  br i1 %tobool8.not, label %if.end7.cleanup_crit_edge, label %if.end10

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end10:                                         ; preds = %if.end7
  %indir11 = getelementptr i8, ptr %dev, i32 3320
  %2 = ptrtoint ptr %indir to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %indir, align 4
  %4 = ptrtoint ptr %indir11 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %3, ptr %indir11, align 8
  %dev.i = getelementptr i8, ptr %dev, i32 2336
  %5 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev.i, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %6) #20
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_mask_interrupt, ptr noundef %add.ptr.i, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  %7 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i, label %for.cond.preheader.i, label %if.else.i

for.cond.preheader.i:                             ; preds = %if.end10
  %call8.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call8.i, i32 %9)
  %cmp9.i = icmp ult i32 %call8.i, %9
  br i1 %cmp9.i, label %for.body.lr.ph.i, label %for.cond.preheader.i.if.end.i_crit_edge

for.cond.preheader.i.if.end.i_crit_edge:          ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %ports.i = getelementptr i8, ptr %dev, i32 2308
  br label %for.body.i

for.body.i:                                       ; preds = %napi_synchronize.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %call10.i = phi i32 [ %call8.i, %for.body.lr.ph.i ], [ %call.i, %napi_synchronize.exit.i.for.body.i_crit_edge ]
  %10 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ports.i, align 4
  %12 = ptrtoint ptr %11 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call10.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %14, %12
  %15 = inttoptr i32 %add.i to ptr
  %napi.i = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %15, i32 0, i32 1
  %state.i.i = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %15, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %state.i.i, align 4
  %and1.i1.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i1.i.i)
  %tobool.not2.i.i = icmp eq i32 %and1.i1.i.i, 0
  br i1 %tobool.not2.i.i, label %for.body.i.napi_synchronize.exit.i_crit_edge, label %for.body.i.while.body.i.i_crit_edge

for.body.i.while.body.i.i_crit_edge:              ; preds = %for.body.i
  br label %while.body.i.i

for.body.i.napi_synchronize.exit.i_crit_edge:     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_synchronize.exit.i

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %for.body.i.while.body.i.i_crit_edge
  tail call void @msleep(i32 noundef 1) #20
  %18 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %19, 1
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i.i, label %while.body.i.i.napi_synchronize.exit.i_crit_edge, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.i

while.body.i.i.napi_synchronize.exit.i_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_synchronize.exit.i

napi_synchronize.exit.i:                          ; preds = %while.body.i.i.napi_synchronize.exit.i_crit_edge, %for.body.i.napi_synchronize.exit.i_crit_edge
  tail call void @napi_disable(ptr noundef %napi.i) #20
  %call.i = tail call i32 @cpumask_next(i32 noundef %call10.i, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %20 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i = icmp ult i32 %call.i, %20
  br i1 %cmp.i, label %napi_synchronize.exit.i.for.body.i_crit_edge, label %napi_synchronize.exit.i.if.end.i_crit_edge

napi_synchronize.exit.i.if.end.i_crit_edge:       ; preds = %napi_synchronize.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

napi_synchronize.exit.i.for.body.i_crit_edge:     ; preds = %napi_synchronize.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

if.else.i:                                        ; preds = %if.end10
  %napi3.i = getelementptr i8, ptr %dev, i32 2416
  %state.i1.i = getelementptr i8, ptr %dev, i32 2424
  %21 = ptrtoint ptr %state.i1.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %state.i1.i, align 4
  %and1.i1.i2.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i1.i2.i)
  %tobool.not2.i3.i = icmp eq i32 %and1.i1.i2.i, 0
  br i1 %tobool.not2.i3.i, label %if.else.i.napi_synchronize.exit7.i_crit_edge, label %if.else.i.while.body.i6.i_crit_edge

if.else.i.while.body.i6.i_crit_edge:              ; preds = %if.else.i
  br label %while.body.i6.i

if.else.i.napi_synchronize.exit7.i_crit_edge:     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_synchronize.exit7.i

while.body.i6.i:                                  ; preds = %while.body.i6.i.while.body.i6.i_crit_edge, %if.else.i.while.body.i6.i_crit_edge
  tail call void @msleep(i32 noundef 1) #20
  %23 = ptrtoint ptr %state.i1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %state.i1.i, align 4
  %and1.i.i4.i = and i32 %24, 1
  %tobool.not.i5.i = icmp eq i32 %and1.i.i4.i, 0
  br i1 %tobool.not.i5.i, label %while.body.i6.i.napi_synchronize.exit7.i_crit_edge, label %while.body.i6.i.while.body.i6.i_crit_edge

while.body.i6.i.while.body.i6.i_crit_edge:        ; preds = %while.body.i6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i6.i

while.body.i6.i.napi_synchronize.exit7.i_crit_edge: ; preds = %while.body.i6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_synchronize.exit7.i

napi_synchronize.exit7.i:                         ; preds = %while.body.i6.i.napi_synchronize.exit7.i_crit_edge, %if.else.i.napi_synchronize.exit7.i_crit_edge
  tail call void @napi_disable(ptr noundef %napi3.i) #20
  br label %if.end.i

if.end.i:                                         ; preds = %napi_synchronize.exit7.i, %napi_synchronize.exit.i.if.end.i_crit_edge, %for.cond.preheader.i.if.end.i_crit_edge
  %25 = ptrtoint ptr %indir11 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %indir11, align 8
  %rxq_def.i = getelementptr i8, ptr %dev, i32 2356
  %27 = ptrtoint ptr %rxq_def.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %rxq_def.i, align 4
  %28 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev.i, align 8
  tail call void @mvneta_set_rx_mode(ptr noundef %29) #20
  %30 = ptrtoint ptr %rxq_def.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rxq_def.i, align 4
  %shl.i = shl i32 %31, 1
  %shl9.i = shl i32 %31, 4
  %shl11.i = shl i32 %31, 16
  %shl14.i = shl i32 %31, 19
  %shl17.i = shl i32 %31, 22
  %or.i = or i32 %shl.i, %shl9.i
  %or12.i = or i32 %or.i, %shl11.i
  %or15.i = or i32 %or12.i, %shl14.i
  %or18.i = or i32 %or15.i, %shl17.i
  %or20.i = or i32 %or18.i, 33558528
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %32 = tail call i32 @llvm.bswap.i32(i32 %or20.i) #20
  %base.i.i = getelementptr i8, ptr %dev, i32 2324
  %33 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %34, i32 9216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %32) #20, !srcloc !256
  %lock.i = getelementptr i8, ptr %dev, i32 2360
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #20
  tail call fastcc void @mvneta_percpu_elect(ptr noundef %add.ptr.i) #20
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #20
  %35 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool23.not.i = icmp eq i8 %36, 0
  br i1 %tobool23.not.i, label %for.cond25.preheader.i, label %if.else42.i

for.cond25.preheader.i:                           ; preds = %if.end.i
  %call2611.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %37 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call2611.i, i32 %37)
  %cmp2712.i = icmp ult i32 %call2611.i, %37
  br i1 %cmp2712.i, label %for.body28.lr.ph.i, label %for.cond25.preheader.i.if.end44.i_crit_edge

for.cond25.preheader.i.if.end44.i_crit_edge:      ; preds = %for.cond25.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44.i

for.body28.lr.ph.i:                               ; preds = %for.cond25.preheader.i
  %ports36.i = getelementptr i8, ptr %dev, i32 2308
  br label %for.body28.i

for.body28.i:                                     ; preds = %for.body28.i.for.body28.i_crit_edge, %for.body28.lr.ph.i
  %call2613.i = phi i32 [ %call2611.i, %for.body28.lr.ph.i ], [ %call26.i, %for.body28.i.for.body28.i_crit_edge ]
  %38 = ptrtoint ptr %ports36.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ports36.i, align 4
  %40 = ptrtoint ptr %39 to i32
  %arrayidx38.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call2613.i
  %41 = ptrtoint ptr %arrayidx38.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx38.i, align 4
  %add39.i = add i32 %42, %40
  %43 = inttoptr i32 %add39.i to ptr
  %napi40.i = getelementptr inbounds %struct.mvneta_pcpu_port, ptr %43, i32 0, i32 1
  tail call void @napi_enable(ptr noundef %napi40.i) #20
  %call26.i = tail call i32 @cpumask_next(i32 noundef %call2613.i, ptr noundef nonnull @__cpu_online_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %44 = load i32, ptr @nr_cpu_ids, align 4
  %cmp27.i = icmp ult i32 %call26.i, %44
  br i1 %cmp27.i, label %for.body28.i.for.body28.i_crit_edge, label %for.body28.i.if.end44.i_crit_edge

for.body28.i.if.end44.i_crit_edge:                ; preds = %for.body28.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44.i

for.body28.i.for.body28.i_crit_edge:              ; preds = %for.body28.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body28.i

if.else42.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %napi43.i = getelementptr i8, ptr %dev, i32 2416
  tail call void @napi_enable(ptr noundef %napi43.i) #20
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.else42.i, %for.body28.i.if.end44.i_crit_edge, %for.cond25.preheader.i.if.end44.i_crit_edge
  %45 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dev.i, align 8
  %num_tx_queues.i.i = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 104
  %47 = ptrtoint ptr %num_tx_queues.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %num_tx_queues.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp4.not.i.i = icmp eq i32 %48, 0
  br i1 %cmp4.not.i.i, label %if.end44.i.cleanup_crit_edge, label %for.body.lr.ph.i.i

if.end44.i.cleanup_crit_edge:                     ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.body.lr.ph.i.i:                               ; preds = %if.end44.i
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 103
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.05.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ]
  %49 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %_tx.i.i.i, align 128
  %state.i.i.i = getelementptr %struct.netdev_queue, ptr %50, i32 %i.05.i.i, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i.i) #20
  %inc.i.i = add nuw i32 %i.05.i.i, 1
  %51 = ptrtoint ptr %num_tx_queues.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %num_tx_queues.i.i, align 4
  %cmp.i.i = icmp ult i32 %inc.i.i, %52
  br i1 %cmp.i.i, label %for.body.i.i.for.body.i.i_crit_edge, label %for.body.i.i.cleanup_crit_edge

for.body.i.i.cleanup_crit_edge:                   ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i.i

cleanup:                                          ; preds = %for.body.i.i.cleanup_crit_edge, %if.end44.i.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %entry.cleanup_crit_edge ], [ 0, %if.end7.cleanup_crit_edge ], [ 0, %if.end44.i.cleanup_crit_edge ], [ 0, %for.body.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_get_eee(ptr nocapture noundef readonly %dev, ptr noundef %eee) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %base.i = getelementptr i8, ptr %dev, i32 2324
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i18 = getelementptr i8, ptr %1, i32 11456
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i18) #20, !srcloc !258
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %eee_enabled = getelementptr i8, ptr %dev, i32 2980
  %4 = ptrtoint ptr %eee_enabled to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %eee_enabled, align 4, !range !254
  %6 = zext i8 %5 to i32
  %eee_enabled2 = getelementptr inbounds %struct.ethtool_eee, ptr %eee, i32 0, i32 5
  %7 = ptrtoint ptr %eee_enabled2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %eee_enabled2, align 4
  %eee_active = getelementptr i8, ptr %dev, i32 2981
  %8 = ptrtoint ptr %eee_active to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %eee_active, align 1, !range !254
  %10 = zext i8 %9 to i32
  %eee_active5 = getelementptr inbounds %struct.ethtool_eee, ptr %eee, i32 0, i32 4
  %11 = ptrtoint ptr %eee_active5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %eee_active5, align 4
  %tx_lpi_enabled = getelementptr i8, ptr %dev, i32 2982
  %12 = ptrtoint ptr %tx_lpi_enabled to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %tx_lpi_enabled, align 2, !range !254
  %14 = zext i8 %13 to i32
  %tx_lpi_enabled8 = getelementptr inbounds %struct.ethtool_eee, ptr %eee, i32 0, i32 6
  %15 = ptrtoint ptr %tx_lpi_enabled8 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %tx_lpi_enabled8, align 4
  %shr = lshr i32 %3, 8
  %tx_lpi_timer = getelementptr inbounds %struct.ethtool_eee, ptr %eee, i32 0, i32 7
  %16 = ptrtoint ptr %tx_lpi_timer to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %shr, ptr %tx_lpi_timer, align 4
  %phylink = getelementptr i8, ptr %dev, i32 2924
  %17 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %phylink, align 4
  %call9 = tail call i32 @phylink_ethtool_get_eee(ptr noundef %18, ptr noundef %eee) #20
  ret i32 %call9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_set_eee(ptr nocapture noundef %dev, ptr noundef %eee) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tx_lpi_enabled = getelementptr inbounds %struct.ethtool_eee, ptr %eee, i32 0, i32 6
  %0 = ptrtoint ptr %tx_lpi_enabled to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tx_lpi_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %tx_lpi_timer = getelementptr inbounds %struct.ethtool_eee, ptr %eee, i32 0, i32 7
  %2 = ptrtoint ptr %tx_lpi_timer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tx_lpi_timer, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %3)
  %cmp = icmp ugt i32 %3, 255
  br i1 %cmp, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %base.i = getelementptr i8, ptr %dev, i32 2324
  %4 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %base.i, align 4
  %add.ptr.i29 = getelementptr i8, ptr %5, i32 11456
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i29) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %7 = and i32 %6, -16711681
  %8 = tail call i32 @llvm.bswap.i32(i32 %7)
  %tx_lpi_timer2 = getelementptr inbounds %struct.ethtool_eee, ptr %eee, i32 0, i32 7
  %9 = ptrtoint ptr %tx_lpi_timer2 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %tx_lpi_timer2, align 4
  %shl = shl i32 %10, 8
  %or = or i32 %shl, %8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %11 = tail call i32 @llvm.bswap.i32(i32 %or) #20
  %12 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %base.i, align 4
  %add.ptr.i31 = getelementptr i8, ptr %13, i32 11456
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i31, i32 %11) #20, !srcloc !256
  %eee_enabled = getelementptr inbounds %struct.ethtool_eee, ptr %eee, i32 0, i32 5
  %14 = ptrtoint ptr %eee_enabled to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %eee_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool3 = icmp ne i32 %15, 0
  %eee_enabled4 = getelementptr i8, ptr %dev, i32 2980
  %frombool = zext i1 %tobool3 to i8
  %16 = ptrtoint ptr %eee_enabled4 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %frombool, ptr %eee_enabled4, align 4
  %17 = ptrtoint ptr %tx_lpi_enabled to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %tx_lpi_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool6 = icmp ne i32 %18, 0
  %tx_lpi_enabled7 = getelementptr i8, ptr %dev, i32 2982
  %frombool8 = zext i1 %tobool6 to i8
  %19 = ptrtoint ptr %tx_lpi_enabled7 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %frombool8, ptr %tx_lpi_enabled7, align 2
  %20 = ptrtoint ptr %tx_lpi_enabled to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %tx_lpi_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool10.not = icmp eq i32 %21, 0
  br i1 %tobool10.not, label %if.end.land.end_crit_edge, label %land.rhs

if.end.land.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

land.rhs:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %22 = ptrtoint ptr %eee_enabled to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %eee_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool12 = icmp ne i32 %23, 0
  %phi.cast = zext i1 %tobool12 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.land.end_crit_edge
  %24 = phi i32 [ 0, %if.end.land.end_crit_edge ], [ %phi.cast, %land.rhs ]
  %25 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %26, i32 11460
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %28 = and i32 %27, -16777217
  %29 = tail call i32 @llvm.bswap.i32(i32 %28) #20
  %lpi_ctl1.0.i = or i32 %29, %24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %30 = tail call i32 @llvm.bswap.i32(i32 %lpi_ctl1.0.i) #20
  %31 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %base.i, align 4
  %add.ptr.i5.i = getelementptr i8, ptr %32, i32 11460
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i5.i, i32 %30) #20, !srcloc !256
  %phylink = getelementptr i8, ptr %dev, i32 2924
  %33 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %phylink, align 4
  %call13 = tail call i32 @phylink_ethtool_set_eee(ptr noundef %34, ptr noundef %eee) #20
  br label %cleanup

cleanup:                                          ; preds = %land.end, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %land.end ], [ -22, %land.lhs.true.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_get_link_ksettings(ptr nocapture noundef readonly %ndev, ptr noundef %cmd) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %ndev, i32 2924
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 4
  %call1 = tail call i32 @phylink_ethtool_ksettings_get(ptr noundef %1, ptr noundef %cmd) #20
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_ethtool_set_link_ksettings(ptr nocapture noundef readonly %ndev, ptr noundef %cmd) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %ndev, i32 2924
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 4
  %call1 = tail call i32 @phylink_ethtool_ksettings_set(ptr noundef %1, ptr noundef %cmd) #20
  ret i32 %call1
}

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #17

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_set_wol(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_nway_reset(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_ethtool_get_pauseparam(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_set_pauseparam(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_get_eee_err(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_get_eee(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_set_eee(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_ksettings_get(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_ksettings_set(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clk_prepare(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clk_enable(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @clk_unprepare(ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mvneta_pcs_validate(ptr nocapture noundef readnone %pcs, ptr nocapture noundef readnone %supported, ptr noundef %state) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %interface = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %0 = ptrtoint ptr %interface to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %interface, align 4
  %2 = add i32 %1, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %3 = icmp ult i32 %2, 2
  br i1 %3, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state, align 4
  %6 = and i32 %5, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %land.lhs.true.return_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  br label %return

return:                                           ; preds = %if.end, %land.lhs.true.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %land.lhs.true.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_pcs_get_state(ptr nocapture noundef readonly %pcs, ptr nocapture noundef %state) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %base.i = getelementptr i8, ptr %pcs, i32 -628
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i54 = getelementptr i8, ptr %1, i32 11280
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i54) #20, !srcloc !258
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %interface = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %4 = ptrtoint ptr %interface to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %interface, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 22, i32 %5)
  %cmp = icmp eq i32 %5, 22
  %cond = select i1 %cmp, i32 2500, i32 1000
  %speed = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 3
  %6 = ptrtoint ptr %speed to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %cond, ptr %speed, align 4
  br label %if.end8

if.else:                                          ; preds = %entry
  %and2 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %speed7 = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 3
  br i1 %tobool3.not, label %if.else6, label %if.then4

if.then4:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %7 = ptrtoint ptr %speed7 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 100, ptr %speed7, align 4
  br label %if.end8

if.else6:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %8 = ptrtoint ptr %speed7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 10, ptr %speed7, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.else6, %if.then4, %if.then
  %an_complete = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 6
  %9 = ptrtoint ptr %an_complete to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load = load i8, ptr %an_complete, align 4
  %sh.diff = lshr i32 %3, 6
  %tr.sh.diff = trunc i32 %sh.diff to i8
  %bf.shl = and i8 %tr.sh.diff, 32
  %bf.clear = and i8 %bf.load, 95
  %bf.set = or i8 %bf.shl, %bf.clear
  %10 = trunc i32 %3 to i8
  %bf.shl20 = shl i8 %10, 7
  %bf.set22 = or i8 %bf.set, %bf.shl20
  store i8 %bf.set22, ptr %an_complete, align 4
  %and24 = lshr i32 %3, 3
  %and24.lobit = and i32 %and24, 1
  %duplex = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 4
  %11 = ptrtoint ptr %duplex to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %and24.lobit, ptr %duplex, align 4
  %and30 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %if.end8.if.end33_crit_edge, label %if.then32

if.end8.if.end33_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

if.then32:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  %pause = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 5
  %12 = ptrtoint ptr %pause to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pause, align 4
  %or = or i32 %13, 1
  store i32 %or, ptr %pause, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %if.end8.if.end33_crit_edge
  %and34 = and i32 %3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.end33.if.end39_crit_edge, label %if.then36

if.end33.if.end39_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end39

if.then36:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  %pause37 = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 5
  %14 = ptrtoint ptr %pause37 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pause37, align 4
  %or38 = or i32 %15, 2
  store i32 %or38, ptr %pause37, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.end33.if.end39_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_pcs_config(ptr nocapture noundef readonly %pcs, i32 noundef %mode, i32 noundef %interface, ptr noundef %advertising, i1 noundef zeroext %permit_pause_to_mac) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode)
  %cmp.i = icmp eq i32 %mode, 2
  br i1 %cmp.i, label %if.then, label %entry.if.end15_crit_edge

entry.if.end15_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %interface)
  %cmp = icmp eq i32 %interface, 4
  br i1 %cmp, label %if.then.if.end15_crit_edge, label %if.else

if.then.if.end15_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %spec.select = select i1 %permit_pause_to_mac, i32 6212, i32 4164
  %0 = ptrtoint ptr %advertising to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %advertising, align 4
  %2 = lshr i32 %1, 4
  %3 = and i32 %2, 512
  %4 = or i32 %3, %spec.select
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then.if.end15_crit_edge, %entry.if.end15_crit_edge
  %mask.0 = phi i32 [ -14581, %if.then.if.end15_crit_edge ], [ -10389, %entry.if.end15_crit_edge ], [ -15093, %if.else ]
  %val.1 = phi i32 [ 8324, %if.then.if.end15_crit_edge ], [ 0, %entry.if.end15_crit_edge ], [ %4, %if.else ]
  %base.i = getelementptr i8, ptr %pcs, i32 -628
  %5 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %base.i, align 4
  %add.ptr.i35 = getelementptr i8, ptr %6, i32 11276
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i35) #20, !srcloc !258
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %and = and i32 %8, %mask.0
  %or17 = or i32 %and, %val.1
  %xor = xor i32 %or17, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %xor)
  %tobool18.not = icmp eq i32 %xor, 0
  br i1 %tobool18.not, label %if.end15.if.end20_crit_edge, label %if.then19

if.end15.if.end20_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20

if.then19:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %9 = tail call i32 @llvm.bswap.i32(i32 %or17) #20
  %10 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %base.i, align 4
  %add.ptr.i37 = getelementptr i8, ptr %11, i32 11276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i37, i32 %9) #20, !srcloc !256
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end15.if.end20_crit_edge
  %and21 = lshr i32 %xor, 9
  %and21.lobit = and i32 %and21, 1
  ret i32 %and21.lobit
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mvneta_pcs_an_restart(ptr nocapture noundef readonly %pcs) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %base.i = getelementptr i8, ptr %pcs, i32 -628
  %0 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base.i, align 4
  %add.ptr.i5 = getelementptr i8, ptr %1, i32 11276
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i5) #20, !srcloc !258
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %or = or i32 %3, 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %4 = tail call i32 @llvm.bswap.i32(i32 %or) #20
  %5 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %base.i, align 4
  %add.ptr.i7 = getelementptr i8, ptr %6, i32 11276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i7, i32 %4) #20, !srcloc !256
  %and = and i32 %3, -17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %7 = tail call i32 @llvm.bswap.i32(i32 %and) #20
  %8 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %base.i, align 4
  %add.ptr.i9 = getelementptr i8, ptr %9, i32 11276
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i9, i32 %7) #20, !srcloc !256
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @get_random_bytes(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_read_variable_u32_array(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__of_parse_phandle_with_args(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mvneta_bm_pool_use(ptr noundef, i8 noundef zeroext, i32 noundef, i8 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mvebu_mbus_get_io_win_info(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_defaults_set(ptr noundef %pp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_present_mask, i32 noundef %0) #20
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_clear_intr_cause, ptr noundef %pp, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @mvneta_percpu_mask_interrupt, ptr noundef %pp, i1 noundef zeroext true, ptr noundef nonnull @__cpu_online_mask) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  %1 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %2, i32 9656
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %3 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %base.i, align 4
  %add.ptr.i130 = getelementptr i8, ptr %4, i32 8208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i130, i32 536870912) #20, !srcloc !256
  %call1183 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_present_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call1183, i32 %5)
  %cmp184 = icmp ult i32 %call1183, %5
  br i1 %cmp184, label %for.body.lr.ph, label %entry.for.end27_crit_edge

entry.for.end27_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end27

for.body.lr.ph:                                   ; preds = %entry
  %neta_armada3700 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 38
  %rxq_def = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 11
  br label %for.body

for.body:                                         ; preds = %if.end23.for.body_crit_edge, %for.body.lr.ph
  %call1185 = phi i32 [ %call1183, %for.body.lr.ph ], [ %call1, %if.end23.for.body_crit_edge ]
  %6 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %for.cond2.preheader, label %for.body.if.end23_crit_edge

for.body.if.end23_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end23

for.cond2.preheader:                              ; preds = %for.body
  %8 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp3175 = icmp sgt i32 %8, 0
  br i1 %cmp3175, label %for.cond2.preheader.for.body4_crit_edge, label %for.cond2.preheader.for.cond7.preheader_crit_edge

for.cond2.preheader.for.cond7.preheader_crit_edge: ; preds = %for.cond2.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond7.preheader

for.cond2.preheader.for.body4_crit_edge:          ; preds = %for.cond2.preheader
  br label %for.body4

for.cond7.preheader:                              ; preds = %for.body4.for.cond7.preheader_crit_edge, %for.cond2.preheader.for.cond7.preheader_crit_edge
  %rxq_map.0.lcssa = phi i32 [ 0, %for.cond2.preheader.for.cond7.preheader_crit_edge ], [ %rxq_map.1, %for.body4.for.cond7.preheader_crit_edge ]
  %9 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp8178 = icmp sgt i32 %9, 0
  br i1 %cmp8178, label %for.cond7.preheader.for.body9_crit_edge, label %for.cond7.preheader.if.end23_crit_edge

for.cond7.preheader.if.end23_crit_edge:           ; preds = %for.cond7.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end23

for.cond7.preheader.for.body9_crit_edge:          ; preds = %for.cond7.preheader
  br label %for.body9

for.body4:                                        ; preds = %for.body4.for.body4_crit_edge, %for.cond2.preheader.for.body4_crit_edge
  %rxq.0177 = phi i32 [ %inc, %for.body4.for.body4_crit_edge ], [ 0, %for.cond2.preheader.for.body4_crit_edge ]
  %rxq_map.0176 = phi i32 [ %rxq_map.1, %for.body4.for.body4_crit_edge ], [ 0, %for.cond2.preheader.for.body4_crit_edge ]
  %rem = srem i32 %rxq.0177, %call4.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %rem, i32 %call1185)
  %cmp5 = icmp eq i32 %rem, %call1185
  %shl = shl nuw i32 1, %rxq.0177
  %or = select i1 %cmp5, i32 %shl, i32 0
  %rxq_map.1 = or i32 %or, %rxq_map.0176
  %inc = add nuw nsw i32 %rxq.0177, 1
  %exitcond.not = icmp eq i32 %inc, %8
  br i1 %exitcond.not, label %for.body4.for.cond7.preheader_crit_edge, label %for.body4.for.body4_crit_edge

for.body4.for.body4_crit_edge:                    ; preds = %for.body4
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body4

for.body4.for.cond7.preheader_crit_edge:          ; preds = %for.body4
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond7.preheader

for.body9:                                        ; preds = %for.body9.for.body9_crit_edge, %for.cond7.preheader.for.body9_crit_edge
  %txq.0180 = phi i32 [ %inc17, %for.body9.for.body9_crit_edge ], [ 0, %for.cond7.preheader.for.body9_crit_edge ]
  %txq_map.0179 = phi i32 [ %txq_map.1, %for.body9.for.body9_crit_edge ], [ 0, %for.cond7.preheader.for.body9_crit_edge ]
  %rem10 = srem i32 %txq.0180, %call4.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %rem10, i32 %call1185)
  %cmp11 = icmp eq i32 %rem10, %call1185
  %shl13 = shl i32 256, %txq.0180
  %or14 = select i1 %cmp11, i32 %shl13, i32 0
  %txq_map.1 = or i32 %or14, %txq_map.0179
  %inc17 = add nuw nsw i32 %txq.0180, 1
  %exitcond188.not = icmp eq i32 %inc17, %9
  br i1 %exitcond188.not, label %for.end18, label %for.body9.for.body9_crit_edge

for.body9.for.body9_crit_edge:                    ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body9

for.end18:                                        ; preds = %for.body9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp19 = icmp eq i32 %9, 1
  br i1 %cmp19, label %if.then20, label %for.end18.if.end23_crit_edge

for.end18.if.end23_crit_edge:                     ; preds = %for.end18
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end23

if.then20:                                        ; preds = %for.end18
  call void @__sanitizer_cov_trace_pc() #22
  %10 = ptrtoint ptr %rxq_def to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rxq_def, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call1185, i32 %11)
  %cmp21 = icmp eq i32 %call1185, %11
  %cond = select i1 %cmp21, i32 512, i32 0
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %for.end18.if.end23_crit_edge, %for.cond7.preheader.if.end23_crit_edge, %for.body.if.end23_crit_edge
  %rxq_map.2 = phi i32 [ %rxq_map.0.lcssa, %if.then20 ], [ %rxq_map.0.lcssa, %for.end18.if.end23_crit_edge ], [ 255, %for.body.if.end23_crit_edge ], [ %rxq_map.0.lcssa, %for.cond7.preheader.if.end23_crit_edge ]
  %txq_map.2 = phi i32 [ %cond, %if.then20 ], [ %txq_map.1, %for.end18.if.end23_crit_edge ], [ 65280, %for.body.if.end23_crit_edge ], [ 0, %for.cond7.preheader.if.end23_crit_edge ]
  %shl24 = shl i32 %call1185, 2
  %add25 = add i32 %shl24, 9536
  %or26 = or i32 %txq_map.2, %rxq_map.2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %12 = tail call i32 @llvm.bswap.i32(i32 %or26) #20
  %13 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %base.i, align 4
  %add.ptr.i132 = getelementptr i8, ptr %14, i32 %add25
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i132, i32 %12) #20, !srcloc !256
  %call1 = tail call i32 @cpumask_next(i32 noundef %call1185, ptr noundef nonnull @__cpu_present_mask) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %15 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call1, %15
  br i1 %cmp, label %if.end23.for.body_crit_edge, label %if.end23.for.end27_crit_edge

if.end23.for.end27_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end27

if.end23.for.body_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end27:                                        ; preds = %if.end23.for.end27_crit_edge, %entry.for.end27_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %16 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %base.i, align 4
  %add.ptr.i134 = getelementptr i8, ptr %17, i32 7360
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i134, i32 16777216) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %18 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %base.i, align 4
  %add.ptr.i136 = getelementptr i8, ptr %19, i32 15600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i136, i32 16777216) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %20 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %base.i, align 4
  %add.ptr.i138 = getelementptr i8, ptr %21, i32 9444
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i138, i32 0) #20, !srcloc !256
  %22 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp29186 = icmp sgt i32 %22, 0
  br i1 %cmp29186, label %for.end27.for.body30_crit_edge, label %for.end27.for.end37_crit_edge

for.end27.for.end37_crit_edge:                    ; preds = %for.end27
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end37

for.end27.for.body30_crit_edge:                   ; preds = %for.end27
  br label %for.body30

for.body30:                                       ; preds = %for.body30.for.body30_crit_edge, %for.end27.for.body30_crit_edge
  %queue.0187 = phi i32 [ %inc36, %for.body30.for.body30_crit_edge ], [ 0, %for.end27.for.body30_crit_edge ]
  %shl31 = shl i32 %queue.0187, 4
  %add32 = add i32 %shl31, 9984
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %23 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %base.i, align 4
  %add.ptr.i140 = getelementptr i8, ptr %24, i32 %add32
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i140, i32 0) #20, !srcloc !256
  %add34 = add i32 %shl31, 9988
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %25 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %base.i, align 4
  %add.ptr.i142 = getelementptr i8, ptr %26, i32 %add34
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i142, i32 0) #20, !srcloc !256
  %inc36 = add nuw nsw i32 %queue.0187, 1
  %27 = load i32, ptr @txq_number, align 4
  %cmp29 = icmp slt i32 %inc36, %27
  br i1 %cmp29, label %for.body30.for.body30_crit_edge, label %for.body30.for.end37_crit_edge

for.body30.for.end37_crit_edge:                   ; preds = %for.body30
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end37

for.body30.for.body30_crit_edge:                  ; preds = %for.body30
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body30

for.end37:                                        ; preds = %for.body30.for.end37_crit_edge, %for.end27.for.end37_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %28 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %base.i, align 4
  %add.ptr.i144 = getelementptr i8, ptr %29, i32 15600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i144, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %30 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %base.i, align 4
  %add.ptr.i146 = getelementptr i8, ptr %31, i32 7360
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i146, i32 0) #20, !srcloc !256
  %bm_priv = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 29
  %32 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %bm_priv, align 4
  %tobool38.not = icmp eq ptr %33, null
  %. = select i1 %tobool38.not, i32 16777216, i32 33554432
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %34 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %base.i, align 4
  %add.ptr.i148 = getelementptr i8, ptr %35, i32 9472
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i148, i32 %.) #20, !srcloc !256
  %36 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %bm_priv, align 4
  %tobool43.not = icmp eq ptr %37, null
  br i1 %tobool43.not, label %for.end37.if.end46_crit_edge, label %if.then44

for.end37.if.end46_crit_edge:                     ; preds = %for.end37
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end46

if.then44:                                        ; preds = %for.end37
  call void @__sanitizer_cov_trace_pc() #22
  %bppi_phys_addr = getelementptr inbounds %struct.mvneta_bm, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %bppi_phys_addr to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %bppi_phys_addr, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %40 = tail call i32 @llvm.bswap.i32(i32 %39) #20
  %41 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %base.i, align 4
  %add.ptr.i150 = getelementptr i8, ptr %42, i32 9476
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i150, i32 %40) #20, !srcloc !256
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %for.end37.if.end46_crit_edge
  %rxq_def47 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 11
  %43 = ptrtoint ptr %rxq_def47 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rxq_def47, align 4
  %shl48 = shl i32 %44, 1
  %shl50 = shl i32 %44, 4
  %shl53 = shl i32 %44, 16
  %shl56 = shl i32 %44, 19
  %shl59 = shl i32 %44, 22
  %or51 = or i32 %shl50, %shl48
  %or54 = or i32 %or51, %shl53
  %or57 = or i32 %or54, %shl56
  %or60 = or i32 %or57, %shl59
  %or62 = or i32 %or60, 33558528
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %45 = tail call i32 @llvm.bswap.i32(i32 %or62) #20
  %46 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %base.i, align 4
  %add.ptr.i152 = getelementptr i8, ptr %47, i32 9216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i152, i32 %45) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %48 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %base.i, align 4
  %add.ptr.i154 = getelementptr i8, ptr %49, i32 9220
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i154, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %50 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %base.i, align 4
  %add.ptr.i156 = getelementptr i8, ptr %51, i32 9340
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i156, i32 1073741824) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %52 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %base.i, align 4
  %add.ptr.i158 = getelementptr i8, ptr %53, i32 9244
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i158, i32 2013265921) #20, !srcloc !256
  %54 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %base.i, align 4
  %add.ptr.i160 = getelementptr i8, ptr %55, i32 8368
  %56 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i160) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %57 = and i32 %56, -33554433
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %58 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %base.i, align 4
  %add.ptr.i162 = getelementptr i8, ptr %59, i32 8368
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i162, i32 %57) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %60 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %61, i32 13824
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %62 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %base.i, align 4
  %add.ptr.i.1.i = getelementptr i8, ptr %63, i32 13828
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.1.i, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %64 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %base.i, align 4
  %add.ptr.i.2.i = getelementptr i8, ptr %65, i32 13832
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.2.i, i32 0) #20, !srcloc !256
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %66 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %base.i, align 4
  %add.ptr.i.3.i = getelementptr i8, ptr %67, i32 13836
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.3.i, i32 0) #20, !srcloc !256
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end46
  %offset.016.i = phi i32 [ 0, %if.end46 ], [ %add8.i, %for.body.i.for.body.i_crit_edge ]
  %add.i = add nuw nsw i32 %offset.016.i, 13312
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %68 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i164 = getelementptr i8, ptr %69, i32 %add.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i164, i32 0) #20, !srcloc !256
  %add8.i = add nuw nsw i32 %offset.016.i, 4
  %cmp7.i = icmp ult i32 %offset.016.i, 249
  br i1 %cmp7.i, label %for.body.i.for.body.i_crit_edge, label %mvneta_set_special_mcast_table.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

mvneta_set_special_mcast_table.exit:              ; preds = %for.body.i
  %mcast_count.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 19
  %70 = call ptr @memset(ptr %mcast_count.i, i32 0, i32 256)
  br label %for.body.i168

for.body.i168:                                    ; preds = %for.body.i168.for.body.i168_crit_edge, %mvneta_set_special_mcast_table.exit
  %offset.020.i = phi i32 [ 0, %mvneta_set_special_mcast_table.exit ], [ %add10.i, %for.body.i168.for.body.i168_crit_edge ]
  %add.i166 = add nuw nsw i32 %offset.020.i, 13568
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %71 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i167 = getelementptr i8, ptr %72, i32 %add.i166
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i167, i32 0) #20, !srcloc !256
  %add10.i = add nuw nsw i32 %offset.020.i, 4
  %cmp9.i = icmp ult i32 %offset.020.i, 249
  br i1 %cmp9.i, label %for.body.i168.for.body.i168_crit_edge, label %mvneta_set_other_mcast_table.exit

for.body.i168.for.body.i168_crit_edge:            ; preds = %for.body.i168
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i168

mvneta_set_other_mcast_table.exit:                ; preds = %for.body.i168
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %73 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %base.i, align 4
  %add.ptr.i170 = getelementptr i8, ptr %74, i32 9656
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i170, i32 -65536) #20, !srcloc !256
  br label %for.body.i174

for.body.i174:                                    ; preds = %for.body.i174.for.body.i174_crit_edge, %mvneta_set_other_mcast_table.exit
  %i.012.i = phi i32 [ 0, %mvneta_set_other_mcast_table.exit ], [ %add1.i, %for.body.i174.for.body.i174_crit_edge ]
  %add.i172 = add nuw nsw i32 %i.012.i, 12288
  %75 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %base.i, align 4
  %add.ptr.i.i173 = getelementptr i8, ptr %76, i32 %add.i172
  %77 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i173) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %add1.i = add nuw nsw i32 %i.012.i, 4
  %cmp.i = icmp ult i32 %i.012.i, 120
  br i1 %cmp.i, label %for.body.i174.for.body.i174_crit_edge, label %mvneta_mib_counters_clear.exit

for.body.i174.for.body.i174_crit_edge:            ; preds = %for.body.i174
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i174

mvneta_mib_counters_clear.exit:                   ; preds = %for.body.i174
  call void @__sanitizer_cov_trace_pc() #22
  %78 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %base.i, align 4
  %add.ptr.i9.i = getelementptr i8, ptr %79, i32 9348
  %80 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i9.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  %81 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %base.i, align 4
  %add.ptr.i11.i = getelementptr i8, ptr %82, i32 9352
  %83 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i11.i) #20, !srcloc !258
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !259
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kmalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_complete_done(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_mac_change(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_wake_queue(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_rx_error(ptr nocapture noundef readonly %pp, ptr nocapture noundef readonly %rx_desc) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %stats1 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 2
  %0 = ptrtoint ptr %stats1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stats1, align 8
  %2 = ptrtoint ptr %1 to i32
  %3 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx, align 4
  %add = add i32 %8, %2
  %9 = inttoptr i32 %add to ptr
  %status3 = getelementptr inbounds %struct.mvneta_rx_desc, ptr %rx_desc, i32 0, i32 2
  %10 = ptrtoint ptr %status3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %status3, align 4
  tail call fastcc void @u64_stats_update_begin(ptr noundef %9)
  %rx_errors = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %9, i32 0, i32 3
  %12 = ptrtoint ptr %rx_errors to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %rx_errors, align 8
  %inc = add i64 %13, 1
  store i64 %inc, ptr %rx_errors, align 8
  %dep_map.i.i = getelementptr inbounds %struct.seqcount, ptr %9, i32 0, i32 1
  %14 = tail call ptr @llvm.returnaddress(i32 0) #20
  %15 = ptrtoint ptr %14 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %15) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %16 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %9, align 4
  %inc.i.i.i = add i32 %17, 1
  store i32 %inc.i.i.i, ptr %9, align 4
  %and = lshr i32 %11, 17
  %18 = and i32 %and, 3
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table.mvneta_rx_error, i32 0, i32 %18
  %19 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %19)
  %switch.load = load ptr, ptr %switch.gep, align 4
  %dev14 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %20 = ptrtoint ptr %dev14 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev14, align 8
  %22 = ptrtoint ptr %rx_desc to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %rx_desc, align 4
  %conv16 = zext i16 %23 to i32
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %21, ptr noundef nonnull %switch.load, i32 noundef %11, i32 noundef %conv16) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @napi_gro_receive(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hwbm_pool_refill(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @build_skb(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__netdev_alloc_skb(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_cpu(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mvneta_xdp_put_buff(ptr nocapture noundef readonly %rxq, ptr nocapture noundef readonly %xdp, ptr nocapture noundef readonly %sinfo, i32 noundef %sync_len) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %sinfo, i32 0, i32 2
  %0 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %nr_frags, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp2.not = icmp eq i8 %1, 0
  br i1 %cmp2.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %page_pool = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.03 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %2 = ptrtoint ptr %page_pool to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %page_pool, align 16
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %sinfo, i32 0, i32 12, i32 %i.03
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  tail call void @page_pool_put_page(ptr noundef %3, ptr noundef %5, i32 noundef -1, i1 noundef zeroext true) #20
  %inc = add nuw nsw i32 %i.03, 1
  %6 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %7 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %page_pool2 = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  %8 = ptrtoint ptr %page_pool2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %page_pool2, align 16
  %10 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %xdp, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %12 = load ptr, ptr @mem_map, align 4
  %13 = ptrtoint ptr %11 to i32
  %sub.i = add i32 %13, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  %14 = getelementptr %struct.page, ptr %12, i32 %shr.i, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !257

if.then.i.i:                                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %16, -1
  br label %virt_to_head_page.exit

if.end.i.i:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i = getelementptr %struct.page, ptr %12, i32 %shr.i
  %17 = ptrtoint ptr %add.ptr.i to i32
  br label %virt_to_head_page.exit

virt_to_head_page.exit:                           ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %17, %if.end.i.i ]
  %18 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @page_pool_put_page(ptr noundef %9, ptr noundef %18, i32 noundef %sync_len, i1 noundef zeroext true) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mvneta_run_xdp(ptr nocapture noundef readonly %pp, ptr nocapture noundef readonly %rxq, ptr noundef %prog, ptr noundef %xdp, i32 noundef %frame_sz, ptr nocapture noundef %stats) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %data_hard_start.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 3
  %0 = ptrtoint ptr %data_hard_start.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data_hard_start.i, align 4
  %frame_sz.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 6
  %2 = ptrtoint ptr %frame_sz.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %frame_sz.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %3
  %add.ptr1.i = getelementptr i8, ptr %add.ptr.i, i32 -256
  %data_end = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 1
  %4 = ptrtoint ptr %data_end to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data_end, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %5 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i32
  %rx_offset_correction = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 39
  %6 = ptrtoint ptr %rx_offset_correction to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %rx_offset_correction, align 2
  %conv = zext i16 %7 to i32
  %8 = add i32 %sub.ptr.rhs.cast, %conv
  %sub = sub i32 %sub.ptr.lhs.cast, %8
  %9 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %xdp, align 4
  %sub.ptr.rhs.cast3 = ptrtoint ptr %10 to i32
  tail call void @__cant_migrate(ptr noundef nonnull @.str.83, i32 noundef 613) #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @bpf_stats_enabled_key, ptr blockaddress(@mvneta_run_xdp, %if.then.i.i)) #20
          to label %if.else.i.i [label %if.then.i.i], !srcloc !288

if.then.i.i:                                      ; preds = %entry
  %call3.i.i = tail call i64 @sched_clock() #20
  %insnsi.i.i = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 1
  %bpf_func.i.i = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 9
  %11 = ptrtoint ptr %bpf_func.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bpf_func.i.i, align 4
  %call4.i.i = tail call i32 @bpf_dispatcher_xdp_func(ptr noundef %xdp, ptr noundef %insnsi.i.i, ptr noundef %12) #20
  %stats9.i.i = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 7
  %13 = ptrtoint ptr %stats9.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %stats9.i.i, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %21, %15
  %22 = inttoptr i32 %add.i.i to ptr
  %syncp.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %22, i32 0, i32 3
  %23 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !265
  %and.i.i.i.i = and i32 %23, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.then.i.i.do.body12.i.i.i_crit_edge

if.then.i.i.do.body12.i.i.i_crit_edge:            ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body12.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @trace_hardirqs_off() #20
  br label %do.body12.i.i.i

do.body12.i.i.i:                                  ; preds = %if.then.i.i.i, %if.then.i.i.do.body12.i.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %24 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i.i.i.i = icmp eq i32 %24, 0
  br i1 %tobool.not.i.i.i.i, label %do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %land.lhs.true.i.i.i.i

do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %do.body12.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.lhs.true.i.i.i.i:                            ; preds = %do.body12.i.i.i
  %25 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i.i.i.i.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %28, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !280
  %29 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %32
  %33 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %34, ptrtoint (ptr @lockdep_recursion to i32)
  %35 = inttoptr i32 %add.i.i.i.i to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !281
  %38 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i7.i.i.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i7.i.i.i.i to ptr
  %preempt_count.i.i8.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i8.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i8.i.i.i.i, align 4
  %sub.i.i.i.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i8.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool20.not.i.i.i.i = icmp eq i32 %37, 0
  br i1 %tobool20.not.i.i.i.i, label %land.rhs.i.i.i.i, label %land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge

land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs.i.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i
  %42 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i.i.i.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp.i.i.i.i = icmp eq i32 %45, 0
  br i1 %cmp.i.i.i.i, label %land.rhs22.i.i.i.i, label %land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge

land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs22.i.i.i.i:                               ; preds = %land.rhs.i.i.i.i
  %46 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i9.i.i.i.i = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i9.i.i.i.i to ptr
  %preempt_count.i.i10.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i10.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i10.i.i.i.i, align 4
  %add.i11.i.i.i.i = add i32 %49, 1
  store volatile i32 %add.i11.i.i.i.i, ptr %preempt_count.i.i10.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !282
  %50 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx46.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %51
  %52 = ptrtoint ptr %arrayidx46.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx46.i.i.i.i, align 4
  %add47.i.i.i.i = add i32 %53, ptrtoint (ptr @hardirqs_enabled to i32)
  %54 = inttoptr i32 %add47.i.i.i.i to ptr
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !283
  %57 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i12.i.i.i.i = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i.i12.i.i.i.i to ptr
  %preempt_count.i.i13.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %preempt_count.i.i13.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %preempt_count.i.i13.i.i.i.i, align 4
  %sub.i14.i.i.i.i = add i32 %60, -1
  store volatile i32 %sub.i14.i.i.i.i, ptr %preempt_count.i.i13.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool54.not.i.i.i.i = icmp eq i32 %56, 0
  br i1 %tobool54.not.i.i.i.i, label %land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %land.rhs58.i.i.i.i

land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs22.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs58.i.i.i.i:                               ; preds = %land.rhs22.i.i.i.i
  %.b1.i.i.i.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i.i.i.i, label %land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %if.then.i.i.i.i, !prof !257

land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs58.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %u64_stats_update_begin_irqsave.exit.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs58.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.53, i32 noundef 271, i32 noundef 9, ptr noundef null) #20
  br label %u64_stats_update_begin_irqsave.exit.i.i

u64_stats_update_begin_irqsave.exit.i.i:          ; preds = %if.then.i.i.i.i, %land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge
  %61 = ptrtoint ptr %syncp.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %syncp.i.i, align 4
  %inc.i.i.i.i.i.i = add i32 %62, 1
  store i32 %inc.i.i.i.i.i.i, ptr %syncp.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !284
  %dep_map.i.i.i.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %22, i32 0, i32 3, i32 0, i32 1
  %63 = tail call ptr @llvm.returnaddress(i32 0) #20
  %64 = ptrtoint ptr %63 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %64) #20
  %65 = ptrtoint ptr %22 to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %22, align 8
  %inc.i.i.i = add i64 %66, 1
  store i64 %inc.i.i.i, ptr %22, align 8
  %nsecs.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %22, i32 0, i32 1
  %call13.i.i = tail call i64 @sched_clock() #20
  %sub.i.i = sub i64 %call13.i.i, %call3.i.i
  %conv.i.i.i = and i64 %sub.i.i, 4294967295
  %67 = ptrtoint ptr %nsecs.i.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %nsecs.i.i, align 8
  %add.i.i.i = add i64 %conv.i.i.i, %68
  store i64 %add.i.i.i, ptr %nsecs.i.i, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i.i.i.i, i32 noundef %64) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %69 = ptrtoint ptr %syncp.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %syncp.i.i, align 4
  %inc.i.i.i.i.i = add i32 %70, 1
  store i32 %inc.i.i.i.i.i, ptr %syncp.i.i, align 4
  br i1 %tobool.not.i.i.i, label %if.then8.i.i.i, label %u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge

u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge: ; preds = %u64_stats_update_begin_irqsave.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body10.i.i.i

if.then8.i.i.i:                                   ; preds = %u64_stats_update_begin_irqsave.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @trace_hardirqs_on() #20
  br label %do.body10.i.i.i

do.body10.i.i.i:                                  ; preds = %if.then8.i.i.i, %u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge
  %71 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !266
  %and.i.i.i3.i.i = and i32 %71, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i3.i.i)
  %tobool18.not.i.i.i = icmp eq i32 %and.i.i.i3.i.i, 0
  br i1 %tobool18.not.i.i.i, label %if.then22.i.i.i, label %do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge, !prof !261

do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge: ; preds = %do.body10.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %u64_stats_update_end_irqrestore.exit.i.i

if.then22.i.i.i:                                  ; preds = %do.body10.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @warn_bogus_irq_restore() #20
  br label %u64_stats_update_end_irqrestore.exit.i.i

u64_stats_update_end_irqrestore.exit.i.i:         ; preds = %if.then22.i.i.i, %do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %23) #20, !srcloc !267
  br label %__bpf_prog_run.exit.i

if.else.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %insnsi15.i.i = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 1
  %bpf_func17.i.i = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 9
  %72 = ptrtoint ptr %bpf_func17.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %bpf_func17.i.i, align 4
  %call18.i.i = tail call i32 @bpf_dispatcher_xdp_func(ptr noundef %xdp, ptr noundef %insnsi15.i.i, ptr noundef %73) #20
  br label %__bpf_prog_run.exit.i

__bpf_prog_run.exit.i:                            ; preds = %if.else.i.i, %u64_stats_update_end_irqrestore.exit.i.i
  %ret.0.i.i = phi i32 [ %call4.i.i, %u64_stats_update_end_irqrestore.exit.i.i ], [ %call18.i.i, %if.else.i.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @bpf_master_redirect_enabled_key, ptr blockaddress(@mvneta_run_xdp, %l_yes.i.i)) #20
          to label %arch_static_branch.exit.i [label %l_yes.i.i], !srcloc !288

l_yes.i.i:                                        ; preds = %__bpf_prog_run.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %arch_static_branch.exit.i

arch_static_branch.exit.i:                        ; preds = %l_yes.i.i, %__bpf_prog_run.exit.i
  %retval.0.i.i = phi i1 [ true, %l_yes.i.i ], [ false, %__bpf_prog_run.exit.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %ret.0.i.i)
  %cmp.i = icmp eq i32 %ret.0.i.i, 3
  %or.cond.i = select i1 %retval.0.i.i, i1 %cmp.i, i1 false
  br i1 %or.cond.i, label %land.lhs.true.i, label %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge

arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge: ; preds = %arch_static_branch.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bpf_prog_run_xdp.exit

land.lhs.true.i:                                  ; preds = %arch_static_branch.exit.i
  %rxq.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 4
  %74 = ptrtoint ptr %rxq.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %rxq.i, align 4
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %75, align 128
  %flags.i.i = getelementptr inbounds %struct.net_device, ptr %77, i32 0, i32 14
  %78 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %flags.i.i, align 8
  %and.i.i = and i32 %79, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.bpf_prog_run_xdp.exit.thread_crit_edge, label %netif_is_bond_slave.exit.i

land.lhs.true.i.bpf_prog_run_xdp.exit.thread_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bpf_prog_run_xdp.exit.thread

netif_is_bond_slave.exit.i:                       ; preds = %land.lhs.true.i
  %priv_flags.i.i = getelementptr inbounds %struct.net_device, ptr %77, i32 0, i32 15
  %80 = ptrtoint ptr %priv_flags.i.i to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %priv_flags.i.i, align 16
  %and1.i.i = and i64 %81, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool2.i.not.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool2.i.not.i, label %netif_is_bond_slave.exit.i.bpf_prog_run_xdp.exit.thread_crit_edge, label %if.then5.i

netif_is_bond_slave.exit.i.bpf_prog_run_xdp.exit.thread_crit_edge: ; preds = %netif_is_bond_slave.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %bpf_prog_run_xdp.exit.thread

if.then5.i:                                       ; preds = %netif_is_bond_slave.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %call6.i = tail call i32 @xdp_master_redirect(ptr noundef %xdp) #20
  br label %bpf_prog_run_xdp.exit

bpf_prog_run_xdp.exit.thread:                     ; preds = %netif_is_bond_slave.exit.i.bpf_prog_run_xdp.exit.thread_crit_edge, %land.lhs.true.i.bpf_prog_run_xdp.exit.thread_crit_edge
  %82 = ptrtoint ptr %data_end to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %data_end, align 4
  %84 = ptrtoint ptr %data_hard_start.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %data_hard_start.i, align 4
  %sub.ptr.lhs.cast8124 = ptrtoint ptr %83 to i32
  %sub.ptr.rhs.cast9125 = ptrtoint ptr %85 to i32
  %86 = ptrtoint ptr %rx_offset_correction to i32
  call void @__asan_load2_noabort(i32 %86)
  %87 = load i16, ptr %rx_offset_correction, align 2
  %conv12126 = zext i16 %87 to i32
  %88 = add i32 %sub.ptr.rhs.cast9125, %conv12126
  %sub13127 = sub i32 %sub.ptr.lhs.cast8124, %88
  %89 = tail call i32 @llvm.umax.i32(i32 %sub13127, i32 %sub)
  br label %sw.bb20

bpf_prog_run_xdp.exit:                            ; preds = %if.then5.i, %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge
  %act.0.i = phi i32 [ %call6.i, %if.then5.i ], [ %ret.0.i.i, %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge ]
  %90 = ptrtoint ptr %data_end to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %data_end, align 4
  %92 = ptrtoint ptr %data_hard_start.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %data_hard_start.i, align 4
  %sub.ptr.lhs.cast8 = ptrtoint ptr %91 to i32
  %sub.ptr.rhs.cast9 = ptrtoint ptr %93 to i32
  %94 = ptrtoint ptr %rx_offset_correction to i32
  call void @__asan_load2_noabort(i32 %94)
  %95 = load i16, ptr %rx_offset_correction, align 2
  %conv12 = zext i16 %95 to i32
  %96 = add i32 %sub.ptr.rhs.cast9, %conv12
  %sub13 = sub i32 %sub.ptr.lhs.cast8, %96
  %97 = tail call i32 @llvm.umax.i32(i32 %sub13, i32 %sub)
  %98 = zext i32 %act.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %98, ptr @__sancov_gen_cov_switch_values.102)
  switch i32 %act.0.i, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb15
    i32 3, label %bpf_prog_run_xdp.exit.sw.bb20_crit_edge
    i32 0, label %bpf_prog_run_xdp.exit.sw.bb27_crit_edge
    i32 1, label %bpf_prog_run_xdp.exit.sw.bb29_crit_edge
  ]

bpf_prog_run_xdp.exit.sw.bb29_crit_edge:          ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb29

bpf_prog_run_xdp.exit.sw.bb27_crit_edge:          ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb27

bpf_prog_run_xdp.exit.sw.bb20_crit_edge:          ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb20

sw.bb:                                            ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #22
  %xdp_pass = getelementptr inbounds %struct.mvneta_stats, ptr %stats, i32 0, i32 5
  br label %cleanup

sw.bb15:                                          ; preds = %bpf_prog_run_xdp.exit
  %dev = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %99 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %dev, align 8
  %call16 = tail call i32 @xdp_do_redirect(ptr noundef %100, ptr noundef %xdp, ptr noundef %prog) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool.not = icmp eq i32 %call16, 0
  br i1 %tobool.not, label %if.else, label %if.then, !prof !257

if.then:                                          ; preds = %sw.bb15
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @mvneta_xdp_put_buff(ptr noundef %rxq, ptr noundef %xdp, ptr noundef %add.ptr1.i, i32 noundef %97)
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb15
  call void @__sanitizer_cov_trace_pc() #22
  %xdp_redirect = getelementptr inbounds %struct.mvneta_stats, ptr %stats, i32 0, i32 4
  %101 = ptrtoint ptr %xdp_redirect to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %xdp_redirect, align 8
  %inc19 = add i64 %102, 1
  store i64 %inc19, ptr %xdp_redirect, align 8
  br label %sw.epilog

sw.bb20:                                          ; preds = %bpf_prog_run_xdp.exit.sw.bb20_crit_edge, %bpf_prog_run_xdp.exit.thread
  %sub13.sub131 = phi i32 [ %89, %bpf_prog_run_xdp.exit.thread ], [ %97, %bpf_prog_run_xdp.exit.sw.bb20_crit_edge ]
  %sub.ptr.rhs.cast9130 = phi i32 [ %sub.ptr.rhs.cast9125, %bpf_prog_run_xdp.exit.thread ], [ %sub.ptr.rhs.cast9, %bpf_prog_run_xdp.exit.sw.bb20_crit_edge ]
  %103 = phi ptr [ %85, %bpf_prog_run_xdp.exit.thread ], [ %93, %bpf_prog_run_xdp.exit.sw.bb20_crit_edge ]
  %104 = phi ptr [ %83, %bpf_prog_run_xdp.exit.thread ], [ %91, %bpf_prog_run_xdp.exit.sw.bb20_crit_edge ]
  %stats1.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 2
  %105 = ptrtoint ptr %stats1.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %stats1.i, align 8
  %107 = ptrtoint ptr %106 to i32
  %108 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i85 = and i32 %108, -16384
  %109 = inttoptr i32 %and.i.i85 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %109, i32 0, i32 3
  %110 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %111
  %112 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %113, %107
  %114 = inttoptr i32 %add.i to ptr
  %rxq.i.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 4
  %115 = ptrtoint ptr %rxq.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %rxq.i.i, align 4
  %mem.i.i = getelementptr inbounds %struct.xdp_rxq_info, ptr %116, i32 0, i32 3
  %117 = ptrtoint ptr %mem.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %mem.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %118)
  %cmp.i.i = icmp eq i32 %118, 3
  br i1 %cmp.i.i, label %if.then.i.i86, label %if.end.i.i

if.then.i.i86:                                    ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i = tail call ptr @xdp_convert_zc_to_xdp_frame(ptr noundef %xdp) #20
  br label %xdp_convert_buff_to_frame.exit.i

if.end.i.i:                                       ; preds = %sw.bb20
  %119 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %xdp, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %120 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast9130
  %data_meta.i.i.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 2
  %121 = ptrtoint ptr %data_meta.i.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %data_meta.i.i.i, align 4
  %sub.ptr.rhs.cast3.i.i.i = ptrtoint ptr %122 to i32
  %sub.ptr.sub4.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast3.i.i.i
  %123 = tail call i32 @llvm.smax.i32(i32 %sub.ptr.sub4.i.i.i, i32 0) #20
  %sub.i.i.i = sub i32 %sub.ptr.sub.i.i.i, %123
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %sub.i.i.i)
  %cmp5.i.i.i = icmp ult i32 %sub.i.i.i, 24
  br i1 %cmp5.i.i.i, label %if.end.i.i.if.then24_crit_edge, label %if.end.i.i.i, !prof !261

if.end.i.i.if.then24_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then24

if.end.i.i.i:                                     ; preds = %if.end.i.i
  %124 = ptrtoint ptr %frame_sz.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %frame_sz.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %103, i32 %125
  %add.ptr8.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 -256
  %cmp9.i.i.i = icmp ugt ptr %104, %add.ptr8.i.i.i
  br i1 %cmp9.i.i.i, label %if.then16.i.i.i, label %if.end5.i.i, !prof !261

if.then16.i.i.i:                                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @xdp_warn(ptr noundef nonnull @.str.84, ptr noundef nonnull @__func__.xdp_update_frame_from_buff, i32 noundef 200) #20
  br label %if.then24

if.end5.i.i:                                      ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %126 = ptrtoint ptr %103 to i32
  call void @__asan_store4_noabort(i32 %126)
  store ptr %120, ptr %103, align 4
  %127 = ptrtoint ptr %data_end to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %data_end, align 4
  %129 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %xdp, align 4
  %sub.ptr.lhs.cast22.i.i.i = ptrtoint ptr %128 to i32
  %sub.ptr.rhs.cast23.i.i.i = ptrtoint ptr %130 to i32
  %sub.ptr.sub24.i.i.i = sub i32 %sub.ptr.lhs.cast22.i.i.i, %sub.ptr.rhs.cast23.i.i.i
  %conv.i.i.i87 = trunc i32 %sub.ptr.sub24.i.i.i to i16
  %len.i.i.i = getelementptr inbounds %struct.xdp_frame, ptr %103, i32 0, i32 1
  %131 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_store2_noabort(i32 %131)
  store i16 %conv.i.i.i87, ptr %len.i.i.i, align 4
  %132 = trunc i32 %sub.ptr.sub.i.i.i to i16
  %conv26.i.i.i = add i16 %132, -24
  %headroom27.i.i.i = getelementptr inbounds %struct.xdp_frame, ptr %103, i32 0, i32 2
  %133 = ptrtoint ptr %headroom27.i.i.i to i32
  call void @__asan_store2_noabort(i32 %133)
  store i16 %conv26.i.i.i, ptr %headroom27.i.i.i, align 2
  %metasize28.i.i.i = getelementptr inbounds %struct.xdp_frame, ptr %103, i32 0, i32 3
  %134 = ptrtoint ptr %metasize28.i.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %bf.load.i.i.i = load i32, ptr %metasize28.i.i.i, align 4
  %bf.shl.i.i.i = shl i32 %123, 24
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 16777215
  %bf.set.i.i.i = or i32 %bf.clear.i.i.i, %bf.shl.i.i.i
  store i32 %bf.set.i.i.i, ptr %metasize28.i.i.i, align 4
  %135 = ptrtoint ptr %frame_sz.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %frame_sz.i, align 4
  %bf.value32.i.i.i = and i32 %136, 16777215
  %bf.set34.i.i.i = or i32 %bf.value32.i.i.i, %bf.shl.i.i.i
  store i32 %bf.set34.i.i.i, ptr %metasize28.i.i.i, align 4
  %mem6.i.i = getelementptr inbounds %struct.xdp_frame, ptr %103, i32 0, i32 4
  %137 = ptrtoint ptr %rxq.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %rxq.i.i, align 4
  %mem8.i.i = getelementptr inbounds %struct.xdp_rxq_info, ptr %138, i32 0, i32 3
  %139 = ptrtoint ptr %mem8.i.i to i32
  call void @__asan_loadN_noabort(i32 %139, i32 8)
  %140 = load i64, ptr %mem8.i.i, align 4
  %141 = ptrtoint ptr %mem6.i.i to i32
  call void @__asan_storeN_noabort(i32 %141, i32 8)
  store i64 %140, ptr %mem6.i.i, align 4
  br label %xdp_convert_buff_to_frame.exit.i

xdp_convert_buff_to_frame.exit.i:                 ; preds = %if.end5.i.i, %if.then.i.i86
  %retval.0.i.i88 = phi ptr [ %call.i.i, %if.then.i.i86 ], [ %103, %if.end5.i.i ]
  %tobool.not.i = icmp eq ptr %retval.0.i.i88, null
  br i1 %tobool.not.i, label %xdp_convert_buff_to_frame.exit.i.if.then24_crit_edge, label %if.end.i, !prof !261

xdp_convert_buff_to_frame.exit.i.if.then24_crit_edge: ; preds = %xdp_convert_buff_to_frame.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then24

if.end.i:                                         ; preds = %xdp_convert_buff_to_frame.exit.i
  %142 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %cpu.i, align 4
  %txqs.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 7
  %144 = ptrtoint ptr %txqs.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %txqs.i, align 4
  %146 = load i32, ptr @txq_number, align 4
  %rem.i = srem i32 %143, %146
  %arrayidx10.i = getelementptr %struct.mvneta_tx_queue, ptr %145, i32 %rem.i
  %dev.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %147 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %dev.i, align 8
  %149 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load1_noabort(i32 %149)
  %150 = load i8, ptr %arrayidx10.i, align 4
  %conv.i = zext i8 %150 to i32
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %148, i32 0, i32 103
  %151 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %_tx.i.i, align 128
  %_xmit_lock.i.i = getelementptr %struct.netdev_queue, ptr %152, i32 %conv.i, i32 10
  tail call void @_raw_spin_lock(ptr noundef %_xmit_lock.i.i) #20
  %xmit_lock_owner.i.i = getelementptr %struct.netdev_queue, ptr %152, i32 %conv.i, i32 11
  %153 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store volatile i32 %143, ptr %xmit_lock_owner.i.i, align 4
  %call12.i = tail call fastcc i32 @mvneta_xdp_submit_frame(ptr noundef %pp, ptr noundef %arrayidx10.i, ptr noundef nonnull %retval.0.i.i88, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call12.i)
  %cmp.i89 = icmp eq i32 %call12.i, 2
  tail call fastcc void @u64_stats_update_begin(ptr noundef %114) #20
  br i1 %cmp.i89, label %if.then14.i, label %mvneta_xdp_xmit_back.exit.thread135

if.then14.i:                                      ; preds = %if.end.i
  %len.i = getelementptr inbounds %struct.xdp_frame, ptr %retval.0.i.i88, i32 0, i32 1
  %154 = ptrtoint ptr %len.i to i32
  call void @__asan_load2_noabort(i32 %154)
  %155 = load i16, ptr %len.i, align 4
  %conv15.i = zext i16 %155 to i64
  %tx_bytes.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %114, i32 0, i32 1, i32 0, i32 3
  %156 = ptrtoint ptr %tx_bytes.i to i32
  call void @__asan_load8_noabort(i32 %156)
  %157 = load i64, ptr %tx_bytes.i, align 8
  %add16.i = add i64 %157, %conv15.i
  store i64 %add16.i, ptr %tx_bytes.i, align 8
  %tx_packets.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %114, i32 0, i32 1, i32 0, i32 2
  %158 = ptrtoint ptr %tx_packets.i to i32
  call void @__asan_load8_noabort(i32 %158)
  %159 = load i64, ptr %tx_packets.i, align 8
  %inc.i = add i64 %159, 1
  store i64 %inc.i, ptr %tx_packets.i, align 8
  %xdp_tx.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %114, i32 0, i32 1, i32 0, i32 9
  %160 = ptrtoint ptr %xdp_tx.i to i32
  call void @__asan_load8_noabort(i32 %160)
  %161 = load i64, ptr %xdp_tx.i, align 8
  %inc21.i = add i64 %161, 1
  store i64 %inc21.i, ptr %xdp_tx.i, align 8
  %dep_map.i.i.i = getelementptr inbounds %struct.seqcount, ptr %114, i32 0, i32 1
  %162 = tail call ptr @llvm.returnaddress(i32 0) #20
  %163 = ptrtoint ptr %162 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %163) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %164 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %114, align 4
  %inc.i.i.i.i = add i32 %165, 1
  store i32 %inc.i.i.i.i, ptr %114, align 4
  %pending.i.i = getelementptr %struct.mvneta_tx_queue, ptr %145, i32 %rem.i, i32 3
  %166 = ptrtoint ptr %pending.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %pending.i.i, align 4
  %base.i.i.i = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 5
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %if.then14.i
  %pend_desc.addr.0.i.i = phi i32 [ %167, %if.then14.i ], [ %sub.i.i90, %do.body.i.i.do.body.i.i_crit_edge ]
  %168 = tail call i32 @llvm.smin.i32(i32 %pend_desc.addr.0.i.i, i32 255) #20
  %169 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load1_noabort(i32 %169)
  %170 = load i8, ptr %arrayidx10.i, align 4
  %conv.i.i = zext i8 %170 to i32
  %shl.i.i = shl nuw nsw i32 %conv.i.i, 2
  %add1.i.i = add nuw nsw i32 %shl.i.i, 15456
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %171 = tail call i32 @llvm.bswap.i32(i32 %168) #20
  %172 = ptrtoint ptr %base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %base.i.i.i, align 4
  %add.ptr.i.i52.i = getelementptr i8, ptr %173, i32 %add1.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i52.i, i32 %171) #20, !srcloc !256
  %sub.i.i90 = sub i32 %pend_desc.addr.0.i.i, %168
  %cmp2.i.i = icmp sgt i32 %sub.i.i90, 0
  br i1 %cmp2.i.i, label %do.body.i.i.do.body.i.i_crit_edge, label %mvneta_xdp_xmit_back.exit

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i

mvneta_xdp_xmit_back.exit.thread135:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %xdp_tx_err.i = getelementptr inbounds %struct.mvneta_pcpu_stats, ptr %114, i32 0, i32 1, i32 0, i32 10
  %174 = ptrtoint ptr %xdp_tx_err.i to i32
  call void @__asan_load8_noabort(i32 %174)
  %175 = load i64, ptr %xdp_tx_err.i, align 8
  %inc26.i = add i64 %175, 1
  store i64 %inc26.i, ptr %xdp_tx_err.i, align 8
  %dep_map.i.i53.i = getelementptr inbounds %struct.seqcount, ptr %114, i32 0, i32 1
  %176 = tail call ptr @llvm.returnaddress(i32 0) #20
  %177 = ptrtoint ptr %176 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i53.i, i32 noundef %177) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !264
  %178 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %114, align 4
  %inc.i.i.i54.i = add i32 %179, 1
  store i32 %inc.i.i.i54.i, ptr %114, align 4
  %180 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store volatile i32 -1, ptr %xmit_lock_owner.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i.i) #20
  br label %if.then24

mvneta_xdp_xmit_back.exit:                        ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %181 = ptrtoint ptr %pending.i.i to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 0, ptr %pending.i.i, align 4
  %182 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %182)
  store volatile i32 -1, ptr %xmit_lock_owner.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i.i) #20
  br label %sw.epilog

if.then24:                                        ; preds = %mvneta_xdp_xmit_back.exit.thread135, %xdp_convert_buff_to_frame.exit.i.if.then24_crit_edge, %if.then16.i.i.i, %if.end.i.i.if.then24_crit_edge
  %retval.0.i134 = phi i32 [ %call12.i, %mvneta_xdp_xmit_back.exit.thread135 ], [ 1, %xdp_convert_buff_to_frame.exit.i.if.then24_crit_edge ], [ 1, %if.then16.i.i.i ], [ 1, %if.end.i.i.if.then24_crit_edge ]
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr1.i, i32 0, i32 2
  %183 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %183)
  %184 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %184)
  %cmp2.not.i = icmp eq i8 %184, 0
  br i1 %cmp2.not.i, label %if.then24.for.end.i_crit_edge, label %for.body.lr.ph.i

if.then24.for.end.i_crit_edge:                    ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.then24
  %page_pool.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.03.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i92, %for.body.i.for.body.i_crit_edge ]
  %185 = ptrtoint ptr %page_pool.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %page_pool.i, align 16
  %arrayidx.i91 = getelementptr %struct.skb_shared_info, ptr %add.ptr1.i, i32 0, i32 12, i32 %i.03.i
  %187 = ptrtoint ptr %arrayidx.i91 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %arrayidx.i91, align 4
  tail call void @page_pool_put_page(ptr noundef %186, ptr noundef %188, i32 noundef -1, i1 noundef zeroext true) #20
  %inc.i92 = add nuw nsw i32 %i.03.i, 1
  %189 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %189)
  %190 = load i8, ptr %nr_frags.i, align 2
  %conv.i93 = zext i8 %190 to i32
  %cmp.i94 = icmp ult i32 %inc.i92, %conv.i93
  br i1 %cmp.i94, label %for.body.i.for.body.i_crit_edge, label %for.body.i.for.end.i_crit_edge

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %if.then24.for.end.i_crit_edge
  %page_pool2.i = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  %191 = ptrtoint ptr %page_pool2.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %page_pool2.i, align 16
  %193 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %xdp, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %195 = load ptr, ptr @mem_map, align 4
  %196 = ptrtoint ptr %194 to i32
  %sub.i.i95 = add i32 %196, 1073741824
  %shr.i.i = lshr i32 %sub.i.i95, 12
  %197 = getelementptr %struct.page, ptr %195, i32 %shr.i.i, i32 1
  %198 = ptrtoint ptr %197 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load volatile i32, ptr %197, align 4
  %and.i.i.i96 = and i32 %199, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i96)
  %tobool.not.i.i.i97 = icmp eq i32 %and.i.i.i96, 0
  br i1 %tobool.not.i.i.i97, label %if.end.i.i.i100, label %if.then.i.i.i99, !prof !257

if.then.i.i.i99:                                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i98 = add i32 %199, -1
  br label %mvneta_xdp_put_buff.exit

if.end.i.i.i100:                                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i.i = getelementptr %struct.page, ptr %195, i32 %shr.i.i
  %200 = ptrtoint ptr %add.ptr.i.i to i32
  br label %mvneta_xdp_put_buff.exit

mvneta_xdp_put_buff.exit:                         ; preds = %if.end.i.i.i100, %if.then.i.i.i99
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i98, %if.then.i.i.i99 ], [ %200, %if.end.i.i.i100 ]
  %201 = inttoptr i32 %retval.0.i.i.i to ptr
  tail call void @page_pool_put_page(ptr noundef %192, ptr noundef %201, i32 noundef %sub13.sub131, i1 noundef zeroext true) #20
  br label %sw.epilog

sw.default:                                       ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #22
  %dev26 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %202 = ptrtoint ptr %dev26 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %dev26, align 8
  tail call void @bpf_warn_invalid_xdp_action(ptr noundef %203, ptr noundef %prog, i32 noundef %act.0.i) #20
  br label %sw.bb27

sw.bb27:                                          ; preds = %sw.default, %bpf_prog_run_xdp.exit.sw.bb27_crit_edge
  %dev28 = getelementptr inbounds %struct.mvneta_port, ptr %pp, i32 0, i32 8
  %204 = ptrtoint ptr %dev28 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %dev28, align 8
  tail call fastcc void @trace_xdp_exception(ptr noundef %205, ptr noundef %prog, i32 noundef %act.0.i)
  br label %sw.bb29

sw.bb29:                                          ; preds = %sw.bb27, %bpf_prog_run_xdp.exit.sw.bb29_crit_edge
  %nr_frags.i101 = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr1.i, i32 0, i32 2
  %206 = ptrtoint ptr %nr_frags.i101 to i32
  call void @__asan_load1_noabort(i32 %206)
  %207 = load i8, ptr %nr_frags.i101, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %207)
  %cmp2.not.i102 = icmp eq i8 %207, 0
  br i1 %cmp2.not.i102, label %sw.bb29.for.end.i116_crit_edge, label %for.body.lr.ph.i104

sw.bb29.for.end.i116_crit_edge:                   ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i116

for.body.lr.ph.i104:                              ; preds = %sw.bb29
  %page_pool.i103 = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  br label %for.body.i110

for.body.i110:                                    ; preds = %for.body.i110.for.body.i110_crit_edge, %for.body.lr.ph.i104
  %i.03.i105 = phi i32 [ 0, %for.body.lr.ph.i104 ], [ %inc.i107, %for.body.i110.for.body.i110_crit_edge ]
  %208 = ptrtoint ptr %page_pool.i103 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %page_pool.i103, align 16
  %arrayidx.i106 = getelementptr %struct.skb_shared_info, ptr %add.ptr1.i, i32 0, i32 12, i32 %i.03.i105
  %210 = ptrtoint ptr %arrayidx.i106 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %arrayidx.i106, align 4
  tail call void @page_pool_put_page(ptr noundef %209, ptr noundef %211, i32 noundef -1, i1 noundef zeroext true) #20
  %inc.i107 = add nuw nsw i32 %i.03.i105, 1
  %212 = ptrtoint ptr %nr_frags.i101 to i32
  call void @__asan_load1_noabort(i32 %212)
  %213 = load i8, ptr %nr_frags.i101, align 2
  %conv.i108 = zext i8 %213 to i32
  %cmp.i109 = icmp ult i32 %inc.i107, %conv.i108
  br i1 %cmp.i109, label %for.body.i110.for.body.i110_crit_edge, label %for.body.i110.for.end.i116_crit_edge

for.body.i110.for.end.i116_crit_edge:             ; preds = %for.body.i110
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i116

for.body.i110.for.body.i110_crit_edge:            ; preds = %for.body.i110
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i110

for.end.i116:                                     ; preds = %for.body.i110.for.end.i116_crit_edge, %sw.bb29.for.end.i116_crit_edge
  %page_pool2.i111 = getelementptr inbounds %struct.mvneta_rx_queue, ptr %rxq, i32 0, i32 4
  %214 = ptrtoint ptr %page_pool2.i111 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %page_pool2.i111, align 16
  %216 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %xdp, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %218 = load ptr, ptr @mem_map, align 4
  %219 = ptrtoint ptr %217 to i32
  %sub.i.i112 = add i32 %219, 1073741824
  %shr.i.i113 = lshr i32 %sub.i.i112, 12
  %220 = getelementptr %struct.page, ptr %218, i32 %shr.i.i113, i32 1
  %221 = ptrtoint ptr %220 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load volatile i32, ptr %220, align 4
  %and.i.i.i114 = and i32 %222, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i114)
  %tobool.not.i.i.i115 = icmp eq i32 %and.i.i.i114, 0
  br i1 %tobool.not.i.i.i115, label %if.end.i.i.i120, label %if.then.i.i.i118, !prof !257

if.then.i.i.i118:                                 ; preds = %for.end.i116
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i117 = add i32 %222, -1
  br label %mvneta_xdp_put_buff.exit122

if.end.i.i.i120:                                  ; preds = %for.end.i116
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i.i119 = getelementptr %struct.page, ptr %218, i32 %shr.i.i113
  %223 = ptrtoint ptr %add.ptr.i.i119 to i32
  br label %mvneta_xdp_put_buff.exit122

mvneta_xdp_put_buff.exit122:                      ; preds = %if.end.i.i.i120, %if.then.i.i.i118
  %retval.0.i.i.i121 = phi i32 [ %sub.i.i.i117, %if.then.i.i.i118 ], [ %223, %if.end.i.i.i120 ]
  %224 = inttoptr i32 %retval.0.i.i.i121 to ptr
  tail call void @page_pool_put_page(ptr noundef %215, ptr noundef %224, i32 noundef %97, i1 noundef zeroext true) #20
  %xdp_drop = getelementptr inbounds %struct.mvneta_stats, ptr %stats, i32 0, i32 6
  %225 = ptrtoint ptr %xdp_drop to i32
  call void @__asan_load8_noabort(i32 %225)
  %226 = load i64, ptr %xdp_drop, align 8
  %inc30 = add i64 %226, 1
  store i64 %inc30, ptr %xdp_drop, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %mvneta_xdp_put_buff.exit122, %mvneta_xdp_put_buff.exit, %mvneta_xdp_xmit_back.exit, %if.else, %if.then
  %ret.1 = phi i32 [ 1, %mvneta_xdp_put_buff.exit122 ], [ %retval.0.i134, %mvneta_xdp_put_buff.exit ], [ 2, %mvneta_xdp_xmit_back.exit ], [ 1, %if.then ], [ 4, %if.else ]
  %227 = ptrtoint ptr %data_end to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %data_end, align 4
  %add.ptr = getelementptr i8, ptr %228, i32 %frame_sz
  %229 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %xdp, align 4
  %sub.ptr.lhs.cast33 = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast34 = ptrtoint ptr %230 to i32
  %231 = add i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast34
  %sub.ptr.sub4.neg = sub i32 %sub.ptr.rhs.cast3, %231
  %sub36 = add i32 %sub.ptr.sub4.neg, %sub.ptr.lhs.cast33
  %conv37 = zext i32 %sub36 to i64
  %rx_bytes = getelementptr inbounds %struct.mvneta_stats, ptr %stats, i32 0, i32 1
  %232 = ptrtoint ptr %rx_bytes to i32
  call void @__asan_load8_noabort(i32 %232)
  %233 = load i64, ptr %rx_bytes, align 8
  %add = add i64 %233, %conv37
  store i64 %add, ptr %rx_bytes, align 8
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb
  %stats.sink139 = phi ptr [ %stats, %sw.epilog ], [ %xdp_pass, %sw.bb ]
  %retval.0 = phi i32 [ %ret.1, %sw.epilog ], [ 0, %sw.bb ]
  %234 = ptrtoint ptr %stats.sink139 to i32
  call void @__asan_load8_noabort(i32 %234)
  %235 = load i64, ptr %stats.sink139, align 8
  %inc38 = add i64 %235, 1
  store i64 %inc38, ptr %stats.sink139, align 8
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_do_flush() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_do_redirect(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_warn_invalid_xdp_action(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xdp_exception(ptr noundef %dev, ptr noundef %xdp, i32 noundef %act) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 1), ptr blockaddress(@trace_xdp_exception, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !288

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !257

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !289
  %call42 = tail call i32 @__traceiter_xdp_exception(ptr noundef null, ptr noundef %dev, ptr noundef %xdp, i32 noundef %act) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !290
  %13 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !257

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !291
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xdp_exception.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_xdp_exception.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.85, i32 noundef 51, ptr noundef nonnull @.str.86) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !292
  %31 = tail call i32 @llvm.read_register.i32(metadata !244) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_dispatcher_xdp_func(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_master_redirect(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__cant_migrate(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdp_convert_zc_to_xdp_frame(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_warn(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xdp_exception(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_add_rx_frag(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @clk_disable(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdev(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_suspend(ptr nocapture noundef readonly %device) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %device, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.clean_exit_crit_edge, label %if.end

entry.clean_exit_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %clean_exit

if.end:                                           ; preds = %entry
  %neta_armada3700 = getelementptr i8, ptr %1, i32 3324
  %4 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %if.then3, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %lock = getelementptr i8, ptr %1, i32 2360
  tail call void @_raw_spin_lock(ptr noundef %lock) #20
  %is_stopped = getelementptr i8, ptr %1, i32 2404
  %6 = ptrtoint ptr %is_stopped to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 1, ptr %is_stopped, align 4
  tail call void @_raw_spin_unlock(ptr noundef %lock) #20
  %7 = load i32, ptr @online_hpstate, align 4
  %node_online = getelementptr i8, ptr %1, i32 2340
  %call.i = tail call i32 @__cpuhp_state_remove_instance(i32 noundef %7, ptr noundef %node_online, i1 noundef zeroext false) #20
  %node_dead = getelementptr i8, ptr %1, i32 2348
  %call.i34 = tail call i32 @__cpuhp_state_remove_instance(i32 noundef 17, ptr noundef %node_dead, i1 noundef zeroext false) #20
  br label %if.end7

if.end7:                                          ; preds = %if.then3, %if.end.if.end7_crit_edge
  tail call void @rtnl_lock() #20
  tail call fastcc void @mvneta_stop_dev(ptr noundef %add.ptr.i)
  tail call void @rtnl_unlock() #20
  %8 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp35 = icmp sgt i32 %8, 0
  br i1 %cmp35, label %for.body.lr.ph, label %if.end7.for.cond8.preheader_crit_edge

if.end7.for.cond8.preheader_crit_edge:            ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond8.preheader

for.body.lr.ph:                                   ; preds = %if.end7
  %rxqs = getelementptr i8, ptr %1, i32 2328
  br label %for.body

for.cond8.preheader:                              ; preds = %for.body.for.cond8.preheader_crit_edge, %if.end7.for.cond8.preheader_crit_edge
  %9 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp937 = icmp sgt i32 %9, 0
  br i1 %cmp937, label %for.body10.lr.ph, label %for.cond8.preheader.clean_exit_crit_edge

for.cond8.preheader.clean_exit_crit_edge:         ; preds = %for.cond8.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %clean_exit

for.body10.lr.ph:                                 ; preds = %for.cond8.preheader
  %txqs = getelementptr i8, ptr %1, i32 2332
  %base.i.i = getelementptr i8, ptr %1, i32 2324
  br label %for.body10

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %queue.036 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %10 = ptrtoint ptr %rxqs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rxqs, align 8
  %arrayidx = getelementptr %struct.mvneta_rx_queue, ptr %11, i32 %queue.036
  tail call fastcc void @mvneta_rxq_drop_pkts(ptr noundef %add.ptr.i, ptr noundef %arrayidx)
  %inc = add nuw nsw i32 %queue.036, 1
  %12 = load i32, ptr @rxq_number, align 4
  %cmp = icmp slt i32 %inc, %12
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.cond8.preheader_crit_edge

for.body.for.cond8.preheader_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond8.preheader

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.body10:                                       ; preds = %for.body10.for.body10_crit_edge, %for.body10.lr.ph
  %queue.138 = phi i32 [ 0, %for.body10.lr.ph ], [ %inc13, %for.body10.for.body10_crit_edge ]
  %13 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %txqs, align 4
  %arrayidx11 = getelementptr %struct.mvneta_tx_queue, ptr %14, i32 %queue.138
  %15 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx11, align 4
  %conv.i = zext i8 %16 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 4
  %add.i = add nuw nsw i32 %shl.i, 9988
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %17 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %18, i32 %add.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 0) #20, !srcloc !256
  %19 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx11, align 4
  %conv2.i = zext i8 %20 to i32
  %shl3.i = shl nuw nsw i32 %conv2.i, 4
  %add4.i = add nuw nsw i32 %shl3.i, 9984
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %21 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i20.i = getelementptr i8, ptr %22, i32 %add4.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i20.i, i32 0) #20, !srcloc !256
  %23 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx11, align 4
  %conv6.i = zext i8 %24 to i32
  %shl7.i = shl nuw nsw i32 %conv6.i, 2
  %add8.i = or i32 %shl7.i, 15360
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %25 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i22.i = getelementptr i8, ptr %26, i32 %add8.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i22.i, i32 0) #20, !srcloc !256
  %27 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx11, align 4
  %conv10.i = zext i8 %28 to i32
  %shl11.i = shl nuw nsw i32 %conv10.i, 2
  %add12.i = add nuw nsw i32 %shl11.i, 15392
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %29 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i24.i = getelementptr i8, ptr %30, i32 %add12.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i24.i, i32 0) #20, !srcloc !256
  %inc13 = add nuw nsw i32 %queue.138, 1
  %31 = load i32, ptr @txq_number, align 4
  %cmp9 = icmp slt i32 %inc13, %31
  br i1 %cmp9, label %for.body10.for.body10_crit_edge, label %for.body10.clean_exit_crit_edge

for.body10.clean_exit_crit_edge:                  ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #22
  br label %clean_exit

for.body10.for.body10_crit_edge:                  ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body10

clean_exit:                                       ; preds = %for.body10.clean_exit_crit_edge, %for.cond8.preheader.clean_exit_crit_edge, %entry.clean_exit_crit_edge
  tail call void @netif_device_detach(ptr noundef %1) #20
  %clk_bus = getelementptr i8, ptr %1, i32 2648
  %32 = ptrtoint ptr %clk_bus to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %clk_bus, align 8
  tail call void @clk_disable(ptr noundef %33) #20
  tail call void @clk_unprepare(ptr noundef %33) #20
  %clk = getelementptr i8, ptr %1, i32 2644
  %34 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %clk, align 4
  tail call void @clk_disable(ptr noundef %35) #20
  tail call void @clk_unprepare(ptr noundef %35) #20
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mvneta_resume(ptr noundef %device) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %device, i32 -16
  %driver_data.i = getelementptr inbounds %struct.device, ptr %device, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %clk = getelementptr i8, ptr %1, i32 2644
  %2 = ptrtoint ptr %clk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %clk, align 4
  %call.i = tail call i32 @clk_prepare(ptr noundef %3) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.clk_prepare_enable.exit_crit_edge

entry.clk_prepare_enable.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %clk_prepare_enable.exit

if.end.i:                                         ; preds = %entry
  %call1.i = tail call i32 @clk_enable(ptr noundef %3) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end.i.clk_prepare_enable.exit_crit_edge, label %if.then3.i

if.end.i.clk_prepare_enable.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %clk_prepare_enable.exit

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @clk_unprepare(ptr noundef %3) #20
  br label %clk_prepare_enable.exit

clk_prepare_enable.exit:                          ; preds = %if.then3.i, %if.end.i.clk_prepare_enable.exit_crit_edge, %entry.clk_prepare_enable.exit_crit_edge
  %clk_bus = getelementptr i8, ptr %1, i32 2648
  %4 = ptrtoint ptr %clk_bus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %clk_bus, align 8
  %cmp.i = icmp ugt ptr %5, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %clk_prepare_enable.exit.if.end_crit_edge, label %if.then

clk_prepare_enable.exit.if.end_crit_edge:         ; preds = %clk_prepare_enable.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %clk_prepare_enable.exit
  %call.i87 = tail call i32 @clk_prepare(ptr noundef %5) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i87)
  %tobool.not.i88 = icmp eq i32 %call.i87, 0
  br i1 %tobool.not.i88, label %if.end.i91, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end.i91:                                       ; preds = %if.then
  %call1.i89 = tail call i32 @clk_enable(ptr noundef %5) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i89)
  %tobool2.not.i90 = icmp eq i32 %call1.i89, 0
  br i1 %tobool2.not.i90, label %if.end.i91.if.end_crit_edge, label %if.then3.i92

if.end.i91.if.end_crit_edge:                      ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then3.i92:                                     ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @clk_unprepare(ptr noundef %5) #20
  br label %if.end

if.end:                                           ; preds = %if.then3.i92, %if.end.i91.if.end_crit_edge, %if.then.if.end_crit_edge, %clk_prepare_enable.exit.if.end_crit_edge
  %dram_target_info = getelementptr i8, ptr %1, i32 3328
  %6 = ptrtoint ptr %dram_target_info to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dram_target_info, align 8
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %lor.lhs.false, label %if.end.if.then7_crit_edge

if.end.if.then7_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

lor.lhs.false:                                    ; preds = %if.end
  %neta_armada3700 = getelementptr i8, ptr %1, i32 3324
  %8 = ptrtoint ptr %neta_armada3700 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %neta_armada3700, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool6.not = icmp eq i8 %9, 0
  br i1 %tobool6.not, label %lor.lhs.false.if.end9_crit_edge, label %lor.lhs.false.if.then7_crit_edge

lor.lhs.false.if.then7_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

lor.lhs.false.if.end9_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.then7:                                         ; preds = %lor.lhs.false.if.then7_crit_edge, %if.end.if.then7_crit_edge
  tail call fastcc void @mvneta_conf_mbus_windows(ptr noundef %add.ptr.i, ptr noundef %7)
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %lor.lhs.false.if.end9_crit_edge
  %bm_priv = getelementptr i8, ptr %1, i32 2964
  %10 = ptrtoint ptr %bm_priv to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bm_priv, align 4
  %tobool10.not = icmp eq ptr %11, null
  br i1 %tobool10.not, label %if.end9.if.end17_crit_edge, label %if.then11

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.then11:                                        ; preds = %if.end9
  %call12 = tail call fastcc i32 @mvneta_bm_port_init(ptr noundef %add.ptr, ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp = icmp slt i32 %call12, 0
  br i1 %cmp, label %do.end, label %if.then11.if.end17_crit_edge

if.then11.if.end17_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

do.end:                                           ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %device, ptr noundef nonnull @.str.26) #24
  %rx_offset_correction = getelementptr i8, ptr %1, i32 3326
  %12 = ptrtoint ptr %rx_offset_correction to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 256, ptr %rx_offset_correction, align 2
  %13 = ptrtoint ptr %bm_priv to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %bm_priv, align 4
  br label %if.end17

if.end17:                                         ; preds = %do.end, %if.then11.if.end17_crit_edge, %if.end9.if.end17_crit_edge
  tail call fastcc void @mvneta_defaults_set(ptr noundef %add.ptr.i)
  %phy_interface = getelementptr i8, ptr %1, i32 2912
  %14 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %phy_interface, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #20, !srcloc !255
  tail call void @arm_heavy_mb() #20
  %base.i.i = getelementptr i8, ptr %1, i32 2324
  %16 = ptrtoint ptr %base.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %base.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 8320
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 0) #20, !srcloc !256
  %18 = zext i32 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.103)
  switch i32 %15, label %do.end23 [
    i32 18, label %if.end17.if.end24_crit_edge
    i32 4, label %if.end17.if.end24_crit_edge104
    i32 22, label %if.end17.if.end24_crit_edge105
    i32 21, label %if.end17.if.end24_crit_edge106
    i32 12, label %if.end17.if.end24_crit_edge107
    i32 11, label %if.end17.if.end24_crit_edge108
    i32 10, label %if.end17.if.end24_crit_edge109
    i32 9, label %if.end17.if.end24_crit_edge110
  ]

if.end17.if.end24_crit_edge110:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end17.if.end24_crit_edge109:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end17.if.end24_crit_edge108:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end17.if.end24_crit_edge107:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end17.if.end24_crit_edge106:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end17.if.end24_crit_edge105:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end17.if.end24_crit_edge104:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end17.if.end24_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

do.end23:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %device, ptr noundef nonnull @.str.29) #24
  br label %cleanup

if.end24:                                         ; preds = %if.end17.if.end24_crit_edge, %if.end17.if.end24_crit_edge104, %if.end17.if.end24_crit_edge105, %if.end17.if.end24_crit_edge106, %if.end17.if.end24_crit_edge107, %if.end17.if.end24_crit_edge108, %if.end17.if.end24_crit_edge109, %if.end17.if.end24_crit_edge110
  tail call void @netif_device_attach(ptr noundef %1) #20
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %19 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end24.cleanup_crit_edge, label %for.cond.preheader

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end24
  %21 = load i32, ptr @rxq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp28100 = icmp sgt i32 %21, 0
  br i1 %cmp28100, label %for.body.lr.ph, label %for.cond.preheader.for.cond29.preheader_crit_edge

for.cond.preheader.for.cond29.preheader_crit_edge: ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond29.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %rxqs = getelementptr i8, ptr %1, i32 2328
  br label %for.body

for.cond29.preheader:                             ; preds = %for.body.for.cond29.preheader_crit_edge, %for.cond.preheader.for.cond29.preheader_crit_edge
  %22 = load i32, ptr @txq_number, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp30102 = icmp sgt i32 %22, 0
  br i1 %cmp30102, label %for.body31.lr.ph, label %for.cond29.preheader.for.end36_crit_edge

for.cond29.preheader.for.end36_crit_edge:         ; preds = %for.cond29.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end36

for.body31.lr.ph:                                 ; preds = %for.cond29.preheader
  %txqs = getelementptr i8, ptr %1, i32 2332
  br label %for.body31

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %queue.0101 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %23 = ptrtoint ptr %rxqs to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %rxqs, align 8
  %arrayidx = getelementptr %struct.mvneta_rx_queue, ptr %24, i32 %queue.0101
  %next_desc_to_proc = getelementptr %struct.mvneta_rx_queue, ptr %24, i32 %queue.0101, i32 11
  %25 = ptrtoint ptr %next_desc_to_proc to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %next_desc_to_proc, align 16
  tail call fastcc void @mvneta_rxq_hw_init(ptr noundef %add.ptr.i, ptr noundef %arrayidx)
  %inc = add nuw nsw i32 %queue.0101, 1
  %26 = load i32, ptr @rxq_number, align 4
  %cmp28 = icmp slt i32 %inc, %26
  br i1 %cmp28, label %for.body.for.body_crit_edge, label %for.body.for.cond29.preheader_crit_edge

for.body.for.cond29.preheader_crit_edge:          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond29.preheader

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.body31:                                       ; preds = %for.body31.for.body31_crit_edge, %for.body31.lr.ph
  %queue.1103 = phi i32 [ 0, %for.body31.lr.ph ], [ %inc35, %for.body31.for.body31_crit_edge ]
  %27 = ptrtoint ptr %txqs to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %txqs, align 4
  %arrayidx32 = getelementptr %struct.mvneta_tx_queue, ptr %28, i32 %queue.1103
  %next_desc_to_proc33 = getelementptr %struct.mvneta_tx_queue, ptr %28, i32 %queue.1103, i32 13
  %29 = ptrtoint ptr %next_desc_to_proc33 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %next_desc_to_proc33, align 4
  tail call fastcc void @mvneta_txq_hw_init(ptr noundef %add.ptr.i, ptr noundef %arrayidx32)
  %inc35 = add nuw nsw i32 %queue.1103, 1
  %30 = load i32, ptr @txq_number, align 4
  %cmp30 = icmp slt i32 %inc35, %30
  br i1 %cmp30, label %for.body31.for.body31_crit_edge, label %for.body31.for.end36_crit_edge

for.body31.for.end36_crit_edge:                   ; preds = %for.body31
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end36

for.body31.for.body31_crit_edge:                  ; preds = %for.body31
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body31

for.end36:                                        ; preds = %for.body31.for.end36_crit_edge, %for.cond29.preheader.for.end36_crit_edge
  %neta_armada370037 = getelementptr i8, ptr %1, i32 3324
  %31 = ptrtoint ptr %neta_armada370037 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %neta_armada370037, align 4, !range !254
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool38.not = icmp eq i8 %32, 0
  br i1 %tobool38.not, label %if.then39, label %for.end36.if.end43_crit_edge

for.end36.if.end43_crit_edge:                     ; preds = %for.end36
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

if.then39:                                        ; preds = %for.end36
  call void @__sanitizer_cov_trace_pc() #22
  %lock = getelementptr i8, ptr %1, i32 2360
  tail call void @_raw_spin_lock(ptr noundef %lock) #20
  %is_stopped = getelementptr i8, ptr %1, i32 2404
  %33 = ptrtoint ptr %is_stopped to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 0, ptr %is_stopped, align 4
  tail call void @_raw_spin_unlock(ptr noundef %lock) #20
  %34 = load i32, ptr @online_hpstate, align 4
  %node_online = getelementptr i8, ptr %1, i32 2340
  %call.i95 = tail call i32 @__cpuhp_state_add_instance(i32 noundef %34, ptr noundef %node_online, i1 noundef zeroext false) #20
  %node_dead = getelementptr i8, ptr %1, i32 2348
  %call.i96 = tail call i32 @__cpuhp_state_add_instance(i32 noundef 17, ptr noundef %node_dead, i1 noundef zeroext false) #20
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %for.end36.if.end43_crit_edge
  tail call void @rtnl_lock() #20
  tail call fastcc void @mvneta_start_dev(ptr noundef %add.ptr.i)
  tail call void @rtnl_unlock() #20
  tail call void @mvneta_set_rx_mode(ptr noundef %1)
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %if.end24.cleanup_crit_edge, %do.end23
  %retval.0 = phi i32 [ -22, %do.end23 ], [ 0, %if.end43 ], [ 0, %if.end24.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_detach(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_attach(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__cpuhp_remove_state(i32 noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #5

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #5

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #20

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #21 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 106)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #21 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 106)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nounwind readonly }
attributes #10 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #11 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #12 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { argmemonly nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { argmemonly nofree nounwind readonly willreturn }
attributes #20 = { nounwind }
attributes #21 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #22 = { nomerge }
attributes #23 = { nounwind readonly willreturn }
attributes #24 = { cold nounwind }
attributes #25 = { nounwind allocsize(0) }
attributes #26 = { nobuiltin nounwind }
attributes #27 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !11, !13, !14, !16, !17, !19, !20, !22, !23, !25, !27, !29, !31, !33, !34, !36, !38, !40, !41, !42, !43, !44, !45, !46, !48, !49, !51, !53, !55, !57, !58, !60, !62, !64, !66, !68, !69, !70, !71, !73, !75, !77, !78, !79, !81, !82, !83, !85, !86, !87, !89, !91, !93, !95, !97, !99, !101, !103, !105, !107, !109, !111, !113, !115, !117, !119, !120, !121, !123, !124, !126, !127, !128, !129, !131, !133, !134, !135, !137, !139, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !163, !164, !165, !166, !168, !170, !172, !174, !176, !178, !180, !182, !184, !186, !188, !190, !192, !194, !196, !198, !200, !202, !204, !206, !208, !210, !212, !213, !215, !216, !217, !218, !220, !221, !222, !223, !225, !227, !229, !230, !231, !233, !234, !235, !237, !238, !240, !241, !242}
!llvm.named.register.sp = !{!244}
!llvm.module.flags = !{!245, !246, !247, !248, !249, !250, !251, !252}
!llvm.ident = !{!253}

!0 = !{ptr @__initcall__kmod_mvneta__711_5764_mvneta_driver_init6, !1, !"__initcall__kmod_mvneta__711_5764_mvneta_driver_init6", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5764, i32 1}
!2 = !{ptr @__exitcall_mvneta_driver_exit, !3, !"__exitcall_mvneta_driver_exit", i1 false, i1 false}
!3 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5772, i32 1}
!4 = !{ptr @__UNIQUE_ID_description712, !5, !"__UNIQUE_ID_description712", i1 false, i1 false}
!5 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5774, i32 1}
!6 = !{ptr @__UNIQUE_ID_author713, !7, !"__UNIQUE_ID_author713", i1 false, i1 false}
!7 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5775, i32 1}
!8 = !{ptr @__UNIQUE_ID_file714, !9, !"__UNIQUE_ID_file714", i1 false, i1 false}
!9 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5776, i32 1}
!10 = !{ptr @__UNIQUE_ID_license715, !9, !"__UNIQUE_ID_license715", i1 false, i1 false}
!11 = !{ptr @__param_rxq_number, !12, !"__param_rxq_number", i1 false, i1 false}
!12 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5778, i32 1}
!13 = !{ptr @__UNIQUE_ID_rxq_numbertype716, !12, !"__UNIQUE_ID_rxq_numbertype716", i1 false, i1 false}
!14 = !{ptr @__param_txq_number, !15, !"__param_txq_number", i1 false, i1 false}
!15 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5779, i32 1}
!16 = !{ptr @__UNIQUE_ID_txq_numbertype717, !15, !"__UNIQUE_ID_txq_numbertype717", i1 false, i1 false}
!17 = !{ptr @__param_rxq_def, !18, !"__param_rxq_def", i1 false, i1 false}
!18 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5781, i32 1}
!19 = !{ptr @__UNIQUE_ID_rxq_deftype718, !18, !"__UNIQUE_ID_rxq_deftype718", i1 false, i1 false}
!20 = !{ptr @__param_rx_copybreak, !21, !"__param_rx_copybreak", i1 false, i1 false}
!21 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5782, i32 1}
!22 = !{ptr @__UNIQUE_ID_rx_copybreaktype719, !21, !"__UNIQUE_ID_rx_copybreaktype719", i1 false, i1 false}
!23 = !{ptr @online_hpstate, !24, !"online_hpstate", i1 false, i1 false}
!24 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 733, i32 25}
!25 = !{ptr @rxq_def, !26, !"rxq_def", i1 false, i1 false}
!26 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 740, i32 12}
!27 = !{ptr @.str, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5741, i32 53}
!29 = !{ptr @.str.1, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5747, i32 55}
!31 = distinct !{null, !32, !"__already_done", i1 false, i1 false}
!32 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!33 = !{ptr @.str.2, !32, !"<string literal>", i1 false, i1 false}
!34 = !{ptr @.str.3, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5731, i32 11}
!36 = !{ptr @mvneta_driver, !37, !"mvneta_driver", i1 false, i1 false}
!37 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5727, i32 31}
!38 = !{ptr @.str.4, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5330, i32 3}
!40 = !{ptr @.str.5, !39, !"<string literal>", i1 false, i1 false}
!41 = !{ptr @.str.6, !39, !"<string literal>", i1 false, i1 false}
!42 = !{ptr @.str.7, !39, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @.str.8, !39, !"<string literal>", i1 false, i1 false}
!44 = !{ptr @mvneta_probe._entry, !39, !"_entry", i1 false, i1 false}
!45 = !{ptr @mvneta_probe._entry_ptr, !39, !"_entry_ptr", i1 false, i1 false}
!46 = !{ptr @mvneta_probe.__key, !47, !"__key", i1 false, i1 false}
!47 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5343, i32 2}
!48 = !{ptr @.str.9, !47, !"<string literal>", i1 false, i1 false}
!49 = !{ptr @.str.10, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5398, i32 34}
!51 = !{ptr @.str.11, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5401, i32 37}
!53 = !{ptr @.str.12, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5411, i32 41}
!55 = !{ptr @mvneta_probe.__key.13, !56, !"__key", i1 false, i1 false}
!56 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5432, i32 14}
!57 = !{ptr @.str.14, !56, !"<string literal>", i1 false, i1 false}
!58 = !{ptr @.str.15, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5440, i32 14}
!60 = !{ptr @.str.16, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5444, i32 15}
!62 = !{ptr @.str.17, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5447, i32 15}
!64 = !{ptr @.str.18, !65, !"<string literal>", i1 false, i1 false}
!65 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5452, i32 32}
!66 = !{ptr @.str.20, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5456, i32 4}
!68 = !{ptr @.str.21, !67, !"<string literal>", i1 false, i1 false}
!69 = !{ptr @mvneta_probe._entry.19, !67, !"_entry", i1 false, i1 false}
!70 = !{ptr @mvneta_probe._entry_ptr.22, !67, !"_entry_ptr", i1 false, i1 false}
!71 = !{ptr @.str.23, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5460, i32 41}
!73 = !{ptr @.str.24, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5485, i32 33}
!75 = !{ptr @.str.26, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5491, i32 5}
!77 = !{ptr @mvneta_probe._entry.25, !76, !"_entry", i1 false, i1 false}
!78 = !{ptr @mvneta_probe._entry_ptr.27, !76, !"_entry_ptr", i1 false, i1 false}
!79 = !{ptr @.str.29, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5517, i32 3}
!81 = !{ptr @mvneta_probe._entry.28, !80, !"_entry", i1 false, i1 false}
!82 = !{ptr @mvneta_probe._entry_ptr.30, !80, !"_entry_ptr", i1 false, i1 false}
!83 = !{ptr @.str.32, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5551, i32 3}
!85 = !{ptr @mvneta_probe._entry.31, !84, !"_entry", i1 false, i1 false}
!86 = !{ptr @mvneta_probe._entry_ptr.33, !84, !"_entry_ptr", i1 false, i1 false}
!87 = !{ptr @.str.34, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5555, i32 19}
!89 = !{ptr @mvneta_phylink_ops, !90, !"mvneta_phylink_ops", i1 false, i1 false}
!90 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4177, i32 37}
!91 = !{ptr @.str.35, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1287, i32 9}
!93 = !{ptr @.str.36, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1310, i32 9}
!95 = !{ptr @.str.37, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1326, i32 9}
!97 = !{ptr @mvneta_netdev_ops, !98, !"mvneta_netdev_ops", i1 false, i1 false}
!98 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5152, i32 36}
!99 = !{ptr @.str.38, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4386, i32 23}
!101 = !{ptr @.str.39, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4413, i32 19}
!103 = !{ptr @.str.40, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3565, i32 24}
!105 = !{ptr @__func__.mvneta_setup_rxqs, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3566, i32 8}
!107 = !{ptr @.str.41, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3297, i32 8}
!109 = !{ptr @__func__.mvneta_rxq_fill, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3298, i32 8}
!111 = !{ptr @.str.42, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3583, i32 24}
!113 = !{ptr @__func__.mvneta_setup_txqs, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3584, i32 8}
!115 = !{ptr @.str.43, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4192, i32 23}
!117 = distinct !{null, !118, !"__warned", i1 false, i1 false}
!118 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!119 = !{ptr @.str.44, !118, !"<string literal>", i1 false, i1 false}
!120 = !{ptr @.str.45, !118, !"<string literal>", i1 false, i1 false}
!121 = distinct !{null, !122, !"__warned", i1 false, i1 false}
!122 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!123 = !{ptr @.str.46, !122, !"<string literal>", i1 false, i1 false}
!124 = !{ptr @.str.47, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 2692, i32 3}
!126 = !{ptr @.str.48, !125, !"<string literal>", i1 false, i1 false}
!127 = !{ptr @mvneta_tx_tso._entry, !125, !"_entry", i1 false, i1 false}
!128 = !{ptr @mvneta_tx_tso._entry_ptr, !125, !"_entry_ptr", i1 false, i1 false}
!129 = !{ptr @.str.49, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../include/linux/if_vlan.h", i32 598, i32 8}
!131 = distinct !{null, !132, !"__already_done", i1 false, i1 false}
!132 = !{!"../include/linux/dma-mapping.h", i32 326, i32 6}
!133 = !{ptr @.str.50, !132, !"<string literal>", i1 false, i1 false}
!134 = !{ptr @.str.51, !132, !"<string literal>", i1 false, i1 false}
!135 = distinct !{null, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../include/linux/netdevice.h", i32 4690, i32 9}
!137 = distinct !{null, !138, !"__already_done", i1 false, i1 false}
!138 = !{!"../include/linux/seqlock.h", i32 271, i32 2}
!139 = !{ptr @.str.53, !138, !"<string literal>", i1 false, i1 false}
!140 = !{ptr @.str.54, !141, !"<string literal>", i1 false, i1 false}
!141 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3038, i32 21}
!142 = !{ptr @.str.55, !143, !"<string literal>", i1 false, i1 false}
!143 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3046, i32 25}
!144 = !{ptr @.str.56, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3054, i32 9}
!146 = distinct !{null, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3746, i32 20}
!148 = !{ptr @.str.58, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3752, i32 20}
!150 = !{ptr @.str.59, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3782, i32 19}
!152 = !{ptr @.str.60, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3788, i32 19}
!154 = !{ptr @.str.61, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1211, i32 3}
!156 = !{ptr @.str.62, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1224, i32 3}
!158 = !{ptr @.str.63, !159, !"<string literal>", i1 false, i1 false}
!159 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1239, i32 23}
!160 = !{ptr @.str.64, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1063, i32 3}
!162 = !{ptr @.str.65, !161, !"<string literal>", i1 false, i1 false}
!163 = !{ptr @.str.66, !161, !"<string literal>", i1 false, i1 false}
!164 = !{ptr @mvneta_bm_pool_bufsize_set._entry, !161, !"_entry", i1 false, i1 false}
!165 = !{ptr @mvneta_bm_pool_bufsize_set._entry_ptr, !161, !"_entry_ptr", i1 false, i1 false}
!166 = !{ptr @.str.67, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3808, i32 8}
!168 = !{ptr @mvneta_xdp_setup.__msg, !169, !"__msg", i1 false, i1 false}
!169 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4494, i32 3}
!170 = !{ptr @mvneta_xdp_setup.__msg.68, !171, !"__msg", i1 false, i1 false}
!171 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4499, i32 3}
!172 = !{ptr @mvneta_eth_tool_ops, !173, !"mvneta_eth_tool_ops", i1 false, i1 false}
!173 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5167, i32 33}
!174 = !{ptr @.str.69, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4606, i32 28}
!176 = !{ptr @.str.70, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4643, i32 20}
!178 = !{ptr @.str.71, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 4650, i32 8}
!180 = !{ptr @mvneta_statistics, !181, !"mvneta_statistics", i1 false, i1 false}
!181 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 401, i32 38}
!182 = !{ptr @mvneta_phylink_pcs_ops, !183, !"mvneta_phylink_pcs_ops", i1 false, i1 false}
!183 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 3965, i32 37}
!184 = !{ptr @global_port_id, !185, !"global_port_id", i1 false, i1 false}
!185 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 745, i32 12}
!186 = !{ptr @.str.72, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1159, i32 31}
!188 = !{ptr @.str.73, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1160, i32 24}
!190 = !{ptr @.str.74, !191, !"<string literal>", i1 false, i1 false}
!191 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1169, i32 24}
!192 = !{ptr @.str.75, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1179, i32 31}
!194 = !{ptr @.str.76, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1187, i32 24}
!196 = !{ptr @.str.77, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1136, i32 24}
!198 = !{ptr @.str.78, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 2575, i32 20}
!200 = !{ptr @.str.79, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1817, i32 23}
!202 = !{ptr @.str.80, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1821, i32 23}
!204 = !{ptr @.str.81, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1825, i32 23}
!206 = !{ptr @.str.82, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 1829, i32 23}
!208 = !{ptr @.str.83, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../include/linux/filter.h", i32 613, i32 2}
!210 = !{ptr @.str.84, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../include/net/xdp.h", i32 200, i32 3}
!212 = !{ptr @__func__.xdp_update_frame_from_buff, !211, !"<string literal>", i1 false, i1 false}
!213 = distinct !{null, !214, !"__already_done", i1 false, i1 false}
!214 = !{!"../include/trace/events/xdp.h", i32 28, i32 1}
!215 = !{ptr @.str.85, !214, !"<string literal>", i1 false, i1 false}
!216 = distinct !{null, !214, !"__warned", i1 false, i1 false}
!217 = !{ptr @.str.86, !214, !"<string literal>", i1 false, i1 false}
!218 = !{ptr @.str.87, !219, !"<string literal>", i1 false, i1 false}
!219 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 2043, i32 5}
!220 = !{ptr @.str.88, !219, !"<string literal>", i1 false, i1 false}
!221 = !{ptr @mvneta_rx_refill_queue._entry, !219, !"_entry", i1 false, i1 false}
!222 = !{ptr @mvneta_rx_refill_queue._entry_ptr, !219, !"_entry_ptr", i1 false, i1 false}
!223 = !{ptr @mvneta_match, !224, !"mvneta_match", i1 false, i1 false}
!224 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5719, i32 34}
!225 = !{ptr @mvneta_pm_ops, !226, !"mvneta_pm_ops", i1 false, i1 false}
!226 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5717, i32 8}
!227 = !{ptr @.str.89, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5667, i32 4}
!229 = !{ptr @mvneta_resume._entry, !228, !"_entry", i1 false, i1 false}
!230 = !{ptr @mvneta_resume._entry_ptr, !228, !"_entry_ptr", i1 false, i1 false}
!231 = !{ptr @mvneta_resume._entry.90, !232, !"_entry", i1 false, i1 false}
!232 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 5675, i32 3}
!233 = !{ptr @mvneta_resume._entry_ptr.91, !232, !"_entry_ptr", i1 false, i1 false}
!234 = !{ptr @__param_str_rxq_number, !12, !"__param_str_rxq_number", i1 false, i1 false}
!235 = !{ptr @rxq_number, !236, !"rxq_number", i1 false, i1 false}
!236 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 737, i32 12}
!237 = !{ptr @__param_str_txq_number, !15, !"__param_str_txq_number", i1 false, i1 false}
!238 = !{ptr @txq_number, !239, !"txq_number", i1 false, i1 false}
!239 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 738, i32 12}
!240 = !{ptr @__param_str_rxq_def, !18, !"__param_str_rxq_def", i1 false, i1 false}
!241 = !{ptr @__param_str_rx_copybreak, !21, !"__param_str_rx_copybreak", i1 false, i1 false}
!242 = !{ptr @rx_copybreak, !243, !"rx_copybreak", i1 false, i1 false}
!243 = !{!"../drivers/net/ethernet/marvell/mvneta.c", i32 742, i32 12}
!244 = !{!"sp"}
!245 = !{i32 1, !"wchar_size", i32 2}
!246 = !{i32 1, !"min_enum_size", i32 4}
!247 = !{i32 8, !"branch-target-enforcement", i32 0}
!248 = !{i32 8, !"sign-return-address", i32 0}
!249 = !{i32 8, !"sign-return-address-all", i32 0}
!250 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!251 = !{i32 7, !"uwtable", i32 1}
!252 = !{i32 7, !"frame-pointer", i32 2}
!253 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!254 = !{i8 0, i8 2}
!255 = !{i64 2159800617}
!256 = !{i64 6678357}
!257 = !{!"branch_weights", i32 2000, i32 1}
!258 = !{i64 6678775}
!259 = !{i64 2159801281}
!260 = !{!"auto-init"}
!261 = !{!"branch_weights", i32 1, i32 2000}
!262 = !{i32 0, i32 33}
!263 = !{i64 894259}
!264 = !{i64 2150482253}
!265 = !{i64 789249, i64 789310}
!266 = !{i64 791981}
!267 = !{i64 792266}
!268 = !{i64 2155049009, i64 2155049509, i64 2155049046, i64 2155049102, i64 2155049136, i64 2155049160, i64 2155049201, i64 2155049222, i64 2155049250, i64 2155049284}
!269 = !{i64 2155050353}
!270 = !{i64 2155997817}
!271 = !{i64 2150481603}
!272 = !{i64 1301471, i64 1301498}
!273 = !{i64 1301981, i64 1302008, i64 1302042, i64 1302063}
!274 = !{i64 2160803347}
!275 = !{i64 903536, i64 903553, i64 903577, i64 903603, i64 903621}
!276 = !{i64 2160803693}
!277 = !{i64 2149446110}
!278 = !{i64 2149446376}
!279 = !{i64 2155998888}
!280 = !{i64 2150373855}
!281 = !{i64 2150378789}
!282 = !{i64 2150400507}
!283 = !{i64 2150405401}
!284 = !{i64 2150481928}
!285 = !{i64 2155128438}
!286 = !{i64 2155128280}
!287 = !{i64 2155128608}
!288 = !{i64 2148878583, i64 2148878588, i64 2148878601, i64 2148878645, i64 2148878679, i64 2148878700}
!289 = !{i64 2159407189}
!290 = !{i64 2159407404}
!291 = !{i64 2149454669}
!292 = !{i64 2149455705}
