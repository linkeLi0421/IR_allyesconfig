; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/mellanox/mlx4/main.c_pt.bc'
source_filename = "../drivers/net/ethernet/mellanox/mlx4/main.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+mlx4_get_parav_qkey\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_get_parav_qkey\09\09\09\09"
module asm "\09.long\09__crc_mlx4_get_parav_qkey\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_get_parav_qkey:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_get_parav_qkey\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_get_parav_qkey:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx4_sync_pkey_table\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_sync_pkey_table\09\09\09\09"
module asm "\09.long\09__crc_mlx4_sync_pkey_table\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_sync_pkey_table:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_sync_pkey_table\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_sync_pkey_table:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx4_put_slave_node_guid\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_put_slave_node_guid\09\09\09\09"
module asm "\09.long\09__crc_mlx4_put_slave_node_guid\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_put_slave_node_guid:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_put_slave_node_guid\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_put_slave_node_guid:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx4_get_slave_node_guid\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_get_slave_node_guid\09\09\09\09"
module asm "\09.long\09__crc_mlx4_get_slave_node_guid\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_get_slave_node_guid:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_get_slave_node_guid\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_get_slave_node_guid:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx4_is_slave_active\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_is_slave_active\09\09\09\09"
module asm "\09.long\09__crc_mlx4_is_slave_active\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_is_slave_active:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_is_slave_active\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_is_slave_active:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx4_handle_eth_header_mcast_prio\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_handle_eth_header_mcast_prio\09\09\09\09"
module asm "\09.long\09__crc_mlx4_handle_eth_header_mcast_prio\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_handle_eth_header_mcast_prio:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_handle_eth_header_mcast_prio\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_handle_eth_header_mcast_prio:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_bond\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_bond\09\09\09\09"
module asm "\09.long\09__crc_mlx4_bond\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_bond:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_bond\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_bond:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_unbond\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_unbond\09\09\09\09"
module asm "\09.long\09__crc_mlx4_unbond\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_unbond:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_unbond\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_unbond:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_port_map_set\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_port_map_set\09\09\09\09"
module asm "\09.long\09__crc_mlx4_port_map_set\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_port_map_set:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_port_map_set\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_port_map_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_read_clock\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_read_clock\09\09\09\09"
module asm "\09.long\09__crc_mlx4_read_clock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_read_clock:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_read_clock\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_read_clock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_get_internal_clock_params\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_get_internal_clock_params\09\09\09\09"
module asm "\09.long\09__crc_mlx4_get_internal_clock_params\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_get_internal_clock_params:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_get_internal_clock_params\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_get_internal_clock_params:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_counter_alloc\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_counter_alloc\09\09\09\09"
module asm "\09.long\09__crc_mlx4_counter_alloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_counter_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_counter_alloc\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_counter_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_counter_free\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_counter_free\09\09\09\09"
module asm "\09.long\09__crc_mlx4_counter_free\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_counter_free:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_counter_free\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_counter_free:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_get_default_counter_index\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_get_default_counter_index\09\09\09\09"
module asm "\09.long\09__crc_mlx4_get_default_counter_index\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_get_default_counter_index:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_get_default_counter_index\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_get_default_counter_index:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_set_admin_guid\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_set_admin_guid\09\09\09\09"
module asm "\09.long\09__crc_mlx4_set_admin_guid\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_set_admin_guid:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_set_admin_guid\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_set_admin_guid:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mlx4_get_admin_guid\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx4_get_admin_guid\09\09\09\09"
module asm "\09.long\09__crc_mlx4_get_admin_guid\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx4_get_admin_guid:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx4_get_admin_guid\22\09\09\09\09\09"
module asm "__kstrtabns_mlx4_get_admin_guid:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.module_version_attribute = type { %struct.module_attribute, ptr, ptr }
%struct.module_attribute = type { %struct.attribute, ptr, ptr, ptr, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.97 }
%union.anon.97 = type { ptr }
%struct.kparam_array = type { i32, i32, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.pci_driver = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { ptr, ptr }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.atomic_t = type { i32 }
%struct.mlx4_profile = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pci_error_handlers = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.devlink_ops = type { i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.devlink_param = type { i32, ptr, i8, i32, i32, ptr, ptr, ptr }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.38, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.38 = type { %struct.anon.39 }
%struct.anon.39 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.63, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.63 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.sk_buff_head = type { %union.anon.64, i32, %struct.spinlock }
%union.anon.64 = type { %struct.anon.65 }
%struct.anon.65 = type { ptr, ptr }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.mlx4_dev = type { ptr, i32, i32, %struct.mlx4_caps, %struct.mlx4_phys_caps, %struct.mlx4_quotas, %struct.xarray, i8, i8, [64 x i8], i32, i32, [3 x i64], [3 x i64], ptr, i8 }
%struct.mlx4_caps = type { i64, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i64], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i64], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i16, [3 x i8], i32, i32, [5 x i32], i32, [5 x i32], i32, i32, [3 x i32], [3 x i8], [3 x i8], [3 x i8], [3 x i32], [3 x i32], i32, [3 x i8], i16, i32, i32, i8, i32, i32, i16, [3 x i64], i32, [3 x i8], [3 x i8], i8, i32, i32, i32, [3 x i8], %struct.mlx4_rate_limit_caps, i32, i8 }
%struct.mlx4_rate_limit_caps = type { i16, i8, i16, i8, i16 }
%struct.mlx4_phys_caps = type { [3 x i32], [3 x i32], i32, i32, i32, i32 }
%struct.mlx4_quotas = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.122, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.122 = type { ptr }
%struct.mlx4_priv = type { %struct.mlx4_dev, %struct.list_head, %struct.list_head, %struct.spinlock, i32, i32, %struct.list_head, %struct.mutex, %struct.mlx4_fw, %struct.mlx4_cmd, %struct.mlx4_mfunc, %struct.mlx4_bitmap, %struct.mlx4_bitmap, %struct.mlx4_uar_table, %struct.mlx4_mr_table, %struct.mlx4_cq_table, %struct.mlx4_eq_table, %struct.mlx4_srq_table, %struct.mlx4_qp_table, %struct.mlx4_mcg_table, %struct.mlx4_bitmap, [2 x i32], %struct.mlx4_catas_err, ptr, %struct.mlx4_uar, ptr, [3 x %struct.mlx4_port_info], %struct.mlx4_sense, %struct.mutex, %struct.mlx4_msix_ctl, ptr, %struct.list_head, %struct.mutex, ptr, ptr, i32, i32, [128 x [2 x [128 x i8]]], %struct.mlx4_port_map, %struct.mutex, [128 x i64], %struct.atomic_t, %struct.work_struct }
%struct.mlx4_fw = type { i64, i64, i64, i64, ptr, ptr, i32, i16, i8, i8, i8, i8 }
%struct.mlx4_cmd = type { ptr, ptr, %struct.mutex, %struct.semaphore, %struct.semaphore, %struct.rw_semaphore, i32, %struct.spinlock, i32, ptr, i16, i8, i8, i8, i8 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.mlx4_mfunc = type { ptr, ptr, i32, %struct.mlx4_mfunc_master_ctx }
%struct.mlx4_mfunc_master_ctx = type { ptr, ptr, ptr, [3 x %struct.mlx4_master_qp0_state], [3 x i32], [3 x i16], [3 x i16], i8, i8, [3 x i32], %struct.mlx4_resource_tracker, ptr, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.spinlock, [4 x i32], %struct.mlx4_eqe, %struct.mlx4_slave_event_eq, [128 x %struct.mutex], [3 x %struct.mlx4_qos_manager], i32 }
%struct.mlx4_master_qp0_state = type { i32, i32, i32 }
%struct.mlx4_resource_tracker = type { %struct.spinlock, [12 x %struct.rb_root], ptr, [12 x %struct.resource_allocator] }
%struct.resource_allocator = type { %struct.spinlock, %union.anon.123, %union.anon.124, ptr, ptr, ptr }
%union.anon.123 = type { [2 x i32] }
%union.anon.124 = type { [2 x i32] }
%struct.mlx4_eqe = type { i8, i8, i8, i8, %union.anon.125, i8, [2 x i8], i8 }
%union.anon.125 = type { [6 x i32] }
%struct.mlx4_slave_event_eq = type { i32, i32, i32, %struct.spinlock, [128 x %struct.mlx4_eqe] }
%struct.mlx4_qos_manager = type { i32, [1 x i32] }
%struct.mlx4_uar_table = type { %struct.mlx4_bitmap }
%struct.mlx4_mr_table = type { %struct.mlx4_bitmap, %struct.mlx4_buddy, i64, i64, %struct.mlx4_icm_table, %struct.mlx4_icm_table }
%struct.mlx4_buddy = type { ptr, ptr, i32, %struct.spinlock }
%struct.mlx4_icm_table = type { i64, i32, i32, i32, i32, i32, %struct.mutex, ptr }
%struct.mlx4_cq_table = type { %struct.mlx4_bitmap, %struct.spinlock, %struct.xarray, %struct.mlx4_icm_table, %struct.mlx4_icm_table }
%struct.mlx4_eq_table = type { %struct.mlx4_bitmap, ptr, ptr, ptr, i32, ptr, %struct.mlx4_icm_table, %struct.mlx4_icm_table, i32, i8 }
%struct.mlx4_srq_table = type { %struct.mlx4_bitmap, %struct.spinlock, %struct.xarray, %struct.mlx4_icm_table, %struct.mlx4_icm_table }
%struct.mlx4_qp_table = type { ptr, ptr, [3 x i32], i32, i32, %struct.spinlock, %struct.mlx4_icm_table, %struct.mlx4_icm_table, %struct.mlx4_icm_table, %struct.mlx4_icm_table, %struct.mlx4_icm_table }
%struct.mlx4_mcg_table = type { %struct.mutex, %struct.mlx4_bitmap, %struct.mlx4_icm_table }
%struct.mlx4_bitmap = type { i32, i32, i32, i32, i32, i32, i32, %struct.spinlock, ptr }
%struct.mlx4_catas_err = type { ptr, %struct.timer_list, %struct.list_head }
%struct.mlx4_uar = type { i32, i32, %struct.list_head, i32, ptr, ptr }
%struct.mlx4_port_info = type { ptr, i32, [16 x i8], %struct.device_attribute, i32, [16 x i8], %struct.device_attribute, %struct.mlx4_mac_table, %struct.mlx4_vlan_table, %struct.mlx4_roce_gid_table, i32, ptr, %struct.devlink_port }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.mlx4_mac_table = type { [128 x i64], [128 x i32], [128 x i8], %struct.mutex, i32, i32 }
%struct.mlx4_vlan_table = type { [128 x i32], [128 x i32], [128 x i32], %struct.mutex, i32, i32 }
%struct.mlx4_roce_gid_table = type { [128 x %struct.mlx4_roce_gid_entry], %struct.mutex }
%struct.mlx4_roce_gid_entry = type { [16 x i8] }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, %struct.spinlock, i32, i32, ptr, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex, ptr }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.112 }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%union.anon.112 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.mlx4_sense = type { ptr, [3 x i8], [3 x i8], %struct.delayed_work }
%struct.mlx4_msix_ctl = type { [4 x i32], %struct.mutex }
%struct.mlx4_port_map = type { i8, i8 }
%struct.mlx4_slave_state = type { i8, i8, i8, i8, i8, i8, i8, i32, [3 x i16], [3 x i16], [3 x i32], [8 x %struct.mlx4_slave_eqe], [3 x %struct.list_head], [3 x ptr], [64 x %struct.mlx4_slave_event_eq_info], i16, i16, %struct.spinlock, i8, i32, [3 x i32] }
%struct.mlx4_slave_eqe = type { i8, i8, i32 }
%struct.mlx4_slave_event_eq_info = type { i32, i16 }
%struct.mlx4_net_trans_rule_hw_eth = type { i8, i8, i16, [6 x i8], [6 x i8], i16, [6 x i8], i16, [6 x i8], i16, [6 x i8], i8, i8, i16, i16, i16 }
%struct.mlx4_slaves_pport = type { [4 x i32] }
%struct.mlx4_dev_persistent = type { ptr, ptr, [3 x i32], i32, [3 x i32], [3 x i32], %struct.work_struct, ptr, %struct.mutex, i8, %struct.mutex, i8, %struct.mutex, i32, %struct.mlx4_fw_crdump }
%struct.mlx4_fw_crdump = type { i8, ptr, ptr }
%struct.mlx4_clock_params = type { i64, i8, i8 }
%struct.mlx4_cmd_mailbox = type { ptr, i32 }
%struct.mlx4_vf_admin_state = type { [3 x %struct.mlx4_vport_state], [3 x i8] }
%struct.mlx4_vport_state = type { i64, i16, i8, i16, i32, i8, i32, i8, i64 }
%union.devlink_param_value = type { i32, [28 x i8] }
%struct.mlx4_steer = type { [2 x %struct.list_head], [2 x %struct.list_head] }
%struct.mlx4_steer_index = type { %struct.list_head, i32, %struct.list_head }
%struct.io_mapping = type { i32, i32, i32, ptr }
%struct.mlx4_func = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.mlx4_port_cap = type { i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i64, i16, i32, i32, i16, i64, i8 }
%struct.mlx4_adapter = type { [64 x i8], i8 }
%struct.mlx4_config_dev_params = type { i16, i8, i8 }
%struct.mlx4_mod_stat_cfg = type { i8, i8 }
%struct.mlx4_dev_cap = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, %struct.mlx4_rate_limit_caps, i32, [3 x %struct.mlx4_port_cap], [3 x i8], i8 }
%struct.mlx4_init_hca_param = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8, i8, i16, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, i8, i64, i16, i16, i8, i8 }
%struct.mlx4_comm = type { i32, i32 }
%struct.mlx4_func_cap = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.mlx4_spec_qps, i32, i8, i8, i8, i64, i32 }
%struct.mlx4_spec_qps = type { i32, i32, i32, i32, i32 }
%struct.mlx4_vf_dev = type { i8, i8 }
%struct.msix_entry = type { i32, i16 }
%struct.mlx4_eq = type { ptr, ptr, i32, i32, i16, i16, i32, ptr, %struct.mlx4_mtt, %struct.mlx4_eq_tasklet, %struct.mlx4_active_ports, i32, ptr }
%struct.mlx4_mtt = type { i32, i32, i32 }
%struct.mlx4_eq_tasklet = type { %struct.list_head, %struct.list_head, %struct.tasklet_struct, %struct.spinlock }
%struct.tasklet_struct = type { ptr, i32, %struct.atomic_t, i8, %union.anon.142, i32 }
%union.anon.142 = type { ptr }
%struct.mlx4_active_ports = type { [1 x i32] }

@__UNIQUE_ID_author347 = internal constant [31 x i8] c"mlx4_core.author=Roland Dreier\00", section ".modinfo", align 1
@__UNIQUE_ID_description348 = internal constant [61 x i8] c"mlx4_core.description=Mellanox ConnectX HCA low-level driver\00", section ".modinfo", align 1
@__UNIQUE_ID_file349 = internal constant [60 x i8] c"mlx4_core.file=drivers/net/ethernet/mellanox/mlx4/mlx4_core\00", section ".modinfo", align 1
@__UNIQUE_ID_license350 = internal constant [31 x i8] c"mlx4_core.license=Dual BSD/GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_version351 = internal constant [24 x i8] c"mlx4_core.version=4.0-0\00", section ".modinfo", align 1
@.str = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"version\00", [24 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mlx4_core\00", [22 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"4.0-0\00", [26 x i8] zeroinitializer }, align 32
@__modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { ptr @.str, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @__modver_version_show, ptr null, ptr null, ptr null, ptr null }, ptr @.str.1, ptr @.str.2 }, section "__modver", align 4
@__param_str_debug_level = internal constant [22 x i8] c"mlx4_core.debug_level\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@mlx4_debug_level = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__param_debug_level = internal constant %struct.kernel_param { ptr @__param_str_debug_level, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.97 { ptr @mlx4_debug_level } }, section "__param", align 4
@__UNIQUE_ID_debug_leveltype352 = internal constant [35 x i8] c"mlx4_core.parmtype=debug_level:int\00", section ".modinfo", align 1
@__UNIQUE_ID_debug_level353 = internal constant [55 x i8] c"mlx4_core.parm=debug_level:Enable debug tracing if > 0\00", section ".modinfo", align 1
@__param_str_msi_x = internal constant [16 x i8] c"mlx4_core.msi_x\00", align 1
@msi_x = internal global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@__param_msi_x = internal constant %struct.kernel_param { ptr @__param_str_msi_x, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @msi_x } }, section "__param", align 4
@__UNIQUE_ID_msi_xtype354 = internal constant [29 x i8] c"mlx4_core.parmtype=msi_x:int\00", section ".modinfo", align 1
@__UNIQUE_ID_msi_x355 = internal constant [98 x i8] c"mlx4_core.parm=msi_x:0 - don't use MSI-X, 1 - use MSI-X, >1 - limit number of MSI-X irqs to msi_x\00", section ".modinfo", align 1
@__param_str_num_vfs = internal constant [18 x i8] c"mlx4_core.num_vfs\00", align 1
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 4
@__param_arr_num_vfs = internal constant %struct.kparam_array { i32 3, i32 1, ptr @num_vfs_argc, ptr @param_ops_byte, ptr @num_vfs }, align 4
@__param_num_vfs = internal constant %struct.kernel_param { ptr @__param_str_num_vfs, ptr null, ptr @param_array_ops, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @__param_arr_num_vfs } }, section "__param", align 4
@__UNIQUE_ID_num_vfstype356 = internal constant [41 x i8] c"mlx4_core.parmtype=num_vfs:array of byte\00", section ".modinfo", align 1
@__UNIQUE_ID_num_vfs357 = internal constant [92 x i8] c"mlx4_core.parm=num_vfs:enable #num_vfs functions if num_vfs > 0\0Anum_vfs=port1,port2,port1+2\00", section ".modinfo", align 1
@__param_str_probe_vf = internal constant [19 x i8] c"mlx4_core.probe_vf\00", align 1
@__param_arr_probe_vf = internal constant %struct.kparam_array { i32 3, i32 1, ptr @probe_vfs_argc, ptr @param_ops_byte, ptr @probe_vf }, align 4
@__param_probe_vf = internal constant %struct.kernel_param { ptr @__param_str_probe_vf, ptr null, ptr @param_array_ops, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @__param_arr_probe_vf } }, section "__param", align 4
@__UNIQUE_ID_probe_vftype358 = internal constant [42 x i8] c"mlx4_core.parmtype=probe_vf:array of byte\00", section ".modinfo", align 1
@__UNIQUE_ID_probe_vf359 = internal constant [103 x i8] c"mlx4_core.parm=probe_vf:number of vfs to probe by pf driver (num_vfs > 0)\0Aprobe_vf=port1,port2,port1+2\00", section ".modinfo", align 1
@__param_str_log_num_mgm_entry_size = internal constant [33 x i8] c"mlx4_core.log_num_mgm_entry_size\00", align 1
@mlx4_log_num_mgm_entry_size = internal global { i32, [28 x i8] } { i32 10, [28 x i8] zeroinitializer }, align 32
@__param_log_num_mgm_entry_size = internal constant %struct.kernel_param { ptr @__param_str_log_num_mgm_entry_size, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @mlx4_log_num_mgm_entry_size } }, section "__param", align 4
@__UNIQUE_ID_log_num_mgm_entry_sizetype360 = internal constant [46 x i8] c"mlx4_core.parmtype=log_num_mgm_entry_size:int\00", section ".modinfo", align 1
@__UNIQUE_ID_log_num_mgm_entry_size361 = internal constant [223 x i8] c"mlx4_core.parm=log_num_mgm_entry_size:log mgm size, that defines the num of qp per mcg, for example: 10 gives 248.range: 7 <= log_num_mgm_entry_size <= 12. To activate device managed flow steering when available, set to -1\00", section ".modinfo", align 1
@__param_str_enable_64b_cqe_eqe = internal constant [29 x i8] c"mlx4_core.enable_64b_cqe_eqe\00", align 1
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 4
@enable_64b_cqe_eqe = internal global { i8, [31 x i8] } { i8 1, [31 x i8] zeroinitializer }, align 32
@__param_enable_64b_cqe_eqe = internal constant %struct.kernel_param { ptr @__param_str_enable_64b_cqe_eqe, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @enable_64b_cqe_eqe } }, section "__param", align 4
@__UNIQUE_ID_enable_64b_cqe_eqetype362 = internal constant [43 x i8] c"mlx4_core.parmtype=enable_64b_cqe_eqe:bool\00", section ".modinfo", align 1
@__UNIQUE_ID_enable_64b_cqe_eqe363 = internal constant [101 x i8] c"mlx4_core.parm=enable_64b_cqe_eqe:Enable 64 byte CQEs/EQEs when the FW supports this (default: True)\00", section ".modinfo", align 1
@__param_str_enable_4k_uar = internal constant [24 x i8] c"mlx4_core.enable_4k_uar\00", align 1
@enable_4k_uar = internal global { i8, [31 x i8] } zeroinitializer, align 32
@__param_enable_4k_uar = internal constant %struct.kernel_param { ptr @__param_str_enable_4k_uar, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @enable_4k_uar } }, section "__param", align 4
@__UNIQUE_ID_enable_4k_uartype364 = internal constant [38 x i8] c"mlx4_core.parmtype=enable_4k_uar:bool\00", section ".modinfo", align 1
@__UNIQUE_ID_enable_4k_uar365 = internal constant [130 x i8] c"mlx4_core.parm=enable_4k_uar:Enable using 4K UAR. Should not be enabled if have VFs which do not support 4K UARs (default: false)\00", section ".modinfo", align 1
@__param_str_log_num_mac = internal constant [22 x i8] c"mlx4_core.log_num_mac\00", align 1
@log_num_mac = internal global { i32, [28 x i8] } { i32 7, [28 x i8] zeroinitializer }, align 32
@__param_log_num_mac = internal constant %struct.kernel_param { ptr @__param_str_log_num_mac, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @log_num_mac } }, section "__param", align 4
@__UNIQUE_ID_log_num_mactype366 = internal constant [35 x i8] c"mlx4_core.parmtype=log_num_mac:int\00", section ".modinfo", align 1
@__UNIQUE_ID_log_num_mac367 = internal constant [70 x i8] c"mlx4_core.parm=log_num_mac:Log2 max number of MACs per ETH port (1-7)\00", section ".modinfo", align 1
@__param_str_log_num_vlan = internal constant [23 x i8] c"mlx4_core.log_num_vlan\00", align 1
@log_num_vlan = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_log_num_vlan = internal constant %struct.kernel_param { ptr @__param_str_log_num_vlan, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @log_num_vlan } }, section "__param", align 4
@__UNIQUE_ID_log_num_vlantype368 = internal constant [36 x i8] c"mlx4_core.parmtype=log_num_vlan:int\00", section ".modinfo", align 1
@__UNIQUE_ID_log_num_vlan369 = internal constant [72 x i8] c"mlx4_core.parm=log_num_vlan:Log2 max number of VLANs per ETH port (0-7)\00", section ".modinfo", align 1
@__param_str_use_prio = internal constant [19 x i8] c"mlx4_core.use_prio\00", align 1
@use_prio = internal global { i8, [31 x i8] } zeroinitializer, align 32
@__param_use_prio = internal constant %struct.kernel_param { ptr @__param_str_use_prio, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @use_prio } }, section "__param", align 4
@__UNIQUE_ID_use_priotype370 = internal constant [33 x i8] c"mlx4_core.parmtype=use_prio:bool\00", section ".modinfo", align 1
@__UNIQUE_ID_use_prio371 = internal constant [83 x i8] c"mlx4_core.parm=use_prio:Enable steering by VLAN priority on ETH ports (deprecated)\00", section ".modinfo", align 1
@log_mtts_per_seg = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__param_str_log_mtts_per_seg = internal constant [27 x i8] c"mlx4_core.log_mtts_per_seg\00", align 1
@__param_log_mtts_per_seg = internal constant %struct.kernel_param { ptr @__param_str_log_mtts_per_seg, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @log_mtts_per_seg } }, section "__param", align 4
@__UNIQUE_ID_log_mtts_per_segtype372 = internal constant [40 x i8] c"mlx4_core.parmtype=log_mtts_per_seg:int\00", section ".modinfo", align 1
@__UNIQUE_ID_log_mtts_per_seg373 = internal constant [90 x i8] c"mlx4_core.parm=log_mtts_per_seg:Log2 number of MTT entries per segment (0-7) (default: 0)\00", section ".modinfo", align 1
@__param_str_port_type_array = internal constant [26 x i8] c"mlx4_core.port_type_array\00", align 1
@__param_arr_port_type_array = internal constant %struct.kparam_array { i32 2, i32 4, ptr @arr_argc, ptr @param_ops_int, ptr @port_type_array }, align 4
@__param_port_type_array = internal constant %struct.kernel_param { ptr @__param_str_port_type_array, ptr null, ptr @param_array_ops, i16 292, i8 -1, i8 0, %union.anon.97 { ptr @__param_arr_port_type_array } }, section "__param", align 4
@__UNIQUE_ID_port_type_arraytype374 = internal constant [48 x i8] c"mlx4_core.parmtype=port_type_array:array of int\00", section ".modinfo", align 1
@__UNIQUE_ID_port_type_array375 = internal constant [103 x i8] c"mlx4_core.parm=port_type_array:Array of port types: HW_DEFAULT (0) is default 1 for IB, 2 for Ethernet\00", section ".modinfo", align 1
@mlx4_check_port_params._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.3, ptr @.str.4, ptr @.str.5, i32 315, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Only same port types supported on this HCA, aborting\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mlx4_check_port_params\00", [41 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"drivers/net/ethernet/mellanox/mlx4/main.c\00", [54 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@mlx4_check_port_params._entry_ptr = internal global ptr @mlx4_check_port_params._entry, section ".printk_index", align 4
@mlx4_check_port_params._entry.8 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.4, ptr @.str.5, i32 324, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"Requested port type for port %d is not supported on this HCA\0A\00", [34 x i8] zeroinitializer }, align 32
@mlx4_check_port_params._entry_ptr.10 = internal global ptr @mlx4_check_port_params._entry.8, section ".printk_index", align 4
@__kstrtab_mlx4_get_parav_qkey = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_get_parav_qkey = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_get_parav_qkey = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_get_parav_qkey to i32), ptr @__kstrtab_mlx4_get_parav_qkey, ptr @__kstrtabns_mlx4_get_parav_qkey }, section "___ksymtab+mlx4_get_parav_qkey", align 4
@__kstrtab_mlx4_sync_pkey_table = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_sync_pkey_table = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_sync_pkey_table = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_sync_pkey_table to i32), ptr @__kstrtab_mlx4_sync_pkey_table, ptr @__kstrtabns_mlx4_sync_pkey_table }, section "___ksymtab+mlx4_sync_pkey_table", align 4
@__kstrtab_mlx4_put_slave_node_guid = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_put_slave_node_guid = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_put_slave_node_guid = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_put_slave_node_guid to i32), ptr @__kstrtab_mlx4_put_slave_node_guid, ptr @__kstrtabns_mlx4_put_slave_node_guid }, section "___ksymtab+mlx4_put_slave_node_guid", align 4
@__kstrtab_mlx4_get_slave_node_guid = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_get_slave_node_guid = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_get_slave_node_guid = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_get_slave_node_guid to i32), ptr @__kstrtab_mlx4_get_slave_node_guid, ptr @__kstrtabns_mlx4_get_slave_node_guid }, section "___ksymtab+mlx4_get_slave_node_guid", align 4
@__kstrtab_mlx4_is_slave_active = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_is_slave_active = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_is_slave_active = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_is_slave_active to i32), ptr @__kstrtab_mlx4_is_slave_active, ptr @__kstrtabns_mlx4_is_slave_active }, section "___ksymtab+mlx4_is_slave_active", align 4
@__kstrtab_mlx4_handle_eth_header_mcast_prio = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_handle_eth_header_mcast_prio = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_handle_eth_header_mcast_prio = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_handle_eth_header_mcast_prio to i32), ptr @__kstrtab_mlx4_handle_eth_header_mcast_prio, ptr @__kstrtabns_mlx4_handle_eth_header_mcast_prio }, section "___ksymtab+mlx4_handle_eth_header_mcast_prio", align 4
@mlx4_change_port_types._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.11, ptr @.str.12, ptr @.str.5, i32 1140, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Failed to set port %d, aborting\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mlx4_change_port_types\00", [41 x i8] zeroinitializer }, align 32
@mlx4_change_port_types._entry_ptr = internal global ptr @mlx4_change_port_types._entry, section ".printk_index", align 4
@mlx4_change_port_types._entry.13 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.12, ptr @.str.5, i32 1147, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Failed to register device\0A\00", [37 x i8] zeroinitializer }, align 32
@mlx4_change_port_types._entry_ptr.15 = internal global ptr @mlx4_change_port_types._entry.13, section ".printk_index", align 4
@mlx4_bond._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @.str.17, ptr @.str.5, i32 1457, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Failed to bond device: %d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mlx4_bond\00", [22 x i8] zeroinitializer }, align 32
@mlx4_bond._entry_ptr = internal global ptr @mlx4_bond._entry, section ".printk_index", align 4
@mlx4_bond._entry.18 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.17, ptr @.str.5, i32 1461, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"bond for multifunction failed\0A\00", [33 x i8] zeroinitializer }, align 32
@mlx4_bond._entry_ptr.20 = internal global ptr @mlx4_bond._entry.18, section ".printk_index", align 4
@mlx4_bond._entry.21 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.17, ptr @.str.5, i32 1469, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Device is bonded\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\017\00", [29 x i8] zeroinitializer }, align 32
@mlx4_bond._entry_ptr.24 = internal global ptr @mlx4_bond._entry.21, section ".printk_index", align 4
@__kstrtab_mlx4_bond = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_bond = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_bond = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_bond to i32), ptr @__kstrtab_mlx4_bond, ptr @__kstrtabns_mlx4_bond }, section "___ksymtab_gpl+mlx4_bond", align 4
@mlx4_unbond._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.26, ptr @.str.5, i32 1487, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Failed to unbond device: %d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"mlx4_unbond\00", [20 x i8] zeroinitializer }, align 32
@mlx4_unbond._entry_ptr = internal global ptr @mlx4_unbond._entry, section ".printk_index", align 4
@mlx4_unbond._entry.27 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.28, ptr @.str.26, ptr @.str.5, i32 1491, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Failed to unbond device for multifunction (%d)\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@mlx4_unbond._entry_ptr.30 = internal global ptr @mlx4_unbond._entry.27, section ".printk_index", align 4
@mlx4_unbond._entry.31 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.26, ptr @.str.5, i32 1498, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Device is unbonded\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx4_unbond._entry_ptr.33 = internal global ptr @mlx4_unbond._entry.31, section ".printk_index", align 4
@__kstrtab_mlx4_unbond = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_unbond = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_unbond = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_unbond to i32), ptr @__kstrtab_mlx4_unbond, ptr @__kstrtabns_mlx4_unbond }, section "___ksymtab_gpl+mlx4_unbond", align 4
@mlx4_port_map_set._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.35, ptr @.str.5, i32 1536, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"port map changed: [%d][%d]\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"mlx4_port_map_set\00", [46 x i8] zeroinitializer }, align 32
@mlx4_port_map_set._entry_ptr = internal global ptr @mlx4_port_map_set._entry, section ".printk_index", align 4
@mlx4_port_map_set._entry.36 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @.str.35, ptr @.str.5, i32 1540, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Failed to change port mape: %d\0A\00", [32 x i8] zeroinitializer }, align 32
@mlx4_port_map_set._entry_ptr.38 = internal global ptr @mlx4_port_map_set._entry.36, section ".printk_index", align 4
@__kstrtab_mlx4_port_map_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_port_map_set = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_port_map_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_port_map_set to i32), ptr @__kstrtab_mlx4_port_map_set, ptr @__kstrtabns_mlx4_port_map_set }, section "___ksymtab_gpl+mlx4_port_map_set", align 4
@__kstrtab_mlx4_read_clock = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_read_clock = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_read_clock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_read_clock to i32), ptr @__kstrtab_mlx4_read_clock, ptr @__kstrtabns_mlx4_read_clock }, section "___ksymtab_gpl+mlx4_read_clock", align 4
@mlx4_get_internal_clock_params._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.40, ptr @.str.5, i32 1953, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Map clock to user is not supported.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"mlx4_get_internal_clock_params\00", [33 x i8] zeroinitializer }, align 32
@mlx4_get_internal_clock_params._entry_ptr = internal global ptr @mlx4_get_internal_clock_params._entry, section ".printk_index", align 4
@__kstrtab_mlx4_get_internal_clock_params = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_get_internal_clock_params = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_get_internal_clock_params = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_get_internal_clock_params to i32), ptr @__kstrtab_mlx4_get_internal_clock_params, ptr @__kstrtabns_mlx4_get_internal_clock_params }, section "___ksymtab_gpl+mlx4_get_internal_clock_params", align 4
@__kstrtab_mlx4_counter_alloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_counter_alloc = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_counter_alloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_counter_alloc to i32), ptr @__kstrtab_mlx4_counter_alloc, ptr @__kstrtabns_mlx4_counter_alloc }, section "___ksymtab_gpl+mlx4_counter_alloc", align 4
@__kstrtab_mlx4_counter_free = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_counter_free = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_counter_free = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_counter_free to i32), ptr @__kstrtab_mlx4_counter_free, ptr @__kstrtabns_mlx4_counter_free }, section "___ksymtab_gpl+mlx4_counter_free", align 4
@__kstrtab_mlx4_get_default_counter_index = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_get_default_counter_index = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_get_default_counter_index = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_get_default_counter_index to i32), ptr @__kstrtab_mlx4_get_default_counter_index, ptr @__kstrtabns_mlx4_get_default_counter_index }, section "___ksymtab_gpl+mlx4_get_default_counter_index", align 4
@__kstrtab_mlx4_set_admin_guid = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_set_admin_guid = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_set_admin_guid = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_set_admin_guid to i32), ptr @__kstrtab_mlx4_set_admin_guid, ptr @__kstrtabns_mlx4_set_admin_guid }, section "___ksymtab_gpl+mlx4_set_admin_guid", align 4
@__kstrtab_mlx4_get_admin_guid = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx4_get_admin_guid = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx4_get_admin_guid = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx4_get_admin_guid to i32), ptr @__kstrtab_mlx4_get_admin_guid, ptr @__kstrtabns_mlx4_get_admin_guid }, section "___ksymtab_gpl+mlx4_get_admin_guid", align 4
@mlx4_driver = internal global { %struct.pci_driver, [36 x i8] } { %struct.pci_driver { %struct.list_head zeroinitializer, ptr @.str.1, ptr @mlx4_pci_table, ptr @mlx4_init_one, ptr @mlx4_remove_one, ptr null, ptr null, ptr @mlx4_shutdown, ptr null, ptr null, ptr null, ptr @mlx4_err_handler, ptr null, ptr null, %struct.device_driver { ptr null, ptr null, ptr null, ptr null, i8 0, i32 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx4_pm_ops, ptr null, ptr null }, %struct.pci_dynids zeroinitializer }, [36 x i8] zeroinitializer }, align 32
@mlx4_wq = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@__initcall__kmod_mlx4_core__390_4510_mlx4_init6 = internal global ptr @mlx4_init, section ".initcall6.init", align 4
@__exitcall_mlx4_cleanup = internal global ptr @mlx4_cleanup, section ".exitcall.exit", align 4
@num_vfs_argc = internal global { i32, [28 x i8] } zeroinitializer, align 32
@param_ops_byte = external dso_local constant %struct.kernel_param_ops, align 4
@num_vfs = internal global { [3 x i8], [29 x i8] } zeroinitializer, align 32
@probe_vfs_argc = internal global { i32, [28 x i8] } zeroinitializer, align 32
@probe_vf = internal global { [3 x i8], [29 x i8] } zeroinitializer, align 32
@arr_argc = internal global { i32, [28 x i8] } { i32 2, [28 x i8] zeroinitializer }, align 32
@port_type_array = internal global { [2 x i32], [24 x i8] } zeroinitializer, align 32
@.str.41 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"mlx4_en\00", [24 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"mlx4_ib\00", [24 x i8] zeroinitializer }, align 32
@mlx4_mf_bond._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.44, ptr @.str.5, i32 1387, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"HA mode unsupported for dual ported VFs\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mlx4_mf_bond\00", [19 x i8] zeroinitializer }, align 32
@mlx4_mf_bond._entry_ptr = internal global ptr @mlx4_mf_bond._entry, section ".printk_index", align 4
@mlx4_mf_bond._entry.45 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.46, ptr @.str.44, ptr @.str.5, i32 1400, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"HA mode is not supported for %d VFs (max %d are allowed)\0A\00", [38 x i8] zeroinitializer }, align 32
@mlx4_mf_bond._entry_ptr.47 = internal global ptr @mlx4_mf_bond._entry.45, section ".printk_index", align 4
@mlx4_mf_bond._entry.48 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.44, ptr @.str.5, i32 1405, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"HA mode unsupported for NON DMFS steering\0A\00", [53 x i8] zeroinitializer }, align 32
@mlx4_mf_bond._entry_ptr.50 = internal global ptr @mlx4_mf_bond._entry.48, section ".printk_index", align 4
@mlx4_mf_unbond._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.52, ptr @.str.5, i32 1433, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"multifunction unbond for flow rules failed (%d)\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"mlx4_mf_unbond\00", [17 x i8] zeroinitializer }, align 32
@mlx4_mf_unbond._entry_ptr = internal global ptr @mlx4_mf_unbond._entry, section ".printk_index", align 4
@mlx4_mf_unbond._entry.53 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.54, ptr @.str.52, ptr @.str.5, i32 1436, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"multifunction unbond for MAC table failed (%d)\0A\00", [48 x i8] zeroinitializer }, align 32
@mlx4_mf_unbond._entry_ptr.55 = internal global ptr @mlx4_mf_unbond._entry.53, section ".printk_index", align 4
@mlx4_mf_unbond._entry.56 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.52, ptr @.str.5, i32 1441, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"multifunction unbond for VLAN table failed (%d)\0A\00", [47 x i8] zeroinitializer }, align 32
@mlx4_mf_unbond._entry_ptr.58 = internal global ptr @mlx4_mf_unbond._entry.56, section ".printk_index", align 4
@mlx4_slave_exit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.59, ptr @.str.60, ptr @.str.5, i32 1876, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Failed to close slave function\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mlx4_slave_exit\00", [16 x i8] zeroinitializer }, align 32
@mlx4_slave_exit._entry_ptr = internal global ptr @mlx4_slave_exit._entry, section ".printk_index", align 4
@mlx4_free_ownership._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.62, ptr @.str.5, i32 3212, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Failed to obtain ownership bit\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"mlx4_free_ownership\00", [44 x i8] zeroinitializer }, align 32
@mlx4_free_ownership._entry_ptr = internal global ptr @mlx4_free_ownership._entry, section ".printk_index", align 4
@mlx4_restart_one_up._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str.5, i32 4220, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"%s: ERROR: mlx4_load_one failed, pci_name=%s, err=%d\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"mlx4_restart_one_up\00", [44 x i8] zeroinitializer }, align 32
@mlx4_restart_one_up._entry_ptr = internal global ptr @mlx4_restart_one_up._entry, section ".printk_index", align 4
@mlx4_restart_one_up._entry.65 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.66, ptr @.str.64, ptr @.str.5, i32 4228, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"could not restore original port types (%d)\0A\00", [52 x i8] zeroinitializer }, align 32
@mlx4_restart_one_up._entry_ptr.67 = internal global ptr @mlx4_restart_one_up._entry.65, section ".printk_index", align 4
@mlx4_internal_err_reset = external dso_local local_unnamed_addr global i32, align 4
@mlx4_load_one.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.68 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&priv->ctx_lock\00", [16 x i8] zeroinitializer }, align 32
@mlx4_load_one.__key.69 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.70 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&priv->port_mutex\00", [46 x i8] zeroinitializer }, align 32
@mlx4_load_one.__key.71 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.72 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&priv->bond_mutex\00", [46 x i8] zeroinitializer }, align 32
@mlx4_load_one.__key.73 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.74 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&priv->pgdir_mutex\00", [45 x i8] zeroinitializer }, align 32
@mlx4_load_one.__key.75 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.76 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&priv->cmd.context_lock\00", [40 x i8] zeroinitializer }, align 32
@mlx4_load_one.__key.77 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.78 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&priv->bf_mutex\00", [16 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.80, ptr @.str.5, i32 3364, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"Detected virtual function - running in slave mode\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mlx4_load_one\00", [18 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr = internal global ptr @mlx4_load_one._entry, section ".printk_index", align 4
@mlx4_load_one._entry.81 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.82, ptr @.str.80, ptr @.str.5, i32 3375, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Multiple PFs not yet supported - Skipping PF\0A\00", [50 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.83 = internal global ptr @mlx4_load_one._entry.81, section ".printk_index", align 4
@mlx4_load_one.__key.84 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.85 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"(work_completion)(&priv->opreq_task)\00", [59 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry.86 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.80, ptr @.str.5, i32 3390, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Failed to reset HCA, aborting\0A\00", [33 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.88 = internal global ptr @mlx4_load_one._entry.86, section ".printk_index", align 4
@mlx4_load_one._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.80, ptr @.str.5, i32 3411, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Failed to init command interface, aborting\0A\00", [52 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.91 = internal global ptr @mlx4_load_one._entry.89, section ".printk_index", align 4
@mlx4_load_one._entry.92 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.93, ptr @.str.80, ptr @.str.5, i32 3426, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Failed to init slave mfunc interface, aborting\0A\00", [48 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.94 = internal global ptr @mlx4_load_one._entry.92, section ".printk_index", align 4
@mlx4_load_one._entry.95 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.96, ptr @.str.80, ptr @.str.5, i32 3434, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Failed to init fw, aborting.\0A\00", [34 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.97 = internal global ptr @mlx4_load_one._entry.95, section ".printk_index", align 4
@mlx4_load_one._entry.98 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.80, ptr @.str.5, i32 3450, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"QUERY_DEV_CAP command failed, aborting.\0A\00", [55 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.100 = internal global ptr @mlx4_load_one._entry.98, section ".printk_index", align 4
@mlx4_load_one._entry.101 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.102, ptr @.str.80, ptr @.str.5, i32 3467, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Invalid SRIOV state\0A\00", [43 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.103 = internal global ptr @mlx4_load_one._entry.101, section ".printk_index", align 4
@mlx4_load_one._entry.104 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.105, ptr @.str.80, ptr @.str.5, i32 3472, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Failed to reset HCA, aborting.\0A\00", [32 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.106 = internal global ptr @mlx4_load_one._entry.104, section ".printk_index", align 4
@mlx4_load_one._entry.107 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.80, ptr @.str.5, i32 3485, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.108 = internal global ptr @mlx4_load_one._entry.107, section ".printk_index", align 4
@pf_loading = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@mlx4_load_one._entry.109 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.110, ptr @.str.80, ptr @.str.5, i32 3529, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Failed to init VHCR command interface, aborting\0A\00", [47 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.111 = internal global ptr @mlx4_load_one._entry.109, section ".printk_index", align 4
@mlx4_load_one._entry.112 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.102, ptr @.str.80, ptr @.str.5, i32 3537, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.113 = internal global ptr @mlx4_load_one._entry.112, section ".printk_index", align 4
@mlx4_load_one._entry.114 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.115, ptr @.str.80, ptr @.str.5, i32 3558, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"Error: Trying to configure VFs on port 2, but HCA has only %d physical ports\0A\00", [50 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.116 = internal global ptr @mlx4_load_one._entry.114, section ".printk_index", align 4
@mlx4_load_one._entry.117 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.118, ptr @.str.80, ptr @.str.5, i32 3580, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Failed to init master mfunc interface, aborting.\0A\00", [46 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.119 = internal global ptr @mlx4_load_one._entry.117, section ".printk_index", align 4
@mlx4_load_one.__key.120 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.121 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"&priv->msix_ctl.pool_lock\00", [38 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry.122 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.123, ptr @.str.80, ptr @.str.5, i32 3596, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"INTx is not supported in multi-function mode, aborting\0A\00", [40 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.124 = internal global ptr @mlx4_load_one._entry.122, section ".printk_index", align 4
@mlx4_load_one._entry.125 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.80, ptr @.str.5, i32 3627, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c" Failed to arm comm channel eq: %x\0A\00", [60 x i8] zeroinitializer }, align 32
@mlx4_load_one._entry_ptr.127 = internal global ptr @mlx4_load_one._entry.125, section ".printk_index", align 4
@mlx4_get_ownership._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.128, ptr @.str.5, i32 3192, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mlx4_get_ownership\00", [45 x i8] zeroinitializer }, align 32
@mlx4_get_ownership._entry_ptr = internal global ptr @mlx4_get_ownership._entry, section ".printk_index", align 4
@mlx4_init_fw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.130, ptr @.str.5, i32 2275, ptr @.str.131, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"non-primary physical function, skipping\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mlx4_init_fw\00", [19 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@mlx4_init_fw._entry_ptr = internal global ptr @mlx4_init_fw._entry, section ".printk_index", align 4
@mlx4_init_fw._entry.132 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.133, ptr @.str.130, ptr @.str.5, i32 2277, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"QUERY_FW command failed, aborting\0A\00", [61 x i8] zeroinitializer }, align 32
@mlx4_init_fw._entry_ptr.134 = internal global ptr @mlx4_init_fw._entry.132, section ".printk_index", align 4
@mlx4_init_fw._entry.135 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.136, ptr @.str.130, ptr @.str.5, i32 2283, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Failed to start FW, aborting\0A\00", [34 x i8] zeroinitializer }, align 32
@mlx4_init_fw._entry_ptr.137 = internal global ptr @mlx4_init_fw._entry.135, section ".printk_index", align 4
@mlx4_init_fw._entry.138 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.130, ptr @.str.5, i32 2291, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Failed to override log_pg_sz parameter\0A\00", [56 x i8] zeroinitializer }, align 32
@mlx4_init_fw._entry_ptr.140 = internal global ptr @mlx4_init_fw._entry.138, section ".printk_index", align 4
@mlx4_load_fw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.142, ptr @.str.5, i32 1557, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Couldn't allocate FW area, aborting\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mlx4_load_fw\00", [19 x i8] zeroinitializer }, align 32
@mlx4_load_fw._entry_ptr = internal global ptr @mlx4_load_fw._entry, section ".printk_index", align 4
@mlx4_load_fw._entry.143 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.142, ptr @.str.5, i32 1563, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"MAP_FA command failed, aborting\0A\00", [63 x i8] zeroinitializer }, align 32
@mlx4_load_fw._entry_ptr.145 = internal global ptr @mlx4_load_fw._entry.143, section ".printk_index", align 4
@mlx4_load_fw._entry.146 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.142, ptr @.str.5, i32 1569, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"RUN_FW command failed, aborting\0A\00", [63 x i8] zeroinitializer }, align 32
@mlx4_load_fw._entry_ptr.148 = internal global ptr @mlx4_load_fw._entry.146, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@mlx4_check_dev_cap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.149, ptr @.str.150, ptr @.str.5, i32 3298, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"Requested %d VFs, but FW does not support more than 64\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mlx4_check_dev_cap\00", [45 x i8] zeroinitializer }, align 32
@mlx4_check_dev_cap._entry_ptr = internal global ptr @mlx4_check_dev_cap._entry, section ".printk_index", align 4
@mlx4_enable_sriov._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.152, ptr @.str.5, i32 3243, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"SR-IOV was already enabled, but with num_vfs (%d) different than requested (%d)\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"mlx4_enable_sriov\00", [46 x i8] zeroinitializer }, align 32
@mlx4_enable_sriov._entry_ptr = internal global ptr @mlx4_enable_sriov._entry, section ".printk_index", align 4
@mlx4_enable_sriov._entry.153 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.154, ptr @.str.152, ptr @.str.5, i32 3250, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Failed to allocate memory for VFs\0A\00", [61 x i8] zeroinitializer }, align 32
@mlx4_enable_sriov._entry_ptr.155 = internal global ptr @mlx4_enable_sriov._entry.153, section ".printk_index", align 4
@mlx4_enable_sriov._entry.156 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.157, ptr @.str.152, ptr @.str.5, i32 3257, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"requested vfs (%d) > available vfs (%d). Continuing without SR_IOV\0A\00", [60 x i8] zeroinitializer }, align 32
@mlx4_enable_sriov._entry_ptr.158 = internal global ptr @mlx4_enable_sriov._entry.156, section ".printk_index", align 4
@mlx4_enable_sriov._entry.159 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.160, ptr @.str.152, ptr @.str.5, i32 3261, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Enabling SR-IOV with %d VFs\0A\00", [35 x i8] zeroinitializer }, align 32
@mlx4_enable_sriov._entry_ptr.161 = internal global ptr @mlx4_enable_sriov._entry.159, section ".printk_index", align 4
@mlx4_enable_sriov._entry.162 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.163, ptr @.str.152, ptr @.str.5, i32 3266, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"Failed to enable SR-IOV, continuing without SR-IOV (err = %d)\0A\00", [33 x i8] zeroinitializer }, align 32
@mlx4_enable_sriov._entry_ptr.164 = internal global ptr @mlx4_enable_sriov._entry.162, section ".printk_index", align 4
@mlx4_enable_sriov._entry.165 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.166, ptr @.str.152, ptr @.str.5, i32 3269, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Running in master mode\0A\00", [40 x i8] zeroinitializer }, align 32
@mlx4_enable_sriov._entry_ptr.167 = internal global ptr @mlx4_enable_sriov._entry.165, section ".printk_index", align 4
@mlx4_init_hca._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.169, ptr @.str.5, i32 2319, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"QUERY_DEV_CAP command failed, aborting\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mlx4_init_hca\00", [18 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr = internal global ptr @mlx4_init_hca._entry, section ".printk_index", align 4
@mlx4_init_hca._entry.170 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.171, ptr @.str.169, ptr @.str.5, i32 2332, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Fail to get physical port id\0A\00", [34 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.172 = internal global ptr @mlx4_init_hca._entry.170, section ".printk_index", align 4
@mlx4_init_hca._entry.173 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.169, ptr @.str.5, i32 2338, ptr @.str.131, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"Running from within kdump kernel. Using low memory profile\0A\00", [36 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.175 = internal global ptr @mlx4_init_hca._entry.173, section ".printk_index", align 4
@low_mem_profile = internal constant { %struct.mlx4_profile, [36 x i8] } { %struct.mlx4_profile { i32 131072, i32 16, i32 64, i32 256, i32 256, i32 512, i32 128 }, [36 x i8] zeroinitializer }, align 32
@default_profile = internal constant { %struct.mlx4_profile, [36 x i8] } { %struct.mlx4_profile { i32 262144, i32 16, i32 65536, i32 65536, i32 8192, i32 524288, i32 1048576 }, [36 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry.176 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.169, ptr @.str.5, i32 2374, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"INIT_HCA command failed, aborting\0A\00", [61 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.178 = internal global ptr @mlx4_init_hca._entry.176, section ".printk_index", align 4
@mlx4_init_hca._entry.179 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.169, ptr @.str.5, i32 2381, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"QUERY_FUNC command failed, aborting.\0A\00", [58 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.181 = internal global ptr @mlx4_init_hca._entry.179, section ".printk_index", align 4
@mlx4_init_hca._entry.182 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.169, ptr @.str.5, i32 2397, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"QUERY_HCA command failed, disable timestamp\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.184 = internal global ptr @mlx4_init_hca._entry.182, section ".printk_index", align 4
@mlx4_init_hca._entry.185 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.186, ptr @.str.169, ptr @.str.5, i32 2410, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"HCA frequency is 0 - timestamping is not supported\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.187 = internal global ptr @mlx4_init_hca._entry.185, section ".printk_index", align 4
@mlx4_init_hca._entry.188 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.189, ptr @.str.169, ptr @.str.5, i32 2417, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"Failed to map internal clock. Timestamping is not supported\0A\00", [35 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.190 = internal global ptr @mlx4_init_hca._entry.188, section ".printk_index", align 4
@mlx4_init_hca._entry.191 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.192, ptr @.str.169, ptr @.str.5, i32 2424, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Optimized steering validation failed\0A\00", [58 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.193 = internal global ptr @mlx4_init_hca._entry.191, section ".printk_index", align 4
@mlx4_init_hca._entry.194 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.169, ptr @.str.5, i32 2436, ptr @.str.131, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"DMFS high rate steer mode is: %s\0A\00", [62 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.196 = internal global ptr @mlx4_init_hca._entry.194, section ".printk_index", align 4
@mlx4_init_hca._entry.197 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.169, ptr @.str.5, i32 2442, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Failed to initialize slave\0A\00", [36 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.199 = internal global ptr @mlx4_init_hca._entry.197, section ".printk_index", align 4
@mlx4_init_hca._entry.200 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.201, ptr @.str.169, ptr @.str.5, i32 2448, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Failed to obtain slave caps\0A\00", [35 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.202 = internal global ptr @mlx4_init_hca._entry.200, section ".printk_index", align 4
@mlx4_init_hca._entry.203 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.204, ptr @.str.169, ptr @.str.5, i32 2454, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Failed to map blue flame area\0A\00", [33 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.205 = internal global ptr @mlx4_init_hca._entry.203, section ".printk_index", align 4
@mlx4_init_hca._entry.206 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.207, ptr @.str.169, ptr @.str.5, i32 2462, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"QUERY_ADAPTER command failed, aborting\0A\00", [56 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.208 = internal global ptr @mlx4_init_hca._entry.206, section ".printk_index", align 4
@mlx4_init_hca._entry.209 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.210, ptr @.str.169, ptr @.str.5, i32 2469, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Failed to query CONFIG_DEV parameters\0A\00", [57 x i8] zeroinitializer }, align 32
@mlx4_init_hca._entry_ptr.211 = internal global ptr @mlx4_init_hca._entry.209, section ".printk_index", align 4
@mlx4_dev_cap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.212, ptr @.str.5, i32 464, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mlx4_dev_cap\00", [19 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr = internal global ptr @mlx4_dev_cap._entry, section ".printk_index", align 4
@mlx4_dev_cap._entry.213 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.212, ptr @.str.5, i32 471, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"HCA minimum page size of %d bigger than kernel PAGE_SIZE of %ld, aborting\0A\00", [53 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.215 = internal global ptr @mlx4_dev_cap._entry.213, section ".printk_index", align 4
@mlx4_dev_cap._entry.216 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.212, ptr @.str.5, i32 476, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"HCA has %d ports, but we only support %d, aborting\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.218 = internal global ptr @mlx4_dev_cap._entry.216, section ".printk_index", align 4
@mlx4_dev_cap._entry.219 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.212, ptr @.str.5, i32 484, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"HCA reported UAR size of 0x%x bigger than PCI resource 2 size of 0x%llx, aborting\0A\00", [45 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.221 = internal global ptr @mlx4_dev_cap._entry.219, section ".printk_index", align 4
@mlx4_dev_cap._entry.222 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.223, ptr @.str.212, ptr @.str.5, i32 496, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"QUERY_PORT command failed, aborting\0A\00", [59 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.224 = internal global ptr @mlx4_dev_cap._entry.222, section ".printk_index", align 4
@mlx4_dev_cap._entry.225 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.212, ptr @.str.5, i32 639, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"Requested number of MACs is too much for port %d, reducing to %d\0A\00", [62 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.227 = internal global ptr @mlx4_dev_cap._entry.225, section ".printk_index", align 4
@mlx4_dev_cap._entry.228 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.212, ptr @.str.5, i32 644, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"Requested number of VLANs is too much for port %d, reducing to %d\0A\00", [61 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.230 = internal global ptr @mlx4_dev_cap._entry.228, section ".printk_index", align 4
@mlx4_dev_cap._entry.231 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.232, ptr @.str.212, ptr @.str.5, i32 652, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"Granular QoS per VF not supported with IB/Eth configuration\0A\00", [35 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.233 = internal global ptr @mlx4_dev_cap._entry.231, section ".printk_index", align 4
@mlx4_dev_cap._entry.234 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.235, ptr @.str.212, ptr @.str.5, i32 700, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"64B EQEs/CQEs supported by the device but not enabled\0A\00", [41 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.236 = internal global ptr @mlx4_dev_cap._entry.234, section ".printk_index", align 4
@mlx4_dev_cap._entry.237 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.238, ptr @.str.212, ptr @.str.5, i32 708, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Disabling EQE/CQE stride per user request\0A\00", [53 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.239 = internal global ptr @mlx4_dev_cap._entry.237, section ".printk_index", align 4
@mlx4_dev_cap._entry.240 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.241, ptr @.str.212, ptr @.str.5, i32 727, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Old device ETS support detected\0A\00", [63 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.242 = internal global ptr @mlx4_dev_cap._entry.240, section ".printk_index", align 4
@mlx4_dev_cap._entry.243 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.244, ptr @.str.212, ptr @.str.5, i32 728, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Consider upgrading device FW.\0A\00", [33 x i8] zeroinitializer }, align 32
@mlx4_dev_cap._entry_ptr.245 = internal global ptr @mlx4_dev_cap._entry.243, section ".printk_index", align 4
@mlx4_enable_cqe_eqe_stride._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.246, ptr @.str.247, ptr @.str.5, i32 382, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Enabling CQE stride cacheLine supported\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"mlx4_enable_cqe_eqe_stride\00", [37 x i8] zeroinitializer }, align 32
@mlx4_enable_cqe_eqe_stride._entry_ptr = internal global ptr @mlx4_enable_cqe_eqe_stride._entry, section ".printk_index", align 4
@mlx4_enable_ignore_fcs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.248, ptr @.str.249, ptr @.str.5, i32 443, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"SRIOV mode - Disabling Ignore FCS\00", [62 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mlx4_enable_ignore_fcs\00", [41 x i8] zeroinitializer }, align 32
@mlx4_enable_ignore_fcs._entry_ptr = internal global ptr @mlx4_enable_ignore_fcs._entry, section ".printk_index", align 4
@mlx4_enable_ignore_fcs._entry.250 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.251, ptr @.str.249, ptr @.str.5, i32 450, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Keep FCS is not supported - Disabling Ignore FCS\00", [47 x i8] zeroinitializer }, align 32
@mlx4_enable_ignore_fcs._entry_ptr.252 = internal global ptr @mlx4_enable_ignore_fcs._entry.250, section ".printk_index", align 4
@choose_steering_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.253, ptr @.str.254, ptr @.str.5, i32 2178, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"DMFS high rate mode not supported\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"choose_steering_mode\00", [43 x i8] zeroinitializer }, align 32
@choose_steering_mode._entry_ptr = internal global ptr @choose_steering_mode._entry, section ".printk_index", align 4
@choose_steering_mode._entry.255 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.256, ptr @.str.254, ptr @.str.5, i32 2210, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [102 x i8], [58 x i8] } { [102 x i8] c"Must have both UC_STEER and MC_STEER flags set to use B0 steering - falling back to A0 steering mode\0A\00", [58 x i8] zeroinitializer }, align 32
@choose_steering_mode._entry_ptr.257 = internal global ptr @choose_steering_mode._entry.255, section ".printk_index", align 4
@choose_steering_mode._entry.258 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.259, ptr @.str.254, ptr @.str.5, i32 2221, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [90 x i8], [38 x i8] } { [90 x i8] c"Steering mode is: %s, oper_log_mgm_entry_size = %d, modparam log_num_mgm_entry_size = %d\0A\00", [38 x i8] zeroinitializer }, align 32
@choose_steering_mode._entry_ptr.260 = internal global ptr @choose_steering_mode._entry.258, section ".printk_index", align 4
@.str.261 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"A0 steering\00", [20 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"B0 steering\00", [20 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Device managed flow steering\00", [35 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Unrecognize steering mode\00", [38 x i8] zeroinitializer }, align 32
@choose_tunnel_offload_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.265, ptr @.str.266, ptr @.str.5, i32 2234, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Tunneling offload mode is: %s\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"choose_tunnel_offload_mode\00", [37 x i8] zeroinitializer }, align 32
@choose_tunnel_offload_mode._entry_ptr = internal global ptr @choose_tunnel_offload_mode._entry, section ".printk_index", align 4
@.str.267 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"vxlan\00", [26 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@elfcorehdr_addr = external dso_local local_unnamed_addr global i64, align 8
@mlx4_init_icm._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.269, ptr @.str.270, ptr @.str.5, i32 1652, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"SET_ICM_SIZE command failed, aborting\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mlx4_init_icm\00", [18 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr = internal global ptr @mlx4_init_icm._entry, section ".printk_index", align 4
@mlx4_init_icm._entry.271 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.272, ptr @.str.270, ptr @.str.5, i32 1658, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"%lld KB of HCA context requires %lld KB aux memory\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.273 = internal global ptr @mlx4_init_icm._entry.271, section ".printk_index", align 4
@mlx4_init_icm._entry.274 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.275, ptr @.str.270, ptr @.str.5, i32 1663, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Couldn't allocate aux memory, aborting\0A\00", [56 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.276 = internal global ptr @mlx4_init_icm._entry.274, section ".printk_index", align 4
@mlx4_init_icm._entry.277 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.278, ptr @.str.270, ptr @.str.5, i32 1669, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"MAP_ICM_AUX command failed, aborting\0A\00", [58 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.279 = internal global ptr @mlx4_init_icm._entry.277, section ".printk_index", align 4
@mlx4_init_icm._entry.280 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.281, ptr @.str.270, ptr @.str.5, i32 1675, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Failed to map cMPT context memory, aborting\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.282 = internal global ptr @mlx4_init_icm._entry.280, section ".printk_index", align 4
@mlx4_init_icm._entry.283 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.284, ptr @.str.270, ptr @.str.5, i32 1685, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Failed to map EQ context memory, aborting\0A\00", [53 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.285 = internal global ptr @mlx4_init_icm._entry.283, section ".printk_index", align 4
@mlx4_init_icm._entry.286 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.287, ptr @.str.270, ptr @.str.5, i32 1706, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Failed to map MTT context memory, aborting\0A\00", [52 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.288 = internal global ptr @mlx4_init_icm._entry.286, section ".printk_index", align 4
@mlx4_init_icm._entry.289 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.290, ptr @.str.270, ptr @.str.5, i32 1716, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Failed to map dMPT context memory, aborting\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.291 = internal global ptr @mlx4_init_icm._entry.289, section ".printk_index", align 4
@mlx4_init_icm._entry.292 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.293, ptr @.str.270, ptr @.str.5, i32 1727, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Failed to map QP context memory, aborting\0A\00", [53 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.294 = internal global ptr @mlx4_init_icm._entry.292, section ".printk_index", align 4
@mlx4_init_icm._entry.295 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.296, ptr @.str.270, ptr @.str.5, i32 1738, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Failed to map AUXC context memory, aborting\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.297 = internal global ptr @mlx4_init_icm._entry.295, section ".printk_index", align 4
@mlx4_init_icm._entry.298 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.299, ptr @.str.270, ptr @.str.5, i32 1749, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Failed to map ALTC context memory, aborting\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.300 = internal global ptr @mlx4_init_icm._entry.298, section ".printk_index", align 4
@mlx4_init_icm._entry.301 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.302, ptr @.str.270, ptr @.str.5, i32 1760, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Failed to map RDMARC context memory, aborting\0A\00", [49 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.303 = internal global ptr @mlx4_init_icm._entry.301, section ".printk_index", align 4
@mlx4_init_icm._entry.304 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.305, ptr @.str.270, ptr @.str.5, i32 1770, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Failed to map CQ context memory, aborting\0A\00", [53 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.306 = internal global ptr @mlx4_init_icm._entry.304, section ".printk_index", align 4
@mlx4_init_icm._entry.307 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.270, ptr @.str.5, i32 1780, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Failed to map SRQ context memory, aborting\0A\00", [52 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.309 = internal global ptr @mlx4_init_icm._entry.307, section ".printk_index", align 4
@mlx4_init_icm._entry.310 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.311, ptr @.str.270, ptr @.str.5, i32 1798, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Failed to map MCG context memory, aborting\0A\00", [52 x i8] zeroinitializer }, align 32
@mlx4_init_icm._entry_ptr.312 = internal global ptr @mlx4_init_icm._entry.310, section ".printk_index", align 4
@mlx4_query_func._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.313, ptr @.str.5, i32 351, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mlx4_query_func\00", [16 x i8] zeroinitializer }, align 32
@mlx4_query_func._entry_ptr = internal global ptr @mlx4_query_func._entry, section ".printk_index", align 4
@mlx4_validate_optimized_steering._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.314, ptr @.str.315, ptr @.str.5, i32 2248, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"QUERY_DEV_CAP command failed, can't verify DMFS high rate steering.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"mlx4_validate_optimized_steering\00", [63 x i8] zeroinitializer }, align 32
@mlx4_validate_optimized_steering._entry_ptr = internal global ptr @mlx4_validate_optimized_steering._entry, section ".printk_index", align 4
@mlx4_validate_optimized_steering._entry.316 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.317, ptr @.str.315, ptr @.str.5, i32 2259, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"DMFS high rate steer mode differ, driver requested %s but %s in FW.\0A\00", [59 x i8] zeroinitializer }, align 32
@mlx4_validate_optimized_steering._entry_ptr.318 = internal global ptr @mlx4_validate_optimized_steering._entry.316, section ".printk_index", align 4
@.str.319 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"enabled\00", [24 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"disabled\00", [23 x i8] zeroinitializer }, align 32
@mlx4_dev_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.321, ptr @.str.322, ptr @.str.5, i32 432, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"QUERY_PORT command failed.\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mlx4_dev_port\00", [18 x i8] zeroinitializer }, align 32
@mlx4_dev_port._entry_ptr = internal global ptr @mlx4_dev_port._entry, section ".printk_index", align 4
@.str.323 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"default performance\00", [44 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"dynamic hybrid mode\00", [44 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"performance optimized for limited rule configuration (static)\00", [34 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"disabled performance optimized steering\00", [56 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"performance optimized steering not supported\00", [51 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Unrecognized mode\00", [46 x i8] zeroinitializer }, align 32
@mlx4_init_slave._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.329, ptr @.str.330, ptr @.str.5, i32 2057, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"PF is not ready - Deferring probe\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mlx4_init_slave\00", [16 x i8] zeroinitializer }, align 32
@mlx4_init_slave._entry_ptr = internal global ptr @mlx4_init_slave._entry, section ".printk_index", align 4
@mlx4_init_slave._entry.331 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.332, ptr @.str.330, ptr @.str.5, i32 2064, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"PF is not responsive, skipping initialization\0A\00", [49 x i8] zeroinitializer }, align 32
@mlx4_init_slave._entry_ptr.333 = internal global ptr @mlx4_init_slave._entry.331, section ".printk_index", align 4
@mlx4_init_slave._entry.334 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.335, ptr @.str.330, ptr @.str.5, i32 2069, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Sending reset\0A\00", [17 x i8] zeroinitializer }, align 32
@mlx4_init_slave._entry_ptr.336 = internal global ptr @mlx4_init_slave._entry.334, section ".printk_index", align 4
@mlx4_init_slave._entry.337 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.338, ptr @.str.330, ptr @.str.5, i32 2076, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"slave is currently in the middle of FLR - Deferring probe\0A\00", [37 x i8] zeroinitializer }, align 32
@mlx4_init_slave._entry_ptr.339 = internal global ptr @mlx4_init_slave._entry.337, section ".printk_index", align 4
@mlx4_init_slave._entry.340 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.341, ptr @.str.330, ptr @.str.5, i32 2090, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"slave driver version is not supported by the master\0A\00", [43 x i8] zeroinitializer }, align 32
@mlx4_init_slave._entry_ptr.342 = internal global ptr @mlx4_init_slave._entry.340, section ".printk_index", align 4
@mlx4_init_slave._entry.343 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.344, ptr @.str.330, ptr @.str.5, i32 2094, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Sending vhcr0\0A\00", [17 x i8] zeroinitializer }, align 32
@mlx4_init_slave._entry_ptr.345 = internal global ptr @mlx4_init_slave._entry.343, section ".printk_index", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@mlx4_comm_check_offline._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.346, ptr @.str.347, ptr @.str.5, i32 2028, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Communication channel is offline.\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mlx4_comm_check_offline\00", [40 x i8] zeroinitializer }, align 32
@mlx4_comm_check_offline._entry_ptr = internal global ptr @mlx4_comm_check_offline._entry, section ".printk_index", align 4
@mlx4_slave_cap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.348, ptr @.str.349, ptr @.str.5, i32 919, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Failed to allocate memory for slave_cap\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"mlx4_slave_cap\00", [17 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr = internal global ptr @mlx4_slave_cap._entry, section ".printk_index", align 4
@mlx4_slave_cap._entry.350 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.351, ptr @.str.349, ptr @.str.5, i32 926, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"QUERY_HCA command failed, aborting\0A\00", [60 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.352 = internal global ptr @mlx4_slave_cap._entry.350, section ".printk_index", align 4
@mlx4_slave_cap._entry.353 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.354, ptr @.str.349, ptr @.str.5, i32 934, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Unknown hca global capabilities\0A\00", [63 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.355 = internal global ptr @mlx4_slave_cap._entry.353, section ".printk_index", align 4
@mlx4_slave_cap._entry.356 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.349, ptr @.str.5, i32 944, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.357 = internal global ptr @mlx4_slave_cap._entry.356, section ".printk_index", align 4
@mlx4_slave_cap._entry.358 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.359, ptr @.str.349, ptr @.str.5, i32 950, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"QUERY_FW command failed: could not get FW version\0A\00", [45 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.360 = internal global ptr @mlx4_slave_cap._entry.358, section ".printk_index", align 4
@mlx4_slave_cap._entry.361 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.362, ptr @.str.349, ptr @.str.5, i32 953, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"HCA minimum page size:%d\0A\00", [38 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.363 = internal global ptr @mlx4_slave_cap._entry.361, section ".printk_index", align 4
@mlx4_slave_cap._entry.364 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.349, ptr @.str.5, i32 956, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.365 = internal global ptr @mlx4_slave_cap._entry.364, section ".printk_index", align 4
@mlx4_slave_cap._entry.366 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.367, ptr @.str.349, ptr @.str.5, i32 967, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"Invalid configuration: uar page size is larger than system page size\0A\00", [58 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.368 = internal global ptr @mlx4_slave_cap._entry.366, section ".printk_index", align 4
@mlx4_slave_cap._entry.369 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.370, ptr @.str.349, ptr @.str.5, i32 984, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"QUERY_FUNC_CAP general command failed, aborting (%d)\0A\00", [42 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.371 = internal global ptr @mlx4_slave_cap._entry.369, section ".printk_index", align 4
@mlx4_slave_cap._entry.372 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.373, ptr @.str.349, ptr @.str.5, i32 992, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Unknown pf context behaviour %x known flags %x\0A\00", [48 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.374 = internal global ptr @mlx4_slave_cap._entry.372, section ".printk_index", align 4
@mlx4_slave_cap._entry.375 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.349, ptr @.str.5, i32 1016, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.376 = internal global ptr @mlx4_slave_cap._entry.375, section ".printk_index", align 4
@mlx4_slave_cap._entry.377 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.378, ptr @.str.349, ptr @.str.5, i32 1025, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.378 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Set special QP caps failed. aborting\0A\00", [58 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.379 = internal global ptr @mlx4_slave_cap._entry.377, section ".printk_index", align 4
@mlx4_slave_cap._entry.380 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.381, ptr @.str.349, ptr @.str.5, i32 1036, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [90 x i8], [38 x i8] } { [90 x i8] c"HCA reported UAR region size of 0x%x bigger than PCI resource 2 size of 0x%llx, aborting\0A\00", [38 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.382 = internal global ptr @mlx4_slave_cap._entry.380, section ".printk_index", align 4
@mlx4_slave_cap._entry.383 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.384, ptr @.str.349, ptr @.str.5, i32 1068, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Timestamping is not supported in slave mode\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.385 = internal global ptr @mlx4_slave_cap._entry.383, section ".printk_index", align 4
@mlx4_slave_cap._entry.386 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.387, ptr @.str.349, ptr @.str.5, i32 1071, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"User MAC FW update is not supported in slave mode\0A\00", [45 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.388 = internal global ptr @mlx4_slave_cap._entry.386, section ".printk_index", align 4
@mlx4_slave_cap._entry.389 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.390, ptr @.str.349, ptr @.str.5, i32 1075, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.390 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"RSS support for IP fragments is %s\0A\00", [60 x i8] zeroinitializer }, align 32
@mlx4_slave_cap._entry_ptr.391 = internal global ptr @mlx4_slave_cap._entry.389, section ".printk_index", align 4
@.str.392 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"on\00", [29 x i8] zeroinitializer }, align 32
@.str.393 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"off\00", [28 x i8] zeroinitializer }, align 32
@mlx4_slave_special_qp_cap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.394, ptr @.str.395, ptr @.str.5, i32 875, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Failed to allocate memory for special qps cap\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.395 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"mlx4_slave_special_qp_cap\00", [38 x i8] zeroinitializer }, align 32
@mlx4_slave_special_qp_cap._entry_ptr = internal global ptr @mlx4_slave_special_qp_cap._entry, section ".printk_index", align 4
@mlx4_slave_special_qp_cap._entry.396 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.397, ptr @.str.395, ptr @.str.5, i32 884, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.397 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"QUERY_FUNC_CAP port command failed for port %d, aborting (%d)\0A\00", [33 x i8] zeroinitializer }, align 32
@mlx4_slave_special_qp_cap._entry_ptr.398 = internal global ptr @mlx4_slave_special_qp_cap._entry.396, section ".printk_index", align 4
@mlx4_slave_special_qp_cap._entry.399 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.400, ptr @.str.395, ptr @.str.5, i32 895, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.400 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"QUERY_PORT command failed for port %d, aborting (%d)\0A\00", [42 x i8] zeroinitializer }, align 32
@mlx4_slave_special_qp_cap._entry_ptr.401 = internal global ptr @mlx4_slave_special_qp_cap._entry.399, section ".printk_index", align 4
@slave_adjust_steering_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.402, ptr @.str.403, ptr @.str.5, i32 856, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.402 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Steering mode is: %s\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.403 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"slave_adjust_steering_mode\00", [37 x i8] zeroinitializer }, align 32
@slave_adjust_steering_mode._entry_ptr = internal global ptr @slave_adjust_steering_mode._entry, section ".printk_index", align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@mlx4_enable_msi_x._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.404, ptr @.str.405, ptr @.str.5, i32 2990, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Couldn't init hint cpumask for EQ %d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.405 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"mlx4_enable_msi_x\00", [46 x i8] zeroinitializer }, align 32
@mlx4_enable_msi_x._entry_ptr = internal global ptr @mlx4_enable_msi_x._entry, section ".printk_index", align 4
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.406 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.407, ptr @.str.408, ptr @.str.5, i32 2712, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"Failed to initialize user access region table, aborting\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"mlx4_setup_hca\00", [17 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr = internal global ptr @mlx4_setup_hca._entry, section ".printk_index", align 4
@mlx4_setup_hca._entry.409 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.410, ptr @.str.408, ptr @.str.5, i32 2718, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"Failed to allocate driver access region, aborting\0A\00", [45 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.411 = internal global ptr @mlx4_setup_hca._entry.409, section ".printk_index", align 4
@mlx4_setup_hca._entry.412 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.413, ptr @.str.408, ptr @.str.5, i32 2724, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Couldn't map kernel access region, aborting\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.414 = internal global ptr @mlx4_setup_hca._entry.412, section ".printk_index", align 4
@mlx4_setup_hca._entry.415 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.416, ptr @.str.408, ptr @.str.5, i32 2731, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"Failed to initialize protection domain table, aborting\0A\00", [40 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.417 = internal global ptr @mlx4_setup_hca._entry.415, section ".printk_index", align 4
@mlx4_setup_hca._entry.418 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.419, ptr @.str.408, ptr @.str.5, i32 2737, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.419 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"Failed to initialize reliable connection domain table, aborting\0A\00", [63 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.420 = internal global ptr @mlx4_setup_hca._entry.418, section ".printk_index", align 4
@mlx4_setup_hca._entry.421 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.422, ptr @.str.408, ptr @.str.5, i32 2743, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.422 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Failed to initialize memory region table, aborting\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.423 = internal global ptr @mlx4_setup_hca._entry.421, section ".printk_index", align 4
@mlx4_setup_hca._entry.424 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.425, ptr @.str.408, ptr @.str.5, i32 2750, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.425 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Failed to initialize multicast group table, aborting\0A\00", [42 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.426 = internal global ptr @mlx4_setup_hca._entry.424, section ".printk_index", align 4
@mlx4_setup_hca._entry.427 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.428, ptr @.str.408, ptr @.str.5, i32 2755, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.428 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Failed in config_mad_demux, aborting\0A\00", [58 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.429 = internal global ptr @mlx4_setup_hca._entry.427, section ".printk_index", align 4
@mlx4_setup_hca._entry.430 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.431, ptr @.str.408, ptr @.str.5, i32 2762, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.431 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Failed to initialize event queue table, aborting\0A\00", [46 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.432 = internal global ptr @mlx4_setup_hca._entry.430, section ".printk_index", align 4
@mlx4_setup_hca._entry.433 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.434, ptr @.str.408, ptr @.str.5, i32 2768, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.434 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"Failed to switch to event-driven firmware commands, aborting\0A\00", [34 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.435 = internal global ptr @mlx4_setup_hca._entry.433, section ".printk_index", align 4
@mlx4_setup_hca._entry.436 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.437, ptr @.str.408, ptr @.str.5, i32 2776, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.437 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"NOP command failed to generate MSI-X interrupt IRQ %d)\0A\00", [40 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.438 = internal global ptr @mlx4_setup_hca._entry.436, section ".printk_index", align 4
@mlx4_setup_hca._entry.439 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.440, ptr @.str.408, ptr @.str.5, i32 2777, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.440 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Trying again without MSI-X\0A\00", [36 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.441 = internal global ptr @mlx4_setup_hca._entry.439, section ".printk_index", align 4
@mlx4_setup_hca._entry.442 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.443, ptr @.str.408, ptr @.str.5, i32 2780, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.443 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"NOP command failed to generate interrupt (IRQ %d), aborting\0A\00", [35 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.444 = internal global ptr @mlx4_setup_hca._entry.442, section ".printk_index", align 4
@mlx4_setup_hca._entry.445 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.446, ptr @.str.408, ptr @.str.5, i32 2781, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.446 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"BIOS or ACPI interrupt routing problem?\0A\00", [55 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.447 = internal global ptr @mlx4_setup_hca._entry.445, section ".printk_index", align 4
@mlx4_setup_hca._entry.448 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.449, ptr @.str.408, ptr @.str.5, i32 2787, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"NOP command IRQ test passed\0A\00", [35 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.450 = internal global ptr @mlx4_setup_hca._entry.448, section ".printk_index", align 4
@mlx4_setup_hca._entry.451 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.452, ptr @.str.408, ptr @.str.5, i32 2791, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"Failed to initialize completion queue table, aborting\0A\00", [41 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.453 = internal global ptr @mlx4_setup_hca._entry.451, section ".printk_index", align 4
@mlx4_setup_hca._entry.454 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.455, ptr @.str.408, ptr @.str.5, i32 2797, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.455 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"Failed to initialize shared receive queue table, aborting\0A\00", [37 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.456 = internal global ptr @mlx4_setup_hca._entry.454, section ".printk_index", align 4
@mlx4_setup_hca._entry.457 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.458, ptr @.str.408, ptr @.str.5, i32 2803, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.458 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Failed to initialize queue pair table, aborting\0A\00", [47 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.459 = internal global ptr @mlx4_setup_hca._entry.457, section ".printk_index", align 4
@mlx4_setup_hca._entry.460 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.461, ptr @.str.408, ptr @.str.5, i32 2810, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.461 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Failed to initialize counters table, aborting\0A\00", [49 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.462 = internal global ptr @mlx4_setup_hca._entry.460, section ".printk_index", align 4
@mlx4_setup_hca._entry.463 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.464, ptr @.str.408, ptr @.str.5, i32 2817, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.464 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Failed to allocate default counters, aborting\0A\00", [49 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.465 = internal global ptr @mlx4_setup_hca._entry.463, section ".printk_index", align 4
@mlx4_setup_hca._entry.466 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.467, ptr @.str.408, ptr @.str.5, i32 2828, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"failed to get port %d default ib capabilities (%d). Continuing with caps = 0\0A\00", [50 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.468 = internal global ptr @mlx4_setup_hca._entry.466, section ".printk_index", align 4
@mlx4_setup_hca._entry.469 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.11, ptr @.str.408, ptr @.str.5, i32 2851, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@mlx4_setup_hca._entry_ptr.470 = internal global ptr @mlx4_setup_hca._entry.469, section ".printk_index", align 4
@mlx4_allocate_default_counters._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.471, ptr @.str.472, ptr @.str.5, i32 2564, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.471 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"can't allocate counter from old PF driver, using index %d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"mlx4_allocate_default_counters\00", [33 x i8] zeroinitializer }, align 32
@mlx4_allocate_default_counters._entry_ptr = internal global ptr @mlx4_allocate_default_counters._entry, section ".printk_index", align 4
@mlx4_allocate_default_counters._entry.473 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.474, ptr @.str.472, ptr @.str.5, i32 2568, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.474 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"%s: failed to allocate default counter port %d err %d\0A\00", [41 x i8] zeroinitializer }, align 32
@mlx4_allocate_default_counters._entry_ptr.475 = internal global ptr @mlx4_allocate_default_counters._entry.473, section ".printk_index", align 4
@mlx4_allocate_default_counters._entry.476 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.477, ptr @.str.472, ptr @.str.5, i32 2574, ptr @.str.23, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.477 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"%s: default counter index %d for port %d\0A\00", [54 x i8] zeroinitializer }, align 32
@mlx4_allocate_default_counters._entry_ptr.478 = internal global ptr @mlx4_allocate_default_counters._entry.476, section ".printk_index", align 4
@.str.479 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"mlx4_port%d\00", [20 x i8] zeroinitializer }, align 32
@mlx4_init_port_info.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@mlx4_init_port_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.480, ptr @.str.481, ptr @.str.5, i32 3073, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.480 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Failed to create file for port %d\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"mlx4_init_port_info\00", [44 x i8] zeroinitializer }, align 32
@mlx4_init_port_info._entry_ptr = internal global ptr @mlx4_init_port_info._entry, section ".printk_index", align 4
@.str.482 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mlx4_port%d_mtu\00", [16 x i8] zeroinitializer }, align 32
@mlx4_init_port_info.__key.483 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@mlx4_init_port_info._entry.484 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.485, ptr @.str.481, ptr @.str.5, i32 3093, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.485 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Failed to create mtu file for port %d\0A\00", [57 x i8] zeroinitializer }, align 32
@mlx4_init_port_info._entry_ptr.486 = internal global ptr @mlx4_init_port_info._entry.484, section ".printk_index", align 4
@set_port_type.set_port_type_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.487, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @set_port_type.set_port_type_mutex, i64 52), ptr getelementptr (i8, ptr @set_port_type.set_port_type_mutex, i64 52) }, ptr @set_port_type.set_port_type_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.488, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.487 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"set_port_type_mutex.wait_lock\00", [34 x i8] zeroinitializer }, align 32
@.str.488 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"set_port_type_mutex\00", [44 x i8] zeroinitializer }, align 32
@.str.489 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ib\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.490 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"eth\0A\00", [27 x i8] zeroinitializer }, align 32
@.str.491 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"auto\0A\00", [26 x i8] zeroinitializer }, align 32
@set_port_type._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.492, ptr @.str.493, ptr @.str.5, i32 1263, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.492 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s is not supported port type\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.493 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"set_port_type\00", [18 x i8] zeroinitializer }, align 32
@set_port_type._entry_ptr = internal global ptr @set_port_type._entry, section ".printk_index", align 4
@__set_port_type._entry = internal constant %struct.pi_entry { ptr @.str.9, ptr @.str.494, ptr @.str.5, i32 1190, ptr @.str.6, ptr @.str.7 }, align 1
@.str.494 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"__set_port_type\00", [16 x i8] zeroinitializer }, align 32
@__set_port_type._entry_ptr = internal global ptr @__set_port_type._entry, section ".printk_index", align 4
@__set_port_type._entry.495 = internal constant %struct.pi_entry { ptr @.str.496, ptr @.str.494, ptr @.str.5, i32 1218, ptr @.str.6, ptr @.str.7 }, align 1
@.str.496 = internal constant { [103 x i8], [57 x i8] } { [103 x i8] c"Auto sensing is not supported on this HCA. Set only 'eth' or 'ib' for both ports (should be the same)\0A\00", [57 x i8] zeroinitializer }, align 32
@__set_port_type._entry_ptr.497 = internal global ptr @__set_port_type._entry.495, section ".printk_index", align 4
@.str.498 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@.str.499 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"ib\00", [29 x i8] zeroinitializer }, align 32
@.str.500 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"eth\00", [28 x i8] zeroinitializer }, align 32
@.str.501 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"auto (%s)\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.502 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@set_port_ib_mtu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.503, ptr @.str.504, ptr @.str.5, i32 1335, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.503 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"port level mtu is only used for IB ports\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.504 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"set_port_ib_mtu\00", [16 x i8] zeroinitializer }, align 32
@set_port_ib_mtu._entry_ptr = internal global ptr @set_port_ib_mtu._entry, section ".printk_index", align 4
@set_port_ib_mtu._entry.505 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.506, ptr @.str.504, ptr @.str.5, i32 1344, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.506 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s is invalid IBTA mtu\0A\00", [40 x i8] zeroinitializer }, align 32
@set_port_ib_mtu._entry_ptr.507 = internal global ptr @set_port_ib_mtu._entry.505, section ".printk_index", align 4
@set_port_ib_mtu._entry.508 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.11, ptr @.str.504, ptr @.str.5, i32 1358, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@set_port_ib_mtu._entry_ptr.509 = internal global ptr @set_port_ib_mtu._entry.508, section ".printk_index", align 4
@show_port_ib_mtu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.503, ptr @.str.510, ptr @.str.5, i32 1317, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.510 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"show_port_ib_mtu\00", [47 x i8] zeroinitializer }, align 32
@show_port_ib_mtu._entry_ptr = internal global ptr @show_port_ib_mtu._entry, section ".printk_index", align 4
@.str.511 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%d\0A\00", [28 x i8] zeroinitializer }, align 32
@mlx4_pci_table = internal constant { [28 x %struct.pci_device_id], [224 x i8] } { [28 x %struct.pci_device_id] [%struct.pci_device_id { i32 5555, i32 25408, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 25418, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 25428, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 26418, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 26428, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 25448, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 26448, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 25458, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 26458, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 26468, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 26438, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 26478, i32 -1, i32 -1, i32 0, i32 0, i32 2, i32 0 }, %struct.pci_device_id { i32 5555, i32 4098, i32 -1, i32 -1, i32 0, i32 0, i32 1, i32 0 }, %struct.pci_device_id { i32 5555, i32 4099, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4100, i32 -1, i32 -1, i32 0, i32 0, i32 1, i32 0 }, %struct.pci_device_id { i32 5555, i32 4101, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4102, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4103, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4104, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4105, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4106, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4107, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4108, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4109, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4110, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4111, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 5555, i32 4112, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id zeroinitializer], [224 x i8] zeroinitializer }, align 32
@mlx4_err_handler = internal constant { %struct.pci_error_handlers, [40 x i8] } { %struct.pci_error_handlers { ptr @mlx4_pci_err_detected, ptr null, ptr @mlx4_pci_slot_reset, ptr null, ptr null, ptr @mlx4_pci_resume }, [40 x i8] zeroinitializer }, align 32
@mlx4_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr @mlx4_suspend, ptr @mlx4_resume, ptr @mlx4_suspend, ptr @mlx4_resume, ptr @mlx4_suspend, ptr @mlx4_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@mlx4_init_one.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mlx4_init_one._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.512, ptr @.str.513, ptr @.str.5, i32 3997, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.512 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"\016%s\00", [27 x i8] zeroinitializer }, align 32
@.str.513 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mlx4_init_one\00", [18 x i8] zeroinitializer }, align 32
@mlx4_init_one._entry_ptr = internal global ptr @mlx4_init_one._entry, section ".printk_index", align 4
@mlx4_version = internal global { [49 x i8], [47 x i8] } { [49 x i8] c"mlx4_core: Mellanox ConnectX core driver v4.0-0\0A\00", [47 x i8] zeroinitializer }, align 32
@mlx4_devlink_ops = internal constant { %struct.devlink_ops, [52 x i8] } { %struct.devlink_ops { i32 0, i32 2, i32 0, ptr @mlx4_devlink_reload_down, ptr @mlx4_devlink_reload_up, ptr @mlx4_devlink_port_type_set, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@mlx4_init_one.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.514 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"&dev->persist->device_state_mutex\00", [62 x i8] zeroinitializer }, align 32
@mlx4_init_one.__key.515 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.516 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"&dev->persist->interface_state_mutex\00", [59 x i8] zeroinitializer }, align 32
@mlx4_init_one.__key.517 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.518 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"&dev->persist->pci_status_mutex\00", [32 x i8] zeroinitializer }, align 32
@mlx4_devlink_params = internal constant { [5 x %struct.devlink_param], [32 x i8] } { [5 x %struct.devlink_param] [%struct.devlink_param { i32 0, ptr @.str.523, i8 1, i32 4, i32 3, ptr @mlx4_devlink_ierr_reset_get, ptr @mlx4_devlink_ierr_reset_set, ptr null }, %struct.devlink_param { i32 1, ptr @.str.524, i8 1, i32 2, i32 2, ptr null, ptr null, ptr @mlx4_devlink_max_macs_validate }, %struct.devlink_param { i32 3, ptr @.str.525, i8 1, i32 4, i32 3, ptr @mlx4_devlink_crdump_snapshot_get, ptr @mlx4_devlink_crdump_snapshot_set, ptr null }, %struct.devlink_param { i32 17, ptr @.str.526, i8 0, i32 4, i32 2, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 18, ptr @.str.527, i8 0, i32 4, i32 2, ptr null, ptr null, ptr null }], [32 x i8] zeroinitializer }, align 32
@init_net = external dso_local global %struct.net, align 128
@mlx4_devlink_reload_down.__msg = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"mlx4_core: Namespace change is not supported\00", [51 x i8] zeroinitializer }, align 32
@mlx4_devlink_reload_down._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.519, ptr @.str.520, ptr @.str.5, i32 3960, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.519 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"Reload performed on PF, will cause reset on operating Virtual Functions\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.520 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"mlx4_devlink_reload_down\00", [39 x i8] zeroinitializer }, align 32
@mlx4_devlink_reload_down._entry_ptr = internal global ptr @mlx4_devlink_reload_down._entry, section ".printk_index", align 4
@mlx4_devlink_reload_up._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.521, ptr @.str.522, ptr @.str.5, i32 3978, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.521 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"mlx4_restart_one_up failed, ret=%d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.522 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mlx4_devlink_reload_up\00", [41 x i8] zeroinitializer }, align 32
@mlx4_devlink_reload_up._entry_ptr = internal global ptr @mlx4_devlink_reload_up._entry, section ".printk_index", align 4
@.str.523 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"internal_error_reset\00", [43 x i8] zeroinitializer }, align 32
@.str.524 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"max_macs\00", [23 x i8] zeroinitializer }, align 32
@.str.525 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"region_snapshot_enable\00", [41 x i8] zeroinitializer }, align 32
@.str.526 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"enable_64b_cqe_eqe\00", [45 x i8] zeroinitializer }, align 32
@.str.527 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"enable_4k_uar\00", [18 x i8] zeroinitializer }, align 32
@mlx4_devlink_max_macs_validate.__msg = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"mlx4_core: max_macs supported must be power of 2\00", [47 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry = internal constant %struct.pi_entry { ptr @.str.528, ptr @.str.529, ptr @.str.5, i32 3738, ptr null, ptr null }, align 1
@.str.528 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016mlx4_core: Initializing %s\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.529 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"__mlx4_init_one\00", [16 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr = internal global ptr @__mlx4_init_one._entry, section ".printk_index", align 4
@__mlx4_init_one._entry.530 = internal constant %struct.pi_entry { ptr @.str.531, ptr @.str.529, ptr @.str.5, i32 3742, ptr @.str.6, ptr @.str.7 }, align 1
@.str.531 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Cannot enable PCI device, aborting\0A\00", [60 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.532 = internal global ptr @__mlx4_init_one._entry.530, section ".printk_index", align 4
@__mlx4_init_one._entry.533 = internal constant %struct.pi_entry { ptr @.str.534, ptr @.str.529, ptr @.str.5, i32 3754, ptr @.str.6, ptr @.str.7 }, align 1
@.str.534 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"num_vfs module parameter cannot be negative\0A\00", [51 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.535 = internal global ptr @__mlx4_init_one._entry.533, section ".printk_index", align 4
@__mlx4_init_one._entry.536 = internal constant %struct.pi_entry { ptr @.str.537, ptr @.str.529, ptr @.str.5, i32 3763, ptr @.str.6, ptr @.str.7 }, align 1
@.str.537 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"probe_vf module parameter cannot be negative or greater than num_vfs\0A\00", [58 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.538 = internal global ptr @__mlx4_init_one._entry.536, section ".printk_index", align 4
@__mlx4_init_one._entry.539 = internal constant %struct.pi_entry { ptr @.str.540, ptr @.str.529, ptr @.str.5, i32 3771, ptr @.str.6, ptr @.str.7 }, align 1
@.str.540 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Requested more VF's (%d) than allowed by hw (%d)\0A\00", [46 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.541 = internal global ptr @__mlx4_init_one._entry.539, section ".printk_index", align 4
@__mlx4_init_one._entry.542 = internal constant %struct.pi_entry { ptr @.str.543, ptr @.str.529, ptr @.str.5, i32 3781, ptr @.str.6, ptr @.str.7 }, align 1
@.str.543 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"Requested more VF's (%d) for port (%d) than allowed by driver (%d)\0A\00", [60 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.544 = internal global ptr @__mlx4_init_one._entry.542, section ".printk_index", align 4
@__mlx4_init_one._entry.545 = internal constant %struct.pi_entry { ptr @.str.546, ptr @.str.529, ptr @.str.5, i32 3791, ptr @.str.6, ptr @.str.7 }, align 1
@.str.546 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"Missing DCS, aborting (driver_data: 0x%x, pci_resource_flags(pdev, 0):0x%lx)\0A\00", [50 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.547 = internal global ptr @__mlx4_init_one._entry.545, section ".printk_index", align 4
@__mlx4_init_one._entry.548 = internal constant %struct.pi_entry { ptr @.str.549, ptr @.str.529, ptr @.str.5, i32 3796, ptr @.str.6, ptr @.str.7 }, align 1
@.str.549 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Missing UAR, aborting\0A\00", [41 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.550 = internal global ptr @__mlx4_init_one._entry.548, section ".printk_index", align 4
@__mlx4_init_one._entry.551 = internal constant %struct.pi_entry { ptr @.str.552, ptr @.str.529, ptr @.str.5, i32 3803, ptr @.str.6, ptr @.str.7 }, align 1
@.str.552 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Couldn't get PCI resources, aborting\0A\00", [58 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.553 = internal global ptr @__mlx4_init_one._entry.551, section ".printk_index", align 4
@__mlx4_init_one._entry.554 = internal constant %struct.pi_entry { ptr @.str.555, ptr @.str.529, ptr @.str.5, i32 3811, ptr @.str.29, ptr @.str.7 }, align 1
@.str.555 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Warning: couldn't set 64-bit PCI DMA mask\0A\00", [53 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.556 = internal global ptr @__mlx4_init_one._entry.554, section ".printk_index", align 4
@__mlx4_init_one._entry.557 = internal constant %struct.pi_entry { ptr @.str.558, ptr @.str.529, ptr @.str.5, i32 3814, ptr @.str.6, ptr @.str.7 }, align 1
@.str.558 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Can't set PCI DMA mask, aborting\0A\00", [62 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.559 = internal global ptr @__mlx4_init_one._entry.557, section ".printk_index", align 4
@__mlx4_init_one._entry.560 = internal constant %struct.pi_entry { ptr @.str.561, ptr @.str.529, ptr @.str.5, i32 3840, ptr @.str.29, ptr @.str.7 }, align 1
@.str.561 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Skipping virtual function:%d\0A\00", [34 x i8] zeroinitializer }, align 32
@__mlx4_init_one._entry_ptr.562 = internal global ptr @__mlx4_init_one._entry.560, section ".printk_index", align 4
@mlx4_remove_one._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.563, ptr @.str.564, ptr @.str.5, i32 4151, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.563 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\014Removing PF when there are active VF's !!\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.564 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mlx4_remove_one\00", [16 x i8] zeroinitializer }, align 32
@mlx4_remove_one._entry_ptr = internal global ptr @mlx4_remove_one._entry, section ".printk_index", align 4
@mlx4_remove_one._entry.565 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.566, ptr @.str.564, ptr @.str.5, i32 4152, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.566 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\014Will not disable SR-IOV.\0A\00", [36 x i8] zeroinitializer }, align 32
@mlx4_remove_one._entry_ptr.567 = internal global ptr @mlx4_remove_one._entry.565, section ".printk_index", align 4
@mlx4_remove_one._entry.568 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.569, ptr @.str.564, ptr @.str.5, i32 4162, ptr @.str.131, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.569 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: interface is down\0A\00", [41 x i8] zeroinitializer }, align 32
@mlx4_remove_one._entry_ptr.570 = internal global ptr @mlx4_remove_one._entry.568, section ".printk_index", align 4
@mlx4_remove_one._entry.571 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.572, ptr @.str.564, ptr @.str.5, i32 4166, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.572 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Disabling SR-IOV\0A\00", [46 x i8] zeroinitializer }, align 32
@mlx4_remove_one._entry_ptr.573 = internal global ptr @mlx4_remove_one._entry.571, section ".printk_index", align 4
@mlx4_how_many_lives_vf._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.574, ptr @.str.575, ptr @.str.5, i32 754, ptr @.str.29, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.574 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s: slave: %d is still active\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.575 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mlx4_how_many_lives_vf\00", [41 x i8] zeroinitializer }, align 32
@mlx4_how_many_lives_vf._entry_ptr = internal global ptr @mlx4_how_many_lives_vf._entry, section ".printk_index", align 4
@mlx4_shutdown._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.576, ptr @.str.577, ptr @.str.5, i32 4369, ptr @.str.131, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.576 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"mlx4_shutdown was called\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.577 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mlx4_shutdown\00", [18 x i8] zeroinitializer }, align 32
@mlx4_shutdown._entry_ptr = internal global ptr @mlx4_shutdown._entry, section ".printk_index", align 4
@mlx4_pci_err_detected._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.578, ptr @.str.579, ptr @.str.5, i32 4296, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.578 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"mlx4_pci_err_detected was called\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.579 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"mlx4_pci_err_detected\00", [42 x i8] zeroinitializer }, align 32
@mlx4_pci_err_detected._entry_ptr = internal global ptr @mlx4_pci_err_detected._entry, section ".printk_index", align 4
@mlx4_pci_slot_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.580, ptr @.str.581, ptr @.str.5, i32 4317, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.580 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"mlx4_pci_slot_reset was called\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.581 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"mlx4_pci_slot_reset\00", [44 x i8] zeroinitializer }, align 32
@mlx4_pci_slot_reset._entry_ptr = internal global ptr @mlx4_pci_slot_reset._entry, section ".printk_index", align 4
@mlx4_pci_slot_reset._entry.582 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.583, ptr @.str.581, ptr @.str.5, i32 4320, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.583 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Can not re-enable device, err=%d\0A\00", [62 x i8] zeroinitializer }, align 32
@mlx4_pci_slot_reset._entry_ptr.584 = internal global ptr @mlx4_pci_slot_reset._entry.582, section ".printk_index", align 4
@mlx4_pci_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.585, ptr @.str.586, ptr @.str.5, i32 4339, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.585 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%s was called\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.586 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mlx4_pci_resume\00", [16 x i8] zeroinitializer }, align 32
@mlx4_pci_resume._entry_ptr = internal global ptr @mlx4_pci_resume._entry, section ".printk_index", align 4
@mlx4_pci_resume._entry.587 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.588, ptr @.str.586, ptr @.str.5, i32 4349, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.588 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: mlx4_load_one failed, err=%d\0A\00", [62 x i8] zeroinitializer }, align 32
@mlx4_pci_resume._entry_ptr.589 = internal global ptr @mlx4_pci_resume._entry.587, section ".printk_index", align 4
@mlx4_pci_resume._entry.590 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.66, ptr @.str.586, ptr @.str.5, i32 4357, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@mlx4_pci_resume._entry_ptr.591 = internal global ptr @mlx4_pci_resume._entry.590, section ".printk_index", align 4
@mlx4_suspend._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.592, ptr @.str.593, ptr @.str.5, i32 4389, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.592 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"suspend was called\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.593 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mlx4_suspend\00", [19 x i8] zeroinitializer }, align 32
@mlx4_suspend._entry_ptr = internal global ptr @mlx4_suspend._entry, section ".printk_index", align 4
@mlx4_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.594, ptr @.str.595, ptr @.str.5, i32 4408, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.594 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"resume was called\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.595 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"mlx4_resume\00", [20 x i8] zeroinitializer }, align 32
@mlx4_resume._entry_ptr = internal global ptr @mlx4_resume._entry, section ".printk_index", align 4
@mlx4_resume._entry.596 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.597, ptr @.str.595, ptr @.str.5, i32 4421, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.597 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"resume: could not restore original port types (%d)\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx4_resume._entry_ptr.598 = internal global ptr @mlx4_resume._entry.596, section ".printk_index", align 4
@.str.599 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mlx4\00", [27 x i8] zeroinitializer }, align 32
@mlx4_verify_params._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.600, ptr @.str.601, ptr @.str.5, i32 4444, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.600 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\014mlx4_core: bad msi_x: %d\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.601 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mlx4_verify_params\00", [45 x i8] zeroinitializer }, align 32
@mlx4_verify_params._entry_ptr = internal global ptr @mlx4_verify_params._entry, section ".printk_index", align 4
@mlx4_verify_params._entry.602 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.603, ptr @.str.601, ptr @.str.5, i32 4449, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.603 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\014mlx4_core: bad num_mac: %d\0A\00", [34 x i8] zeroinitializer }, align 32
@mlx4_verify_params._entry_ptr.604 = internal global ptr @mlx4_verify_params._entry.602, section ".printk_index", align 4
@mlx4_verify_params._entry.605 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.606, ptr @.str.601, ptr @.str.5, i32 4455, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.606 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\014mlx4_core: log_num_vlan - obsolete module param, using %d\0A\00", [35 x i8] zeroinitializer }, align 32
@mlx4_verify_params._entry_ptr.607 = internal global ptr @mlx4_verify_params._entry.605, section ".printk_index", align 4
@mlx4_verify_params._entry.608 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.609, ptr @.str.601, ptr @.str.5, i32 4458, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.609 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\014mlx4_core: use_prio - obsolete module param, ignored\0A\00", [40 x i8] zeroinitializer }, align 32
@mlx4_verify_params._entry_ptr.610 = internal global ptr @mlx4_verify_params._entry.608, section ".printk_index", align 4
@mlx4_verify_params._entry.611 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.612, ptr @.str.601, ptr @.str.5, i32 4462, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.612 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014mlx4_core: bad log_mtts_per_seg: %d\0A\00", [57 x i8] zeroinitializer }, align 32
@mlx4_verify_params._entry_ptr.613 = internal global ptr @mlx4_verify_params._entry.611, section ".printk_index", align 4
@mlx4_verify_params._entry.614 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.615, ptr @.str.601, ptr @.str.5, i32 4468, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.615 = internal constant { [100 x i8], [60 x i8] } { [100 x i8] c"\014Module parameter configuration ETH/IB is not supported. Switching to default configuration IB/IB\0A\00", [60 x i8] zeroinitializer }, align 32
@mlx4_verify_params._entry_ptr.616 = internal global ptr @mlx4_verify_params._entry.614, section ".printk_index", align 4
@mlx4_verify_params._entry.617 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.618, ptr @.str.601, ptr @.str.5, i32 4479, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.618 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"\014mlx4_core: mlx4_log_num_mgm_entry_size (%d) not in legal range (-7..0 or %d..%d)\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx4_verify_params._entry_ptr.619 = internal global ptr @mlx4_verify_params._entry.617, section ".printk_index", align 4
@switch.table.mlx4_load_one = internal constant { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.261, ptr @.str.262, ptr @.str.263], [20 x i8] zeroinitializer }, align 32
@switch.table.mlx4_load_one.620 = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327], [16 x i8] zeroinitializer }, align 32
@switch.table.slave_adjust_steering_mode = internal constant { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.261, ptr @.str.262, ptr @.str.263], [20 x i8] zeroinitializer }, align 32
@switch.table.show_port_ib_mtu = internal constant { [5 x i32], [44 x i8] } { [5 x i32] [i32 256, i32 512, i32 1024, i32 2048, i32 4096], [44 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.621 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.622 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.623 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967283]
@__sancov_gen_cov_switch_values.624 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 4]
@__sancov_gen_cov_switch_values.625 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 196852667]
@__sancov_gen_cov_switch_values.626 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.627 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967283]
@__sancov_gen_cov_switch_values.628 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.629 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.630 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.631 = internal global [7 x i64] [i64 5, i64 32, i64 256, i64 512, i64 1024, i64 2048, i64 4096]
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 60, i32 1 }
@___asan_gen_.641 = private unnamed_addr constant [17 x i8] c"mlx4_debug_level\00", align 1
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 66, i32 5 }
@___asan_gen_.644 = private unnamed_addr constant [6 x i8] c"msi_x\00", align 1
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 74, i32 12 }
@___asan_gen_.647 = private unnamed_addr constant [28 x i8] c"mlx4_log_num_mgm_entry_size\00", align 1
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 96, i32 12 }
@___asan_gen_.650 = private unnamed_addr constant [19 x i8] c"enable_64b_cqe_eqe\00", align 1
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 106, i32 13 }
@___asan_gen_.653 = private unnamed_addr constant [14 x i8] c"enable_4k_uar\00", align 1
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 111, i32 13 }
@___asan_gen_.656 = private unnamed_addr constant [12 x i8] c"log_num_mac\00", align 1
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 146, i32 12 }
@___asan_gen_.659 = private unnamed_addr constant [13 x i8] c"log_num_vlan\00", align 1
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 150, i32 12 }
@___asan_gen_.662 = private unnamed_addr constant [9 x i8] c"use_prio\00", align 1
@___asan_gen_.664 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 158, i32 13 }
@___asan_gen_.665 = private unnamed_addr constant [17 x i8] c"log_mtts_per_seg\00", align 1
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 162, i32 5 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 315, i32 5 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 323, i32 4 }
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1139, i32 5 }
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1147, i32 4 }
@___asan_gen_.715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1457, i32 4 }
@___asan_gen_.721 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1461, i32 5 }
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1469, i32 3 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1487, i32 4 }
@___asan_gen_.748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1491, i32 4 }
@___asan_gen_.754 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1498, i32 3 }
@___asan_gen_.763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1535, i32 4 }
@___asan_gen_.769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1540, i32 4 }
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1953, i32 3 }
@___asan_gen_.779 = private unnamed_addr constant [12 x i8] c"mlx4_driver\00", align 1
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4431, i32 26 }
@___asan_gen_.782 = private unnamed_addr constant [8 x i8] c"mlx4_wq\00", align 1
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 62, i32 26 }
@___asan_gen_.785 = private unnamed_addr constant [13 x i8] c"num_vfs_argc\00", align 1
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 85, i32 12 }
@___asan_gen_.788 = private unnamed_addr constant [8 x i8] c"num_vfs\00", align 1
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 84, i32 16 }
@___asan_gen_.791 = private unnamed_addr constant [15 x i8] c"probe_vfs_argc\00", align 1
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 91, i32 12 }
@___asan_gen_.794 = private unnamed_addr constant [9 x i8] c"probe_vf\00", align 1
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 90, i32 16 }
@___asan_gen_.797 = private unnamed_addr constant [9 x i8] c"arr_argc\00", align 1
@___asan_gen_.799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 168, i32 12 }
@___asan_gen_.800 = private unnamed_addr constant [16 x i8] c"port_type_array\00", align 1
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 167, i32 12 }
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1110, i32 3 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1112, i32 3 }
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1387, i32 3 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1399, i32 3 }
@___asan_gen_.829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1405, i32 3 }
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1433, i32 3 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1436, i32 3 }
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1441, i32 3 }
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1876, i32 3 }
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3212, i32 3 }
@___asan_gen_.877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4219, i32 3 }
@___asan_gen_.883 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4227, i32 3 }
@___asan_gen_.889 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3347, i32 2 }
@___asan_gen_.895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3349, i32 2 }
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3350, i32 2 }
@___asan_gen_.907 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3353, i32 2 }
@___asan_gen_.913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3354, i32 2 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3357, i32 2 }
@___asan_gen_.928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3364, i32 3 }
@___asan_gen_.934 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3375, i32 5 }
@___asan_gen_.940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3381, i32 3 }
@___asan_gen_.946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3390, i32 4 }
@___asan_gen_.952 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3411, i32 3 }
@___asan_gen_.958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3426, i32 5 }
@___asan_gen_.964 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3434, i32 3 }
@___asan_gen_.970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3450, i32 5 }
@___asan_gen_.976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3467, i32 6 }
@___asan_gen_.982 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3472, i32 6 }
@___asan_gen_.985 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3485, i32 5 }
@___asan_gen_.986 = private unnamed_addr constant [11 x i8] c"pf_loading\00", align 1
@___asan_gen_.988 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 179, i32 17 }
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3529, i32 5 }
@___asan_gen_.997 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3537, i32 4 }
@___asan_gen_.1003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3556, i32 4 }
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3580, i32 4 }
@___asan_gen_.1015 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3590, i32 2 }
@___asan_gen_.1021 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3596, i32 3 }
@___asan_gen_.1027 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3626, i32 4 }
@___asan_gen_.1033 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3192, i32 3 }
@___asan_gen_.1045 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2275, i32 5 }
@___asan_gen_.1051 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2277, i32 5 }
@___asan_gen_.1057 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2283, i32 4 }
@___asan_gen_.1063 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2291, i32 4 }
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1557, i32 3 }
@___asan_gen_.1078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1563, i32 3 }
@___asan_gen_.1084 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1569, i32 3 }
@___asan_gen_.1093 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3297, i32 3 }
@___asan_gen_.1102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3242, i32 4 }
@___asan_gen_.1108 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3250, i32 3 }
@___asan_gen_.1114 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3256, i32 4 }
@___asan_gen_.1120 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3261, i32 3 }
@___asan_gen_.1126 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3265, i32 3 }
@___asan_gen_.1132 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3269, i32 3 }
@___asan_gen_.1141 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2319, i32 4 }
@___asan_gen_.1147 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2332, i32 4 }
@___asan_gen_.1153 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2338, i32 4 }
@___asan_gen_.1154 = private unnamed_addr constant [16 x i8] c"low_mem_profile\00", align 1
@___asan_gen_.1156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 136, i32 34 }
@___asan_gen_.1157 = private unnamed_addr constant [16 x i8] c"default_profile\00", align 1
@___asan_gen_.1159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 126, i32 34 }
@___asan_gen_.1165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2374, i32 4 }
@___asan_gen_.1171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2381, i32 5 }
@___asan_gen_.1177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2397, i32 5 }
@___asan_gen_.1183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2409, i32 5 }
@___asan_gen_.1189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2417, i32 5 }
@___asan_gen_.1195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2424, i32 5 }
@___asan_gen_.1201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2434, i32 4 }
@___asan_gen_.1207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2442, i32 5 }
@___asan_gen_.1213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2448, i32 4 }
@___asan_gen_.1219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2454, i32 3 }
@___asan_gen_.1225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2462, i32 3 }
@___asan_gen_.1231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2469, i32 3 }
@___asan_gen_.1237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 464, i32 3 }
@___asan_gen_.1243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 470, i32 3 }
@___asan_gen_.1249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 475, i32 3 }
@___asan_gen_.1255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 481, i32 3 }
@___asan_gen_.1261 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 496, i32 4 }
@___asan_gen_.1267 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 638, i32 4 }
@___asan_gen_.1273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 643, i32 4 }
@___asan_gen_.1279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 651, i32 3 }
@___asan_gen_.1285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 700, i32 4 }
@___asan_gen_.1291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 708, i32 4 }
@___asan_gen_.1297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 727, i32 4 }
@___asan_gen_.1303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 728, i32 4 }
@___asan_gen_.1312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 382, i32 3 }
@___asan_gen_.1321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 443, i32 3 }
@___asan_gen_.1327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 449, i32 3 }
@___asan_gen_.1336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2178, i32 5 }
@___asan_gen_.1342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2210, i32 5 }
@___asan_gen_.1348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2218, i32 2 }
@___asan_gen_.1351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1359, i32 135, i32 10 }
@___asan_gen_.1354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1359, i32 138, i32 10 }
@___asan_gen_.1357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1359, i32 141, i32 10 }
@___asan_gen_.1359 = private unnamed_addr constant [31 x i8] c"../include/linux/mlx4/device.h\00", align 1
@___asan_gen_.1360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1359, i32 144, i32 10 }
@___asan_gen_.1375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2233, i32 2 }
@___asan_gen_.1384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1652, i32 3 }
@___asan_gen_.1390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1656, i32 2 }
@___asan_gen_.1396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1663, i32 3 }
@___asan_gen_.1402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1669, i32 3 }
@___asan_gen_.1408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1675, i32 3 }
@___asan_gen_.1414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1685, i32 3 }
@___asan_gen_.1420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1706, i32 3 }
@___asan_gen_.1426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1716, i32 3 }
@___asan_gen_.1432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1727, i32 3 }
@___asan_gen_.1438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1738, i32 3 }
@___asan_gen_.1444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1749, i32 3 }
@___asan_gen_.1450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1760, i32 3 }
@___asan_gen_.1456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1770, i32 3 }
@___asan_gen_.1462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1780, i32 3 }
@___asan_gen_.1468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1798, i32 3 }
@___asan_gen_.1474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 351, i32 4 }
@___asan_gen_.1483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2247, i32 4 }
@___asan_gen_.1495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2254, i32 4 }
@___asan_gen_.1504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 432, i32 3 }
@___asan_gen_.1507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2150, i32 10 }
@___asan_gen_.1510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2153, i32 10 }
@___asan_gen_.1513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2156, i32 10 }
@___asan_gen_.1516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2159, i32 10 }
@___asan_gen_.1519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2162, i32 10 }
@___asan_gen_.1522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2165, i32 10 }
@___asan_gen_.1531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2057, i32 3 }
@___asan_gen_.1537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2064, i32 3 }
@___asan_gen_.1543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2069, i32 2 }
@___asan_gen_.1549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2076, i32 4 }
@___asan_gen_.1555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2090, i32 3 }
@___asan_gen_.1561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2094, i32 2 }
@___asan_gen_.1570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2028, i32 2 }
@___asan_gen_.1579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 919, i32 3 }
@___asan_gen_.1585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 926, i32 3 }
@___asan_gen_.1591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 934, i32 3 }
@___asan_gen_.1594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 944, i32 3 }
@___asan_gen_.1600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 950, i32 3 }
@___asan_gen_.1606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 953, i32 2 }
@___asan_gen_.1609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 955, i32 3 }
@___asan_gen_.1615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 966, i32 3 }
@___asan_gen_.1621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 983, i32 3 }
@___asan_gen_.1627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 990, i32 3 }
@___asan_gen_.1630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1015, i32 3 }
@___asan_gen_.1636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1025, i32 3 }
@___asan_gen_.1642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1033, i32 3 }
@___asan_gen_.1648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1068, i32 2 }
@___asan_gen_.1654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1071, i32 2 }
@___asan_gen_.1666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1074, i32 2 }
@___asan_gen_.1675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 875, i32 3 }
@___asan_gen_.1681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 883, i32 4 }
@___asan_gen_.1687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 894, i32 4 }
@___asan_gen_.1696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 855, i32 2 }
@___asan_gen_.1705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2989, i32 6 }
@___asan_gen_.1707 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.1708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1707, i32 108, i32 2 }
@___asan_gen_.1717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2712, i32 3 }
@___asan_gen_.1723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2718, i32 3 }
@___asan_gen_.1729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2724, i32 3 }
@___asan_gen_.1735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2731, i32 3 }
@___asan_gen_.1741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2737, i32 3 }
@___asan_gen_.1747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2743, i32 3 }
@___asan_gen_.1753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2750, i32 4 }
@___asan_gen_.1759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2755, i32 4 }
@___asan_gen_.1765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2762, i32 3 }
@___asan_gen_.1771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2768, i32 3 }
@___asan_gen_.1777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2775, i32 4 }
@___asan_gen_.1783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2777, i32 4 }
@___asan_gen_.1789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2779, i32 4 }
@___asan_gen_.1795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2781, i32 4 }
@___asan_gen_.1801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2787, i32 2 }
@___asan_gen_.1807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2791, i32 3 }
@___asan_gen_.1813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2797, i32 3 }
@___asan_gen_.1819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2803, i32 3 }
@___asan_gen_.1825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2810, i32 4 }
@___asan_gen_.1831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2817, i32 3 }
@___asan_gen_.1837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2827, i32 5 }
@___asan_gen_.1840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2850, i32 5 }
@___asan_gen_.1849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2563, i32 4 }
@___asan_gen_.1855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2567, i32 4 }
@___asan_gen_.1861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 2573, i32 3 }
@___asan_gen_.1864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3060, i32 26 }
@___asan_gen_.1867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3069, i32 2 }
@___asan_gen_.1876 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3073, i32 3 }
@___asan_gen_.1879 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3079, i32 30 }
@___asan_gen_.1882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3088, i32 2 }
@___asan_gen_.1888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3093, i32 3 }
@___asan_gen_.1889 = private unnamed_addr constant [20 x i8] c"set_port_type_mutex\00", align 1
@___asan_gen_.1897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1251, i32 9 }
@___asan_gen_.1900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1256, i32 19 }
@___asan_gen_.1903 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1258, i32 26 }
@___asan_gen_.1906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1260, i32 26 }
@___asan_gen_.1915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1263, i32 3 }
@___asan_gen_.1918 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1188, i32 3 }
@___asan_gen_.1921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1218, i32 3 }
@___asan_gen_.1924 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1166, i32 16 }
@___asan_gen_.1927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1168, i32 3 }
@___asan_gen_.1930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1168, i32 10 }
@___asan_gen_.1933 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1170, i32 16 }
@___asan_gen_.1936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1172, i32 16 }
@___asan_gen_.1945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1335, i32 3 }
@___asan_gen_.1951 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1344, i32 3 }
@___asan_gen_.1954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1357, i32 4 }
@___asan_gen_.1960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1317, i32 3 }
@___asan_gen_.1963 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 1319, i32 15 }
@___asan_gen_.1964 = private unnamed_addr constant [15 x i8] c"mlx4_pci_table\00", align 1
@___asan_gen_.1966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4243, i32 35 }
@___asan_gen_.1967 = private unnamed_addr constant [17 x i8] c"mlx4_err_handler\00", align 1
@___asan_gen_.1969 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4377, i32 40 }
@___asan_gen_.1970 = private unnamed_addr constant [12 x i8] c"mlx4_pm_ops\00", align 1
@___asan_gen_.1972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4429, i32 8 }
@___asan_gen_.1981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3997, i32 2 }
@___asan_gen_.1982 = private unnamed_addr constant [13 x i8] c"mlx4_version\00", align 1
@___asan_gen_.1984 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 122, i32 13 }
@___asan_gen_.1985 = private unnamed_addr constant [17 x i8] c"mlx4_devlink_ops\00", align 1
@___asan_gen_.1987 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3983, i32 33 }
@___asan_gen_.1993 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4014, i32 2 }
@___asan_gen_.1999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4015, i32 2 }
@___asan_gen_.2000 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.2005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4016, i32 2 }
@___asan_gen_.2006 = private unnamed_addr constant [20 x i8] c"mlx4_devlink_params\00", align 1
@___asan_gen_.2008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 239, i32 35 }
@___asan_gen_.2011 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3956, i32 3 }
@___asan_gen_.2020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3960, i32 3 }
@___asan_gen_.2029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3977, i32 3 }
@___asan_gen_.2032 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 240, i32 2 }
@___asan_gen_.2035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 245, i32 2 }
@___asan_gen_.2038 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 248, i32 2 }
@___asan_gen_.2041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 253, i32 2 }
@___asan_gen_.2044 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 257, i32 2 }
@___asan_gen_.2045 = private unnamed_addr constant [6 x i8] c"__msg\00", align 1
@___asan_gen_.2047 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 226, i32 3 }
@___asan_gen_.2053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3738, i32 2 }
@___asan_gen_.2056 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3742, i32 3 }
@___asan_gen_.2059 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3754, i32 4 }
@___asan_gen_.2062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3763, i32 4 }
@___asan_gen_.2065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3769, i32 3 }
@___asan_gen_.2068 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3778, i32 4 }
@___asan_gen_.2071 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3790, i32 3 }
@___asan_gen_.2074 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3796, i32 3 }
@___asan_gen_.2077 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3803, i32 3 }
@___asan_gen_.2080 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3811, i32 3 }
@___asan_gen_.2083 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3814, i32 4 }
@___asan_gen_.2086 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 3839, i32 5 }
@___asan_gen_.2095 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4151, i32 4 }
@___asan_gen_.2101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4152, i32 4 }
@___asan_gen_.2107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4162, i32 3 }
@___asan_gen_.2113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4166, i32 3 }
@___asan_gen_.2122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 753, i32 4 }
@___asan_gen_.2131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4369, i32 2 }
@___asan_gen_.2140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4296, i32 2 }
@___asan_gen_.2149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4317, i32 2 }
@___asan_gen_.2155 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4320, i32 3 }
@___asan_gen_.2164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4339, i32 2 }
@___asan_gen_.2170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4348, i32 4 }
@___asan_gen_.2173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4357, i32 4 }
@___asan_gen_.2182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4389, i32 2 }
@___asan_gen_.2191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4408, i32 2 }
@___asan_gen_.2197 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4421, i32 5 }
@___asan_gen_.2200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4494, i32 12 }
@___asan_gen_.2209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4444, i32 3 }
@___asan_gen_.2215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4449, i32 3 }
@___asan_gen_.2221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4454, i32 3 }
@___asan_gen_.2227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4458, i32 3 }
@___asan_gen_.2233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4461, i32 3 }
@___asan_gen_.2239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4468, i32 3 }
@___asan_gen_.2240 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.2243 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.2244 = private constant [45 x i8] c"../drivers/net/ethernet/mellanox/mlx4/main.c\00", align 1
@___asan_gen_.2245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2244, i32 4476, i32 3 }
@___asan_gen_.2246 = private unnamed_addr constant [27 x i8] c"switch.table.mlx4_load_one\00", align 1
@___asan_gen_.2247 = private unnamed_addr constant [31 x i8] c"switch.table.mlx4_load_one.620\00", align 1
@___asan_gen_.2248 = private unnamed_addr constant [40 x i8] c"switch.table.slave_adjust_steering_mode\00", align 1
@___asan_gen_.2249 = private unnamed_addr constant [30 x i8] c"switch.table.show_port_ib_mtu\00", align 1
@llvm.compiler.used = appending global [823 x ptr] [ptr @__UNIQUE_ID_author347, ptr @__UNIQUE_ID_debug_level353, ptr @__UNIQUE_ID_debug_leveltype352, ptr @__UNIQUE_ID_description348, ptr @__UNIQUE_ID_enable_4k_uar365, ptr @__UNIQUE_ID_enable_4k_uartype364, ptr @__UNIQUE_ID_enable_64b_cqe_eqe363, ptr @__UNIQUE_ID_enable_64b_cqe_eqetype362, ptr @__UNIQUE_ID_file349, ptr @__UNIQUE_ID_license350, ptr @__UNIQUE_ID_log_mtts_per_seg373, ptr @__UNIQUE_ID_log_mtts_per_segtype372, ptr @__UNIQUE_ID_log_num_mac367, ptr @__UNIQUE_ID_log_num_mactype366, ptr @__UNIQUE_ID_log_num_mgm_entry_size361, ptr @__UNIQUE_ID_log_num_mgm_entry_sizetype360, ptr @__UNIQUE_ID_log_num_vlan369, ptr @__UNIQUE_ID_log_num_vlantype368, ptr @__UNIQUE_ID_msi_x355, ptr @__UNIQUE_ID_msi_xtype354, ptr @__UNIQUE_ID_num_vfs357, ptr @__UNIQUE_ID_num_vfstype356, ptr @__UNIQUE_ID_port_type_array375, ptr @__UNIQUE_ID_port_type_arraytype374, ptr @__UNIQUE_ID_probe_vf359, ptr @__UNIQUE_ID_probe_vftype358, ptr @__UNIQUE_ID_use_prio371, ptr @__UNIQUE_ID_use_priotype370, ptr @__UNIQUE_ID_version351, ptr @__exitcall_mlx4_cleanup, ptr @__initcall__kmod_mlx4_core__390_4510_mlx4_init6, ptr @__ksymtab_mlx4_bond, ptr @__ksymtab_mlx4_counter_alloc, ptr @__ksymtab_mlx4_counter_free, ptr @__ksymtab_mlx4_get_admin_guid, ptr @__ksymtab_mlx4_get_default_counter_index, ptr @__ksymtab_mlx4_get_internal_clock_params, ptr @__ksymtab_mlx4_get_parav_qkey, ptr @__ksymtab_mlx4_get_slave_node_guid, ptr @__ksymtab_mlx4_handle_eth_header_mcast_prio, ptr @__ksymtab_mlx4_is_slave_active, ptr @__ksymtab_mlx4_port_map_set, ptr @__ksymtab_mlx4_put_slave_node_guid, ptr @__ksymtab_mlx4_read_clock, ptr @__ksymtab_mlx4_set_admin_guid, ptr @__ksymtab_mlx4_sync_pkey_table, ptr @__ksymtab_mlx4_unbond, ptr @__mlx4_init_one._entry, ptr @__mlx4_init_one._entry.530, ptr @__mlx4_init_one._entry.533, ptr @__mlx4_init_one._entry.536, ptr @__mlx4_init_one._entry.539, ptr @__mlx4_init_one._entry.542, ptr @__mlx4_init_one._entry.545, ptr @__mlx4_init_one._entry.548, ptr @__mlx4_init_one._entry.551, ptr @__mlx4_init_one._entry.554, ptr @__mlx4_init_one._entry.557, ptr @__mlx4_init_one._entry.560, ptr @__mlx4_init_one._entry_ptr, ptr @__mlx4_init_one._entry_ptr.532, ptr @__mlx4_init_one._entry_ptr.535, ptr @__mlx4_init_one._entry_ptr.538, ptr @__mlx4_init_one._entry_ptr.541, ptr @__mlx4_init_one._entry_ptr.544, ptr @__mlx4_init_one._entry_ptr.547, ptr @__mlx4_init_one._entry_ptr.550, ptr @__mlx4_init_one._entry_ptr.553, ptr @__mlx4_init_one._entry_ptr.556, ptr @__mlx4_init_one._entry_ptr.559, ptr @__mlx4_init_one._entry_ptr.562, ptr @__modver_attr, ptr @__param_debug_level, ptr @__param_enable_4k_uar, ptr @__param_enable_64b_cqe_eqe, ptr @__param_log_mtts_per_seg, ptr @__param_log_num_mac, ptr @__param_log_num_mgm_entry_size, ptr @__param_log_num_vlan, ptr @__param_msi_x, ptr @__param_num_vfs, ptr @__param_port_type_array, ptr @__param_probe_vf, ptr @__param_use_prio, ptr @__set_port_type._entry, ptr @__set_port_type._entry.495, ptr @__set_port_type._entry_ptr, ptr @__set_port_type._entry_ptr.497, ptr @choose_steering_mode._entry, ptr @choose_steering_mode._entry.255, ptr @choose_steering_mode._entry.258, ptr @choose_steering_mode._entry_ptr, ptr @choose_steering_mode._entry_ptr.257, ptr @choose_steering_mode._entry_ptr.260, ptr @choose_tunnel_offload_mode._entry, ptr @choose_tunnel_offload_mode._entry_ptr, ptr @mlx4_allocate_default_counters._entry, ptr @mlx4_allocate_default_counters._entry.473, ptr @mlx4_allocate_default_counters._entry.476, ptr @mlx4_allocate_default_counters._entry_ptr, ptr @mlx4_allocate_default_counters._entry_ptr.475, ptr @mlx4_allocate_default_counters._entry_ptr.478, ptr @mlx4_bond._entry, ptr @mlx4_bond._entry.18, ptr @mlx4_bond._entry.21, ptr @mlx4_bond._entry_ptr, ptr @mlx4_bond._entry_ptr.20, ptr @mlx4_bond._entry_ptr.24, ptr @mlx4_change_port_types._entry, ptr @mlx4_change_port_types._entry.13, ptr @mlx4_change_port_types._entry_ptr, ptr @mlx4_change_port_types._entry_ptr.15, ptr @mlx4_check_dev_cap._entry, ptr @mlx4_check_dev_cap._entry_ptr, ptr @mlx4_check_port_params._entry, ptr @mlx4_check_port_params._entry.8, ptr @mlx4_check_port_params._entry_ptr, ptr @mlx4_check_port_params._entry_ptr.10, ptr @mlx4_cleanup, ptr @mlx4_comm_check_offline._entry, ptr @mlx4_comm_check_offline._entry_ptr, ptr @mlx4_dev_cap._entry, ptr @mlx4_dev_cap._entry.213, ptr @mlx4_dev_cap._entry.216, ptr @mlx4_dev_cap._entry.219, ptr @mlx4_dev_cap._entry.222, ptr @mlx4_dev_cap._entry.225, ptr @mlx4_dev_cap._entry.228, ptr @mlx4_dev_cap._entry.231, ptr @mlx4_dev_cap._entry.234, ptr @mlx4_dev_cap._entry.237, ptr @mlx4_dev_cap._entry.240, ptr @mlx4_dev_cap._entry.243, ptr @mlx4_dev_cap._entry_ptr, ptr @mlx4_dev_cap._entry_ptr.215, ptr @mlx4_dev_cap._entry_ptr.218, ptr @mlx4_dev_cap._entry_ptr.221, ptr @mlx4_dev_cap._entry_ptr.224, ptr @mlx4_dev_cap._entry_ptr.227, ptr @mlx4_dev_cap._entry_ptr.230, ptr @mlx4_dev_cap._entry_ptr.233, ptr @mlx4_dev_cap._entry_ptr.236, ptr @mlx4_dev_cap._entry_ptr.239, ptr @mlx4_dev_cap._entry_ptr.242, ptr @mlx4_dev_cap._entry_ptr.245, ptr @mlx4_dev_port._entry, ptr @mlx4_dev_port._entry_ptr, ptr @mlx4_devlink_reload_down._entry, ptr @mlx4_devlink_reload_down._entry_ptr, ptr @mlx4_devlink_reload_up._entry, ptr @mlx4_devlink_reload_up._entry_ptr, ptr @mlx4_enable_cqe_eqe_stride._entry, ptr @mlx4_enable_cqe_eqe_stride._entry_ptr, ptr @mlx4_enable_ignore_fcs._entry, ptr @mlx4_enable_ignore_fcs._entry.250, ptr @mlx4_enable_ignore_fcs._entry_ptr, ptr @mlx4_enable_ignore_fcs._entry_ptr.252, ptr @mlx4_enable_msi_x._entry, ptr @mlx4_enable_msi_x._entry_ptr, ptr @mlx4_enable_sriov._entry, ptr @mlx4_enable_sriov._entry.153, ptr @mlx4_enable_sriov._entry.156, ptr @mlx4_enable_sriov._entry.159, ptr @mlx4_enable_sriov._entry.162, ptr @mlx4_enable_sriov._entry.165, ptr @mlx4_enable_sriov._entry_ptr, ptr @mlx4_enable_sriov._entry_ptr.155, ptr @mlx4_enable_sriov._entry_ptr.158, ptr @mlx4_enable_sriov._entry_ptr.161, ptr @mlx4_enable_sriov._entry_ptr.164, ptr @mlx4_enable_sriov._entry_ptr.167, ptr @mlx4_free_ownership._entry, ptr @mlx4_free_ownership._entry_ptr, ptr @mlx4_get_internal_clock_params._entry, ptr @mlx4_get_internal_clock_params._entry_ptr, ptr @mlx4_get_ownership._entry, ptr @mlx4_get_ownership._entry_ptr, ptr @mlx4_how_many_lives_vf._entry, ptr @mlx4_how_many_lives_vf._entry_ptr, ptr @mlx4_init_fw._entry, ptr @mlx4_init_fw._entry.132, ptr @mlx4_init_fw._entry.135, ptr @mlx4_init_fw._entry.138, ptr @mlx4_init_fw._entry_ptr, ptr @mlx4_init_fw._entry_ptr.134, ptr @mlx4_init_fw._entry_ptr.137, ptr @mlx4_init_fw._entry_ptr.140, ptr @mlx4_init_hca._entry, ptr @mlx4_init_hca._entry.170, ptr @mlx4_init_hca._entry.173, ptr @mlx4_init_hca._entry.176, ptr @mlx4_init_hca._entry.179, ptr @mlx4_init_hca._entry.182, ptr @mlx4_init_hca._entry.185, ptr @mlx4_init_hca._entry.188, ptr @mlx4_init_hca._entry.191, ptr @mlx4_init_hca._entry.194, ptr @mlx4_init_hca._entry.197, ptr @mlx4_init_hca._entry.200, ptr @mlx4_init_hca._entry.203, ptr @mlx4_init_hca._entry.206, ptr @mlx4_init_hca._entry.209, ptr @mlx4_init_hca._entry_ptr, ptr @mlx4_init_hca._entry_ptr.172, ptr @mlx4_init_hca._entry_ptr.175, ptr @mlx4_init_hca._entry_ptr.178, ptr @mlx4_init_hca._entry_ptr.181, ptr @mlx4_init_hca._entry_ptr.184, ptr @mlx4_init_hca._entry_ptr.187, ptr @mlx4_init_hca._entry_ptr.190, ptr @mlx4_init_hca._entry_ptr.193, ptr @mlx4_init_hca._entry_ptr.196, ptr @mlx4_init_hca._entry_ptr.199, ptr @mlx4_init_hca._entry_ptr.202, ptr @mlx4_init_hca._entry_ptr.205, ptr @mlx4_init_hca._entry_ptr.208, ptr @mlx4_init_hca._entry_ptr.211, ptr @mlx4_init_icm._entry, ptr @mlx4_init_icm._entry.271, ptr @mlx4_init_icm._entry.274, ptr @mlx4_init_icm._entry.277, ptr @mlx4_init_icm._entry.280, ptr @mlx4_init_icm._entry.283, ptr @mlx4_init_icm._entry.286, ptr @mlx4_init_icm._entry.289, ptr @mlx4_init_icm._entry.292, ptr @mlx4_init_icm._entry.295, ptr @mlx4_init_icm._entry.298, ptr @mlx4_init_icm._entry.301, ptr @mlx4_init_icm._entry.304, ptr @mlx4_init_icm._entry.307, ptr @mlx4_init_icm._entry.310, ptr @mlx4_init_icm._entry_ptr, ptr @mlx4_init_icm._entry_ptr.273, ptr @mlx4_init_icm._entry_ptr.276, ptr @mlx4_init_icm._entry_ptr.279, ptr @mlx4_init_icm._entry_ptr.282, ptr @mlx4_init_icm._entry_ptr.285, ptr @mlx4_init_icm._entry_ptr.288, ptr @mlx4_init_icm._entry_ptr.291, ptr @mlx4_init_icm._entry_ptr.294, ptr @mlx4_init_icm._entry_ptr.297, ptr @mlx4_init_icm._entry_ptr.300, ptr @mlx4_init_icm._entry_ptr.303, ptr @mlx4_init_icm._entry_ptr.306, ptr @mlx4_init_icm._entry_ptr.309, ptr @mlx4_init_icm._entry_ptr.312, ptr @mlx4_init_one._entry, ptr @mlx4_init_one._entry_ptr, ptr @mlx4_init_port_info._entry, ptr @mlx4_init_port_info._entry.484, ptr @mlx4_init_port_info._entry_ptr, ptr @mlx4_init_port_info._entry_ptr.486, ptr @mlx4_init_slave._entry, ptr @mlx4_init_slave._entry.331, ptr @mlx4_init_slave._entry.334, ptr @mlx4_init_slave._entry.337, ptr @mlx4_init_slave._entry.340, ptr @mlx4_init_slave._entry.343, ptr @mlx4_init_slave._entry_ptr, ptr @mlx4_init_slave._entry_ptr.333, ptr @mlx4_init_slave._entry_ptr.336, ptr @mlx4_init_slave._entry_ptr.339, ptr @mlx4_init_slave._entry_ptr.342, ptr @mlx4_init_slave._entry_ptr.345, ptr @mlx4_load_fw._entry, ptr @mlx4_load_fw._entry.143, ptr @mlx4_load_fw._entry.146, ptr @mlx4_load_fw._entry_ptr, ptr @mlx4_load_fw._entry_ptr.145, ptr @mlx4_load_fw._entry_ptr.148, ptr @mlx4_load_one._entry, ptr @mlx4_load_one._entry.101, ptr @mlx4_load_one._entry.104, ptr @mlx4_load_one._entry.107, ptr @mlx4_load_one._entry.109, ptr @mlx4_load_one._entry.112, ptr @mlx4_load_one._entry.114, ptr @mlx4_load_one._entry.117, ptr @mlx4_load_one._entry.122, ptr @mlx4_load_one._entry.125, ptr @mlx4_load_one._entry.81, ptr @mlx4_load_one._entry.86, ptr @mlx4_load_one._entry.89, ptr @mlx4_load_one._entry.92, ptr @mlx4_load_one._entry.95, ptr @mlx4_load_one._entry.98, ptr @mlx4_load_one._entry_ptr, ptr @mlx4_load_one._entry_ptr.100, ptr @mlx4_load_one._entry_ptr.103, ptr @mlx4_load_one._entry_ptr.106, ptr @mlx4_load_one._entry_ptr.108, ptr @mlx4_load_one._entry_ptr.111, ptr @mlx4_load_one._entry_ptr.113, ptr @mlx4_load_one._entry_ptr.116, ptr @mlx4_load_one._entry_ptr.119, ptr @mlx4_load_one._entry_ptr.124, ptr @mlx4_load_one._entry_ptr.127, ptr @mlx4_load_one._entry_ptr.83, ptr @mlx4_load_one._entry_ptr.88, ptr @mlx4_load_one._entry_ptr.91, ptr @mlx4_load_one._entry_ptr.94, ptr @mlx4_load_one._entry_ptr.97, ptr @mlx4_mf_bond._entry, ptr @mlx4_mf_bond._entry.45, ptr @mlx4_mf_bond._entry.48, ptr @mlx4_mf_bond._entry_ptr, ptr @mlx4_mf_bond._entry_ptr.47, ptr @mlx4_mf_bond._entry_ptr.50, ptr @mlx4_mf_unbond._entry, ptr @mlx4_mf_unbond._entry.53, ptr @mlx4_mf_unbond._entry.56, ptr @mlx4_mf_unbond._entry_ptr, ptr @mlx4_mf_unbond._entry_ptr.55, ptr @mlx4_mf_unbond._entry_ptr.58, ptr @mlx4_pci_err_detected._entry, ptr @mlx4_pci_err_detected._entry_ptr, ptr @mlx4_pci_resume._entry, ptr @mlx4_pci_resume._entry.587, ptr @mlx4_pci_resume._entry.590, ptr @mlx4_pci_resume._entry_ptr, ptr @mlx4_pci_resume._entry_ptr.589, ptr @mlx4_pci_resume._entry_ptr.591, ptr @mlx4_pci_slot_reset._entry, ptr @mlx4_pci_slot_reset._entry.582, ptr @mlx4_pci_slot_reset._entry_ptr, ptr @mlx4_pci_slot_reset._entry_ptr.584, ptr @mlx4_port_map_set._entry, ptr @mlx4_port_map_set._entry.36, ptr @mlx4_port_map_set._entry_ptr, ptr @mlx4_port_map_set._entry_ptr.38, ptr @mlx4_query_func._entry, ptr @mlx4_query_func._entry_ptr, ptr @mlx4_remove_one._entry, ptr @mlx4_remove_one._entry.565, ptr @mlx4_remove_one._entry.568, ptr @mlx4_remove_one._entry.571, ptr @mlx4_remove_one._entry_ptr, ptr @mlx4_remove_one._entry_ptr.567, ptr @mlx4_remove_one._entry_ptr.570, ptr @mlx4_remove_one._entry_ptr.573, ptr @mlx4_restart_one_up._entry, ptr @mlx4_restart_one_up._entry.65, ptr @mlx4_restart_one_up._entry_ptr, ptr @mlx4_restart_one_up._entry_ptr.67, ptr @mlx4_resume._entry, ptr @mlx4_resume._entry.596, ptr @mlx4_resume._entry_ptr, ptr @mlx4_resume._entry_ptr.598, ptr @mlx4_setup_hca._entry, ptr @mlx4_setup_hca._entry.409, ptr @mlx4_setup_hca._entry.412, ptr @mlx4_setup_hca._entry.415, ptr @mlx4_setup_hca._entry.418, ptr @mlx4_setup_hca._entry.421, ptr @mlx4_setup_hca._entry.424, ptr @mlx4_setup_hca._entry.427, ptr @mlx4_setup_hca._entry.430, ptr @mlx4_setup_hca._entry.433, ptr @mlx4_setup_hca._entry.436, ptr @mlx4_setup_hca._entry.439, ptr @mlx4_setup_hca._entry.442, ptr @mlx4_setup_hca._entry.445, ptr @mlx4_setup_hca._entry.448, ptr @mlx4_setup_hca._entry.451, ptr @mlx4_setup_hca._entry.454, ptr @mlx4_setup_hca._entry.457, ptr @mlx4_setup_hca._entry.460, ptr @mlx4_setup_hca._entry.463, ptr @mlx4_setup_hca._entry.466, ptr @mlx4_setup_hca._entry.469, ptr @mlx4_setup_hca._entry_ptr, ptr @mlx4_setup_hca._entry_ptr.411, ptr @mlx4_setup_hca._entry_ptr.414, ptr @mlx4_setup_hca._entry_ptr.417, ptr @mlx4_setup_hca._entry_ptr.420, ptr @mlx4_setup_hca._entry_ptr.423, ptr @mlx4_setup_hca._entry_ptr.426, ptr @mlx4_setup_hca._entry_ptr.429, ptr @mlx4_setup_hca._entry_ptr.432, ptr @mlx4_setup_hca._entry_ptr.435, ptr @mlx4_setup_hca._entry_ptr.438, ptr @mlx4_setup_hca._entry_ptr.441, ptr @mlx4_setup_hca._entry_ptr.444, ptr @mlx4_setup_hca._entry_ptr.447, ptr @mlx4_setup_hca._entry_ptr.450, ptr @mlx4_setup_hca._entry_ptr.453, ptr @mlx4_setup_hca._entry_ptr.456, ptr @mlx4_setup_hca._entry_ptr.459, ptr @mlx4_setup_hca._entry_ptr.462, ptr @mlx4_setup_hca._entry_ptr.465, ptr @mlx4_setup_hca._entry_ptr.468, ptr @mlx4_setup_hca._entry_ptr.470, ptr @mlx4_shutdown._entry, ptr @mlx4_shutdown._entry_ptr, ptr @mlx4_slave_cap._entry, ptr @mlx4_slave_cap._entry.350, ptr @mlx4_slave_cap._entry.353, ptr @mlx4_slave_cap._entry.356, ptr @mlx4_slave_cap._entry.358, ptr @mlx4_slave_cap._entry.361, ptr @mlx4_slave_cap._entry.364, ptr @mlx4_slave_cap._entry.366, ptr @mlx4_slave_cap._entry.369, ptr @mlx4_slave_cap._entry.372, ptr @mlx4_slave_cap._entry.375, ptr @mlx4_slave_cap._entry.377, ptr @mlx4_slave_cap._entry.380, ptr @mlx4_slave_cap._entry.383, ptr @mlx4_slave_cap._entry.386, ptr @mlx4_slave_cap._entry.389, ptr @mlx4_slave_cap._entry_ptr, ptr @mlx4_slave_cap._entry_ptr.352, ptr @mlx4_slave_cap._entry_ptr.355, ptr @mlx4_slave_cap._entry_ptr.357, ptr @mlx4_slave_cap._entry_ptr.360, ptr @mlx4_slave_cap._entry_ptr.363, ptr @mlx4_slave_cap._entry_ptr.365, ptr @mlx4_slave_cap._entry_ptr.368, ptr @mlx4_slave_cap._entry_ptr.371, ptr @mlx4_slave_cap._entry_ptr.374, ptr @mlx4_slave_cap._entry_ptr.376, ptr @mlx4_slave_cap._entry_ptr.379, ptr @mlx4_slave_cap._entry_ptr.382, ptr @mlx4_slave_cap._entry_ptr.385, ptr @mlx4_slave_cap._entry_ptr.388, ptr @mlx4_slave_cap._entry_ptr.391, ptr @mlx4_slave_exit._entry, ptr @mlx4_slave_exit._entry_ptr, ptr @mlx4_slave_special_qp_cap._entry, ptr @mlx4_slave_special_qp_cap._entry.396, ptr @mlx4_slave_special_qp_cap._entry.399, ptr @mlx4_slave_special_qp_cap._entry_ptr, ptr @mlx4_slave_special_qp_cap._entry_ptr.398, ptr @mlx4_slave_special_qp_cap._entry_ptr.401, ptr @mlx4_suspend._entry, ptr @mlx4_suspend._entry_ptr, ptr @mlx4_unbond._entry, ptr @mlx4_unbond._entry.27, ptr @mlx4_unbond._entry.31, ptr @mlx4_unbond._entry_ptr, ptr @mlx4_unbond._entry_ptr.30, ptr @mlx4_unbond._entry_ptr.33, ptr @mlx4_validate_optimized_steering._entry, ptr @mlx4_validate_optimized_steering._entry.316, ptr @mlx4_validate_optimized_steering._entry_ptr, ptr @mlx4_validate_optimized_steering._entry_ptr.318, ptr @mlx4_verify_params._entry, ptr @mlx4_verify_params._entry.602, ptr @mlx4_verify_params._entry.605, ptr @mlx4_verify_params._entry.608, ptr @mlx4_verify_params._entry.611, ptr @mlx4_verify_params._entry.614, ptr @mlx4_verify_params._entry.617, ptr @mlx4_verify_params._entry_ptr, ptr @mlx4_verify_params._entry_ptr.604, ptr @mlx4_verify_params._entry_ptr.607, ptr @mlx4_verify_params._entry_ptr.610, ptr @mlx4_verify_params._entry_ptr.613, ptr @mlx4_verify_params._entry_ptr.616, ptr @mlx4_verify_params._entry_ptr.619, ptr @set_port_ib_mtu._entry, ptr @set_port_ib_mtu._entry.505, ptr @set_port_ib_mtu._entry.508, ptr @set_port_ib_mtu._entry_ptr, ptr @set_port_ib_mtu._entry_ptr.507, ptr @set_port_ib_mtu._entry_ptr.509, ptr @set_port_type._entry, ptr @set_port_type._entry_ptr, ptr @show_port_ib_mtu._entry, ptr @show_port_ib_mtu._entry_ptr, ptr @slave_adjust_steering_mode._entry, ptr @slave_adjust_steering_mode._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @mlx4_debug_level, ptr @msi_x, ptr @mlx4_log_num_mgm_entry_size, ptr @enable_64b_cqe_eqe, ptr @enable_4k_uar, ptr @log_num_mac, ptr @log_num_vlan, ptr @use_prio, ptr @log_mtts_per_seg, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.9, ptr @.str.11, ptr @.str.12, ptr @.str.14, ptr @.str.16, ptr @.str.17, ptr @.str.19, ptr @.str.22, ptr @.str.23, ptr @.str.25, ptr @.str.26, ptr @.str.28, ptr @.str.29, ptr @.str.32, ptr @.str.34, ptr @.str.35, ptr @.str.37, ptr @.str.39, ptr @.str.40, ptr @mlx4_driver, ptr @mlx4_wq, ptr @num_vfs_argc, ptr @num_vfs, ptr @probe_vfs_argc, ptr @probe_vf, ptr @arr_argc, ptr @port_type_array, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.46, ptr @.str.49, ptr @.str.51, ptr @.str.52, ptr @.str.54, ptr @.str.57, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.66, ptr @mlx4_load_one.__key, ptr @.str.68, ptr @mlx4_load_one.__key.69, ptr @.str.70, ptr @mlx4_load_one.__key.71, ptr @.str.72, ptr @mlx4_load_one.__key.73, ptr @.str.74, ptr @mlx4_load_one.__key.75, ptr @.str.76, ptr @mlx4_load_one.__key.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.82, ptr @mlx4_load_one.__key.84, ptr @.str.85, ptr @.str.87, ptr @.str.90, ptr @.str.93, ptr @.str.96, ptr @.str.99, ptr @.str.102, ptr @.str.105, ptr @pf_loading, ptr @.str.110, ptr @.str.115, ptr @.str.118, ptr @mlx4_load_one.__key.120, ptr @.str.121, ptr @.str.123, ptr @.str.126, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.133, ptr @.str.136, ptr @.str.139, ptr @.str.141, ptr @.str.142, ptr @.str.144, ptr @.str.147, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.154, ptr @.str.157, ptr @.str.160, ptr @.str.163, ptr @.str.166, ptr @.str.168, ptr @.str.169, ptr @.str.171, ptr @.str.174, ptr @low_mem_profile, ptr @default_profile, ptr @.str.177, ptr @.str.180, ptr @.str.183, ptr @.str.186, ptr @.str.189, ptr @.str.192, ptr @.str.195, ptr @.str.198, ptr @.str.201, ptr @.str.204, ptr @.str.207, ptr @.str.210, ptr @.str.212, ptr @.str.214, ptr @.str.217, ptr @.str.220, ptr @.str.223, ptr @.str.226, ptr @.str.229, ptr @.str.232, ptr @.str.235, ptr @.str.238, ptr @.str.241, ptr @.str.244, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.251, ptr @.str.253, ptr @.str.254, ptr @.str.256, ptr @.str.259, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.272, ptr @.str.275, ptr @.str.278, ptr @.str.281, ptr @.str.284, ptr @.str.287, ptr @.str.290, ptr @.str.293, ptr @.str.296, ptr @.str.299, ptr @.str.302, ptr @.str.305, ptr @.str.308, ptr @.str.311, ptr @.str.313, ptr @.str.314, ptr @.str.315, ptr @.str.317, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.332, ptr @.str.335, ptr @.str.338, ptr @.str.341, ptr @.str.344, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.351, ptr @.str.354, ptr @.str.359, ptr @.str.362, ptr @.str.367, ptr @.str.370, ptr @.str.373, ptr @.str.378, ptr @.str.381, ptr @.str.384, ptr @.str.387, ptr @.str.390, ptr @.str.392, ptr @.str.393, ptr @.str.394, ptr @.str.395, ptr @.str.397, ptr @.str.400, ptr @.str.402, ptr @.str.403, ptr @.str.404, ptr @.str.405, ptr @.str.406, ptr @.str.407, ptr @.str.408, ptr @.str.410, ptr @.str.413, ptr @.str.416, ptr @.str.419, ptr @.str.422, ptr @.str.425, ptr @.str.428, ptr @.str.431, ptr @.str.434, ptr @.str.437, ptr @.str.440, ptr @.str.443, ptr @.str.446, ptr @.str.449, ptr @.str.452, ptr @.str.455, ptr @.str.458, ptr @.str.461, ptr @.str.464, ptr @.str.467, ptr @.str.471, ptr @.str.472, ptr @.str.474, ptr @.str.477, ptr @.str.479, ptr @mlx4_init_port_info.__key, ptr @.str.480, ptr @.str.481, ptr @.str.482, ptr @mlx4_init_port_info.__key.483, ptr @.str.485, ptr @set_port_type.set_port_type_mutex, ptr @.str.487, ptr @.str.488, ptr @.str.489, ptr @.str.490, ptr @.str.491, ptr @.str.492, ptr @.str.493, ptr @.str.494, ptr @.str.496, ptr @.str.498, ptr @.str.499, ptr @.str.500, ptr @.str.501, ptr @.str.502, ptr @.str.503, ptr @.str.504, ptr @.str.506, ptr @.str.510, ptr @.str.511, ptr @mlx4_pci_table, ptr @mlx4_err_handler, ptr @mlx4_pm_ops, ptr @.str.512, ptr @.str.513, ptr @mlx4_version, ptr @mlx4_devlink_ops, ptr @mlx4_init_one.__key, ptr @.str.514, ptr @mlx4_init_one.__key.515, ptr @.str.516, ptr @mlx4_init_one.__key.517, ptr @.str.518, ptr @mlx4_devlink_params, ptr @mlx4_devlink_reload_down.__msg, ptr @.str.519, ptr @.str.520, ptr @.str.521, ptr @.str.522, ptr @.str.523, ptr @.str.524, ptr @.str.525, ptr @.str.526, ptr @.str.527, ptr @mlx4_devlink_max_macs_validate.__msg, ptr @.str.528, ptr @.str.529, ptr @.str.531, ptr @.str.534, ptr @.str.537, ptr @.str.540, ptr @.str.543, ptr @.str.546, ptr @.str.549, ptr @.str.552, ptr @.str.555, ptr @.str.558, ptr @.str.561, ptr @.str.563, ptr @.str.564, ptr @.str.566, ptr @.str.569, ptr @.str.572, ptr @.str.574, ptr @.str.575, ptr @.str.576, ptr @.str.577, ptr @.str.578, ptr @.str.579, ptr @.str.580, ptr @.str.581, ptr @.str.583, ptr @.str.585, ptr @.str.586, ptr @.str.588, ptr @.str.592, ptr @.str.593, ptr @.str.594, ptr @.str.595, ptr @.str.597, ptr @.str.599, ptr @.str.600, ptr @.str.601, ptr @.str.603, ptr @.str.606, ptr @.str.609, ptr @.str.612, ptr @.str.615, ptr @.str.618, ptr @switch.table.mlx4_load_one, ptr @switch.table.mlx4_load_one.620, ptr @switch.table.slave_adjust_steering_mode, ptr @switch.table.show_port_ib_mtu], section "llvm.metadata"
@0 = internal global [542 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_debug_level to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @msi_x to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_log_num_mgm_entry_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @enable_64b_cqe_eqe to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @enable_4k_uar to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @log_num_mac to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @log_num_vlan to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @use_prio to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @log_mtts_per_seg to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_check_port_params._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_check_port_params._entry.8 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_change_port_types._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_change_port_types._entry.13 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_bond._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_bond._entry.18 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_bond._entry.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_unbond._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_unbond._entry.27 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_unbond._entry.31 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_port_map_set._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_port_map_set._entry.36 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_get_internal_clock_params._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_driver to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @num_vfs_argc to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @num_vfs to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @probe_vfs_argc to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @probe_vf to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @arr_argc to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @port_type_array to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_mf_bond._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_mf_bond._entry.45 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_mf_bond._entry.48 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_mf_unbond._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_mf_unbond._entry.53 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_mf_unbond._entry.56 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_exit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_free_ownership._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_restart_one_up._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_restart_one_up._entry.65 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one.__key.69 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one.__key.71 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one.__key.73 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one.__key.75 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one.__key.77 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.81 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one.__key.84 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.86 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.952 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.952 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.92 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.95 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.98 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.101 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.104 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.107 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pf_loading to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.109 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.112 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.114 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.117 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one.__key.120 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.122 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_one._entry.125 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_get_ownership._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_fw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_fw._entry.132 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_fw._entry.135 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_fw._entry.138 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_fw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_fw._entry.143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_load_fw._entry.146 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1084 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1084 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_check_dev_cap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_sriov._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_sriov._entry.153 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_sriov._entry.156 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_sriov._entry.159 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_sriov._entry.162 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_sriov._entry.165 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.170 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.173 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @low_mem_profile to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1154 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_profile to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.176 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.179 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.185 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.188 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.191 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.194 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.197 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.200 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.203 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.206 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_hca._entry.209 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.213 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.216 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.219 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.222 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.225 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.228 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.231 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.234 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.237 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.240 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_cap._entry.243 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_cqe_eqe_stride._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_ignore_fcs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_ignore_fcs._entry.250 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @choose_steering_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @choose_steering_mode._entry.255 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 102, i32 160, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @choose_steering_mode._entry.258 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @choose_tunnel_offload_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.271 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.274 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.277 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.280 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.283 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.286 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.289 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.292 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.295 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.298 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.301 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.304 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.307 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_icm._entry.310 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_query_func._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_validate_optimized_steering._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_validate_optimized_steering._entry.316 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_dev_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_slave._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_slave._entry.331 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_slave._entry.334 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_slave._entry.337 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_slave._entry.340 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_slave._entry.343 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_comm_check_offline._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.350 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.353 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.356 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.358 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.361 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.364 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.366 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.369 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.372 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.375 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.377 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.380 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.383 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.386 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_cap._entry.389 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.392 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.393 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_special_qp_cap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.395 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_special_qp_cap._entry.396 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_slave_special_qp_cap._entry.399 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.400 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @slave_adjust_steering_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.402 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.403 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_enable_msi_x._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.405 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.409 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.412 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.415 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.418 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.421 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.424 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.425 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.427 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.428 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.430 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.431 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.433 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.436 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.437 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.439 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.440 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.442 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.443 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.445 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.446 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.448 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.451 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.454 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.455 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.457 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.458 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.460 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.461 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.463 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.466 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_setup_hca._entry.469 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_allocate_default_counters._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.471 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_allocate_default_counters._entry.473 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.474 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_allocate_default_counters._entry.476 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.477 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.479 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_port_info.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_port_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.480 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.482 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_port_info.__key.483 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_port_info._entry.484 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_port_type.set_port_type_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.1889 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.487 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.488 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.489 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.490 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.491 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_port_type._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.492 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.493 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.494 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.496 to i32), i32 103, i32 160, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.498 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.499 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.500 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.501 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.502 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_port_ib_mtu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.503 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.504 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_port_ib_mtu._entry.505 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.506 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_port_ib_mtu._entry.508 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_port_ib_mtu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.510 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.511 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1963 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_pci_table to i32), i32 896, i32 1120, i32 ptrtoint (ptr @___asan_gen_.1964 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_err_handler to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1967 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.1970 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_one._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.512 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.513 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_version to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_devlink_ops to i32), i32 204, i32 256, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1987 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_one.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.514 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_one.__key.515 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.516 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_init_one.__key.517 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2000 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.518 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_devlink_params to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_devlink_reload_down.__msg to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_devlink_reload_down._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.519 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.520 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_devlink_reload_up._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.521 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.522 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.523 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.524 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.525 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.526 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.527 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_devlink_max_macs_validate.__msg to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.528 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.529 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.531 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2056 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.534 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.537 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.540 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.543 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.546 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.549 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.552 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.555 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.558 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.561 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2086 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_remove_one._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.563 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.564 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_remove_one._entry.565 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.566 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_remove_one._entry.568 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.569 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_remove_one._entry.571 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.572 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_how_many_lives_vf._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.574 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.575 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_shutdown._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.576 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.577 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_pci_err_detected._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.578 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.579 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_pci_slot_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.580 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.581 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_pci_slot_reset._entry.582 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.583 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_pci_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.585 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.586 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_pci_resume._entry.587 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.588 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_pci_resume._entry.590 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_suspend._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.592 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.593 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.594 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.595 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_resume._entry.596 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.597 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.599 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_verify_params._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.600 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.601 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_verify_params._entry.602 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.603 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_verify_params._entry.605 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.606 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_verify_params._entry.608 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.609 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_verify_params._entry.611 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.612 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_verify_params._entry.614 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.615 to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx4_verify_params._entry.617 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2240 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.618 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.2243 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.mlx4_load_one to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2246 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.mlx4_load_one.620 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2247 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.slave_adjust_steering_mode to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2248 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.show_port_ib_mtu to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2249 to i32), i32 ptrtoint (ptr @___asan_gen_.2244 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__modver_version_show(ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx4_check_port_params(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %port_type) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %flags, align 8
  %and = and i64 %1, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

for.cond.preheader:                               ; preds = %entry
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %2 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_ports, align 4
  %sub = add i32 %3, -1
  %smax = call i32 @llvm.smax.i32(i32 %sub, i32 0)
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %for.cond.preheader
  %i.0 = phi i32 [ %add, %for.body.for.cond_crit_edge ], [ 0, %for.cond.preheader ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0, i32 %smax)
  %exitcond.not = icmp eq i32 %i.0, %smax
  br i1 %exitcond.not, label %for.cond.if.end6_crit_edge, label %for.body

for.cond.if.end6_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr i32, ptr %port_type, i32 %i.0
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add nuw i32 %i.0, 1
  %arrayidx2 = getelementptr i32, ptr %port_type, i32 %add
  %6 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx2, align 4
  %cmp3.not = icmp eq i32 %5, %7
  br i1 %cmp3.not, label %for.body.for.cond_crit_edge, label %do.end

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.3) #20
  br label %cleanup

if.end6:                                          ; preds = %for.cond.if.end6_crit_edge, %entry.if.end6_crit_edge
  %num_ports9 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %12 = ptrtoint ptr %num_ports9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_ports9, align 4
  %smax45 = call i32 @llvm.smax.i32(i32 %13, i32 0)
  br label %for.cond7

for.cond7:                                        ; preds = %for.body11.for.cond7_crit_edge, %if.end6
  %i.1 = phi i32 [ 0, %if.end6 ], [ %add14, %for.body11.for.cond7_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1, i32 %smax45)
  %exitcond46.not = icmp eq i32 %i.1, %smax45
  br i1 %exitcond46.not, label %for.cond7.cleanup_crit_edge, label %for.body11

for.cond7.cleanup_crit_edge:                      ; preds = %for.cond7
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body11:                                       ; preds = %for.cond7
  %arrayidx12 = getelementptr i32, ptr %port_type, i32 %i.1
  %14 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx12, align 4
  %add14 = add nuw i32 %i.1, 1
  %arrayidx15 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 74, i32 %add14
  %16 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx15, align 1
  %conv = zext i8 %17 to i32
  %and16 = and i32 %15, %conv
  %tobool17.not = icmp eq i32 %and16, 0
  br i1 %tobool17.not, label %do.end21, label %for.body11.for.cond7_crit_edge

for.body11.for.cond7_crit_edge:                   ; preds = %for.body11
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond7

do.end21:                                         ; preds = %for.body11
  call void @__sanitizer_cov_trace_pc() #19
  %18 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %dev24 = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24, ptr noundef nonnull @.str.9, i32 noundef %add14) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end21, %for.cond7.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -95, %do.end21 ], [ -95, %do.end ], [ 0, %for.cond7.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @mlx4_get_parav_qkey(ptr nocapture noundef readonly %dev, i32 noundef %qpn, ptr nocapture noundef writeonly %qkey) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %base_tunnel_sqpn = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 4, i32 5
  %0 = ptrtoint ptr %base_tunnel_sqpn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %base_tunnel_sqpn, align 4
  %add = add i32 %1, 1024
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %qpn)
  %cmp.not = icmp ugt i32 %add, %qpn
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %base_proxy_sqpn = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 4, i32 4
  %2 = ptrtoint ptr %base_proxy_sqpn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %base_proxy_sqpn, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %qpn)
  %cmp2 = icmp ugt i32 %3, %qpn
  br i1 %cmp2, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %qpn)
  %cmp5.not = icmp ugt i32 %1, %qpn
  %. = select i1 %cmp5.not, i32 %3, i32 %1
  %qk.0.in = add i32 %qpn, -65536
  %qk.0 = sub i32 %qk.0.in, %.
  %4 = ptrtoint ptr %qkey to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %qk.0, ptr %qkey, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @mlx4_sync_pkey_table(ptr nocapture noundef %dev, i32 noundef %slave, i32 noundef %port, i32 noundef %i, i32 noundef %val) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %conv = trunc i32 %val to i8
  %sub = add i32 %port, -1
  %arrayidx2 = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 37, i32 %slave, i32 %sub, i32 %i
  %2 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %conv, ptr %arrayidx2, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @mlx4_put_slave_node_guid(ptr nocapture noundef %dev, i32 noundef %slave, i64 noundef %guid) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 40, i32 %slave
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %guid, ptr %arrayidx, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i64 @mlx4_get_slave_node_guid(ptr nocapture noundef readonly %dev, i32 noundef %slave) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 40, i32 %slave
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %arrayidx, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i64 [ %3, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i64 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @mlx4_is_slave_active(ptr nocapture noundef readonly %dev, i32 noundef %slave) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %master = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 10, i32 3
  %2 = ptrtoint ptr %master to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %master, align 4
  %active = getelementptr %struct.mlx4_slave_state, ptr %3, i32 %slave, i32 3
  %4 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %active, align 1, !range !1168
  %6 = zext i8 %5 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %6, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @mlx4_handle_eth_header_mcast_prio(ptr nocapture noundef writeonly %ctrl, ptr nocapture noundef readonly %eth_header) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dst_mac = getelementptr inbounds %struct.mlx4_net_trans_rule_hw_eth, ptr %eth_header, i32 0, i32 4
  %0 = ptrtoint ptr %dst_mac to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %dst_mac, align 4
  %2 = and i32 %1, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %dst_mac to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %dst_mac, align 2
  %add.ptr1.i = getelementptr %struct.mlx4_net_trans_rule_hw_eth, ptr %eth_header, i32 0, i32 4, i32 2
  %5 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %add.ptr1.i, align 2
  %and9.i = and i16 %6, %4
  %add.ptr3.i = getelementptr %struct.mlx4_net_trans_rule_hw_eth, ptr %eth_header, i32 0, i32 4, i32 4
  %7 = ptrtoint ptr %add.ptr3.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %add.ptr3.i, align 2
  %and510.i = and i16 %and9.i, %8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %and510.i)
  %cmp.i = icmp eq i16 %and510.i, -1
  br i1 %cmp.i, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false.if.end12_crit_edge

lor.lhs.false.if.end12_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %add.ptr = getelementptr %struct.mlx4_net_trans_rule_hw_eth, ptr %eth_header, i32 1
  %9 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %add.ptr, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %cmp = icmp eq i8 %10, 0
  br i1 %cmp, label %land.lhs.true, label %if.then.if.end12_crit_edge

if.then.if.end12_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

land.lhs.true:                                    ; preds = %if.then
  %id = getelementptr %struct.mlx4_net_trans_rule_hw_eth, ptr %eth_header, i32 1, i32 2
  %11 = ptrtoint ptr %id to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %id, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %cmp6 = icmp eq i16 %12, 0
  br i1 %cmp6, label %land.rhs, label %land.lhs.true.if.end12_crit_edge

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

land.rhs:                                         ; preds = %land.lhs.true
  %rsvd = getelementptr %struct.mlx4_net_trans_rule_hw_eth, ptr %eth_header, i32 1, i32 1
  %13 = ptrtoint ptr %rsvd to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %rsvd, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %cmp9 = icmp eq i8 %14, 0
  br i1 %cmp9, label %if.then11, label %land.rhs.if.end12_crit_edge

land.rhs.if.end12_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then11:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  %15 = ptrtoint ptr %ctrl to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 20480, ptr %ctrl, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %land.rhs.if.end12_crit_edge, %land.lhs.true.if.end12_crit_edge, %if.then.if.end12_crit_edge, %lor.lhs.false.if.end12_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx4_change_port_types(ptr noundef %dev, ptr nocapture noundef readonly %port_types) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp78 = icmp sgt i32 %1, 0
  br i1 %cmp78, label %entry.for.body_crit_edge, label %entry.out_crit_edge

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %port.080 = phi i32 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %change.079 = phi i32 [ %spec.select, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr i32, ptr %port_types, i32 %port.080
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %add = add nuw nsw i32 %port.080, 1
  %arrayidx2 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 73, i32 %add
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %5)
  %cmp3.not = icmp eq i32 %3, %5
  %spec.select = select i1 %cmp3.not, i32 %change.079, i32 1
  %exitcond.not = icmp eq i32 %add, %1
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select)
  %phi.cmp = icmp eq i32 %spec.select, 0
  br i1 %phi.cmp, label %for.end.out_crit_edge, label %if.then4

for.end.out_crit_edge:                            ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.then4:                                         ; preds = %for.end
  tail call void @mlx4_unregister_device(ptr noundef %dev) #17
  %6 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp8.not81 = icmp slt i32 %7, 1
  br i1 %cmp8.not81, label %if.then4.mlx4_set_port_mask.exit_crit_edge, label %if.then4.for.body9_crit_edge

if.then4.for.body9_crit_edge:                     ; preds = %if.then4
  br label %for.body9

if.then4.mlx4_set_port_mask.exit_crit_edge:       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_set_port_mask.exit

for.body9:                                        ; preds = %for.inc19.for.body9_crit_edge, %if.then4.for.body9_crit_edge
  %port.182 = phi i32 [ %inc20, %for.inc19.for.body9_crit_edge ], [ 1, %if.then4.for.body9_crit_edge ]
  %call = tail call i32 @mlx4_CLOSE_PORT(ptr noundef %dev, i32 noundef %port.182) #17
  %sub = add i32 %port.182, -1
  %arrayidx10 = getelementptr i32, ptr %port_types, i32 %sub
  %8 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx10, align 4
  %arrayidx13 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 73, i32 %port.182
  %10 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %arrayidx13, align 4
  %conv = trunc i32 %port.182 to i8
  %call14 = tail call i32 @mlx4_SET_PORT(ptr noundef %dev, i8 noundef zeroext %conv, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %for.inc19, label %do.end

do.end:                                           ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #19
  %11 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %dev17 = getelementptr inbounds %struct.pci_dev, ptr %14, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev17, ptr noundef nonnull @.str.11, i32 noundef %port.182) #20
  br label %out

for.inc19:                                        ; preds = %for.body9
  %inc20 = add i32 %port.182, 1
  %15 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %num_ports, align 4
  %cmp8.not = icmp sgt i32 %inc20, %16
  br i1 %cmp8.not, label %for.end21, label %for.inc19.for.body9_crit_edge

for.inc19.for.body9_crit_edge:                    ; preds = %for.inc19
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body9

for.end21:                                        ; preds = %for.inc19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp.not9.i = icmp slt i32 %16, 1
  br i1 %cmp.not9.i, label %for.end21.mlx4_set_port_mask.exit_crit_edge, label %for.end21.for.body.i_crit_edge

for.end21.for.body.i_crit_edge:                   ; preds = %for.end21
  br label %for.body.i

for.end21.mlx4_set_port_mask.exit_crit_edge:      ; preds = %for.end21
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_set_port_mask.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.end21.for.body.i_crit_edge
  %i.010.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 1, %for.end21.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 73, i32 %i.010.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i, align 4
  %arrayidx3.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 77, i32 %i.010.i
  %19 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %arrayidx3.i, align 4
  %inc.i = add i32 %i.010.i, 1
  %20 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_ports, align 4
  %cmp.not.i = icmp sgt i32 %inc.i, %21
  br i1 %cmp.not.i, label %for.body.i.mlx4_set_port_mask.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.body.i.mlx4_set_port_mask.exit_crit_edge:     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_set_port_mask.exit

mlx4_set_port_mask.exit:                          ; preds = %for.body.i.mlx4_set_port_mask.exit_crit_edge, %for.end21.mlx4_set_port_mask.exit_crit_edge, %if.then4.mlx4_set_port_mask.exit_crit_edge
  %call22 = tail call i32 @mlx4_register_device(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.end31, label %do.end27

do.end27:                                         ; preds = %mlx4_set_port_mask.exit
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %dev30 = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev30, ptr noundef nonnull @.str.14) #20
  br label %out

if.end31:                                         ; preds = %mlx4_set_port_mask.exit
  %26 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %27)
  %cmp.not23.i = icmp slt i32 %27, 1
  br i1 %cmp.not23.i, label %if.end31.lor.lhs.false.i_crit_edge, label %if.end31.for.body.i59.outer_crit_edge

if.end31.for.body.i59.outer_crit_edge:            ; preds = %if.end31
  br label %for.body.i59.outer

if.end31.lor.lhs.false.i_crit_edge:               ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false.i

for.body.i59.outer:                               ; preds = %for.inc.i.thread.for.body.i59.outer_crit_edge, %if.end31.for.body.i59.outer_crit_edge
  %tobool.not.i = phi i1 [ false, %for.inc.i.thread.for.body.i59.outer_crit_edge ], [ true, %if.end31.for.body.i59.outer_crit_edge ]
  %has_ib_port.025.i.ph = phi i32 [ %has_ib_port.025.i, %for.inc.i.thread.for.body.i59.outer_crit_edge ], [ 0, %if.end31.for.body.i59.outer_crit_edge ]
  %port.024.i.ph = phi i32 [ %inc.i6064, %for.inc.i.thread.for.body.i59.outer_crit_edge ], [ 1, %if.end31.for.body.i59.outer_crit_edge ]
  br label %for.body.i59

for.body.i59:                                     ; preds = %for.inc.i.for.body.i59_crit_edge, %for.body.i59.outer
  %has_ib_port.025.i = phi i32 [ %has_ib_port.1.i, %for.inc.i.for.body.i59_crit_edge ], [ %has_ib_port.025.i.ph, %for.body.i59.outer ]
  %port.024.i = phi i32 [ %inc.i60, %for.inc.i.for.body.i59_crit_edge ], [ %port.024.i.ph, %for.body.i59.outer ]
  %arrayidx.i58 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 73, i32 %port.024.i
  %28 = ptrtoint ptr %arrayidx.i58 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i58, align 4
  %30 = zext i32 %29 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values)
  switch i32 %29, label %for.inc.fold.split.i [
    i32 1, label %for.body.i59.for.inc.i_crit_edge
    i32 2, label %for.inc.i.thread
  ]

for.body.i59.for.inc.i_crit_edge:                 ; preds = %for.body.i59
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

for.inc.fold.split.i:                             ; preds = %for.body.i59
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

for.inc.i:                                        ; preds = %for.inc.fold.split.i, %for.body.i59.for.inc.i_crit_edge
  %has_ib_port.1.i = phi i32 [ %29, %for.body.i59.for.inc.i_crit_edge ], [ %has_ib_port.025.i, %for.inc.fold.split.i ]
  %inc.i60 = add i32 %port.024.i, 1
  %cmp.not.i61 = icmp sgt i32 %inc.i60, %27
  br i1 %cmp.not.i61, label %for.end.i, label %for.inc.i.for.body.i59_crit_edge

for.inc.i.for.body.i59_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i59

for.inc.i.thread:                                 ; preds = %for.body.i59
  %inc.i6064 = add i32 %port.024.i, 1
  %cmp.not.i6165 = icmp sgt i32 %inc.i6064, %27
  br i1 %cmp.not.i6165, label %for.inc.i.thread.if.then9.i_crit_edge, label %for.inc.i.thread.for.body.i59.outer_crit_edge

for.inc.i.thread.for.body.i59.outer_crit_edge:    ; preds = %for.inc.i.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i59.outer

for.inc.i.thread.if.then9.i_crit_edge:            ; preds = %for.inc.i.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then9.i

for.end.i:                                        ; preds = %for.inc.i
  br i1 %tobool.not.i, label %for.end.i.if.end10.i_crit_edge, label %for.end.i.if.then9.i_crit_edge

for.end.i.if.then9.i_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then9.i

for.end.i.if.end10.i_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10.i

if.then9.i:                                       ; preds = %for.end.i.if.then9.i_crit_edge, %for.inc.i.thread.if.then9.i_crit_edge
  %has_ib_port.1.i6671 = phi i32 [ %has_ib_port.1.i, %for.end.i.if.then9.i_crit_edge ], [ %has_ib_port.025.i, %for.inc.i.thread.if.then9.i_crit_edge ]
  %call.i = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext false, ptr noundef nonnull @.str.41) #17
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then9.i, %for.end.i.if.end10.i_crit_edge
  %has_ib_port.1.i6672 = phi i32 [ %has_ib_port.1.i6671, %if.then9.i ], [ %has_ib_port.1.i, %for.end.i.if.end10.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %has_ib_port.1.i6672)
  %tobool11.not.i = icmp eq i32 %has_ib_port.1.i6672, 0
  br i1 %tobool11.not.i, label %if.end10.i.lor.lhs.false.i_crit_edge, label %if.end10.i.if.then14.i_crit_edge

if.end10.i.if.then14.i_crit_edge:                 ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then14.i

if.end10.i.lor.lhs.false.i_crit_edge:             ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end10.i.lor.lhs.false.i_crit_edge, %if.end31.lor.lhs.false.i_crit_edge
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %31 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %32, 1073741824
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool13.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool13.not.i, label %lor.lhs.false.i.out_crit_edge, label %lor.lhs.false.i.if.then14.i_crit_edge

lor.lhs.false.i.if.then14.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then14.i

lor.lhs.false.i.out_crit_edge:                    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.then14.i:                                      ; preds = %lor.lhs.false.i.if.then14.i_crit_edge, %if.end10.i.if.then14.i_crit_edge
  %call15.i = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext false, ptr noundef nonnull @.str.42) #17
  br label %out

out:                                              ; preds = %if.then14.i, %lor.lhs.false.i.out_crit_edge, %do.end27, %do.end, %for.end.out_crit_edge, %entry.out_crit_edge
  %err.0 = phi i32 [ %call14, %do.end ], [ %call22, %do.end27 ], [ 0, %for.end.out_crit_edge ], [ 0, %lor.lhs.false.i.out_crit_edge ], [ 0, %if.then14.i ], [ 0, %entry.out_crit_edge ]
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_unregister_device(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_CLOSE_PORT(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_SET_PORT(ptr noundef, i8 noundef zeroext, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_register_device(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx4_request_modules(ptr nocapture noundef readonly %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.not23 = icmp slt i32 %1, 1
  br i1 %cmp.not23, label %entry.lor.lhs.false_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.lor.lhs.false_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %has_eth_port.026 = phi i32 [ %has_eth_port.1, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %has_ib_port.025 = phi i32 [ %has_ib_port.1, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %port.024 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 1, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 73, i32 %port.024
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.621)
  switch i32 %3, label %for.inc.fold.split [
    i32 1, label %for.body.for.inc_crit_edge
    i32 2, label %if.then7
  ]

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then7:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

for.inc.fold.split:                               ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

for.inc:                                          ; preds = %for.inc.fold.split, %if.then7, %for.body.for.inc_crit_edge
  %has_ib_port.1 = phi i32 [ %has_ib_port.025, %if.then7 ], [ %3, %for.body.for.inc_crit_edge ], [ %has_ib_port.025, %for.inc.fold.split ]
  %has_eth_port.1 = phi i32 [ 1, %if.then7 ], [ %has_eth_port.026, %for.body.for.inc_crit_edge ], [ %has_eth_port.026, %for.inc.fold.split ]
  %inc = add i32 %port.024, 1
  %cmp.not = icmp sgt i32 %inc, %1
  br i1 %cmp.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %has_eth_port.1)
  %tobool.not = icmp eq i32 %has_eth_port.1, 0
  br i1 %tobool.not, label %for.end.if.end10_crit_edge, label %if.then9

for.end.if.end10_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then9:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext false, ptr noundef nonnull @.str.41) #17
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %for.end.if.end10_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %has_ib_port.1)
  %tobool11.not = icmp eq i32 %has_ib_port.1, 0
  br i1 %tobool11.not, label %if.end10.lor.lhs.false_crit_edge, label %if.end10.if.then14_crit_edge

if.end10.if.then14_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then14

if.end10.lor.lhs.false_crit_edge:                 ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end10.lor.lhs.false_crit_edge, %entry.lor.lhs.false_crit_edge
  %flags = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %flags, align 8
  %and = and i64 %6, 1073741824
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool13.not = icmp eq i64 %and, 0
  br i1 %tobool13.not, label %lor.lhs.false.if.end16_crit_edge, label %lor.lhs.false.if.then14_crit_edge

lor.lhs.false.if.then14_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then14

lor.lhs.false.if.end16_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

if.then14:                                        ; preds = %lor.lhs.false.if.then14_crit_edge, %if.end10.if.then14_crit_edge
  %call15 = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext false, ptr noundef nonnull @.str.42) #17
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %lor.lhs.false.if.end16_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx4_bond(ptr noundef %dev) #1 align 64 {
entry:
  %slaves_port1.i = alloca %struct.mlx4_slaves_pport, align 4
  %slaves_port2.i = alloca %struct.mlx4_slaves_pport, align 4
  %slaves_port_1_2.i = alloca [4 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %bond_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 39
  tail call void @mutex_lock_nested(ptr noundef %bond_mutex, i32 noundef 0) #17
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %2 = and i32 %1, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.then, label %entry.do.body26_crit_edge

entry.do.body26_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body26

if.then:                                          ; preds = %entry
  %call2 = tail call i32 @mlx4_do_bond(ptr noundef %dev, i1 noundef zeroext true) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.critedge, label %do.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %3 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev, align 8
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.16, i32 noundef %call2) #20
  br label %if.end22

land.lhs.true.critedge:                           ; preds = %if.then
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i, align 4
  %and.i54 = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i54)
  %tobool8.not = icmp eq i32 %and.i54, 0
  br i1 %tobool8.not, label %land.lhs.true.critedge.do.body26_crit_edge, label %if.then9

land.lhs.true.critedge.do.body26_crit_edge:       ; preds = %land.lhs.true.critedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body26

if.then9:                                         ; preds = %land.lhs.true.critedge
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %slaves_port1.i) #17
  %9 = call ptr @memset(ptr %slaves_port1.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %slaves_port2.i) #17
  %10 = call ptr @memset(ptr %slaves_port2.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %slaves_port_1_2.i) #17
  %11 = call ptr @memset(ptr %slaves_port_1_2.i, i32 255, i32 16)
  call void @mlx4_phys_to_slaves_pport(ptr nonnull sret(%struct.mlx4_slaves_pport) align 4 %slaves_port1.i, ptr noundef %dev, i32 noundef 1) #17
  call void @mlx4_phys_to_slaves_pport(ptr nonnull sret(%struct.mlx4_slaves_pport) align 4 %slaves_port2.i, ptr noundef %dev, i32 noundef 2) #17
  %12 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev, align 8
  %num_vfs.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %num_vfs.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_vfs.i, align 4
  %add.i = add i32 %15, 1
  %call.i.i = call i32 @__bitmap_and(ptr noundef nonnull %slaves_port_1_2.i, ptr noundef nonnull %slaves_port1.i, ptr noundef nonnull %slaves_port2.i, i32 noundef %add.i) #17
  %16 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev, align 8
  %num_vfs7.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %num_vfs7.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_vfs7.i, align 4
  %add8.i = add i32 %19, 1
  %call4.i.i = call i32 @__bitmap_weight(ptr noundef nonnull %slaves_port_1_2.i, i32 noundef %add8.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call4.i.i)
  %cmp.i = icmp sgt i32 %call4.i.i, 1
  %20 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev, align 8
  br i1 %cmp.i, label %do.end.i, label %if.end.i178.i

do.end.i:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %dev11.i = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev11.i, ptr noundef nonnull @.str.43) #20
  br label %do.end15

if.end.i178.i:                                    ; preds = %if.then9
  %num_vfs15.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %21, i32 0, i32 3
  %24 = ptrtoint ptr %num_vfs15.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %num_vfs15.i, align 4
  %add16.i = add i32 %25, 1
  %call4.i177.i = call i32 @__bitmap_weight(ptr noundef nonnull %slaves_port1.i, i32 noundef %add16.i) #17
  %26 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev, align 8
  %num_vfs21.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %num_vfs21.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_vfs21.i, align 4
  %add22.i = add i32 %29, 1
  %call4.i279.i = call i32 @__bitmap_weight(ptr noundef nonnull %slaves_port2.i, i32 noundef %add22.i) #17
  %add24.i = add i32 %call4.i177.i, -2
  %sub.i = add i32 %add24.i, %call4.i279.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %sub.i)
  %cmp25.i = icmp sgt i32 %sub.i, 63
  br i1 %cmp25.i, label %do.end29.i, label %if.end33.i

do.end29.i:                                       ; preds = %if.end.i178.i
  call void @__sanitizer_cov_trace_pc() #19
  %30 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dev, align 8
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %dev32.i = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev32.i, ptr noundef nonnull @.str.46, i32 noundef %sub.i, i32 noundef 63) #20
  br label %do.end15

if.end33.i:                                       ; preds = %if.end.i178.i
  %steering_mode.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 50
  %34 = ptrtoint ptr %steering_mode.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %steering_mode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %35)
  %cmp34.not.i = icmp eq i32 %35, 2
  br i1 %cmp34.not.i, label %if.end42.i, label %do.end38.i

do.end38.i:                                       ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #19
  %36 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev, align 8
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 4
  %dev41.i = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev41.i, ptr noundef nonnull @.str.49) #20
  br label %do.end15

if.end42.i:                                       ; preds = %if.end33.i
  %call43.i = call i32 @mlx4_bond_mac_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43.i)
  %tobool.not.i = icmp eq i32 %call43.i, 0
  br i1 %tobool.not.i, label %if.end45.i, label %if.end42.i.do.end15_crit_edge

if.end42.i.do.end15_crit_edge:                    ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end15

if.end45.i:                                       ; preds = %if.end42.i
  %call46.i = call i32 @mlx4_bond_vlan_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46.i)
  %tobool47.not.i = icmp eq i32 %call46.i, 0
  br i1 %tobool47.not.i, label %if.end49.i, label %if.end45.i.err1.i_crit_edge

if.end45.i.err1.i_crit_edge:                      ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err1.i

if.end49.i:                                       ; preds = %if.end45.i
  %call50.i = call i32 @mlx4_bond_fs_rules(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50.i)
  %tobool51.not.i = icmp eq i32 %call50.i, 0
  br i1 %tobool51.not.i, label %mlx4_mf_bond.exit, label %err2.i

err2.i:                                           ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #19
  %call54.i = call i32 @mlx4_unbond_vlan_table(ptr noundef %dev) #17
  br label %err1.i

err1.i:                                           ; preds = %err2.i, %if.end45.i.err1.i_crit_edge
  %err.0.i = phi i32 [ %call46.i, %if.end45.i.err1.i_crit_edge ], [ %call50.i, %err2.i ]
  %call55.i = call i32 @mlx4_unbond_mac_table(ptr noundef %dev) #17
  br label %do.end15

mlx4_mf_bond.exit:                                ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %slaves_port_1_2.i) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %slaves_port2.i) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %slaves_port1.i) #17
  br label %do.body26

do.end15:                                         ; preds = %err1.i, %if.end42.i.do.end15_crit_edge, %do.end38.i, %do.end29.i, %do.end.i
  %retval.0.i.ph = phi i32 [ %call43.i, %if.end42.i.do.end15_crit_edge ], [ %err.0.i, %err1.i ], [ -22, %do.end38.i ], [ -22, %do.end29.i ], [ -22, %do.end.i ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %slaves_port_1_2.i) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %slaves_port2.i) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %slaves_port1.i) #17
  %40 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %dev, align 8
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %41, align 4
  %dev18 = getelementptr inbounds %struct.pci_dev, ptr %43, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev18, ptr noundef nonnull @.str.19) #20
  %call19 = call i32 @mlx4_do_bond(ptr noundef %dev, i1 noundef zeroext false) #17
  br label %if.end22

if.end22:                                         ; preds = %do.end15, %do.end
  %ret.0 = phi i32 [ %retval.0.i.ph, %do.end15 ], [ %call2, %do.end ]
  call void @mutex_unlock(ptr noundef %bond_mutex) #17
  br label %if.end38

do.body26:                                        ; preds = %mlx4_mf_bond.exit, %land.lhs.true.critedge.do.body26_crit_edge, %entry.do.body26_crit_edge
  call void @mutex_unlock(ptr noundef %bond_mutex) #17
  %44 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool27.not = icmp eq i32 %44, 0
  br i1 %tobool27.not, label %do.body26.if.end38_crit_edge, label %do.end31

do.body26.if.end38_crit_edge:                     ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

do.end31:                                         ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #19
  %45 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dev, align 8
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %46, align 4
  %dev34 = getelementptr inbounds %struct.pci_dev, ptr %48, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev34, ptr noundef nonnull @.str.22) #20
  br label %if.end38

if.end38:                                         ; preds = %do.end31, %do.body26.if.end38_crit_edge, %if.end22
  %ret.060 = phi i32 [ 0, %do.body26.if.end38_crit_edge ], [ 0, %do.end31 ], [ %ret.0, %if.end22 ]
  ret i32 %ret.060
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_do_bond(ptr noundef, i1 noundef zeroext) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #0

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_printk(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx4_unbond(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %bond_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 39
  tail call void @mutex_lock_nested(ptr noundef %bond_mutex, i32 noundef 0) #17
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %2 = and i32 %1, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.end20.thread, label %if.then

if.end20.thread:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mutex_unlock(ptr noundef %bond_mutex) #17
  br label %do.body24

if.then:                                          ; preds = %entry
  %call2 = tail call i32 @mlx4_do_bond(ptr noundef %dev, i1 noundef zeroext false) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.then.if.end_crit_edge, label %do.end

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %3 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev, align 8
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.25, i32 noundef %call2) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then.if.end_crit_edge
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i, align 4
  %and.i51 = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i51)
  %tobool7.not = icmp eq i32 %and.i51, 0
  br i1 %tobool7.not, label %if.end.if.end20_crit_edge, label %if.then8

if.end.if.end20_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end20

if.then8:                                         ; preds = %if.end
  %call.i = tail call i32 @mlx4_unbond_fs_rules(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then8.if.end.i_crit_edge, label %do.end.i

if.then8.if.end.i_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

do.end.i:                                         ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #19
  %9 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %12, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1.i, ptr noundef nonnull @.str.51, i32 noundef %call.i) #20
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %if.then8.if.end.i_crit_edge
  %call2.i = tail call i32 @mlx4_unbond_mac_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %if.end.i.if.end11.i_crit_edge, label %do.end7.i

if.end.i.if.end11.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11.i

do.end7.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %13 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %dev10.i = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev10.i, ptr noundef nonnull @.str.54, i32 noundef %call2.i) #20
  br label %if.end11.i

if.end11.i:                                       ; preds = %do.end7.i, %if.end.i.if.end11.i_crit_edge
  %ret.0.i = phi i32 [ %call2.i, %do.end7.i ], [ %call.i, %if.end.i.if.end11.i_crit_edge ]
  %call12.i = tail call i32 @mlx4_unbond_vlan_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %if.end10, label %if.end10.thread54

if.end10.thread54:                                ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #19
  %17 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev, align 8
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 4
  %dev20.i = getelementptr inbounds %struct.pci_dev, ptr %20, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev20.i, ptr noundef nonnull @.str.57, i32 noundef %call12.i) #20
  br label %if.end20.thread62

if.end10:                                         ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool11.not = icmp eq i32 %ret.0.i, 0
  br i1 %tobool11.not, label %if.end10.if.end20_crit_edge, label %if.end10.if.end20.thread62_crit_edge

if.end10.if.end20.thread62_crit_edge:             ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end20.thread62

if.end10.if.end20_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end20

if.end20.thread62:                                ; preds = %if.end10.if.end20.thread62_crit_edge, %if.end10.thread54
  %ret2.057 = phi i32 [ %call12.i, %if.end10.thread54 ], [ %ret.0.i, %if.end10.if.end20.thread62_crit_edge ]
  %21 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev, align 8
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %dev18 = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev18, ptr noundef nonnull @.str.28, i32 noundef %ret2.057) #20
  tail call void @mutex_unlock(ptr noundef %bond_mutex) #17
  br label %if.end36

if.end20:                                         ; preds = %if.end10.if.end20_crit_edge, %if.end.if.end20_crit_edge
  tail call void @mutex_unlock(ptr noundef %bond_mutex) #17
  br i1 %tobool3.not, label %if.end20.do.body24_crit_edge, label %if.end20.if.end36_crit_edge

if.end20.if.end36_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end36

if.end20.do.body24_crit_edge:                     ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body24

do.body24:                                        ; preds = %if.end20.do.body24_crit_edge, %if.end20.thread
  %25 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool25.not = icmp eq i32 %25, 0
  br i1 %tobool25.not, label %do.body24.if.end36_crit_edge, label %do.end29

do.body24.if.end36_crit_edge:                     ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end36

do.end29:                                         ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #19
  %26 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 4
  %dev32 = getelementptr inbounds %struct.pci_dev, ptr %29, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev32, ptr noundef nonnull @.str.32) #20
  br label %if.end36

if.end36:                                         ; preds = %do.end29, %do.body24.if.end36_crit_edge, %if.end20.if.end36_crit_edge, %if.end20.thread62
  %ret.160 = phi i32 [ 0, %do.body24.if.end36_crit_edge ], [ 0, %do.end29 ], [ %call2, %if.end20.if.end36_crit_edge ], [ %ret2.057, %if.end20.thread62 ]
  ret i32 %ret.160
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx4_port_map_set(ptr noundef %dev, ptr nocapture noundef readonly %v2p) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %port22 = getelementptr inbounds %struct.mlx4_port_map, ptr %v2p, i32 0, i32 1
  %0 = ptrtoint ptr %port22 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %port22, align 1
  %flags2 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 61
  %2 = ptrtoint ptr %flags2 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %flags2, align 8
  %and = and i64 %3, 2097152
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %v2p to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %v2p, align 1
  %bond_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 39
  tail call void @mutex_lock_nested(ptr noundef %bond_mutex, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp = icmp eq i8 %5, 0
  br i1 %cmp, label %if.then4, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %v2p5 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 38
  %6 = ptrtoint ptr %v2p5 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %v2p5, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge
  %port1.0 = phi i8 [ %7, %if.then4 ], [ %5, %if.end.if.end7_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp9 = icmp eq i8 %1, 0
  br i1 %cmp9, label %if.then11, label %if.end7.if.end14_crit_edge

if.end7.if.end14_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

if.then11:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  %port213 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 38, i32 1
  %8 = ptrtoint ptr %port213 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %port213, align 1
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %if.end7.if.end14_crit_edge
  %port2.0 = phi i8 [ %9, %if.then11 ], [ %1, %if.end7.if.end14_crit_edge ]
  %conv15 = zext i8 %port1.0 to i32
  %10 = add i8 %port1.0, -3
  call void @__sanitizer_cov_trace_const_cmp1(i8 -2, i8 %10)
  %11 = icmp ult i8 %10, -2
  br i1 %11, label %if.end14.if.end79_crit_edge, label %lor.lhs.false21

if.end14.if.end79_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end79

lor.lhs.false21:                                  ; preds = %if.end14
  %conv22 = zext i8 %port2.0 to i32
  %12 = add i8 %port2.0, -3
  call void @__sanitizer_cov_trace_const_cmp1(i8 -2, i8 %12)
  %13 = icmp ult i8 %12, -2
  br i1 %13, label %lor.lhs.false21.if.end79_crit_edge, label %lor.lhs.false29

lor.lhs.false21.if.end79_crit_edge:               ; preds = %lor.lhs.false21
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end79

lor.lhs.false29:                                  ; preds = %lor.lhs.false21
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %port1.0)
  %cmp31 = icmp eq i8 %port1.0, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %port2.0)
  %cmp34 = icmp eq i8 %port2.0, 1
  %or.cond113 = select i1 %cmp31, i1 %cmp34, i1 false
  br i1 %or.cond113, label %lor.lhs.false29.if.end79_crit_edge, label %if.else

lor.lhs.false29.if.end79_crit_edge:               ; preds = %lor.lhs.false29
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end79

if.else:                                          ; preds = %lor.lhs.false29
  %v2p38 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 38
  %14 = ptrtoint ptr %v2p38 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %v2p38, align 8
  call void @__sanitizer_cov_trace_cmp1(i8 %port1.0, i8 %15)
  %cmp41 = icmp eq i8 %port1.0, %15
  br i1 %cmp41, label %land.lhs.true43, label %if.else.if.else51_crit_edge

if.else.if.else51_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else51

land.lhs.true43:                                  ; preds = %if.else
  %port246 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 38, i32 1
  %16 = ptrtoint ptr %port246 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %port246, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %port2.0, i8 %17)
  %cmp48 = icmp eq i8 %port2.0, %17
  br i1 %cmp48, label %land.lhs.true43.if.end79_crit_edge, label %land.lhs.true43.if.else51_crit_edge

land.lhs.true43.if.else51_crit_edge:              ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else51

land.lhs.true43.if.end79_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end79

if.else51:                                        ; preds = %land.lhs.true43.if.else51_crit_edge, %if.else.if.else51_crit_edge
  %call54 = tail call i32 @mlx4_virt2phy_port_map(ptr noundef %dev, i32 noundef %conv15, i32 noundef %conv22) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %do.body, label %do.end73

do.body:                                          ; preds = %if.else51
  %18 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool57.not = icmp eq i32 %18, 0
  br i1 %tobool57.not, label %do.body.do.end65_crit_edge, label %do.end

do.body.do.end65_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end65

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %19 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dev, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %dev60 = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev60, ptr noundef nonnull @.str.34, i32 noundef %conv15, i32 noundef %conv22) #20
  br label %do.end65

do.end65:                                         ; preds = %do.end, %do.body.do.end65_crit_edge
  %23 = ptrtoint ptr %v2p38 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %port1.0, ptr %v2p38, align 8
  %port269 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 38, i32 1
  %24 = ptrtoint ptr %port269 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %port2.0, ptr %port269, align 1
  br label %if.end79

do.end73:                                         ; preds = %if.else51
  call void @__sanitizer_cov_trace_pc() #19
  %25 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dev, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %dev76 = getelementptr inbounds %struct.pci_dev, ptr %28, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev76, ptr noundef nonnull @.str.37, i32 noundef %call54) #20
  br label %if.end79

if.end79:                                         ; preds = %do.end73, %do.end65, %land.lhs.true43.if.end79_crit_edge, %lor.lhs.false29.if.end79_crit_edge, %lor.lhs.false21.if.end79_crit_edge, %if.end14.if.end79_crit_edge
  %err.0 = phi i32 [ %call54, %do.end73 ], [ 0, %do.end65 ], [ -22, %lor.lhs.false29.if.end79_crit_edge ], [ -22, %lor.lhs.false21.if.end79_crit_edge ], [ -22, %if.end14.if.end79_crit_edge ], [ 0, %land.lhs.true43.if.end79_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %bond_mutex) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end79, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %if.end79 ], [ -95, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_virt2phy_port_map(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @mlx4_read_clock(ptr nocapture noundef readonly %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %clock_mapping = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 34
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %i.021 = phi i32 [ 0, %entry ], [ %inc, %for.body.for.body_crit_edge ]
  %0 = ptrtoint ptr %clock_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clock_mapping, align 4
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #17, !srcloc !1169
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !1170
  %3 = ptrtoint ptr %clock_mapping to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %clock_mapping, align 4
  %add.ptr = getelementptr i8, ptr %4, i32 4
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #17, !srcloc !1169
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !1171
  %6 = ptrtoint ptr %clock_mapping to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %clock_mapping, align 4
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %7) #17, !srcloc !1169
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !1172
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %8)
  %cmp15 = icmp eq i32 %2, %8
  %inc = add nuw nsw i32 %i.021, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %inc)
  %exitcond.not = icmp eq i32 %inc, 10
  %or.cond = select i1 %cmp15, i1 true, i1 %exitcond.not
  br i1 %or.cond, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %conv = zext i32 %2 to i64
  %shl = shl nuw i64 %conv, 32
  %conv16 = zext i32 %5 to i64
  %or = or i64 %shl, %conv16
  ret i64 %or
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx4_get_internal_clock_params(ptr nocapture noundef readonly %dev, ptr noundef writeonly %params) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %map_clock_to_user = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 99
  %2 = ptrtoint ptr %map_clock_to_user to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %map_clock_to_user, align 4, !range !1168
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool2.not = icmp eq i8 %3, 0
  br i1 %tobool2.not, label %do.body, label %if.end11

do.body:                                          ; preds = %if.end
  %4 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool4.not = icmp eq i32 %4, 0
  br i1 %tobool4.not, label %do.body.cleanup_crit_edge, label %do.end

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %5 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %dev7 = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev7, ptr noundef nonnull @.str.39) #20
  br label %cleanup

if.end11:                                         ; preds = %if.end
  %tobool12.not = icmp eq ptr %params, null
  br i1 %tobool12.not, label %if.end11.cleanup_crit_edge, label %if.end14

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end14:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  %clock_bar = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 8, i32 11
  %9 = ptrtoint ptr %clock_bar to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %clock_bar, align 1
  %bar = getelementptr inbounds %struct.mlx4_clock_params, ptr %params, i32 0, i32 1
  %11 = ptrtoint ptr %bar to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %bar, align 8
  %clock_offset = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 8, i32 3
  %12 = ptrtoint ptr %clock_offset to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %clock_offset, align 8
  %14 = ptrtoint ptr %params to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %params, align 8
  %size = getelementptr inbounds %struct.mlx4_clock_params, ptr %params, i32 0, i32 2
  %15 = ptrtoint ptr %size to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 8, ptr %size, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end11.cleanup_crit_edge, %do.end, %do.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end14 ], [ -95, %entry.cleanup_crit_edge ], [ -95, %do.end ], [ -95, %do.body.cleanup_crit_edge ], [ -22, %if.end11.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__mlx4_counter_alloc(ptr noundef %dev, ptr nocapture noundef writeonly %idx) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %flags, align 8
  %and = and i64 %1, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %counters_bitmap = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 20
  %call1 = tail call i32 @mlx4_bitmap_alloc(ptr noundef %counters_bitmap) #17
  %2 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %call1, ptr %idx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call1)
  %cmp = icmp eq i32 %call1, -1
  br i1 %cmp, label %if.then2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %max_counters = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 79
  %3 = ptrtoint ptr %max_counters to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_counters, align 4
  %sub = add i32 %4, -1
  %5 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %sub, ptr %idx, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then2, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -28, %if.then2 ], [ -2, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_bitmap_alloc(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx4_counter_alloc(ptr noundef %dev, ptr nocapture noundef writeonly %idx, i8 noundef zeroext %usage) #1 align 64 {
entry:
  %out_param = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %out_param) #17
  %0 = ptrtoint ptr %out_param to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %out_param, align 8, !annotation !1173
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.end30, label %if.then

if.then:                                          ; preds = %entry
  %and = zext i8 %usage to i32
  %shl = shl i32 %and, 30
  %or = or i32 %shl, 9
  %call.i = call i32 @__mlx4_cmd(ptr noundef %dev, i64 noundef 0, ptr noundef nonnull %out_param, i32 noundef 1, i32 noundef %or, i8 noundef zeroext 0, i16 noundef zeroext 3840, i32 noundef 60000, i32 noundef 0) #17
  %3 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.622)
  switch i32 %call.i, label %if.then.cleanup_crit_edge [
    i32 0, label %if.end.thread
    i32 -28, label %do.end
  ], !prof !1174

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.thread:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %4 = ptrtoint ptr %out_param to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %out_param, align 8
  %conv.i = trunc i64 %5 to i32
  %6 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %conv.i, ptr %idx, align 4
  br label %cleanup

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 2608, i32 noundef 9, ptr noundef null) #17
  br label %cleanup

if.end30:                                         ; preds = %entry
  %flags.i40 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %7 = ptrtoint ptr %flags.i40 to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %flags.i40, align 8
  %and.i41 = and i64 %8, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i41)
  %tobool.not.i = icmp eq i64 %and.i41, 0
  br i1 %tobool.not.i, label %if.end30.cleanup_crit_edge, label %if.end.i

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i:                                         ; preds = %if.end30
  %counters_bitmap.i = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 20
  %call1.i = tail call i32 @mlx4_bitmap_alloc(ptr noundef %counters_bitmap.i) #17
  %9 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call1.i, ptr %idx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call1.i)
  %cmp.i = icmp eq i32 %call1.i, -1
  br i1 %cmp.i, label %if.then2.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %max_counters.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 79
  %10 = ptrtoint ptr %max_counters.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_counters.i, align 4
  %sub.i = add i32 %11, -1
  %12 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %sub.i, ptr %idx, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then2.i, %if.end.i.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %do.end, %if.end.thread, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -28, %if.then2.i ], [ -2, %if.end30.cleanup_crit_edge ], [ 0, %if.end.i.cleanup_crit_edge ], [ 0, %if.end.thread ], [ -22, %do.end ], [ %call.i, %if.then.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %out_param) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__mlx4_counter_free(ptr noundef %dev, i32 noundef %idx) local_unnamed_addr #1 align 64 {
entry:
  %out_param.addr.i.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %flags, align 8
  %and = and i64 %1, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %max_counters = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 79
  %2 = ptrtoint ptr %max_counters to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %max_counters, align 4
  %sub = add i32 %3, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %idx)
  %cmp = icmp eq i32 %sub, %idx
  br i1 %cmp, label %if.end.return_crit_edge, label %if.end3

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end3:                                          ; preds = %if.end
  %call.i = tail call ptr @mlx4_alloc_cmd_mailbox(ptr noundef %dev) #17
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end3.__mlx4_clear_if_stat.exit_crit_edge, label %if.end.i

if.end3.__mlx4_clear_if_stat.exit_crit_edge:      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mlx4_clear_if_stat.exit

if.end.i:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i = and i32 %idx, 255
  %or.i = or i32 %conv.i, -2147483648
  %dma.i = getelementptr inbounds %struct.mlx4_cmd_mailbox, ptr %call.i, i32 0, i32 1
  %4 = ptrtoint ptr %dma.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %dma.i, align 4
  %conv3.i = zext i32 %5 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %out_param.addr.i.i) #17
  %6 = ptrtoint ptr %out_param.addr.i.i to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %conv3.i, ptr %out_param.addr.i.i, align 8
  %call.i.i = call i32 @__mlx4_cmd(ptr noundef %dev, i64 noundef 0, ptr noundef nonnull %out_param.addr.i.i, i32 noundef 0, i32 noundef %or.i, i8 noundef zeroext 0, i16 noundef zeroext 84, i32 noundef 60000, i32 noundef 1) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %out_param.addr.i.i) #17
  call void @mlx4_free_cmd_mailbox(ptr noundef %dev, ptr noundef %call.i) #17
  br label %__mlx4_clear_if_stat.exit

__mlx4_clear_if_stat.exit:                        ; preds = %if.end.i, %if.end3.__mlx4_clear_if_stat.exit_crit_edge
  %counters_bitmap = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 20
  call void @mlx4_bitmap_free(ptr noundef %counters_bitmap, i32 noundef %idx, i32 noundef 1) #17
  br label %return

return:                                           ; preds = %__mlx4_clear_if_stat.exit, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_bitmap_free(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx4_counter_free(ptr noundef %dev, i32 noundef %idx) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i = zext i32 %idx to i64
  %call.i = tail call i32 @__mlx4_cmd(ptr noundef %dev, i64 noundef %conv.i, ptr noundef null, i32 noundef 0, i32 noundef 9, i8 noundef zeroext 0, i16 noundef zeroext 3841, i32 noundef 60000, i32 noundef 0) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mlx4_counter_free(ptr noundef %dev, i32 noundef %idx)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @mlx4_get_default_counter_index(ptr nocapture noundef readonly %dev, i32 noundef %port) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sub = add i32 %port, -1
  %arrayidx = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 21, i32 %sub
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  ret i32 %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @mlx4_set_admin_guid(ptr nocapture noundef readonly %dev, i64 noundef %guid, i32 noundef %entry1, i32 noundef %port) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %vf_admin = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 10, i32 3, i32 1
  %0 = ptrtoint ptr %vf_admin to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf_admin, align 4
  %arrayidx = getelementptr %struct.mlx4_vf_admin_state, ptr %1, i32 %entry1
  %arrayidx2 = getelementptr [3 x %struct.mlx4_vport_state], ptr %arrayidx, i32 0, i32 %port
  %guid3 = getelementptr inbounds %struct.mlx4_vport_state, ptr %arrayidx2, i32 0, i32 8
  %2 = ptrtoint ptr %guid3 to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %guid, ptr %guid3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i64 @mlx4_get_admin_guid(ptr nocapture noundef readonly %dev, i32 noundef %entry1, i32 noundef %port) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %vf_admin = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 10, i32 3, i32 1
  %0 = ptrtoint ptr %vf_admin to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vf_admin, align 4
  %arrayidx = getelementptr %struct.mlx4_vf_admin_state, ptr %1, i32 %entry1
  %arrayidx2 = getelementptr [3 x %struct.mlx4_vport_state], ptr %arrayidx, i32 0, i32 %port
  %guid = getelementptr inbounds %struct.mlx4_vport_state, ptr %arrayidx2, i32 0, i32 8
  %2 = ptrtoint ptr %guid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %guid, align 8
  ret i64 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx4_set_random_admin_guid(ptr nocapture noundef readonly %dev, i32 noundef %entry1, i32 noundef %port) local_unnamed_addr #1 align 64 {
entry:
  %guid = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %guid) #17
  %0 = ptrtoint ptr %guid to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %guid, align 8, !annotation !1173
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %entry1)
  %cmp = icmp eq i32 %entry1, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  call void @get_random_bytes(ptr noundef nonnull %guid, i32 noundef 8) #17
  %1 = ptrtoint ptr %guid to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %guid, align 8
  %and = and i64 %2, -216172782113783809
  %or = or i64 %and, 144115188075855872
  %vf_admin = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 10, i32 3, i32 1
  %3 = ptrtoint ptr %vf_admin to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %vf_admin, align 4
  %arrayidx = getelementptr %struct.mlx4_vf_admin_state, ptr %4, i32 %entry1
  %arrayidx2 = getelementptr [3 x %struct.mlx4_vport_state], ptr %arrayidx, i32 0, i32 %port
  %guid3 = getelementptr inbounds %struct.mlx4_vport_state, ptr %arrayidx2, i32 0, i32 8
  %5 = ptrtoint ptr %guid3 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %or, ptr %guid3, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %guid) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @get_random_bytes(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx4_restart_one(ptr noundef %pdev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @mlx4_unload_one(ptr noundef %pdev) #17
  %call = tail call fastcc i32 @mlx4_restart_one_up(ptr noundef %pdev, i1 noundef zeroext false, ptr noundef null)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx4_restart_one_up(ptr noundef %pdev, i1 noundef zeroext %reload, ptr noundef %devlink) unnamed_addr #1 align 64 {
entry:
  %saved_value.i = alloca %union.devlink_param_value, align 4
  %nvfs = alloca [3 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev1 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %nvfs) #17
  %pci_dev_data3 = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %pci_dev_data3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pci_dev_data3, align 4
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %3, align 8
  %num_vfs = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %num_vfs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_vfs, align 4
  %nvfs6 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %7, i32 0, i32 2
  %10 = call ptr @memcpy(ptr %nvfs, ptr %nvfs6, i32 12)
  br i1 %reload, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  %call.i = tail call ptr @devlink_priv(ptr noundef %devlink) #17
  %11 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %call.i, align 8
  %crdump2.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %12, i32 0, i32 14
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %saved_value.i) #17
  %13 = call ptr @memset(ptr %saved_value.i, i32 255, i32 32)
  %call3.i = call i32 @devlink_param_driverinit_value_get(ptr noundef %devlink, i32 noundef 0, ptr noundef nonnull %saved_value.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.then.if.end.i_crit_edge

if.then.if.end.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mlx4_internal_err_reset to i32))
  %14 = load i32, ptr @mlx4_internal_err_reset, align 4
  %15 = ptrtoint ptr %saved_value.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %saved_value.i, align 4, !range !1168
  %17 = zext i8 %16 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %17)
  %cmp.not.i = icmp eq i32 %14, %17
  br i1 %cmp.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @mlx4_internal_err_reset to i32))
  store i32 %17, ptr @mlx4_internal_err_reset, align 4
  call void @devlink_param_value_changed(ptr noundef %devlink, i32 noundef 0) #17
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %land.lhs.true.i.if.end.i_crit_edge, %if.then.if.end.i_crit_edge
  %call8.i = call i32 @devlink_param_driverinit_value_get(ptr noundef %devlink, i32 noundef 1, ptr noundef nonnull %saved_value.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.then10.i, label %if.end.i.if.end36.i_crit_edge

if.end.i.if.end36.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end36.i

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %18 = ptrtoint ptr %saved_value.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %saved_value.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %19)
  %cmp.i.i = icmp ugt i32 %19, 1
  %sub.i74.i = add i32 %19, -1
  %20 = call i32 @llvm.ctlz.i32(i32 %sub.i74.i, i1 true) #17, !range !1175
  %add.i.i = sub nuw nsw i32 32, %20
  %cond35.i = select i1 %cmp.i.i, i32 %add.i.i, i32 0
  store i32 %cond35.i, ptr @log_num_mac, align 4
  br label %if.end36.i

if.end36.i:                                       ; preds = %if.then10.i, %if.end.i.if.end36.i_crit_edge
  %call37.i = call i32 @devlink_param_driverinit_value_get(ptr noundef %devlink, i32 noundef 17, ptr noundef nonnull %saved_value.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37.i)
  %tobool38.not.i = icmp eq i32 %call37.i, 0
  br i1 %tobool38.not.i, label %if.then39.i, label %if.end36.i.if.end41.i_crit_edge

if.end36.i.if.end41.i_crit_edge:                  ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end41.i

if.then39.i:                                      ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #19
  %21 = ptrtoint ptr %saved_value.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %saved_value.i, align 4, !range !1168
  store i8 %22, ptr @enable_64b_cqe_eqe, align 1
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.then39.i, %if.end36.i.if.end41.i_crit_edge
  %call42.i = call i32 @devlink_param_driverinit_value_get(ptr noundef %devlink, i32 noundef 18, ptr noundef nonnull %saved_value.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i)
  %tobool43.not.i = icmp eq i32 %call42.i, 0
  br i1 %tobool43.not.i, label %if.then44.i, label %if.end41.i.if.end47.i_crit_edge

if.end41.i.if.end47.i_crit_edge:                  ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end47.i

if.then44.i:                                      ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #19
  %23 = ptrtoint ptr %saved_value.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %saved_value.i, align 4, !range !1168
  store i8 %24, ptr @enable_4k_uar, align 1
  br label %if.end47.i

if.end47.i:                                       ; preds = %if.then44.i, %if.end41.i.if.end47.i_crit_edge
  %call48.i = call i32 @devlink_param_driverinit_value_get(ptr noundef %devlink, i32 noundef 3, ptr noundef nonnull %saved_value.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48.i)
  %tobool49.not.i = icmp eq i32 %call48.i, 0
  br i1 %tobool49.not.i, label %land.lhs.true50.i, label %if.end47.i.mlx4_devlink_param_load_driverinit_values.exit_crit_edge

if.end47.i.mlx4_devlink_param_load_driverinit_values.exit_crit_edge: ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_devlink_param_load_driverinit_values.exit

land.lhs.true50.i:                                ; preds = %if.end47.i
  %25 = ptrtoint ptr %crdump2.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %crdump2.i, align 4, !range !1168
  %27 = ptrtoint ptr %saved_value.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %saved_value.i, align 4, !range !1168
  call void @__sanitizer_cov_trace_cmp1(i8 %26, i8 %28)
  %cmp55.not.i = icmp eq i8 %26, %28
  br i1 %cmp55.not.i, label %land.lhs.true50.i.mlx4_devlink_param_load_driverinit_values.exit_crit_edge, label %if.then57.i

land.lhs.true50.i.mlx4_devlink_param_load_driverinit_values.exit_crit_edge: ; preds = %land.lhs.true50.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_devlink_param_load_driverinit_values.exit

if.then57.i:                                      ; preds = %land.lhs.true50.i
  call void @__sanitizer_cov_trace_pc() #19
  %29 = ptrtoint ptr %crdump2.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %28, ptr %crdump2.i, align 4
  call void @devlink_param_value_changed(ptr noundef %devlink, i32 noundef 3) #17
  br label %mlx4_devlink_param_load_driverinit_values.exit

mlx4_devlink_param_load_driverinit_values.exit:   ; preds = %if.then57.i, %land.lhs.true50.i.mlx4_devlink_param_load_driverinit_values.exit_crit_edge, %if.end47.i.mlx4_devlink_param_load_driverinit_values.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %saved_value.i) #17
  br label %if.end

if.end:                                           ; preds = %mlx4_devlink_param_load_driverinit_values.exit, %entry.if.end_crit_edge
  %call9 = call fastcc i32 @mlx4_load_one(ptr noundef %pdev, i32 noundef %5, i32 noundef %9, ptr noundef nonnull %nvfs, ptr noundef %3, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  %30 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %3, align 8
  br i1 %tobool10.not, label %if.end16, label %do.end

do.end:                                           ; preds = %if.end
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %dev14 = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 3
  %34 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %35, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.end.pci_name.exit_crit_edge

do.end.pci_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %pci_name.exit

if.end.i.i:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %36 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev.i, align 4
  br label %pci_name.exit

pci_name.exit:                                    ; preds = %if.end.i.i, %do.end.pci_name.exit_crit_edge
  %retval.0.i.i = phi ptr [ %37, %if.end.i.i ], [ %35, %do.end.pci_name.exit_crit_edge ]
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev14, ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.64, ptr noundef %retval.0.i.i, i32 noundef %call9) #20
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %curr_port_type = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %31, i32 0, i32 4
  %curr_port_poss_type = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %31, i32 0, i32 5
  call void @mlx4_stop_sense(ptr noundef %3) #17
  %port_mutex.i = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 28
  call void @mutex_lock_nested(ptr noundef %port_mutex.i, i32 noundef 0) #17
  %num_ports.i = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 2
  %38 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp14.i = icmp sgt i32 %39, 0
  br i1 %cmp14.i, label %if.end16.for.body.i_crit_edge, label %if.end16.restore_current_port_types.exit_crit_edge

if.end16.restore_current_port_types.exit_crit_edge: ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  br label %restore_current_port_types.exit

if.end16.for.body.i_crit_edge:                    ; preds = %if.end16
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end16.for.body.i_crit_edge
  %i.015.i = phi i32 [ %add.i52, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end16.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr i32, ptr %curr_port_poss_type, i32 %i.015.i
  %40 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx.i, align 4
  %add.i52 = add nuw nsw i32 %i.015.i, 1
  %arrayidx2.i = getelementptr %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 78, i32 %add.i52
  %42 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %arrayidx2.i, align 4
  %43 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %num_ports.i, align 4
  %cmp.i = icmp slt i32 %add.i52, %44
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.restore_current_port_types.exit_crit_edge

for.body.i.restore_current_port_types.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %restore_current_port_types.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

restore_current_port_types.exit:                  ; preds = %for.body.i.restore_current_port_types.exit_crit_edge, %if.end16.restore_current_port_types.exit_crit_edge
  %call3.i53 = call i32 @mlx4_change_port_types(ptr noundef %3, ptr noundef %curr_port_type) #17
  call void @mlx4_start_sense(ptr noundef %3) #17
  call void @mutex_unlock(ptr noundef %port_mutex.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i53)
  %tobool22.not = icmp eq i32 %call3.i53, 0
  br i1 %tobool22.not, label %restore_current_port_types.exit.cleanup_crit_edge, label %do.end26

restore_current_port_types.exit.cleanup_crit_edge: ; preds = %restore_current_port_types.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end26:                                         ; preds = %restore_current_port_types.exit
  call void @__sanitizer_cov_trace_pc() #19
  %45 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %3, align 8
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %46, align 4
  %dev29 = getelementptr inbounds %struct.pci_dev, ptr %48, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev29, ptr noundef nonnull @.str.66, i32 noundef %call3.i53) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end26, %restore_current_port_types.exit.cleanup_crit_edge, %pci_name.exit
  %retval.0 = phi i32 [ %call9, %pci_name.exit ], [ %call3.i53, %do.end26 ], [ 0, %restore_current_port_types.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %nvfs) #17
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @mlx4_cleanup() #8 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_unregister_driver(ptr noundef nonnull @mlx4_driver) #17
  %0 = load ptr, ptr @mlx4_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %0) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_unregister_driver(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #0

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_init() #8 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mlx4_verify_params() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.498, i32 noundef 917514, i32 noundef 1, ptr noundef nonnull @.str.599) #17
  store ptr %call1, ptr @mlx4_wq, align 4
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @__pci_register_driver(ptr noundef nonnull @mlx4_driver, ptr noundef null, ptr noundef nonnull @.str.1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp = icmp slt i32 %call5, 0
  br i1 %cmp, label %if.then6, label %if.end4.if.end7_crit_edge

if.end4.if.end7_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #19
  %0 = load ptr, ptr @mlx4_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %0) #17
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end4.if.end7_crit_edge
  %1 = tail call i32 @llvm.smin.i32(i32 %call5, i32 0)
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %1, %if.end7 ], [ -22, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__request_module(i1 noundef zeroext, ptr noundef, ...) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_phys_to_slaves_pport(ptr sret(%struct.mlx4_slaves_pport) align 4, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_bond_mac_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_bond_vlan_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_bond_fs_rules(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_unbond_vlan_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_unbond_mac_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_and(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_unbond_fs_rules(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__mlx4_cmd(ptr noundef, i64 noundef, ptr noundef, i32 noundef, i32 noundef, i8 noundef zeroext, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx4_alloc_cmd_mailbox(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_free_cmd_mailbox(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx4_unload_one(ptr noundef %pdev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev1 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  %removed = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %removed to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %removed, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 2
  %6 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp138 = icmp sgt i32 %7, 0
  br i1 %cmp138, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0139 = phi i32 [ %add, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %add = add nuw nsw i32 %i.0139, 1
  %arrayidx = getelementptr %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 73, i32 %add
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %3, align 8
  %arrayidx5 = getelementptr %struct.mlx4_dev_persistent, ptr %11, i32 0, i32 4, i32 %i.0139
  %12 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %9, ptr %arrayidx5, align 4
  %arrayidx8 = getelementptr %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 78, i32 %add
  %13 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx8, align 4
  %15 = load ptr, ptr %3, align 8
  %arrayidx10 = getelementptr %struct.mlx4_dev_persistent, ptr %15, i32 0, i32 5, i32 %i.0139
  %16 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %14, ptr %arrayidx10, align 4
  %17 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %num_ports, align 4
  %cmp = icmp slt i32 %add, %18
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %pci_dev_data11 = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 4
  %19 = ptrtoint ptr %pci_dev_data11 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pci_dev_data11, align 4
  tail call void @mlx4_stop_sense(ptr noundef %3) #17
  tail call void @mlx4_unregister_device(ptr noundef %3) #17
  %21 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp15.not140 = icmp slt i32 %22, 1
  br i1 %cmp15.not140, label %for.end.for.end21_crit_edge, label %for.end.for.body16_crit_edge

for.end.for.body16_crit_edge:                     ; preds = %for.end
  br label %for.body16

for.end.for.end21_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end21

for.body16:                                       ; preds = %mlx4_cleanup_port_info.exit.for.body16_crit_edge, %for.end.for.body16_crit_edge
  %p.0141 = phi i32 [ %inc20, %mlx4_cleanup_port_info.exit.for.body16_crit_edge ], [ 1, %for.end.for.body16_crit_edge ]
  %port.i = getelementptr %struct.mlx4_priv, ptr %3, i32 0, i32 26, i32 %p.0141, i32 1
  %23 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %port.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp.i = icmp slt i32 %24, 0
  br i1 %cmp.i, label %for.body16.mlx4_cleanup_port_info.exit_crit_edge, label %if.end.i

for.body16.mlx4_cleanup_port_info.exit_crit_edge: ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_cleanup_port_info.exit

if.end.i:                                         ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx17 = getelementptr %struct.mlx4_priv, ptr %3, i32 0, i32 26, i32 %p.0141
  %25 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx17, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  %port_attr.i = getelementptr %struct.mlx4_priv, ptr %3, i32 0, i32 26, i32 %p.0141, i32 3
  tail call void @device_remove_file(ptr noundef %dev1.i, ptr noundef %port_attr.i) #17
  %31 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx17, align 8
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 4
  %dev5.i = getelementptr inbounds %struct.pci_dev, ptr %36, i32 0, i32 44
  %port_mtu_attr.i = getelementptr %struct.mlx4_priv, ptr %3, i32 0, i32 26, i32 %p.0141, i32 6
  tail call void @device_remove_file(ptr noundef %dev5.i, ptr noundef %port_mtu_attr.i) #17
  %devlink_port.i = getelementptr %struct.mlx4_priv, ptr %3, i32 0, i32 26, i32 %p.0141, i32 12
  tail call void @devlink_port_unregister(ptr noundef %devlink_port.i) #17
  %rmap.i = getelementptr %struct.mlx4_priv, ptr %3, i32 0, i32 26, i32 %p.0141, i32 11
  %37 = ptrtoint ptr %rmap.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %rmap.i, align 4
  tail call void @free_irq_cpu_rmap(ptr noundef %38) #17
  %39 = ptrtoint ptr %rmap.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %rmap.i, align 4
  br label %mlx4_cleanup_port_info.exit

mlx4_cleanup_port_info.exit:                      ; preds = %if.end.i, %for.body16.mlx4_cleanup_port_info.exit_crit_edge
  %call18 = tail call i32 @mlx4_CLOSE_PORT(ptr noundef %3, i32 noundef %p.0141) #17
  %inc20 = add i32 %p.0141, 1
  %40 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %num_ports, align 4
  %cmp15.not = icmp sgt i32 %inc20, %41
  br i1 %cmp15.not, label %mlx4_cleanup_port_info.exit.for.end21_crit_edge, label %mlx4_cleanup_port_info.exit.for.body16_crit_edge

mlx4_cleanup_port_info.exit.for.body16_crit_edge: ; preds = %mlx4_cleanup_port_info.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body16

mlx4_cleanup_port_info.exit.for.end21_crit_edge:  ; preds = %mlx4_cleanup_port_info.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end21

for.end21:                                        ; preds = %mlx4_cleanup_port_info.exit.for.end21_crit_edge, %for.end.for.end21_crit_edge
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 1
  %42 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool23.not = icmp eq i32 %and.i, 0
  br i1 %tobool23.not, label %for.end21.if.end25_crit_edge, label %if.then24

for.end21.if.end25_crit_edge:                     ; preds = %for.end21
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25

if.then24:                                        ; preds = %for.end21
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mlx4_free_resource_tracker(ptr noundef %3, i32 noundef 1) #17
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %for.end21.if.end25_crit_edge
  %44 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp10.i = icmp sgt i32 %45, 0
  br i1 %cmp10.i, label %if.end25.for.body.i_crit_edge, label %if.end25.mlx4_cleanup_default_counters.exit_crit_edge

if.end25.mlx4_cleanup_default_counters.exit_crit_edge: ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_cleanup_default_counters.exit

if.end25.for.body.i_crit_edge:                    ; preds = %if.end25
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end25.for.body.i_crit_edge
  %port.011.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end25.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.mlx4_priv, ptr %3, i32 0, i32 21, i32 %port.011.i
  %46 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %47)
  %cmp1.not.i = icmp eq i32 %47, -1
  br i1 %cmp1.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %48 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %flags.i, align 4
  %and.i.i.i = and i32 %49, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i.i.i = zext i32 %47 to i64
  %call.i.i.i = tail call i32 @__mlx4_cmd(ptr noundef %3, i64 noundef %conv.i.i.i, ptr noundef null, i32 noundef 0, i32 noundef 9, i8 noundef zeroext 0, i16 noundef zeroext 3841, i32 noundef 60000, i32 noundef 0) #17
  br label %for.inc.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mlx4_counter_free(ptr noundef %3, i32 noundef %47) #17
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.i, %if.then.i.i, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %port.011.i, 1
  %50 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %num_ports, align 4
  %cmp.i118 = icmp slt i32 %inc.i, %51
  br i1 %cmp.i118, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.mlx4_cleanup_default_counters.exit_crit_edge

for.inc.i.mlx4_cleanup_default_counters.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_cleanup_default_counters.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

mlx4_cleanup_default_counters.exit:               ; preds = %for.inc.i.mlx4_cleanup_default_counters.exit_crit_edge, %if.end25.mlx4_cleanup_default_counters.exit_crit_edge
  %52 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %flags.i, align 4
  %and.i120 = and i32 %53, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i120)
  %tobool27.not = icmp eq i32 %and.i120, 0
  br i1 %tobool27.not, label %if.then28, label %mlx4_cleanup_default_counters.exit.if.end29_crit_edge

mlx4_cleanup_default_counters.exit.if.end29_crit_edge: ; preds = %mlx4_cleanup_default_counters.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end29

if.then28:                                        ; preds = %mlx4_cleanup_default_counters.exit
  %flags.i121 = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 60
  %54 = ptrtoint ptr %flags.i121 to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %flags.i121, align 8
  %and.i122 = and i64 %55, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i122)
  %tobool.not.i = icmp eq i64 %and.i122, 0
  br i1 %tobool.not.i, label %if.then28.if.end29_crit_edge, label %if.end.i123

if.then28.if.end29_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end29

if.end.i123:                                      ; preds = %if.then28
  %max_counters.i = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 79
  %56 = ptrtoint ptr %max_counters.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %max_counters.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool2.not.i = icmp eq i32 %57, 0
  br i1 %tobool2.not.i, label %if.end.i123.if.end29_crit_edge, label %if.end4.i

if.end.i123.if.end29_crit_edge:                   ; preds = %if.end.i123
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end29

if.end4.i:                                        ; preds = %if.end.i123
  call void @__sanitizer_cov_trace_pc() #19
  %counters_bitmap.i = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 20
  tail call void @mlx4_bitmap_cleanup(ptr noundef %counters_bitmap.i) #17
  br label %if.end29

if.end29:                                         ; preds = %if.end4.i, %if.end.i123.if.end29_crit_edge, %if.then28.if.end29_crit_edge, %mlx4_cleanup_default_counters.exit.if.end29_crit_edge
  tail call void @mlx4_cleanup_qp_table(ptr noundef %3) #17
  tail call void @mlx4_cleanup_srq_table(ptr noundef %3) #17
  tail call void @mlx4_cleanup_cq_table(ptr noundef %3) #17
  tail call void @mlx4_cmd_use_polling(ptr noundef %3) #17
  tail call void @mlx4_cleanup_eq_table(ptr noundef %3) #17
  tail call void @mlx4_cleanup_mcg_table(ptr noundef %3) #17
  tail call void @mlx4_cleanup_mr_table(ptr noundef %3) #17
  tail call void @mlx4_cleanup_xrcd_table(ptr noundef %3) #17
  tail call void @mlx4_cleanup_pd_table(ptr noundef %3) #17
  %58 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %flags.i, align 4
  %and.i125 = and i32 %59, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i125)
  %tobool31.not = icmp eq i32 %and.i125, 0
  br i1 %tobool31.not, label %if.end29.if.end33_crit_edge, label %if.then32

if.end29.if.end33_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.then32:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mlx4_free_resource_tracker(ptr noundef %3, i32 noundef 2) #17
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %if.end29.if.end33_crit_edge
  %kar = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 25
  %60 = ptrtoint ptr %kar to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %kar, align 8
  tail call void @iounmap(ptr noundef %61) #17
  %driver_uar = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 24
  tail call void @mlx4_uar_free(ptr noundef %3, ptr noundef %driver_uar) #17
  tail call void @mlx4_cleanup_uar_table(ptr noundef %3) #17
  %62 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %flags.i, align 4
  %and.i127 = and i32 %63, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i127)
  %tobool35.not = icmp eq i32 %and.i127, 0
  br i1 %tobool35.not, label %if.then36, label %if.end33.if.end37_crit_edge

if.end33.if.end37_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.then36:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mlx4_clear_steering(ptr noundef %3)
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.end33.if.end37_crit_edge
  tail call void @mlx4_free_eq_table(ptr noundef %3) #17
  %64 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %flags.i, align 4
  %and.i129 = and i32 %65, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i129)
  %tobool39.not = icmp eq i32 %and.i129, 0
  br i1 %tobool39.not, label %if.end37.if.end41_crit_edge, label %if.then40

if.end37.if.end41_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end41

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mlx4_multi_func_cleanup(ptr noundef %3) #17
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.end37.if.end41_crit_edge
  tail call fastcc void @mlx4_close_hca(ptr noundef %3)
  %66 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %67, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i130 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i130, label %if.then.i131, label %if.end41.mlx4_close_fw.exit_crit_edge

if.end41.mlx4_close_fw.exit_crit_edge:            ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_close_fw.exit

if.then.i131:                                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #19
  %call1.i = tail call i32 @mlx4_UNMAP_FA(ptr noundef %3) #17
  %fw_icm.i = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 8, i32 4
  %68 = ptrtoint ptr %fw_icm.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %fw_icm.i, align 8
  tail call void @mlx4_free_icm(ptr noundef %3, ptr noundef %69, i32 noundef 0) #17
  br label %mlx4_close_fw.exit

mlx4_close_fw.exit:                               ; preds = %if.then.i131, %if.end41.mlx4_close_fw.exit_crit_edge
  %70 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %flags.i, align 4
  %and.i134 = and i32 %71, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i134)
  %tobool43.not = icmp eq i32 %and.i134, 0
  br i1 %tobool43.not, label %mlx4_close_fw.exit.if.end45_crit_edge, label %if.then44

mlx4_close_fw.exit.if.end45_crit_edge:            ; preds = %mlx4_close_fw.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end45

if.then44:                                        ; preds = %mlx4_close_fw.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mlx4_multi_func_cleanup(ptr noundef %3) #17
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %mlx4_close_fw.exit.if.end45_crit_edge
  tail call void @mlx4_cmd_cleanup(ptr noundef %3, i32 noundef 15) #17
  %72 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %flags.i, align 4
  %and = and i32 %73, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool46.not = icmp eq i32 %and, 0
  br i1 %tobool46.not, label %if.end45.if.end48_crit_edge, label %if.then47

if.end45.if.end48_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end48

if.then47:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_disable_msix(ptr noundef %pdev) #17
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %if.end45.if.end48_crit_edge
  %74 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %flags.i, align 4
  %and.i136 = and i32 %75, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i136)
  %tobool50.not = icmp eq i32 %and.i136, 0
  br i1 %tobool50.not, label %if.then51, label %if.end48.if.end52_crit_edge

if.end48.if.end52_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end52

if.then51:                                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mlx4_free_ownership(ptr noundef %3)
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %if.end48.if.end52_crit_edge
  %spec_qps.i = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 28
  %76 = ptrtoint ptr %spec_qps.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %spec_qps.i, align 8
  tail call void @kfree(ptr noundef %77) #17
  %78 = ptrtoint ptr %spec_qps.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr null, ptr %spec_qps.i, align 8
  %dev_vfs = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 14
  %79 = ptrtoint ptr %dev_vfs to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %dev_vfs, align 8
  tail call void @kfree(ptr noundef %80) #17
  %81 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %flags.i, align 4
  %and.i137 = and i32 %82, 16
  %83 = getelementptr inbounds i8, ptr %3, i32 8
  %84 = call ptr @memset(ptr %83, i32 0, i32 74184)
  store i32 %and.i137, ptr %flags.i, align 4
  %85 = ptrtoint ptr %pci_dev_data11 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %20, ptr %pci_dev_data11, align 4
  %86 = ptrtoint ptr %removed to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 1, ptr %removed, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end52, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_stop_sense(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_free_resource_tracker(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx4_cleanup_default_counters(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp10 = icmp sgt i32 %1, 0
  br i1 %cmp10, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %flags.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %port.011 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 21, i32 %port.011
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp1.not = icmp eq i32 %3, -1
  br i1 %cmp1.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then:                                          ; preds = %for.body
  %4 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %5, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i.i = zext i32 %3 to i64
  %call.i.i = tail call i32 @__mlx4_cmd(ptr noundef %dev, i64 noundef %conv.i.i, ptr noundef null, i32 noundef 0, i32 noundef 9, i8 noundef zeroext 0, i16 noundef zeroext 3841, i32 noundef 60000, i32 noundef 0) #17
  br label %for.inc

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mlx4_counter_free(ptr noundef %dev, i32 noundef %3) #17
  br label %for.inc

for.inc:                                          ; preds = %if.end.i, %if.then.i, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %port.011, 1
  %6 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_ports, align 4
  %cmp = icmp slt i32 %inc, %7
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_qp_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_srq_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_cq_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cmd_use_polling(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_eq_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_mcg_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_mr_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_xrcd_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_pd_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @iounmap(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_uar_free(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_uar_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx4_clear_steering(ptr nocapture noundef readonly %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp141 = icmp sgt i32 %1, 0
  br i1 %cmp141, label %for.cond2.preheader.lr.ph, label %entry.for.end80_crit_edge

entry.for.end80_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end80

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %steer = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 30
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.inc76.1.for.cond2.preheader_crit_edge, %for.cond2.preheader.lr.ph
  %i.0142 = phi i32 [ 0, %for.cond2.preheader.lr.ph ], [ %inc79, %for.inc76.1.for.cond2.preheader_crit_edge ]
  %2 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %steer, align 8
  %arrayidx = getelementptr %struct.mlx4_steer, ptr %3, i32 %i.0142
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %cmp16.not127 = icmp eq ptr %5, %arrayidx
  br i1 %cmp16.not127, label %for.cond2.preheader.for.end_crit_edge, label %for.cond2.preheader.for.body17_crit_edge

for.cond2.preheader.for.body17_crit_edge:         ; preds = %for.cond2.preheader
  br label %for.body17

for.cond2.preheader.for.end_crit_edge:            ; preds = %for.cond2.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body17:                                       ; preds = %list_del.exit.for.body17_crit_edge, %for.cond2.preheader.for.body17_crit_edge
  %pqp.0128 = phi ptr [ %tmp_pqp.0, %list_del.exit.for.body17_crit_edge ], [ %5, %for.cond2.preheader.for.body17_crit_edge ]
  %6 = ptrtoint ptr %pqp.0128 to i32
  call void @__asan_load4_noabort(i32 %6)
  %tmp_pqp.0 = load ptr, ptr %pqp.0128, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %pqp.0128) #17
  br i1 %call.i.i, label %if.end.i.i, label %for.body17.list_del.exit_crit_edge

for.body17.list_del.exit_crit_edge:               ; preds = %for.body17
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body17
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %pqp.0128, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %pqp.0128 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pqp.0128, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body17.list_del.exit_crit_edge
  %13 = ptrtoint ptr %pqp.0128 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %pqp.0128, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %pqp.0128, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef %pqp.0128) #17
  %15 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %steer, align 8
  %arrayidx13 = getelementptr %struct.mlx4_steer, ptr %16, i32 %i.0142
  %cmp16.not = icmp eq ptr %tmp_pqp.0, %arrayidx13
  br i1 %cmp16.not, label %list_del.exit.for.end_crit_edge, label %list_del.exit.for.body17_crit_edge

list_del.exit.for.body17_crit_edge:               ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body17

list_del.exit.for.end_crit_edge:                  ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %list_del.exit.for.end_crit_edge, %for.cond2.preheader.for.end_crit_edge
  %.lcssa = phi ptr [ %3, %for.cond2.preheader.for.end_crit_edge ], [ %16, %list_del.exit.for.end_crit_edge ]
  %arrayidx27 = getelementptr %struct.mlx4_steer, ptr %.lcssa, i32 %i.0142, i32 1, i32 0
  %17 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx27, align 4
  %19 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %steer, align 8
  %arrayidx41134 = getelementptr %struct.mlx4_steer, ptr %20, i32 %i.0142, i32 1, i32 0
  %cmp42.not135 = icmp eq ptr %18, %arrayidx41134
  br i1 %cmp42.not135, label %for.end.for.inc76_crit_edge, label %for.end.for.body44_crit_edge

for.end.for.body44_crit_edge:                     ; preds = %for.end
  br label %for.body44

for.end.for.inc76_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc76

for.body44:                                       ; preds = %for.end68.for.body44_crit_edge, %for.end.for.body44_crit_edge
  %entry1.0136 = phi ptr [ %tmp_entry.0138, %for.end68.for.body44_crit_edge ], [ %18, %for.end.for.body44_crit_edge ]
  %21 = ptrtoint ptr %entry1.0136 to i32
  call void @__asan_load4_noabort(i32 %21)
  %tmp_entry.0138 = load ptr, ptr %entry1.0136, align 4
  %call.i.i113 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.0136) #17
  br i1 %call.i.i113, label %if.end.i.i116, label %for.body44.list_del.exit118_crit_edge

for.body44.list_del.exit118_crit_edge:            ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit118

if.end.i.i116:                                    ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i114 = getelementptr inbounds %struct.list_head, ptr %entry1.0136, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i.i114 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %prev.i.i114, align 4
  %24 = ptrtoint ptr %entry1.0136 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %entry1.0136, align 4
  %prev1.i.i.i115 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %prev1.i.i.i115 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %23, ptr %prev1.i.i.i115, align 4
  %27 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %25, ptr %23, align 4
  br label %list_del.exit118

list_del.exit118:                                 ; preds = %if.end.i.i116, %for.body44.list_del.exit118_crit_edge
  %28 = ptrtoint ptr %entry1.0136 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1.0136, align 4
  %prev.i117 = getelementptr inbounds %struct.list_head, ptr %entry1.0136, i32 0, i32 1
  %29 = ptrtoint ptr %prev.i117 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i117, align 4
  %duplicates = getelementptr inbounds %struct.mlx4_steer_index, ptr %entry1.0136, i32 0, i32 2
  %30 = ptrtoint ptr %duplicates to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %duplicates, align 4
  %cmp58.not130 = icmp eq ptr %31, %duplicates
  br i1 %cmp58.not130, label %list_del.exit118.for.end68_crit_edge, label %list_del.exit118.for.body60_crit_edge

list_del.exit118.for.body60_crit_edge:            ; preds = %list_del.exit118
  br label %for.body60

list_del.exit118.for.end68_crit_edge:             ; preds = %list_del.exit118
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end68

for.body60:                                       ; preds = %list_del.exit124.for.body60_crit_edge, %list_del.exit118.for.body60_crit_edge
  %pqp.1131 = phi ptr [ %tmp_pqp.1, %list_del.exit124.for.body60_crit_edge ], [ %31, %list_del.exit118.for.body60_crit_edge ]
  %32 = ptrtoint ptr %pqp.1131 to i32
  call void @__asan_load4_noabort(i32 %32)
  %tmp_pqp.1 = load ptr, ptr %pqp.1131, align 4
  %call.i.i119 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %pqp.1131) #17
  br i1 %call.i.i119, label %if.end.i.i122, label %for.body60.list_del.exit124_crit_edge

for.body60.list_del.exit124_crit_edge:            ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit124

if.end.i.i122:                                    ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i120 = getelementptr inbounds %struct.list_head, ptr %pqp.1131, i32 0, i32 1
  %33 = ptrtoint ptr %prev.i.i120 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %prev.i.i120, align 4
  %35 = ptrtoint ptr %pqp.1131 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pqp.1131, align 4
  %prev1.i.i.i121 = getelementptr inbounds %struct.list_head, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %prev1.i.i.i121 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %34, ptr %prev1.i.i.i121, align 4
  %38 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %36, ptr %34, align 4
  br label %list_del.exit124

list_del.exit124:                                 ; preds = %if.end.i.i122, %for.body60.list_del.exit124_crit_edge
  %39 = ptrtoint ptr %pqp.1131 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr inttoptr (i32 256 to ptr), ptr %pqp.1131, align 4
  %prev.i123 = getelementptr inbounds %struct.list_head, ptr %pqp.1131, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i123 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i123, align 4
  tail call void @kfree(ptr noundef %pqp.1131) #17
  %cmp58.not = icmp eq ptr %tmp_pqp.1, %duplicates
  br i1 %cmp58.not, label %list_del.exit124.for.end68_crit_edge, label %list_del.exit124.for.body60_crit_edge

list_del.exit124.for.body60_crit_edge:            ; preds = %list_del.exit124
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body60

list_del.exit124.for.end68_crit_edge:             ; preds = %list_del.exit124
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end68

for.end68:                                        ; preds = %list_del.exit124.for.end68_crit_edge, %list_del.exit118.for.end68_crit_edge
  tail call void @kfree(ptr noundef %entry1.0136) #17
  %41 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %steer, align 8
  %arrayidx41 = getelementptr %struct.mlx4_steer, ptr %42, i32 %i.0142, i32 1, i32 0
  %cmp42.not = icmp eq ptr %tmp_entry.0138, %arrayidx41
  br i1 %cmp42.not, label %for.end68.for.inc76_crit_edge, label %for.end68.for.body44_crit_edge

for.end68.for.body44_crit_edge:                   ; preds = %for.end68
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body44

for.end68.for.inc76_crit_edge:                    ; preds = %for.end68
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc76

for.inc76:                                        ; preds = %for.end68.for.inc76_crit_edge, %for.end.for.inc76_crit_edge
  %43 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %steer, align 8
  %arrayidx5.1 = getelementptr %struct.mlx4_steer, ptr %44, i32 %i.0142, i32 0, i32 1
  %45 = ptrtoint ptr %arrayidx5.1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx5.1, align 4
  %cmp16.not127.1 = icmp eq ptr %46, %arrayidx5.1
  br i1 %cmp16.not127.1, label %for.inc76.for.end.1_crit_edge, label %for.inc76.for.body17.1_crit_edge

for.inc76.for.body17.1_crit_edge:                 ; preds = %for.inc76
  br label %for.body17.1

for.inc76.for.end.1_crit_edge:                    ; preds = %for.inc76
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.1

for.body17.1:                                     ; preds = %list_del.exit.1.for.body17.1_crit_edge, %for.inc76.for.body17.1_crit_edge
  %pqp.0128.1 = phi ptr [ %tmp_pqp.0.1, %list_del.exit.1.for.body17.1_crit_edge ], [ %46, %for.inc76.for.body17.1_crit_edge ]
  %47 = ptrtoint ptr %pqp.0128.1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %tmp_pqp.0.1 = load ptr, ptr %pqp.0128.1, align 4
  %call.i.i.1 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %pqp.0128.1) #17
  br i1 %call.i.i.1, label %if.end.i.i.1, label %for.body17.1.list_del.exit.1_crit_edge

for.body17.1.list_del.exit.1_crit_edge:           ; preds = %for.body17.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit.1

if.end.i.i.1:                                     ; preds = %for.body17.1
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i.1 = getelementptr inbounds %struct.list_head, ptr %pqp.0128.1, i32 0, i32 1
  %48 = ptrtoint ptr %prev.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %prev.i.i.1, align 4
  %50 = ptrtoint ptr %pqp.0128.1 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pqp.0128.1, align 4
  %prev1.i.i.i.1 = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %prev1.i.i.i.1 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %49, ptr %prev1.i.i.i.1, align 4
  %53 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %51, ptr %49, align 4
  br label %list_del.exit.1

list_del.exit.1:                                  ; preds = %if.end.i.i.1, %for.body17.1.list_del.exit.1_crit_edge
  %54 = ptrtoint ptr %pqp.0128.1 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr inttoptr (i32 256 to ptr), ptr %pqp.0128.1, align 4
  %prev.i.1 = getelementptr inbounds %struct.list_head, ptr %pqp.0128.1, i32 0, i32 1
  %55 = ptrtoint ptr %prev.i.1 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.1, align 4
  tail call void @kfree(ptr noundef %pqp.0128.1) #17
  %56 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %steer, align 8
  %arrayidx15.1 = getelementptr %struct.mlx4_steer, ptr %57, i32 %i.0142, i32 0, i32 1
  %cmp16.not.1 = icmp eq ptr %tmp_pqp.0.1, %arrayidx15.1
  br i1 %cmp16.not.1, label %list_del.exit.1.for.end.1_crit_edge, label %list_del.exit.1.for.body17.1_crit_edge

list_del.exit.1.for.body17.1_crit_edge:           ; preds = %list_del.exit.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body17.1

list_del.exit.1.for.end.1_crit_edge:              ; preds = %list_del.exit.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.1

for.end.1:                                        ; preds = %list_del.exit.1.for.end.1_crit_edge, %for.inc76.for.end.1_crit_edge
  %.lcssa.1 = phi ptr [ %44, %for.inc76.for.end.1_crit_edge ], [ %57, %list_del.exit.1.for.end.1_crit_edge ]
  %arrayidx27.1 = getelementptr %struct.mlx4_steer, ptr %.lcssa.1, i32 %i.0142, i32 1, i32 1
  %58 = ptrtoint ptr %arrayidx27.1 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx27.1, align 4
  %60 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %steer, align 8
  %arrayidx41134.1 = getelementptr %struct.mlx4_steer, ptr %61, i32 %i.0142, i32 1, i32 1
  %cmp42.not135.1 = icmp eq ptr %59, %arrayidx41134.1
  br i1 %cmp42.not135.1, label %for.end.1.for.inc76.1_crit_edge, label %for.end.1.for.body44.1_crit_edge

for.end.1.for.body44.1_crit_edge:                 ; preds = %for.end.1
  br label %for.body44.1

for.end.1.for.inc76.1_crit_edge:                  ; preds = %for.end.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc76.1

for.body44.1:                                     ; preds = %for.end68.1.for.body44.1_crit_edge, %for.end.1.for.body44.1_crit_edge
  %entry1.0136.1 = phi ptr [ %tmp_entry.0138.1, %for.end68.1.for.body44.1_crit_edge ], [ %59, %for.end.1.for.body44.1_crit_edge ]
  %62 = ptrtoint ptr %entry1.0136.1 to i32
  call void @__asan_load4_noabort(i32 %62)
  %tmp_entry.0138.1 = load ptr, ptr %entry1.0136.1, align 4
  %call.i.i113.1 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.0136.1) #17
  br i1 %call.i.i113.1, label %if.end.i.i116.1, label %for.body44.1.list_del.exit118.1_crit_edge

for.body44.1.list_del.exit118.1_crit_edge:        ; preds = %for.body44.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit118.1

if.end.i.i116.1:                                  ; preds = %for.body44.1
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i114.1 = getelementptr inbounds %struct.list_head, ptr %entry1.0136.1, i32 0, i32 1
  %63 = ptrtoint ptr %prev.i.i114.1 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %prev.i.i114.1, align 4
  %65 = ptrtoint ptr %entry1.0136.1 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %entry1.0136.1, align 4
  %prev1.i.i.i115.1 = getelementptr inbounds %struct.list_head, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %prev1.i.i.i115.1 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %64, ptr %prev1.i.i.i115.1, align 4
  %68 = ptrtoint ptr %64 to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile ptr %66, ptr %64, align 4
  br label %list_del.exit118.1

list_del.exit118.1:                               ; preds = %if.end.i.i116.1, %for.body44.1.list_del.exit118.1_crit_edge
  %69 = ptrtoint ptr %entry1.0136.1 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1.0136.1, align 4
  %prev.i117.1 = getelementptr inbounds %struct.list_head, ptr %entry1.0136.1, i32 0, i32 1
  %70 = ptrtoint ptr %prev.i117.1 to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i117.1, align 4
  %duplicates.1 = getelementptr inbounds %struct.mlx4_steer_index, ptr %entry1.0136.1, i32 0, i32 2
  %71 = ptrtoint ptr %duplicates.1 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %duplicates.1, align 4
  %cmp58.not130.1 = icmp eq ptr %72, %duplicates.1
  br i1 %cmp58.not130.1, label %list_del.exit118.1.for.end68.1_crit_edge, label %list_del.exit118.1.for.body60.1_crit_edge

list_del.exit118.1.for.body60.1_crit_edge:        ; preds = %list_del.exit118.1
  br label %for.body60.1

list_del.exit118.1.for.end68.1_crit_edge:         ; preds = %list_del.exit118.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end68.1

for.body60.1:                                     ; preds = %list_del.exit124.1.for.body60.1_crit_edge, %list_del.exit118.1.for.body60.1_crit_edge
  %pqp.1131.1 = phi ptr [ %tmp_pqp.1.1, %list_del.exit124.1.for.body60.1_crit_edge ], [ %72, %list_del.exit118.1.for.body60.1_crit_edge ]
  %73 = ptrtoint ptr %pqp.1131.1 to i32
  call void @__asan_load4_noabort(i32 %73)
  %tmp_pqp.1.1 = load ptr, ptr %pqp.1131.1, align 4
  %call.i.i119.1 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %pqp.1131.1) #17
  br i1 %call.i.i119.1, label %if.end.i.i122.1, label %for.body60.1.list_del.exit124.1_crit_edge

for.body60.1.list_del.exit124.1_crit_edge:        ; preds = %for.body60.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit124.1

if.end.i.i122.1:                                  ; preds = %for.body60.1
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i120.1 = getelementptr inbounds %struct.list_head, ptr %pqp.1131.1, i32 0, i32 1
  %74 = ptrtoint ptr %prev.i.i120.1 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %prev.i.i120.1, align 4
  %76 = ptrtoint ptr %pqp.1131.1 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %pqp.1131.1, align 4
  %prev1.i.i.i121.1 = getelementptr inbounds %struct.list_head, ptr %77, i32 0, i32 1
  %78 = ptrtoint ptr %prev1.i.i.i121.1 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %75, ptr %prev1.i.i.i121.1, align 4
  %79 = ptrtoint ptr %75 to i32
  call void @__asan_store4_noabort(i32 %79)
  store volatile ptr %77, ptr %75, align 4
  br label %list_del.exit124.1

list_del.exit124.1:                               ; preds = %if.end.i.i122.1, %for.body60.1.list_del.exit124.1_crit_edge
  %80 = ptrtoint ptr %pqp.1131.1 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr inttoptr (i32 256 to ptr), ptr %pqp.1131.1, align 4
  %prev.i123.1 = getelementptr inbounds %struct.list_head, ptr %pqp.1131.1, i32 0, i32 1
  %81 = ptrtoint ptr %prev.i123.1 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i123.1, align 4
  tail call void @kfree(ptr noundef %pqp.1131.1) #17
  %cmp58.not.1 = icmp eq ptr %tmp_pqp.1.1, %duplicates.1
  br i1 %cmp58.not.1, label %list_del.exit124.1.for.end68.1_crit_edge, label %list_del.exit124.1.for.body60.1_crit_edge

list_del.exit124.1.for.body60.1_crit_edge:        ; preds = %list_del.exit124.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body60.1

list_del.exit124.1.for.end68.1_crit_edge:         ; preds = %list_del.exit124.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end68.1

for.end68.1:                                      ; preds = %list_del.exit124.1.for.end68.1_crit_edge, %list_del.exit118.1.for.end68.1_crit_edge
  tail call void @kfree(ptr noundef %entry1.0136.1) #17
  %82 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %steer, align 8
  %arrayidx41.1 = getelementptr %struct.mlx4_steer, ptr %83, i32 %i.0142, i32 1, i32 1
  %cmp42.not.1 = icmp eq ptr %tmp_entry.0138.1, %arrayidx41.1
  br i1 %cmp42.not.1, label %for.end68.1.for.inc76.1_crit_edge, label %for.end68.1.for.body44.1_crit_edge

for.end68.1.for.body44.1_crit_edge:               ; preds = %for.end68.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body44.1

for.end68.1.for.inc76.1_crit_edge:                ; preds = %for.end68.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc76.1

for.inc76.1:                                      ; preds = %for.end68.1.for.inc76.1_crit_edge, %for.end.1.for.inc76.1_crit_edge
  %inc79 = add nuw nsw i32 %i.0142, 1
  %exitcond144.not = icmp eq i32 %inc79, %1
  br i1 %exitcond144.not, label %for.inc76.1.for.end80_crit_edge, label %for.inc76.1.for.cond2.preheader_crit_edge

for.inc76.1.for.cond2.preheader_crit_edge:        ; preds = %for.inc76.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond2.preheader

for.inc76.1.for.end80_crit_edge:                  ; preds = %for.inc76.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end80

for.end80:                                        ; preds = %for.inc76.1.for.end80_crit_edge, %entry.for.end80_crit_edge
  %steer81 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 30
  %84 = ptrtoint ptr %steer81 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %steer81, align 8
  tail call void @kfree(ptr noundef %85) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_free_eq_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_multi_func_cleanup(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx4_close_hca(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %clock_mapping.i = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 34
  %0 = ptrtoint ptr %clock_mapping.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %clock_mapping.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.unmap_internal_clock.exit_crit_edge, label %if.then.i

entry.unmap_internal_clock.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %unmap_internal_clock.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @iounmap(ptr noundef nonnull %1) #17
  br label %unmap_internal_clock.exit

unmap_internal_clock.exit:                        ; preds = %if.then.i, %entry.unmap_internal_clock.exit_crit_edge
  %bf_mapping.i = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 33
  %2 = ptrtoint ptr %bf_mapping.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bf_mapping.i, align 8
  %tobool.not.i7 = icmp eq ptr %3, null
  br i1 %tobool.not.i7, label %unmap_internal_clock.exit.unmap_bf_area.exit_crit_edge, label %if.then.i8

unmap_internal_clock.exit.unmap_bf_area.exit_crit_edge: ; preds = %unmap_internal_clock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %unmap_bf_area.exit

if.then.i8:                                       ; preds = %unmap_internal_clock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %iomem.i.i.i = getelementptr inbounds %struct.io_mapping, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %iomem.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %iomem.i.i.i, align 4
  tail call void @iounmap(ptr noundef %5) #17
  tail call void @kfree(ptr noundef nonnull %3) #17
  br label %unmap_bf_area.exit

unmap_bf_area.exit:                               ; preds = %if.then.i8, %unmap_internal_clock.exit.unmap_bf_area.exit_crit_edge
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %unmap_bf_area.exit
  %slave_cmd_mutex.i = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 9, i32 2
  tail call void @mutex_lock_nested(ptr noundef %slave_cmd_mutex.i, i32 noundef 0) #17
  %call1.i = tail call i32 @mlx4_comm_cmd(ptr noundef %dev, i8 noundef zeroext 0, i16 noundef zeroext 0, i16 noundef zeroext 0, i32 noundef 10000) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i9 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i9, label %if.then.mlx4_slave_exit.exit_crit_edge, label %do.end.i

if.then.mlx4_slave_exit.exit_crit_edge:           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_slave_exit.exit

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %dev2.i = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev2.i, ptr noundef nonnull @.str.59) #20
  br label %mlx4_slave_exit.exit

mlx4_slave_exit.exit:                             ; preds = %do.end.i, %if.then.mlx4_slave_exit.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %slave_cmd_mutex.i) #17
  br label %if.end

if.else:                                          ; preds = %unmap_bf_area.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call1 = tail call i32 @mlx4_CLOSE_HCA(ptr noundef %dev, i32 noundef 0) #17
  tail call fastcc void @mlx4_free_icms(ptr noundef %dev)
  br label %if.end

if.end:                                           ; preds = %if.else, %mlx4_slave_exit.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cmd_cleanup(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_msix(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx4_free_ownership(ptr nocapture noundef readonly %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %error_state.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 43
  %4 = ptrtoint ptr %error_state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %error_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i.not = icmp eq i32 %5, 1
  br i1 %cmp.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %resource = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 47
  %6 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %resource, align 8
  %add = add i32 %7, 525980
  %call3 = tail call ptr @ioremap(i32 noundef %add, i32 noundef 4) #17
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end, label %do.body10

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev8, ptr noundef nonnull @.str.61) #20
  br label %cleanup

do.body10:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !1176
  tail call void @arm_heavy_mb() #17
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr nonnull elementtype(i32) %call3, i32 0) #17, !srcloc !1177
  tail call void @msleep(i32 noundef 1000) #17
  tail call void @iounmap(ptr noundef nonnull %call3) #17
  br label %cleanup

cleanup:                                          ; preds = %do.body10, %do.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_remove_file(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @devlink_port_unregister(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_irq_cpu_rmap(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_bitmap_cleanup(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_CLOSE_HCA(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx4_free_icms(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %table = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 19, i32 2
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %table) #17
  %table1 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 17, i32 3
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %table1) #17
  %table2 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 15, i32 3
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %table2) #17
  %rdmarc_table = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 18, i32 9
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %rdmarc_table) #17
  %altc_table = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 18, i32 8
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %altc_table) #17
  %auxc_table = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 18, i32 7
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %auxc_table) #17
  %qp_table6 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 18, i32 6
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %qp_table6) #17
  %dmpt_table = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 14, i32 5
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %dmpt_table) #17
  %mtt_table = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 14, i32 4
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %mtt_table) #17
  %table8 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 16, i32 6
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %table8) #17
  %cmpt_table = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 16, i32 7
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %cmpt_table) #17
  %cmpt_table11 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 15, i32 4
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %cmpt_table11) #17
  %cmpt_table13 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 17, i32 4
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %cmpt_table13) #17
  %cmpt_table15 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 18, i32 10
  tail call void @mlx4_cleanup_icm_table(ptr noundef %dev, ptr noundef %cmpt_table15) #17
  %call16 = tail call i32 @mlx4_UNMAP_ICM_AUX(ptr noundef %dev) #17
  %aux_icm = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 8, i32 5
  %0 = ptrtoint ptr %aux_icm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux_icm, align 4
  tail call void @mlx4_free_icm(ptr noundef %dev, ptr noundef %1, i32 noundef 0) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_comm_cmd(ptr noundef, i8 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_cleanup_icm_table(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_UNMAP_ICM_AUX(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_free_icm(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_UNMAP_FA(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx4_load_one(ptr noundef %pdev, i32 noundef %pci_dev_data, i32 noundef %total_vfs, ptr nocapture noundef readonly %nvfs, ptr noundef %priv, i32 noundef %reset_flow) unnamed_addr #1 align 64 {
entry:
  %func.i = alloca %struct.mlx4_func, align 4
  %port_cap.i = alloca %struct.mlx4_port_cap, align 8
  %aux_pages.i.i = alloca i64, align 8
  %adapter.i = alloca %struct.mlx4_adapter, align 1
  %profile.i = alloca %struct.mlx4_profile, align 4
  %params.i = alloca %struct.mlx4_config_dev_params, align 4
  %mlx4_cfg.i = alloca %struct.mlx4_mod_stat_cfg, align 1
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %ctx_list = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 2
  %0 = ptrtoint ptr %ctx_list to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %ctx_list, ptr %ctx_list, align 4
  %prev.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 2, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %ctx_list, ptr %prev.i, align 4
  %ctx_lock = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 3
  tail call void @__raw_spin_lock_init(ptr noundef %ctx_lock, ptr noundef nonnull @.str.68, ptr noundef nonnull @mlx4_load_one.__key, i16 noundef signext 3) #17
  %port_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 28
  tail call void @__mutex_init(ptr noundef %port_mutex, ptr noundef nonnull @.str.70, ptr noundef nonnull @mlx4_load_one.__key.69) #17
  %bond_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 39
  tail call void @__mutex_init(ptr noundef %bond_mutex, ptr noundef nonnull @.str.72, ptr noundef nonnull @mlx4_load_one.__key.71) #17
  %pgdir_list = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 6
  %2 = ptrtoint ptr %pgdir_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %pgdir_list, ptr %pgdir_list, align 4
  %prev.i723 = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 6, i32 1
  %3 = ptrtoint ptr %prev.i723 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %pgdir_list, ptr %prev.i723, align 4
  %pgdir_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 7
  tail call void @__mutex_init(ptr noundef %pgdir_mutex, ptr noundef nonnull @.str.74, ptr noundef nonnull @mlx4_load_one.__key.73) #17
  %context_lock = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 9, i32 7
  tail call void @__raw_spin_lock_init(ptr noundef %context_lock, ptr noundef nonnull @.str.76, ptr noundef nonnull @mlx4_load_one.__key.75, i16 noundef signext 3) #17
  %bf_list = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 31
  %4 = ptrtoint ptr %bf_list to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %bf_list, ptr %bf_list, align 4
  %prev.i724 = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 31, i32 1
  %5 = ptrtoint ptr %prev.i724 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %bf_list, ptr %prev.i724, align 4
  %bf_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 32
  tail call void @__mutex_init(ptr noundef %bf_mutex, ptr noundef nonnull @.str.78, ptr noundef nonnull @mlx4_load_one.__key.77) #17
  %revision = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 12
  %6 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %revision, align 4
  %rev_id = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 7
  %8 = ptrtoint ptr %rev_id to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %rev_id, align 8
  %numa_node = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 10
  %9 = ptrtoint ptr %numa_node to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %numa_node, align 4
  %and = and i32 %pci_dev_data, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %10 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %priv, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  br i1 %tobool.not, label %if.else, label %do.end22

do.end22:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %dev24 = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev24, ptr noundef nonnull @.str.79) #20
  %flags = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 1
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags, align 4
  %or = or i32 %15, 8
  store i32 %or, ptr %flags, align 4
  br label %if.end65

if.else:                                          ; preds = %entry
  %error_state.i.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 43
  %16 = ptrtoint ptr %error_state.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %error_state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %17)
  %cmp.i.not.i = icmp eq i32 %17, 1
  br i1 %cmp.i.not.i, label %if.end.i, label %if.else.cleanup489_crit_edge

if.else.cleanup489_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup489

if.end.i:                                         ; preds = %if.else
  %resource.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 47
  %18 = ptrtoint ptr %resource.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %resource.i, align 8
  %add.i = add i32 %19, 525980
  %call3.i = tail call ptr @ioremap(i32 noundef %add.i, i32 noundef 4) #17
  %tobool4.not.i = icmp eq ptr %call3.i, null
  br i1 %tobool4.not.i, label %do.end.i, label %mlx4_get_ownership.exit

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %20 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %priv, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %dev8.i = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev8.i, ptr noundef nonnull @.str.61) #20
  br label %cleanup489

mlx4_get_ownership.exit:                          ; preds = %if.end.i
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %call3.i) #17, !srcloc !1169
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !1178
  tail call void @iounmap(ptr noundef nonnull %call3.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool12.i.not = icmp eq i32 %24, 0
  br i1 %tobool12.i.not, label %if.end, label %do.end32

do.end32:                                         ; preds = %mlx4_get_ownership.exit
  call void @__sanitizer_cov_trace_pc() #19
  %25 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %priv, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %dev35 = getelementptr inbounds %struct.pci_dev, ptr %28, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev35, ptr noundef nonnull @.str.82) #20
  br label %cleanup489

if.end:                                           ; preds = %mlx4_get_ownership.exit
  %opreq_count = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 41
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %opreq_count, i32 noundef 4) #17
  %29 = ptrtoint ptr %opreq_count to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile i32 0, ptr %opreq_count, align 4
  %opreq_task = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 42
  tail call void @__init_work(ptr noundef %opreq_task, i32 noundef 0) #17
  %30 = ptrtoint ptr %opreq_task to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 -64, ptr %opreq_task, align 4
  %lockdep_map = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 42, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.85, ptr noundef nonnull @mlx4_load_one.__key.84, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %entry40 = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 42, i32 1
  %31 = ptrtoint ptr %entry40 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %entry40, ptr %entry40, align 4
  %prev.i725 = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 42, i32 1, i32 1
  %32 = ptrtoint ptr %prev.i725 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %entry40, ptr %prev.i725, align 4
  %func = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 42, i32 2
  %33 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr @mlx4_opreq_action, ptr %func, align 4
  %call44 = tail call i32 @mlx4_reset(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %if.end53, label %do.end49

do.end49:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %34 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %priv, align 8
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %dev52 = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev52, ptr noundef nonnull @.str.87) #20
  br label %err_sriov

if.end53:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %total_vfs)
  %tobool54.not = icmp eq i32 %total_vfs, 0
  br i1 %tobool54.not, label %if.end53.if.end65_crit_edge, label %if.then55

if.end53.if.end65_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end65

if.then55:                                        ; preds = %if.end53
  %flags56 = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 1
  %38 = ptrtoint ptr %flags56 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 4, ptr %flags56, align 4
  %call57 = tail call i32 @pci_num_vf(ptr noundef %pdev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %if.then55.if.end62_crit_edge, label %if.then59

if.then55.if.end62_crit_edge:                     ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end62

if.then59:                                        ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #19
  %39 = ptrtoint ptr %flags56 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %flags56, align 4
  %or61 = or i32 %40, 16
  store i32 %or61, ptr %flags56, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.then59, %if.then55.if.end62_crit_edge
  %41 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %priv, align 8
  %num_vfs = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %42, i32 0, i32 3
  %43 = ptrtoint ptr %num_vfs to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %total_vfs, ptr %num_vfs, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.end62, %if.end53.if.end65_crit_edge, %do.end22
  %existing_vfs.0 = phi i32 [ 0, %do.end22 ], [ %call57, %if.end62 ], [ 0, %if.end53.if.end65_crit_edge ]
  %44 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %priv, align 8
  %state = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %45, i32 0, i32 9
  %46 = ptrtoint ptr %state to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 1, ptr %state, align 4
  %call671107 = call i32 @mlx4_cmd_init(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call671107)
  %tobool68.not1108 = icmp eq i32 %call671107, 0
  br i1 %tobool68.not1108, label %if.end76.lr.ph, label %if.end65.do.end72_crit_edge

if.end65.do.end72_crit_edge:                      ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end72

if.end76.lr.ph:                                   ; preds = %if.end65
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 1
  %num_slaves = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 2
  %47 = getelementptr inbounds %struct.mlx4_mod_stat_cfg, ptr %mlx4_cfg.i, i32 0, i32 1
  %fw_pages.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 8, i32 7
  %fw_icm.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 8, i32 4
  %arrayidx1.i744 = getelementptr i32, ptr %nvfs, i32 1
  %arrayidx2.i746 = getelementptr i32, ptr %nvfs, i32 2
  %conv = trunc i32 %total_vfs to i8
  %48 = getelementptr inbounds %struct.mlx4_profile, ptr %profile.i, i32 0, i32 4
  %mfunc.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 10
  %vhcr_dma.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 10, i32 2
  %slave_cmd_mutex.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 9, i32 2
  %max_cmds.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 9, i32 6
  %vf_caps.i.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 95
  %hca_core_clock26.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 87
  %max_qp_dest_rdma.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 26
  %page_size_cap.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 59
  %uar_page_shift.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 15
  %reserved_uars2.i.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 45
  %uar_page_size.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 16
  %num_ports103.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 2
  %quotas.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 5
  %srq.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 5, i32 2
  %cq.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 5, i32 1
  %mpt.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 5, i32 3
  %mtt.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 5, i32 4
  %num_qps.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 21
  %num_srqs.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 29
  %num_cqs.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 33
  %num_mpts.i502.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 40
  %num_eqs.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 37
  %reserved_eqs.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 38
  %reserved_lkey123.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 63
  %num_pds.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 53
  %num_mgms.i503.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 46
  %num_amgms.i504.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 47
  %num_uars.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 15
  %spec_qps.i.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 28
  %49 = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 82
  %50 = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 84
  %userspace_caps.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 85
  %51 = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 83
  %flags2.i510.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 61
  %bf_reg_size.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 17
  %alloc_res_qp_mask.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 92
  %dmfs_high_steer_mode.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 51
  %oper_log_mgm_entry_size.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 11
  %steering_mode.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 50
  %num_qp_per_mgm.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 49
  %fs_log_max_ucast_qp_range_size27.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 52
  %flags.i454.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 60
  %tunnel_offload_mode.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 89
  %function_caps.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 86
  %bmme_flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 62
  %aux_icm.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 8, i32 5
  %cmpt_table.i.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 18, i32 10
  %reserved_qps_cnt.i.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 68
  %cmpt_table3.i.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 17, i32 4
  %reserved_srqs.i.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 32
  %cmpt_table14.i.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 15, i32 4
  %reserved_cqs.i.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 35
  %num_phys_eqs.i.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 4, i32 2
  %cmpt_table25.i.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 16, i32 7
  %table.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 16, i32 6
  %reserved_mtts.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 43
  %mtt_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 57
  %mtt_table.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 14, i32 4
  %num_mtts.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 41
  %dmpt_table.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 14, i32 5
  %reserved_mrws.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 44
  %qp_table95.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 18, i32 6
  %auxc_table.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 18, i32 7
  %altc_table.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 18, i32 8
  %rdmarc_table.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 18, i32 9
  %rdmarc_shift.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 18, i32 4
  %table158.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 15, i32 3
  %table171.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 17, i32 3
  %table184.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 19, i32 2
  %52 = getelementptr inbounds %struct.mlx4_func, ptr %func.i, i32 0, i32 4
  %53 = getelementptr inbounds %struct.mlx4_func, ptr %func.i, i32 0, i32 5
  %54 = getelementptr inbounds %struct.mlx4_func, ptr %func.i, i32 0, i32 6
  %clock_bar.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 8, i32 11
  %clock_offset.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 8, i32 3
  %clock_mapping.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 34
  %dmfs_optimized_state.i = getelementptr inbounds %struct.mlx4_port_cap, ptr %port_cap.i, i32 0, i32 18
  %dmfs_high_rate_qpn_base.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 93
  %dmfs_high_rate_qpn_range.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 94
  %bf_mapping.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %existing_vfs.0)
  %tobool195.not = icmp eq i32 %existing_vfs.0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %reset_flow)
  %tobool200.not = icmp eq i32 %reset_flow, 0
  br label %if.end76

do.end72:                                         ; preds = %slave_start.backedge.do.end72_crit_edge, %if.end65.do.end72_crit_edge
  %dev_cap.0.lcssa = phi ptr [ null, %if.end65.do.end72_crit_edge ], [ %dev_cap.0.be, %slave_start.backedge.do.end72_crit_edge ]
  %call67.lcssa = phi i32 [ %call671107, %if.end65.do.end72_crit_edge ], [ %call67, %slave_start.backedge.do.end72_crit_edge ]
  %55 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %priv, align 8
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %56, align 4
  %dev75 = getelementptr inbounds %struct.pci_dev, ptr %58, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev75, ptr noundef nonnull @.str.90) #20
  br label %err_sriov

if.end76:                                         ; preds = %slave_start.backedge.if.end76_crit_edge, %if.end76.lr.ph
  %dev_cap.01109 = phi ptr [ null, %if.end76.lr.ph ], [ %dev_cap.0.be, %slave_start.backedge.if.end76_crit_edge ]
  %59 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %60, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool78.not = icmp eq i32 %and.i, 0
  br i1 %tobool78.not, label %if.end76.if.end96_crit_edge, label %if.then79

if.end76.if.end96_crit_edge:                      ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end96

if.then79:                                        ; preds = %if.end76
  %and.i727 = and i32 %60, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i727)
  %tobool81.not = icmp eq i32 %and.i727, 0
  br i1 %tobool81.not, label %if.else83, label %if.then82

if.then82:                                        ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #19
  %61 = ptrtoint ptr %num_slaves to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 128, ptr %num_slaves, align 8
  br label %if.end96

if.else83:                                        ; preds = %if.then79
  %62 = ptrtoint ptr %num_slaves to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %num_slaves, align 8
  %call85 = call i32 @mlx4_multi_func_init(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call85)
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %if.else83.if.end96_crit_edge, label %do.end90

if.else83.if.end96_crit_edge:                     ; preds = %if.else83
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end96

do.end90:                                         ; preds = %if.else83
  call void @__sanitizer_cov_trace_pc() #19
  %63 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %priv, align 8
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %64, align 4
  %dev93 = getelementptr inbounds %struct.pci_dev, ptr %66, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev93, ptr noundef nonnull @.str.93) #20
  br label %err_cmd

if.end96:                                         ; preds = %if.else83.if.end96_crit_edge, %if.then82, %if.end76.if.end96_crit_edge
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mlx4_cfg.i) #17
  %67 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %68, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end96.mlx4_init_fw.exit.thread916_crit_edge

if.end96.mlx4_init_fw.exit.thread916_crit_edge:   ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_init_fw.exit.thread916

if.then.i:                                        ; preds = %if.end96
  %call1.i = call i32 @mlx4_QUERY_FW(ptr noundef %priv) #17
  %69 = zext i32 %call1.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %69, ptr @__sancov_gen_cov_switch_values.623)
  switch i32 %call1.i, label %mlx4_init_fw.exit [
    i32 0, label %if.end12.i
    i32 -13, label %do.end.i728
  ]

do.end.i728:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %70 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %priv, align 8
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %71, align 4
  %dev5.i = getelementptr inbounds %struct.pci_dev, ptr %73, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev5.i, ptr noundef nonnull @.str.129) #20
  br label %mlx4_init_fw.exit.thread

if.end12.i:                                       ; preds = %if.then.i
  %74 = ptrtoint ptr %fw_pages.i.i to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %fw_pages.i.i, align 4
  %conv.i.i = zext i16 %75 to i32
  %call1.i.i = call ptr @mlx4_alloc_icm(ptr noundef %priv, i32 noundef %conv.i.i, i32 noundef 1060034, i32 noundef 0) #17
  %76 = ptrtoint ptr %fw_icm.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %call1.i.i, ptr %fw_icm.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i.i, label %do.end.i.i, label %if.end.i.i

do.end.i.i:                                       ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  %77 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %priv, align 8
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %78, align 4
  %dev5.i.i = getelementptr inbounds %struct.pci_dev, ptr %80, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5.i.i, ptr noundef nonnull @.str.141) #20
  br label %do.end18.i

if.end.i.i:                                       ; preds = %if.end12.i
  %call8.i.i = call i32 @mlx4_MAP_FA(ptr noundef %priv, ptr noundef nonnull %call1.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %tobool9.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool9.not.i.i, label %if.end17.i.i, label %do.end13.i.i

do.end13.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %81 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %priv, align 8
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %82, align 4
  %dev16.i.i = getelementptr inbounds %struct.pci_dev, ptr %84, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev16.i.i, ptr noundef nonnull @.str.144) #20
  br label %err_free.i.i

if.end17.i.i:                                     ; preds = %if.end.i.i
  %call18.i.i = call i32 @mlx4_RUN_FW(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i.i)
  %tobool19.not.i.i = icmp eq i32 %call18.i.i, 0
  br i1 %tobool19.not.i.i, label %if.end22.i, label %do.end23.i.i

do.end23.i.i:                                     ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %85 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %priv, align 8
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %86, align 4
  %dev26.i.i = getelementptr inbounds %struct.pci_dev, ptr %88, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev26.i.i, ptr noundef nonnull @.str.147) #20
  %call28.i.i = call i32 @mlx4_UNMAP_FA(ptr noundef %priv) #17
  br label %err_free.i.i

err_free.i.i:                                     ; preds = %do.end23.i.i, %do.end13.i.i
  %err.0.i.i = phi i32 [ %call8.i.i, %do.end13.i.i ], [ %call18.i.i, %do.end23.i.i ]
  %89 = ptrtoint ptr %fw_icm.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %fw_icm.i.i, align 8
  call void @mlx4_free_icm(ptr noundef %priv, ptr noundef %90, i32 noundef 0) #17
  br label %do.end18.i

do.end18.i:                                       ; preds = %err_free.i.i, %do.end.i.i
  %retval.0.i.ph.i = phi i32 [ -12, %do.end.i.i ], [ %err.0.i.i, %err_free.i.i ]
  %91 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %priv, align 8
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %92, align 4
  %dev21.i = getelementptr inbounds %struct.pci_dev, ptr %94, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev21.i, ptr noundef nonnull @.str.136) #20
  br label %mlx4_init_fw.exit.thread

if.end22.i:                                       ; preds = %if.end17.i.i
  %95 = ptrtoint ptr %47 to i32
  call void @__asan_store1_noabort(i32 %95)
  store i8 1, ptr %47, align 1
  %96 = ptrtoint ptr %mlx4_cfg.i to i32
  call void @__asan_store1_noabort(i32 %96)
  store i8 0, ptr %mlx4_cfg.i, align 1
  %call23.i = call i32 @mlx4_MOD_STAT_CFG(ptr noundef %priv, ptr noundef nonnull %mlx4_cfg.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %tobool24.not.i = icmp eq i32 %call23.i, 0
  br i1 %tobool24.not.i, label %if.end22.i.mlx4_init_fw.exit.thread916_crit_edge, label %do.end28.i

if.end22.i.mlx4_init_fw.exit.thread916_crit_edge: ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_init_fw.exit.thread916

do.end28.i:                                       ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #19
  %97 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %priv, align 8
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %98, align 4
  %dev31.i = getelementptr inbounds %struct.pci_dev, ptr %100, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev31.i, ptr noundef nonnull @.str.139) #20
  br label %mlx4_init_fw.exit.thread

mlx4_init_fw.exit.thread:                         ; preds = %do.end28.i, %do.end18.i, %do.end.i728
  %retval.0.i729.ph = phi i32 [ %call23.i, %do.end28.i ], [ -13, %do.end.i728 ], [ %retval.0.i.ph.i, %do.end18.i ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mlx4_cfg.i) #17
  br label %do.end102

mlx4_init_fw.exit.thread916:                      ; preds = %if.end22.i.mlx4_init_fw.exit.thread916_crit_edge, %if.end96.mlx4_init_fw.exit.thread916_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mlx4_cfg.i) #17
  %101 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %flags.i, align 4
  %and.i731 = and i32 %102, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i731)
  %tobool108.not = icmp eq i32 %and.i731, 0
  br i1 %tobool108.not, label %mlx4_init_fw.exit.thread916.if.end184_crit_edge, label %if.then109

mlx4_init_fw.exit.thread916.if.end184_crit_edge:  ; preds = %mlx4_init_fw.exit.thread916
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end184

mlx4_init_fw.exit:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %103 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %priv, align 8
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %104, align 4
  %dev11.i = getelementptr inbounds %struct.pci_dev, ptr %106, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev11.i, ptr noundef nonnull @.str.133) #20
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mlx4_cfg.i) #17
  br label %do.end102

do.end102:                                        ; preds = %mlx4_init_fw.exit, %mlx4_init_fw.exit.thread
  %retval.0.i729914 = phi i32 [ %retval.0.i729.ph, %mlx4_init_fw.exit.thread ], [ %call1.i, %mlx4_init_fw.exit ]
  %107 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %priv, align 8
  %109 = ptrtoint ptr %108 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %108, align 4
  %dev105 = getelementptr inbounds %struct.pci_dev, ptr %110, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev105, ptr noundef nonnull @.str.96) #20
  br label %err_mfunc

if.then109:                                       ; preds = %mlx4_init_fw.exit.thread916
  %tobool110.not = icmp eq ptr %dev_cap.01109, null
  br i1 %tobool110.not, label %if.then111, label %if.else168

if.then111:                                       ; preds = %if.then109
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %111 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %111, i32 noundef 3520, i32 noundef 504) #22
  %tobool113.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool113.not, label %if.then111.err_fw_crit_edge, label %if.end115

if.then111.err_fw_crit_edge:                      ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_fw

if.end115:                                        ; preds = %if.then111
  %call116 = call i32 @mlx4_QUERY_DEV_CAP(ptr noundef %priv, ptr noundef nonnull %call7.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call116)
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %if.end125, label %do.end121

do.end121:                                        ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #19
  %112 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %priv, align 8
  %114 = ptrtoint ptr %113 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %113, align 4
  %dev124 = getelementptr inbounds %struct.pci_dev, ptr %115, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev124, ptr noundef nonnull @.str.99) #20
  br label %err_fw

if.end125:                                        ; preds = %if.end115
  %116 = ptrtoint ptr %nvfs to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %nvfs, align 4
  %118 = ptrtoint ptr %arrayidx1.i744 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx1.i744, align 4
  %add.i733 = add i32 %119, %117
  %120 = ptrtoint ptr %arrayidx2.i746 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %arrayidx2.i746, align 4
  %add3.i = add i32 %add.i733, %121
  %flags2.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i, i32 0, i32 25
  %122 = ptrtoint ptr %flags2.i to i32
  call void @__asan_load8_noabort(i32 %122)
  %123 = load i64, ptr %flags2.i, align 8
  %and.i734 = and i64 %123, 262144
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i734)
  %tobool.not.i735 = icmp eq i64 %and.i734, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %add3.i)
  %cmp.i = icmp sgt i32 %add3.i, 63
  %or.cond.i = select i1 %tobool.not.i735, i1 %cmp.i, i1 false
  br i1 %or.cond.i, label %mlx4_check_dev_cap.exit, label %if.end129

mlx4_check_dev_cap.exit:                          ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #19
  %124 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %priv, align 8
  %126 = ptrtoint ptr %125 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %125, align 4
  %dev4.i = getelementptr inbounds %struct.pci_dev, ptr %127, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev4.i, ptr noundef nonnull @.str.149, i32 noundef %add3.i) #20
  br label %err_fw

if.end129:                                        ; preds = %if.end125
  %128 = ptrtoint ptr %flags2.i to i32
  call void @__asan_load8_noabort(i32 %128)
  %129 = load i64, ptr %flags2.i, align 8
  %and130 = and i64 %129, 131072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and130)
  %tobool131.not = icmp eq i64 %and130, 0
  br i1 %tobool131.not, label %if.then132, label %if.end129.if.end184_crit_edge

if.end129.if.end184_crit_edge:                    ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end184

if.then132:                                       ; preds = %if.end129
  %call133 = call fastcc i64 @mlx4_enable_sriov(ptr noundef %priv, ptr noundef %pdev, i8 noundef zeroext %conv, i32 noundef %existing_vfs.0, i32 noundef %reset_flow)
  %130 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %flags.i, align 4
  %and.i.i739 = and i32 %131, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i739)
  %tobool.not.i740 = icmp eq i32 %and.i.i739, 0
  br i1 %tobool.not.i740, label %if.then.i742, label %if.then132.mlx4_close_fw.exit_crit_edge

if.then132.mlx4_close_fw.exit_crit_edge:          ; preds = %if.then132
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_close_fw.exit

if.then.i742:                                     ; preds = %if.then132
  call void @__sanitizer_cov_trace_pc() #19
  %call1.i741 = call i32 @mlx4_UNMAP_FA(ptr noundef %priv) #17
  %132 = ptrtoint ptr %fw_icm.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %fw_icm.i.i, align 8
  call void @mlx4_free_icm(ptr noundef %priv, ptr noundef %133, i32 noundef 0) #17
  br label %mlx4_close_fw.exit

mlx4_close_fw.exit:                               ; preds = %if.then.i742, %if.then132.mlx4_close_fw.exit_crit_edge
  call void @mlx4_cmd_cleanup(ptr noundef %priv, i32 noundef 15) #17
  %conv134 = trunc i64 %call133 to i32
  %134 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %conv134, ptr %flags.i, align 4
  %and137 = lshr i32 %conv134, 4
  %and141 = lshr i32 %conv134, 2
  %135 = xor i32 %and137, %and141
  %136 = and i32 %135, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %136)
  %cmp147 = icmp eq i32 %136, 0
  br i1 %cmp147, label %if.end156, label %do.end152

do.end152:                                        ; preds = %mlx4_close_fw.exit
  call void @__sanitizer_cov_trace_pc() #19
  %137 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %priv, align 8
  %139 = ptrtoint ptr %138 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %138, align 4
  %dev155 = getelementptr inbounds %struct.pci_dev, ptr %140, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev155, ptr noundef nonnull @.str.102) #20
  br label %err_sriov

if.end156:                                        ; preds = %mlx4_close_fw.exit
  %call157 = call i32 @mlx4_reset(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call157)
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %if.end156.slave_start.backedge_crit_edge, label %do.end162

if.end156.slave_start.backedge_crit_edge:         ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #19
  br label %slave_start.backedge

do.end162:                                        ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #19
  %141 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %priv, align 8
  %143 = ptrtoint ptr %142 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %142, align 4
  %dev165 = getelementptr inbounds %struct.pci_dev, ptr %144, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev165, ptr noundef nonnull @.str.105) #20
  br label %err_sriov

if.else168:                                       ; preds = %if.then109
  %145 = call ptr @memset(ptr %dev_cap.01109, i32 0, i32 504)
  %call169 = call i32 @mlx4_QUERY_DEV_CAP(ptr noundef %priv, ptr noundef nonnull %dev_cap.01109) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call169)
  %tobool170.not = icmp eq i32 %call169, 0
  br i1 %tobool170.not, label %if.end178, label %do.end174

do.end174:                                        ; preds = %if.else168
  call void @__sanitizer_cov_trace_pc() #19
  %146 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %priv, align 8
  %148 = ptrtoint ptr %147 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %147, align 4
  %dev177 = getelementptr inbounds %struct.pci_dev, ptr %149, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev177, ptr noundef nonnull @.str.99) #20
  br label %err_fw

if.end178:                                        ; preds = %if.else168
  %150 = ptrtoint ptr %nvfs to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %nvfs, align 4
  %152 = ptrtoint ptr %arrayidx1.i744 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %arrayidx1.i744, align 4
  %add.i745 = add i32 %153, %151
  %154 = ptrtoint ptr %arrayidx2.i746 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %arrayidx2.i746, align 4
  %add3.i747 = add i32 %add.i745, %155
  %flags2.i748 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap.01109, i32 0, i32 25
  %156 = ptrtoint ptr %flags2.i748 to i32
  call void @__asan_load8_noabort(i32 %156)
  %157 = load i64, ptr %flags2.i748, align 8
  %and.i749 = and i64 %157, 262144
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i749)
  %tobool.not.i750 = icmp eq i64 %and.i749, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %add3.i747)
  %cmp.i751 = icmp sgt i32 %add3.i747, 63
  %or.cond.i752 = select i1 %tobool.not.i750, i1 %cmp.i751, i1 false
  br i1 %or.cond.i752, label %mlx4_check_dev_cap.exit756, label %if.end178.if.end184_crit_edge

if.end178.if.end184_crit_edge:                    ; preds = %if.end178
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end184

mlx4_check_dev_cap.exit756:                       ; preds = %if.end178
  call void @__sanitizer_cov_trace_pc() #19
  %158 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %priv, align 8
  %160 = ptrtoint ptr %159 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %159, align 4
  %dev4.i753 = getelementptr inbounds %struct.pci_dev, ptr %161, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev4.i753, ptr noundef nonnull @.str.149, i32 noundef %add3.i747) #20
  br label %err_fw

if.end184:                                        ; preds = %if.end178.if.end184_crit_edge, %if.end129.if.end184_crit_edge, %mlx4_init_fw.exit.thread916.if.end184_crit_edge
  %dev_cap.1 = phi ptr [ %call7.i.i, %if.end129.if.end184_crit_edge ], [ %dev_cap.01109, %mlx4_init_fw.exit.thread916.if.end184_crit_edge ], [ %dev_cap.01109, %if.end178.if.end184_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 65, ptr nonnull %adapter.i) #17
  %162 = call ptr @memset(ptr %adapter.i, i32 255, i32 65)
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %profile.i) #17
  %163 = call ptr @memset(ptr %profile.i, i32 255, i32 28)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %params.i) #17
  %164 = ptrtoint ptr %params.i to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 -1, ptr %params.i, align 4
  %165 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %flags.i, align 4
  %and.i.i758 = and i32 %166, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i758)
  %tobool.not.i759 = icmp eq i32 %and.i.i758, 0
  br i1 %tobool.not.i759, label %if.then.i762, label %if.else230.i

if.then.i762:                                     ; preds = %if.end184
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %167 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %167, i32 noundef 3520, i32 noundef 504) #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %168 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i452.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %168, i32 noundef 3520, i32 noundef 136) #22
  %tobool4.not.i760 = icmp eq ptr %call7.i.i.i, null
  %tobool5.not.i = icmp eq ptr %call7.i.i452.i, null
  %or.cond.i761 = select i1 %tobool4.not.i760, i1 true, i1 %tobool5.not.i
  br i1 %or.cond.i761, label %mlx4_init_hca.exit.thread931, label %if.end.i763

mlx4_init_hca.exit.thread931:                     ; preds = %if.then.i762
  call void @__sanitizer_cov_trace_pc() #19
  call void @kfree(ptr noundef %call7.i.i.i) #17
  call void @kfree(ptr noundef %call7.i.i452.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %params.i) #17
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %profile.i) #17
  call void @llvm.lifetime.end.p0(i64 65, ptr nonnull %adapter.i) #17
  br label %err_fw

if.end.i763:                                      ; preds = %if.then.i762
  %call7.i = call fastcc i32 @mlx4_dev_cap(ptr noundef %priv, ptr noundef nonnull %call7.i.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end11.i, label %do.end.i764

do.end.i764:                                      ; preds = %if.end.i763
  call void @__sanitizer_cov_trace_pc() #19
  %169 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %priv, align 8
  %171 = ptrtoint ptr %170 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %170, align 4
  %dev10.i = getelementptr inbounds %struct.pci_dev, ptr %172, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev10.i, ptr noundef nonnull @.str.168) #20
  br label %mlx4_init_hca.exit

if.end11.i:                                       ; preds = %if.end.i763
  %173 = load i32, ptr @mlx4_log_num_mgm_entry_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %173)
  %cmp.i.i = icmp slt i32 %173, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end11.i.if.else28.i.i_crit_edge

if.end11.i.if.else28.i.i_crit_edge:               ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else28.i.i

if.then.i.i:                                      ; preds = %if.end11.i
  %sub.i.i = sub i32 0, %173
  %and.i453.i = and i32 %sub.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i453.i)
  %tobool.not.i.i765 = icmp eq i32 %and.i453.i, 0
  br i1 %tobool.not.i.i765, label %if.then.i.i.if.end8.i.i_crit_edge, label %if.then1.i.i

if.then.i.i.if.end8.i.i_crit_edge:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8.i.i

if.then1.i.i:                                     ; preds = %if.then.i.i
  %174 = ptrtoint ptr %dmfs_high_steer_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %dmfs_high_steer_mode.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %175)
  %cmp2.i.i = icmp eq i32 %175, 4
  br i1 %cmp2.i.i, label %do.end.i.i766, label %if.else.i.i

do.end.i.i766:                                    ; preds = %if.then1.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %176 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %priv, align 8
  %178 = ptrtoint ptr %177 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %177, align 4
  %dev4.i.i = getelementptr inbounds %struct.pci_dev, ptr %179, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev4.i.i, ptr noundef nonnull @.str.253) #20
  br label %if.end8.i.i

if.else.i.i:                                      ; preds = %if.then1.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %180 = ptrtoint ptr %dmfs_high_steer_mode.i.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store i32 2, ptr %dmfs_high_steer_mode.i.i, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.else.i.i, %do.end.i.i766, %if.then.i.i.if.end8.i.i_crit_edge
  %.pr.i.i = load i32, ptr @mlx4_log_num_mgm_entry_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr.i.i)
  %cmp9.i.i = icmp slt i32 %.pr.i.i, 1
  br i1 %cmp9.i.i, label %land.lhs.true.i.i, label %if.end8.i.i.if.else28.i.i_crit_edge

if.end8.i.i.if.else28.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else28.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %flags2.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 25
  %181 = ptrtoint ptr %flags2.i.i to i32
  call void @__asan_load8_noabort(i32 %181)
  %182 = load i64, ptr %flags2.i.i, align 8
  %and10.i.i = and i64 %182, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and10.i.i)
  %tobool11.not.i.i = icmp eq i64 %and10.i.i, 0
  br i1 %tobool11.not.i.i, label %land.lhs.true.i.i.if.else28.i.i_crit_edge, label %land.lhs.true12.i.i

land.lhs.true.i.i.if.else28.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else28.i.i

land.lhs.true12.i.i:                              ; preds = %land.lhs.true.i.i
  %183 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %flags.i, align 4
  %and.i.i.i = and i32 %184, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool13.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool13.not.i.i, label %land.lhs.true12.i.i.land.lhs.true16.i.i_crit_edge, label %lor.lhs.false.i.i

land.lhs.true12.i.i.land.lhs.true16.i.i_crit_edge: ; preds = %land.lhs.true12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true16.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true12.i.i
  %fs_max_num_qp_per_entry.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 23
  %185 = ptrtoint ptr %fs_max_num_qp_per_entry.i.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %fs_max_num_qp_per_entry.i.i, align 4
  %187 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %priv, align 8
  %num_vfs.i.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %188, i32 0, i32 3
  %189 = ptrtoint ptr %num_vfs.i.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %num_vfs.i.i, align 4
  %add.i.i = add i32 %190, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %186, i32 %add.i.i)
  %cmp15.not.i.i = icmp slt i32 %186, %add.i.i
  br i1 %cmp15.not.i.i, label %lor.lhs.false.i.i.if.else28.i.i_crit_edge, label %lor.lhs.false.i.i.land.lhs.true16.i.i_crit_edge

lor.lhs.false.i.i.land.lhs.true16.i.i_crit_edge:  ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true16.i.i

lor.lhs.false.i.i.if.else28.i.i_crit_edge:        ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else28.i.i

land.lhs.true16.i.i:                              ; preds = %lor.lhs.false.i.i.land.lhs.true16.i.i_crit_edge, %land.lhs.true12.i.i.land.lhs.true16.i.i_crit_edge
  %fs_max_num_qp_per_entry17.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 23
  %191 = ptrtoint ptr %fs_max_num_qp_per_entry17.i.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %fs_max_num_qp_per_entry17.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %192)
  %cmp1.not.i.i.i = icmp sgt i32 %192, 24
  br i1 %cmp1.not.i.i.i, label %for.inc.i.i.i, label %land.lhs.true16.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge

land.lhs.true16.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge: ; preds = %land.lhs.true16.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %choose_log_fs_mgm_entry_size.exit130.i.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true16.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 56, i32 %192)
  %cmp1.not.1.i.i.i = icmp ugt i32 %192, 56
  br i1 %cmp1.not.1.i.i.i, label %for.inc.1.i.i.i, label %for.inc.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge

for.inc.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %choose_log_fs_mgm_entry_size.exit130.i.i

for.inc.1.i.i.i:                                  ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 120, i32 %192)
  %cmp1.not.2.i.i.i = icmp ugt i32 %192, 120
  br i1 %cmp1.not.2.i.i.i, label %for.inc.2.i.i.i, label %for.inc.1.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge

for.inc.1.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge: ; preds = %for.inc.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %choose_log_fs_mgm_entry_size.exit130.i.i

for.inc.2.i.i.i:                                  ; preds = %for.inc.1.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 248, i32 %192)
  %cmp1.not.3.i.i.i = icmp ugt i32 %192, 248
  br i1 %cmp1.not.3.i.i.i, label %for.inc.3.i.i.i, label %for.inc.2.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge

for.inc.2.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge: ; preds = %for.inc.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %choose_log_fs_mgm_entry_size.exit130.i.i

for.inc.3.i.i.i:                                  ; preds = %for.inc.2.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 504, i32 %192)
  %cmp1.not.4.i.i.i = icmp ugt i32 %192, 504
  br i1 %cmp1.not.4.i.i.i, label %for.inc.4.i.i.i, label %for.inc.3.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge

for.inc.3.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge: ; preds = %for.inc.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %choose_log_fs_mgm_entry_size.exit130.i.i

for.inc.4.i.i.i:                                  ; preds = %for.inc.3.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1016, i32 %192)
  %cmp1.not.5.i.i.i = icmp ugt i32 %192, 1016
  br i1 %cmp1.not.5.i.i.i, label %for.inc.4.i.i.i.if.else28.i.i_crit_edge, label %for.inc.4.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge

for.inc.4.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge: ; preds = %for.inc.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %choose_log_fs_mgm_entry_size.exit130.i.i

for.inc.4.i.i.i.if.else28.i.i_crit_edge:          ; preds = %for.inc.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else28.i.i

choose_log_fs_mgm_entry_size.exit130.i.i:         ; preds = %for.inc.4.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge, %for.inc.3.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge, %for.inc.2.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge, %for.inc.1.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge, %for.inc.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge, %land.lhs.true16.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge
  %spec.select.i129.i.i = phi i32 [ 7, %land.lhs.true16.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge ], [ 8, %for.inc.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge ], [ 9, %for.inc.1.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge ], [ 10, %for.inc.2.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge ], [ 11, %for.inc.3.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge ], [ 12, %for.inc.4.i.i.i.choose_log_fs_mgm_entry_size.exit130.i.i_crit_edge ]
  %193 = ptrtoint ptr %oper_log_mgm_entry_size.i.i to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %spec.select.i129.i.i, ptr %oper_log_mgm_entry_size.i.i, align 8
  %194 = ptrtoint ptr %steering_mode.i.i to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 2, ptr %steering_mode.i.i, align 8
  %195 = ptrtoint ptr %num_qp_per_mgm.i.i to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 %192, ptr %num_qp_per_mgm.i.i, align 4
  %fs_log_max_ucast_qp_range_size.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 22
  %196 = ptrtoint ptr %fs_log_max_ucast_qp_range_size.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %fs_log_max_ucast_qp_range_size.i.i, align 8
  %198 = ptrtoint ptr %fs_log_max_ucast_qp_range_size27.i.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 %197, ptr %fs_log_max_ucast_qp_range_size27.i.i, align 8
  br label %do.body73.i.i

if.else28.i.i:                                    ; preds = %for.inc.4.i.i.i.if.else28.i.i_crit_edge, %lor.lhs.false.i.i.if.else28.i.i_crit_edge, %land.lhs.true.i.i.if.else28.i.i_crit_edge, %if.end8.i.i.if.else28.i.i_crit_edge, %if.end11.i.if.else28.i.i_crit_edge
  %199 = ptrtoint ptr %dmfs_high_steer_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %dmfs_high_steer_mode.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %200)
  %cmp31.not.i.i = icmp eq i32 %200, 4
  br i1 %cmp31.not.i.i, label %if.else28.i.i.if.end35.i.i_crit_edge, label %if.then32.i.i

if.else28.i.i.if.end35.i.i_crit_edge:             ; preds = %if.else28.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end35.i.i

if.then32.i.i:                                    ; preds = %if.else28.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %201 = ptrtoint ptr %dmfs_high_steer_mode.i.i to i32
  call void @__asan_store4_noabort(i32 %201)
  store i32 3, ptr %dmfs_high_steer_mode.i.i, align 4
  br label %if.end35.i.i

if.end35.i.i:                                     ; preds = %if.then32.i.i, %if.else28.i.i.if.end35.i.i_crit_edge
  %202 = ptrtoint ptr %flags.i454.i to i32
  call void @__asan_load8_noabort(i32 %202)
  %203 = load i64, ptr %flags.i454.i, align 8
  %204 = and i64 %203, 6597069766656
  call void @__sanitizer_cov_trace_const_cmp8(i64 6597069766656, i64 %204)
  %.not.i.i = icmp eq i64 %204, 6597069766656
  br i1 %.not.i.i, label %if.then44.i.i, label %if.else47.i.i

if.then44.i.i:                                    ; preds = %if.end35.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %205 = ptrtoint ptr %steering_mode.i.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 1, ptr %steering_mode.i.i, align 8
  br label %if.end66.i.i

if.else47.i.i:                                    ; preds = %if.end35.i.i
  %206 = ptrtoint ptr %steering_mode.i.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 0, ptr %steering_mode.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %204)
  %207 = icmp eq i64 %204, 0
  br i1 %207, label %if.else47.i.i.if.end66.i.i_crit_edge, label %do.end61.i.i

if.else47.i.i.if.end66.i.i_crit_edge:             ; preds = %if.else47.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end66.i.i

do.end61.i.i:                                     ; preds = %if.else47.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %208 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %priv, align 8
  %210 = ptrtoint ptr %209 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %209, align 4
  %dev64.i.i = getelementptr inbounds %struct.pci_dev, ptr %211, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev64.i.i, ptr noundef nonnull @.str.256) #20
  br label %if.end66.i.i

if.end66.i.i:                                     ; preds = %do.end61.i.i, %if.else47.i.i.if.end66.i.i_crit_edge, %if.then44.i.i
  %212 = load i32, ptr @mlx4_log_num_mgm_entry_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %212)
  %cmp67.i.i = icmp sgt i32 %212, 0
  %spec.select.i.i = select i1 %cmp67.i.i, i32 %212, i32 10
  %213 = ptrtoint ptr %oper_log_mgm_entry_size.i.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store i32 %spec.select.i.i, ptr %oper_log_mgm_entry_size.i.i, align 8
  %call69.i.i = call i32 @mlx4_get_qp_per_mgm(ptr noundef %priv) #17
  %214 = ptrtoint ptr %num_qp_per_mgm.i.i to i32
  call void @__asan_store4_noabort(i32 %214)
  store i32 %call69.i.i, ptr %num_qp_per_mgm.i.i, align 4
  br label %do.body73.i.i

do.body73.i.i:                                    ; preds = %if.end66.i.i, %choose_log_fs_mgm_entry_size.exit130.i.i
  %215 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %215)
  %tobool74.not.i.i = icmp eq i32 %215, 0
  br i1 %tobool74.not.i.i, label %do.body73.i.i.choose_steering_mode.exit.i_crit_edge, label %do.end77.i.i

do.body73.i.i.choose_steering_mode.exit.i_crit_edge: ; preds = %do.body73.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %choose_steering_mode.exit.i

do.end77.i.i:                                     ; preds = %do.body73.i.i
  %216 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %priv, align 8
  %218 = ptrtoint ptr %217 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %217, align 4
  %dev80.i.i = getelementptr inbounds %struct.pci_dev, ptr %219, i32 0, i32 44
  %220 = ptrtoint ptr %steering_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %steering_mode.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %221)
  %222 = icmp ult i32 %221, 3
  br i1 %222, label %switch.lookup, label %do.end77.i.i.mlx4_steering_mode_str.exit.i.i_crit_edge

do.end77.i.i.mlx4_steering_mode_str.exit.i.i_crit_edge: ; preds = %do.end77.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_steering_mode_str.exit.i.i

switch.lookup:                                    ; preds = %do.end77.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %switch.gep = getelementptr inbounds [3 x ptr], ptr @switch.table.mlx4_load_one, i32 0, i32 %221
  %223 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %223)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %mlx4_steering_mode_str.exit.i.i

mlx4_steering_mode_str.exit.i.i:                  ; preds = %switch.lookup, %do.end77.i.i.mlx4_steering_mode_str.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %switch.load, %switch.lookup ], [ @.str.264, %do.end77.i.i.mlx4_steering_mode_str.exit.i.i_crit_edge ]
  %224 = ptrtoint ptr %oper_log_mgm_entry_size.i.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %oper_log_mgm_entry_size.i.i, align 8
  %226 = load i32, ptr @mlx4_log_num_mgm_entry_size, align 4
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev80.i.i, ptr noundef nonnull @.str.259, ptr noundef nonnull %retval.0.i.i.i, i32 noundef %225, i32 noundef %226) #20
  br label %choose_steering_mode.exit.i

choose_steering_mode.exit.i:                      ; preds = %mlx4_steering_mode_str.exit.i.i, %do.body73.i.i.choose_steering_mode.exit.i_crit_edge
  %227 = ptrtoint ptr %steering_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %steering_mode.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %228)
  %cmp.i456.i = icmp eq i32 %228, 2
  br i1 %cmp.i456.i, label %land.lhs.true.i460.i, label %choose_steering_mode.exit.i.if.else.i461.i_crit_edge

choose_steering_mode.exit.i.if.else.i461.i_crit_edge: ; preds = %choose_steering_mode.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i461.i

land.lhs.true.i460.i:                             ; preds = %choose_steering_mode.exit.i
  %flags2.i457.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 25
  %229 = ptrtoint ptr %flags2.i457.i to i32
  call void @__asan_load8_noabort(i32 %229)
  %230 = load i64, ptr %flags2.i457.i, align 8
  %and.i458.i = and i64 %230, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i458.i)
  %tobool.not.i459.i = icmp eq i64 %and.i458.i, 0
  br i1 %tobool.not.i459.i, label %land.lhs.true.i460.i.if.else.i461.i_crit_edge, label %land.lhs.true.i460.i.do.body.i.i_crit_edge

land.lhs.true.i460.i.do.body.i.i_crit_edge:       ; preds = %land.lhs.true.i460.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

land.lhs.true.i460.i.if.else.i461.i_crit_edge:    ; preds = %land.lhs.true.i460.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i461.i

if.else.i461.i:                                   ; preds = %land.lhs.true.i460.i.if.else.i461.i_crit_edge, %choose_steering_mode.exit.i.if.else.i461.i_crit_edge
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %if.else.i461.i, %land.lhs.true.i460.i.do.body.i.i_crit_edge
  %cmp10.i.i = phi ptr [ @.str.268, %if.else.i461.i ], [ @.str.267, %land.lhs.true.i460.i.do.body.i.i_crit_edge ]
  %.sink.i.i = phi i32 [ 0, %if.else.i461.i ], [ 1, %land.lhs.true.i460.i.do.body.i.i_crit_edge ]
  %231 = ptrtoint ptr %tunnel_offload_mode.i.i to i32
  call void @__asan_store4_noabort(i32 %231)
  store i32 %.sink.i.i, ptr %tunnel_offload_mode.i.i, align 8
  %232 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %232)
  %tobool4.not.i.i = icmp eq i32 %232, 0
  br i1 %tobool4.not.i.i, label %do.body.i.i.choose_tunnel_offload_mode.exit.i_crit_edge, label %do.end.i462.i

do.body.i.i.choose_tunnel_offload_mode.exit.i_crit_edge: ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %choose_tunnel_offload_mode.exit.i

do.end.i462.i:                                    ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %233 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %priv, align 8
  %235 = ptrtoint ptr %234 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load ptr, ptr %234, align 4
  %dev7.i.i = getelementptr inbounds %struct.pci_dev, ptr %236, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev7.i.i, ptr noundef nonnull @.str.265, ptr noundef nonnull %cmp10.i.i) #20
  br label %choose_tunnel_offload_mode.exit.i

choose_tunnel_offload_mode.exit.i:                ; preds = %do.end.i462.i, %do.body.i.i.choose_tunnel_offload_mode.exit.i_crit_edge
  %237 = ptrtoint ptr %dmfs_high_steer_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %dmfs_high_steer_mode.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %238)
  %cmp.i767 = icmp eq i32 %238, 2
  br i1 %cmp.i767, label %land.lhs.true.i, label %choose_tunnel_offload_mode.exit.i.if.end16.i_crit_edge

choose_tunnel_offload_mode.exit.i.if.end16.i_crit_edge: ; preds = %choose_tunnel_offload_mode.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16.i

land.lhs.true.i:                                  ; preds = %choose_tunnel_offload_mode.exit.i
  %239 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %flags.i, align 4
  %and.i464.i = and i32 %240, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i464.i)
  %tobool13.not.i = icmp eq i32 %and.i464.i, 0
  br i1 %tobool13.not.i, label %land.lhs.true.i.if.end16.i_crit_edge, label %if.then14.i

land.lhs.true.i.if.end16.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16.i

if.then14.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  %241 = ptrtoint ptr %function_caps.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %function_caps.i, align 8
  %or.i = or i32 %242, 4
  store i32 %or.i, ptr %function_caps.i, align 8
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then14.i, %land.lhs.true.i.if.end16.i_crit_edge, %choose_tunnel_offload_mode.exit.i.if.end16.i_crit_edge
  %call17.i = call i32 @mlx4_get_phys_port_id(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17.i)
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %if.end16.i.if.end26.i_crit_edge, label %do.end22.i

if.end16.i.if.end26.i_crit_edge:                  ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end26.i

do.end22.i:                                       ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #19
  %243 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %priv, align 8
  %245 = ptrtoint ptr %244 to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %244, align 4
  %dev25.i = getelementptr inbounds %struct.pci_dev, ptr %246, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev25.i, ptr noundef nonnull @.str.171) #20
  br label %if.end26.i

if.end26.i:                                       ; preds = %do.end22.i, %if.end16.i.if.end26.i_crit_edge
  %247 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %flags.i, align 4
  %and.i466.i = and i32 %248, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i466.i)
  %tobool28.not.i = icmp eq i32 %and.i466.i, 0
  br i1 %tobool28.not.i, label %if.end26.i.if.end30.i_crit_edge, label %if.then29.i

if.end26.i.if.end30.i_crit_edge:                  ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30.i

if.then29.i:                                      ; preds = %if.end26.i
  %249 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load i32, ptr %num_ports103.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %250)
  %cmp.not24.i.i = icmp slt i32 %250, 1
  br i1 %cmp.not24.i.i, label %if.then29.i.if.end30.i_crit_edge, label %if.then29.i.for.body.i.i_crit_edge

if.then29.i.for.body.i.i_crit_edge:               ; preds = %if.then29.i
  br label %for.body.i.i

if.then29.i.if.end30.i_crit_edge:                 ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30.i

for.body.i.i:                                     ; preds = %if.end.i.i769.for.body.i.i_crit_edge, %if.then29.i.for.body.i.i_crit_edge
  %i.025.i.i = phi i32 [ %inc.i.i, %if.end.i.i769.for.body.i.i_crit_edge ], [ 1, %if.then29.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 73, i32 %i.025.i.i
  %251 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %252)
  %cmp2.i467.i = icmp eq i32 %252, 2
  br i1 %cmp2.i467.i, label %if.then.i468.i, label %for.body.i.i.if.end.i.i769_crit_edge

for.body.i.i.if.end.i.i769_crit_edge:             ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i.i769

if.then.i468.i:                                   ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i768 = call i32 @mlx4_get_slave_num_gids(ptr noundef %priv, i32 noundef 0, i32 noundef %i.025.i.i) #17
  br label %if.end.i.i769

if.end.i.i769:                                    ; preds = %if.then.i468.i, %for.body.i.i.if.end.i.i769_crit_edge
  %.sink.i469.i = phi i32 [ %call.i.i768, %if.then.i468.i ], [ 1, %for.body.i.i.if.end.i.i769_crit_edge ]
  %253 = getelementptr %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 8, i32 %i.025.i.i
  %254 = ptrtoint ptr %253 to i32
  call void @__asan_store4_noabort(i32 %254)
  store i32 %.sink.i469.i, ptr %253, align 4
  %arrayidx8.i.i = getelementptr %struct.mlx4_dev, ptr %priv, i32 0, i32 4, i32 1, i32 %i.025.i.i
  %255 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load i32, ptr %arrayidx8.i.i, align 4
  %sub.i470.i = add i32 %256, -1
  %arrayidx10.i.i = getelementptr %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 9, i32 %i.025.i.i
  %257 = ptrtoint ptr %arrayidx10.i.i to i32
  call void @__asan_store4_noabort(i32 %257)
  store i32 %sub.i470.i, ptr %arrayidx10.i.i, align 4
  %inc.i.i = add i32 %i.025.i.i, 1
  %258 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %num_ports103.i.i, align 4
  %cmp.not.i.i = icmp sgt i32 %inc.i.i, %259
  br i1 %cmp.not.i.i, label %if.end.i.i769.if.end30.i_crit_edge, label %if.end.i.i769.for.body.i.i_crit_edge

if.end.i.i769.for.body.i.i_crit_edge:             ; preds = %if.end.i.i769
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i

if.end.i.i769.if.end30.i_crit_edge:               ; preds = %if.end.i.i769
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.end.i.i769.if.end30.i_crit_edge, %if.then29.i.if.end30.i_crit_edge, %if.end26.i.if.end30.i_crit_edge
  call void @__asan_load8_noabort(i32 ptrtoint (ptr @elfcorehdr_addr to i32))
  %260 = load i64, ptr @elfcorehdr_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %260)
  %cmp.i.i.not.i = icmp eq i64 %260, -1
  br i1 %cmp.i.i.not.i, label %if.else.i, label %do.end35.i

do.end35.i:                                       ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #19
  %261 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %priv, align 8
  %263 = ptrtoint ptr %262 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %262, align 4
  %dev38.i = getelementptr inbounds %struct.pci_dev, ptr %264, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev38.i, ptr noundef nonnull @.str.174) #20
  %265 = call ptr @memcpy(ptr %profile.i, ptr @low_mem_profile, i32 28)
  br label %if.end39.i

if.else.i:                                        ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #19
  %266 = call ptr @memcpy(ptr %profile.i, ptr @default_profile, i32 28)
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.else.i, %do.end35.i
  %267 = ptrtoint ptr %steering_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %steering_mode.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %268)
  %cmp41.i = icmp eq i32 %268, 2
  br i1 %cmp41.i, label %if.then42.i, label %if.end39.i.if.end43.i_crit_edge

if.end39.i.if.end43.i_crit_edge:                  ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43.i

if.then42.i:                                      ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #19
  %269 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %269)
  store i32 131072, ptr %48, align 4
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.then42.i, %if.end39.i.if.end43.i_crit_edge
  %call44.i = call i64 @mlx4_make_profile(ptr noundef %priv, ptr noundef nonnull %profile.i, ptr noundef nonnull %call7.i.i.i, ptr noundef nonnull %call7.i.i452.i) #17
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call44.i)
  %cmp45.i = icmp slt i64 %call44.i, 0
  br i1 %cmp45.i, label %if.then46.i, label %if.end47.i

if.then46.i:                                      ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i = trunc i64 %call44.i to i32
  br label %mlx4_init_hca.exit

if.end47.i:                                       ; preds = %if.end43.i
  %270 = ptrtoint ptr %num_uars.i.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %num_uars.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %271)
  %tobool.not.i.i472.i = icmp eq i32 %271, 0
  %272 = call i32 @llvm.ctlz.i32(i32 %271, i1 true) #17, !range !1175
  %273 = trunc i32 %272 to i8
  %274 = xor i8 %273, 31
  %conv94.i = select i1 %tobool.not.i.i472.i, i8 -1, i8 %274
  %log_uar_sz95.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 23
  %275 = ptrtoint ptr %log_uar_sz95.i to i32
  call void @__asan_store1_noabort(i32 %275)
  store i8 %conv94.i, ptr %log_uar_sz95.i, align 1
  %uar_page_sz96.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 25
  %276 = ptrtoint ptr %uar_page_sz96.i to i32
  call void @__asan_store1_noabort(i32 %276)
  store i8 0, ptr %uar_page_sz96.i, align 1
  %mw_enabled.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 24
  %277 = ptrtoint ptr %mw_enabled.i to i32
  call void @__asan_store1_noabort(i32 %277)
  store i8 0, ptr %mw_enabled.i, align 2
  %278 = ptrtoint ptr %flags.i454.i to i32
  call void @__asan_load8_noabort(i32 %278)
  %279 = load i64, ptr %flags.i454.i, align 8
  %and.i771 = and i64 %279, 65536
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i771)
  %tobool99.not.i = icmp eq i64 %and.i771, 0
  br i1 %tobool99.not.i, label %lor.lhs.false100.i, label %if.end47.i.if.then104.i_crit_edge

if.end47.i.if.then104.i_crit_edge:                ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then104.i

lor.lhs.false100.i:                               ; preds = %if.end47.i
  %280 = ptrtoint ptr %bmme_flags.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %bmme_flags.i, align 8
  %and102.i = and i32 %281, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and102.i)
  %tobool103.not.i = icmp eq i32 %and102.i, 0
  br i1 %tobool103.not.i, label %lor.lhs.false100.i.if.end106.i_crit_edge, label %lor.lhs.false100.i.if.then104.i_crit_edge

lor.lhs.false100.i.if.then104.i_crit_edge:        ; preds = %lor.lhs.false100.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then104.i

lor.lhs.false100.i.if.end106.i_crit_edge:         ; preds = %lor.lhs.false100.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end106.i

if.then104.i:                                     ; preds = %lor.lhs.false100.i.if.then104.i_crit_edge, %if.end47.i.if.then104.i_crit_edge
  %282 = ptrtoint ptr %mw_enabled.i to i32
  call void @__asan_store1_noabort(i32 %282)
  store i8 -128, ptr %mw_enabled.i, align 2
  br label %if.end106.i

if.end106.i:                                      ; preds = %if.then104.i, %lor.lhs.false100.i.if.end106.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %aux_pages.i.i) #17
  %283 = ptrtoint ptr %aux_pages.i.i to i32
  call void @__asan_store8_noabort(i32 %283)
  store i64 -1, ptr %aux_pages.i.i, align 8, !annotation !1173
  %call1.i.i772 = call i32 @mlx4_SET_ICM_SIZE(ptr noundef %priv, i64 noundef %call44.i, ptr noundef nonnull %aux_pages.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i772)
  %tobool.not.i475.i = icmp eq i32 %call1.i.i772, 0
  br i1 %tobool.not.i475.i, label %do.body3.i.i, label %do.end.i476.i

do.end.i476.i:                                    ; preds = %if.end106.i
  call void @__sanitizer_cov_trace_pc() #19
  %284 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %priv, align 8
  %286 = ptrtoint ptr %285 to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %285, align 4
  %dev2.i.i = getelementptr inbounds %struct.pci_dev, ptr %287, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev2.i.i, ptr noundef nonnull @.str.269) #20
  br label %mlx4_init_icm.exit.thread.i

do.body3.i.i:                                     ; preds = %if.end106.i
  %288 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %288)
  %tobool4.not.i477.i = icmp eq i32 %288, 0
  br i1 %tobool4.not.i477.i, label %do.body3.i.i.do.end14.i.i_crit_edge, label %do.end8.i.i

do.body3.i.i.do.end14.i.i_crit_edge:              ; preds = %do.body3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end14.i.i

do.end8.i.i:                                      ; preds = %do.body3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %289 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %priv, align 8
  %291 = ptrtoint ptr %290 to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %290, align 4
  %dev11.i.i = getelementptr inbounds %struct.pci_dev, ptr %292, i32 0, i32 44
  %shr.i.i = lshr i64 %call44.i, 10
  %293 = ptrtoint ptr %aux_pages.i.i to i32
  call void @__asan_load8_noabort(i32 %293)
  %294 = load i64, ptr %aux_pages.i.i, align 8
  %shl.i.i = shl i64 %294, 2
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev11.i.i, ptr noundef nonnull @.str.272, i64 noundef %shr.i.i, i64 noundef %shl.i.i) #20
  br label %do.end14.i.i

do.end14.i.i:                                     ; preds = %do.end8.i.i, %do.body3.i.i.do.end14.i.i_crit_edge
  %295 = ptrtoint ptr %aux_pages.i.i to i32
  call void @__asan_load8_noabort(i32 %295)
  %296 = load i64, ptr %aux_pages.i.i, align 8
  %conv.i.i773 = trunc i64 %296 to i32
  %call15.i.i = call ptr @mlx4_alloc_icm(ptr noundef %priv, i32 noundef %conv.i.i773, i32 noundef 1060034, i32 noundef 0) #17
  %297 = ptrtoint ptr %aux_icm.i.i to i32
  call void @__asan_store4_noabort(i32 %297)
  store ptr %call15.i.i, ptr %aux_icm.i.i, align 4
  %tobool18.not.i.i = icmp eq ptr %call15.i.i, null
  br i1 %tobool18.not.i.i, label %do.end22.i.i, label %if.end26.i.i

do.end22.i.i:                                     ; preds = %do.end14.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %298 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %priv, align 8
  %300 = ptrtoint ptr %299 to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %299, align 4
  %dev25.i.i = getelementptr inbounds %struct.pci_dev, ptr %301, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev25.i.i, ptr noundef nonnull @.str.275) #20
  br label %mlx4_init_icm.exit.thread.i

if.end26.i.i:                                     ; preds = %do.end14.i.i
  %call29.i.i = call i32 @mlx4_MAP_ICM_AUX(ptr noundef %priv, ptr noundef nonnull %call15.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i)
  %tobool30.not.i.i = icmp eq i32 %call29.i.i, 0
  br i1 %tobool30.not.i.i, label %if.end38.i.i, label %do.end34.i.i

do.end34.i.i:                                     ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %302 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load ptr, ptr %priv, align 8
  %304 = ptrtoint ptr %303 to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %303, align 4
  %dev37.i.i = getelementptr inbounds %struct.pci_dev, ptr %305, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev37.i.i, ptr noundef nonnull @.str.278) #20
  br label %err_free_aux.i.i

if.end38.i.i:                                     ; preds = %if.end26.i.i
  %cmpt_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 9
  %306 = ptrtoint ptr %cmpt_base.i.i to i32
  call void @__asan_load8_noabort(i32 %306)
  %307 = load i64, ptr %cmpt_base.i.i, align 8
  %cmpt_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 50
  %308 = ptrtoint ptr %cmpt_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %cmpt_entry_sz.i.i, align 8
  %310 = ptrtoint ptr %num_qps.i.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %num_qps.i.i, align 4
  %312 = ptrtoint ptr %reserved_qps_cnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %reserved_qps_cnt.i.i.i, align 8
  %call2.i.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %cmpt_table.i.i.i, i64 noundef %307, i32 noundef %309, i32 noundef %311, i32 noundef %313, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i.i)
  %tobool.not.i.i478.i = icmp eq i32 %call2.i.i.i, 0
  br i1 %tobool.not.i.i478.i, label %if.end.i.i.i, label %if.end38.i.i.do.end44.i.i_crit_edge

if.end38.i.i.do.end44.i.i_crit_edge:              ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end44.i.i

if.end.i.i.i:                                     ; preds = %if.end38.i.i
  %conv5.i.i.i = sext i32 %309 to i64
  %shl6.i.i.i = shl nsw i64 %conv5.i.i.i, 24
  %add7.i.i.i = add i64 %shl6.i.i.i, %307
  %314 = ptrtoint ptr %num_srqs.i.i to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %num_srqs.i.i, align 4
  %316 = ptrtoint ptr %reserved_srqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %reserved_srqs.i.i.i, align 8
  %call10.i.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %cmpt_table3.i.i.i, i64 noundef %add7.i.i.i, i32 noundef %309, i32 noundef %315, i32 noundef %317, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i.i)
  %tobool11.not.i.i.i = icmp eq i32 %call10.i.i.i, 0
  br i1 %tobool11.not.i.i.i, label %if.end13.i.i.i, label %if.end.i.i.i.err_qp.i.i.i_crit_edge

if.end.i.i.i.err_qp.i.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_qp.i.i.i

if.end13.i.i.i:                                   ; preds = %if.end.i.i.i
  %mul15.i.i.i = shl i32 %309, 1
  %conv16.i.i.i = sext i32 %mul15.i.i.i to i64
  %shl17.i.i.i = shl nsw i64 %conv16.i.i.i, 24
  %add18.i.i.i = add i64 %shl17.i.i.i, %307
  %318 = ptrtoint ptr %num_cqs.i.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load i32, ptr %num_cqs.i.i, align 4
  %320 = ptrtoint ptr %reserved_cqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load i32, ptr %reserved_cqs.i.i.i, align 4
  %call21.i.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %cmpt_table14.i.i.i, i64 noundef %add18.i.i.i, i32 noundef %309, i32 noundef %319, i32 noundef %321, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i.i.i)
  %tobool22.not.i.i.i = icmp eq i32 %call21.i.i.i, 0
  br i1 %tobool22.not.i.i.i, label %if.end24.i.i.i, label %if.end13.i.i.i.err_srq.i.i.i_crit_edge

if.end13.i.i.i.err_srq.i.i.i_crit_edge:           ; preds = %if.end13.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_srq.i.i.i

if.end24.i.i.i:                                   ; preds = %if.end13.i.i.i
  %322 = ptrtoint ptr %num_phys_eqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load i32, ptr %num_phys_eqs.i.i.i, align 8
  %mul26.i.i.i = mul i32 %309, 3
  %conv27.i.i.i = sext i32 %mul26.i.i.i to i64
  %shl28.i.i.i = shl nsw i64 %conv27.i.i.i, 24
  %add29.i.i.i = add i64 %shl28.i.i.i, %307
  %call30.i.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %cmpt_table25.i.i.i, i64 noundef %add29.i.i.i, i32 noundef %309, i32 noundef %323, i32 noundef %323, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i.i.i)
  %tobool31.not.i.i.i = icmp eq i32 %call30.i.i.i, 0
  br i1 %tobool31.not.i.i.i, label %if.end48.i.i, label %err_cq.i.i.i

err_cq.i.i.i:                                     ; preds = %if.end24.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %cmpt_table14.i.i.i) #17
  br label %err_srq.i.i.i

err_srq.i.i.i:                                    ; preds = %err_cq.i.i.i, %if.end13.i.i.i.err_srq.i.i.i_crit_edge
  %err.0.i.i.i = phi i32 [ %call21.i.i.i, %if.end13.i.i.i.err_srq.i.i.i_crit_edge ], [ %call30.i.i.i, %err_cq.i.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %cmpt_table3.i.i.i) #17
  br label %err_qp.i.i.i

err_qp.i.i.i:                                     ; preds = %err_srq.i.i.i, %if.end.i.i.i.err_qp.i.i.i_crit_edge
  %err.1.i.i.i = phi i32 [ %call10.i.i.i, %if.end.i.i.i.err_qp.i.i.i_crit_edge ], [ %err.0.i.i.i, %err_srq.i.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %cmpt_table.i.i.i) #17
  br label %do.end44.i.i

do.end44.i.i:                                     ; preds = %err_qp.i.i.i, %if.end38.i.i.do.end44.i.i_crit_edge
  %retval.0.i.ph.i.i = phi i32 [ %err.1.i.i.i, %err_qp.i.i.i ], [ %call2.i.i.i, %if.end38.i.i.do.end44.i.i_crit_edge ]
  %324 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load ptr, ptr %priv, align 8
  %326 = ptrtoint ptr %325 to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %325, align 4
  %dev47.i.i = getelementptr inbounds %struct.pci_dev, ptr %327, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev47.i.i, ptr noundef nonnull @.str.281) #20
  br label %err_unmap_aux.i.i

if.end48.i.i:                                     ; preds = %if.end24.i.i.i
  %328 = ptrtoint ptr %num_phys_eqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load i32, ptr %num_phys_eqs.i.i.i, align 8
  %eqc_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 6
  %330 = ptrtoint ptr %eqc_base.i.i to i32
  call void @__asan_load8_noabort(i32 %330)
  %331 = load i64, ptr %eqc_base.i.i, align 8
  %eqc_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 48
  %332 = ptrtoint ptr %eqc_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %eqc_entry_sz.i.i, align 8
  %call49.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %table.i.i, i64 noundef %331, i32 noundef %333, i32 noundef %329, i32 noundef %329, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49.i.i)
  %tobool50.not.i.i = icmp eq i32 %call49.i.i, 0
  br i1 %tobool50.not.i.i, label %if.end58.i.i, label %do.end54.i.i

do.end54.i.i:                                     ; preds = %if.end48.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %334 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %priv, align 8
  %336 = ptrtoint ptr %335 to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %335, align 4
  %dev57.i.i = getelementptr inbounds %struct.pci_dev, ptr %337, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev57.i.i, ptr noundef nonnull @.str.284) #20
  br label %err_unmap_cmpt.i.i

if.end58.i.i:                                     ; preds = %if.end48.i.i
  %338 = ptrtoint ptr %reserved_mtts.i.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %reserved_mtts.i.i, align 4
  %340 = ptrtoint ptr %mtt_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %mtt_entry_sz.i.i, align 4
  %mul.i.i = mul i32 %341, %339
  %add.i479.i = add i32 %mul.i.i, 127
  %and.i480.i = and i32 %add.i479.i, -128
  %div.i.i = sdiv i32 %and.i480.i, %341
  store i32 %div.i.i, ptr %reserved_mtts.i.i, align 4
  %mtt_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 10
  %342 = ptrtoint ptr %mtt_base.i.i to i32
  call void @__asan_load8_noabort(i32 %342)
  %343 = load i64, ptr %mtt_base.i.i, align 8
  %344 = ptrtoint ptr %num_mtts.i.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %num_mtts.i.i, align 4
  %call72.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %mtt_table.i.i, i64 noundef %343, i32 noundef %341, i32 noundef %345, i32 noundef %div.i.i, i32 noundef 1, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72.i.i)
  %tobool73.not.i.i = icmp eq i32 %call72.i.i, 0
  br i1 %tobool73.not.i.i, label %if.end81.i.i, label %do.end77.i482.i

do.end77.i482.i:                                  ; preds = %if.end58.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %346 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %priv, align 8
  %348 = ptrtoint ptr %347 to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load ptr, ptr %347, align 4
  %dev80.i481.i = getelementptr inbounds %struct.pci_dev, ptr %349, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev80.i481.i, ptr noundef nonnull @.str.287) #20
  br label %err_unmap_eq.i.i

if.end81.i.i:                                     ; preds = %if.end58.i.i
  %dmpt_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 8
  %350 = ptrtoint ptr %dmpt_base.i.i to i32
  call void @__asan_load8_noabort(i32 %350)
  %351 = load i64, ptr %dmpt_base.i.i, align 8
  %dmpt_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 49
  %352 = ptrtoint ptr %dmpt_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load i32, ptr %dmpt_entry_sz.i.i, align 4
  %354 = ptrtoint ptr %num_mpts.i502.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load i32, ptr %num_mpts.i502.i, align 8
  %356 = ptrtoint ptr %reserved_mrws.i.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %reserved_mrws.i.i, align 8
  %call85.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %dmpt_table.i.i, i64 noundef %351, i32 noundef %353, i32 noundef %355, i32 noundef %357, i32 noundef 1, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call85.i.i)
  %tobool86.not.i.i = icmp eq i32 %call85.i.i, 0
  br i1 %tobool86.not.i.i, label %if.end94.i.i, label %do.end90.i.i

do.end90.i.i:                                     ; preds = %if.end81.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %358 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load ptr, ptr %priv, align 8
  %360 = ptrtoint ptr %359 to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load ptr, ptr %359, align 4
  %dev93.i.i = getelementptr inbounds %struct.pci_dev, ptr %361, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev93.i.i, ptr noundef nonnull @.str.290) #20
  br label %err_unmap_mtt.i.i

if.end94.i.i:                                     ; preds = %if.end81.i.i
  %362 = ptrtoint ptr %call7.i.i452.i to i32
  call void @__asan_load8_noabort(i32 %362)
  %363 = load i64, ptr %call7.i.i452.i, align 8
  %qpc_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 42
  %364 = ptrtoint ptr %qpc_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load i32, ptr %qpc_entry_sz.i.i, align 8
  %366 = ptrtoint ptr %num_qps.i.i to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load i32, ptr %num_qps.i.i, align 4
  %368 = ptrtoint ptr %reserved_qps_cnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load i32, ptr %reserved_qps_cnt.i.i.i, align 8
  %call98.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %qp_table95.i.i, i64 noundef %363, i32 noundef %365, i32 noundef %367, i32 noundef %369, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call98.i.i)
  %tobool99.not.i.i = icmp eq i32 %call98.i.i, 0
  br i1 %tobool99.not.i.i, label %if.end107.i.i, label %do.end103.i.i

do.end103.i.i:                                    ; preds = %if.end94.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %370 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load ptr, ptr %priv, align 8
  %372 = ptrtoint ptr %371 to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %371, align 4
  %dev106.i.i = getelementptr inbounds %struct.pci_dev, ptr %373, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev106.i.i, ptr noundef nonnull @.str.293) #20
  br label %err_unmap_dmpt.i.i

if.end107.i.i:                                    ; preds = %if.end94.i.i
  %auxc_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 2
  %374 = ptrtoint ptr %auxc_base.i.i to i32
  call void @__asan_load8_noabort(i32 %374)
  %375 = load i64, ptr %auxc_base.i.i, align 8
  %aux_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 45
  %376 = ptrtoint ptr %aux_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load i32, ptr %aux_entry_sz.i.i, align 4
  %378 = ptrtoint ptr %num_qps.i.i to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load i32, ptr %num_qps.i.i, align 4
  %380 = ptrtoint ptr %reserved_qps_cnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load i32, ptr %reserved_qps_cnt.i.i.i, align 8
  %call114.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %auxc_table.i.i, i64 noundef %375, i32 noundef %377, i32 noundef %379, i32 noundef %381, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114.i.i)
  %tobool115.not.i.i = icmp eq i32 %call114.i.i, 0
  br i1 %tobool115.not.i.i, label %if.end123.i.i, label %do.end119.i.i

do.end119.i.i:                                    ; preds = %if.end107.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %382 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load ptr, ptr %priv, align 8
  %384 = ptrtoint ptr %383 to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load ptr, ptr %383, align 4
  %dev122.i.i = getelementptr inbounds %struct.pci_dev, ptr %385, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev122.i.i, ptr noundef nonnull @.str.296) #20
  br label %err_unmap_qp.i.i

if.end123.i.i:                                    ; preds = %if.end107.i.i
  %altc_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 3
  %386 = ptrtoint ptr %altc_base.i.i to i32
  call void @__asan_load8_noabort(i32 %386)
  %387 = load i64, ptr %altc_base.i.i, align 8
  %altc_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 44
  %388 = ptrtoint ptr %altc_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load i32, ptr %altc_entry_sz.i.i, align 8
  %390 = ptrtoint ptr %num_qps.i.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load i32, ptr %num_qps.i.i, align 4
  %392 = ptrtoint ptr %reserved_qps_cnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %reserved_qps_cnt.i.i.i, align 8
  %call130.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %altc_table.i.i, i64 noundef %387, i32 noundef %389, i32 noundef %391, i32 noundef %393, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call130.i.i)
  %tobool131.not.i.i = icmp eq i32 %call130.i.i, 0
  br i1 %tobool131.not.i.i, label %if.end139.i.i, label %do.end135.i.i

do.end135.i.i:                                    ; preds = %if.end123.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %394 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %394)
  %395 = load ptr, ptr %priv, align 8
  %396 = ptrtoint ptr %395 to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load ptr, ptr %395, align 4
  %dev138.i.i = getelementptr inbounds %struct.pci_dev, ptr %397, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev138.i.i, ptr noundef nonnull @.str.299) #20
  br label %err_unmap_auxc.i.i

if.end139.i.i:                                    ; preds = %if.end123.i.i
  %rdmarc_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 1
  %398 = ptrtoint ptr %rdmarc_base.i.i to i32
  call void @__asan_load8_noabort(i32 %398)
  %399 = load i64, ptr %rdmarc_base.i.i, align 8
  %rdmarc_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 43
  %400 = ptrtoint ptr %rdmarc_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load i32, ptr %rdmarc_entry_sz.i.i, align 4
  %402 = ptrtoint ptr %rdmarc_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %rdmarc_shift.i.i, align 8
  %shl142.i.i = shl i32 %401, %403
  %404 = ptrtoint ptr %num_qps.i.i to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %num_qps.i.i, align 4
  %406 = ptrtoint ptr %reserved_qps_cnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load i32, ptr %reserved_qps_cnt.i.i.i, align 8
  %call148.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %rdmarc_table.i.i, i64 noundef %399, i32 noundef %shl142.i.i, i32 noundef %405, i32 noundef %407, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call148.i.i)
  %tobool149.not.i.i = icmp eq i32 %call148.i.i, 0
  br i1 %tobool149.not.i.i, label %if.end157.i.i, label %do.end153.i.i

do.end153.i.i:                                    ; preds = %if.end139.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %408 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load ptr, ptr %priv, align 8
  %410 = ptrtoint ptr %409 to i32
  call void @__asan_load4_noabort(i32 %410)
  %411 = load ptr, ptr %409, align 4
  %dev156.i.i = getelementptr inbounds %struct.pci_dev, ptr %411, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev156.i.i, ptr noundef nonnull @.str.302) #20
  br label %err_unmap_altc.i.i

if.end157.i.i:                                    ; preds = %if.end139.i.i
  %cqc_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 5
  %412 = ptrtoint ptr %cqc_base.i.i to i32
  call void @__asan_load8_noabort(i32 %412)
  %413 = load i64, ptr %cqc_base.i.i, align 8
  %cqc_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 47
  %414 = ptrtoint ptr %cqc_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load i32, ptr %cqc_entry_sz.i.i, align 4
  %416 = ptrtoint ptr %num_cqs.i.i to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load i32, ptr %num_cqs.i.i, align 4
  %418 = ptrtoint ptr %reserved_cqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load i32, ptr %reserved_cqs.i.i.i, align 4
  %call161.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %table158.i.i, i64 noundef %413, i32 noundef %415, i32 noundef %417, i32 noundef %419, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call161.i.i)
  %tobool162.not.i.i = icmp eq i32 %call161.i.i, 0
  br i1 %tobool162.not.i.i, label %if.end170.i.i, label %do.end166.i.i

do.end166.i.i:                                    ; preds = %if.end157.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %420 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load ptr, ptr %priv, align 8
  %422 = ptrtoint ptr %421 to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load ptr, ptr %421, align 4
  %dev169.i.i = getelementptr inbounds %struct.pci_dev, ptr %423, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev169.i.i, ptr noundef nonnull @.str.305) #20
  br label %err_unmap_rdmarc.i.i

if.end170.i.i:                                    ; preds = %if.end157.i.i
  %srqc_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 4
  %424 = ptrtoint ptr %srqc_base.i.i to i32
  call void @__asan_load8_noabort(i32 %424)
  %425 = load i64, ptr %srqc_base.i.i, align 8
  %srq_entry_sz.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 46
  %426 = ptrtoint ptr %srq_entry_sz.i.i to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load i32, ptr %srq_entry_sz.i.i, align 8
  %428 = ptrtoint ptr %num_srqs.i.i to i32
  call void @__asan_load4_noabort(i32 %428)
  %429 = load i32, ptr %num_srqs.i.i, align 4
  %430 = ptrtoint ptr %reserved_srqs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load i32, ptr %reserved_srqs.i.i.i, align 8
  %call174.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %table171.i.i, i64 noundef %425, i32 noundef %427, i32 noundef %429, i32 noundef %431, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call174.i.i)
  %tobool175.not.i.i = icmp eq i32 %call174.i.i, 0
  br i1 %tobool175.not.i.i, label %if.end183.i.i, label %do.end179.i.i

do.end179.i.i:                                    ; preds = %if.end170.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %432 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load ptr, ptr %priv, align 8
  %434 = ptrtoint ptr %433 to i32
  call void @__asan_load4_noabort(i32 %434)
  %435 = load ptr, ptr %433, align 4
  %dev182.i.i = getelementptr inbounds %struct.pci_dev, ptr %435, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev182.i.i, ptr noundef nonnull @.str.308) #20
  br label %err_unmap_cq.i.i

if.end183.i.i:                                    ; preds = %if.end170.i.i
  %mc_base.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 7
  %436 = ptrtoint ptr %mc_base.i.i to i32
  call void @__asan_load8_noabort(i32 %436)
  %437 = load i64, ptr %mc_base.i.i, align 8
  %call185.i.i = call i32 @mlx4_get_mgm_entry_size(ptr noundef %priv) #17
  %438 = ptrtoint ptr %num_mgms.i503.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load i32, ptr %num_mgms.i503.i, align 8
  %440 = ptrtoint ptr %num_amgms.i504.i to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load i32, ptr %num_amgms.i504.i, align 4
  %add188.i.i = add i32 %441, %439
  %call194.i.i = call i32 @mlx4_init_icm_table(ptr noundef %priv, ptr noundef %table184.i.i, i64 noundef %437, i32 noundef %call185.i.i, i32 noundef %add188.i.i, i32 noundef %add188.i.i, i32 noundef 0, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call194.i.i)
  %tobool195.not.i.i = icmp eq i32 %call194.i.i, 0
  br i1 %tobool195.not.i.i, label %if.end110.i, label %do.end199.i.i

do.end199.i.i:                                    ; preds = %if.end183.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %442 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load ptr, ptr %priv, align 8
  %444 = ptrtoint ptr %443 to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load ptr, ptr %443, align 4
  %dev202.i.i = getelementptr inbounds %struct.pci_dev, ptr %445, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev202.i.i, ptr noundef nonnull @.str.311) #20
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %table171.i.i) #17
  br label %err_unmap_cq.i.i

err_unmap_cq.i.i:                                 ; preds = %do.end199.i.i, %do.end179.i.i
  %err.0.i.i774 = phi i32 [ %call174.i.i, %do.end179.i.i ], [ %call194.i.i, %do.end199.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %table158.i.i) #17
  br label %err_unmap_rdmarc.i.i

err_unmap_rdmarc.i.i:                             ; preds = %err_unmap_cq.i.i, %do.end166.i.i
  %err.1.i.i = phi i32 [ %call161.i.i, %do.end166.i.i ], [ %err.0.i.i774, %err_unmap_cq.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %rdmarc_table.i.i) #17
  br label %err_unmap_altc.i.i

err_unmap_altc.i.i:                               ; preds = %err_unmap_rdmarc.i.i, %do.end153.i.i
  %err.2.i.i = phi i32 [ %call148.i.i, %do.end153.i.i ], [ %err.1.i.i, %err_unmap_rdmarc.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %altc_table.i.i) #17
  br label %err_unmap_auxc.i.i

err_unmap_auxc.i.i:                               ; preds = %err_unmap_altc.i.i, %do.end135.i.i
  %err.3.i.i = phi i32 [ %call130.i.i, %do.end135.i.i ], [ %err.2.i.i, %err_unmap_altc.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %auxc_table.i.i) #17
  br label %err_unmap_qp.i.i

err_unmap_qp.i.i:                                 ; preds = %err_unmap_auxc.i.i, %do.end119.i.i
  %err.4.i.i = phi i32 [ %call114.i.i, %do.end119.i.i ], [ %err.3.i.i, %err_unmap_auxc.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %qp_table95.i.i) #17
  br label %err_unmap_dmpt.i.i

err_unmap_dmpt.i.i:                               ; preds = %err_unmap_qp.i.i, %do.end103.i.i
  %err.5.i.i = phi i32 [ %call98.i.i, %do.end103.i.i ], [ %err.4.i.i, %err_unmap_qp.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %dmpt_table.i.i) #17
  br label %err_unmap_mtt.i.i

err_unmap_mtt.i.i:                                ; preds = %err_unmap_dmpt.i.i, %do.end90.i.i
  %err.6.i.i = phi i32 [ %call85.i.i, %do.end90.i.i ], [ %err.5.i.i, %err_unmap_dmpt.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %mtt_table.i.i) #17
  br label %err_unmap_eq.i.i

err_unmap_eq.i.i:                                 ; preds = %err_unmap_mtt.i.i, %do.end77.i482.i
  %err.7.i.i = phi i32 [ %call72.i.i, %do.end77.i482.i ], [ %err.6.i.i, %err_unmap_mtt.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %table.i.i) #17
  br label %err_unmap_cmpt.i.i

err_unmap_cmpt.i.i:                               ; preds = %err_unmap_eq.i.i, %do.end54.i.i
  %err.8.i.i = phi i32 [ %call49.i.i, %do.end54.i.i ], [ %err.7.i.i, %err_unmap_eq.i.i ]
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %cmpt_table25.i.i.i) #17
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %cmpt_table14.i.i.i) #17
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %cmpt_table3.i.i.i) #17
  call void @mlx4_cleanup_icm_table(ptr noundef %priv, ptr noundef %cmpt_table.i.i.i) #17
  br label %err_unmap_aux.i.i

err_unmap_aux.i.i:                                ; preds = %err_unmap_cmpt.i.i, %do.end44.i.i
  %err.9.i.i = phi i32 [ %retval.0.i.ph.i.i, %do.end44.i.i ], [ %err.8.i.i, %err_unmap_cmpt.i.i ]
  %call229.i.i = call i32 @mlx4_UNMAP_ICM_AUX(ptr noundef %priv) #17
  br label %err_free_aux.i.i

err_free_aux.i.i:                                 ; preds = %err_unmap_aux.i.i, %do.end34.i.i
  %err.10.i.i = phi i32 [ %call29.i.i, %do.end34.i.i ], [ %err.9.i.i, %err_unmap_aux.i.i ]
  %446 = ptrtoint ptr %aux_icm.i.i to i32
  call void @__asan_load4_noabort(i32 %446)
  %447 = load ptr, ptr %aux_icm.i.i, align 4
  call void @mlx4_free_icm(ptr noundef %priv, ptr noundef %447, i32 noundef 0) #17
  br label %mlx4_init_icm.exit.thread.i

mlx4_init_icm.exit.thread.i:                      ; preds = %err_free_aux.i.i, %do.end22.i.i, %do.end.i476.i
  %retval.0.i.ph.i775 = phi i32 [ -12, %do.end22.i.i ], [ %err.10.i.i, %err_free_aux.i.i ], [ %call1.i.i772, %do.end.i476.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %aux_pages.i.i) #17
  br label %mlx4_init_hca.exit

if.end110.i:                                      ; preds = %if.end183.i.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %aux_pages.i.i) #17
  %call111.i = call i32 @mlx4_INIT_HCA(ptr noundef %priv, ptr noundef nonnull %call7.i.i452.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call111.i)
  %tobool112.not.i = icmp eq i32 %call111.i, 0
  br i1 %tobool112.not.i, label %if.end120.i, label %do.end116.i

do.end116.i:                                      ; preds = %if.end110.i
  call void @__sanitizer_cov_trace_pc() #19
  %448 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %448)
  %449 = load ptr, ptr %priv, align 8
  %450 = ptrtoint ptr %449 to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load ptr, ptr %449, align 4
  %dev119.i = getelementptr inbounds %struct.pci_dev, ptr %451, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev119.i, ptr noundef nonnull @.str.177) #20
  br label %err_free_icm.i

if.end120.i:                                      ; preds = %if.end110.i
  %flags2.i776 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 25
  %452 = ptrtoint ptr %flags2.i776 to i32
  call void @__asan_load8_noabort(i32 %452)
  %453 = load i64, ptr %flags2.i776, align 8
  %and121.i = and i64 %453, 131072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and121.i)
  %tobool122.not.i = icmp eq i64 %and121.i, 0
  br i1 %tobool122.not.i, label %if.end120.i.if.end145.i_crit_edge, label %if.then123.i

if.end120.i.if.end145.i_crit_edge:                ; preds = %if.end120.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end145.i

if.then123.i:                                     ; preds = %if.end120.i
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %func.i) #17
  %454 = call ptr @memset(ptr %func.i, i32 255, i32 28)
  %455 = ptrtoint ptr %flags2.i510.i to i32
  call void @__asan_load8_noabort(i32 %455)
  %456 = load i64, ptr %flags2.i510.i, align 8
  %and.i898 = and i64 %456, 131072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i898)
  %tobool.not.i899 = icmp eq i64 %and.i898, 0
  br i1 %tobool.not.i899, label %if.then123.i.mlx4_query_func.exit.thread_crit_edge, label %if.then.i900

if.then123.i.mlx4_query_func.exit.thread_crit_edge: ; preds = %if.then123.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_query_func.exit.thread

if.then.i900:                                     ; preds = %if.then123.i
  %call.i = call i32 @mlx4_QUERY_FUNC(ptr noundef %priv, ptr noundef nonnull %func.i, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %if.end.i905, label %mlx4_query_func.exit

if.end.i905:                                      ; preds = %if.then.i900
  call void @__sanitizer_cov_trace_pc() #19
  %457 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load i32, ptr %53, align 4
  %max_eqs.i902 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 11
  %459 = ptrtoint ptr %max_eqs.i902 to i32
  call void @__asan_store4_noabort(i32 %459)
  store i32 %458, ptr %max_eqs.i902, align 4
  %460 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load i32, ptr %52, align 4
  %reserved_eqs.i903 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 10
  %462 = ptrtoint ptr %reserved_eqs.i903 to i32
  call void @__asan_store4_noabort(i32 %462)
  store i32 %461, ptr %reserved_eqs.i903, align 8
  %463 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %463)
  %464 = load i32, ptr %54, align 4
  %reserved_uars.i904 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 26
  %465 = ptrtoint ptr %reserved_uars.i904 to i32
  call void @__asan_store4_noabort(i32 %465)
  store i32 %464, ptr %reserved_uars.i904, align 8
  br label %mlx4_query_func.exit.thread

mlx4_query_func.exit.thread:                      ; preds = %if.end.i905, %if.then123.i.mlx4_query_func.exit.thread_crit_edge
  %retval.0.i906.ph = phi i32 [ 0, %if.then123.i.mlx4_query_func.exit.thread_crit_edge ], [ 1, %if.end.i905 ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %func.i) #17
  br label %if.else134.i

mlx4_query_func.exit:                             ; preds = %if.then.i900
  %466 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load ptr, ptr %priv, align 8
  %468 = ptrtoint ptr %467 to i32
  call void @__asan_load4_noabort(i32 %468)
  %469 = load ptr, ptr %467, align 4
  %dev3.i = getelementptr inbounds %struct.pci_dev, ptr %469, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev3.i, ptr noundef nonnull @.str.99) #20
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %func.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp125.i = icmp slt i32 %call.i, 0
  br i1 %cmp125.i, label %do.end130.i, label %mlx4_query_func.exit.if.else134.i_crit_edge

mlx4_query_func.exit.if.else134.i_crit_edge:      ; preds = %mlx4_query_func.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else134.i

do.end130.i:                                      ; preds = %mlx4_query_func.exit
  call void @__sanitizer_cov_trace_pc() #19
  %470 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load ptr, ptr %priv, align 8
  %472 = ptrtoint ptr %471 to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load ptr, ptr %471, align 4
  %dev133.i = getelementptr inbounds %struct.pci_dev, ptr %473, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev133.i, ptr noundef nonnull @.str.180) #20
  br label %err_close.i

if.else134.i:                                     ; preds = %mlx4_query_func.exit.if.else134.i_crit_edge, %mlx4_query_func.exit.thread
  %retval.0.i906929 = phi i32 [ %retval.0.i906.ph, %mlx4_query_func.exit.thread ], [ %call.i, %mlx4_query_func.exit.if.else134.i_crit_edge ]
  %and135.i = and i32 %retval.0.i906929, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and135.i)
  %tobool136.not.i = icmp eq i32 %and135.i, 0
  br i1 %tobool136.not.i, label %if.else134.i.if.end145.i_crit_edge, label %if.then137.i

if.else134.i.if.end145.i_crit_edge:               ; preds = %if.else134.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end145.i

if.then137.i:                                     ; preds = %if.else134.i
  call void @__sanitizer_cov_trace_pc() #19
  %max_eqs.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 11
  %474 = ptrtoint ptr %max_eqs.i to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load i32, ptr %max_eqs.i, align 4
  %476 = ptrtoint ptr %num_eqs.i.i to i32
  call void @__asan_store4_noabort(i32 %476)
  store i32 %475, ptr %num_eqs.i.i, align 4
  %reserved_eqs.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 10
  %477 = ptrtoint ptr %reserved_eqs.i to i32
  call void @__asan_load4_noabort(i32 %477)
  %478 = load i32, ptr %reserved_eqs.i, align 8
  %479 = ptrtoint ptr %reserved_eqs.i.i to i32
  call void @__asan_store4_noabort(i32 %479)
  store i32 %478, ptr %reserved_eqs.i.i, align 8
  %reserved_uars.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i.i, i32 0, i32 26
  %480 = ptrtoint ptr %reserved_uars.i to i32
  call void @__asan_load4_noabort(i32 %480)
  %481 = load i32, ptr %reserved_uars.i, align 8
  %482 = ptrtoint ptr %reserved_uars2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %482)
  store i32 %481, ptr %reserved_uars2.i.i.i, align 4
  br label %if.end145.i

if.end145.i:                                      ; preds = %if.then137.i, %if.else134.i.if.end145.i_crit_edge, %if.end120.i.if.end145.i_crit_edge
  %483 = ptrtoint ptr %flags2.i510.i to i32
  call void @__asan_load8_noabort(i32 %483)
  %484 = load i64, ptr %flags2.i510.i, align 8
  %and148.i = and i64 %484, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and148.i)
  %tobool149.not.i = icmp eq i64 %and148.i, 0
  br i1 %tobool149.not.i, label %if.end145.i.if.end195.i_crit_edge, label %if.then150.i

if.end145.i.if.end195.i_crit_edge:                ; preds = %if.end145.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end195.i

if.then150.i:                                     ; preds = %if.end145.i
  %call151.i = call i32 @mlx4_QUERY_HCA(ptr noundef %priv, ptr noundef nonnull %call7.i.i452.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call151.i)
  %tobool152.not.i = icmp eq i32 %call151.i, 0
  br i1 %tobool152.not.i, label %if.else163.i, label %do.end156.i

do.end156.i:                                      ; preds = %if.then150.i
  call void @__sanitizer_cov_trace_pc() #19
  %485 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %485)
  %486 = load ptr, ptr %priv, align 8
  %487 = ptrtoint ptr %486 to i32
  call void @__asan_load4_noabort(i32 %487)
  %488 = load ptr, ptr %486, align 4
  %dev159.i = getelementptr inbounds %struct.pci_dev, ptr %488, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev159.i, ptr noundef nonnull @.str.183) #20
  %489 = ptrtoint ptr %flags2.i510.i to i32
  call void @__asan_load8_noabort(i32 %489)
  %490 = load i64, ptr %flags2.i510.i, align 8
  %and162.i = and i64 %490, -33
  store i64 %and162.i, ptr %flags2.i510.i, align 8
  %491 = ptrtoint ptr %hca_core_clock26.i.i to i32
  call void @__asan_load2_noabort(i32 %491)
  %.pr = load i16, ptr %hca_core_clock26.i.i, align 4
  br label %if.end166.i

if.else163.i:                                     ; preds = %if.then150.i
  call void @__sanitizer_cov_trace_pc() #19
  %hca_core_clock.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i452.i, i32 0, i32 14
  %492 = ptrtoint ptr %hca_core_clock.i to i32
  call void @__asan_load2_noabort(i32 %492)
  %493 = load i16, ptr %hca_core_clock.i, align 2
  %494 = ptrtoint ptr %hca_core_clock26.i.i to i32
  call void @__asan_store2_noabort(i32 %494)
  store i16 %493, ptr %hca_core_clock26.i.i, align 4
  br label %if.end166.i

if.end166.i:                                      ; preds = %if.else163.i, %do.end156.i
  %495 = phi i16 [ %493, %if.else163.i ], [ %.pr, %do.end156.i ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %495)
  %tobool169.not.i = icmp eq i16 %495, 0
  br i1 %tobool169.not.i, label %if.end166.i.if.end195.sink.split.i_crit_edge, label %if.else180.i

if.end166.i.if.end195.sink.split.i_crit_edge:     ; preds = %if.end166.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end195.sink.split.i

if.else180.i:                                     ; preds = %if.end166.i
  %496 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %496)
  %497 = load ptr, ptr %priv, align 8
  %498 = ptrtoint ptr %497 to i32
  call void @__asan_load4_noabort(i32 %498)
  %499 = load ptr, ptr %497, align 4
  %500 = ptrtoint ptr %clock_bar.i to i32
  call void @__asan_load1_noabort(i32 %500)
  %501 = load i8, ptr %clock_bar.i, align 1
  %idxprom.i = zext i8 %501 to i32
  %arrayidx.i894 = getelementptr %struct.pci_dev, ptr %499, i32 0, i32 47, i32 %idxprom.i
  %502 = ptrtoint ptr %arrayidx.i894 to i32
  call void @__asan_load4_noabort(i32 %502)
  %503 = load i32, ptr %arrayidx.i894, align 8
  %504 = ptrtoint ptr %clock_offset.i to i32
  call void @__asan_load8_noabort(i32 %504)
  %505 = load i64, ptr %clock_offset.i, align 8
  %506 = trunc i64 %505 to i32
  %conv2.i = add i32 %503, %506
  %call3.i895 = call ptr @ioremap(i32 noundef %conv2.i, i32 noundef 8) #17
  %507 = ptrtoint ptr %clock_mapping.i to i32
  call void @__asan_store4_noabort(i32 %507)
  store ptr %call3.i895, ptr %clock_mapping.i, align 4
  %tobool.not.i896.not = icmp eq ptr %call3.i895, null
  br i1 %tobool.not.i896.not, label %if.else180.i.if.end195.sink.split.i_crit_edge, label %if.else180.i.if.end195.i_crit_edge

if.else180.i.if.end195.i_crit_edge:               ; preds = %if.else180.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end195.i

if.else180.i.if.end195.sink.split.i_crit_edge:    ; preds = %if.else180.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end195.sink.split.i

if.end195.sink.split.i:                           ; preds = %if.else180.i.if.end195.sink.split.i_crit_edge, %if.end166.i.if.end195.sink.split.i_crit_edge
  %.str.186.sink.i = phi ptr [ @.str.186, %if.end166.i.if.end195.sink.split.i_crit_edge ], [ @.str.189, %if.else180.i.if.end195.sink.split.i_crit_edge ]
  %508 = ptrtoint ptr %flags2.i510.i to i32
  call void @__asan_load8_noabort(i32 %508)
  %509 = load i64, ptr %flags2.i510.i, align 8
  %and173.i = and i64 %509, -33
  store i64 %and173.i, ptr %flags2.i510.i, align 8
  %510 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %510)
  %511 = load ptr, ptr %priv, align 8
  %512 = ptrtoint ptr %511 to i32
  call void @__asan_load4_noabort(i32 %512)
  %513 = load ptr, ptr %511, align 4
  %dev179.i = getelementptr inbounds %struct.pci_dev, ptr %513, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev179.i, ptr noundef nonnull %.str.186.sink.i) #20
  br label %if.end195.i

if.end195.i:                                      ; preds = %if.end195.sink.split.i, %if.else180.i.if.end195.i_crit_edge, %if.end145.i.if.end195.i_crit_edge
  %514 = ptrtoint ptr %dmfs_high_steer_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %514)
  %515 = load i32, ptr %dmfs_high_steer_mode.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %515)
  %cmp198.not.i = icmp eq i32 %515, 4
  br i1 %cmp198.not.i, label %if.end195.i.if.end255.i_crit_edge, label %for.cond.preheader.i877

if.end195.i.if.end255.i_crit_edge:                ; preds = %if.end195.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end255.i

for.cond.preheader.i877:                          ; preds = %if.end195.i
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %port_cap.i) #17
  %516 = call ptr @memset(ptr %port_cap.i, i32 255, i32 72)
  %517 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %517)
  %518 = load i32, ptr %num_ports103.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %518)
  %cmp2.not40.i = icmp slt i32 %518, 1
  br i1 %cmp2.not40.i, label %for.cond.preheader.i877.if.end210.i_crit_edge, label %for.cond.preheader.i877.for.body.i880_crit_edge

for.cond.preheader.i877.for.body.i880_crit_edge:  ; preds = %for.cond.preheader.i877
  br label %for.body.i880

for.cond.preheader.i877.if.end210.i_crit_edge:    ; preds = %for.cond.preheader.i877
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end210.i

for.body.i880:                                    ; preds = %for.inc.i.for.body.i880_crit_edge, %for.cond.preheader.i877.for.body.i880_crit_edge
  %i.041.i = phi i32 [ %inc.i892, %for.inc.i.for.body.i880_crit_edge ], [ 1, %for.cond.preheader.i877.for.body.i880_crit_edge ]
  %call.i.i878 = call i32 @mlx4_QUERY_PORT(ptr noundef %priv, i32 noundef %i.041.i, ptr noundef nonnull %port_cap.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i878)
  %tobool.not.i.i879 = icmp eq i32 %call.i.i878, 0
  br i1 %tobool.not.i.i879, label %if.else.i883, label %do.end.i882

do.end.i882:                                      ; preds = %for.body.i880
  call void @__sanitizer_cov_trace_pc() #19
  %519 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %519)
  %520 = load ptr, ptr %priv, align 8
  %521 = ptrtoint ptr %520 to i32
  call void @__asan_load4_noabort(i32 %521)
  %522 = load ptr, ptr %520, align 4
  %dev1.i.i = getelementptr inbounds %struct.pci_dev, ptr %522, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.321) #20
  %523 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %523)
  %524 = load ptr, ptr %priv, align 8
  %525 = ptrtoint ptr %524 to i32
  call void @__asan_load4_noabort(i32 %525)
  %526 = load ptr, ptr %524, align 4
  %dev4.i881 = getelementptr inbounds %struct.pci_dev, ptr %526, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev4.i881, ptr noundef nonnull @.str.314) #20
  br label %for.inc.i

if.else.i883:                                     ; preds = %for.body.i880
  %527 = ptrtoint ptr %dmfs_high_steer_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %527)
  %528 = load i32, ptr %dmfs_high_steer_mode.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %528)
  %cmp7.not.i = icmp eq i32 %528, 0
  br i1 %cmp7.not.i, label %if.else.i883.for.inc.i_crit_edge, label %land.lhs.true.i885

if.else.i883.for.inc.i_crit_edge:                 ; preds = %if.else.i883
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

land.lhs.true.i885:                               ; preds = %if.else.i883
  %529 = ptrtoint ptr %dmfs_optimized_state.i to i32
  call void @__asan_load1_noabort(i32 %529)
  %530 = load i8, ptr %dmfs_optimized_state.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %528)
  %cmp10.i884 = icmp eq i32 %528, 3
  %531 = zext i1 %cmp10.i884 to i8
  call void @__sanitizer_cov_trace_cmp1(i8 %530, i8 %531)
  %cmp13.i = icmp eq i8 %530, %531
  br i1 %cmp13.i, label %do.end18.i887, label %land.lhs.true.i885.for.inc.i_crit_edge

land.lhs.true.i885.for.inc.i_crit_edge:           ; preds = %land.lhs.true.i885
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

do.end18.i887:                                    ; preds = %land.lhs.true.i885
  %532 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load ptr, ptr %priv, align 8
  %534 = ptrtoint ptr %533 to i32
  call void @__asan_load4_noabort(i32 %534)
  %535 = load ptr, ptr %533, align 4
  %dev21.i886 = getelementptr inbounds %struct.pci_dev, ptr %535, i32 0, i32 44
  %switch.tableidx = add i32 %528, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %switch.tableidx)
  %536 = icmp ult i32 %switch.tableidx, 4
  br i1 %536, label %switch.lookup1369, label %do.end18.i887.dmfs_high_rate_steering_mode_str.exit.i891_crit_edge

do.end18.i887.dmfs_high_rate_steering_mode_str.exit.i891_crit_edge: ; preds = %do.end18.i887
  call void @__sanitizer_cov_trace_pc() #19
  br label %dmfs_high_rate_steering_mode_str.exit.i891

switch.lookup1369:                                ; preds = %do.end18.i887
  call void @__sanitizer_cov_trace_pc() #19
  %switch.gep1370 = getelementptr inbounds [4 x ptr], ptr @switch.table.mlx4_load_one.620, i32 0, i32 %switch.tableidx
  %537 = ptrtoint ptr %switch.gep1370 to i32
  call void @__asan_load4_noabort(i32 %537)
  %switch.load1371 = load ptr, ptr %switch.gep1370, align 4
  br label %dmfs_high_rate_steering_mode_str.exit.i891

dmfs_high_rate_steering_mode_str.exit.i891:       ; preds = %switch.lookup1369, %do.end18.i887.dmfs_high_rate_steering_mode_str.exit.i891_crit_edge
  %retval.0.i.i = phi ptr [ %switch.load1371, %switch.lookup1369 ], [ @.str.328, %do.end18.i887.dmfs_high_rate_steering_mode_str.exit.i891_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %530)
  %tobool27.not.i = icmp eq i8 %530, 0
  %cond.i = select i1 %tobool27.not.i, ptr @.str.320, ptr @.str.319
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev21.i886, ptr noundef nonnull @.str.317, ptr noundef nonnull %retval.0.i.i, ptr noundef nonnull %cond.i) #20
  br label %for.inc.i

for.inc.i:                                        ; preds = %dmfs_high_rate_steering_mode_str.exit.i891, %land.lhs.true.i885.for.inc.i_crit_edge, %if.else.i883.for.inc.i_crit_edge, %do.end.i882
  %inc.i892 = add i32 %i.041.i, 1
  %538 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %538)
  %539 = load i32, ptr %num_ports103.i.i, align 4
  %cmp2.not.i = icmp sgt i32 %inc.i892, %539
  br i1 %cmp2.not.i, label %for.inc.i.if.end210.i_crit_edge, label %for.inc.i.for.body.i880_crit_edge

for.inc.i.for.body.i880_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i880

for.inc.i.if.end210.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end210.i

if.end210.i:                                      ; preds = %for.inc.i.if.end210.i_crit_edge, %for.cond.preheader.i877.if.end210.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %port_cap.i) #17
  %540 = ptrtoint ptr %dmfs_high_steer_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %540)
  %541 = load i32, ptr %dmfs_high_steer_mode.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %541)
  %cmp213.i = icmp eq i32 %541, 3
  br i1 %cmp213.i, label %do.end222.thread.i, label %do.end222.i

do.end222.thread.i:                               ; preds = %if.end210.i
  call void @__sanitizer_cov_trace_pc() #19
  %542 = ptrtoint ptr %reserved_qps_cnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %542)
  %543 = load i32, ptr %reserved_qps_cnt.i.i.i, align 8
  %544 = ptrtoint ptr %dmfs_high_rate_qpn_base.i to i32
  call void @__asan_store4_noabort(i32 %544)
  store i32 %543, ptr %dmfs_high_rate_qpn_base.i, align 4
  %545 = ptrtoint ptr %dmfs_high_rate_qpn_range.i to i32
  call void @__asan_store4_noabort(i32 %545)
  store i32 256, ptr %dmfs_high_rate_qpn_range.i, align 8
  %546 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %546)
  %547 = load ptr, ptr %priv, align 8
  %548 = ptrtoint ptr %547 to i32
  call void @__asan_load4_noabort(i32 %548)
  %549 = load ptr, ptr %547, align 4
  br label %dmfs_high_rate_steering_mode_str.exit.i

do.end222.i:                                      ; preds = %if.end210.i
  %550 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %550)
  %551 = load ptr, ptr %priv, align 8
  %552 = ptrtoint ptr %551 to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load ptr, ptr %551, align 4
  %554 = zext i32 %541 to i64
  call void @__sanitizer_cov_trace_switch(i64 %554, ptr @__sancov_gen_cov_switch_values.624)
  switch i32 %541, label %sw.default.i.i [
    i32 0, label %do.end222.i.dmfs_high_rate_steering_mode_str.exit.i_crit_edge
    i32 1, label %sw.bb1.i.i
    i32 2, label %sw.bb2.i.i
    i32 4, label %sw.bb4.i.i
  ]

do.end222.i.dmfs_high_rate_steering_mode_str.exit.i_crit_edge: ; preds = %do.end222.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dmfs_high_rate_steering_mode_str.exit.i

sw.bb1.i.i:                                       ; preds = %do.end222.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dmfs_high_rate_steering_mode_str.exit.i

sw.bb2.i.i:                                       ; preds = %do.end222.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dmfs_high_rate_steering_mode_str.exit.i

sw.bb4.i.i:                                       ; preds = %do.end222.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dmfs_high_rate_steering_mode_str.exit.i

sw.default.i.i:                                   ; preds = %do.end222.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dmfs_high_rate_steering_mode_str.exit.i

dmfs_high_rate_steering_mode_str.exit.i:          ; preds = %sw.default.i.i, %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb1.i.i, %do.end222.i.dmfs_high_rate_steering_mode_str.exit.i_crit_edge, %do.end222.thread.i
  %.pn.i = phi ptr [ %553, %sw.default.i.i ], [ %553, %sw.bb4.i.i ], [ %549, %do.end222.thread.i ], [ %553, %sw.bb2.i.i ], [ %553, %sw.bb1.i.i ], [ %553, %do.end222.i.dmfs_high_rate_steering_mode_str.exit.i_crit_edge ]
  %retval.0.i483.i = phi ptr [ @.str.328, %sw.default.i.i ], [ @.str.327, %sw.bb4.i.i ], [ @.str.326, %do.end222.thread.i ], [ @.str.325, %sw.bb2.i.i ], [ @.str.324, %sw.bb1.i.i ], [ @.str.323, %do.end222.i.dmfs_high_rate_steering_mode_str.exit.i_crit_edge ]
  %dev225557.i = getelementptr inbounds %struct.pci_dev, ptr %.pn.i, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev225557.i, ptr noundef nonnull @.str.195, ptr noundef nonnull %retval.0.i483.i) #20
  br label %if.end255.i

if.else230.i:                                     ; preds = %if.end184
  %555 = ptrtoint ptr %vhcr_dma.i.i to i32
  call void @__asan_load4_noabort(i32 %555)
  %556 = load i32, ptr %vhcr_dma.i.i, align 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @pf_loading, i32 noundef 4) #17
  %557 = load volatile i32, ptr @pf_loading, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %557)
  %tobool.not.i484.i = icmp eq i32 %557, 0
  br i1 %tobool.not.i484.i, label %if.end.i487.i, label %do.end.i486.i

do.end.i486.i:                                    ; preds = %if.else230.i
  call void @__sanitizer_cov_trace_pc() #19
  %558 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %558)
  %559 = load ptr, ptr %priv, align 8
  %560 = ptrtoint ptr %559 to i32
  call void @__asan_load4_noabort(i32 %560)
  %561 = load ptr, ptr %559, align 4
  %dev2.i485.i = getelementptr inbounds %struct.pci_dev, ptr %561, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev2.i485.i, ptr noundef nonnull @.str.329) #20
  br label %mlx4_init_hca.exit.thread

if.end.i487.i:                                    ; preds = %if.else230.i
  call void @mutex_lock_nested(ptr noundef %slave_cmd_mutex.i.i, i32 noundef 0) #17
  %562 = ptrtoint ptr %max_cmds.i.i to i32
  call void @__asan_store4_noabort(i32 %562)
  store i32 1, ptr %max_cmds.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %563 = load volatile i32, ptr @jiffies, align 128
  %add.neg.i.i.i = sub i32 -3000, %563
  %564 = load volatile i32, ptr @jiffies, align 128
  %sub15.i.i.i = add i32 %add.neg.i.i.i, %564
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub15.i.i.i)
  %cmp16.i.i.i = icmp slt i32 %sub15.i.i.i, 0
  br i1 %cmp16.i.i.i, label %if.end.i487.i.while.body.i.i.i_crit_edge, label %if.end.i487.i.do.end9.i.i_crit_edge

if.end.i487.i.do.end9.i.i_crit_edge:              ; preds = %if.end.i487.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9.i.i

if.end.i487.i.while.body.i.i.i_crit_edge:         ; preds = %if.end.i487.i
  br label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %if.end7.i.i.i.while.body.i.i.i_crit_edge, %if.end.i487.i.while.body.i.i.i_crit_edge
  %565 = ptrtoint ptr %mfunc.i.i to i32
  call void @__asan_load4_noabort(i32 %565)
  %566 = load ptr, ptr %mfunc.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %566, i32 12
  %567 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #17, !srcloc !1169
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !1179
  %and.i.i488.i = and i32 %567, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i488.i)
  %tobool.not.i.i489.i = icmp eq i32 %and.i.i488.i, 0
  br i1 %tobool.not.i.i489.i, label %if.end13.i.i, label %if.end.i.i490.i

if.end.i.i490.i:                                  ; preds = %while.body.i.i.i
  %568 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %568)
  %569 = load ptr, ptr %priv, align 8
  %interface_state.i.i.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %569, i32 0, i32 11
  %570 = ptrtoint ptr %interface_state.i.i.i to i32
  call void @__asan_load1_noabort(i32 %570)
  %571 = load i8, ptr %interface_state.i.i.i, align 4
  %572 = and i8 %571, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %572)
  %tobool5.not.i.i.i = icmp eq i8 %572, 0
  br i1 %tobool5.not.i.i.i, label %if.end7.i.i.i, label %if.end.i.i490.i.do.end9.i.i_crit_edge

if.end.i.i490.i.do.end9.i.i_crit_edge:            ; preds = %if.end.i.i490.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9.i.i

if.end7.i.i.i:                                    ; preds = %if.end.i.i490.i
  call void @msleep(i32 noundef 100) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %573 = load volatile i32, ptr @jiffies, align 128
  %sub.i.i.i = add i32 %573, %add.neg.i.i.i
  %cmp.i.i491.i = icmp slt i32 %sub.i.i.i, 0
  br i1 %cmp.i.i491.i, label %if.end7.i.i.i.while.body.i.i.i_crit_edge, label %if.end7.i.i.i.do.end9.i.i_crit_edge

if.end7.i.i.i.do.end9.i.i_crit_edge:              ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9.i.i

if.end7.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body.i.i.i

do.end9.i.i:                                      ; preds = %if.end7.i.i.i.do.end9.i.i_crit_edge, %if.end.i.i490.i.do.end9.i.i_crit_edge, %if.end.i487.i.do.end9.i.i_crit_edge
  %574 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %574)
  %575 = load ptr, ptr %priv, align 8
  %576 = ptrtoint ptr %575 to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load ptr, ptr %575, align 4
  %dev9.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %577, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev9.i.i.i, ptr noundef nonnull @.str.346) #20
  %578 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %578)
  %579 = load ptr, ptr %priv, align 8
  %580 = ptrtoint ptr %579 to i32
  call void @__asan_load4_noabort(i32 %580)
  %581 = load ptr, ptr %579, align 4
  %dev12.i.i = getelementptr inbounds %struct.pci_dev, ptr %581, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12.i.i, ptr noundef nonnull @.str.332) #20
  br label %do.end239.i

if.end13.i.i:                                     ; preds = %while.body.i.i.i
  %582 = ptrtoint ptr %mfunc.i.i to i32
  call void @__asan_load4_noabort(i32 %582)
  %583 = load ptr, ptr %mfunc.i.i, align 4
  %add.ptr.i118.i.i = getelementptr i8, ptr %583, i32 8
  %584 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i118.i.i) #17, !srcloc !1169
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !1180
  %and.i119.i.i = and i32 %584, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i119.i.i)
  %tobool.not.i120.i.i = icmp eq i32 %and.i119.i.i, 0
  br i1 %tobool.not.i120.i.i, label %if.end13.i.i.mlx4_reset_vf_support.exit.i.i_crit_edge, label %if.then.i.i.i

if.end13.i.i.mlx4_reset_vf_support.exit.i.i_crit_edge: ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_reset_vf_support.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %585 = ptrtoint ptr %vf_caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %585)
  %586 = load i32, ptr %vf_caps.i.i.i, align 4
  %or.i.i.i = or i32 %586, 1
  store i32 %or.i.i.i, ptr %vf_caps.i.i.i, align 4
  br label %mlx4_reset_vf_support.exit.i.i

mlx4_reset_vf_support.exit.i.i:                   ; preds = %if.then.i.i.i, %if.end13.i.i.mlx4_reset_vf_support.exit.i.i_crit_edge
  %587 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %587)
  %588 = load ptr, ptr %priv, align 8
  %589 = ptrtoint ptr %588 to i32
  call void @__asan_load4_noabort(i32 %589)
  %590 = load ptr, ptr %588, align 4
  %dev19.i.i = getelementptr inbounds %struct.pci_dev, ptr %590, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev19.i.i, ptr noundef nonnull @.str.335) #20
  %call20.i.i = call i32 @mlx4_comm_cmd(ptr noundef %priv, i8 noundef zeroext 0, i16 noundef zeroext 0, i16 noundef zeroext 0, i32 noundef 10000) #17
  %591 = zext i32 %call20.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %591, ptr @__sancov_gen_cov_switch_values.625)
  switch i32 %call20.i.i, label %mlx4_reset_vf_support.exit.i.i.err.i.i_crit_edge [
    i32 0, label %if.end33.i.i
    i32 196852667, label %do.end27.i.i
  ]

mlx4_reset_vf_support.exit.i.i.err.i.i_crit_edge: ; preds = %mlx4_reset_vf_support.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err.i.i

do.end27.i.i:                                     ; preds = %mlx4_reset_vf_support.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %592 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %592)
  %593 = load ptr, ptr %priv, align 8
  %594 = ptrtoint ptr %593 to i32
  call void @__asan_load4_noabort(i32 %594)
  %595 = load ptr, ptr %593, align 4
  %dev30.i.i = getelementptr inbounds %struct.pci_dev, ptr %595, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev30.i.i, ptr noundef nonnull @.str.338) #20
  call void @mutex_unlock(ptr noundef %slave_cmd_mutex.i.i) #17
  br label %mlx4_init_hca.exit.thread

if.end33.i.i:                                     ; preds = %mlx4_reset_vf_support.exit.i.i
  %596 = ptrtoint ptr %mfunc.i.i to i32
  call void @__asan_load4_noabort(i32 %596)
  %597 = load ptr, ptr %mfunc.i.i, align 4
  %slave_read35.i.i = getelementptr inbounds %struct.mlx4_comm, ptr %597, i32 0, i32 1
  %598 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %slave_read35.i.i) #17, !srcloc !1169
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #17, !srcloc !1181
  %call38.i.i = call i32 @mlx4_comm_get_version() #17
  %shr116.i.i = xor i32 %call38.i.i, %598
  %599 = and i32 %shr116.i.i, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %599)
  %cmp44.not.i.i = icmp eq i32 %599, 0
  %600 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %600)
  %601 = load ptr, ptr %priv, align 8
  %602 = ptrtoint ptr %601 to i32
  call void @__asan_load4_noabort(i32 %602)
  %603 = load ptr, ptr %601, align 4
  %dev59.i.i = getelementptr inbounds %struct.pci_dev, ptr %603, i32 0, i32 44
  br i1 %cmp44.not.i.i, label %do.end56.i.i, label %do.end49.i.i

do.end49.i.i:                                     ; preds = %if.end33.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev59.i.i, ptr noundef nonnull @.str.341) #20
  br label %err.i.i

do.end56.i.i:                                     ; preds = %if.end33.i.i
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev59.i.i, ptr noundef nonnull @.str.344) #20
  %call62.i.i = call i32 @mlx4_comm_cmd(ptr noundef %priv, i8 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0, i32 noundef 10000) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62.i.i)
  %tobool63.not.i.i = icmp eq i32 %call62.i.i, 0
  br i1 %tobool63.not.i.i, label %if.end65.i.i, label %do.end56.i.i.err.i.i_crit_edge

do.end56.i.i.err.i.i_crit_edge:                   ; preds = %do.end56.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err.i.i

if.end65.i.i:                                     ; preds = %do.end56.i.i
  %call68.i.i = call i32 @mlx4_comm_cmd(ptr noundef %priv, i8 noundef zeroext 2, i16 noundef zeroext 0, i16 noundef zeroext 0, i32 noundef 10000) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68.i.i)
  %tobool69.not.i.i = icmp eq i32 %call68.i.i, 0
  br i1 %tobool69.not.i.i, label %if.end71.i.i, label %if.end65.i.i.err.i.i_crit_edge

if.end65.i.i.err.i.i_crit_edge:                   ; preds = %if.end65.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err.i.i

if.end71.i.i:                                     ; preds = %if.end65.i.i
  %shr72.i.i = lshr i32 %556, 16
  %conv73.i.i = trunc i32 %shr72.i.i to i16
  %call74.i.i = call i32 @mlx4_comm_cmd(ptr noundef %priv, i8 noundef zeroext 3, i16 noundef zeroext %conv73.i.i, i16 noundef zeroext 0, i32 noundef 10000) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74.i.i)
  %tobool75.not.i.i = icmp eq i32 %call74.i.i, 0
  br i1 %tobool75.not.i.i, label %if.end77.i.i, label %if.end71.i.i.err.i.i_crit_edge

if.end71.i.i.err.i.i_crit_edge:                   ; preds = %if.end71.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err.i.i

if.end77.i.i:                                     ; preds = %if.end71.i.i
  %conv78.i.i = trunc i32 %556 to i16
  %call79.i.i = call i32 @mlx4_comm_cmd(ptr noundef %priv, i8 noundef zeroext 4, i16 noundef zeroext %conv78.i.i, i16 noundef zeroext 0, i32 noundef 10000) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79.i.i)
  %tobool80.not.i.i = icmp eq i32 %call79.i.i, 0
  br i1 %tobool80.not.i.i, label %if.end244.i, label %if.end77.i.i.err.i.i_crit_edge

if.end77.i.i.err.i.i_crit_edge:                   ; preds = %if.end77.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err.i.i

err.i.i:                                          ; preds = %if.end77.i.i.err.i.i_crit_edge, %if.end71.i.i.err.i.i_crit_edge, %if.end65.i.i.err.i.i_crit_edge, %do.end56.i.i.err.i.i_crit_edge, %do.end49.i.i, %mlx4_reset_vf_support.exit.i.i.err.i.i_crit_edge
  %call85.i492.i = call i32 @mlx4_comm_cmd(ptr noundef %priv, i8 noundef zeroext 0, i16 noundef zeroext 0, i16 noundef zeroext 0, i32 noundef 0) #17
  br label %do.end239.i

do.end239.i:                                      ; preds = %err.i.i, %do.end9.i.i
  call void @mutex_unlock(ptr noundef %slave_cmd_mutex.i.i) #17
  %604 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %604)
  %605 = load ptr, ptr %priv, align 8
  %606 = ptrtoint ptr %605 to i32
  call void @__asan_load4_noabort(i32 %606)
  %607 = load ptr, ptr %605, align 4
  %dev242.i = getelementptr inbounds %struct.pci_dev, ptr %607, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev242.i, ptr noundef nonnull @.str.198) #20
  br label %mlx4_init_hca.exit.thread

if.end244.i:                                      ; preds = %if.end77.i.i
  call void @mutex_unlock(ptr noundef %slave_cmd_mutex.i.i) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %608 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %608, i32 noundef 3520, i32 noundef 136) #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %609 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i437.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %609, i32 noundef 3520, i32 noundef 88) #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %610 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i438.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %610, i32 noundef 3520, i32 noundef 504) #22
  %tobool.not.i494.i = icmp eq ptr %call7.i.i.i.i, null
  %tobool3.not.i.i = icmp eq ptr %call7.i.i437.i.i, null
  %or.cond.i.i = select i1 %tobool.not.i494.i, i1 true, i1 %tobool3.not.i.i
  %tobool5.not.i.i = icmp eq ptr %call7.i.i438.i.i, null
  %or.cond436.i.i = select i1 %or.cond.i.i, i1 true, i1 %tobool5.not.i.i
  br i1 %or.cond436.i.i, label %do.end.i495.i, label %if.end.i496.i

do.end.i495.i:                                    ; preds = %if.end244.i
  call void @__sanitizer_cov_trace_pc() #19
  %611 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %611)
  %612 = load ptr, ptr %priv, align 8
  %613 = ptrtoint ptr %612 to i32
  call void @__asan_load4_noabort(i32 %613)
  %614 = load ptr, ptr %612, align 4
  %dev6.i.i = getelementptr inbounds %struct.pci_dev, ptr %614, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev6.i.i, ptr noundef nonnull @.str.348) #20
  br label %mlx4_slave_cap.exit.i

if.end.i496.i:                                    ; preds = %if.end244.i
  %call7.i.i777 = call i32 @mlx4_QUERY_HCA(ptr noundef %priv, ptr noundef nonnull %call7.i.i.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i777)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i777, 0
  br i1 %tobool8.not.i.i, label %if.end16.i.i, label %do.end12.i.i

do.end12.i.i:                                     ; preds = %if.end.i496.i
  call void @__sanitizer_cov_trace_pc() #19
  %615 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %615)
  %616 = load ptr, ptr %priv, align 8
  %617 = ptrtoint ptr %616 to i32
  call void @__asan_load4_noabort(i32 %617)
  %618 = load ptr, ptr %616, align 4
  %dev15.i.i = getelementptr inbounds %struct.pci_dev, ptr %618, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev15.i.i, ptr noundef nonnull @.str.351) #20
  br label %mlx4_slave_cap.exit.i

if.end16.i.i:                                     ; preds = %if.end.i496.i
  %global_caps.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 11
  %619 = ptrtoint ptr %global_caps.i.i to i32
  call void @__asan_load8_noabort(i32 %619)
  %620 = load i64, ptr %global_caps.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %620)
  %tobool17.not.i.i = icmp eq i64 %620, 0
  br i1 %tobool17.not.i.i, label %if.end25.i.i, label %do.end21.i.i

do.end21.i.i:                                     ; preds = %if.end16.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %621 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %621)
  %622 = load ptr, ptr %priv, align 8
  %623 = ptrtoint ptr %622 to i32
  call void @__asan_load4_noabort(i32 %623)
  %624 = load ptr, ptr %622, align 4
  %dev24.i.i = getelementptr inbounds %struct.pci_dev, ptr %624, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24.i.i, ptr noundef nonnull @.str.354) #20
  br label %mlx4_slave_cap.exit.i

if.end25.i.i:                                     ; preds = %if.end16.i.i
  %hca_core_clock.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 14
  %625 = ptrtoint ptr %hca_core_clock.i.i to i32
  call void @__asan_load2_noabort(i32 %625)
  %626 = load i16, ptr %hca_core_clock.i.i, align 2
  %627 = ptrtoint ptr %hca_core_clock26.i.i to i32
  call void @__asan_store2_noabort(i32 %627)
  store i16 %626, ptr %hca_core_clock26.i.i, align 4
  %log_rd_per_qp.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 20
  %628 = ptrtoint ptr %log_rd_per_qp.i.i to i32
  call void @__asan_load1_noabort(i32 %628)
  %629 = load i8, ptr %log_rd_per_qp.i.i, align 2
  %conv.i497.i = zext i8 %629 to i32
  %shl.i498.i = shl nuw i32 1, %conv.i497.i
  %630 = ptrtoint ptr %max_qp_dest_rdma.i.i to i32
  call void @__asan_store4_noabort(i32 %630)
  store i32 %shl.i498.i, ptr %max_qp_dest_rdma.i.i, align 8
  %call28.i.i778 = call fastcc i32 @mlx4_dev_cap(ptr noundef %priv, ptr noundef nonnull %call7.i.i438.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i.i778)
  %tobool29.not.i.i = icmp eq i32 %call28.i.i778, 0
  br i1 %tobool29.not.i.i, label %if.end37.i.i, label %do.end33.i.i

do.end33.i.i:                                     ; preds = %if.end25.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %631 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %631)
  %632 = load ptr, ptr %priv, align 8
  %633 = ptrtoint ptr %632 to i32
  call void @__asan_load4_noabort(i32 %633)
  %634 = load ptr, ptr %632, align 4
  %dev36.i.i = getelementptr inbounds %struct.pci_dev, ptr %634, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev36.i.i, ptr noundef nonnull @.str.168) #20
  br label %mlx4_slave_cap.exit.i

if.end37.i.i:                                     ; preds = %if.end25.i.i
  %call38.i499.i = call i32 @mlx4_QUERY_FW(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38.i499.i)
  %tobool39.not.i.i = icmp eq i32 %call38.i499.i, 0
  br i1 %tobool39.not.i.i, label %if.end37.i.i.if.end47.i.i_crit_edge, label %do.end43.i.i

if.end37.i.i.if.end47.i.i_crit_edge:              ; preds = %if.end37.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end47.i.i

do.end43.i.i:                                     ; preds = %if.end37.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %635 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %635)
  %636 = load ptr, ptr %priv, align 8
  %637 = ptrtoint ptr %636 to i32
  call void @__asan_load4_noabort(i32 %637)
  %638 = load ptr, ptr %636, align 4
  %dev46.i.i = getelementptr inbounds %struct.pci_dev, ptr %638, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev46.i.i, ptr noundef nonnull @.str.359) #20
  br label %if.end47.i.i

if.end47.i.i:                                     ; preds = %do.end43.i.i, %if.end37.i.i.if.end47.i.i_crit_edge
  %639 = ptrtoint ptr %page_size_cap.i.i to i32
  call void @__asan_load4_noabort(i32 %639)
  %640 = load i32, ptr %page_size_cap.i.i, align 4
  %add.i500.i = sub i32 0, %640
  %641 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %641)
  %642 = load ptr, ptr %priv, align 8
  %643 = ptrtoint ptr %642 to i32
  call void @__asan_load4_noabort(i32 %643)
  %644 = load ptr, ptr %642, align 4
  %dev54.i.i = getelementptr inbounds %struct.pci_dev, ptr %644, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev54.i.i, ptr noundef nonnull @.str.362, i32 noundef %add.i500.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i500.i)
  %cmp.i501.i = icmp ugt i32 %add.i500.i, 4096
  br i1 %cmp.i501.i, label %do.end59.i.i, label %if.end63.i.i

do.end59.i.i:                                     ; preds = %if.end47.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %645 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %645)
  %646 = load ptr, ptr %priv, align 8
  %647 = ptrtoint ptr %646 to i32
  call void @__asan_load4_noabort(i32 %647)
  %648 = load ptr, ptr %646, align 4
  %dev62.i.i = getelementptr inbounds %struct.pci_dev, ptr %648, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev62.i.i, ptr noundef nonnull @.str.214, i32 noundef %add.i500.i, i32 noundef 4096) #20
  br label %mlx4_slave_cap.exit.i

if.end63.i.i:                                     ; preds = %if.end47.i.i
  %uar_page_sz.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 25
  %649 = ptrtoint ptr %uar_page_sz.i.i to i32
  call void @__asan_load1_noabort(i32 %649)
  %650 = load i8, ptr %uar_page_sz.i.i, align 1
  %add65.i.i = add i8 %650, 12
  %651 = ptrtoint ptr %uar_page_shift.i.i to i32
  call void @__asan_store1_noabort(i32 %651)
  store i8 %add65.i.i, ptr %uar_page_shift.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %add65.i.i)
  %cmp69.i.i = icmp ugt i8 %add65.i.i, 12
  br i1 %cmp69.i.i, label %do.end74.i.i, label %if.end78.i.i

do.end74.i.i:                                     ; preds = %if.end63.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %652 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %652)
  %653 = load ptr, ptr %priv, align 8
  %654 = ptrtoint ptr %653 to i32
  call void @__asan_load4_noabort(i32 %654)
  %655 = load ptr, ptr %653, align 4
  %dev77.i.i = getelementptr inbounds %struct.pci_dev, ptr %655, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev77.i.i, ptr noundef nonnull @.str.367) #20
  br label %mlx4_slave_cap.exit.i

if.end78.i.i:                                     ; preds = %if.end63.i.i
  %conv.i.i.i.i = zext i8 %add65.i.i to i32
  %sub.i.i.i.i = sub nuw nsw i32 12, %conv.i.i.i.i
  %shr.i.i.i.i = lshr i32 128, %sub.i.i.i.i
  %reserved_uars.i.i.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %call7.i.i438.i.i, i32 0, i32 26
  %656 = ptrtoint ptr %reserved_uars.i.i.i to i32
  call void @__asan_load4_noabort(i32 %656)
  %657 = load i32, ptr %reserved_uars.i.i.i, align 8
  %shl.i.i.i = shl nuw nsw i32 1, %sub.i.i.i.i
  %div.i.i.i = sdiv i32 %657, %shl.i.i.i
  %658 = call i32 @llvm.smax.i32(i32 %shr.i.i.i.i, i32 %div.i.i.i) #17
  %659 = ptrtoint ptr %reserved_uars2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %659)
  store i32 %658, ptr %reserved_uars2.i.i.i, align 4
  %660 = ptrtoint ptr %uar_page_size.i.i to i32
  call void @__asan_store4_noabort(i32 %660)
  store i32 4096, ptr %uar_page_size.i.i, align 8
  %call80.i.i = call i32 @mlx4_QUERY_FUNC_CAP(ptr noundef %priv, i8 noundef zeroext 0, ptr noundef nonnull %call7.i.i437.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80.i.i)
  %tobool81.not.i.i = icmp eq i32 %call80.i.i, 0
  br i1 %tobool81.not.i.i, label %if.end89.i.i, label %do.end85.i.i

do.end85.i.i:                                     ; preds = %if.end78.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %661 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %661)
  %662 = load ptr, ptr %priv, align 8
  %663 = ptrtoint ptr %662 to i32
  call void @__asan_load4_noabort(i32 %663)
  %664 = load ptr, ptr %662, align 4
  %dev88.i.i = getelementptr inbounds %struct.pci_dev, ptr %664, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev88.i.i, ptr noundef nonnull @.str.370, i32 noundef %call80.i.i) #20
  br label %mlx4_slave_cap.exit.i

if.end89.i.i:                                     ; preds = %if.end78.i.i
  %pf_context_behaviour.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 2
  %665 = ptrtoint ptr %pf_context_behaviour.i.i to i32
  call void @__asan_load4_noabort(i32 %665)
  %666 = load i32, ptr %pf_context_behaviour.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %666)
  %cmp90.not.i.i = icmp ult i32 %666, 8
  br i1 %cmp90.not.i.i, label %if.end100.i.i, label %do.end95.i.i

do.end95.i.i:                                     ; preds = %if.end89.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %667 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %667)
  %668 = load ptr, ptr %priv, align 8
  %669 = ptrtoint ptr %668 to i32
  call void @__asan_load4_noabort(i32 %669)
  %670 = load ptr, ptr %668, align 4
  %dev98.i.i = getelementptr inbounds %struct.pci_dev, ptr %670, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev98.i.i, ptr noundef nonnull @.str.373, i32 noundef %666, i32 noundef 7) #20
  br label %mlx4_slave_cap.exit.i

if.end100.i.i:                                    ; preds = %if.end89.i.i
  %671 = ptrtoint ptr %call7.i.i437.i.i to i32
  call void @__asan_load1_noabort(i32 %671)
  %672 = load i8, ptr %call7.i.i437.i.i, align 8
  %conv101.i.i = zext i8 %672 to i32
  %673 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_store4_noabort(i32 %673)
  store i32 %conv101.i.i, ptr %num_ports103.i.i, align 4
  %qp_quota.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 3
  %674 = ptrtoint ptr %qp_quota.i.i to i32
  call void @__asan_load4_noabort(i32 %674)
  %675 = load i32, ptr %qp_quota.i.i, align 8
  %676 = ptrtoint ptr %quotas.i.i to i32
  call void @__asan_store4_noabort(i32 %676)
  store i32 %675, ptr %quotas.i.i, align 8
  %srq_quota.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 5
  %677 = ptrtoint ptr %srq_quota.i.i to i32
  call void @__asan_load4_noabort(i32 %677)
  %678 = load i32, ptr %srq_quota.i.i, align 8
  %679 = ptrtoint ptr %srq.i.i to i32
  call void @__asan_store4_noabort(i32 %679)
  store i32 %678, ptr %srq.i.i, align 8
  %cq_quota.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 4
  %680 = ptrtoint ptr %cq_quota.i.i to i32
  call void @__asan_load4_noabort(i32 %680)
  %681 = load i32, ptr %cq_quota.i.i, align 4
  %682 = ptrtoint ptr %cq.i.i to i32
  call void @__asan_store4_noabort(i32 %682)
  store i32 %681, ptr %cq.i.i, align 4
  %mpt_quota.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 6
  %683 = ptrtoint ptr %mpt_quota.i.i to i32
  call void @__asan_load4_noabort(i32 %683)
  %684 = load i32, ptr %mpt_quota.i.i, align 4
  %685 = ptrtoint ptr %mpt.i.i to i32
  call void @__asan_store4_noabort(i32 %685)
  store i32 %684, ptr %mpt.i.i, align 4
  %mtt_quota.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 7
  %686 = ptrtoint ptr %mtt_quota.i.i to i32
  call void @__asan_load4_noabort(i32 %686)
  %687 = load i32, ptr %mtt_quota.i.i, align 8
  %688 = ptrtoint ptr %mtt.i.i to i32
  call void @__asan_store4_noabort(i32 %688)
  store i32 %687, ptr %mtt.i.i, align 8
  %log_num_qps.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 15
  %689 = ptrtoint ptr %log_num_qps.i.i to i32
  call void @__asan_load1_noabort(i32 %689)
  %690 = load i8, ptr %log_num_qps.i.i, align 4
  %conv108.i.i = zext i8 %690 to i32
  %shl109.i.i = shl nuw i32 1, %conv108.i.i
  %691 = ptrtoint ptr %num_qps.i.i to i32
  call void @__asan_store4_noabort(i32 %691)
  store i32 %shl109.i.i, ptr %num_qps.i.i, align 4
  %log_num_srqs.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 16
  %692 = ptrtoint ptr %log_num_srqs.i.i to i32
  call void @__asan_load1_noabort(i32 %692)
  %693 = load i8, ptr %log_num_srqs.i.i, align 1
  %conv111.i.i = zext i8 %693 to i32
  %shl112.i.i = shl nuw i32 1, %conv111.i.i
  %694 = ptrtoint ptr %num_srqs.i.i to i32
  call void @__asan_store4_noabort(i32 %694)
  store i32 %shl112.i.i, ptr %num_srqs.i.i, align 4
  %log_num_cqs.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 17
  %695 = ptrtoint ptr %log_num_cqs.i.i to i32
  call void @__asan_load1_noabort(i32 %695)
  %696 = load i8, ptr %log_num_cqs.i.i, align 2
  %conv114.i.i = zext i8 %696 to i32
  %shl115.i.i = shl nuw i32 1, %conv114.i.i
  %697 = ptrtoint ptr %num_cqs.i.i to i32
  call void @__asan_store4_noabort(i32 %697)
  store i32 %shl115.i.i, ptr %num_cqs.i.i, align 4
  %log_mpt_sz.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 22
  %698 = ptrtoint ptr %log_mpt_sz.i.i to i32
  call void @__asan_load1_noabort(i32 %698)
  %699 = load i8, ptr %log_mpt_sz.i.i, align 4
  %conv117.i.i = zext i8 %699 to i32
  %shl118.i.i = shl nuw i32 1, %conv117.i.i
  %700 = ptrtoint ptr %num_mpts.i502.i to i32
  call void @__asan_store4_noabort(i32 %700)
  store i32 %shl118.i.i, ptr %num_mpts.i502.i, align 8
  %max_eq.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 8
  %701 = ptrtoint ptr %max_eq.i.i to i32
  call void @__asan_load4_noabort(i32 %701)
  %702 = load i32, ptr %max_eq.i.i, align 4
  %703 = ptrtoint ptr %num_eqs.i.i to i32
  call void @__asan_store4_noabort(i32 %703)
  store i32 %702, ptr %num_eqs.i.i, align 4
  %reserved_eq.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 9
  %704 = ptrtoint ptr %reserved_eq.i.i to i32
  call void @__asan_load4_noabort(i32 %704)
  %705 = load i32, ptr %reserved_eq.i.i, align 8
  %706 = ptrtoint ptr %reserved_eqs.i.i to i32
  call void @__asan_store4_noabort(i32 %706)
  store i32 %705, ptr %reserved_eqs.i.i, align 8
  %reserved_lkey.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 12
  %707 = ptrtoint ptr %reserved_lkey.i.i to i32
  call void @__asan_load4_noabort(i32 %707)
  %708 = load i32, ptr %reserved_lkey.i.i, align 4
  %709 = ptrtoint ptr %reserved_lkey123.i.i to i32
  call void @__asan_store4_noabort(i32 %709)
  store i32 %708, ptr %reserved_lkey123.i.i, align 4
  %710 = ptrtoint ptr %num_pds.i.i to i32
  call void @__asan_store4_noabort(i32 %710)
  store i32 32768, ptr %num_pds.i.i, align 4
  %711 = ptrtoint ptr %num_mgms.i503.i to i32
  call void @__asan_store4_noabort(i32 %711)
  store i32 0, ptr %num_mgms.i503.i, align 8
  %712 = ptrtoint ptr %num_amgms.i504.i to i32
  call void @__asan_store4_noabort(i32 %712)
  store i32 0, ptr %num_amgms.i504.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %672)
  %cmp129.i.i = icmp ugt i8 %672, 2
  br i1 %cmp129.i.i, label %do.end134.i.i, label %if.end140.i.i

do.end134.i.i:                                    ; preds = %if.end100.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %713 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %713)
  %714 = load ptr, ptr %priv, align 8
  %715 = ptrtoint ptr %714 to i32
  call void @__asan_load4_noabort(i32 %715)
  %716 = load ptr, ptr %714, align 4
  %dev137.i.i = getelementptr inbounds %struct.pci_dev, ptr %716, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev137.i.i, ptr noundef nonnull @.str.217, i32 noundef %conv101.i.i, i32 noundef 2) #20
  br label %mlx4_slave_cap.exit.i

if.end140.i.i:                                    ; preds = %if.end100.i.i
  call void @mlx4_replace_zero_macs(ptr noundef %priv) #17
  %call141.i.i = call fastcc i32 @mlx4_slave_special_qp_cap(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call141.i.i)
  %tobool142.not.i.i = icmp eq i32 %call141.i.i, 0
  br i1 %tobool142.not.i.i, label %if.end150.i.i, label %do.end146.i.i

do.end146.i.i:                                    ; preds = %if.end140.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %717 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %717)
  %718 = load ptr, ptr %priv, align 8
  %719 = ptrtoint ptr %718 to i32
  call void @__asan_load4_noabort(i32 %719)
  %720 = load ptr, ptr %718, align 4
  %dev149.i.i = getelementptr inbounds %struct.pci_dev, ptr %720, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev149.i.i, ptr noundef nonnull @.str.378) #20
  br label %mlx4_slave_cap.exit.i

if.end150.i.i:                                    ; preds = %if.end140.i.i
  %721 = ptrtoint ptr %uar_page_size.i.i to i32
  call void @__asan_load4_noabort(i32 %721)
  %722 = load i32, ptr %uar_page_size.i.i, align 8
  %723 = ptrtoint ptr %num_uars.i.i to i32
  call void @__asan_load4_noabort(i32 %723)
  %724 = load i32, ptr %num_uars.i.i, align 4
  %725 = ptrtoint ptr %reserved_uars2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %725)
  %726 = load i32, ptr %reserved_uars2.i.i.i, align 4
  %sub.i505.i = sub i32 %724, %726
  %mul.i506.i = mul i32 %sub.i505.i, %722
  %727 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %727)
  %728 = load ptr, ptr %priv, align 8
  %729 = ptrtoint ptr %728 to i32
  call void @__asan_load4_noabort(i32 %729)
  %730 = load ptr, ptr %728, align 4
  %end.i.i = getelementptr %struct.pci_dev, ptr %730, i32 0, i32 47, i32 2, i32 1
  %731 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %731)
  %732 = load i32, ptr %end.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %732)
  %cmp157.i.i = icmp eq i32 %732, 0
  br i1 %cmp157.i.i, label %cond.end.i.i, label %cond.end.thread.i.i

cond.end.i.i:                                     ; preds = %if.end150.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul.i506.i)
  %cmp170.not.i.i = icmp eq i32 %mul.i506.i, 0
  br i1 %cmp170.not.i.i, label %cond.end.i.i.if.end208.i.i_crit_edge, label %cond.end.i.i.if.then311.i.i_crit_edge

cond.end.i.i.if.then311.i.i_crit_edge:            ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then311.i.i

cond.end.i.i.if.end208.i.i_crit_edge:             ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end208.i.i

cond.end.thread.i.i:                              ; preds = %if.end150.i.i
  %arrayidx.i507.i = getelementptr %struct.pci_dev, ptr %730, i32 0, i32 47, i32 2
  %733 = ptrtoint ptr %arrayidx.i507.i to i32
  call void @__asan_load4_noabort(i32 %733)
  %734 = load i32, ptr %arrayidx.i507.i, align 8
  %sub168.i.i = add i32 %732, 1
  %add169.i.i = sub i32 %sub168.i.i, %734
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i506.i, i32 %add169.i.i)
  %cmp170440.i.i = icmp ugt i32 %mul.i506.i, %add169.i.i
  br i1 %cmp170440.i.i, label %cond.end.thread.i.i.if.then311.i.i_crit_edge, label %cond.end.thread.i.i.if.end208.i.i_crit_edge

cond.end.thread.i.i.if.end208.i.i_crit_edge:      ; preds = %cond.end.thread.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end208.i.i

cond.end.thread.i.i.if.then311.i.i_crit_edge:     ; preds = %cond.end.thread.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then311.i.i

if.end208.i.i:                                    ; preds = %cond.end.thread.i.i.if.end208.i.i_crit_edge, %cond.end.i.i.if.end208.i.i_crit_edge
  %dev_cap_enabled.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 28
  %735 = ptrtoint ptr %dev_cap_enabled.i.i to i32
  call void @__asan_load8_noabort(i32 %735)
  %736 = load i64, ptr %dev_cap_enabled.i.i, align 8
  %and.i508.i = and i64 %736, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i508.i)
  %tobool209.not.i.i = icmp eq i64 %and.i508.i, 0
  %spec.select.i509.i = select i1 %tobool209.not.i.i, i32 32, i32 64
  %not.tobool209.not.i.i = xor i1 %tobool209.not.i.i, true
  %spec.select458.i.i = zext i1 %not.tobool209.not.i.i to i8
  %737 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %737)
  store i32 %spec.select.i509.i, ptr %49, align 8
  %738 = ptrtoint ptr %50 to i32
  call void @__asan_store1_noabort(i32 %738)
  store i8 %spec.select458.i.i, ptr %50, align 8
  %and219.i.i = and i64 %736, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and219.i.i)
  %tobool220.not.i.i = icmp eq i64 %and219.i.i, 0
  br i1 %tobool220.not.i.i, label %if.end208.i.i.if.end228.i.i_crit_edge, label %if.then221.i.i

if.end208.i.i.if.end228.i.i_crit_edge:            ; preds = %if.end208.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end228.i.i

if.then221.i.i:                                   ; preds = %if.end208.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %739 = ptrtoint ptr %userspace_caps.i.i to i32
  call void @__asan_load4_noabort(i32 %739)
  %740 = load i32, ptr %userspace_caps.i.i, align 4
  %or224.i.i = or i32 %740, 1
  store i32 %or224.i.i, ptr %userspace_caps.i.i, align 4
  br label %if.end228.i.i

if.end228.i.i:                                    ; preds = %if.then221.i.i, %if.end208.i.i.if.end228.i.i_crit_edge
  %.sink457.i.i = phi i32 [ 64, %if.then221.i.i ], [ 32, %if.end208.i.i.if.end228.i.i_crit_edge ]
  %741 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %741)
  store i32 %.sink457.i.i, ptr %51, align 4
  %and230.i.i = and i64 %736, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and230.i.i)
  %tobool231.not.i.i = icmp eq i64 %and230.i.i, 0
  br i1 %tobool231.not.i.i, label %if.end228.i.i.if.end239.i.i_crit_edge, label %if.then232.i.i

if.end228.i.i.if.end239.i.i_crit_edge:            ; preds = %if.end228.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end239.i.i

if.then232.i.i:                                   ; preds = %if.end228.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %eqe_size233.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 30
  %742 = ptrtoint ptr %eqe_size233.i.i to i32
  call void @__asan_load2_noabort(i32 %742)
  %743 = load i16, ptr %eqe_size233.i.i, align 2
  %conv234.i.i = zext i16 %743 to i32
  %744 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %744)
  store i32 %conv234.i.i, ptr %49, align 8
  %745 = ptrtoint ptr %50 to i32
  call void @__asan_store1_noabort(i32 %745)
  store i8 0, ptr %50, align 8
  br label %if.end239.i.i

if.end239.i.i:                                    ; preds = %if.then232.i.i, %if.end228.i.i.if.end239.i.i_crit_edge
  %and241.i.i = and i64 %736, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and241.i.i)
  %tobool242.not.i.i = icmp eq i64 %and241.i.i, 0
  br i1 %tobool242.not.i.i, label %if.end239.i.i.if.end251.i.i_crit_edge, label %if.then243.i.i

if.end239.i.i.if.end251.i.i_crit_edge:            ; preds = %if.end239.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end251.i.i

if.then243.i.i:                                   ; preds = %if.end239.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %cqe_size244.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 29
  %746 = ptrtoint ptr %cqe_size244.i.i to i32
  call void @__asan_load2_noabort(i32 %746)
  %747 = load i16, ptr %cqe_size244.i.i, align 8
  %conv245.i.i = zext i16 %747 to i32
  %748 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %748)
  store i32 %conv245.i.i, ptr %51, align 4
  %749 = ptrtoint ptr %userspace_caps.i.i to i32
  call void @__asan_load4_noabort(i32 %749)
  %750 = load i32, ptr %userspace_caps.i.i, align 4
  %or250.i.i = or i32 %750, 1
  store i32 %or250.i.i, ptr %userspace_caps.i.i, align 4
  br label %if.end251.i.i

if.end251.i.i:                                    ; preds = %if.then243.i.i, %if.end239.i.i.if.end251.i.i_crit_edge
  %751 = ptrtoint ptr %flags2.i510.i to i32
  call void @__asan_load8_noabort(i32 %751)
  %752 = load i64, ptr %flags2.i510.i, align 8
  %and253.i.i = and i64 %752, -33
  store i64 %and253.i.i, ptr %flags2.i510.i, align 8
  %753 = ptrtoint ptr %728 to i32
  call void @__asan_load4_noabort(i32 %753)
  %754 = load ptr, ptr %728, align 4
  %dev259.i.i = getelementptr inbounds %struct.pci_dev, ptr %754, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev259.i.i, ptr noundef nonnull @.str.384) #20
  %755 = ptrtoint ptr %flags2.i510.i to i32
  call void @__asan_load8_noabort(i32 %755)
  %756 = load i64, ptr %flags2.i510.i, align 8
  %and262.i.i = and i64 %756, -274877906945
  store i64 %and262.i.i, ptr %flags2.i510.i, align 8
  %757 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %757)
  %tobool264.not.i.i = icmp eq i32 %757, 0
  br i1 %tobool264.not.i.i, label %if.end251.i.i.do.end274.i.i_crit_edge, label %do.end268.i.i

if.end251.i.i.do.end274.i.i_crit_edge:            ; preds = %if.end251.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end274.i.i

do.end268.i.i:                                    ; preds = %if.end251.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %758 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %758)
  %759 = load ptr, ptr %priv, align 8
  %760 = ptrtoint ptr %759 to i32
  call void @__asan_load4_noabort(i32 %760)
  %761 = load ptr, ptr %759, align 4
  %dev271.i.i = getelementptr inbounds %struct.pci_dev, ptr %761, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev271.i.i, ptr noundef nonnull @.str.387) #20
  br label %do.end274.i.i

do.end274.i.i:                                    ; preds = %do.end268.i.i, %if.end251.i.i.do.end274.i.i_crit_edge
  call fastcc void @slave_adjust_steering_mode(ptr noundef %priv, ptr noundef nonnull %call7.i.i438.i.i, ptr noundef nonnull %call7.i.i.i.i) #17
  %762 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %762)
  %tobool276.not.i.i = icmp eq i32 %762, 0
  br i1 %tobool276.not.i.i, label %do.end274.i.i.do.end289.i.i_crit_edge, label %do.end280.i.i

do.end274.i.i.do.end289.i.i_crit_edge:            ; preds = %do.end274.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end289.i.i

do.end280.i.i:                                    ; preds = %do.end274.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %763 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %763)
  %764 = load ptr, ptr %priv, align 8
  %765 = ptrtoint ptr %764 to i32
  call void @__asan_load4_noabort(i32 %765)
  %766 = load ptr, ptr %764, align 4
  %dev283.i.i = getelementptr inbounds %struct.pci_dev, ptr %766, i32 0, i32 44
  %rss_ip_frags.i.i = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %call7.i.i.i.i, i32 0, i32 31
  %767 = ptrtoint ptr %rss_ip_frags.i.i to i32
  call void @__asan_load1_noabort(i32 %767)
  %768 = load i8, ptr %rss_ip_frags.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %768)
  %tobool285.not.i.i = icmp eq i8 %768, 0
  %cond286.i.i = select i1 %tobool285.not.i.i, ptr @.str.393, ptr @.str.392
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev283.i.i, ptr noundef nonnull @.str.390, ptr noundef nonnull %cond286.i.i) #20
  br label %do.end289.i.i

do.end289.i.i:                                    ; preds = %do.end280.i.i, %do.end274.i.i.do.end289.i.i_crit_edge
  %extra_flags.i.i = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i437.i.i, i32 0, i32 17
  %769 = ptrtoint ptr %extra_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %769)
  %770 = load i32, ptr %extra_flags.i.i, align 8
  %and290.i.i = and i32 %770, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and290.i.i)
  %tobool291.not.i.i = icmp eq i32 %and290.i.i, 0
  br i1 %tobool291.not.i.i, label %do.end289.i.i.if.end299.i.i_crit_edge, label %land.lhs.true.i511.i

do.end289.i.i.if.end299.i.i_crit_edge:            ; preds = %do.end289.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end299.i.i

land.lhs.true.i511.i:                             ; preds = %do.end289.i.i
  %771 = ptrtoint ptr %bf_reg_size.i.i to i32
  call void @__asan_load4_noabort(i32 %771)
  %772 = load i32, ptr %bf_reg_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %772)
  %tobool293.not.i.i = icmp eq i32 %772, 0
  br i1 %tobool293.not.i.i, label %land.lhs.true.i511.i.if.end299.i.i_crit_edge, label %if.then294.i.i

land.lhs.true.i511.i.if.end299.i.i_crit_edge:     ; preds = %land.lhs.true.i511.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end299.i.i

if.then294.i.i:                                   ; preds = %land.lhs.true.i511.i
  call void @__sanitizer_cov_trace_pc() #19
  %773 = ptrtoint ptr %alloc_res_qp_mask.i.i to i32
  call void @__asan_load1_noabort(i32 %773)
  %774 = load i8, ptr %alloc_res_qp_mask.i.i, align 2
  %775 = or i8 %774, -128
  store i8 %775, ptr %alloc_res_qp_mask.i.i, align 2
  br label %if.end299.i.i

if.end299.i.i:                                    ; preds = %if.then294.i.i, %land.lhs.true.i511.i.if.end299.i.i_crit_edge, %do.end289.i.i.if.end299.i.i_crit_edge
  %and301.i.i = and i32 %770, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and301.i.i)
  %tobool302.not.i.i = icmp eq i32 %and301.i.i, 0
  br i1 %tobool302.not.i.i, label %if.end299.i.i.mlx4_slave_cap.exit.i_crit_edge, label %if.then303.i.i

if.end299.i.i.mlx4_slave_cap.exit.i_crit_edge:    ; preds = %if.end299.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_slave_cap.exit.i

if.then303.i.i:                                   ; preds = %if.end299.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %776 = ptrtoint ptr %alloc_res_qp_mask.i.i to i32
  call void @__asan_load1_noabort(i32 %776)
  %777 = load i8, ptr %alloc_res_qp_mask.i.i, align 2
  %778 = or i8 %777, 64
  store i8 %778, ptr %alloc_res_qp_mask.i.i, align 2
  br label %mlx4_slave_cap.exit.i

if.then311.i.i:                                   ; preds = %cond.end.thread.i.i.if.then311.i.i_crit_edge, %cond.end.i.i.if.then311.i.i_crit_edge
  %cond206.i.i = phi i32 [ 0, %cond.end.i.i.if.then311.i.i_crit_edge ], [ %add169.i.i, %cond.end.thread.i.i.if.then311.i.i_crit_edge ]
  %dev178450.i.i = getelementptr inbounds %struct.pci_dev, ptr %730, i32 0, i32 44
  %mul183452.i.i = mul i32 %724, %722
  %conv207.i.i = zext i32 %cond206.i.i to i64
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev178450.i.i, ptr noundef nonnull @.str.381, i32 noundef %mul183452.i.i, i64 noundef %conv207.i.i) #20
  %779 = ptrtoint ptr %spec_qps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %779)
  %780 = load ptr, ptr %spec_qps.i.i.i, align 8
  call void @kfree(ptr noundef %780) #17
  %781 = ptrtoint ptr %spec_qps.i.i.i to i32
  call void @__asan_store4_noabort(i32 %781)
  store ptr null, ptr %spec_qps.i.i.i, align 8
  br label %mlx4_slave_cap.exit.i

mlx4_slave_cap.exit.i:                            ; preds = %if.then311.i.i, %if.then303.i.i, %if.end299.i.i.mlx4_slave_cap.exit.i_crit_edge, %do.end146.i.i, %do.end134.i.i, %do.end95.i.i, %do.end85.i.i, %do.end74.i.i, %do.end59.i.i, %do.end33.i.i, %do.end21.i.i, %do.end12.i.i, %do.end.i495.i
  %err.1.i512.i = phi i32 [ %call7.i.i777, %do.end12.i.i ], [ -22, %do.end21.i.i ], [ %call28.i.i778, %do.end33.i.i ], [ -19, %do.end59.i.i ], [ -19, %do.end74.i.i ], [ %call80.i.i, %do.end85.i.i ], [ -22, %do.end95.i.i ], [ -19, %do.end134.i.i ], [ %call141.i.i, %do.end146.i.i ], [ -12, %if.then311.i.i ], [ -12, %do.end.i495.i ], [ 0, %if.then303.i.i ], [ 0, %if.end299.i.i.mlx4_slave_cap.exit.i_crit_edge ]
  call void @kfree(ptr noundef %call7.i.i.i.i) #17
  call void @kfree(ptr noundef %call7.i.i437.i.i) #17
  call void @kfree(ptr noundef %call7.i.i438.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.1.i512.i)
  %tobool246.not.i = icmp eq i32 %err.1.i512.i, 0
  br i1 %tobool246.not.i, label %mlx4_slave_cap.exit.i.if.end255.i_crit_edge, label %do.end250.i

mlx4_slave_cap.exit.i.if.end255.i_crit_edge:      ; preds = %mlx4_slave_cap.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end255.i

do.end250.i:                                      ; preds = %mlx4_slave_cap.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %782 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %782)
  %783 = load ptr, ptr %priv, align 8
  %784 = ptrtoint ptr %783 to i32
  call void @__asan_load4_noabort(i32 %784)
  %785 = load ptr, ptr %783, align 4
  %dev253.i = getelementptr inbounds %struct.pci_dev, ptr %785, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev253.i, ptr noundef nonnull @.str.201) #20
  br label %err_close.i

if.end255.i:                                      ; preds = %mlx4_slave_cap.exit.i.if.end255.i_crit_edge, %dmfs_high_rate_steering_mode_str.exit.i, %if.end195.i.if.end255.i_crit_edge
  %init_hca.0.i = phi ptr [ null, %mlx4_slave_cap.exit.i.if.end255.i_crit_edge ], [ %call7.i.i452.i, %dmfs_high_rate_steering_mode_str.exit.i ], [ %call7.i.i452.i, %if.end195.i.if.end255.i_crit_edge ]
  %dev_cap.0.i = phi ptr [ null, %mlx4_slave_cap.exit.i.if.end255.i_crit_edge ], [ %call7.i.i.i, %dmfs_high_rate_steering_mode_str.exit.i ], [ %call7.i.i.i, %if.end195.i.if.end255.i_crit_edge ]
  %786 = ptrtoint ptr %bf_reg_size.i.i to i32
  call void @__asan_load4_noabort(i32 %786)
  %787 = load i32, ptr %bf_reg_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %787)
  %tobool.not.i514.i = icmp eq i32 %787, 0
  br i1 %tobool.not.i514.i, label %if.end255.i.do.body259.i_crit_edge, label %if.end.i525.i

if.end255.i.do.body259.i_crit_edge:               ; preds = %if.end255.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body259.i

if.end.i525.i:                                    ; preds = %if.end255.i
  %788 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %788)
  %789 = load ptr, ptr %priv, align 8
  %790 = ptrtoint ptr %789 to i32
  call void @__asan_load4_noabort(i32 %790)
  %791 = load ptr, ptr %789, align 4
  %arrayidx.i515.i = getelementptr %struct.pci_dev, ptr %791, i32 0, i32 47, i32 2
  %792 = ptrtoint ptr %arrayidx.i515.i to i32
  call void @__asan_load4_noabort(i32 %792)
  %793 = load i32, ptr %arrayidx.i515.i, align 8
  %794 = ptrtoint ptr %num_uars.i.i to i32
  call void @__asan_load4_noabort(i32 %794)
  %795 = load i32, ptr %num_uars.i.i, align 4
  %shl.i517.i = shl i32 %795, 12
  %add.i518.i = add i32 %shl.i517.i, %793
  %end.i519.i = getelementptr %struct.pci_dev, ptr %791, i32 0, i32 47, i32 2, i32 1
  %796 = ptrtoint ptr %end.i519.i to i32
  call void @__asan_load4_noabort(i32 %796)
  %797 = load i32, ptr %end.i519.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %797)
  %cmp.i520.i = icmp eq i32 %797, 0
  %sub.i521.i = sub i32 1, %793
  %add16.i.i = add i32 %sub.i521.i, %797
  %cond.i522.i = select i1 %cmp.i520.i, i32 0, i32 %add16.i.i
  %shl19.neg.i.i = mul i32 %795, -4096
  %sub20.i.i = add i32 %cond.i522.i, %shl19.neg.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %798 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i523.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %798, i32 noundef 3264, i32 noundef 16) #22
  %tobool.not.i.i524.i = icmp eq ptr %call7.i.i.i523.i, null
  br i1 %tobool.not.i.i524.i, label %if.end.i525.i.select.unfold.i_crit_edge, label %if.end.i.i527.i

if.end.i525.i.select.unfold.i_crit_edge:          ; preds = %if.end.i525.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %select.unfold.i

if.end.i.i527.i:                                  ; preds = %if.end.i525.i
  %call.i.i.i526.i = call ptr @ioremap_wc(i32 noundef %add.i518.i, i32 noundef %sub20.i.i) #17
  %iomem.i.i.i.i = getelementptr inbounds %struct.io_mapping, ptr %call7.i.i.i523.i, i32 0, i32 3
  %799 = ptrtoint ptr %iomem.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %799)
  store ptr %call.i.i.i526.i, ptr %iomem.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %call.i.i.i526.i, null
  br i1 %tobool.not.i.i.i.i, label %if.then3.i.i.i, label %io_mapping_create_wc.exit.i.i

if.then3.i.i.i:                                   ; preds = %if.end.i.i527.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @kfree(ptr noundef nonnull %call7.i.i.i523.i) #17
  br label %select.unfold.i

io_mapping_create_wc.exit.i.i:                    ; preds = %if.end.i.i527.i
  call void @__sanitizer_cov_trace_pc() #19
  %800 = ptrtoint ptr %call7.i.i.i523.i to i32
  call void @__asan_store4_noabort(i32 %800)
  store i32 %add.i518.i, ptr %call7.i.i.i523.i, align 8
  %size3.i.i.i.i = getelementptr inbounds %struct.io_mapping, ptr %call7.i.i.i523.i, i32 0, i32 1
  %801 = ptrtoint ptr %size3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %801)
  store i32 %sub20.i.i, ptr %size3.i.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %802 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i.i = and i32 %802, -573
  %or4.i.i.i.i = or i32 %or.i.i.i.i, 516
  %prot.i.i.i.i = getelementptr inbounds %struct.io_mapping, ptr %call7.i.i.i523.i, i32 0, i32 2
  %803 = ptrtoint ptr %prot.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %803)
  store i32 %or4.i.i.i.i, ptr %prot.i.i.i.i, align 8
  %804 = ptrtoint ptr %bf_mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %804)
  store ptr %call7.i.i.i523.i, ptr %bf_mapping.i.i, align 8
  br label %if.end271.i

select.unfold.i:                                  ; preds = %if.then3.i.i.i, %if.end.i525.i.select.unfold.i_crit_edge
  %805 = ptrtoint ptr %bf_mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %805)
  store ptr null, ptr %bf_mapping.i.i, align 8
  br label %do.body259.i

do.body259.i:                                     ; preds = %select.unfold.i, %if.end255.i.do.body259.i_crit_edge
  %806 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %806)
  %tobool260.not.i = icmp eq i32 %806, 0
  br i1 %tobool260.not.i, label %do.body259.i.if.end271.i_crit_edge, label %do.end264.i

do.body259.i.if.end271.i_crit_edge:               ; preds = %do.body259.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end271.i

do.end264.i:                                      ; preds = %do.body259.i
  call void @__sanitizer_cov_trace_pc() #19
  %807 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %807)
  %808 = load ptr, ptr %priv, align 8
  %809 = ptrtoint ptr %808 to i32
  call void @__asan_load4_noabort(i32 %809)
  %810 = load ptr, ptr %808, align 4
  %dev267.i = getelementptr inbounds %struct.pci_dev, ptr %810, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev267.i, ptr noundef nonnull @.str.204) #20
  br label %if.end271.i

if.end271.i:                                      ; preds = %do.end264.i, %do.body259.i.if.end271.i_crit_edge, %io_mapping_create_wc.exit.i.i
  %811 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %811)
  %812 = load i32, ptr %flags.i, align 4
  %and.i532.i = and i32 %812, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i532.i)
  %tobool273.not.i = icmp eq i32 %and.i532.i, 0
  br i1 %tobool273.not.i, label %if.then274.i, label %if.end271.i.if.end275.i_crit_edge

if.end271.i.if.end275.i_crit_edge:                ; preds = %if.end271.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end275.i

if.then274.i:                                     ; preds = %if.end271.i
  %813 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %813)
  %814 = load i32, ptr %num_ports103.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %814)
  %cmp.not9.i.i = icmp slt i32 %814, 1
  br i1 %cmp.not9.i.i, label %if.then274.i.if.end275.i_crit_edge, label %if.then274.i.for.body.i537.i_crit_edge

if.then274.i.for.body.i537.i_crit_edge:           ; preds = %if.then274.i
  br label %for.body.i537.i

if.then274.i.if.end275.i_crit_edge:               ; preds = %if.then274.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end275.i

for.body.i537.i:                                  ; preds = %for.body.i537.i.for.body.i537.i_crit_edge, %if.then274.i.for.body.i537.i_crit_edge
  %i.010.i.i = phi i32 [ %inc.i535.i, %for.body.i537.i.for.body.i537.i_crit_edge ], [ 1, %if.then274.i.for.body.i537.i_crit_edge ]
  %arrayidx.i534.i = getelementptr %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 73, i32 %i.010.i.i
  %815 = ptrtoint ptr %arrayidx.i534.i to i32
  call void @__asan_load4_noabort(i32 %815)
  %816 = load i32, ptr %arrayidx.i534.i, align 4
  %arrayidx3.i.i = getelementptr %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 77, i32 %i.010.i.i
  %817 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_store4_noabort(i32 %817)
  store i32 %816, ptr %arrayidx3.i.i, align 4
  %inc.i535.i = add i32 %i.010.i.i, 1
  %818 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %818)
  %819 = load i32, ptr %num_ports103.i.i, align 4
  %cmp.not.i536.i = icmp sgt i32 %inc.i535.i, %819
  br i1 %cmp.not.i536.i, label %for.body.i537.i.if.end275.i_crit_edge, label %for.body.i537.i.for.body.i537.i_crit_edge

for.body.i537.i.for.body.i537.i_crit_edge:        ; preds = %for.body.i537.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i537.i

for.body.i537.i.if.end275.i_crit_edge:            ; preds = %for.body.i537.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end275.i

if.end275.i:                                      ; preds = %for.body.i537.i.if.end275.i_crit_edge, %if.then274.i.if.end275.i_crit_edge, %if.end271.i.if.end275.i_crit_edge
  %call276.i = call i32 @mlx4_QUERY_ADAPTER(ptr noundef %priv, ptr noundef nonnull %adapter.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call276.i)
  %tobool277.not.i = icmp eq i32 %call276.i, 0
  br i1 %tobool277.not.i, label %if.end285.i, label %do.end281.i

do.end281.i:                                      ; preds = %if.end275.i
  %820 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %820)
  %821 = load ptr, ptr %priv, align 8
  %822 = ptrtoint ptr %821 to i32
  call void @__asan_load4_noabort(i32 %822)
  %823 = load ptr, ptr %821, align 4
  %dev284.i = getelementptr inbounds %struct.pci_dev, ptr %823, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev284.i, ptr noundef nonnull @.str.207) #20
  %824 = ptrtoint ptr %clock_mapping.i to i32
  call void @__asan_load4_noabort(i32 %824)
  %825 = load ptr, ptr %clock_mapping.i, align 4
  %tobool.not.i538.i = icmp eq ptr %825, null
  br i1 %tobool.not.i538.i, label %do.end281.i.unmap_internal_clock.exit.i_crit_edge, label %if.then.i539.i

do.end281.i.unmap_internal_clock.exit.i_crit_edge: ; preds = %do.end281.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %unmap_internal_clock.exit.i

if.then.i539.i:                                   ; preds = %do.end281.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @iounmap(ptr noundef nonnull %825) #17
  br label %unmap_internal_clock.exit.i

unmap_internal_clock.exit.i:                      ; preds = %if.then.i539.i, %do.end281.i.unmap_internal_clock.exit.i_crit_edge
  %826 = ptrtoint ptr %bf_mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %826)
  %827 = load ptr, ptr %bf_mapping.i.i, align 8
  %tobool.not.i871 = icmp eq ptr %827, null
  br i1 %tobool.not.i871, label %unmap_internal_clock.exit.i.unmap_bf_area.exit_crit_edge, label %if.then.i872

unmap_internal_clock.exit.i.unmap_bf_area.exit_crit_edge: ; preds = %unmap_internal_clock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %unmap_bf_area.exit

if.then.i872:                                     ; preds = %unmap_internal_clock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %iomem.i.i.i = getelementptr inbounds %struct.io_mapping, ptr %827, i32 0, i32 3
  %828 = ptrtoint ptr %iomem.i.i.i to i32
  call void @__asan_load4_noabort(i32 %828)
  %829 = load ptr, ptr %iomem.i.i.i, align 4
  call void @iounmap(ptr noundef %829) #17
  call void @kfree(ptr noundef nonnull %827) #17
  br label %unmap_bf_area.exit

unmap_bf_area.exit:                               ; preds = %if.then.i872, %unmap_internal_clock.exit.i.unmap_bf_area.exit_crit_edge
  %830 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %830)
  %831 = load i32, ptr %flags.i, align 4
  %and.i542.i = and i32 %831, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i542.i)
  %tobool312.not.i = icmp eq i32 %and.i542.i, 0
  br i1 %tobool312.not.i, label %unmap_bf_area.exit.err_close.i_crit_edge, label %if.then313.i

unmap_bf_area.exit.err_close.i_crit_edge:         ; preds = %unmap_bf_area.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_close.i

if.end285.i:                                      ; preds = %if.end275.i
  %call286.i = call i32 @mlx4_config_dev_retrieval(ptr noundef %priv, ptr noundef nonnull %params.i) #17
  %832 = zext i32 %call286.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %832, ptr @__sancov_gen_cov_switch_values.626)
  switch i32 %call286.i, label %do.end294.i [
    i32 0, label %if.then300.i
    i32 -95, label %if.end285.i.mlx4_init_hca.exit.thread935_crit_edge
  ]

if.end285.i.mlx4_init_hca.exit.thread935_crit_edge: ; preds = %if.end285.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_init_hca.exit.thread935

do.end294.i:                                      ; preds = %if.end285.i
  call void @__sanitizer_cov_trace_pc() #19
  %833 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %833)
  %834 = load ptr, ptr %priv, align 8
  %835 = ptrtoint ptr %834 to i32
  call void @__asan_load4_noabort(i32 %835)
  %836 = load ptr, ptr %834, align 4
  %dev297.i = getelementptr inbounds %struct.pci_dev, ptr %836, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev297.i, ptr noundef nonnull @.str.210) #20
  br label %mlx4_init_hca.exit.thread935

if.then300.i:                                     ; preds = %if.end285.i
  call void @__sanitizer_cov_trace_pc() #19
  %837 = getelementptr inbounds %struct.mlx4_config_dev_params, ptr %params.i, i32 0, i32 2
  %838 = getelementptr inbounds %struct.mlx4_config_dev_params, ptr %params.i, i32 0, i32 1
  %839 = ptrtoint ptr %838 to i32
  call void @__asan_load1_noabort(i32 %839)
  %840 = load i8, ptr %838, align 2
  %arrayidx302.i = getelementptr %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 90, i32 1
  %841 = ptrtoint ptr %arrayidx302.i to i32
  call void @__asan_store1_noabort(i32 %841)
  store i8 %840, ptr %arrayidx302.i, align 1
  %842 = ptrtoint ptr %837 to i32
  call void @__asan_load1_noabort(i32 %842)
  %843 = load i8, ptr %837, align 1
  %arrayidx305.i = getelementptr %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 90, i32 2
  %844 = ptrtoint ptr %arrayidx305.i to i32
  call void @__asan_store1_noabort(i32 %844)
  store i8 %843, ptr %arrayidx305.i, align 2
  br label %mlx4_init_hca.exit.thread935

mlx4_init_hca.exit.thread935:                     ; preds = %if.then300.i, %do.end294.i, %if.end285.i.mlx4_init_hca.exit.thread935_crit_edge
  %inta_pin.i = getelementptr inbounds %struct.mlx4_adapter, ptr %adapter.i, i32 0, i32 1
  %845 = ptrtoint ptr %inta_pin.i to i32
  call void @__asan_load1_noabort(i32 %845)
  %846 = load i8, ptr %inta_pin.i, align 1
  %inta_pin308.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 16, i32 9
  %847 = ptrtoint ptr %inta_pin308.i to i32
  call void @__asan_store1_noabort(i32 %847)
  store i8 %846, ptr %inta_pin308.i, align 4
  %board_id.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 9
  %848 = call ptr @memcpy(ptr %board_id.i, ptr %adapter.i, i32 64)
  call void @kfree(ptr noundef %dev_cap.0.i) #17
  call void @kfree(ptr noundef %init_hca.0.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %params.i) #17
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %profile.i) #17
  call void @llvm.lifetime.end.p0(i64 65, ptr nonnull %adapter.i) #17
  br label %if.end215

if.then313.i:                                     ; preds = %unmap_bf_area.exit
  call void @__sanitizer_cov_trace_pc() #19
  %849 = ptrtoint ptr %spec_qps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %849)
  %850 = load ptr, ptr %spec_qps.i.i.i, align 8
  call void @kfree(ptr noundef %850) #17
  %851 = ptrtoint ptr %spec_qps.i.i.i to i32
  call void @__asan_store4_noabort(i32 %851)
  store ptr null, ptr %spec_qps.i.i.i, align 8
  br label %err_close.i

err_close.i:                                      ; preds = %if.then313.i, %unmap_bf_area.exit.err_close.i_crit_edge, %do.end250.i, %do.end130.i
  %init_hca.1.i = phi ptr [ null, %do.end250.i ], [ %init_hca.0.i, %if.then313.i ], [ %init_hca.0.i, %unmap_bf_area.exit.err_close.i_crit_edge ], [ %call7.i.i452.i, %do.end130.i ]
  %dev_cap.1.i = phi ptr [ null, %do.end250.i ], [ %dev_cap.0.i, %if.then313.i ], [ %dev_cap.0.i, %unmap_bf_area.exit.err_close.i_crit_edge ], [ %call7.i.i.i, %do.end130.i ]
  %err.0.i = phi i32 [ %err.1.i512.i, %do.end250.i ], [ %call276.i, %if.then313.i ], [ %call276.i, %unmap_bf_area.exit.err_close.i_crit_edge ], [ %call.i, %do.end130.i ]
  %852 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %852)
  %853 = load i32, ptr %flags.i, align 4
  %and.i544.i = and i32 %853, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i544.i)
  %tobool316.not.i = icmp eq i32 %and.i544.i, 0
  br i1 %tobool316.not.i, label %if.else318.i, label %if.then317.i

if.then317.i:                                     ; preds = %err_close.i
  call void @mutex_lock_nested(ptr noundef %slave_cmd_mutex.i.i, i32 noundef 0) #17
  %call1.i546.i = call i32 @mlx4_comm_cmd(ptr noundef %priv, i8 noundef zeroext 0, i16 noundef zeroext 0, i16 noundef zeroext 0, i32 noundef 10000) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i546.i)
  %tobool.not.i547.i = icmp eq i32 %call1.i546.i, 0
  br i1 %tobool.not.i547.i, label %if.then317.i.mlx4_slave_exit.exit.i_crit_edge, label %do.end.i549.i

if.then317.i.mlx4_slave_exit.exit.i_crit_edge:    ; preds = %if.then317.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_slave_exit.exit.i

do.end.i549.i:                                    ; preds = %if.then317.i
  call void @__sanitizer_cov_trace_pc() #19
  %854 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %854)
  %855 = load ptr, ptr %priv, align 8
  %856 = ptrtoint ptr %855 to i32
  call void @__asan_load4_noabort(i32 %856)
  %857 = load ptr, ptr %855, align 4
  %dev2.i548.i = getelementptr inbounds %struct.pci_dev, ptr %857, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev2.i548.i, ptr noundef nonnull @.str.59) #20
  br label %mlx4_slave_exit.exit.i

mlx4_slave_exit.exit.i:                           ; preds = %do.end.i549.i, %if.then317.i.mlx4_slave_exit.exit.i_crit_edge
  call void @mutex_unlock(ptr noundef %slave_cmd_mutex.i.i) #17
  br label %err_free_icm.i

if.else318.i:                                     ; preds = %err_close.i
  call void @__sanitizer_cov_trace_pc() #19
  %call319.i = call i32 @mlx4_CLOSE_HCA(ptr noundef %priv, i32 noundef 0) #17
  br label %err_free_icm.i

err_free_icm.i:                                   ; preds = %if.else318.i, %mlx4_slave_exit.exit.i, %do.end116.i
  %init_hca.2.i = phi ptr [ %init_hca.1.i, %mlx4_slave_exit.exit.i ], [ %init_hca.1.i, %if.else318.i ], [ %call7.i.i452.i, %do.end116.i ]
  %dev_cap.2.i = phi ptr [ %dev_cap.1.i, %mlx4_slave_exit.exit.i ], [ %dev_cap.1.i, %if.else318.i ], [ %call7.i.i.i, %do.end116.i ]
  %err.1.i = phi i32 [ %err.0.i, %mlx4_slave_exit.exit.i ], [ %err.0.i, %if.else318.i ], [ %call111.i, %do.end116.i ]
  %858 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %858)
  %859 = load i32, ptr %flags.i, align 4
  %and.i552.i = and i32 %859, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i552.i)
  %tobool322.not.i = icmp eq i32 %and.i552.i, 0
  br i1 %tobool322.not.i, label %if.then323.i, label %err_free_icm.i.mlx4_init_hca.exit_crit_edge

err_free_icm.i.mlx4_init_hca.exit_crit_edge:      ; preds = %err_free_icm.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_init_hca.exit

if.then323.i:                                     ; preds = %err_free_icm.i
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @mlx4_free_icms(ptr noundef %priv) #17
  br label %mlx4_init_hca.exit

mlx4_init_hca.exit.thread:                        ; preds = %do.end239.i, %do.end27.i.i, %do.end.i486.i
  %retval.0.i779.ph = phi i32 [ -517, %do.end27.i.i ], [ -517, %do.end.i486.i ], [ -5, %do.end239.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %params.i) #17
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %profile.i) #17
  call void @llvm.lifetime.end.p0(i64 65, ptr nonnull %adapter.i) #17
  br label %err_fw

mlx4_init_hca.exit:                               ; preds = %if.then323.i, %err_free_icm.i.mlx4_init_hca.exit_crit_edge, %mlx4_init_icm.exit.thread.i, %if.then46.i, %do.end.i764
  %init_hca.3.i = phi ptr [ %init_hca.2.i, %err_free_icm.i.mlx4_init_hca.exit_crit_edge ], [ %init_hca.2.i, %if.then323.i ], [ %call7.i.i452.i, %do.end.i764 ], [ %call7.i.i452.i, %if.then46.i ], [ %call7.i.i452.i, %mlx4_init_icm.exit.thread.i ]
  %dev_cap.3.i = phi ptr [ %dev_cap.2.i, %err_free_icm.i.mlx4_init_hca.exit_crit_edge ], [ %dev_cap.2.i, %if.then323.i ], [ %call7.i.i.i, %do.end.i764 ], [ %call7.i.i.i, %if.then46.i ], [ %call7.i.i.i, %mlx4_init_icm.exit.thread.i ]
  %err.2.i = phi i32 [ %err.1.i, %err_free_icm.i.mlx4_init_hca.exit_crit_edge ], [ %err.1.i, %if.then323.i ], [ %call7.i, %do.end.i764 ], [ %conv.i, %if.then46.i ], [ %retval.0.i.ph.i775, %mlx4_init_icm.exit.thread.i ]
  call void @kfree(ptr noundef %dev_cap.3.i) #17
  call void @kfree(ptr noundef %init_hca.3.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %params.i) #17
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %profile.i) #17
  call void @llvm.lifetime.end.p0(i64 65, ptr nonnull %adapter.i) #17
  %860 = zext i32 %err.2.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %860, ptr @__sancov_gen_cov_switch_values.627)
  switch i32 %err.2.i, label %mlx4_init_hca.exit.err_fw_crit_edge [
    i32 0, label %mlx4_init_hca.exit.if.end215_crit_edge
    i32 -13, label %if.then190
  ]

mlx4_init_hca.exit.if.end215_crit_edge:           ; preds = %mlx4_init_hca.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end215

mlx4_init_hca.exit.err_fw_crit_edge:              ; preds = %mlx4_init_hca.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_fw

if.then190:                                       ; preds = %mlx4_init_hca.exit
  call void @mlx4_cmd_cleanup(ptr noundef %priv, i32 noundef 15) #17
  %861 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %861)
  %862 = load i32, ptr %flags.i, align 4
  %and192 = and i32 %862, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and192)
  %tobool193.not = icmp eq i32 %and192, 0
  br i1 %tobool193.not, label %if.then190.if.end205_crit_edge, label %if.then194

if.then190.if.end205_crit_edge:                   ; preds = %if.then190
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end205

if.then194:                                       ; preds = %if.then190
  br i1 %tobool195.not, label %if.then196, label %if.then194.if.end197_crit_edge

if.then194.if.end197_crit_edge:                   ; preds = %if.then194
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end197

if.then196:                                       ; preds = %if.then194
  call void @__sanitizer_cov_trace_pc() #19
  call void @pci_disable_sriov(ptr noundef %pdev) #17
  br label %if.end197

if.end197:                                        ; preds = %if.then196, %if.then194.if.end197_crit_edge
  %863 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %863)
  %864 = load i32, ptr %flags.i, align 4
  %and.i781 = and i32 %864, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i781)
  %tobool199.not = icmp ne i32 %and.i781, 0
  %or.cond = and i1 %tobool200.not, %tobool199.not
  br i1 %or.cond, label %if.then201, label %if.end197.if.end202_crit_edge

if.end197.if.end202_crit_edge:                    ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end202

if.then201:                                       ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i720 = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @pf_loading, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr nonnull @pf_loading, i32 1, i32 3, i32 1) #17
  %865 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @pf_loading, ptr nonnull @pf_loading, i32 1, ptr nonnull elementtype(i32) @pf_loading) #17, !srcloc !1182
  br label %if.end202

if.end202:                                        ; preds = %if.then201, %if.end197.if.end202_crit_edge
  %866 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %866)
  %867 = load i32, ptr %flags.i, align 4
  %and204 = and i32 %867, -17
  store i32 %and204, ptr %flags.i, align 4
  br label %if.end205

if.end205:                                        ; preds = %if.end202, %if.then190.if.end205_crit_edge
  %868 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %868)
  %869 = load i32, ptr %flags.i, align 4
  %and.i783 = and i32 %869, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i783)
  %tobool207.not = icmp eq i32 %and.i783, 0
  br i1 %tobool207.not, label %if.then208, label %if.end205.if.end209_crit_edge

if.end205.if.end209_crit_edge:                    ; preds = %if.end205
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end209

if.then208:                                       ; preds = %if.end205
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @mlx4_free_ownership(ptr noundef %priv)
  br label %if.end209

if.end209:                                        ; preds = %if.then208, %if.end205.if.end209_crit_edge
  %870 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %870)
  %871 = load i32, ptr %flags.i, align 4
  %or211 = and i32 %871, -13
  %and213 = or i32 %or211, 8
  store i32 %and213, ptr %flags.i, align 4
  br label %slave_start.backedge

slave_start.backedge:                             ; preds = %if.end209, %if.end156.slave_start.backedge_crit_edge
  %dev_cap.0.be = phi ptr [ %dev_cap.1, %if.end209 ], [ %call7.i.i, %if.end156.slave_start.backedge_crit_edge ]
  %call67 = call i32 @mlx4_cmd_init(ptr noundef %priv) #17
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %slave_start.backedge.if.end76_crit_edge, label %slave_start.backedge.do.end72_crit_edge

slave_start.backedge.do.end72_crit_edge:          ; preds = %slave_start.backedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end72

slave_start.backedge.if.end76_crit_edge:          ; preds = %slave_start.backedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end76

if.end215:                                        ; preds = %mlx4_init_hca.exit.if.end215_crit_edge, %mlx4_init_hca.exit.thread935
  %872 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %872)
  %873 = load i32, ptr %flags.i, align 4
  %and.i785 = and i32 %873, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i785)
  %tobool217.not = icmp eq i32 %and.i785, 0
  br i1 %tobool217.not, label %if.end215.if.end273_crit_edge, label %land.lhs.true218

if.end215.if.end273_crit_edge:                    ; preds = %if.end215
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end273

land.lhs.true218:                                 ; preds = %if.end215
  %flags2219 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap.1, i32 0, i32 25
  %874 = ptrtoint ptr %flags2219 to i32
  call void @__asan_load8_noabort(i32 %874)
  %875 = load i64, ptr %flags2219, align 8
  %and220 = and i64 %875, 131072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and220)
  %tobool221.not = icmp eq i64 %and220, 0
  br i1 %tobool221.not, label %land.lhs.true218.if.end273_crit_edge, label %if.then222

land.lhs.true218.if.end273_crit_edge:             ; preds = %land.lhs.true218
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end273

if.then222:                                       ; preds = %land.lhs.true218
  %call225 = call fastcc i64 @mlx4_enable_sriov(ptr noundef %priv, ptr noundef %pdev, i8 noundef zeroext %conv, i32 noundef %existing_vfs.0, i32 noundef %reset_flow)
  %876 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %876)
  %877 = load i32, ptr %flags.i, align 4
  %conv227 = zext i32 %877 to i64
  %xor = xor i64 %call225, %conv227
  %and228 = and i64 %xor, 12
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and228)
  %tobool229.not = icmp eq i64 %and228, 0
  br i1 %tobool229.not, label %if.else243, label %if.then230

if.then230:                                       ; preds = %if.then222
  call void @mlx4_cmd_cleanup(ptr noundef %priv, i32 noundef 8) #17
  %conv231 = trunc i64 %call225 to i32
  %878 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %878)
  store i32 %conv231, ptr %flags.i, align 4
  %call233 = call i32 @mlx4_cmd_init(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call233)
  %tobool234.not = icmp eq i32 %call233, 0
  br i1 %tobool234.not, label %if.then230.if.end246_crit_edge, label %do.end238

if.then230.if.end246_crit_edge:                   ; preds = %if.then230
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end246

do.end238:                                        ; preds = %if.then230
  call void @__sanitizer_cov_trace_pc() #19
  %879 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %879)
  %880 = load ptr, ptr %priv, align 8
  %881 = ptrtoint ptr %880 to i32
  call void @__asan_load4_noabort(i32 %881)
  %882 = load ptr, ptr %880, align 4
  %dev241 = getelementptr inbounds %struct.pci_dev, ptr %882, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev241, ptr noundef nonnull @.str.110) #20
  br label %err_close

if.else243:                                       ; preds = %if.then222
  call void @__sanitizer_cov_trace_pc() #19
  %conv244 = trunc i64 %call225 to i32
  %883 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %883)
  store i32 %conv244, ptr %flags.i, align 4
  br label %if.end246

if.end246:                                        ; preds = %if.else243, %if.then230.if.end246_crit_edge
  %884 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %884)
  %885 = load i32, ptr %flags.i, align 4
  %and248 = lshr i32 %885, 4
  %and255 = lshr i32 %885, 2
  %886 = xor i32 %and248, %and255
  %887 = and i32 %886, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %887)
  %cmp261 = icmp eq i32 %887, 0
  br i1 %cmp261, label %if.end246.if.end273_crit_edge, label %do.end266

if.end246.if.end273_crit_edge:                    ; preds = %if.end246
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end273

do.end266:                                        ; preds = %if.end246
  call void @__sanitizer_cov_trace_pc() #19
  %888 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %888)
  %889 = load ptr, ptr %priv, align 8
  %890 = ptrtoint ptr %889 to i32
  call void @__asan_load4_noabort(i32 %890)
  %891 = load ptr, ptr %889, align 4
  %dev269 = getelementptr inbounds %struct.pci_dev, ptr %891, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev269, ptr noundef nonnull @.str.102) #20
  br label %err_close

if.end273:                                        ; preds = %if.end246.if.end273_crit_edge, %land.lhs.true218.if.end273_crit_edge, %if.end215.if.end273_crit_edge
  %892 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %892)
  %893 = load i32, ptr %flags.i, align 4
  %and.i787 = and i32 %893, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i787)
  %tobool275.not = icmp eq i32 %and.i787, 0
  br i1 %tobool275.not, label %if.then276, label %if.end273.if.end279_crit_edge

if.end273.if.end279_crit_edge:                    ; preds = %if.end273
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end279

if.then276:                                       ; preds = %if.end273
  call void @__sanitizer_cov_trace_pc() #19
  %894 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %894)
  %895 = load ptr, ptr %priv, align 8
  %896 = ptrtoint ptr %895 to i32
  call void @__asan_load4_noabort(i32 %896)
  %897 = load ptr, ptr %895, align 4
  call void @pcie_print_link_status(ptr noundef %897) #17
  br label %if.end279

if.end279:                                        ; preds = %if.then276, %if.end273.if.end279_crit_edge
  %898 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %898)
  %899 = load i32, ptr %flags.i, align 4
  %and.i789 = and i32 %899, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i789)
  %tobool281.not = icmp eq i32 %and.i789, 0
  br i1 %tobool281.not, label %if.end279.if.end337_crit_edge, label %if.then282

if.end279.if.end337_crit_edge:                    ; preds = %if.end279
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end337

if.then282:                                       ; preds = %if.end279
  %900 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %900)
  %901 = load i32, ptr %num_ports103.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %901)
  %cmp283 = icmp slt i32 %901, 2
  br i1 %cmp283, label %land.lhs.true285, label %if.then282.if.end297_crit_edge

if.then282.if.end297_crit_edge:                   ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end297

land.lhs.true285:                                 ; preds = %if.then282
  %902 = load i32, ptr @num_vfs_argc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %902)
  %cmp286 = icmp sgt i32 %902, 1
  br i1 %cmp286, label %if.then288, label %land.lhs.true285.if.end297_crit_edge

land.lhs.true285.if.end297_crit_edge:             ; preds = %land.lhs.true285
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end297

if.then288:                                       ; preds = %land.lhs.true285
  call void @__sanitizer_cov_trace_pc() #19
  %903 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %903)
  %904 = load ptr, ptr %priv, align 8
  %905 = ptrtoint ptr %904 to i32
  call void @__asan_load4_noabort(i32 %905)
  %906 = load ptr, ptr %904, align 4
  %dev294 = getelementptr inbounds %struct.pci_dev, ptr %906, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev294, ptr noundef nonnull @.str.115, i32 noundef %901) #20
  br label %err_close

if.end297:                                        ; preds = %land.lhs.true285.if.end297_crit_edge, %if.then282.if.end297_crit_edge
  %907 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %907)
  %908 = load ptr, ptr %priv, align 8
  %nvfs299 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %908, i32 0, i32 2
  %909 = call ptr @memcpy(ptr %nvfs299, ptr %nvfs, i32 12)
  %dev_vfs = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 14
  %910 = load ptr, ptr %priv, align 8
  %arrayidx1111 = getelementptr %struct.mlx4_dev_persistent, ptr %910, i32 0, i32 2, i32 0
  %911 = ptrtoint ptr %arrayidx1111 to i32
  call void @__asan_load4_noabort(i32 %911)
  %912 = load i32, ptr %arrayidx1111, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %912)
  %cmp3051112.not = icmp eq i32 %912, 0
  br i1 %cmp3051112.not, label %if.end297.for.end_crit_edge, label %if.end297.cond.end318_crit_edge

if.end297.cond.end318_crit_edge:                  ; preds = %if.end297
  br label %cond.end318

if.end297.for.end_crit_edge:                      ; preds = %if.end297
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

cond.end318:                                      ; preds = %cond.end318.cond.end318_crit_edge, %if.end297.cond.end318_crit_edge
  %j.01114 = phi i32 [ %inc323, %cond.end318.cond.end318_crit_edge ], [ 0, %if.end297.cond.end318_crit_edge ]
  %913 = ptrtoint ptr %dev_vfs to i32
  call void @__asan_load4_noabort(i32 %913)
  %914 = load ptr, ptr %dev_vfs, align 8
  %arrayidx311 = getelementptr %struct.mlx4_vf_dev, ptr %914, i32 %j.01114
  %915 = ptrtoint ptr %arrayidx311 to i32
  call void @__asan_store1_noabort(i32 %915)
  store i8 1, ptr %arrayidx311, align 1
  %916 = load ptr, ptr %dev_vfs, align 8
  %n_ports = getelementptr %struct.mlx4_vf_dev, ptr %916, i32 %j.01114, i32 1
  %917 = ptrtoint ptr %n_ports to i32
  call void @__asan_store1_noabort(i32 %917)
  store i8 1, ptr %n_ports, align 1
  %inc323 = add nuw i32 %j.01114, 1
  %918 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %918)
  %919 = load ptr, ptr %priv, align 8
  %arrayidx = getelementptr %struct.mlx4_dev_persistent, ptr %919, i32 0, i32 2, i32 0
  %920 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %920)
  %921 = load i32, ptr %arrayidx, align 4
  %cmp305 = icmp ult i32 %inc323, %921
  br i1 %cmp305, label %cond.end318.cond.end318_crit_edge, label %cond.end318.for.end_crit_edge

cond.end318.for.end_crit_edge:                    ; preds = %cond.end318
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

cond.end318.cond.end318_crit_edge:                ; preds = %cond.end318
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end318

for.end:                                          ; preds = %cond.end318.for.end_crit_edge, %if.end297.for.end_crit_edge
  %sum.1.lcssa = phi i32 [ 0, %if.end297.for.end_crit_edge ], [ %inc323, %cond.end318.for.end_crit_edge ]
  %922 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %922)
  %923 = load ptr, ptr %priv, align 8
  %arrayidx1111.1 = getelementptr %struct.mlx4_dev_persistent, ptr %923, i32 0, i32 2, i32 1
  %924 = ptrtoint ptr %arrayidx1111.1 to i32
  call void @__asan_load4_noabort(i32 %924)
  %925 = load i32, ptr %arrayidx1111.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %925)
  %cmp3051112.not.1 = icmp eq i32 %925, 0
  br i1 %cmp3051112.not.1, label %for.end.for.end.1_crit_edge, label %for.end.cond.end318.1_crit_edge

for.end.cond.end318.1_crit_edge:                  ; preds = %for.end
  br label %cond.end318.1

for.end.for.end.1_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.1

cond.end318.1:                                    ; preds = %cond.end318.1.cond.end318.1_crit_edge, %for.end.cond.end318.1_crit_edge
  %j.01114.1 = phi i32 [ %inc323.1, %cond.end318.1.cond.end318.1_crit_edge ], [ 0, %for.end.cond.end318.1_crit_edge ]
  %sum.11113.1 = phi i32 [ %inc.1, %cond.end318.1.cond.end318.1_crit_edge ], [ %sum.1.lcssa, %for.end.cond.end318.1_crit_edge ]
  %926 = ptrtoint ptr %dev_vfs to i32
  call void @__asan_load4_noabort(i32 %926)
  %927 = load ptr, ptr %dev_vfs, align 8
  %arrayidx311.1 = getelementptr %struct.mlx4_vf_dev, ptr %927, i32 %sum.11113.1
  %928 = ptrtoint ptr %arrayidx311.1 to i32
  call void @__asan_store1_noabort(i32 %928)
  store i8 2, ptr %arrayidx311.1, align 1
  %929 = load ptr, ptr %dev_vfs, align 8
  %n_ports.1 = getelementptr %struct.mlx4_vf_dev, ptr %929, i32 %sum.11113.1, i32 1
  %930 = ptrtoint ptr %n_ports.1 to i32
  call void @__asan_store1_noabort(i32 %930)
  store i8 1, ptr %n_ports.1, align 1
  %inc.1 = add i32 %sum.11113.1, 1
  %inc323.1 = add nuw i32 %j.01114.1, 1
  %931 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %931)
  %932 = load ptr, ptr %priv, align 8
  %arrayidx.1 = getelementptr %struct.mlx4_dev_persistent, ptr %932, i32 0, i32 2, i32 1
  %933 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %933)
  %934 = load i32, ptr %arrayidx.1, align 4
  %cmp305.1 = icmp ult i32 %inc323.1, %934
  br i1 %cmp305.1, label %cond.end318.1.cond.end318.1_crit_edge, label %cond.end318.1.for.end.1_crit_edge

cond.end318.1.for.end.1_crit_edge:                ; preds = %cond.end318.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.1

cond.end318.1.cond.end318.1_crit_edge:            ; preds = %cond.end318.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end318.1

for.end.1:                                        ; preds = %cond.end318.1.for.end.1_crit_edge, %for.end.for.end.1_crit_edge
  %sum.1.lcssa.1 = phi i32 [ %sum.1.lcssa, %for.end.for.end.1_crit_edge ], [ %inc.1, %cond.end318.1.for.end.1_crit_edge ]
  %935 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %935)
  %936 = load ptr, ptr %priv, align 8
  %arrayidx1111.2 = getelementptr %struct.mlx4_dev_persistent, ptr %936, i32 0, i32 2, i32 2
  %937 = ptrtoint ptr %arrayidx1111.2 to i32
  call void @__asan_load4_noabort(i32 %937)
  %938 = load i32, ptr %arrayidx1111.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %938)
  %cmp3051112.not.2 = icmp eq i32 %938, 0
  br i1 %cmp3051112.not.2, label %for.end.1.for.end.2_crit_edge, label %for.end.1.cond.end318.2_crit_edge

for.end.1.cond.end318.2_crit_edge:                ; preds = %for.end.1
  br label %cond.end318.2

for.end.1.for.end.2_crit_edge:                    ; preds = %for.end.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.2

cond.end318.2:                                    ; preds = %cond.end318.2.cond.end318.2_crit_edge, %for.end.1.cond.end318.2_crit_edge
  %j.01114.2 = phi i32 [ %inc323.2, %cond.end318.2.cond.end318.2_crit_edge ], [ 0, %for.end.1.cond.end318.2_crit_edge ]
  %sum.11113.2 = phi i32 [ %inc.2, %cond.end318.2.cond.end318.2_crit_edge ], [ %sum.1.lcssa.1, %for.end.1.cond.end318.2_crit_edge ]
  %939 = ptrtoint ptr %dev_vfs to i32
  call void @__asan_load4_noabort(i32 %939)
  %940 = load ptr, ptr %dev_vfs, align 8
  %arrayidx311.2 = getelementptr %struct.mlx4_vf_dev, ptr %940, i32 %sum.11113.2
  %941 = ptrtoint ptr %arrayidx311.2 to i32
  call void @__asan_store1_noabort(i32 %941)
  store i8 1, ptr %arrayidx311.2, align 1
  %942 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %942)
  %943 = load i32, ptr %num_ports103.i.i, align 4
  %conv320.2 = trunc i32 %943 to i8
  %944 = load ptr, ptr %dev_vfs, align 8
  %n_ports.2 = getelementptr %struct.mlx4_vf_dev, ptr %944, i32 %sum.11113.2, i32 1
  %945 = ptrtoint ptr %n_ports.2 to i32
  call void @__asan_store1_noabort(i32 %945)
  store i8 %conv320.2, ptr %n_ports.2, align 1
  %inc.2 = add i32 %sum.11113.2, 1
  %inc323.2 = add nuw i32 %j.01114.2, 1
  %946 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %946)
  %947 = load ptr, ptr %priv, align 8
  %arrayidx.2 = getelementptr %struct.mlx4_dev_persistent, ptr %947, i32 0, i32 2, i32 2
  %948 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %948)
  %949 = load i32, ptr %arrayidx.2, align 4
  %cmp305.2 = icmp ult i32 %inc323.2, %949
  br i1 %cmp305.2, label %cond.end318.2.cond.end318.2_crit_edge, label %cond.end318.2.for.end.2_crit_edge

cond.end318.2.for.end.2_crit_edge:                ; preds = %cond.end318.2
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.2

cond.end318.2.cond.end318.2_crit_edge:            ; preds = %cond.end318.2
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end318.2

for.end.2:                                        ; preds = %cond.end318.2.for.end.2_crit_edge, %for.end.1.for.end.2_crit_edge
  %call327 = call i32 @mlx4_multi_func_init(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call327)
  %tobool328.not = icmp eq i32 %call327, 0
  br i1 %tobool328.not, label %for.end.2.if.end337_crit_edge, label %do.end332

for.end.2.if.end337_crit_edge:                    ; preds = %for.end.2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end337

do.end332:                                        ; preds = %for.end.2
  call void @__sanitizer_cov_trace_pc() #19
  %950 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %950)
  %951 = load ptr, ptr %priv, align 8
  %952 = ptrtoint ptr %951 to i32
  call void @__asan_load4_noabort(i32 %952)
  %953 = load ptr, ptr %951, align 4
  %dev335 = getelementptr inbounds %struct.pci_dev, ptr %953, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev335, ptr noundef nonnull @.str.118) #20
  br label %err_close

if.end337:                                        ; preds = %for.end.2.if.end337_crit_edge, %if.end279.if.end337_crit_edge
  %call338 = call i32 @mlx4_alloc_eq_table(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call338)
  %tobool339.not = icmp eq i32 %call338, 0
  br i1 %tobool339.not, label %if.end341, label %if.end337.err_master_mfunc_crit_edge

if.end337.err_master_mfunc_crit_edge:             ; preds = %if.end337
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_master_mfunc

if.end341:                                        ; preds = %if.end337
  %msix_ctl = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 29
  %954 = call ptr @memset(ptr %msix_ctl, i32 0, i32 16)
  %pool_lock = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 29, i32 1
  call void @__mutex_init(ptr noundef %pool_lock, ptr noundef nonnull @.str.121, ptr noundef nonnull @mlx4_load_one.__key.120) #17
  %955 = load i32, ptr @msi_x, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %955)
  %tobool.not.i790 = icmp eq i32 %955, 0
  br i1 %tobool.not.i790, label %if.end341.for.inc151.1.i_crit_edge, label %if.then.i796

if.end341.for.inc151.1.i_crit_edge:               ; preds = %if.end341
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc151.1.i

if.then.i796:                                     ; preds = %if.end341
  %956 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %956)
  %957 = load i32, ptr %num_ports103.i.i, align 4
  %call.i.i.i.i791 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @__num_online_cpus, i32 noundef 4) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__num_online_cpus to i32))
  %958 = load volatile i32, ptr @__num_online_cpus, align 4
  %mul.i = mul i32 %958, %957
  %add.i792 = add i32 %mul.i, 1
  %959 = ptrtoint ptr %num_eqs.i.i to i32
  call void @__asan_load4_noabort(i32 %959)
  %960 = load i32, ptr %num_eqs.i.i, align 4
  %961 = ptrtoint ptr %reserved_eqs.i.i to i32
  call void @__asan_load4_noabort(i32 %961)
  %962 = load i32, ptr %reserved_eqs.i.i, align 8
  %sub.i795 = sub i32 %960, %962
  %963 = call i32 @llvm.smin.i32(i32 %add.i792, i32 %sub.i795) #17
  %964 = call i32 @llvm.smin.i32(i32 %963, i32 128) #17
  %965 = load i32, ptr @msi_x, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %965)
  %cmp10.i = icmp sgt i32 %965, 1
  %966 = call i32 @llvm.smin.i32(i32 %964, i32 %965) #17
  %nreq.0.i = select i1 %cmp10.i, i32 %966, i32 %964
  %967 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %nreq.0.i, i32 8) #17
  %968 = extractvalue { i32, i1 } %967, 1
  br i1 %968, label %if.then.i796.for.inc151.1.i_crit_edge, label %if.end7.i.i.i799, !prof !1183

if.then.i796.for.inc151.1.i_crit_edge:            ; preds = %if.then.i796
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc151.1.i

if.end7.i.i.i799:                                 ; preds = %if.then.i796
  %969 = extractvalue { i32, i1 } %967, 0
  %call8.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %969, i32 noundef 3520) #23
  %tobool19.not.i = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool19.not.i, label %if.end7.i.i.i799.for.inc151.1.i_crit_edge, label %for.cond.preheader.i

if.end7.i.i.i799.for.inc151.1.i_crit_edge:        ; preds = %if.end7.i.i.i799
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc151.1.i

for.cond.preheader.i:                             ; preds = %if.end7.i.i.i799
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nreq.0.i)
  %cmp22237.not.i = icmp eq i32 %nreq.0.i, 0
  br i1 %cmp22237.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.0238.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %conv.i801 = trunc i32 %i.0238.i to i16
  %entry23.i = getelementptr %struct.msix_entry, ptr %call8.i.i.i, i32 %i.0238.i, i32 1
  %970 = ptrtoint ptr %entry23.i to i32
  call void @__asan_store2_noabort(i32 %970)
  store i16 %conv.i801, ptr %entry23.i, align 4
  %inc.i = add nuw nsw i32 %i.0238.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %nreq.0.i
  br i1 %exitcond.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %971 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %971)
  %972 = load ptr, ptr %priv, align 8
  %973 = ptrtoint ptr %972 to i32
  call void @__asan_load4_noabort(i32 %973)
  %974 = load ptr, ptr %972, align 4
  %call24.i = call i32 @pci_enable_msix_range(ptr noundef %974, ptr noundef nonnull %call8.i.i.i, i32 noundef 2, i32 noundef %nreq.0.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24.i)
  %cmp25.i = icmp slt i32 %call24.i, 0
  br i1 %cmp25.i, label %if.then29.i802, label %if.end30.i805

if.then29.i802:                                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @kfree(ptr noundef nonnull %call8.i.i.i) #17
  br label %for.inc151.1.i

if.end30.i805:                                    ; preds = %for.end.i
  %sub31.i = add nsw i32 %call24.i, -1
  %num_comp_vectors.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 39
  %975 = ptrtoint ptr %num_comp_vectors.i to i32
  call void @__asan_store4_noabort(i32 %975)
  store i32 %sub31.i, ptr %num_comp_vectors.i, align 4
  %976 = ptrtoint ptr %call8.i.i.i to i32
  call void @__asan_load4_noabort(i32 %976)
  %977 = load i32, ptr %call8.i.i.i, align 128
  %conv34.i = trunc i32 %977 to i16
  %eq.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 16, i32 5
  %978 = ptrtoint ptr %eq.i to i32
  call void @__asan_load4_noabort(i32 %978)
  %979 = load ptr, ptr %eq.i, align 4
  %irq.i = getelementptr inbounds %struct.mlx4_eq, ptr %979, i32 0, i32 4
  %980 = ptrtoint ptr %irq.i to i32
  call void @__asan_store2_noabort(i32 %980)
  store i16 %conv34.i, ptr %irq.i, align 4
  %981 = load ptr, ptr %eq.i, align 4
  %actv_ports.i = getelementptr inbounds %struct.mlx4_eq, ptr %981, i32 0, i32 10
  %982 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %982)
  %983 = load i32, ptr %num_ports103.i.i, align 4
  %sub.i.i803 = add i32 %983, 31
  %984 = lshr i32 %sub.i.i803, 3
  %mul.i.i804 = and i32 %984, 536870908
  %985 = call ptr @memset(ptr %actv_ports.i, i32 0, i32 %mul.i.i804)
  %986 = load i32, ptr %num_comp_vectors.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %986)
  %cmp45240.i = icmp ult i32 %986, 2147483647
  br i1 %cmp45240.i, label %if.end30.i805.for.body47.i_crit_edge, label %if.end30.i805.for.end120.i_crit_edge

if.end30.i805.for.end120.i_crit_edge:             ; preds = %if.end30.i805
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end120.i

if.end30.i805.for.body47.i_crit_edge:             ; preds = %if.end30.i805
  br label %for.body47.i

for.body47.i:                                     ; preds = %for.inc118.i.for.body47.i_crit_edge, %if.end30.i805.for.body47.i_crit_edge
  %i.1245.i = phi i32 [ %inc119.pre-phi.i, %for.inc118.i.for.body47.i_crit_edge ], [ 0, %if.end30.i805.for.body47.i_crit_edge ]
  %port.0241.i = phi i32 [ %port.1.i, %for.inc118.i.for.body47.i_crit_edge ], [ 0, %if.end30.i805.for.body47.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.1245.i)
  %cmp48.i = icmp eq i32 %i.1245.i, 0
  br i1 %cmp48.i, label %for.body47.i.for.inc118.i_crit_edge, label %if.end51.i

for.body47.i.for.inc118.i_crit_edge:              ; preds = %for.body47.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc118.i

if.end51.i:                                       ; preds = %for.body47.i
  %add52.i = add nuw nsw i32 %i.1245.i, 1
  %arrayidx57.i = getelementptr %struct.msix_entry, ptr %call8.i.i.i, i32 %i.1245.i
  %987 = ptrtoint ptr %arrayidx57.i to i32
  call void @__asan_load4_noabort(i32 %987)
  %988 = load i32, ptr %arrayidx57.i, align 8
  %conv59.i = trunc i32 %988 to i16
  %989 = ptrtoint ptr %eq.i to i32
  call void @__asan_load4_noabort(i32 %989)
  %990 = load ptr, ptr %eq.i, align 4
  %irq63.i = getelementptr %struct.mlx4_eq, ptr %990, i32 %i.1245.i, i32 4
  %991 = ptrtoint ptr %irq63.i to i32
  call void @__asan_store2_noabort(i32 %991)
  store i16 %conv59.i, ptr %irq63.i, align 4
  %992 = ptrtoint ptr %num_comp_vectors.i to i32
  call void @__asan_load4_noabort(i32 %992)
  %993 = load i32, ptr %num_comp_vectors.i, align 4
  %994 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %994)
  %995 = load i32, ptr %num_ports103.i.i, align 4
  %mul68.i = mul i32 %995, 5
  call void @__sanitizer_cov_trace_cmp4(i32 %993, i32 %mul68.i)
  %cmp69.i = icmp slt i32 %993, %mul68.i
  %996 = ptrtoint ptr %eq.i to i32
  call void @__asan_load4_noabort(i32 %996)
  %997 = load ptr, ptr %eq.i, align 4
  %actv_ports75.i = getelementptr %struct.mlx4_eq, ptr %997, i32 %i.1245.i, i32 10
  br i1 %cmp69.i, label %if.then71.i, label %if.else.i807

if.then71.i:                                      ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i228.i = add i32 %995, 31
  %998 = lshr i32 %sub.i228.i, 3
  %mul.i229.i = and i32 %998, 536870908
  %999 = call ptr @memset(ptr %actv_ports75.i, i32 255, i32 %mul.i229.i)
  br label %if.end94.i

if.else.i807:                                     ; preds = %if.end51.i
  call void @_set_bit(i32 noundef %port.0241.i, ptr noundef %actv_ports75.i) #17
  %1000 = ptrtoint ptr %num_comp_vectors.i to i32
  call void @__asan_load4_noabort(i32 %1000)
  %1001 = load i32, ptr %num_comp_vectors.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1001, i32 %i.1245.i)
  %cmp.i.i806 = icmp slt i32 %1001, %i.1245.i
  br i1 %cmp.i.i806, label %if.else.i807.do.end.i812_crit_edge, label %for.cond.preheader.i.i

if.else.i807.do.end.i812_crit_edge:               ; preds = %if.else.i807
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i812

for.cond.preheader.i.i:                           ; preds = %if.else.i807
  %add86.i = add i32 %port.0241.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %add86.i)
  %cmp130.i.i = icmp sgt i32 %add86.i, 1
  br i1 %cmp130.i.i, label %for.cond.preheader.i.i.for.body.i.i811_crit_edge, label %for.cond.preheader.i.i.for.end.i.i_crit_edge

for.cond.preheader.i.i.for.end.i.i_crit_edge:     ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i.i

for.cond.preheader.i.i.for.body.i.i811_crit_edge: ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i811

for.body.i.i811:                                  ; preds = %for.body.i.i811.for.body.i.i811_crit_edge, %for.cond.preheader.i.i.for.body.i.i811_crit_edge
  %i.032.i.i = phi i32 [ %inc.i.i810, %for.body.i.i811.for.body.i.i811_crit_edge ], [ 1, %for.cond.preheader.i.i.for.body.i.i811_crit_edge ]
  %off.031.i.i = phi i32 [ %add.i.i809, %for.body.i.i811.for.body.i.i811_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i811_crit_edge ]
  %conv.i.i808 = trunc i32 %i.032.i.i to i8
  %call2.i.i = call i32 @mlx4_get_eqs_per_port(ptr noundef %priv, i8 noundef zeroext %conv.i.i808) #17
  %add.i.i809 = add i32 %call2.i.i, %off.031.i.i
  %inc.i.i810 = add nuw nsw i32 %i.032.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %i.032.i.i, %port.0241.i
  br i1 %exitcond.not.i.i, label %for.body.i.i811.for.end.i.i_crit_edge, label %for.body.i.i811.for.body.i.i811_crit_edge

for.body.i.i811.for.body.i.i811_crit_edge:        ; preds = %for.body.i.i811
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i811

for.body.i.i811.for.end.i.i_crit_edge:            ; preds = %for.body.i.i811
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body.i.i811.for.end.i.i_crit_edge, %for.cond.preheader.i.i.for.end.i.i_crit_edge
  %off.0.lcssa.i.i = phi i32 [ 0, %for.cond.preheader.i.i.for.end.i.i_crit_edge ], [ %add.i.i809, %for.body.i.i811.for.end.i.i_crit_edge ]
  %1002 = xor i32 %off.0.lcssa.i.i, -1
  %sub6.i.i = add i32 %i.1245.i, %1002
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub6.i.i)
  %cmp7.i.i = icmp slt i32 %sub6.i.i, 0
  br i1 %cmp7.i.i, label %for.end.i.i.if.end94.i_crit_edge, label %if.end10.i.i

for.end.i.i.if.end94.i_crit_edge:                 ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end94.i

if.end10.i.i:                                     ; preds = %for.end.i.i
  %1003 = ptrtoint ptr %eq.i to i32
  call void @__asan_load4_noabort(i32 %1003)
  %1004 = load ptr, ptr %eq.i, align 4
  %affinity_mask.i.i = getelementptr %struct.mlx4_eq, ptr %1004, i32 %i.1245.i, i32 12
  %call12.i.i = call zeroext i1 @zalloc_cpumask_var(ptr noundef %affinity_mask.i.i, i32 noundef 3264) #17
  br i1 %call12.i.i, label %if.end14.i.i, label %if.end10.i.i.do.end.i812_crit_edge

if.end10.i.i.do.end.i812_crit_edge:               ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i812

if.end14.i.i:                                     ; preds = %if.end10.i.i
  %1005 = ptrtoint ptr %affinity_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %1005)
  %1006 = load ptr, ptr %affinity_mask.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1007 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1007, i32 %sub6.i.i)
  %cmp.not.i.i.i.i.i = icmp ugt i32 %1007, %sub6.i.i
  br i1 %cmp.not.i.i.i.i.i, label %if.end14.i.i.cpumask_set_cpu.exit.i.i_crit_edge, label %land.rhs.i.i.i.i.i

if.end14.i.i.cpumask_set_cpu.exit.i.i_crit_edge:  ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpumask_set_cpu.exit.i.i

land.rhs.i.i.i.i.i:                               ; preds = %if.end14.i.i
  %.b37.i.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i.i, label %land.rhs.i.i.i.i.i.cpumask_set_cpu.exit.i.i_crit_edge, label %if.then.i.i.i.i.i, !prof !1184

land.rhs.i.i.i.i.i.cpumask_set_cpu.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpumask_set_cpu.exit.i.i

if.then.i.i.i.i.i:                                ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.406, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpumask_set_cpu.exit.i.i

cpumask_set_cpu.exit.i.i:                         ; preds = %if.then.i.i.i.i.i, %land.rhs.i.i.i.i.i.cpumask_set_cpu.exit.i.i_crit_edge, %if.end14.i.i.cpumask_set_cpu.exit.i.i_crit_edge
  call void @_set_bit(i32 noundef %sub6.i.i, ptr noundef %1006) #17
  br label %if.end94.i

do.end.i812:                                      ; preds = %if.end10.i.i.do.end.i812_crit_edge, %if.else.i807.do.end.i812_crit_edge
  %1008 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1008)
  %1009 = load ptr, ptr %priv, align 8
  %1010 = ptrtoint ptr %1009 to i32
  call void @__asan_load4_noabort(i32 %1010)
  %1011 = load ptr, ptr %1009, align 4
  %dev92.i = getelementptr inbounds %struct.pci_dev, ptr %1011, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev92.i, ptr noundef nonnull @.str.404, i32 noundef %i.1245.i) #20
  br label %if.end94.i

if.end94.i:                                       ; preds = %do.end.i812, %cpumask_set_cpu.exit.i.i, %for.end.i.i.if.end94.i_crit_edge, %if.then71.i
  %1012 = ptrtoint ptr %num_comp_vectors.i to i32
  call void @__asan_load4_noabort(i32 %1012)
  %1013 = load i32, ptr %num_comp_vectors.i, align 4
  %1014 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %1014)
  %1015 = load i32, ptr %num_ports103.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1013, i32 %1015)
  %cmp99.i = icmp sgt i32 %1013, %1015
  br i1 %cmp99.i, label %land.lhs.true.i813, label %if.end94.i.for.inc118.i_crit_edge

if.end94.i.for.inc118.i_crit_edge:                ; preds = %if.end94.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc118.i

land.lhs.true.i813:                               ; preds = %if.end94.i
  call void @__sanitizer_cov_trace_pc() #19
  %div.i = sdiv i32 %1013, %1015
  %rem.i = srem i32 %add52.i, %div.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %rem.i)
  %cmp113.i = icmp eq i32 %rem.i, 1
  %inc116.i = zext i1 %cmp113.i to i32
  %spec.select.i = add i32 %port.0241.i, %inc116.i
  br label %for.inc118.i

for.inc118.i:                                     ; preds = %land.lhs.true.i813, %if.end94.i.for.inc118.i_crit_edge, %for.body47.i.for.inc118.i_crit_edge
  %inc119.pre-phi.i = phi i32 [ %add52.i, %land.lhs.true.i813 ], [ %add52.i, %if.end94.i.for.inc118.i_crit_edge ], [ 1, %for.body47.i.for.inc118.i_crit_edge ]
  %port.1.i = phi i32 [ %spec.select.i, %land.lhs.true.i813 ], [ %port.0241.i, %if.end94.i.for.inc118.i_crit_edge ], [ %port.0241.i, %for.body47.i.for.inc118.i_crit_edge ]
  %1016 = ptrtoint ptr %num_comp_vectors.i to i32
  call void @__asan_load4_noabort(i32 %1016)
  %1017 = load i32, ptr %num_comp_vectors.i, align 4
  %add44.i = add i32 %1017, 1
  %cmp45.i814 = icmp slt i32 %inc119.pre-phi.i, %add44.i
  br i1 %cmp45.i814, label %for.inc118.i.for.body47.i_crit_edge, label %for.inc118.i.for.end120.i_crit_edge

for.inc118.i.for.end120.i_crit_edge:              ; preds = %for.inc118.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end120.i

for.inc118.i.for.body47.i_crit_edge:              ; preds = %for.inc118.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body47.i

for.end120.i:                                     ; preds = %for.inc118.i.for.end120.i_crit_edge, %if.end30.i805.for.end120.i_crit_edge
  %1018 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1018)
  %1019 = load i32, ptr %flags.i, align 4
  %or.i816 = or i32 %1019, 1
  store i32 %or.i816, ptr %flags.i, align 4
  call void @kfree(ptr noundef nonnull %call8.i.i.i) #17
  br label %mlx4_enable_msi_x.exit

for.inc151.1.i:                                   ; preds = %if.then29.i802, %if.end7.i.i.i799.for.inc151.1.i_crit_edge, %if.then.i796.for.inc151.1.i_crit_edge, %if.end341.for.inc151.1.i_crit_edge
  %num_comp_vectors123.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 39
  %1020 = ptrtoint ptr %num_comp_vectors123.i to i32
  call void @__asan_store4_noabort(i32 %1020)
  store i32 1, ptr %num_comp_vectors123.i, align 4
  %eq136.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 16, i32 5
  %1021 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1021)
  %1022 = load ptr, ptr %priv, align 8
  %1023 = ptrtoint ptr %1022 to i32
  call void @__asan_load4_noabort(i32 %1023)
  %1024 = load ptr, ptr %1022, align 4
  %irq133.i = getelementptr inbounds %struct.pci_dev, ptr %1024, i32 0, i32 46
  %1025 = ptrtoint ptr %irq133.i to i32
  call void @__asan_load4_noabort(i32 %1025)
  %1026 = load i32, ptr %irq133.i, align 4
  %conv134.i = trunc i32 %1026 to i16
  %1027 = ptrtoint ptr %eq136.i to i32
  call void @__asan_load4_noabort(i32 %1027)
  %1028 = load ptr, ptr %eq136.i, align 4
  %irq138.i = getelementptr %struct.mlx4_eq, ptr %1028, i32 0, i32 4
  %1029 = ptrtoint ptr %irq138.i to i32
  call void @__asan_store2_noabort(i32 %1029)
  store i16 %conv134.i, ptr %irq138.i, align 4
  %1030 = load ptr, ptr %priv, align 8
  %1031 = ptrtoint ptr %1030 to i32
  call void @__asan_load4_noabort(i32 %1031)
  %1032 = load ptr, ptr %1030, align 4
  %irq133.1.i = getelementptr inbounds %struct.pci_dev, ptr %1032, i32 0, i32 46
  %1033 = ptrtoint ptr %irq133.1.i to i32
  call void @__asan_load4_noabort(i32 %1033)
  %1034 = load i32, ptr %irq133.1.i, align 4
  %conv134.1.i = trunc i32 %1034 to i16
  %1035 = load ptr, ptr %eq136.i, align 4
  %irq138.1.i = getelementptr %struct.mlx4_eq, ptr %1035, i32 1, i32 4
  %1036 = ptrtoint ptr %irq138.1.i to i32
  call void @__asan_store2_noabort(i32 %1036)
  store i16 %conv134.1.i, ptr %irq138.1.i, align 4
  %1037 = load ptr, ptr %eq136.i, align 4
  %actv_ports145.1.i = getelementptr %struct.mlx4_eq, ptr %1037, i32 1, i32 10
  %1038 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %1038)
  %1039 = load i32, ptr %num_ports103.i.i, align 4
  %sub.i231.1.i = add i32 %1039, 31
  %1040 = lshr i32 %sub.i231.1.i, 3
  %mul.i232.1.i = and i32 %1040, 536870908
  %1041 = call ptr @memset(ptr %actv_ports145.1.i, i32 255, i32 %mul.i232.1.i)
  br label %mlx4_enable_msi_x.exit

mlx4_enable_msi_x.exit:                           ; preds = %for.inc151.1.i, %for.end120.i
  %1042 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1042)
  %1043 = load i32, ptr %flags.i, align 4
  %and.i818 = and i32 %1043, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i818)
  %tobool348.not = icmp ne i32 %and.i818, 0
  %and351 = and i32 %1043, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and351)
  %tobool352.not = icmp eq i32 %and351, 0
  %or.cond945 = and i1 %tobool348.not, %tobool352.not
  br i1 %or.cond945, label %if.then353, label %if.end360

if.then353:                                       ; preds = %mlx4_enable_msi_x.exit
  call void @__sanitizer_cov_trace_pc() #19
  %1044 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1044)
  %1045 = load ptr, ptr %priv, align 8
  %1046 = ptrtoint ptr %1045 to i32
  call void @__asan_load4_noabort(i32 %1046)
  %1047 = load ptr, ptr %1045, align 4
  %dev359 = getelementptr inbounds %struct.pci_dev, ptr %1047, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev359, ptr noundef nonnull @.str.123) #20
  br label %err_free_eq

if.end360:                                        ; preds = %mlx4_enable_msi_x.exit
  %and.i820 = and i32 %1043, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i820)
  %tobool362.not = icmp eq i32 %and.i820, 0
  br i1 %tobool362.not, label %if.then363, label %if.end360.if.end368_crit_edge

if.end360.if.end368_crit_edge:                    ; preds = %if.end360
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end368

if.then363:                                       ; preds = %if.end360
  %call364 = call fastcc i32 @mlx4_init_steering(ptr noundef %priv)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call364)
  %tobool365.not = icmp eq i32 %call364, 0
  br i1 %tobool365.not, label %if.then363.if.end368_crit_edge, label %if.then363.err_disable_msix_crit_edge

if.then363.err_disable_msix_crit_edge:            ; preds = %if.then363
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_disable_msix

if.then363.if.end368_crit_edge:                   ; preds = %if.then363
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end368

if.end368:                                        ; preds = %if.then363.if.end368_crit_edge, %if.end360.if.end368_crit_edge
  call void @mlx4_init_quotas(ptr noundef %priv) #17
  %call369 = call fastcc i32 @mlx4_setup_hca(ptr noundef %priv)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %call369)
  %cmp370 = icmp eq i32 %call369, -16
  br i1 %cmp370, label %land.lhs.true372, label %if.end368.if.end384_crit_edge

if.end368.if.end384_crit_edge:                    ; preds = %if.end368
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end384

land.lhs.true372:                                 ; preds = %if.end368
  %1048 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1048)
  %1049 = load i32, ptr %flags.i, align 4
  %1050 = and i32 %1049, 13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1050)
  %1051 = icmp eq i32 %1050, 1
  br i1 %1051, label %if.then379, label %land.lhs.true372.err_steer_crit_edge

land.lhs.true372.err_steer_crit_edge:             ; preds = %land.lhs.true372
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_steer

if.then379:                                       ; preds = %land.lhs.true372
  call void @__sanitizer_cov_trace_pc() #19
  %and381 = and i32 %1049, -2
  %1052 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %1052)
  store i32 %and381, ptr %flags.i, align 4
  %num_comp_vectors = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 39
  %1053 = ptrtoint ptr %num_comp_vectors to i32
  call void @__asan_store4_noabort(i32 %1053)
  store i32 1, ptr %num_comp_vectors, align 4
  call void @pci_disable_msix(ptr noundef %pdev) #17
  %call383 = call fastcc i32 @mlx4_setup_hca(ptr noundef %priv)
  br label %if.end384

if.end384:                                        ; preds = %if.then379, %if.end368.if.end384_crit_edge
  %err.3 = phi i32 [ %call383, %if.then379 ], [ %call369, %if.end368.if.end384_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.3)
  %tobool385.not = icmp eq i32 %err.3, 0
  br i1 %tobool385.not, label %if.end387, label %if.end384.err_steer_crit_edge

if.end384.err_steer_crit_edge:                    ; preds = %if.end384
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_steer

if.end387:                                        ; preds = %if.end384
  %1054 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1054)
  %1055 = load i32, ptr %flags.i, align 4
  %and.i824 = and i32 %1055, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i824)
  %tobool389.not = icmp eq i32 %and.i824, 0
  br i1 %tobool389.not, label %if.end387.if.end401_crit_edge, label %if.then390

if.end387.if.end401_crit_edge:                    ; preds = %if.end387
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end401

if.then390:                                       ; preds = %if.end387
  %call391 = call i32 @mlx4_ARM_COMM_CHANNEL(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call391)
  %tobool392.not = icmp eq i32 %call391, 0
  br i1 %tobool392.not, label %if.then390.if.end401_crit_edge, label %do.end396

if.then390.if.end401_crit_edge:                   ; preds = %if.then390
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end401

do.end396:                                        ; preds = %if.then390
  call void @__sanitizer_cov_trace_pc() #19
  %1056 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1056)
  %1057 = load ptr, ptr %priv, align 8
  %1058 = ptrtoint ptr %1057 to i32
  call void @__asan_load4_noabort(i32 %1058)
  %1059 = load ptr, ptr %1057, align 4
  %dev399 = getelementptr inbounds %struct.pci_dev, ptr %1059, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev399, ptr noundef nonnull @.str.126, i32 noundef %call391) #20
  br label %err_steer

if.end401:                                        ; preds = %if.then390.if.end401_crit_edge, %if.end387.if.end401_crit_edge
  %1060 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %1060)
  %1061 = load i32, ptr %num_ports103.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1061)
  %cmp405.not1119 = icmp slt i32 %1061, 1
  br i1 %cmp405.not1119, label %if.end401.for.end414_crit_edge, label %if.end401.for.body407_crit_edge

if.end401.for.body407_crit_edge:                  ; preds = %if.end401
  br label %for.body407

if.end401.for.end414_crit_edge:                   ; preds = %if.end401
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end414

for.body407:                                      ; preds = %for.inc412.for.body407_crit_edge, %if.end401.for.body407_crit_edge
  %port.01120 = phi i32 [ %inc413, %for.inc412.for.body407_crit_edge ], [ 1, %if.end401.for.body407_crit_edge ]
  %call1.i825 = call ptr @priv_to_devlink(ptr noundef %priv) #17
  %arrayidx.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120
  %devlink_port.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 12
  %call4.i = call i32 @devlink_port_register(ptr noundef %call1.i825, ptr noundef %devlink_port.i, i32 noundef %port.01120) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not.i826 = icmp eq i32 %call4.i, 0
  br i1 %tobool.not.i826, label %if.end.i830, label %for.body407.err_port_crit_edge

for.body407.err_port_crit_edge:                   ; preds = %for.body407
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_port

if.end.i830:                                      ; preds = %for.body407
  %1062 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %1062)
  store ptr %priv, ptr %arrayidx.i, align 8
  %port6.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 1
  %1063 = ptrtoint ptr %port6.i to i32
  call void @__asan_store4_noabort(i32 %1063)
  store i32 %port.01120, ptr %port6.i, align 4
  %1064 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1064)
  %1065 = load i32, ptr %flags.i, align 4
  %and.i.i828 = and i32 %1065, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i828)
  %tobool8.not.i829 = icmp eq i32 %and.i.i828, 0
  br i1 %tobool8.not.i829, label %if.then9.i, label %if.end.i830.if.end11.i832_crit_edge

if.end.i830.if.end11.i832_crit_edge:              ; preds = %if.end.i830
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11.i832

if.then9.i:                                       ; preds = %if.end.i830
  call void @__sanitizer_cov_trace_pc() #19
  %mac_table.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 7
  call void @mlx4_init_mac_table(ptr noundef %priv, ptr noundef %mac_table.i) #17
  %vlan_table.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 8
  call void @mlx4_init_vlan_table(ptr noundef %priv, ptr noundef %vlan_table.i) #17
  %gid_table.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 9
  call void @mlx4_init_roce_gid_table(ptr noundef %priv, ptr noundef %gid_table.i) #17
  %conv.i831 = trunc i32 %port.01120 to i8
  %call10.i = call i32 @mlx4_get_base_qpn(ptr noundef %priv, i8 noundef zeroext %conv.i831) #17
  %base_qpn.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 10
  %1066 = ptrtoint ptr %base_qpn.i to i32
  call void @__asan_store4_noabort(i32 %1066)
  store i32 %call10.i, ptr %base_qpn.i, align 8
  br label %if.end11.i832

if.end11.i832:                                    ; preds = %if.then9.i, %if.end.i830.if.end11.i832_crit_edge
  %dev_name.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 2
  %call12.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %dev_name.i, ptr noundef nonnull @.str.479, i32 noundef %port.01120) #17
  %port_attr.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 3
  %1067 = ptrtoint ptr %port_attr.i to i32
  call void @__asan_store4_noabort(i32 %1067)
  store ptr %dev_name.i, ptr %port_attr.i, align 8
  %1068 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1068)
  %1069 = load i32, ptr %flags.i, align 4
  %and.i148.i = and i32 %1069, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i148.i)
  %tobool16.not.i = icmp eq i32 %and.i148.i, 0
  br i1 %tobool16.not.i, label %if.else.i833, label %if.end11.i832.if.end24.i_crit_edge

if.end11.i832.if.end24.i_crit_edge:               ; preds = %if.end11.i832
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i

if.else.i833:                                     ; preds = %if.end11.i832
  call void @__sanitizer_cov_trace_pc() #19
  %store.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 3, i32 2
  %1070 = ptrtoint ptr %store.i to i32
  call void @__asan_store4_noabort(i32 %1070)
  store ptr @set_port_type, ptr %store.i, align 8
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.else.i833, %if.end11.i832.if.end24.i_crit_edge
  %.sink.i = phi i16 [ 420, %if.else.i833 ], [ 292, %if.end11.i832.if.end24.i_crit_edge ]
  %1071 = getelementptr inbounds %struct.attribute, ptr %port_attr.i, i32 0, i32 1
  %1072 = ptrtoint ptr %1071 to i32
  call void @__asan_store2_noabort(i32 %1072)
  store i16 %.sink.i, ptr %1071, align 4
  %show.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 3, i32 1
  %1073 = ptrtoint ptr %show.i to i32
  call void @__asan_store4_noabort(i32 %1073)
  store ptr @show_port_type, ptr %show.i, align 4
  %key.i = getelementptr inbounds %struct.attribute, ptr %port_attr.i, i32 0, i32 3
  %1074 = ptrtoint ptr %key.i to i32
  call void @__asan_store4_noabort(i32 %1074)
  store ptr @mlx4_init_port_info.__key, ptr %key.i, align 8
  %1075 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1075)
  %1076 = load ptr, ptr %priv, align 8
  %1077 = ptrtoint ptr %1076 to i32
  call void @__asan_load4_noabort(i32 %1077)
  %1078 = load ptr, ptr %1076, align 4
  %dev28.i = getelementptr inbounds %struct.pci_dev, ptr %1078, i32 0, i32 44
  %call30.i = call i32 @device_create_file(ptr noundef %dev28.i, ptr noundef %port_attr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i)
  %tobool31.not.i = icmp eq i32 %call30.i, 0
  br i1 %tobool31.not.i, label %if.end41.i, label %do.end35.i835

do.end35.i835:                                    ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #19
  %1079 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1079)
  %1080 = load ptr, ptr %priv, align 8
  %1081 = ptrtoint ptr %1080 to i32
  call void @__asan_load4_noabort(i32 %1081)
  %1082 = load ptr, ptr %1080, align 4
  %dev38.i834 = getelementptr inbounds %struct.pci_dev, ptr %1082, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev38.i834, ptr noundef nonnull @.str.480, i32 noundef %port.01120) #20
  br label %cleanup.sink.split.i

if.end41.i:                                       ; preds = %if.end24.i
  %dev_mtu_name.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 5
  %call43.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %dev_mtu_name.i, ptr noundef nonnull @.str.482, i32 noundef %port.01120) #17
  %port_mtu_attr.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 6
  %1083 = ptrtoint ptr %port_mtu_attr.i to i32
  call void @__asan_store4_noabort(i32 %1083)
  store ptr %dev_mtu_name.i, ptr %port_mtu_attr.i, align 8
  %1084 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1084)
  %1085 = load i32, ptr %flags.i, align 4
  %and.i150.i = and i32 %1085, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i150.i)
  %tobool49.not.i = icmp eq i32 %and.i150.i, 0
  br i1 %tobool49.not.i, label %if.else54.i, label %if.end41.i.if.end60.i_crit_edge

if.end41.i.if.end60.i_crit_edge:                  ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end60.i

if.else54.i:                                      ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #19
  %store59.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 6, i32 2
  %1086 = ptrtoint ptr %store59.i to i32
  call void @__asan_store4_noabort(i32 %1086)
  store ptr @set_port_ib_mtu, ptr %store59.i, align 8
  br label %if.end60.i

if.end60.i:                                       ; preds = %if.else54.i, %if.end41.i.if.end60.i_crit_edge
  %.sink151.i = phi i16 [ 420, %if.else54.i ], [ 292, %if.end41.i.if.end60.i_crit_edge ]
  %1087 = getelementptr inbounds %struct.attribute, ptr %port_mtu_attr.i, i32 0, i32 1
  %1088 = ptrtoint ptr %1087 to i32
  call void @__asan_store2_noabort(i32 %1088)
  store i16 %.sink151.i, ptr %1087, align 4
  %show62.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.01120, i32 6, i32 1
  %1089 = ptrtoint ptr %show62.i to i32
  call void @__asan_store4_noabort(i32 %1089)
  store ptr @show_port_ib_mtu, ptr %show62.i, align 4
  %key66.i = getelementptr inbounds %struct.attribute, ptr %port_mtu_attr.i, i32 0, i32 3
  %1090 = ptrtoint ptr %key66.i to i32
  call void @__asan_store4_noabort(i32 %1090)
  store ptr @mlx4_init_port_info.__key.483, ptr %key66.i, align 8
  %1091 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1091)
  %1092 = load ptr, ptr %priv, align 8
  %1093 = ptrtoint ptr %1092 to i32
  call void @__asan_load4_noabort(i32 %1093)
  %1094 = load ptr, ptr %1092, align 4
  %dev71.i = getelementptr inbounds %struct.pci_dev, ptr %1094, i32 0, i32 44
  %call73.i = call i32 @device_create_file(ptr noundef %dev71.i, ptr noundef %port_mtu_attr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73.i)
  %tobool74.not.i = icmp eq i32 %call73.i, 0
  br i1 %tobool74.not.i, label %for.inc412, label %do.end78.i

do.end78.i:                                       ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #19
  %1095 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1095)
  %1096 = load ptr, ptr %priv, align 8
  %1097 = ptrtoint ptr %1096 to i32
  call void @__asan_load4_noabort(i32 %1097)
  %1098 = load ptr, ptr %1096, align 4
  %dev81.i = getelementptr inbounds %struct.pci_dev, ptr %1098, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev81.i, ptr noundef nonnull @.str.485, i32 noundef %port.01120) #20
  %1099 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %1099)
  %1100 = load ptr, ptr %arrayidx.i, align 8
  %1101 = ptrtoint ptr %1100 to i32
  call void @__asan_load4_noabort(i32 %1101)
  %1102 = load ptr, ptr %1100, align 8
  %1103 = ptrtoint ptr %1102 to i32
  call void @__asan_load4_noabort(i32 %1103)
  %1104 = load ptr, ptr %1102, align 4
  %dev85.i = getelementptr inbounds %struct.pci_dev, ptr %1104, i32 0, i32 44
  call void @device_remove_file(ptr noundef %dev85.i, ptr noundef %port_attr.i) #17
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %do.end78.i, %do.end35.i835
  %retval.0.ph.i = phi i32 [ %call73.i, %do.end78.i ], [ %call30.i, %do.end35.i835 ]
  call void @devlink_port_unregister(ptr noundef %devlink_port.i) #17
  %1105 = ptrtoint ptr %port6.i to i32
  call void @__asan_store4_noabort(i32 %1105)
  store i32 -1, ptr %port6.i, align 4
  br label %err_port

for.inc412:                                       ; preds = %if.end60.i
  %inc413 = add i32 %port.01120, 1
  %1106 = ptrtoint ptr %num_ports103.i.i to i32
  call void @__asan_load4_noabort(i32 %1106)
  %1107 = load i32, ptr %num_ports103.i.i, align 4
  %cmp405.not = icmp sgt i32 %inc413, %1107
  br i1 %cmp405.not, label %for.inc412.for.end414_crit_edge, label %for.inc412.for.body407_crit_edge

for.inc412.for.body407_crit_edge:                 ; preds = %for.inc412
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body407

for.inc412.for.end414_crit_edge:                  ; preds = %for.inc412
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end414

for.end414:                                       ; preds = %for.inc412.for.end414_crit_edge, %if.end401.for.end414_crit_edge
  %port.0.lcssa = phi i32 [ 1, %if.end401.for.end414_crit_edge ], [ %inc413, %for.inc412.for.end414_crit_edge ]
  %v2p = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 38
  %1108 = ptrtoint ptr %v2p to i32
  call void @__asan_store1_noabort(i32 %1108)
  store i8 1, ptr %v2p, align 8
  %port2 = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 38, i32 1
  %1109 = ptrtoint ptr %port2 to i32
  call void @__asan_store1_noabort(i32 %1109)
  store i8 2, ptr %port2, align 1
  %call416 = call i32 @mlx4_register_device(ptr noundef %priv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call416)
  %tobool417.not = icmp eq i32 %call416, 0
  br i1 %tobool417.not, label %if.end419, label %for.end414.err_port_crit_edge

for.end414.err_port_crit_edge:                    ; preds = %for.end414
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_port

if.end419:                                        ; preds = %for.end414
  call fastcc void @mlx4_request_modules(ptr noundef %priv)
  call void @mlx4_sense_init(ptr noundef %priv) #17
  call void @mlx4_start_sense(ptr noundef %priv) #17
  %removed = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 5
  %1110 = ptrtoint ptr %removed to i32
  call void @__asan_store4_noabort(i32 %1110)
  store i32 0, ptr %removed, align 8
  %1111 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1111)
  %1112 = load i32, ptr %flags.i, align 4
  %and.i838 = and i32 %1112, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i838)
  %tobool421.not = icmp eq i32 %and.i838, 0
  br i1 %tobool421.not, label %if.end419.if.end429_crit_edge, label %land.lhs.true422

if.end419.if.end429_crit_edge:                    ; preds = %if.end419
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end429

land.lhs.true422:                                 ; preds = %if.end419
  %1113 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1113)
  %1114 = load ptr, ptr %priv, align 8
  %num_vfs424 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1114, i32 0, i32 3
  %1115 = ptrtoint ptr %num_vfs424 to i32
  call void @__asan_load4_noabort(i32 %1115)
  %1116 = load i32, ptr %num_vfs424, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1116)
  %tobool425.not = icmp ne i32 %1116, 0
  %or.cond717 = and i1 %tobool200.not, %tobool425.not
  br i1 %or.cond717, label %if.then428, label %land.lhs.true422.if.end429_crit_edge

land.lhs.true422.if.end429_crit_edge:             ; preds = %land.lhs.true422
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end429

if.then428:                                       ; preds = %land.lhs.true422
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i721 = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @pf_loading, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr nonnull @pf_loading, i32 1, i32 3, i32 1) #17
  %1117 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @pf_loading, ptr nonnull @pf_loading, i32 1, ptr nonnull elementtype(i32) @pf_loading) #17, !srcloc !1182
  br label %if.end429

if.end429:                                        ; preds = %if.then428, %land.lhs.true422.if.end429_crit_edge, %if.end419.if.end429_crit_edge
  call void @kfree(ptr noundef %dev_cap.1) #17
  br label %cleanup489

err_port:                                         ; preds = %for.end414.err_port_crit_edge, %cleanup.sink.split.i, %for.body407.err_port_crit_edge
  %port.0952 = phi i32 [ %port.0.lcssa, %for.end414.err_port_crit_edge ], [ %port.01120, %cleanup.sink.split.i ], [ %port.01120, %for.body407.err_port_crit_edge ]
  %err.4 = phi i32 [ %call416, %for.end414.err_port_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ], [ %call4.i, %for.body407.err_port_crit_edge ]
  %port.11122 = add i32 %port.0952, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %port.11122)
  %cmp4311123 = icmp sgt i32 %port.11122, 0
  br i1 %cmp4311123, label %err_port.for.body433_crit_edge, label %err_port.for.end438_crit_edge

err_port.for.end438_crit_edge:                    ; preds = %err_port
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end438

err_port.for.body433_crit_edge:                   ; preds = %err_port
  br label %for.body433

for.body433:                                      ; preds = %mlx4_cleanup_port_info.exit.for.body433_crit_edge, %err_port.for.body433_crit_edge
  %port.11124 = phi i32 [ %port.1, %mlx4_cleanup_port_info.exit.for.body433_crit_edge ], [ %port.11122, %err_port.for.body433_crit_edge ]
  %port.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.11124, i32 1
  %1118 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %1118)
  %1119 = load i32, ptr %port.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1119)
  %cmp.i839 = icmp slt i32 %1119, 0
  br i1 %cmp.i839, label %for.body433.mlx4_cleanup_port_info.exit_crit_edge, label %if.end.i844

for.body433.mlx4_cleanup_port_info.exit_crit_edge: ; preds = %for.body433
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_cleanup_port_info.exit

if.end.i844:                                      ; preds = %for.body433
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx435 = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.11124
  %1120 = ptrtoint ptr %arrayidx435 to i32
  call void @__asan_load4_noabort(i32 %1120)
  %1121 = load ptr, ptr %arrayidx435, align 8
  %1122 = ptrtoint ptr %1121 to i32
  call void @__asan_load4_noabort(i32 %1122)
  %1123 = load ptr, ptr %1121, align 8
  %1124 = ptrtoint ptr %1123 to i32
  call void @__asan_load4_noabort(i32 %1124)
  %1125 = load ptr, ptr %1123, align 4
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %1125, i32 0, i32 44
  %port_attr.i840 = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.11124, i32 3
  call void @device_remove_file(ptr noundef %dev1.i, ptr noundef %port_attr.i840) #17
  %1126 = ptrtoint ptr %arrayidx435 to i32
  call void @__asan_load4_noabort(i32 %1126)
  %1127 = load ptr, ptr %arrayidx435, align 8
  %1128 = ptrtoint ptr %1127 to i32
  call void @__asan_load4_noabort(i32 %1128)
  %1129 = load ptr, ptr %1127, align 8
  %1130 = ptrtoint ptr %1129 to i32
  call void @__asan_load4_noabort(i32 %1130)
  %1131 = load ptr, ptr %1129, align 4
  %dev5.i841 = getelementptr inbounds %struct.pci_dev, ptr %1131, i32 0, i32 44
  %port_mtu_attr.i842 = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.11124, i32 6
  call void @device_remove_file(ptr noundef %dev5.i841, ptr noundef %port_mtu_attr.i842) #17
  %devlink_port.i843 = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.11124, i32 12
  call void @devlink_port_unregister(ptr noundef %devlink_port.i843) #17
  %rmap.i = getelementptr %struct.mlx4_priv, ptr %priv, i32 0, i32 26, i32 %port.11124, i32 11
  %1132 = ptrtoint ptr %rmap.i to i32
  call void @__asan_load4_noabort(i32 %1132)
  %1133 = load ptr, ptr %rmap.i, align 4
  call void @free_irq_cpu_rmap(ptr noundef %1133) #17
  %1134 = ptrtoint ptr %rmap.i to i32
  call void @__asan_store4_noabort(i32 %1134)
  store ptr null, ptr %rmap.i, align 4
  br label %mlx4_cleanup_port_info.exit

mlx4_cleanup_port_info.exit:                      ; preds = %if.end.i844, %for.body433.mlx4_cleanup_port_info.exit_crit_edge
  %port.1 = add i32 %port.11124, -1
  %cmp431 = icmp sgt i32 %port.1, 0
  br i1 %cmp431, label %mlx4_cleanup_port_info.exit.for.body433_crit_edge, label %mlx4_cleanup_port_info.exit.for.end438_crit_edge

mlx4_cleanup_port_info.exit.for.end438_crit_edge: ; preds = %mlx4_cleanup_port_info.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end438

mlx4_cleanup_port_info.exit.for.body433_crit_edge: ; preds = %mlx4_cleanup_port_info.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body433

for.end438:                                       ; preds = %mlx4_cleanup_port_info.exit.for.end438_crit_edge, %err_port.for.end438_crit_edge
  call fastcc void @mlx4_cleanup_default_counters(ptr noundef %priv)
  %1135 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1135)
  %1136 = load i32, ptr %flags.i, align 4
  %and.i846 = and i32 %1136, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i846)
  %tobool440.not = icmp eq i32 %and.i846, 0
  br i1 %tobool440.not, label %if.then441, label %for.end438.if.end442_crit_edge

for.end438.if.end442_crit_edge:                   ; preds = %for.end438
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end442

if.then441:                                       ; preds = %for.end438
  %1137 = ptrtoint ptr %flags.i454.i to i32
  call void @__asan_load8_noabort(i32 %1137)
  %1138 = load i64, ptr %flags.i454.i, align 8
  %and.i848 = and i64 %1138, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i848)
  %tobool.not.i849 = icmp eq i64 %and.i848, 0
  br i1 %tobool.not.i849, label %if.then441.if.end442_crit_edge, label %if.end.i850

if.then441.if.end442_crit_edge:                   ; preds = %if.then441
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end442

if.end.i850:                                      ; preds = %if.then441
  %max_counters.i = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 3, i32 79
  %1139 = ptrtoint ptr %max_counters.i to i32
  call void @__asan_load4_noabort(i32 %1139)
  %1140 = load i32, ptr %max_counters.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1140)
  %tobool2.not.i = icmp eq i32 %1140, 0
  br i1 %tobool2.not.i, label %if.end.i850.if.end442_crit_edge, label %if.end4.i

if.end.i850.if.end442_crit_edge:                  ; preds = %if.end.i850
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end442

if.end4.i:                                        ; preds = %if.end.i850
  call void @__sanitizer_cov_trace_pc() #19
  %counters_bitmap.i = getelementptr inbounds %struct.mlx4_priv, ptr %priv, i32 0, i32 20
  call void @mlx4_bitmap_cleanup(ptr noundef %counters_bitmap.i) #17
  br label %if.end442

if.end442:                                        ; preds = %if.end4.i, %if.end.i850.if.end442_crit_edge, %if.then441.if.end442_crit_edge, %for.end438.if.end442_crit_edge
  call void @mlx4_cleanup_qp_table(ptr noundef %priv) #17
  call void @mlx4_cleanup_srq_table(ptr noundef %priv) #17
  call void @mlx4_cleanup_cq_table(ptr noundef %priv) #17
  call void @mlx4_cmd_use_polling(ptr noundef %priv) #17
  call void @mlx4_cleanup_eq_table(ptr noundef %priv) #17
  call void @mlx4_cleanup_mcg_table(ptr noundef %priv) #17
  call void @mlx4_cleanup_mr_table(ptr noundef %priv) #17
  call void @mlx4_cleanup_xrcd_table(ptr noundef %priv) #17
  call void @mlx4_cleanup_pd_table(ptr noundef %priv) #17
  call void @mlx4_cleanup_uar_table(ptr noundef %priv) #17
  br label %err_steer

err_steer:                                        ; preds = %if.end442, %do.end396, %if.end384.err_steer_crit_edge, %land.lhs.true372.err_steer_crit_edge
  %err.5 = phi i32 [ %err.3, %if.end384.err_steer_crit_edge ], [ %call391, %do.end396 ], [ %err.4, %if.end442 ], [ -16, %land.lhs.true372.err_steer_crit_edge ]
  %1141 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1141)
  %1142 = load i32, ptr %flags.i, align 4
  %and.i852 = and i32 %1142, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i852)
  %tobool444.not = icmp eq i32 %and.i852, 0
  br i1 %tobool444.not, label %if.then445, label %err_steer.err_disable_msix_crit_edge

err_steer.err_disable_msix_crit_edge:             ; preds = %err_steer
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_disable_msix

if.then445:                                       ; preds = %err_steer
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @mlx4_clear_steering(ptr noundef %priv)
  br label %err_disable_msix

err_disable_msix:                                 ; preds = %if.then445, %err_steer.err_disable_msix_crit_edge, %if.then363.err_disable_msix_crit_edge
  %err.6 = phi i32 [ %err.5, %err_steer.err_disable_msix_crit_edge ], [ %err.5, %if.then445 ], [ %call364, %if.then363.err_disable_msix_crit_edge ]
  %1143 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1143)
  %1144 = load i32, ptr %flags.i, align 4
  %and448 = and i32 %1144, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and448)
  %tobool449.not = icmp eq i32 %and448, 0
  br i1 %tobool449.not, label %err_disable_msix.err_free_eq_crit_edge, label %if.then450

err_disable_msix.err_free_eq_crit_edge:           ; preds = %err_disable_msix
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_free_eq

if.then450:                                       ; preds = %err_disable_msix
  call void @__sanitizer_cov_trace_pc() #19
  call void @pci_disable_msix(ptr noundef %pdev) #17
  br label %err_free_eq

err_free_eq:                                      ; preds = %if.then450, %err_disable_msix.err_free_eq_crit_edge, %if.then353
  %err.7 = phi i32 [ %err.6, %if.then450 ], [ %err.6, %err_disable_msix.err_free_eq_crit_edge ], [ -95, %if.then353 ]
  call void @mlx4_free_eq_table(ptr noundef %priv) #17
  br label %err_master_mfunc

err_master_mfunc:                                 ; preds = %err_free_eq, %if.end337.err_master_mfunc_crit_edge
  %err.8 = phi i32 [ %call338, %if.end337.err_master_mfunc_crit_edge ], [ %err.7, %err_free_eq ]
  %1145 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1145)
  %1146 = load i32, ptr %flags.i, align 4
  %and.i854 = and i32 %1146, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i854)
  %tobool453.not = icmp eq i32 %and.i854, 0
  br i1 %tobool453.not, label %err_master_mfunc.if.end455_crit_edge, label %if.then454

err_master_mfunc.if.end455_crit_edge:             ; preds = %err_master_mfunc
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end455

if.then454:                                       ; preds = %err_master_mfunc
  call void @__sanitizer_cov_trace_pc() #19
  call void @mlx4_free_resource_tracker(ptr noundef %priv, i32 noundef 2) #17
  call void @mlx4_multi_func_cleanup(ptr noundef %priv) #17
  br label %if.end455

if.end455:                                        ; preds = %if.then454, %err_master_mfunc.if.end455_crit_edge
  %1147 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1147)
  %1148 = load i32, ptr %flags.i, align 4
  %and.i856 = and i32 %1148, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i856)
  %tobool457.not = icmp eq i32 %and.i856, 0
  br i1 %tobool457.not, label %if.end455.err_close_crit_edge, label %if.then458

if.end455.err_close_crit_edge:                    ; preds = %if.end455
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_close

if.then458:                                       ; preds = %if.end455
  call void @__sanitizer_cov_trace_pc() #19
  %1149 = ptrtoint ptr %spec_qps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1149)
  %1150 = load ptr, ptr %spec_qps.i.i.i, align 8
  call void @kfree(ptr noundef %1150) #17
  %1151 = ptrtoint ptr %spec_qps.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1151)
  store ptr null, ptr %spec_qps.i.i.i, align 8
  br label %err_close

err_close:                                        ; preds = %if.then458, %if.end455.err_close_crit_edge, %do.end332, %if.then288, %do.end266, %do.end238
  %err.9 = phi i32 [ -22, %if.then288 ], [ %call327, %do.end332 ], [ %err.8, %if.then458 ], [ %err.8, %if.end455.err_close_crit_edge ], [ -22, %do.end266 ], [ %call233, %do.end238 ]
  call fastcc void @mlx4_close_hca(ptr noundef %priv)
  br label %err_fw

err_fw:                                           ; preds = %err_close, %mlx4_init_hca.exit.err_fw_crit_edge, %mlx4_init_hca.exit.thread, %mlx4_init_hca.exit.thread931, %mlx4_check_dev_cap.exit756, %do.end174, %mlx4_check_dev_cap.exit, %do.end121, %if.then111.err_fw_crit_edge
  %err.10 = phi i32 [ %call169, %do.end174 ], [ 0, %mlx4_check_dev_cap.exit756 ], [ %err.9, %err_close ], [ %call116, %do.end121 ], [ 0, %mlx4_check_dev_cap.exit ], [ %retval.0.i779.ph, %mlx4_init_hca.exit.thread ], [ -12, %mlx4_init_hca.exit.thread931 ], [ %err.2.i, %mlx4_init_hca.exit.err_fw_crit_edge ], [ -12, %if.then111.err_fw_crit_edge ]
  %dev_cap.2 = phi ptr [ %dev_cap.01109, %do.end174 ], [ %dev_cap.01109, %mlx4_check_dev_cap.exit756 ], [ %dev_cap.1, %err_close ], [ %call7.i.i, %do.end121 ], [ %call7.i.i, %mlx4_check_dev_cap.exit ], [ %dev_cap.1, %mlx4_init_hca.exit.thread ], [ %dev_cap.1, %mlx4_init_hca.exit.thread931 ], [ %dev_cap.1, %mlx4_init_hca.exit.err_fw_crit_edge ], [ null, %if.then111.err_fw_crit_edge ]
  %1152 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1152)
  %1153 = load i32, ptr %flags.i, align 4
  %and.i.i858 = and i32 %1153, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i858)
  %tobool.not.i859 = icmp eq i32 %and.i.i858, 0
  br i1 %tobool.not.i859, label %if.then.i862, label %err_fw.err_mfunc_crit_edge

err_fw.err_mfunc_crit_edge:                       ; preds = %err_fw
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_mfunc

if.then.i862:                                     ; preds = %err_fw
  call void @__sanitizer_cov_trace_pc() #19
  %call1.i860 = call i32 @mlx4_UNMAP_FA(ptr noundef %priv) #17
  %1154 = ptrtoint ptr %fw_icm.i.i to i32
  call void @__asan_load4_noabort(i32 %1154)
  %1155 = load ptr, ptr %fw_icm.i.i, align 8
  call void @mlx4_free_icm(ptr noundef %priv, ptr noundef %1155, i32 noundef 0) #17
  br label %err_mfunc

err_mfunc:                                        ; preds = %if.then.i862, %err_fw.err_mfunc_crit_edge, %do.end102
  %err.11 = phi i32 [ %retval.0.i729914, %do.end102 ], [ %err.10, %err_fw.err_mfunc_crit_edge ], [ %err.10, %if.then.i862 ]
  %dev_cap.3 = phi ptr [ %dev_cap.01109, %do.end102 ], [ %dev_cap.2, %err_fw.err_mfunc_crit_edge ], [ %dev_cap.2, %if.then.i862 ]
  %1156 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1156)
  %1157 = load i32, ptr %flags.i, align 4
  %and.i866 = and i32 %1157, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i866)
  %tobool461.not = icmp eq i32 %and.i866, 0
  br i1 %tobool461.not, label %err_mfunc.err_cmd_crit_edge, label %if.then462

err_mfunc.err_cmd_crit_edge:                      ; preds = %err_mfunc
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_cmd

if.then462:                                       ; preds = %err_mfunc
  call void @__sanitizer_cov_trace_pc() #19
  call void @mlx4_multi_func_cleanup(ptr noundef %priv) #17
  br label %err_cmd

err_cmd:                                          ; preds = %if.then462, %err_mfunc.err_cmd_crit_edge, %do.end90
  %err.12 = phi i32 [ %err.11, %if.then462 ], [ %err.11, %err_mfunc.err_cmd_crit_edge ], [ %call85, %do.end90 ]
  %dev_cap.4 = phi ptr [ %dev_cap.3, %if.then462 ], [ %dev_cap.3, %err_mfunc.err_cmd_crit_edge ], [ %dev_cap.01109, %do.end90 ]
  call void @mlx4_cmd_cleanup(ptr noundef %priv, i32 noundef 15) #17
  br label %err_sriov

err_sriov:                                        ; preds = %err_cmd, %do.end162, %do.end152, %do.end72, %do.end49
  %err.13 = phi i32 [ %call67.lcssa, %do.end72 ], [ %err.12, %err_cmd ], [ %call44, %do.end49 ], [ 0, %do.end152 ], [ %call157, %do.end162 ]
  %dev_cap.5 = phi ptr [ %dev_cap.0.lcssa, %do.end72 ], [ %dev_cap.4, %err_cmd ], [ null, %do.end49 ], [ %call7.i.i, %do.end152 ], [ %call7.i.i, %do.end162 ]
  %existing_vfs.1 = phi i32 [ %existing_vfs.0, %do.end72 ], [ %existing_vfs.0, %err_cmd ], [ 0, %do.end49 ], [ %existing_vfs.0, %do.end152 ], [ %existing_vfs.0, %do.end162 ]
  %flags464 = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 1
  %1158 = ptrtoint ptr %flags464 to i32
  call void @__asan_load4_noabort(i32 %1158)
  %1159 = load i32, ptr %flags464, align 4
  %and465 = and i32 %1159, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and465)
  %tobool466.not = icmp ne i32 %and465, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %existing_vfs.1)
  %tobool468.not = icmp eq i32 %existing_vfs.1, 0
  %or.cond718 = select i1 %tobool466.not, i1 %tobool468.not, i1 false
  br i1 %or.cond718, label %if.then469, label %err_sriov.if.end472_crit_edge

err_sriov.if.end472_crit_edge:                    ; preds = %err_sriov
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end472

if.then469:                                       ; preds = %err_sriov
  call void @__sanitizer_cov_trace_pc() #19
  call void @pci_disable_sriov(ptr noundef %pdev) #17
  %1160 = ptrtoint ptr %flags464 to i32
  call void @__asan_load4_noabort(i32 %1160)
  %1161 = load i32, ptr %flags464, align 4
  %and471 = and i32 %1161, -17
  store i32 %and471, ptr %flags464, align 4
  br label %if.end472

if.end472:                                        ; preds = %if.then469, %err_sriov.if.end472_crit_edge
  %1162 = ptrtoint ptr %flags464 to i32
  call void @__asan_load4_noabort(i32 %1162)
  %1163 = load i32, ptr %flags464, align 4
  %and.i868 = and i32 %1163, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i868)
  %tobool474.not = icmp eq i32 %and.i868, 0
  br i1 %tobool474.not, label %if.end472.if.end482_crit_edge, label %land.lhs.true475

if.end472.if.end482_crit_edge:                    ; preds = %if.end472
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end482

land.lhs.true475:                                 ; preds = %if.end472
  %1164 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %1164)
  %1165 = load ptr, ptr %priv, align 8
  %num_vfs477 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1165, i32 0, i32 3
  %1166 = ptrtoint ptr %num_vfs477 to i32
  call void @__asan_load4_noabort(i32 %1166)
  %1167 = load i32, ptr %num_vfs477, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1167)
  %tobool478.not = icmp ne i32 %1167, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %reset_flow)
  %tobool480.not = icmp eq i32 %reset_flow, 0
  %or.cond719 = and i1 %tobool480.not, %tobool478.not
  br i1 %or.cond719, label %if.then481, label %land.lhs.true475.if.end482_crit_edge

land.lhs.true475.if.end482_crit_edge:             ; preds = %land.lhs.true475
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end482

if.then481:                                       ; preds = %land.lhs.true475
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i722 = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @pf_loading, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr nonnull @pf_loading, i32 1, i32 3, i32 1) #17
  %1168 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @pf_loading, ptr nonnull @pf_loading, i32 1, ptr nonnull elementtype(i32) @pf_loading) #17, !srcloc !1182
  br label %if.end482

if.end482:                                        ; preds = %if.then481, %land.lhs.true475.if.end482_crit_edge, %if.end472.if.end482_crit_edge
  %dev_vfs484 = getelementptr inbounds %struct.mlx4_dev, ptr %priv, i32 0, i32 14
  %1169 = ptrtoint ptr %dev_vfs484 to i32
  call void @__asan_load4_noabort(i32 %1169)
  %1170 = load ptr, ptr %dev_vfs484, align 8
  call void @kfree(ptr noundef %1170) #17
  %1171 = ptrtoint ptr %flags464 to i32
  call void @__asan_load4_noabort(i32 %1171)
  %1172 = load i32, ptr %flags464, align 4
  %and.i870 = and i32 %1172, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i870)
  %tobool486.not = icmp eq i32 %and.i870, 0
  br i1 %tobool486.not, label %if.then487, label %if.end482.if.end488_crit_edge

if.end482.if.end488_crit_edge:                    ; preds = %if.end482
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end488

if.then487:                                       ; preds = %if.end482
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @mlx4_free_ownership(ptr noundef %priv)
  br label %if.end488

if.end488:                                        ; preds = %if.then487, %if.end482.if.end488_crit_edge
  call void @kfree(ptr noundef %dev_cap.5) #17
  br label %cleanup489

cleanup489:                                       ; preds = %if.end488, %if.end429, %do.end32, %do.end.i, %if.else.cleanup489_crit_edge
  %retval.0 = phi i32 [ %err.13, %if.end488 ], [ 0, %if.end429 ], [ -22, %do.end32 ], [ -5, %if.else.cleanup489_crit_edge ], [ -12, %do.end.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devlink_priv(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_param_driverinit_value_get(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @devlink_param_value_changed(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_opreq_action(ptr noundef) #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_reset(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_num_vf(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_cmd_init(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_multi_func_init(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_QUERY_DEV_CAP(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @mlx4_enable_sriov(ptr nocapture noundef %dev, ptr noundef %pdev, i8 noundef zeroext %total_vfs, i32 noundef %existing_vfs, i32 noundef %reset_flow) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %conv = zext i32 %1 to i64
  %call = tail call i32 @pci_sriov_get_totalvfs(ptr noundef %pdev) #17
  %2 = tail call i32 @llvm.smin.i32(i32 %call, i32 126)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %reset_flow)
  %tobool.not = icmp eq i32 %reset_flow, 0
  br i1 %tobool.not, label %if.end7, label %if.end7.i.i

if.end7.i.i:                                      ; preds = %entry
  %conv2 = zext i8 %total_vfs to i32
  %3 = shl nuw nsw i32 %conv2, 1
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %3, i32 noundef 3520) #23
  %dev_vfs = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 14
  %4 = ptrtoint ptr %dev_vfs to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call8.i.i, ptr %dev_vfs, align 8
  %tobool5.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool5.not, label %if.end7.i.i.free_mem_crit_edge, label %if.end7.i.i.cleanup_crit_edge

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end7.i.i.free_mem_crit_edge:                   ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %free_mem

if.end7:                                          ; preds = %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @pf_loading, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr nonnull @pf_loading, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @pf_loading, ptr nonnull @pf_loading, i32 1, ptr nonnull elementtype(i32) @pf_loading) #17, !srcloc !1185
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool9.not = icmp eq i32 %and, 0
  br i1 %tobool9.not, label %if.end7.if.end20_crit_edge, label %if.then10

if.end7.if.end20_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end20

if.then10:                                        ; preds = %if.end7
  %conv11 = zext i8 %total_vfs to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv11, i32 %existing_vfs)
  %cmp12.not = icmp eq i32 %conv11, %existing_vfs
  br i1 %cmp12.not, label %if.then10.if.end20_crit_edge, label %do.end

if.then10.if.end20_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end20

do.end:                                           ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %dev16 = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev16, ptr noundef nonnull @.str.151, i32 noundef %existing_vfs, i32 noundef %conv11) #20
  %conv18 = trunc i32 %existing_vfs to i8
  br label %if.end20

if.end20:                                         ; preds = %do.end, %if.then10.if.end20_crit_edge, %if.end7.if.end20_crit_edge
  %total_vfs.addr.0 = phi i8 [ %conv18, %do.end ], [ %total_vfs, %if.then10.if.end20_crit_edge ], [ %total_vfs, %if.end7.if.end20_crit_edge ]
  %conv21 = zext i8 %total_vfs.addr.0 to i32
  %12 = shl nuw nsw i32 %conv21, 1
  %call8.i.i154 = tail call noalias align 128 ptr @__kmalloc(i32 noundef %12, i32 noundef 3520) #23
  %dev_vfs23 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 14
  %13 = ptrtoint ptr %dev_vfs23 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call8.i.i154, ptr %dev_vfs23, align 8
  %cmp25 = icmp eq ptr %call8.i.i154, null
  br i1 %cmp25, label %do.end30, label %if.end34

do.end30:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #19
  %14 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dev, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %dev33 = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev33, ptr noundef nonnull @.str.154) #20
  br label %disable_sriov

if.end34:                                         ; preds = %if.end20
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags, align 4
  %and36 = and i32 %19, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %if.then38, label %if.end34.do.end71_crit_edge

if.end34.do.end71_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end71

if.then38:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %conv21)
  %cmp40 = icmp slt i32 %2, %conv21
  %20 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %dev48 = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  br i1 %cmp40, label %do.end45, label %if.end60

do.end45:                                         ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev48, ptr noundef nonnull @.str.157, i32 noundef %conv21, i32 noundef %2) #20
  br label %disable_sriov

if.end60:                                         ; preds = %if.then38
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev48, ptr noundef nonnull @.str.160, i32 noundef %conv21) #20
  %call59 = tail call i32 @pci_enable_sriov(ptr noundef %pdev, i32 noundef %conv21) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool61.not = icmp eq i32 %call59, 0
  br i1 %tobool61.not, label %if.end60.do.end71_crit_edge, label %do.end65

if.end60.do.end71_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end71

do.end65:                                         ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #19
  %24 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dev, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 4
  %dev68 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev68, ptr noundef nonnull @.str.163, i32 noundef %call59) #20
  br label %disable_sriov

do.end71:                                         ; preds = %if.end60.do.end71_crit_edge, %if.end34.do.end71_crit_edge
  %28 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 4
  %dev74 = getelementptr inbounds %struct.pci_dev, ptr %31, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev74, ptr noundef nonnull @.str.166) #20
  %or = and i64 %conv, 4294967267
  %and75 = or i64 %or, 20
  %32 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dev, align 8
  %num_vfs = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %num_vfs to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv21, ptr %num_vfs, align 4
  br label %cleanup

disable_sriov:                                    ; preds = %do.end65, %do.end45, %do.end30
  %call.i.i121 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @pf_loading, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr nonnull @pf_loading, i32 1, i32 3, i32 1) #17
  %35 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @pf_loading, ptr nonnull @pf_loading, i32 1, ptr nonnull elementtype(i32) @pf_loading) #17, !srcloc !1182
  br label %free_mem

free_mem:                                         ; preds = %disable_sriov, %if.end7.i.i.free_mem_crit_edge
  %36 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev, align 8
  %num_vfs80 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %num_vfs80 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %num_vfs80, align 4
  %dev_vfs81 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 14
  %39 = ptrtoint ptr %dev_vfs81 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev_vfs81, align 8
  tail call void @kfree(ptr noundef %40) #17
  %41 = ptrtoint ptr %dev_vfs81 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %dev_vfs81, align 8
  %and83 = and i64 %conv, 4294967291
  br label %cleanup

cleanup:                                          ; preds = %free_mem, %do.end71, %if.end7.i.i.cleanup_crit_edge
  %retval.0 = phi i64 [ %and83, %free_mem ], [ %and75, %do.end71 ], [ %conv, %if.end7.i.i.cleanup_crit_edge ]
  ret i64 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_sriov(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @pcie_print_link_status(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_alloc_eq_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx4_init_steering(ptr nocapture noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_ports, align 4
  %2 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %1, i32 32) #17
  %3 = extractvalue { i32, i1 } %2, 1
  br i1 %3, label %kcalloc.exit.thread, label %if.end7.i.i, !prof !1183

kcalloc.exit.thread:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %steer30 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 30
  %4 = ptrtoint ptr %steer30 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %steer30, align 8
  br label %cleanup

if.end7.i.i:                                      ; preds = %entry
  %5 = extractvalue { i32, i1 } %2, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %5, i32 noundef 3520) #23
  %steer = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 30
  %6 = ptrtoint ptr %steer to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call8.i.i, ptr %steer, align 8
  %tobool.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not, label %if.end7.i.i.cleanup_crit_edge, label %for.cond.preheader

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp33.not = icmp eq i32 %1, 0
  br i1 %cmp33.not, label %for.cond.preheader.cleanup_crit_edge, label %for.cond.preheader.for.cond3.preheader_crit_edge

for.cond.preheader.for.cond3.preheader_crit_edge: ; preds = %for.cond.preheader
  br label %for.cond3.preheader

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.cond3.preheader:                              ; preds = %for.cond3.preheader.for.cond3.preheader_crit_edge, %for.cond.preheader.for.cond3.preheader_crit_edge
  %i.034 = phi i32 [ %inc12, %for.cond3.preheader.for.cond3.preheader_crit_edge ], [ 0, %for.cond.preheader.for.cond3.preheader_crit_edge ]
  %7 = ptrtoint ptr %steer to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %steer, align 8
  %arrayidx = getelementptr %struct.mlx4_steer, ptr %8, i32 %i.034
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %arrayidx, ptr %arrayidx, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %arrayidx, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %arrayidx, ptr %prev.i, align 4
  %11 = load ptr, ptr %steer, align 8
  %arrayidx10 = getelementptr %struct.mlx4_steer, ptr %11, i32 %i.034, i32 1, i32 0
  %12 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %arrayidx10, ptr %arrayidx10, align 4
  %prev.i28 = getelementptr %struct.mlx4_steer, ptr %11, i32 %i.034, i32 1, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i28 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %arrayidx10, ptr %prev.i28, align 4
  %14 = load ptr, ptr %steer, align 8
  %arrayidx7.1 = getelementptr %struct.mlx4_steer, ptr %14, i32 %i.034, i32 0, i32 1
  %15 = ptrtoint ptr %arrayidx7.1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %arrayidx7.1, ptr %arrayidx7.1, align 4
  %prev.i.1 = getelementptr %struct.mlx4_steer, ptr %14, i32 %i.034, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %prev.i.1 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %arrayidx7.1, ptr %prev.i.1, align 4
  %17 = load ptr, ptr %steer, align 8
  %arrayidx10.1 = getelementptr %struct.mlx4_steer, ptr %17, i32 %i.034, i32 1, i32 1
  %18 = ptrtoint ptr %arrayidx10.1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %arrayidx10.1, ptr %arrayidx10.1, align 4
  %prev.i28.1 = getelementptr %struct.mlx4_steer, ptr %17, i32 %i.034, i32 1, i32 1, i32 1
  %19 = ptrtoint ptr %prev.i28.1 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %arrayidx10.1, ptr %prev.i28.1, align 4
  %inc12 = add nuw nsw i32 %i.034, 1
  %exitcond.not = icmp eq i32 %inc12, %1
  br i1 %exitcond.not, label %for.cond3.preheader.cleanup_crit_edge, label %for.cond3.preheader.for.cond3.preheader_crit_edge

for.cond3.preheader.for.cond3.preheader_crit_edge: ; preds = %for.cond3.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond3.preheader

for.cond3.preheader.cleanup_crit_edge:            ; preds = %for.cond3.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cleanup:                                          ; preds = %for.cond3.preheader.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %if.end7.i.i.cleanup_crit_edge, %kcalloc.exit.thread
  %retval.0 = phi i32 [ -12, %if.end7.i.i.cleanup_crit_edge ], [ -12, %kcalloc.exit.thread ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ 0, %for.cond3.preheader.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_init_quotas(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx4_setup_hca(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  %out_param.i.i = alloca i64, align 8
  %ib_port_default_caps = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ib_port_default_caps) #17
  %0 = ptrtoint ptr %ib_port_default_caps to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ib_port_default_caps, align 4, !annotation !1173
  %call1 = tail call i32 @mlx4_init_uar_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %1 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dev, align 8
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 4
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %4, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev2, ptr noundef nonnull @.str.407) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %driver_uar = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 24
  %call3 = tail call i32 @mlx4_uar_alloc(ptr noundef %dev, ptr noundef %driver_uar) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end12, label %do.end8

do.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %5 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %dev11 = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev11, ptr noundef nonnull @.str.410) #20
  br label %err_uar_table_free

if.end12:                                         ; preds = %if.end
  %9 = ptrtoint ptr %driver_uar to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %driver_uar, align 4
  %shl = shl i32 %10, 12
  %call14 = tail call ptr @ioremap(i32 noundef %shl, i32 noundef 4096) #17
  %kar = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 25
  %11 = ptrtoint ptr %kar to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call14, ptr %kar, align 8
  %tobool16.not = icmp eq ptr %call14, null
  br i1 %tobool16.not, label %do.end20, label %if.end24

do.end20:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  %12 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %dev23 = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev23, ptr noundef nonnull @.str.413) #20
  br label %err_uar_free

if.end24:                                         ; preds = %if.end12
  %call25 = tail call i32 @mlx4_init_pd_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end34, label %do.end30

do.end30:                                         ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #19
  %16 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 4
  %dev33 = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev33, ptr noundef nonnull @.str.416) #20
  br label %err_kar_unmap

if.end34:                                         ; preds = %if.end24
  %call35 = tail call i32 @mlx4_init_xrcd_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.end44, label %do.end40

do.end40:                                         ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #19
  %20 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %dev43 = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev43, ptr noundef nonnull @.str.419) #20
  br label %err_pd_table_free

if.end44:                                         ; preds = %if.end34
  %call45 = tail call i32 @mlx4_init_mr_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.end54, label %do.end50

do.end50:                                         ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #19
  %24 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dev, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 4
  %dev53 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev53, ptr noundef nonnull @.str.422) #20
  br label %err_xrcd_table_free

if.end54:                                         ; preds = %if.end44
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %28 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %29, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool56.not = icmp eq i32 %and.i, 0
  br i1 %tobool56.not, label %if.then57, label %if.end54.if.end78_crit_edge

if.end54.if.end78_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end78

if.then57:                                        ; preds = %if.end54
  %call58 = tail call i32 @mlx4_init_mcg_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %if.end67, label %do.end63

do.end63:                                         ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #19
  %30 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dev, align 8
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %dev66 = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev66, ptr noundef nonnull @.str.425) #20
  br label %err_mr_table_free

if.end67:                                         ; preds = %if.then57
  %call68 = tail call i32 @mlx4_config_mad_demux(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end67.if.end78_crit_edge, label %do.end73

if.end67.if.end78_crit_edge:                      ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end78

do.end73:                                         ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #19
  %34 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dev, align 8
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %dev76 = getelementptr inbounds %struct.pci_dev, ptr %37, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev76, ptr noundef nonnull @.str.428) #20
  br label %err_mcg_table_free

if.end78:                                         ; preds = %if.end67.if.end78_crit_edge, %if.end54.if.end78_crit_edge
  %call79 = tail call i32 @mlx4_init_eq_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.end88, label %do.end84

do.end84:                                         ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #19
  %38 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %dev, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %dev87 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev87, ptr noundef nonnull @.str.431) #20
  br label %err_mcg_table_free

if.end88:                                         ; preds = %if.end78
  %call89 = tail call i32 @mlx4_cmd_use_events(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89)
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %if.end98, label %do.end94

do.end94:                                         ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #19
  %42 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %dev, align 8
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 4
  %dev97 = getelementptr inbounds %struct.pci_dev, ptr %45, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev97, ptr noundef nonnull @.str.434) #20
  br label %err_eq_table_free

if.end98:                                         ; preds = %if.end88
  %call99 = tail call i32 @mlx4_NOP(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call99)
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %do.body135, label %if.then101

if.then101:                                       ; preds = %if.end98
  %46 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %flags.i, align 4
  %and = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool102.not = icmp eq i32 %and, 0
  %48 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %dev, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 4
  %dev121 = getelementptr inbounds %struct.pci_dev, ptr %51, i32 0, i32 44
  %eq123 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 16, i32 5
  %52 = ptrtoint ptr %eq123 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %eq123, align 4
  %irq125 = getelementptr inbounds %struct.mlx4_eq, ptr %53, i32 0, i32 4
  %54 = ptrtoint ptr %irq125 to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %irq125, align 4
  %conv126 = zext i16 %55 to i32
  br i1 %tobool102.not, label %do.end118, label %do.end106

do.end106:                                        ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev121, ptr noundef nonnull @.str.437, i32 noundef %conv126) #20
  %56 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %dev, align 8
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %57, align 4
  %dev115 = getelementptr inbounds %struct.pci_dev, ptr %59, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev115, ptr noundef nonnull @.str.440) #20
  br label %err_cmd_poll

do.end118:                                        ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev121, ptr noundef nonnull @.str.443, i32 noundef %conv126) #20
  %60 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %dev, align 8
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %61, align 4
  %dev132 = getelementptr inbounds %struct.pci_dev, ptr %63, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev132, ptr noundef nonnull @.str.446) #20
  br label %err_cmd_poll

do.body135:                                       ; preds = %if.end98
  %64 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool136.not = icmp eq i32 %64, 0
  br i1 %tobool136.not, label %do.body135.do.end146_crit_edge, label %do.end140

do.body135.do.end146_crit_edge:                   ; preds = %do.body135
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end146

do.end140:                                        ; preds = %do.body135
  call void @__sanitizer_cov_trace_pc() #19
  %65 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %dev, align 8
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %66, align 4
  %dev143 = getelementptr inbounds %struct.pci_dev, ptr %68, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev143, ptr noundef nonnull @.str.449) #20
  br label %do.end146

do.end146:                                        ; preds = %do.end140, %do.body135.do.end146_crit_edge
  %call147 = tail call i32 @mlx4_init_cq_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call147)
  %tobool148.not = icmp eq i32 %call147, 0
  br i1 %tobool148.not, label %if.end156, label %do.end152

do.end152:                                        ; preds = %do.end146
  call void @__sanitizer_cov_trace_pc() #19
  %69 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %dev, align 8
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %70, align 4
  %dev155 = getelementptr inbounds %struct.pci_dev, ptr %72, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev155, ptr noundef nonnull @.str.452) #20
  br label %err_cmd_poll

if.end156:                                        ; preds = %do.end146
  %call157 = tail call i32 @mlx4_init_srq_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call157)
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %if.end166, label %do.end162

do.end162:                                        ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #19
  %73 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %dev, align 8
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %74, align 4
  %dev165 = getelementptr inbounds %struct.pci_dev, ptr %76, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev165, ptr noundef nonnull @.str.455) #20
  br label %err_cq_table_free

if.end166:                                        ; preds = %if.end156
  %call167 = tail call i32 @mlx4_init_qp_table(ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call167)
  %tobool168.not = icmp eq i32 %call167, 0
  br i1 %tobool168.not, label %if.end176, label %do.end172

do.end172:                                        ; preds = %if.end166
  call void @__sanitizer_cov_trace_pc() #19
  %77 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %dev, align 8
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %78, align 4
  %dev175 = getelementptr inbounds %struct.pci_dev, ptr %80, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev175, ptr noundef nonnull @.str.458) #20
  br label %err_srq_table_free

if.end176:                                        ; preds = %if.end166
  %81 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %flags.i, align 4
  %and.i387 = and i32 %82, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i387)
  %tobool178.not = icmp eq i32 %and.i387, 0
  br i1 %tobool178.not, label %if.then179, label %if.end176.if.end191_crit_edge

if.end176.if.end191_crit_edge:                    ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end191

if.then179:                                       ; preds = %if.end176
  %flags.i388 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %83 = ptrtoint ptr %flags.i388 to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %flags.i388, align 8
  %and.i389 = and i64 %84, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i389)
  %tobool.not.i = icmp eq i64 %and.i389, 0
  br i1 %tobool.not.i, label %if.then179.if.end191_crit_edge, label %if.end.i

if.then179.if.end191_crit_edge:                   ; preds = %if.then179
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end191

if.end.i:                                         ; preds = %if.then179
  %max_counters.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 79
  %85 = ptrtoint ptr %max_counters.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %max_counters.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %tobool2.not.i = icmp eq i32 %86, 0
  br i1 %tobool2.not.i, label %if.end.i.do.end186_crit_edge, label %mlx4_init_counters_table.exit

if.end.i.do.end186_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end186

mlx4_init_counters_table.exit:                    ; preds = %if.end.i
  %sub.i57.i = add i32 %86, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i57.i)
  %tobool.not.i.i.i.i = icmp eq i32 %sub.i57.i, 0
  %87 = tail call i32 @llvm.ctlz.i32(i32 %sub.i57.i, i1 true) #17, !range !1175
  %sub.i.i.i.i = sub nuw nsw i32 32, %87
  %sub.i.i.op.i.i = shl nuw i32 1, %sub.i.i.i.i
  %shl.i.i = select i1 %tobool.not.i.i.i.i, i32 1, i32 %sub.i.i.op.i.i
  %counters_bitmap.i = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 20
  %sub38.i = add i32 %shl.i.i, -1
  %sub41.i = sub i32 1, %86
  %add42.i = add i32 %sub41.i, %shl.i.i
  %call43.i = tail call i32 @mlx4_bitmap_init(ptr noundef %counters_bitmap.i, i32 noundef %shl.i.i, i32 noundef %sub38.i, i32 noundef 0, i32 noundef %add42.i) #17
  %88 = zext i32 %call43.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %88, ptr @__sancov_gen_cov_switch_values.628)
  switch i32 %call43.i, label %mlx4_init_counters_table.exit.do.end186_crit_edge [
    i32 0, label %mlx4_init_counters_table.exit.if.end191_crit_edge
    i32 -2, label %mlx4_init_counters_table.exit.if.end191_crit_edge443
  ]

mlx4_init_counters_table.exit.if.end191_crit_edge443: ; preds = %mlx4_init_counters_table.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end191

mlx4_init_counters_table.exit.if.end191_crit_edge: ; preds = %mlx4_init_counters_table.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end191

mlx4_init_counters_table.exit.do.end186_crit_edge: ; preds = %mlx4_init_counters_table.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end186

do.end186:                                        ; preds = %mlx4_init_counters_table.exit.do.end186_crit_edge, %if.end.i.do.end186_crit_edge
  %retval.0.i416 = phi i32 [ %call43.i, %mlx4_init_counters_table.exit.do.end186_crit_edge ], [ -28, %if.end.i.do.end186_crit_edge ]
  %89 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %dev, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %90, align 4
  %dev189 = getelementptr inbounds %struct.pci_dev, ptr %92, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev189, ptr noundef nonnull @.str.461) #20
  br label %err_qp_table_free

if.end191:                                        ; preds = %mlx4_init_counters_table.exit.if.end191_crit_edge, %mlx4_init_counters_table.exit.if.end191_crit_edge443, %if.then179.if.end191_crit_edge, %if.end176.if.end191_crit_edge
  %num_ports.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %93 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %cmp101.i = icmp sgt i32 %94, 0
  br i1 %cmp101.i, label %if.end191.for.body.i_crit_edge, label %if.end191.if.end201_crit_edge

if.end191.if.end201_crit_edge:                    ; preds = %if.end191
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end201

if.end191.for.body.i_crit_edge:                   ; preds = %if.end191
  br label %for.body.i

for.cond1.preheader.i:                            ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %cmp4103.i = icmp sgt i32 %97, 0
  br i1 %cmp4103.i, label %for.body5.lr.ph.i, label %for.cond1.preheader.i.if.end201_crit_edge

for.cond1.preheader.i.if.end201_crit_edge:        ; preds = %for.cond1.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end201

for.body5.lr.ph.i:                                ; preds = %for.cond1.preheader.i
  %max_counters.i390 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 79
  %flags.i40.i.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %counters_bitmap.i.i.i = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 20
  br label %for.body5.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end191.for.body.i_crit_edge
  %port.0102.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end191.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 21, i32 %port.0102.i
  %95 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 -1, ptr %arrayidx.i, align 4
  %inc.i = add nuw nsw i32 %port.0102.i, 1
  %96 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %num_ports.i, align 4
  %cmp.i391 = icmp slt i32 %inc.i, %97
  br i1 %cmp.i391, label %for.body.i.for.body.i_crit_edge, label %for.cond1.preheader.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.body5.i:                                      ; preds = %for.inc48.i.for.body5.i_crit_edge, %for.body5.lr.ph.i
  %port.1105.i = phi i32 [ 0, %for.body5.lr.ph.i ], [ %inc49.i, %for.inc48.i.for.body5.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %out_param.i.i) #17
  %98 = ptrtoint ptr %out_param.i.i to i32
  call void @__asan_store8_noabort(i32 %98)
  store i64 -1, ptr %out_param.i.i, align 8, !annotation !1173
  %99 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %flags.i, align 4
  %and.i.i.i = and i32 %100, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end30.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body5.i
  %call.i.i.i = call i32 @__mlx4_cmd(ptr noundef %dev, i64 noundef 0, ptr noundef nonnull %out_param.i.i, i32 noundef 1, i32 noundef 1073741833, i8 noundef zeroext 0, i16 noundef zeroext 3840, i32 noundef 60000, i32 noundef 0) #17
  %101 = zext i32 %call.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %101, ptr @__sancov_gen_cov_switch_values.629)
  switch i32 %call.i.i.i, label %mlx4_counter_alloc.exit.i [
    i32 0, label %if.end.thread.i.i
    i32 -28, label %mlx4_counter_alloc.exit.thread91.i
  ], !prof !1174

if.end.thread.i.i:                                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %102 = ptrtoint ptr %out_param.i.i to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %out_param.i.i, align 8
  %conv.i.i.i = trunc i64 %103 to i32
  br label %mlx4_counter_alloc.exit.thread.i

mlx4_counter_alloc.exit.thread91.i:               ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef 2608, i32 noundef 9, ptr noundef null) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %out_param.i.i) #17
  br label %if.else12.i

if.end30.i.i:                                     ; preds = %for.body5.i
  %104 = ptrtoint ptr %flags.i40.i.i to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %flags.i40.i.i, align 8
  %and.i41.i.i = and i64 %105, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i41.i.i)
  %tobool.not.i.i.i = icmp eq i64 %and.i41.i.i, 0
  br i1 %tobool.not.i.i.i, label %mlx4_counter_alloc.exit.thread96.i, label %if.end.i.i.i

mlx4_counter_alloc.exit.thread96.i:               ; preds = %if.end30.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %out_param.i.i) #17
  br label %for.inc48.i

if.end.i.i.i:                                     ; preds = %if.end30.i.i
  %call1.i.i.i = call i32 @mlx4_bitmap_alloc(ptr noundef %counters_bitmap.i.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call1.i.i.i)
  %cmp.i.i.i = icmp eq i32 %call1.i.i.i, -1
  br i1 %cmp.i.i.i, label %if.then2.i.i.i, label %if.end.i.i.i.mlx4_counter_alloc.exit.thread.i_crit_edge

if.end.i.i.i.mlx4_counter_alloc.exit.thread.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_counter_alloc.exit.thread.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %106 = ptrtoint ptr %max_counters.i390 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %max_counters.i390, align 4
  %sub.i.i.i = add i32 %107, -1
  br label %mlx4_counter_alloc.exit.thread.i

mlx4_counter_alloc.exit.thread.i:                 ; preds = %if.then2.i.i.i, %if.end.i.i.i.mlx4_counter_alloc.exit.thread.i_crit_edge, %if.end.thread.i.i
  %idx.1.ph.i = phi i32 [ %conv.i.i.i, %if.end.thread.i.i ], [ %call1.i.i.i, %if.end.i.i.i.mlx4_counter_alloc.exit.thread.i_crit_edge ], [ %sub.i.i.i, %if.then2.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %out_param.i.i) #17
  %arrayidx9.i = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 21, i32 %port.1105.i
  %108 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %idx.1.ph.i, ptr %arrayidx9.i, align 4
  br label %do.body33.i

mlx4_counter_alloc.exit.i:                        ; preds = %if.then.i.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %out_param.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call.i.i.i)
  %cond.i = icmp eq i32 %call.i.i.i, -2
  br i1 %cond.i, label %mlx4_counter_alloc.exit.i.for.inc48.i_crit_edge, label %mlx4_counter_alloc.exit.i.if.else12.i_crit_edge

mlx4_counter_alloc.exit.i.if.else12.i_crit_edge:  ; preds = %mlx4_counter_alloc.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else12.i

mlx4_counter_alloc.exit.i.for.inc48.i_crit_edge:  ; preds = %mlx4_counter_alloc.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc48.i

if.else12.i:                                      ; preds = %mlx4_counter_alloc.exit.i.if.else12.i_crit_edge, %mlx4_counter_alloc.exit.thread91.i
  %retval.0.i95.i = phi i32 [ -22, %mlx4_counter_alloc.exit.thread91.i ], [ %call.i.i.i, %mlx4_counter_alloc.exit.i.if.else12.i_crit_edge ]
  %109 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %110, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool14.not.i = icmp ne i32 %and.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %retval.0.i95.i)
  %cmp15.i = icmp eq i32 %retval.0.i95.i, -22
  %or.cond.i = select i1 %tobool14.not.i, i1 %cmp15.i, i1 false
  br i1 %or.cond.i, label %if.then16.i, label %do.end27.i

if.then16.i:                                      ; preds = %if.else12.i
  call void @__sanitizer_cov_trace_pc() #19
  %111 = ptrtoint ptr %max_counters.i390 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %max_counters.i390, align 4
  %sub.i392 = add i32 %112, -1
  %arrayidx19.i = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 21, i32 %port.1105.i
  %113 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %sub.i392, ptr %arrayidx19.i, align 4
  %114 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %dev, align 8
  %116 = ptrtoint ptr %115 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %115, align 4
  %dev20.i = getelementptr inbounds %struct.pci_dev, ptr %117, i32 0, i32 44
  %118 = load i32, ptr %max_counters.i390, align 4
  %sub23.i = add i32 %118, -1
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev20.i, ptr noundef nonnull @.str.471, i32 noundef %sub23.i) #20
  br label %do.body33.i

do.end27.i:                                       ; preds = %if.else12.i
  %119 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %dev, align 8
  %121 = ptrtoint ptr %120 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %120, align 4
  %dev30.i = getelementptr inbounds %struct.pci_dev, ptr %122, i32 0, i32 44
  %add.i393 = add nuw nsw i32 %port.1105.i, 1
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev30.i, ptr noundef nonnull @.str.474, ptr noundef nonnull @.str.472, i32 noundef %add.i393, i32 noundef %retval.0.i95.i) #20
  %123 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %124)
  %cmp10.i.i = icmp sgt i32 %124, 0
  br i1 %cmp10.i.i, label %do.end27.i.for.body.i.i_crit_edge, label %do.end27.i.mlx4_allocate_default_counters.exit_crit_edge

do.end27.i.mlx4_allocate_default_counters.exit_crit_edge: ; preds = %do.end27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_allocate_default_counters.exit

do.end27.i.for.body.i.i_crit_edge:                ; preds = %do.end27.i
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %do.end27.i.for.body.i.i_crit_edge
  %port.011.i.i = phi i32 [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %do.end27.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 21, i32 %port.011.i.i
  %125 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %126)
  %cmp1.not.i.i = icmp eq i32 %126, -1
  br i1 %cmp1.not.i.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.then.i83.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.then.i83.i:                                    ; preds = %for.body.i.i
  %127 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %flags.i, align 4
  %and.i.i.i.i = and i32 %128, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i82.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i82.i, label %if.end.i.i84.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i83.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i.i.i.i = zext i32 %126 to i64
  %call.i.i.i.i = call i32 @__mlx4_cmd(ptr noundef %dev, i64 noundef %conv.i.i.i.i, ptr noundef null, i32 noundef 0, i32 noundef 9, i8 noundef zeroext 0, i16 noundef zeroext 3841, i32 noundef 60000, i32 noundef 0) #17
  br label %for.inc.i.i

if.end.i.i84.i:                                   ; preds = %if.then.i83.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @__mlx4_counter_free(ptr noundef %dev, i32 noundef %126) #17
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end.i.i84.i, %if.then.i.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %port.011.i.i, 1
  %129 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %num_ports.i, align 4
  %cmp.i.i = icmp slt i32 %inc.i.i, %130
  br i1 %cmp.i.i, label %for.inc.i.i.for.body.i.i_crit_edge, label %for.inc.i.i.mlx4_allocate_default_counters.exit_crit_edge

for.inc.i.i.mlx4_allocate_default_counters.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_allocate_default_counters.exit

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i

do.body33.i:                                      ; preds = %if.then16.i, %mlx4_counter_alloc.exit.thread.i
  %131 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %tobool34.not.i = icmp eq i32 %131, 0
  br i1 %tobool34.not.i, label %do.body33.i.for.inc48.i_crit_edge, label %do.end38.i

do.body33.i.for.inc48.i_crit_edge:                ; preds = %do.body33.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc48.i

do.end38.i:                                       ; preds = %do.body33.i
  call void @__sanitizer_cov_trace_pc() #19
  %132 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %dev, align 8
  %134 = ptrtoint ptr %133 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %133, align 4
  %dev41.i = getelementptr inbounds %struct.pci_dev, ptr %135, i32 0, i32 44
  %arrayidx43.i = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 21, i32 %port.1105.i
  %136 = ptrtoint ptr %arrayidx43.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %arrayidx43.i, align 4
  %add44.i = add nuw nsw i32 %port.1105.i, 1
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev41.i, ptr noundef nonnull @.str.477, ptr noundef nonnull @.str.472, i32 noundef %137, i32 noundef %add44.i) #20
  br label %for.inc48.i

for.inc48.i:                                      ; preds = %do.end38.i, %do.body33.i.for.inc48.i_crit_edge, %mlx4_counter_alloc.exit.i.for.inc48.i_crit_edge, %mlx4_counter_alloc.exit.thread96.i
  %inc49.i = add nuw nsw i32 %port.1105.i, 1
  %138 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %num_ports.i, align 4
  %cmp4.i = icmp slt i32 %inc49.i, %139
  br i1 %cmp4.i, label %for.inc48.i.for.body5.i_crit_edge, label %for.inc48.i.if.end201_crit_edge

for.inc48.i.if.end201_crit_edge:                  ; preds = %for.inc48.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end201

for.inc48.i.for.body5.i_crit_edge:                ; preds = %for.inc48.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body5.i

mlx4_allocate_default_counters.exit:              ; preds = %for.inc.i.i.mlx4_allocate_default_counters.exit_crit_edge, %do.end27.i.mlx4_allocate_default_counters.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i95.i)
  %tobool193.not = icmp eq i32 %retval.0.i95.i, 0
  br i1 %tobool193.not, label %mlx4_allocate_default_counters.exit.if.end201_crit_edge, label %do.end197

mlx4_allocate_default_counters.exit.if.end201_crit_edge: ; preds = %mlx4_allocate_default_counters.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end201

do.end197:                                        ; preds = %mlx4_allocate_default_counters.exit
  call void @__sanitizer_cov_trace_pc() #19
  %140 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %dev, align 8
  %142 = ptrtoint ptr %141 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %141, align 4
  %dev200 = getelementptr inbounds %struct.pci_dev, ptr %143, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev200, ptr noundef nonnull @.str.464) #20
  br label %err_counters_table_free

if.end201:                                        ; preds = %mlx4_allocate_default_counters.exit.if.end201_crit_edge, %for.inc48.i.if.end201_crit_edge, %for.cond1.preheader.i.if.end201_crit_edge, %if.end191.if.end201_crit_edge
  %144 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %flags.i, align 4
  %and.i396 = and i32 %145, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i396)
  %tobool203.not = icmp eq i32 %and.i396, 0
  br i1 %tobool203.not, label %for.cond.preheader, label %if.end201.cleanup_crit_edge

if.end201.cleanup_crit_edge:                      ; preds = %if.end201
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end201
  %146 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %147)
  %cmp205.not426 = icmp slt i32 %147, 1
  br i1 %cmp205.not426, label %for.cond.preheader.cleanup_crit_edge, label %for.body.lr.ph

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %num_slaves = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 2
  %function.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 1
  %master = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 10, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc260.for.body_crit_edge, %for.body.lr.ph
  %port.0427 = phi i32 [ 1, %for.body.lr.ph ], [ %inc261, %for.inc260.for.body_crit_edge ]
  %148 = ptrtoint ptr %ib_port_default_caps to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 0, ptr %ib_port_default_caps, align 4
  %conv207 = trunc i32 %port.0427 to i8
  %call208 = call i32 @mlx4_get_port_ib_caps(ptr noundef %dev, i8 noundef zeroext %conv207, ptr noundef nonnull %ib_port_default_caps) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call208)
  %tobool209.not = icmp eq i32 %call208, 0
  br i1 %tobool209.not, label %for.body.if.end217_crit_edge, label %do.end213

for.body.if.end217_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end217

do.end213:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %149 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %dev, align 8
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %150, align 4
  %dev216 = getelementptr inbounds %struct.pci_dev, ptr %152, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev216, ptr noundef nonnull @.str.467, i32 noundef %port.0427, i32 noundef %call208) #20
  br label %if.end217

if.end217:                                        ; preds = %do.end213, %for.body.if.end217_crit_edge
  %153 = ptrtoint ptr %ib_port_default_caps to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %ib_port_default_caps, align 4
  %arrayidx219 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 5, i32 %port.0427
  %155 = ptrtoint ptr %arrayidx219 to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 %154, ptr %arrayidx219, align 4
  %156 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %flags.i, align 4
  %and.i398 = and i32 %157, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i398)
  %tobool221.not = icmp eq i32 %and.i398, 0
  br i1 %tobool221.not, label %if.end217.if.end234_crit_edge, label %for.cond223.preheader

if.end217.if.end234_crit_edge:                    ; preds = %if.end217
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end234

for.cond223.preheader:                            ; preds = %if.end217
  %158 = ptrtoint ptr %num_slaves to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %num_slaves, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %159)
  %cmp224423.not = icmp eq i32 %159, 0
  br i1 %cmp224423.not, label %for.cond223.preheader.if.end234_crit_edge, label %for.cond223.preheader.for.body226_crit_edge

for.cond223.preheader.for.body226_crit_edge:      ; preds = %for.cond223.preheader
  br label %for.body226

for.cond223.preheader.if.end234_crit_edge:        ; preds = %for.cond223.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end234

for.body226:                                      ; preds = %for.inc.for.body226_crit_edge, %for.cond223.preheader.for.body226_crit_edge
  %i.0424 = phi i32 [ %inc, %for.inc.for.body226_crit_edge ], [ 0, %for.cond223.preheader.for.body226_crit_edge ]
  %160 = ptrtoint ptr %function.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %function.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0424, i32 %161)
  %cmp228 = icmp eq i32 %i.0424, %161
  br i1 %cmp228, label %for.body226.for.inc_crit_edge, label %if.end231

for.body226.for.inc_crit_edge:                    ; preds = %for.body226
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end231:                                        ; preds = %for.body226
  call void @__sanitizer_cov_trace_pc() #19
  %162 = ptrtoint ptr %ib_port_default_caps to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %ib_port_default_caps, align 4
  %164 = ptrtoint ptr %master to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %master, align 4
  %arrayidx233 = getelementptr %struct.mlx4_slave_state, ptr %165, i32 %i.0424, i32 10, i32 %port.0427
  %166 = ptrtoint ptr %arrayidx233 to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 %163, ptr %arrayidx233, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end231, %for.body226.for.inc_crit_edge
  %inc = add nuw i32 %i.0424, 1
  %167 = ptrtoint ptr %num_slaves to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %num_slaves, align 8
  %cmp224 = icmp ult i32 %inc, %168
  br i1 %cmp224, label %for.inc.for.body226_crit_edge, label %for.inc.if.end234_crit_edge

for.inc.if.end234_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end234

for.inc.for.body226_crit_edge:                    ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body226

if.end234:                                        ; preds = %for.inc.if.end234_crit_edge, %for.cond223.preheader.if.end234_crit_edge, %if.end217.if.end234_crit_edge
  %169 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %flags.i, align 4
  %and.i400 = and i32 %170, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i400)
  %tobool236.not = icmp eq i32 %and.i400, 0
  %spec.select = select i1 %tobool236.not, i8 5, i8 4
  %171 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 80, i32 %port.0427
  %172 = ptrtoint ptr %171 to i32
  call void @__asan_store1_noabort(i32 %172)
  store i8 %spec.select, ptr %171, align 1
  %173 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %flags.i, align 4
  %and.i402 = and i32 %174, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i402)
  %tobool247.not = icmp eq i32 %and.i402, 0
  br i1 %tobool247.not, label %if.end234.cond.end_crit_edge, label %cond.true

if.end234.cond.end_crit_edge:                     ; preds = %if.end234
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.true:                                        ; preds = %if.end234
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx249 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 9, i32 %port.0427
  %175 = ptrtoint ptr %arrayidx249 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %arrayidx249, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end234.cond.end_crit_edge
  %cond = phi i32 [ %176, %cond.true ], [ -1, %if.end234.cond.end_crit_edge ]
  %call250 = call i32 @mlx4_SET_PORT(ptr noundef %dev, i8 noundef zeroext %conv207, i32 noundef %cond) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call250)
  %tobool251.not = icmp eq i32 %call250, 0
  br i1 %tobool251.not, label %for.inc260, label %do.end255

do.end255:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  %177 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %dev, align 8
  %179 = ptrtoint ptr %178 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %178, align 4
  %dev258 = getelementptr inbounds %struct.pci_dev, ptr %180, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev258, ptr noundef nonnull @.str.11, i32 noundef %port.0427) #20
  call fastcc void @mlx4_cleanup_default_counters(ptr noundef %dev)
  br label %err_counters_table_free

for.inc260:                                       ; preds = %cond.end
  %inc261 = add i32 %port.0427, 1
  %181 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %num_ports.i, align 4
  %cmp205.not = icmp sgt i32 %inc261, %182
  br i1 %cmp205.not, label %for.inc260.cleanup_crit_edge, label %for.inc260.for.body_crit_edge

for.inc260.for.body_crit_edge:                    ; preds = %for.inc260
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc260.cleanup_crit_edge:                     ; preds = %for.inc260
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

err_counters_table_free:                          ; preds = %do.end255, %do.end197
  %err.0 = phi i32 [ %retval.0.i95.i, %do.end197 ], [ %call250, %do.end255 ]
  %183 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %flags.i, align 4
  %and.i404 = and i32 %184, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i404)
  %tobool265.not = icmp eq i32 %and.i404, 0
  br i1 %tobool265.not, label %if.then266, label %err_counters_table_free.err_qp_table_free_crit_edge

err_counters_table_free.err_qp_table_free_crit_edge: ; preds = %err_counters_table_free
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_qp_table_free

if.then266:                                       ; preds = %err_counters_table_free
  %flags.i405 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %185 = ptrtoint ptr %flags.i405 to i32
  call void @__asan_load8_noabort(i32 %185)
  %186 = load i64, ptr %flags.i405, align 8
  %and.i406 = and i64 %186, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i406)
  %tobool.not.i407 = icmp eq i64 %and.i406, 0
  br i1 %tobool.not.i407, label %if.then266.err_qp_table_free_crit_edge, label %if.end.i410

if.then266.err_qp_table_free_crit_edge:           ; preds = %if.then266
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_qp_table_free

if.end.i410:                                      ; preds = %if.then266
  %max_counters.i408 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 79
  %187 = ptrtoint ptr %max_counters.i408 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %max_counters.i408, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %188)
  %tobool2.not.i409 = icmp eq i32 %188, 0
  br i1 %tobool2.not.i409, label %if.end.i410.err_qp_table_free_crit_edge, label %if.end4.i412

if.end.i410.err_qp_table_free_crit_edge:          ; preds = %if.end.i410
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_qp_table_free

if.end4.i412:                                     ; preds = %if.end.i410
  call void @__sanitizer_cov_trace_pc() #19
  %counters_bitmap.i411 = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 20
  call void @mlx4_bitmap_cleanup(ptr noundef %counters_bitmap.i411) #17
  br label %err_qp_table_free

err_qp_table_free:                                ; preds = %if.end4.i412, %if.end.i410.err_qp_table_free_crit_edge, %if.then266.err_qp_table_free_crit_edge, %err_counters_table_free.err_qp_table_free_crit_edge, %do.end186
  %err.1 = phi i32 [ %err.0, %err_counters_table_free.err_qp_table_free_crit_edge ], [ %retval.0.i416, %do.end186 ], [ %err.0, %if.then266.err_qp_table_free_crit_edge ], [ %err.0, %if.end.i410.err_qp_table_free_crit_edge ], [ %err.0, %if.end4.i412 ]
  call void @mlx4_cleanup_qp_table(ptr noundef %dev) #17
  br label %err_srq_table_free

err_srq_table_free:                               ; preds = %err_qp_table_free, %do.end172
  %err.2 = phi i32 [ %call167, %do.end172 ], [ %err.1, %err_qp_table_free ]
  call void @mlx4_cleanup_srq_table(ptr noundef %dev) #17
  br label %err_cq_table_free

err_cq_table_free:                                ; preds = %err_srq_table_free, %do.end162
  %err.3 = phi i32 [ %call157, %do.end162 ], [ %err.2, %err_srq_table_free ]
  call void @mlx4_cleanup_cq_table(ptr noundef %dev) #17
  br label %err_cmd_poll

err_cmd_poll:                                     ; preds = %err_cq_table_free, %do.end152, %do.end118, %do.end106
  %err.4 = phi i32 [ %call99, %do.end106 ], [ %call99, %do.end118 ], [ %call147, %do.end152 ], [ %err.3, %err_cq_table_free ]
  call void @mlx4_cmd_use_polling(ptr noundef %dev) #17
  br label %err_eq_table_free

err_eq_table_free:                                ; preds = %err_cmd_poll, %do.end94
  %err.5 = phi i32 [ %call89, %do.end94 ], [ %err.4, %err_cmd_poll ]
  call void @mlx4_cleanup_eq_table(ptr noundef %dev) #17
  br label %err_mcg_table_free

err_mcg_table_free:                               ; preds = %err_eq_table_free, %do.end84, %do.end73
  %err.6 = phi i32 [ %call79, %do.end84 ], [ %err.5, %err_eq_table_free ], [ %call68, %do.end73 ]
  %189 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %flags.i, align 4
  %and.i414 = and i32 %190, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i414)
  %tobool269.not = icmp eq i32 %and.i414, 0
  br i1 %tobool269.not, label %if.then270, label %err_mcg_table_free.err_mr_table_free_crit_edge

err_mcg_table_free.err_mr_table_free_crit_edge:   ; preds = %err_mcg_table_free
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_mr_table_free

if.then270:                                       ; preds = %err_mcg_table_free
  call void @__sanitizer_cov_trace_pc() #19
  call void @mlx4_cleanup_mcg_table(ptr noundef %dev) #17
  br label %err_mr_table_free

err_mr_table_free:                                ; preds = %if.then270, %err_mcg_table_free.err_mr_table_free_crit_edge, %do.end63
  %err.7 = phi i32 [ %err.6, %err_mcg_table_free.err_mr_table_free_crit_edge ], [ %err.6, %if.then270 ], [ %call58, %do.end63 ]
  call void @mlx4_cleanup_mr_table(ptr noundef %dev) #17
  br label %err_xrcd_table_free

err_xrcd_table_free:                              ; preds = %err_mr_table_free, %do.end50
  %err.8 = phi i32 [ %call45, %do.end50 ], [ %err.7, %err_mr_table_free ]
  call void @mlx4_cleanup_xrcd_table(ptr noundef %dev) #17
  br label %err_pd_table_free

err_pd_table_free:                                ; preds = %err_xrcd_table_free, %do.end40
  %err.9 = phi i32 [ %call35, %do.end40 ], [ %err.8, %err_xrcd_table_free ]
  call void @mlx4_cleanup_pd_table(ptr noundef %dev) #17
  br label %err_kar_unmap

err_kar_unmap:                                    ; preds = %err_pd_table_free, %do.end30
  %err.10 = phi i32 [ %call25, %do.end30 ], [ %err.9, %err_pd_table_free ]
  %191 = ptrtoint ptr %kar to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %kar, align 8
  call void @iounmap(ptr noundef %192) #17
  br label %err_uar_free

err_uar_free:                                     ; preds = %err_kar_unmap, %do.end20
  %err.11 = phi i32 [ %err.10, %err_kar_unmap ], [ -12, %do.end20 ]
  call void @mlx4_uar_free(ptr noundef %dev, ptr noundef %driver_uar) #17
  br label %err_uar_table_free

err_uar_table_free:                               ; preds = %err_uar_free, %do.end8
  %err.12 = phi i32 [ %call3, %do.end8 ], [ %err.11, %err_uar_free ]
  call void @mlx4_cleanup_uar_table(ptr noundef %dev) #17
  br label %cleanup

cleanup:                                          ; preds = %err_uar_table_free, %for.inc260.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %if.end201.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ %call1, %do.end ], [ %err.12, %err_uar_table_free ], [ 0, %if.end201.cleanup_crit_edge ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ 0, %for.inc260.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ib_port_default_caps) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_ARM_COMM_CHANNEL(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_sense_init(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_start_sense(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_QUERY_FW(ptr noundef) local_unnamed_addr #0

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_MOD_STAT_CFG(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx4_alloc_icm(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_MAP_FA(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_RUN_FW(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_sriov_get_totalvfs(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_sriov(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #9

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx4_dev_cap(ptr noundef %dev, ptr noundef %dev_cap) unnamed_addr #1 align 64 {
entry:
  %hca_param = alloca %struct.mlx4_init_hca_param, align 8
  %sensed_port = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mlx4_QUERY_DEV_CAP(ptr noundef %dev, ptr noundef %dev_cap) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev1, ptr noundef nonnull @.str.168) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @mlx4_dev_cap_dump(ptr noundef %dev, ptr noundef %dev_cap) #17
  %min_page_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 28
  %4 = ptrtoint ptr %min_page_sz to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %min_page_sz, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %5)
  %cmp = icmp ugt i32 %5, 4096
  br i1 %cmp, label %do.end5, label %if.end10

do.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %6 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev8, ptr noundef nonnull @.str.214, i32 noundef %5, i32 noundef 4096) #20
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %num_ports = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 19
  %10 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %cmp11 = icmp sgt i32 %11, 2
  br i1 %cmp11, label %do.end15, label %if.end20

do.end15:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  %12 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %dev18 = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev18, ptr noundef nonnull @.str.217, i32 noundef %11, i32 noundef 2) #20
  br label %cleanup

if.end20:                                         ; preds = %if.end10
  %uar_size = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 27
  %16 = ptrtoint ptr %uar_size to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %uar_size, align 4
  %18 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %end = getelementptr %struct.pci_dev, ptr %21, i32 0, i32 47, i32 2, i32 1
  %22 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp23 = icmp eq i32 %23, 0
  br i1 %cmp23, label %cond.end, label %cond.end.thread

cond.end:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp33.not = icmp eq i32 %17, 0
  br i1 %cmp33.not, label %cond.end.if.end64_crit_edge, label %cond.end.cond.end62_crit_edge

cond.end.cond.end62_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end62

cond.end.if.end64_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end64

cond.end.thread:                                  ; preds = %if.end20
  %arrayidx = getelementptr %struct.pci_dev, ptr %21, i32 0, i32 47, i32 2
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx, align 8
  %sub = add i32 %23, 1
  %add = sub i32 %sub, %25
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %add)
  %cmp33883 = icmp ugt i32 %17, %add
  br i1 %cmp33883, label %cond.false49, label %cond.end.thread.if.end64_crit_edge

cond.end.thread.if.end64_crit_edge:               ; preds = %cond.end.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end64

cond.false49:                                     ; preds = %cond.end.thread
  call void @__sanitizer_cov_trace_pc() #19
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx, align 8
  %add61 = sub i32 %sub, %27
  br label %cond.end62

cond.end62:                                       ; preds = %cond.false49, %cond.end.cond.end62_crit_edge
  %cond63 = phi i32 [ %add61, %cond.false49 ], [ 0, %cond.end.cond.end62_crit_edge ]
  %dev40886 = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  %conv = zext i32 %cond63 to i64
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev40886, ptr noundef nonnull @.str.220, i32 noundef %17, i64 noundef %conv) #20
  br label %cleanup

if.end64:                                         ; preds = %cond.end.thread.if.end64_crit_edge, %cond.end.if.end64_crit_edge
  %num_ports66 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %28 = ptrtoint ptr %num_ports66 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %11, ptr %num_ports66, align 4
  %num_sys_eqs = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 12
  %29 = ptrtoint ptr %num_sys_eqs to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %num_sys_eqs, align 8
  %num_sys_eqs68 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 36
  %31 = ptrtoint ptr %num_sys_eqs68 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %num_sys_eqs68, align 8
  %flags2 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 25
  %32 = ptrtoint ptr %flags2 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %flags2, align 8
  %and = and i64 %33, 131072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool69.not = icmp eq i64 %and, 0
  %spec.select = select i1 %tobool69.not, i32 1024, i32 %30
  %num_phys_eqs = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 4, i32 2
  %34 = ptrtoint ptr %num_phys_eqs to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %spec.select, ptr %num_phys_eqs, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp78.not895 = icmp slt i32 %11, 1
  br i1 %cmp78.not895, label %if.end64.for.end_crit_edge, label %for.body.lr.ph

if.end64.for.end_crit_edge:                       ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end64
  %port_cap = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 63
  %phys_caps.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 4
  %max_tc_eth18.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 27
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.0896 = phi i32 [ 1, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %max_vl.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 8
  %35 = ptrtoint ptr %max_vl.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %max_vl.i, align 8
  %arrayidx.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 3, i32 %i.0896
  %37 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %arrayidx.i, align 4
  %ib_mtu.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 6
  %38 = ptrtoint ptr %ib_mtu.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ib_mtu.i, align 8
  %arrayidx2.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 4, i32 %i.0896
  %40 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %arrayidx2.i, align 4
  %max_gids.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 10
  %41 = ptrtoint ptr %max_gids.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %max_gids.i, align 8
  %arrayidx3.i = getelementptr [3 x i32], ptr %phys_caps.i, i32 0, i32 %i.0896
  %43 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %arrayidx3.i, align 4
  %max_pkeys.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 11
  %44 = ptrtoint ptr %max_pkeys.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %max_pkeys.i, align 4
  %arrayidx5.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 4, i32 1, i32 %i.0896
  %46 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %arrayidx5.i, align 4
  %47 = load i32, ptr %max_gids.i, align 8
  %arrayidx8.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 8, i32 %i.0896
  %48 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %arrayidx8.i, align 4
  %49 = load i32, ptr %max_pkeys.i, align 4
  %arrayidx11.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 9, i32 %i.0896
  %50 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %arrayidx11.i, align 4
  %max_port_width.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 7
  %51 = ptrtoint ptr %max_port_width.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %max_port_width.i, align 4
  %conv.i = trunc i32 %52 to i8
  %arrayidx13.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 65, i32 %i.0896
  %53 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %conv.i, ptr %arrayidx13.i, align 1
  %eth_mtu.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 13
  %54 = ptrtoint ptr %eth_mtu.i to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %eth_mtu.i, align 8
  %conv14.i = zext i16 %55 to i32
  %arrayidx16.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 7, i32 %i.0896
  %56 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %conv14.i, ptr %arrayidx16.i, align 4
  %max_tc_eth.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 9
  %57 = ptrtoint ptr %max_tc_eth.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %max_tc_eth.i, align 4
  %59 = ptrtoint ptr %max_tc_eth18.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %max_tc_eth18.i, align 4
  %def_mac.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 12
  %60 = ptrtoint ptr %def_mac.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %def_mac.i, align 8
  %arrayidx21.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 6, i32 %i.0896
  %62 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %61, ptr %arrayidx21.i, align 8
  %supported_port_types.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 1
  %63 = ptrtoint ptr %supported_port_types.i to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %supported_port_types.i, align 1
  %arrayidx23.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 74, i32 %i.0896
  %65 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 %64, ptr %arrayidx23.i, align 1
  %suggested_type.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 2
  %66 = ptrtoint ptr %suggested_type.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %suggested_type.i, align 2
  %arrayidx26.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 75, i32 %i.0896
  %68 = ptrtoint ptr %arrayidx26.i to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 %67, ptr %arrayidx26.i, align 1
  %default_sense.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 3
  %69 = ptrtoint ptr %default_sense.i to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %default_sense.i, align 1
  %arrayidx29.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 76, i32 %i.0896
  %71 = ptrtoint ptr %arrayidx29.i to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %70, ptr %arrayidx29.i, align 1
  %trans_type.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 14
  %72 = ptrtoint ptr %trans_type.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %trans_type.i, align 4
  %arrayidx32.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 10, i32 %i.0896
  %74 = ptrtoint ptr %arrayidx32.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %arrayidx32.i, align 4
  %vendor_oui.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 15
  %75 = ptrtoint ptr %vendor_oui.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %vendor_oui.i, align 8
  %arrayidx35.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 11, i32 %i.0896
  %77 = ptrtoint ptr %arrayidx35.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %76, ptr %arrayidx35.i, align 4
  %wavelength.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 16
  %78 = ptrtoint ptr %wavelength.i to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %wavelength.i, align 4
  %conv36.i = zext i16 %79 to i32
  %arrayidx39.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 12, i32 %i.0896
  %80 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %conv36.i, ptr %arrayidx39.i, align 4
  %trans_code.i = getelementptr %struct.mlx4_port_cap, ptr %port_cap, i32 %i.0896, i32 17
  %81 = ptrtoint ptr %trans_code.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %trans_code.i, align 8
  %arrayidx42.i = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 13, i32 %i.0896
  %83 = ptrtoint ptr %arrayidx42.i to i32
  call void @__asan_store8_noabort(i32 %83)
  store i64 %82, ptr %arrayidx42.i, align 8
  %inc = add i32 %i.0896, 1
  %84 = ptrtoint ptr %num_ports66 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %num_ports66, align 4
  %cmp78.not = icmp sgt i32 %inc, %85
  br i1 %cmp78.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end64.for.end_crit_edge
  %map_clock_to_user = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 65
  %86 = ptrtoint ptr %map_clock_to_user to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %map_clock_to_user, align 1, !range !1168
  %map_clock_to_user92 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 99
  %88 = ptrtoint ptr %map_clock_to_user92 to i32
  call void @__asan_store1_noabort(i32 %88)
  store i8 %87, ptr %map_clock_to_user92, align 4
  %uar_page_size = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 16
  %89 = ptrtoint ptr %uar_page_size to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 4096, ptr %uar_page_size, align 8
  %90 = ptrtoint ptr %uar_size to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %uar_size, align 4
  %div860 = lshr i32 %91, 12
  %num_uars = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 15
  %92 = ptrtoint ptr %num_uars to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %div860, ptr %num_uars, align 4
  %local_ca_ack_delay = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 18
  %93 = ptrtoint ptr %local_ca_ack_delay to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %local_ca_ack_delay, align 8
  %local_ca_ack_delay97 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 14
  %95 = ptrtoint ptr %local_ca_ack_delay97 to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %94, ptr %local_ca_ack_delay97, align 8
  %bf_reg_size = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 29
  %96 = ptrtoint ptr %bf_reg_size to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %bf_reg_size, align 4
  %bf_reg_size99 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 17
  %98 = ptrtoint ptr %bf_reg_size99 to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %97, ptr %bf_reg_size99, align 4
  %bf_regs_per_page = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 30
  %99 = ptrtoint ptr %bf_regs_per_page to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %bf_regs_per_page, align 8
  %bf_regs_per_page101 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 18
  %101 = ptrtoint ptr %bf_regs_per_page101 to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %100, ptr %bf_regs_per_page101, align 8
  %max_sq_sg = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 31
  %102 = ptrtoint ptr %max_sq_sg to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %max_sq_sg, align 4
  %max_sq_sg103 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 19
  %104 = ptrtoint ptr %max_sq_sg103 to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %103, ptr %max_sq_sg103, align 4
  %max_rq_sg = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 33
  %105 = ptrtoint ptr %max_rq_sg to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %max_rq_sg, align 4
  %max_rq_sg105 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 20
  %107 = ptrtoint ptr %max_rq_sg105 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %106, ptr %max_rq_sg105, align 8
  %max_qp_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 1
  %108 = ptrtoint ptr %max_qp_sz to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %max_qp_sz, align 4
  %max_wqes = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 22
  %110 = ptrtoint ptr %max_wqes to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %109, ptr %max_wqes, align 8
  %max_requester_per_qp = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 15
  %111 = ptrtoint ptr %max_requester_per_qp to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %max_requester_per_qp, align 4
  %max_qp_init_rdma = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 25
  %113 = ptrtoint ptr %max_qp_init_rdma to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %112, ptr %max_qp_init_rdma, align 4
  %114 = ptrtoint ptr %dev_cap to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %dev_cap, align 8
  %max_srq_wqes = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 30
  %116 = ptrtoint ptr %max_srq_wqes to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %115, ptr %max_srq_wqes, align 8
  %117 = load i32, ptr %max_rq_sg, align 4
  %sub110 = add i32 %117, -1
  %max_srq_sge = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 31
  %118 = ptrtoint ptr %max_srq_sge to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 %sub110, ptr %max_srq_sge, align 4
  %reserved_srqs = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 4
  %119 = ptrtoint ptr %reserved_srqs to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %reserved_srqs, align 8
  %reserved_srqs113 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 32
  %121 = ptrtoint ptr %reserved_srqs113 to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 %120, ptr %reserved_srqs113, align 8
  %max_sq_desc_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 32
  %122 = ptrtoint ptr %max_sq_desc_sz to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %max_sq_desc_sz, align 8
  %max_sq_desc_sz115 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 23
  %124 = ptrtoint ptr %max_sq_desc_sz115 to i32
  call void @__asan_store4_noabort(i32 %124)
  store i32 %123, ptr %max_sq_desc_sz115, align 4
  %max_rq_desc_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 34
  %125 = ptrtoint ptr %max_rq_desc_sz to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %max_rq_desc_sz, align 8
  %max_rq_desc_sz117 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 24
  %127 = ptrtoint ptr %max_rq_desc_sz117 to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %126, ptr %max_rq_desc_sz117, align 8
  %max_cq_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 6
  %128 = ptrtoint ptr %max_cq_sz to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %max_cq_sz, align 8
  %sub118 = add i32 %129, -1
  %max_cqes = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 34
  %130 = ptrtoint ptr %max_cqes to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 %sub118, ptr %max_cqes, align 8
  %reserved_cqs = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 7
  %131 = ptrtoint ptr %reserved_cqs to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %reserved_cqs, align 4
  %reserved_cqs121 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 35
  %133 = ptrtoint ptr %reserved_cqs121 to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %132, ptr %reserved_cqs121, align 4
  %reserved_eqs = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 10
  %134 = ptrtoint ptr %reserved_eqs to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %reserved_eqs, align 8
  %reserved_eqs123 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 38
  %136 = ptrtoint ptr %reserved_eqs123 to i32
  call void @__asan_store4_noabort(i32 %136)
  store i32 %135, ptr %reserved_eqs123, align 8
  %reserved_mtts = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 13
  %137 = ptrtoint ptr %reserved_mtts to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %reserved_mtts, align 4
  %reserved_mtts125 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 43
  %139 = ptrtoint ptr %reserved_mtts125 to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 %138, ptr %reserved_mtts125, align 4
  %reserved_mrws = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 14
  %140 = ptrtoint ptr %reserved_mrws to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %reserved_mrws, align 8
  %reserved_mrws127 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 44
  %142 = ptrtoint ptr %reserved_mrws127 to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %141, ptr %reserved_mrws127, align 8
  %reserved_pds = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 38
  %143 = ptrtoint ptr %reserved_pds to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %reserved_pds, align 8
  %reserved_pds129 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 54
  %145 = ptrtoint ptr %reserved_pds129 to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 %144, ptr %reserved_pds129, align 8
  %flags = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 60
  %146 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %146)
  %147 = load i64, ptr %flags, align 8
  %and131 = and i64 %147, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and131)
  %tobool132.not = icmp eq i64 %and131, 0
  br i1 %tobool132.not, label %cond.end135.thread, label %cond.true143

cond.end135.thread:                               ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  %reserved_xrcds138888 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 56
  %148 = ptrtoint ptr %reserved_xrcds138888 to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 0, ptr %reserved_xrcds138888, align 8
  br label %cond.end145

cond.true143:                                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  %reserved_xrcds = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 40
  %149 = ptrtoint ptr %reserved_xrcds to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %reserved_xrcds, align 8
  %reserved_xrcds138 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 56
  %151 = ptrtoint ptr %reserved_xrcds138 to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %150, ptr %reserved_xrcds138, align 8
  %max_xrcds = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 41
  %152 = ptrtoint ptr %max_xrcds to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %max_xrcds, align 4
  br label %cond.end145

cond.end145:                                      ; preds = %cond.true143, %cond.end135.thread
  %cond146 = phi i32 [ %153, %cond.true143 ], [ 0, %cond.end135.thread ]
  %max_xrcds148 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 55
  %154 = ptrtoint ptr %max_xrcds148 to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 %cond146, ptr %max_xrcds148, align 4
  %mtt_entry_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 51
  %155 = ptrtoint ptr %mtt_entry_sz to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %mtt_entry_sz, align 4
  %mtt_entry_sz150 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 57
  %157 = ptrtoint ptr %mtt_entry_sz150 to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %156, ptr %mtt_entry_sz150, align 4
  %max_msg_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 20
  %158 = ptrtoint ptr %max_msg_sz to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %max_msg_sz, align 8
  %max_msg_sz152 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 58
  %160 = ptrtoint ptr %max_msg_sz152 to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 %159, ptr %max_msg_sz152, align 8
  %161 = ptrtoint ptr %min_page_sz to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %min_page_sz, align 8
  %neg = sub i32 0, %162
  %page_size_cap = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 59
  %163 = ptrtoint ptr %page_size_cap to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 %neg, ptr %page_size_cap, align 4
  %flags156 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 24
  %164 = ptrtoint ptr %flags156 to i32
  call void @__asan_load8_noabort(i32 %164)
  %165 = load i64, ptr %flags156, align 8
  %166 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %166)
  store i64 %165, ptr %flags, align 8
  %167 = ptrtoint ptr %flags2 to i32
  call void @__asan_load8_noabort(i32 %167)
  %168 = load i64, ptr %flags2, align 8
  %flags2161 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 61
  %169 = ptrtoint ptr %flags2161 to i32
  call void @__asan_store8_noabort(i32 %169)
  store i64 %168, ptr %flags2161, align 8
  %bmme_flags = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 53
  %170 = ptrtoint ptr %bmme_flags to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %bmme_flags, align 4
  %bmme_flags163 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 62
  %172 = ptrtoint ptr %bmme_flags163 to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %171, ptr %bmme_flags163, align 8
  %reserved_lkey = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 54
  %173 = ptrtoint ptr %reserved_lkey to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %reserved_lkey, align 8
  %reserved_lkey165 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 63
  %175 = ptrtoint ptr %reserved_lkey165 to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 %174, ptr %reserved_lkey165, align 4
  %stat_rate_support = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 21
  %176 = ptrtoint ptr %stat_rate_support to i32
  call void @__asan_load2_noabort(i32 %176)
  %177 = load i16, ptr %stat_rate_support, align 4
  %stat_rate_support167 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 64
  %178 = ptrtoint ptr %stat_rate_support167 to i32
  call void @__asan_store2_noabort(i32 %178)
  store i16 %177, ptr %stat_rate_support167, align 8
  %max_gso_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 56
  %179 = ptrtoint ptr %max_gso_sz to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %max_gso_sz, align 8
  %max_gso_sz169 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 66
  %181 = ptrtoint ptr %max_gso_sz169 to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 %180, ptr %max_gso_sz169, align 8
  %max_rss_tbl_sz = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 57
  %182 = ptrtoint ptr %max_rss_tbl_sz to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %max_rss_tbl_sz, align 4
  %max_rss_tbl_sz171 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 67
  %184 = ptrtoint ptr %max_rss_tbl_sz171 to i32
  call void @__asan_store4_noabort(i32 %184)
  store i32 %183, ptr %max_rss_tbl_sz171, align 4
  %arrayidx172 = getelementptr %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 64, i32 1
  %185 = ptrtoint ptr %arrayidx172 to i32
  call void @__asan_load1_noabort(i32 %185)
  %186 = load i8, ptr %arrayidx172, align 1, !range !1168
  %arrayidx176 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 96, i32 1
  %187 = ptrtoint ptr %arrayidx176 to i32
  call void @__asan_store1_noabort(i32 %187)
  store i8 %186, ptr %arrayidx176, align 1
  %arrayidx179 = getelementptr %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 64, i32 2
  %188 = ptrtoint ptr %arrayidx179 to i32
  call void @__asan_load1_noabort(i32 %188)
  %189 = load i8, ptr %arrayidx179, align 2, !range !1168
  %arrayidx183 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 96, i32 2
  %190 = ptrtoint ptr %arrayidx183 to i32
  call void @__asan_store1_noabort(i32 %190)
  store i8 %189, ptr %arrayidx183, align 2
  %health_buffer_addrs = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 62
  %191 = ptrtoint ptr %health_buffer_addrs to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %health_buffer_addrs, align 8
  %health_buffer_addrs186 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 98
  %193 = ptrtoint ptr %health_buffer_addrs186 to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %192, ptr %health_buffer_addrs186, align 8
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 1
  %194 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %195, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool188.not = icmp eq i32 %and.i, 0
  br i1 %tobool188.not, label %if.then189, label %cond.end145.if.end197_crit_edge

cond.end145.if.end197_crit_edge:                  ; preds = %cond.end145
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end197

if.then189:                                       ; preds = %cond.end145
  call void @__sanitizer_cov_trace_pc() #19
  %uar_page_shift195 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 15
  %196 = ptrtoint ptr %uar_page_shift195 to i32
  call void @__asan_store1_noabort(i32 %196)
  store i8 12, ptr %uar_page_shift195, align 4
  %reserved_uars.i = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 26
  %197 = ptrtoint ptr %reserved_uars.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %reserved_uars.i, align 8
  %199 = tail call i32 @llvm.smax.i32(i32 %198, i32 128) #17
  %reserved_uars2.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 45
  %200 = ptrtoint ptr %reserved_uars2.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %199, ptr %reserved_uars2.i, align 4
  br label %if.end197

if.end197:                                        ; preds = %if.then189, %cond.end145.if.end197_crit_edge
  %and200 = and i64 %168, 536870912
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and200)
  %tobool201.not = icmp eq i64 %and200, 0
  br i1 %tobool201.not, label %if.end197.if.end213_crit_edge, label %if.then202

if.end197.if.end213_crit_edge:                    ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end213

if.then202:                                       ; preds = %if.end197
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %hca_param) #17
  %201 = call ptr @memset(ptr %hca_param, i32 0, i32 136)
  %call203 = call i32 @mlx4_QUERY_HCA(ptr noundef %dev, ptr noundef nonnull %hca_param) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call203)
  %tobool204.not = icmp eq i32 %call203, 0
  br i1 %tobool204.not, label %lor.lhs.false205, label %if.then202.if.then208_crit_edge

if.then202.if.then208_crit_edge:                  ; preds = %if.then202
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then208

lor.lhs.false205:                                 ; preds = %if.then202
  %phv_check_en = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %hca_param, i32 0, i32 32
  %202 = ptrtoint ptr %phv_check_en to i32
  call void @__asan_load1_noabort(i32 %202)
  %203 = load i8, ptr %phv_check_en, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %203)
  %tobool207.not = icmp eq i8 %203, 0
  br i1 %tobool207.not, label %lor.lhs.false205.if.end212_crit_edge, label %lor.lhs.false205.if.then208_crit_edge

lor.lhs.false205.if.then208_crit_edge:            ; preds = %lor.lhs.false205
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then208

lor.lhs.false205.if.end212_crit_edge:             ; preds = %lor.lhs.false205
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end212

if.then208:                                       ; preds = %lor.lhs.false205.if.then208_crit_edge, %if.then202.if.then208_crit_edge
  %204 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %204)
  %205 = load i64, ptr %flags2161, align 8
  %and211 = and i64 %205, -536870913
  store i64 %and211, ptr %flags2161, align 8
  br label %if.end212

if.end212:                                        ; preds = %if.then208, %lor.lhs.false205.if.end212_crit_edge
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %hca_param) #17
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.end197.if.end213_crit_edge
  %pci_dev_data = getelementptr inbounds %struct.mlx4_priv, ptr %dev, i32 0, i32 4
  %206 = ptrtoint ptr %pci_dev_data to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %pci_dev_data, align 4
  %and215 = and i32 %207, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and215)
  %tobool216.not = icmp eq i32 %and215, 0
  br i1 %tobool216.not, label %if.end213.if.end220_crit_edge, label %if.then217

if.end213.if.end220_crit_edge:                    ; preds = %if.end213
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end220

if.then217:                                       ; preds = %if.end213
  call void @__sanitizer_cov_trace_pc() #19
  %208 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %208)
  %209 = load i64, ptr %flags, align 8
  %or = or i64 %209, 36028797018963968
  store i64 %or, ptr %flags, align 8
  br label %if.end220

if.end220:                                        ; preds = %if.then217, %if.end213.if.end220_crit_edge
  %210 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %flags.i, align 4
  %and.i862 = and i32 %211, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i862)
  %tobool222.not = icmp eq i32 %and.i862, 0
  br i1 %tobool222.not, label %if.end220.if.end227_crit_edge, label %if.then223

if.end220.if.end227_crit_edge:                    ; preds = %if.end220
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end227

if.then223:                                       ; preds = %if.end220
  call void @__sanitizer_cov_trace_pc() #19
  %212 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %212)
  %213 = load i64, ptr %flags, align 8
  %and226 = and i64 %213, -36028797018963969
  store i64 %and226, ptr %flags, align 8
  br label %if.end227

if.end227:                                        ; preds = %if.then223, %if.end220.if.end227_crit_edge
  call void @__asan_load8_noabort(i32 ptrtoint (ptr @elfcorehdr_addr to i32))
  %214 = load i64, ptr @elfcorehdr_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %214)
  %cmp.i.i.not = icmp eq i64 %214, -1
  br i1 %cmp.i.i.not, label %if.else232, label %if.end227.if.end237_crit_edge

if.end227.if.end237_crit_edge:                    ; preds = %if.end227
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end237

if.else232:                                       ; preds = %if.end227
  call void @__sanitizer_cov_trace_pc() #19
  %215 = load i32, ptr @log_num_mac, align 4
  br label %if.end237

if.end237:                                        ; preds = %if.else232, %if.end227.if.end237_crit_edge
  %.sink903 = phi i32 [ %215, %if.else232 ], [ 1, %if.end227.if.end237_crit_edge ]
  %.sink = phi i32 [ 7, %if.else232 ], [ 0, %if.end227.if.end237_crit_edge ]
  %216 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 71
  %217 = ptrtoint ptr %216 to i32
  call void @__asan_store4_noabort(i32 %217)
  store i32 %.sink903, ptr %216, align 4
  %218 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 72
  %219 = ptrtoint ptr %218 to i32
  call void @__asan_store4_noabort(i32 %219)
  store i32 %.sink, ptr %218, align 8
  %220 = ptrtoint ptr %num_ports66 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %num_ports66, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %221)
  %cmp241.not897 = icmp slt i32 %221, 1
  br i1 %cmp241.not897, label %if.end237.if.end415_crit_edge, label %if.end237.for.body243_crit_edge

if.end237.for.body243_crit_edge:                  ; preds = %if.end237
  br label %for.body243

if.end237.if.end415_crit_edge:                    ; preds = %if.end237
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end415

for.body243:                                      ; preds = %for.inc389.for.body243_crit_edge, %if.end237.for.body243_crit_edge
  %i.1898 = phi i32 [ %inc390, %for.inc389.for.body243_crit_edge ], [ 1, %if.end237.for.body243_crit_edge ]
  %arrayidx245 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 73, i32 %i.1898
  %222 = ptrtoint ptr %arrayidx245 to i32
  call void @__asan_store4_noabort(i32 %222)
  store i32 0, ptr %arrayidx245, align 4
  %arrayidx247 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 74, i32 %i.1898
  %223 = ptrtoint ptr %arrayidx247 to i32
  call void @__asan_load1_noabort(i32 %223)
  %224 = load i8, ptr %arrayidx247, align 1
  %225 = zext i8 %224 to i64
  call void @__sanitizer_cov_trace_switch(i64 %225, ptr @__sancov_gen_cov_switch_values.630)
  switch i8 %224, label %if.else271 [
    i8 0, label %for.body243.land.end.thread_crit_edge
    i8 2, label %for.body243.if.end294_crit_edge
    i8 1, label %if.then267
  ]

for.body243.if.end294_crit_edge:                  ; preds = %for.body243
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end294

for.body243.land.end.thread_crit_edge:            ; preds = %for.body243
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end.thread

if.then267:                                       ; preds = %for.body243
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end294

if.else271:                                       ; preds = %for.body243
  %sub272 = add i32 %i.1898, -1
  %arrayidx273 = getelementptr [2 x i32], ptr @port_type_array, i32 0, i32 %sub272
  %226 = ptrtoint ptr %arrayidx273 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %arrayidx273, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %227)
  %cmp274 = icmp eq i32 %227, 0
  br i1 %cmp274, label %if.then276, label %if.else271.if.end294_crit_edge

if.else271.if.end294_crit_edge:                   ; preds = %if.else271
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end294

if.then276:                                       ; preds = %if.else271
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx278 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 75, i32 %i.1898
  %228 = ptrtoint ptr %arrayidx278 to i32
  call void @__asan_load1_noabort(i32 %228)
  %229 = load i8, ptr %arrayidx278, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %229)
  %tobool280.not = icmp eq i8 %229, 0
  %cond281 = select i1 %tobool280.not, i32 1, i32 2
  br label %if.end294

if.end294:                                        ; preds = %if.then276, %if.else271.if.end294_crit_edge, %if.then267, %for.body243.if.end294_crit_edge
  %.sink909 = phi i32 [ %cond281, %if.then276 ], [ 1, %if.then267 ], [ 2, %for.body243.if.end294_crit_edge ], [ %227, %if.else271.if.end294_crit_edge ]
  %230 = ptrtoint ptr %arrayidx245 to i32
  call void @__asan_store4_noabort(i32 %230)
  store i32 %.sink909, ptr %arrayidx245, align 4
  %231 = ptrtoint ptr %arrayidx247 to i32
  call void @__asan_load1_noabort(i32 %231)
  %.pr = load i8, ptr %arrayidx247, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %.pr)
  %cmp299 = icmp eq i8 %.pr, 3
  br i1 %cmp299, label %land.lhs.true, label %if.end294.land.end.thread_crit_edge

if.end294.land.end.thread_crit_edge:              ; preds = %if.end294
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end.thread

land.lhs.true:                                    ; preds = %if.end294
  %232 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %232)
  %233 = load i64, ptr %flags, align 8
  %and303 = and i64 %233, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and303)
  %tobool304.not = icmp eq i64 %and303, 0
  br i1 %tobool304.not, label %land.lhs.true.land.end.thread_crit_edge, label %land.end

land.lhs.true.land.end.thread_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end.thread

land.end.thread:                                  ; preds = %land.lhs.true.land.end.thread_crit_edge, %if.end294.land.end.thread_crit_edge, %for.body243.land.end.thread_crit_edge
  %arrayidx311891 = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 27, i32 2, i32 %i.1898
  %234 = ptrtoint ptr %arrayidx311891 to i32
  call void @__asan_store1_noabort(i32 %234)
  store i8 0, ptr %arrayidx311891, align 1
  br label %if.else334

land.end:                                         ; preds = %land.lhs.true
  %and307 = lshr i64 %233, 55
  %235 = trunc i64 %and307 to i8
  %236 = and i8 %235, 1
  %arrayidx311 = getelementptr %struct.mlx4_priv, ptr %dev, i32 0, i32 27, i32 2, i32 %i.1898
  %237 = ptrtoint ptr %arrayidx311 to i32
  call void @__asan_store1_noabort(i32 %237)
  store i8 %236, ptr %arrayidx311, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %236)
  %tobool317.not = icmp eq i8 %236, 0
  br i1 %tobool317.not, label %land.end.if.else334_crit_edge, label %land.lhs.true318

land.end.if.else334_crit_edge:                    ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else334

land.lhs.true318:                                 ; preds = %land.end
  %arrayidx320 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 76, i32 %i.1898
  %238 = ptrtoint ptr %arrayidx320 to i32
  call void @__asan_load1_noabort(i32 %238)
  %239 = load i8, ptr %arrayidx320, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %239)
  %tobool322.not = icmp eq i8 %239, 0
  br i1 %tobool322.not, label %land.lhs.true318.if.else334_crit_edge, label %if.then323

land.lhs.true318.if.else334_crit_edge:            ; preds = %land.lhs.true318
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else334

if.then323:                                       ; preds = %land.lhs.true318
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sensed_port) #17
  %240 = ptrtoint ptr %sensed_port to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 0, ptr %sensed_port, align 4
  %arrayidx325 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 78, i32 %i.1898
  %241 = ptrtoint ptr %arrayidx325 to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 3, ptr %arrayidx325, align 4
  %call326 = call i32 @mlx4_SENSE_PORT(ptr noundef %dev, i32 noundef %i.1898, ptr noundef nonnull %sensed_port) #17
  %242 = ptrtoint ptr %sensed_port to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %sensed_port, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %243)
  %cmp327.not = icmp eq i32 %243, 0
  br i1 %cmp327.not, label %if.then323.if.end333_crit_edge, label %if.then329

if.then323.if.end333_crit_edge:                   ; preds = %if.then323
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end333

if.then329:                                       ; preds = %if.then323
  call void @__sanitizer_cov_trace_pc() #19
  %244 = ptrtoint ptr %arrayidx245 to i32
  call void @__asan_store4_noabort(i32 %244)
  store i32 %243, ptr %arrayidx245, align 4
  br label %if.end333

if.end333:                                        ; preds = %if.then329, %if.then323.if.end333_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sensed_port) #17
  br label %if.end341

if.else334:                                       ; preds = %land.lhs.true318.if.else334_crit_edge, %land.end.if.else334_crit_edge, %land.end.thread
  %245 = ptrtoint ptr %arrayidx245 to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %arrayidx245, align 4
  %arrayidx340 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 78, i32 %i.1898
  %247 = ptrtoint ptr %arrayidx340 to i32
  call void @__asan_store4_noabort(i32 %247)
  store i32 %246, ptr %arrayidx340, align 4
  br label %if.end341

if.end341:                                        ; preds = %if.else334, %if.end333
  %248 = ptrtoint ptr %216 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %216, align 4
  %log_max_macs = getelementptr %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 63, i32 %i.1898, i32 4
  %250 = ptrtoint ptr %log_max_macs to i32
  call void @__asan_load1_noabort(i32 %250)
  %251 = load i8, ptr %log_max_macs, align 4
  %conv346 = zext i8 %251 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %249, i32 %conv346)
  %cmp347 = icmp sgt i32 %249, %conv346
  br i1 %cmp347, label %if.then349, label %if.end341.if.end364_crit_edge

if.end341.if.end364_crit_edge:                    ; preds = %if.end341
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end364

if.then349:                                       ; preds = %if.end341
  call void @__sanitizer_cov_trace_pc() #19
  %252 = ptrtoint ptr %216 to i32
  call void @__asan_store4_noabort(i32 %252)
  store i32 %conv346, ptr %216, align 4
  %253 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %dev, align 8
  %255 = ptrtoint ptr %254 to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %254, align 4
  %dev361 = getelementptr inbounds %struct.pci_dev, ptr %256, i32 0, i32 44
  %shl = shl nuw i32 1, %conv346
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev361, ptr noundef nonnull @.str.226, i32 noundef %i.1898, i32 noundef %shl) #20
  br label %if.end364

if.end364:                                        ; preds = %if.then349, %if.end341.if.end364_crit_edge
  %257 = ptrtoint ptr %218 to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %218, align 8
  %log_max_vlans = getelementptr %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 63, i32 %i.1898, i32 5
  %259 = ptrtoint ptr %log_max_vlans to i32
  call void @__asan_load1_noabort(i32 %259)
  %260 = load i8, ptr %log_max_vlans, align 1
  %conv369 = zext i8 %260 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %258, i32 %conv369)
  %cmp370 = icmp sgt i32 %258, %conv369
  br i1 %cmp370, label %if.then372, label %if.end364.for.inc389_crit_edge

if.end364.for.inc389_crit_edge:                   ; preds = %if.end364
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc389

if.then372:                                       ; preds = %if.end364
  call void @__sanitizer_cov_trace_pc() #19
  %261 = ptrtoint ptr %218 to i32
  call void @__asan_store4_noabort(i32 %261)
  store i32 %conv369, ptr %218, align 8
  %262 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %dev, align 8
  %264 = ptrtoint ptr %263 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %263, align 4
  %dev384 = getelementptr inbounds %struct.pci_dev, ptr %265, i32 0, i32 44
  %shl387 = shl nuw i32 1, %conv369
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev384, ptr noundef nonnull @.str.229, i32 noundef %i.1898, i32 noundef %shl387) #20
  br label %for.inc389

for.inc389:                                       ; preds = %if.then372, %if.end364.for.inc389_crit_edge
  %inc390 = add i32 %i.1898, 1
  %266 = ptrtoint ptr %num_ports66 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %num_ports66, align 4
  %cmp241.not = icmp sgt i32 %inc390, %267
  br i1 %cmp241.not, label %for.end391, label %for.inc389.for.body243_crit_edge

for.inc389.for.body243_crit_edge:                 ; preds = %for.inc389
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body243

for.end391:                                       ; preds = %for.inc389
  %268 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %flags.i, align 4
  %and.i864 = and i32 %269, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i864)
  %tobool393.not = icmp ne i32 %and.i864, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %267)
  %cmp397 = icmp eq i32 %267, 2
  %or.cond = select i1 %tobool393.not, i1 %cmp397, i1 false
  br i1 %or.cond, label %land.lhs.true399, label %for.end391.if.end415_crit_edge

for.end391.if.end415_crit_edge:                   ; preds = %for.end391
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end415

land.lhs.true399:                                 ; preds = %for.end391
  %270 = load i32, ptr @port_type_array, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %270)
  %cmp400 = icmp eq i32 %270, 1
  br i1 %cmp400, label %land.lhs.true402, label %land.lhs.true399.if.end415_crit_edge

land.lhs.true399.if.end415_crit_edge:             ; preds = %land.lhs.true399
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end415

land.lhs.true402:                                 ; preds = %land.lhs.true399
  %271 = load i32, ptr getelementptr inbounds ([2 x i32], ptr @port_type_array, i32 0, i32 1), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %271)
  %cmp403 = icmp eq i32 %271, 2
  br i1 %cmp403, label %do.end408, label %land.lhs.true402.if.end415_crit_edge

land.lhs.true402.if.end415_crit_edge:             ; preds = %land.lhs.true402
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end415

do.end408:                                        ; preds = %land.lhs.true402
  call void @__sanitizer_cov_trace_pc() #19
  %272 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load ptr, ptr %dev, align 8
  %274 = ptrtoint ptr %273 to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %273, align 4
  %dev411 = getelementptr inbounds %struct.pci_dev, ptr %275, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev411, ptr noundef nonnull @.str.232) #20
  %276 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %276)
  %277 = load i64, ptr %flags2161, align 8
  %and414 = and i64 %277, -33554433
  store i64 %and414, ptr %flags2161, align 8
  br label %if.end415

if.end415:                                        ; preds = %do.end408, %land.lhs.true402.if.end415_crit_edge, %land.lhs.true399.if.end415_crit_edge, %for.end391.if.end415_crit_edge, %if.end237.if.end415_crit_edge
  %max_counters = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 58
  %278 = ptrtoint ptr %max_counters to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %max_counters, align 8
  %max_counters417 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 79
  %280 = ptrtoint ptr %max_counters417 to i32
  call void @__asan_store4_noabort(i32 %280)
  store i32 %279, ptr %max_counters417, align 4
  %reserved_qps = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 2
  %281 = ptrtoint ptr %reserved_qps to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load i32, ptr %reserved_qps, align 8
  %reserved_qps_cnt = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 68
  %283 = ptrtoint ptr %reserved_qps_cnt to i32
  call void @__asan_store4_noabort(i32 %283)
  store i32 %282, ptr %reserved_qps_cnt, align 8
  %284 = ptrtoint ptr %216 to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %216, align 4
  %286 = ptrtoint ptr %218 to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %218, align 8
  %shl425 = shl nuw i32 1, %287
  %mul = shl i32 %shl425, %285
  %288 = ptrtoint ptr %num_ports66 to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %num_ports66, align 4
  %mul428 = mul i32 %mul, %289
  %arrayidx431 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 68, i32 3
  %290 = ptrtoint ptr %arrayidx431 to i32
  call void @__asan_store4_noabort(i32 %290)
  store i32 %mul428, ptr %arrayidx431, align 4
  %arrayidx434 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 68, i32 2
  %291 = ptrtoint ptr %arrayidx434 to i32
  call void @__asan_store4_noabort(i32 %291)
  store i32 %mul428, ptr %arrayidx434, align 8
  %arrayidx437 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 68, i32 4
  %292 = ptrtoint ptr %arrayidx437 to i32
  call void @__asan_store4_noabort(i32 %292)
  store i32 65536, ptr %arrayidx437, align 8
  %dmfs_high_rate_qpn_base = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 59
  %293 = ptrtoint ptr %dmfs_high_rate_qpn_base to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %dmfs_high_rate_qpn_base, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %294)
  %cmp438.not = icmp eq i32 %294, 0
  br i1 %cmp438.not, label %if.end415.if.else449_crit_edge, label %land.lhs.true440

if.end415.if.else449_crit_edge:                   ; preds = %if.end415
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else449

land.lhs.true440:                                 ; preds = %if.end415
  %295 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %295)
  %296 = load i64, ptr %flags2161, align 8
  %and443 = and i64 %296, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and443)
  %tobool444.not = icmp eq i64 %and443, 0
  br i1 %tobool444.not, label %land.lhs.true440.if.else449_crit_edge, label %land.lhs.true440.if.end455_crit_edge

land.lhs.true440.if.end455_crit_edge:             ; preds = %land.lhs.true440
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end455

land.lhs.true440.if.else449_crit_edge:            ; preds = %land.lhs.true440
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else449

if.else449:                                       ; preds = %land.lhs.true440.if.else449_crit_edge, %if.end415.if.else449_crit_edge
  br label %if.end455

if.end455:                                        ; preds = %if.else449, %land.lhs.true440.if.end455_crit_edge
  %.sink910 = phi i32 [ %282, %if.else449 ], [ %294, %land.lhs.true440.if.end455_crit_edge ]
  %dmfs_high_rate_qpn_base454 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 93
  %297 = ptrtoint ptr %dmfs_high_rate_qpn_base454 to i32
  call void @__asan_store4_noabort(i32 %297)
  store i32 %.sink910, ptr %dmfs_high_rate_qpn_base454, align 4
  %dmfs_high_rate_qpn_range = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 60
  %298 = ptrtoint ptr %dmfs_high_rate_qpn_range to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %dmfs_high_rate_qpn_range, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %299)
  %cmp456.not = icmp eq i32 %299, 0
  br i1 %cmp456.not, label %if.end455.if.else471_crit_edge, label %land.lhs.true458

if.end455.if.else471_crit_edge:                   ; preds = %if.end455
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else471

land.lhs.true458:                                 ; preds = %if.end455
  %300 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %300)
  %301 = load i64, ptr %flags2161, align 8
  %and461 = and i64 %301, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and461)
  %tobool462.not = icmp eq i64 %and461, 0
  br i1 %tobool462.not, label %land.lhs.true458.if.else471_crit_edge, label %if.then463

land.lhs.true458.if.else471_crit_edge:            ; preds = %land.lhs.true458
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else471

if.then463:                                       ; preds = %land.lhs.true458
  call void @__sanitizer_cov_trace_pc() #19
  %dmfs_high_rate_qpn_range466 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 94
  %302 = ptrtoint ptr %dmfs_high_rate_qpn_range466 to i32
  call void @__asan_store4_noabort(i32 %302)
  store i32 %299, ptr %dmfs_high_rate_qpn_range466, align 8
  %dmfs_high_steer_mode = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 51
  %303 = ptrtoint ptr %dmfs_high_steer_mode to i32
  call void @__asan_store4_noabort(i32 %303)
  store i32 0, ptr %dmfs_high_steer_mode, align 4
  %or470 = or i64 %301, 524288
  %304 = ptrtoint ptr %flags2161 to i32
  call void @__asan_store8_noabort(i32 %304)
  store i64 %or470, ptr %flags2161, align 8
  br label %if.end481

if.else471:                                       ; preds = %land.lhs.true458.if.else471_crit_edge, %if.end455.if.else471_crit_edge
  %dmfs_high_steer_mode473 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 51
  %305 = ptrtoint ptr %dmfs_high_steer_mode473 to i32
  call void @__asan_store4_noabort(i32 %305)
  store i32 4, ptr %dmfs_high_steer_mode473, align 4
  %dmfs_high_rate_qpn_base478 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 93
  %306 = ptrtoint ptr %dmfs_high_rate_qpn_base478 to i32
  call void @__asan_store4_noabort(i32 %306)
  store i32 %282, ptr %dmfs_high_rate_qpn_base478, align 4
  %dmfs_high_rate_qpn_range480 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 94
  %307 = ptrtoint ptr %dmfs_high_rate_qpn_range480 to i32
  call void @__asan_store4_noabort(i32 %307)
  store i32 256, ptr %dmfs_high_rate_qpn_range480, align 8
  br label %if.end481

if.end481:                                        ; preds = %if.else471, %if.then463
  %rl_caps = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 97
  %rl_caps483 = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 61
  %308 = call ptr @memcpy(ptr %rl_caps, ptr %rl_caps483, i32 10)
  %dmfs_high_rate_qpn_range485 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 94
  %309 = ptrtoint ptr %dmfs_high_rate_qpn_range485 to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load i32, ptr %dmfs_high_rate_qpn_range485, align 8
  %arrayidx488 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 68, i32 1
  %311 = ptrtoint ptr %arrayidx488 to i32
  call void @__asan_store4_noabort(i32 %311)
  store i32 %310, ptr %arrayidx488, align 4
  %reass.add = shl i32 %mul428, 1
  %add499 = add i32 %282, 65536
  %add503 = add i32 %add499, %reass.add
  %reserved_qps505 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 69
  %312 = ptrtoint ptr %reserved_qps505 to i32
  call void @__asan_store4_noabort(i32 %312)
  store i32 %add503, ptr %reserved_qps505, align 4
  %313 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %flags.i, align 4
  %315 = trunc i32 %314 to i16
  %316 = shl i16 %315, 5
  %317 = and i16 %316, 128
  %sqp_demux = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 81
  %318 = ptrtoint ptr %sqp_demux to i32
  call void @__asan_store2_noabort(i32 %318)
  store i16 %317, ptr %sqp_demux, align 4
  %319 = load i8, ptr @enable_64b_cqe_eqe, align 1, !range !1168
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %319)
  %tobool511.not = icmp eq i8 %319, 0
  %and.i868 = and i32 %314, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i868)
  %tobool514.not = icmp eq i32 %and.i868, 0
  %or.cond893 = select i1 %tobool511.not, i1 %tobool514.not, i1 false
  br i1 %or.cond893, label %if.then515, label %if.end481.if.end548_crit_edge

if.end481.if.end548_crit_edge:                    ; preds = %if.end481
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end548

if.then515:                                       ; preds = %if.end481
  %320 = ptrtoint ptr %flags156 to i32
  call void @__asan_load8_noabort(i32 %320)
  %321 = load i64, ptr %flags156, align 8
  %and517 = and i64 %321, 6917529027641081856
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and517)
  %tobool518.not = icmp eq i64 %and517, 0
  br i1 %tobool518.not, label %if.then515.if.end532_crit_edge, label %do.end522

if.then515.if.end532_crit_edge:                   ; preds = %if.then515
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end532

do.end522:                                        ; preds = %if.then515
  call void @__sanitizer_cov_trace_pc() #19
  %322 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load ptr, ptr %dev, align 8
  %324 = ptrtoint ptr %323 to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load ptr, ptr %323, align 4
  %dev525 = getelementptr inbounds %struct.pci_dev, ptr %325, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev525, ptr noundef nonnull @.str.235) #20
  %326 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %326)
  %327 = load i64, ptr %flags, align 8
  %and531 = and i64 %327, -6917529027641081857
  store i64 %and531, ptr %flags, align 8
  br label %if.end532

if.end532:                                        ; preds = %do.end522, %if.then515.if.end532_crit_edge
  %328 = ptrtoint ptr %flags2 to i32
  call void @__asan_load8_noabort(i32 %328)
  %329 = load i64, ptr %flags2, align 8
  %and534 = and i64 %329, 12288
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and534)
  %tobool535.not = icmp eq i64 %and534, 0
  br i1 %tobool535.not, label %if.end532.if.end548_crit_edge, label %do.end539

if.end532.if.end548_crit_edge:                    ; preds = %if.end532
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end548

do.end539:                                        ; preds = %if.end532
  call void @__sanitizer_cov_trace_pc() #19
  %330 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %dev, align 8
  %332 = ptrtoint ptr %331 to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load ptr, ptr %331, align 4
  %dev542 = getelementptr inbounds %struct.pci_dev, ptr %333, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev542, ptr noundef nonnull @.str.238) #20
  %334 = ptrtoint ptr %flags2 to i32
  call void @__asan_load8_noabort(i32 %334)
  %335 = load i64, ptr %flags2, align 8
  %and546 = and i64 %335, -12289
  store i64 %and546, ptr %flags2, align 8
  br label %if.end548

if.end548:                                        ; preds = %do.end539, %if.end532.if.end548_crit_edge, %if.end481.if.end548_crit_edge
  %336 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %336)
  %337 = load i64, ptr %flags, align 8
  %and551 = and i64 %337, 6917529027641081856
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and551)
  %tobool552.not = icmp eq i64 %and551, 0
  br i1 %tobool552.not, label %if.end548.if.end559_crit_edge, label %land.lhs.true553

if.end548.if.end559_crit_edge:                    ; preds = %if.end548
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end559

land.lhs.true553:                                 ; preds = %if.end548
  %338 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %flags.i, align 4
  %and.i870 = and i32 %339, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i870)
  %tobool555.not = icmp eq i32 %and.i870, 0
  br i1 %tobool555.not, label %land.lhs.true553.if.end559_crit_edge, label %if.then556

land.lhs.true553.if.end559_crit_edge:             ; preds = %land.lhs.true553
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end559

if.then556:                                       ; preds = %land.lhs.true553
  call void @__sanitizer_cov_trace_pc() #19
  %function_caps = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 86
  %340 = ptrtoint ptr %function_caps to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %function_caps, align 8
  %or558 = or i32 %341, 1
  store i32 %or558, ptr %function_caps, align 8
  br label %if.end559

if.end559:                                        ; preds = %if.then556, %land.lhs.true553.if.end559_crit_edge, %if.end548.if.end559_crit_edge
  %342 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %flags.i, align 4
  %and.i872 = and i32 %343, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i872)
  %tobool561.not = icmp eq i32 %and.i872, 0
  br i1 %tobool561.not, label %if.then562, label %if.else596

if.then562:                                       ; preds = %if.end559
  %344 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %344)
  %345 = load i64, ptr %flags2161, align 8
  %346 = and i64 %345, 12288
  call void @__sanitizer_cov_trace_const_cmp8(i64 12288, i64 %346)
  %.not.i = icmp eq i64 %346, 12288
  br i1 %.not.i, label %if.end.i, label %if.then562.mlx4_enable_cqe_eqe_stride.exit_crit_edge

if.then562.mlx4_enable_cqe_eqe_stride.exit_crit_edge: ; preds = %if.then562
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_enable_cqe_eqe_stride.exit

if.end.i:                                         ; preds = %if.then562
  call void @__sanitizer_cov_trace_const_cmp8(i64 6917529027641081856, i64 %and551)
  %.not41.i = icmp eq i64 %and551, 6917529027641081856
  br i1 %.not41.i, label %do.body.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %and14.i = and i64 %345, -12289
  %347 = ptrtoint ptr %flags2161 to i32
  call void @__asan_store8_noabort(i32 %347)
  store i64 %and14.i, ptr %flags2161, align 8
  br label %mlx4_enable_cqe_eqe_stride.exit

do.body.i:                                        ; preds = %if.end.i
  %348 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %348)
  %tobool16.not.i = icmp eq i32 %348, 0
  br i1 %tobool16.not.i, label %do.body.i.do.end22.i_crit_edge, label %do.end.i

do.body.i.do.end22.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end22.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %349 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load ptr, ptr %dev, align 8
  %351 = ptrtoint ptr %350 to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load ptr, ptr %350, align 4
  %dev19.i = getelementptr inbounds %struct.pci_dev, ptr %352, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev19.i, ptr noundef nonnull @.str.246) #20
  br label %do.end22.i

do.end22.i:                                       ; preds = %do.end.i, %do.body.i.do.end22.i_crit_edge
  %353 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %353)
  %354 = load i64, ptr %flags, align 8
  %and26.i = and i64 %354, -6917529027641081857
  store i64 %and26.i, ptr %flags, align 8
  %355 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %356, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool27.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool27.not.i, label %do.end22.i.mlx4_enable_cqe_eqe_stride.exit_crit_edge, label %if.then28.i

do.end22.i.mlx4_enable_cqe_eqe_stride.exit_crit_edge: ; preds = %do.end22.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_enable_cqe_eqe_stride.exit

if.then28.i:                                      ; preds = %do.end22.i
  call void @__sanitizer_cov_trace_pc() #19
  %function_caps.i = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 86
  %357 = ptrtoint ptr %function_caps.i to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %function_caps.i, align 8
  %or.i = or i32 %358, 2
  store i32 %or.i, ptr %function_caps.i, align 8
  br label %mlx4_enable_cqe_eqe_stride.exit

mlx4_enable_cqe_eqe_stride.exit:                  ; preds = %if.then28.i, %do.end22.i.mlx4_enable_cqe_eqe_stride.exit_crit_edge, %if.then10.i, %if.then562.mlx4_enable_cqe_eqe_stride.exit_crit_edge
  %359 = ptrtoint ptr %bf_reg_size99 to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load i32, ptr %bf_reg_size99, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %360)
  %tobool565.not = icmp eq i32 %360, 0
  %conv568 = select i1 %tobool565.not, i8 64, i8 -64
  %alloc_res_qp_mask = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 92
  %361 = ptrtoint ptr %alloc_res_qp_mask to i32
  call void @__asan_store1_noabort(i32 %361)
  store i8 %conv568, ptr %alloc_res_qp_mask, align 2
  %362 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %362)
  %363 = load i64, ptr %flags2161, align 8
  %and572 = and i64 %363, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and572)
  %tobool573.not = icmp eq i64 %and572, 0
  br i1 %tobool573.not, label %land.lhs.true574, label %mlx4_enable_cqe_eqe_stride.exit.if.end599_crit_edge

mlx4_enable_cqe_eqe_stride.exit.if.end599_crit_edge: ; preds = %mlx4_enable_cqe_eqe_stride.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end599

land.lhs.true574:                                 ; preds = %mlx4_enable_cqe_eqe_stride.exit
  %364 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %364)
  %365 = load i64, ptr %flags, align 8
  %and577 = and i64 %365, 9007199254740992
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and577)
  %tobool578.not = icmp eq i64 %and577, 0
  br i1 %tobool578.not, label %land.lhs.true574.if.end599_crit_edge, label %do.end582

land.lhs.true574.if.end599_crit_edge:             ; preds = %land.lhs.true574
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end599

do.end582:                                        ; preds = %land.lhs.true574
  call void @__sanitizer_cov_trace_pc() #19
  %366 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load ptr, ptr %dev, align 8
  %368 = ptrtoint ptr %367 to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %367, align 4
  %dev585 = getelementptr inbounds %struct.pci_dev, ptr %369, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev585, ptr noundef nonnull @.str.241) #20
  %370 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load ptr, ptr %dev, align 8
  %372 = ptrtoint ptr %371 to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %371, align 4
  %dev591 = getelementptr inbounds %struct.pci_dev, ptr %373, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev591, ptr noundef nonnull @.str.244) #20
  %374 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %374)
  %375 = load i64, ptr %flags2161, align 8
  %or594 = or i64 %375, 67108864
  store i64 %or594, ptr %flags2161, align 8
  br label %if.end599

if.else596:                                       ; preds = %if.end559
  call void @__sanitizer_cov_trace_pc() #19
  %alloc_res_qp_mask598 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 92
  %376 = ptrtoint ptr %alloc_res_qp_mask598 to i32
  call void @__asan_store1_noabort(i32 %376)
  store i8 0, ptr %alloc_res_qp_mask598, align 2
  br label %if.end599

if.end599:                                        ; preds = %if.else596, %do.end582, %land.lhs.true574.if.end599_crit_edge, %mlx4_enable_cqe_eqe_stride.exit.if.end599_crit_edge
  %377 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %377)
  %378 = load i64, ptr %flags2161, align 8
  %and.i875 = and i64 %378, 268435456
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i875)
  %tobool.not.i = icmp eq i64 %and.i875, 0
  br i1 %tobool.not.i, label %if.end599.cleanup_crit_edge, label %if.end.i878

if.end599.cleanup_crit_edge:                      ; preds = %if.end599
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i878:                                      ; preds = %if.end599
  %379 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load i32, ptr %flags.i, align 4
  %and.i.i877 = and i32 %380, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i877)
  %tobool1.not.i = icmp eq i32 %and.i.i877, 0
  br i1 %tobool1.not.i, label %if.end12.i, label %do.body.i879

do.body.i879:                                     ; preds = %if.end.i878
  %381 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %381)
  %tobool3.not.i = icmp eq i32 %381, 0
  br i1 %tobool3.not.i, label %do.body.i879.if.end30.sink.split.i_crit_edge, label %do.body.i879.if.end30.sink.split.sink.split.i_crit_edge

do.body.i879.if.end30.sink.split.sink.split.i_crit_edge: ; preds = %do.body.i879
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30.sink.split.sink.split.i

do.body.i879.if.end30.sink.split.i_crit_edge:     ; preds = %do.body.i879
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30.sink.split.i

if.end12.i:                                       ; preds = %if.end.i878
  %382 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %382)
  %383 = load i64, ptr %flags, align 8
  %and14.i881 = and i64 %383, 17179869184
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and14.i881)
  %tobool15.not.i = icmp eq i64 %and14.i881, 0
  br i1 %tobool15.not.i, label %do.body17.i, label %if.end12.i.cleanup_crit_edge

if.end12.i.cleanup_crit_edge:                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body17.i:                                      ; preds = %if.end12.i
  %384 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %384)
  %tobool18.not.i = icmp eq i32 %384, 0
  br i1 %tobool18.not.i, label %do.body17.i.if.end30.sink.split.i_crit_edge, label %do.body17.i.if.end30.sink.split.sink.split.i_crit_edge

do.body17.i.if.end30.sink.split.sink.split.i_crit_edge: ; preds = %do.body17.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30.sink.split.sink.split.i

do.body17.i.if.end30.sink.split.i_crit_edge:      ; preds = %do.body17.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30.sink.split.i

if.end30.sink.split.sink.split.i:                 ; preds = %do.body17.i.if.end30.sink.split.sink.split.i_crit_edge, %do.body.i879.if.end30.sink.split.sink.split.i_crit_edge
  %.str.251.sink.i = phi ptr [ @.str.248, %do.body.i879.if.end30.sink.split.sink.split.i_crit_edge ], [ @.str.251, %do.body17.i.if.end30.sink.split.sink.split.i_crit_edge ]
  %385 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load ptr, ptr %dev, align 8
  %387 = ptrtoint ptr %386 to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load ptr, ptr %386, align 4
  %dev24.i = getelementptr inbounds %struct.pci_dev, ptr %388, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev24.i, ptr noundef nonnull %.str.251.sink.i) #20
  br label %if.end30.sink.split.i

if.end30.sink.split.i:                            ; preds = %if.end30.sink.split.sink.split.i, %do.body17.i.if.end30.sink.split.i_crit_edge, %do.body.i879.if.end30.sink.split.i_crit_edge
  %389 = ptrtoint ptr %flags2161 to i32
  call void @__asan_load8_noabort(i32 %389)
  %390 = load i64, ptr %flags2161, align 8
  %and11.i = and i64 %390, -268435457
  store i64 %and11.i, ptr %flags2161, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end30.sink.split.i, %if.end12.i.cleanup_crit_edge, %if.end599.cleanup_crit_edge, %cond.end62, %do.end15, %do.end5, %do.end
  %retval.0 = phi i32 [ %call, %do.end ], [ -19, %do.end5 ], [ -19, %do.end15 ], [ -19, %cond.end62 ], [ 0, %if.end599.cleanup_crit_edge ], [ 0, %if.end12.i.cleanup_crit_edge ], [ 0, %if.end30.sink.split.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_get_phys_port_id(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @mlx4_make_profile(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_INIT_HCA(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_QUERY_HCA(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_QUERY_ADAPTER(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_config_dev_retrieval(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_dev_cap_dump(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_SENSE_PORT(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_get_qp_per_mgm(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_get_slave_num_gids(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_SET_ICM_SIZE(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_MAP_ICM_AUX(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_icm_table(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_get_mgm_entry_size(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_QUERY_FUNC(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_QUERY_PORT(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_comm_get_version() local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_QUERY_FUNC_CAP(ptr noundef, i8 noundef zeroext, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_replace_zero_macs(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx4_slave_special_qp_cap(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 88) #22
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 2
  %1 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %num_ports, align 4
  %3 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %2, i32 20) #17
  %4 = extractvalue { i32, i1 } %3, 1
  br i1 %4, label %kcalloc.exit.thread, label %if.end7.i.i, !prof !1183

kcalloc.exit.thread:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %spec_qps75 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 28
  %5 = ptrtoint ptr %spec_qps75 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %spec_qps75, align 8
  br label %do.end

if.end7.i.i:                                      ; preds = %entry
  %6 = extractvalue { i32, i1 } %3, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %6, i32 noundef 3520) #23
  %spec_qps = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 28
  %7 = ptrtoint ptr %spec_qps to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call8.i.i, ptr %spec_qps, align 8
  %tobool.not = icmp eq ptr %call7.i.i, null
  %tobool4.not = icmp eq ptr %call8.i.i, null
  %or.cond = select i1 %tobool.not, i1 true, i1 %tobool4.not
  br i1 %or.cond, label %if.end7.i.i.do.end_crit_edge, label %for.cond.preheader

if.end7.i.i.do.end_crit_edge:                     ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

for.cond.preheader:                               ; preds = %if.end7.i.i
  %8 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.not90 = icmp slt i32 %9, 1
  br i1 %cmp.not90, label %for.cond.preheader.if.end38_crit_edge, label %for.body.lr.ph

for.cond.preheader.if.end38_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %spec_qps18 = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i, i32 0, i32 11
  %phys_port_id = getelementptr inbounds %struct.mlx4_func_cap, ptr %call7.i.i, i32 0, i32 16
  br label %for.body

do.end:                                           ; preds = %if.end7.i.i.do.end_crit_edge, %kcalloc.exit.thread
  %spec_qps80 = phi ptr [ %spec_qps75, %kcalloc.exit.thread ], [ %spec_qps, %if.end7.i.i.do.end_crit_edge ]
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.394) #20
  br label %if.then37

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.091 = phi i32 [ 1, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %conv = trunc i32 %i.091 to i8
  %call7 = tail call i32 @mlx4_QUERY_FUNC_CAP(ptr noundef %dev, i8 noundef zeroext %conv, ptr noundef nonnull %call7.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end16, label %do.end12

do.end12:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %14 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dev, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %dev15 = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev15, ptr noundef nonnull @.str.397, i32 noundef %i.091, i32 noundef %call7) #20
  br label %if.then37

if.end16:                                         ; preds = %for.body
  %18 = ptrtoint ptr %spec_qps to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %spec_qps, align 8
  %sub = add i32 %i.091, -1
  %arrayidx = getelementptr %struct.mlx4_spec_qps, ptr %19, i32 %sub
  %20 = call ptr @memcpy(ptr %arrayidx, ptr %spec_qps18, i32 20)
  %arrayidx19 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 73, i32 %i.091
  %21 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx19, align 4
  %arrayidx20 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 77, i32 %i.091
  %23 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx20, align 4
  %24 = ptrtoint ptr %phys_port_id to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %phys_port_id, align 8
  %arrayidx22 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 88, i32 %i.091
  %26 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %arrayidx22, align 8
  %arrayidx24 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 8, i32 %i.091
  %arrayidx25 = getelementptr %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 9, i32 %i.091
  %call26 = tail call i32 @mlx4_get_slave_pkey_gid_tbl_len(ptr noundef %dev, i8 noundef zeroext %conv, ptr noundef %arrayidx24, ptr noundef %arrayidx25) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %for.inc, label %do.end31

do.end31:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  %27 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %dev, align 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %dev34 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev34, ptr noundef nonnull @.str.400, i32 noundef %i.091, i32 noundef %call26) #20
  br label %if.then37

for.inc:                                          ; preds = %if.end16
  %inc = add i32 %i.091, 1
  %31 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %num_ports, align 4
  %cmp.not = icmp sgt i32 %inc, %32
  br i1 %cmp.not, label %for.inc.if.end38_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.if.end38_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

if.then37:                                        ; preds = %do.end31, %do.end12, %do.end
  %spec_qps79.ph = phi ptr [ %spec_qps80, %do.end ], [ %spec_qps, %do.end31 ], [ %spec_qps, %do.end12 ]
  %err.1.ph = phi i32 [ -12, %do.end ], [ %call26, %do.end31 ], [ %call7, %do.end12 ]
  %33 = ptrtoint ptr %spec_qps79.ph to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %spec_qps79.ph, align 8
  tail call void @kfree(ptr noundef %34) #17
  %35 = ptrtoint ptr %spec_qps79.ph to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %spec_qps79.ph, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %for.inc.if.end38_crit_edge, %for.cond.preheader.if.end38_crit_edge
  %err.186 = phi i32 [ %err.1.ph, %if.then37 ], [ 0, %for.cond.preheader.if.end38_crit_edge ], [ 0, %for.inc.if.end38_crit_edge ]
  tail call void @kfree(ptr noundef %call7.i.i) #17
  ret i32 %err.186
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @slave_adjust_steering_mode(ptr nocapture noundef %dev, ptr nocapture noundef readonly %dev_cap, ptr nocapture noundef readonly %hca_param) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %steering_mode = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %hca_param, i32 0, i32 26
  %0 = ptrtoint ptr %steering_mode to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %steering_mode, align 8
  %conv = zext i8 %1 to i32
  %steering_mode1 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 50
  %2 = ptrtoint ptr %steering_mode1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %conv, ptr %steering_mode1, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %1)
  %cmp = icmp eq i8 %1, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %fs_max_num_qp_per_entry = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 23
  %3 = ptrtoint ptr %fs_max_num_qp_per_entry to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %fs_max_num_qp_per_entry, align 4
  %num_qp_per_mgm = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 49
  %5 = ptrtoint ptr %num_qp_per_mgm to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %num_qp_per_mgm, align 4
  %fs_log_max_ucast_qp_range_size = getelementptr inbounds %struct.mlx4_dev_cap, ptr %dev_cap, i32 0, i32 22
  %6 = ptrtoint ptr %fs_log_max_ucast_qp_range_size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fs_log_max_ucast_qp_range_size, align 8
  %fs_log_max_ucast_qp_range_size7 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 52
  %8 = ptrtoint ptr %fs_log_max_ucast_qp_range_size7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %fs_log_max_ucast_qp_range_size7, align 8
  br label %do.body

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %log_mc_entry_sz = getelementptr inbounds %struct.mlx4_init_hca_param, ptr %hca_param, i32 0, i32 12
  %9 = ptrtoint ptr %log_mc_entry_sz to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %log_mc_entry_sz, align 8
  %conv8 = zext i8 %10 to i32
  %shl = shl nuw i32 1, %conv8
  %div = sdiv i32 %shl, 16
  %sub = shl nsw i32 %div, 2
  %mul = add nsw i32 %sub, -8
  %num_qp_per_mgm10 = getelementptr inbounds %struct.mlx4_dev, ptr %dev, i32 0, i32 3, i32 49
  %11 = ptrtoint ptr %num_qp_per_mgm10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %mul, ptr %num_qp_per_mgm10, align 4
  br label %do.body

do.body:                                          ; preds = %if.else, %if.then
  %12 = load i32, ptr @mlx4_debug_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not = icmp eq i32 %12, 0
  br i1 %tobool.not, label %do.body.do.end17_crit_edge, label %do.end

do.body.do.end17_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end17

do.end:                                           ; preds = %do.body
  %13 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %dev13 = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %1)
  %17 = icmp ult i8 %1, 3
  br i1 %17, label %switch.lookup, label %do.end.mlx4_steering_mode_str.exit_crit_edge

do.end.mlx4_steering_mode_str.exit_crit_edge:     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_steering_mode_str.exit

switch.lookup:                                    ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  %18 = sext i8 %1 to i32
  %switch.gep = getelementptr inbounds [3 x ptr], ptr @switch.table.slave_adjust_steering_mode, i32 0, i32 %18
  %19 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %19)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %mlx4_steering_mode_str.exit

mlx4_steering_mode_str.exit:                      ; preds = %switch.lookup, %do.end.mlx4_steering_mode_str.exit_crit_edge
  %retval.0.i = phi ptr [ %switch.load, %switch.lookup ], [ @.str.264, %do.end.mlx4_steering_mode_str.exit_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.23, ptr noundef %dev13, ptr noundef nonnull @.str.402, ptr noundef nonnull %retval.0.i) #20
  br label %do.end17

do.end17:                                         ; preds = %mlx4_steering_mode_str.exit, %do.body.do.end17_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_get_slave_pkey_gid_tbl_len(ptr noundef, i8 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap_wc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_msix_range(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_get_eqs_per_port(ptr noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @zalloc_cpumask_var(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_uar_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_uar_alloc(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_pd_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_xrcd_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_mr_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_mcg_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_config_mad_demux(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_eq_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_cmd_use_events(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_NOP(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_cq_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_srq_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_init_qp_table(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_get_port_ib_caps(ptr noundef, i8 noundef zeroext, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_bitmap_init(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @priv_to_devlink(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_port_register(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_init_mac_table(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_init_vlan_table(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_init_roce_gid_table(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_get_base_qpn(ptr noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @set_port_type(ptr nocapture noundef readnone %dev, ptr nocapture noundef %attr, ptr noundef %buf, i32 noundef %count) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %attr, i32 -24
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  tail call void @mutex_lock_nested(ptr noundef nonnull @set_port_type.set_port_type_mutex, i32 noundef 0) #17
  %call = tail call i32 @strcmp(ptr noundef %buf, ptr noundef nonnull dereferenceable(4) @.str.489) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.err_out_crit_edge, label %if.else

entry.err_out_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_out

if.else:                                          ; preds = %entry
  %call2 = tail call i32 @strcmp(ptr noundef %buf, ptr noundef nonnull dereferenceable(5) @.str.490) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.else.err_out_crit_edge, label %if.else5

if.else.err_out_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_out

if.else5:                                         ; preds = %if.else
  %call6 = tail call i32 @strcmp(ptr noundef %buf, ptr noundef nonnull dereferenceable(6) @.str.491) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.else5.err_out_crit_edge, label %err_out.thread

if.else5.err_out_crit_edge:                       ; preds = %if.else5
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_out

err_out.thread:                                   ; preds = %if.else5
  call void @__sanitizer_cov_trace_pc() #19
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %dev10 = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev10, ptr noundef nonnull @.str.492, ptr noundef %buf) #20
  tail call void @mutex_unlock(ptr noundef nonnull @set_port_type.set_port_type_mutex) #17
  br label %6

err_out:                                          ; preds = %if.else5.err_out_crit_edge, %if.else.err_out_crit_edge, %entry.err_out_crit_edge
  %port_type.0 = phi i32 [ 1, %entry.err_out_crit_edge ], [ 2, %if.else.err_out_crit_edge ], [ 3, %if.else5.err_out_crit_edge ]
  %call13 = tail call fastcc i32 @__set_port_type(ptr noundef %add.ptr, i32 noundef %port_type.0)
  tail call void @mutex_unlock(ptr noundef nonnull @set_port_type.set_port_type_mutex) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  %spec.select = select i1 %tobool14.not, i32 %count, i32 %call13
  br label %6

6:                                                ; preds = %err_out, %err_out.thread
  %7 = phi i32 [ -22, %err_out.thread ], [ %spec.select, %err_out ]
  ret i32 %7
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_port_type(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %attr, ptr nocapture noundef %buf) #14 align 64 {
entry:
  %type = alloca [8 x i8], align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %attr, i32 -24
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %type) #17
  %port = getelementptr i8, ptr %attr, i32 -20
  %2 = ptrtoint ptr %type to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 -1, ptr %type, align 8
  %3 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %port, align 4
  %arrayidx = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 73, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp = icmp eq i32 %6, 1
  %cond = select i1 %cmp, ptr @.str.499, ptr @.str.500
  %strcpy = call ptr @strcpy(ptr noundef nonnull %type, ptr noundef nonnull %cond) #24
  %arrayidx4 = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 78, i32 %4
  %7 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %8)
  %cmp5 = icmp eq i32 %8, 3
  %.str.501..str.502 = select i1 %cmp5, ptr @.str.501, ptr @.str.502
  %call9 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull %.str.501..str.502, ptr noundef nonnull %type)
  %call10 = call i32 @strlen(ptr noundef %buf) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %type) #17
  ret i32 %call10
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_create_file(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @set_port_ib_mtu(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %attr, ptr noundef %buf, i32 noundef %count) #1 align 64 {
entry:
  %mtu = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %attr, i32 -72
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mtu) #17
  %2 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %mtu, align 4, !annotation !1173
  %port2 = getelementptr i8, ptr %attr, i32 -68
  %3 = ptrtoint ptr %port2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %port2, align 4
  %arrayidx = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 73, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %cmp = icmp eq i32 %6, 2
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %dev3 = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev3, ptr noundef nonnull @.str.503) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %call4 = call i32 @kstrtoint(ptr noundef %buf, i32 noundef 0, ptr noundef nonnull %mtu) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then5, label %if.end.do.end13_crit_edge

if.end.do.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

if.then5:                                         ; preds = %if.end
  %11 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mtu, align 4
  %13 = zext i32 %12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.631)
  switch i32 %12, label %if.then5.do.end13_crit_edge [
    i32 256, label %if.then5.if.end17_crit_edge
    i32 512, label %sw.bb1.i
    i32 1024, label %sw.bb2.i
    i32 2048, label %sw.bb3.i
    i32 4096, label %sw.bb4.i
  ]

if.then5.if.end17_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.then5.do.end13_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

sw.bb1.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

sw.bb2.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

sw.bb3.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

sw.bb4.i:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

do.end13:                                         ; preds = %if.then5.do.end13_crit_edge, %if.end.do.end13_crit_edge
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %dev16 = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev16, ptr noundef nonnull @.str.506, ptr noundef %buf) #20
  br label %cleanup

if.end17:                                         ; preds = %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.then5.if.end17_crit_edge
  %ibta_mtu.0 = phi i8 [ 5, %sw.bb4.i ], [ 4, %sw.bb3.i ], [ 3, %sw.bb2.i ], [ 2, %sw.bb1.i ], [ 1, %if.then5.if.end17_crit_edge ]
  %18 = ptrtoint ptr %port2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %port2, align 4
  %arrayidx20 = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 80, i32 %19
  %20 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %ibta_mtu.0, ptr %arrayidx20, align 1
  call void @mlx4_stop_sense(ptr noundef %1) #17
  %port_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %1, i32 0, i32 28
  call void @mutex_lock_nested(ptr noundef %port_mutex, i32 noundef 0) #17
  call void @mlx4_unregister_device(ptr noundef %1) #17
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 2
  %21 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp22.not75 = icmp slt i32 %22, 1
  br i1 %cmp22.not75, label %if.end17.for.end_crit_edge, label %if.end17.for.body_crit_edge

if.end17.for.body_crit_edge:                      ; preds = %if.end17
  br label %for.body

if.end17.for.end_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end17.for.body_crit_edge
  %port.076 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 1, %if.end17.for.body_crit_edge ]
  %call24 = call i32 @mlx4_CLOSE_PORT(ptr noundef %1, i32 noundef %port.076) #17
  %conv25 = trunc i32 %port.076 to i8
  %call26 = call i32 @mlx4_SET_PORT(ptr noundef %1, i8 noundef zeroext %conv25, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %for.inc, label %do.end31

do.end31:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %23 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %1, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 4
  %dev34 = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev34, ptr noundef nonnull @.str.11, i32 noundef %port.076) #20
  br label %err_set_port

for.inc:                                          ; preds = %for.body
  %inc = add i32 %port.076, 1
  %27 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_ports, align 4
  %cmp22.not = icmp sgt i32 %inc, %28
  br i1 %cmp22.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end17.for.end_crit_edge
  %call36 = call i32 @mlx4_register_device(ptr noundef %1) #17
  br label %err_set_port

err_set_port:                                     ; preds = %for.end, %do.end31
  %err.0 = phi i32 [ %call26, %do.end31 ], [ %call36, %for.end ]
  call void @mutex_unlock(ptr noundef %port_mutex) #17
  call void @mlx4_start_sense(ptr noundef %1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool38.not = icmp eq i32 %err.0, 0
  %count.err.0 = select i1 %tobool38.not, i32 %count, i32 %err.0
  br label %cleanup

cleanup:                                          ; preds = %err_set_port, %do.end13, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ -22, %do.end13 ], [ %count.err.0, %err_set_port ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mtu) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_port_ib_mtu(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %attr, ptr nocapture noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %attr, i32 -72
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  %port = getelementptr i8, ptr %attr, i32 -68
  %2 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %port, align 4
  %arrayidx = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 73, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp = icmp eq i32 %5, 2
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev2, ptr noundef nonnull @.str.503) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %10 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %port, align 4
  %arrayidx5 = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 80, i32 %11
  %12 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx5, align 1
  %switch.tableidx = add i8 %13, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %switch.tableidx)
  %14 = icmp ult i8 %switch.tableidx, 5
  br i1 %14, label %switch.lookup, label %if.end.ibta_mtu_to_int.exit_crit_edge

if.end.ibta_mtu_to_int.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %ibta_mtu_to_int.exit

switch.lookup:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %15 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [5 x i32], ptr @switch.table.show_port_ib_mtu, i32 0, i32 %15
  %16 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %16)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %ibta_mtu_to_int.exit

ibta_mtu_to_int.exit:                             ; preds = %switch.lookup, %if.end.ibta_mtu_to_int.exit_crit_edge
  %retval.0.i = phi i32 [ %switch.load, %switch.lookup ], [ -1, %if.end.ibta_mtu_to_int.exit_crit_edge ]
  %call6 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.511, i32 noundef %retval.0.i)
  %call7 = tail call i32 @strlen(ptr noundef %buf) #24
  ret i32 %call7
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__set_port_type(ptr nocapture noundef %info, i32 noundef %port_type) unnamed_addr #1 align 64 {
entry:
  %types = alloca [2 x i32], align 4
  %new_types = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %info, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %types) #17
  %2 = ptrtoint ptr %types to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %types, align 4, !annotation !1173
  %3 = getelementptr inbounds [2 x i32], ptr %types, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4, !annotation !1173
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %new_types) #17
  %5 = ptrtoint ptr %new_types to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %new_types, align 4, !annotation !1173
  %6 = getelementptr inbounds [2 x i32], ptr %new_types, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %6, align 4, !annotation !1173
  %port = getelementptr inbounds %struct.mlx4_port_info, ptr %info, i32 0, i32 1
  %8 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %port, align 4
  %arrayidx = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 74, i32 %9
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %11 to i32
  %and = and i32 %conv, %port_type
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %port_type)
  %cmp.not = icmp eq i32 %and, %port_type
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev2, ptr noundef nonnull @.str.9, i32 noundef %9) #20
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @mlx4_stop_sense(ptr noundef %1) #17
  %port_mutex = getelementptr inbounds %struct.mlx4_priv, ptr %1, i32 0, i32 28
  tail call void @mutex_lock_nested(ptr noundef %port_mutex, i32 noundef 0) #17
  %tmp_type = getelementptr inbounds %struct.mlx4_port_info, ptr %info, i32 0, i32 4
  %16 = ptrtoint ptr %tmp_type to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %port_type, ptr %tmp_type, align 4
  %17 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %port, align 4
  %arrayidx7 = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 78, i32 %18
  %19 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %port_type, ptr %arrayidx7, align 4
  %num_ports = getelementptr inbounds %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 2
  %20 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp9152 = icmp sgt i32 %21, 0
  br i1 %cmp9152, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.0153 = phi i32 [ %add, %for.inc.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %add = add nuw nsw i32 %i.0153, 1
  %tmp_type13 = getelementptr %struct.mlx4_priv, ptr %1, i32 0, i32 26, i32 %add, i32 4
  %22 = ptrtoint ptr %tmp_type13 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %tmp_type13, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not = icmp eq i32 %23, 0
  br i1 %tobool.not, label %cond.false, label %for.body.cond.end_crit_edge

for.body.cond.end_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.false:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx21 = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 78, i32 %add
  %24 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx21, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %for.body.cond.end_crit_edge
  %cond = phi i32 [ %25, %cond.false ], [ %23, %for.body.cond.end_crit_edge ]
  %arrayidx22 = getelementptr [2 x i32], ptr %types, i32 0, i32 %i.0153
  %26 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %cond, ptr %arrayidx22, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %cond)
  %cmp24 = icmp eq i32 %cond, 3
  br i1 %cmp24, label %if.then26, label %cond.end.for.inc_crit_edge

cond.end.for.inc_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then26:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx30 = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 73, i32 %add
  %27 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx30, align 4
  %29 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx22, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then26, %cond.end.for.inc_crit_edge
  %30 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %num_ports, align 4
  %cmp9 = icmp slt i32 %add, %31
  br i1 %cmp9, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %flags = getelementptr inbounds %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 60
  %32 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %flags, align 8
  %34 = and i64 %33, 36028797018968064
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %34)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %for.cond41.preheader, label %for.end.if.end72_crit_edge

for.end.if.end72_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72

for.cond41.preheader:                             ; preds = %for.end
  %36 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %37)
  %cmp44.not154 = icmp slt i32 %37, 1
  br i1 %cmp44.not154, label %for.cond41.preheader.if.end72_crit_edge, label %for.cond41.preheader.for.body46_crit_edge

for.cond41.preheader.for.body46_crit_edge:        ; preds = %for.cond41.preheader
  br label %for.body46

for.cond41.preheader.if.end72_crit_edge:          ; preds = %for.cond41.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72

for.body46:                                       ; preds = %for.inc60.for.body46_crit_edge, %for.cond41.preheader.for.body46_crit_edge
  %err.0157 = phi i32 [ %err.1, %for.inc60.for.body46_crit_edge ], [ 0, %for.cond41.preheader.for.body46_crit_edge ]
  %i.1155 = phi i32 [ %inc61, %for.inc60.for.body46_crit_edge ], [ 1, %for.cond41.preheader.for.body46_crit_edge ]
  %arrayidx49 = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 78, i32 %i.1155
  %38 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx49, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %39)
  %cmp50 = icmp eq i32 %39, 3
  br i1 %cmp50, label %if.then52, label %for.body46.for.inc60_crit_edge

for.body46.for.inc60_crit_edge:                   ; preds = %for.body46
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc60

if.then52:                                        ; preds = %for.body46
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx55 = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 73, i32 %i.1155
  %40 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx55, align 4
  %42 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %arrayidx49, align 4
  br label %for.inc60

for.inc60:                                        ; preds = %if.then52, %for.body46.for.inc60_crit_edge
  %err.1 = phi i32 [ -95, %if.then52 ], [ %err.0157, %for.body46.for.inc60_crit_edge ]
  %inc61 = add i32 %i.1155, 1
  %43 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %num_ports, align 4
  %cmp44.not = icmp sgt i32 %inc61, %44
  br i1 %cmp44.not, label %if.end63, label %for.inc60.for.body46_crit_edge

for.inc60.for.body46_crit_edge:                   ; preds = %for.inc60
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body46

if.end63:                                         ; preds = %for.inc60
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.1)
  %tobool64.not = icmp eq i32 %err.1, 0
  br i1 %tobool64.not, label %if.end63.if.end72_crit_edge, label %do.end68

if.end63.if.end72_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end72

do.end68:                                         ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #19
  %45 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %1, align 8
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %46, align 4
  %dev71 = getelementptr inbounds %struct.pci_dev, ptr %48, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev71, ptr noundef nonnull @.str.496) #20
  br label %out

if.end72:                                         ; preds = %if.end63.if.end72_crit_edge, %for.cond41.preheader.if.end72_crit_edge, %for.end.if.end72_crit_edge
  call void @mlx4_do_sense_ports(ptr noundef %1, ptr noundef nonnull %new_types, ptr noundef nonnull %types) #17
  %49 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %flags, align 8
  %and.i = and i64 %50, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %for.cond.preheader.i, label %if.end72.if.end6.i_crit_edge

if.end72.if.end6.i_crit_edge:                     ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i

for.cond.preheader.i:                             ; preds = %if.end72
  %51 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %num_ports, align 4
  %sub.i = add i32 %52, -1
  %smax.i = call i32 @llvm.smax.i32(i32 %sub.i, i32 0) #17
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %for.cond.preheader.i
  %i.0.i = phi i32 [ %add.i, %for.body.i.for.cond.i_crit_edge ], [ 0, %for.cond.preheader.i ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.i, i32 %smax.i)
  %exitcond.not.i = icmp eq i32 %i.0.i, %smax.i
  br i1 %exitcond.not.i, label %for.cond.i.if.end6.i_crit_edge, label %for.body.i

for.cond.i.if.end6.i_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i

for.body.i:                                       ; preds = %for.cond.i
  %arrayidx.i = getelementptr i32, ptr %new_types, i32 %i.0.i
  %53 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx.i, align 4
  %add.i = add nuw i32 %i.0.i, 1
  %arrayidx2.i = getelementptr i32, ptr %new_types, i32 %add.i
  %55 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx2.i, align 4
  %cmp3.not.i = icmp eq i32 %54, %56
  br i1 %cmp3.not.i, label %for.body.i.for.cond.i_crit_edge, label %do.end.i

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i

do.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %57 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %1, align 8
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %58, align 4
  %dev5.i = getelementptr inbounds %struct.pci_dev, ptr %60, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5.i, ptr noundef nonnull @.str.3) #20
  br label %out

if.end6.i:                                        ; preds = %for.cond.i.if.end6.i_crit_edge, %if.end72.if.end6.i_crit_edge
  %61 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %num_ports, align 4
  %smax45.i = call i32 @llvm.smax.i32(i32 %62, i32 0) #17
  br label %for.cond7.i

for.cond7.i:                                      ; preds = %for.body11.i.for.cond7.i_crit_edge, %if.end6.i
  %i.1.i = phi i32 [ 0, %if.end6.i ], [ %add14.i, %for.body11.i.for.cond7.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1.i, i32 %smax45.i)
  %exitcond46.not.i = icmp eq i32 %i.1.i, %smax45.i
  br i1 %exitcond46.not.i, label %for.cond79.preheader, label %for.body11.i

for.cond79.preheader:                             ; preds = %for.cond7.i
  %63 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %cmp82158 = icmp sgt i32 %64, 0
  br i1 %cmp82158, label %for.cond79.preheader.for.body84_crit_edge, label %for.cond79.preheader.for.end91_crit_edge

for.cond79.preheader.for.end91_crit_edge:         ; preds = %for.cond79.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end91

for.cond79.preheader.for.body84_crit_edge:        ; preds = %for.cond79.preheader
  br label %for.body84

for.body11.i:                                     ; preds = %for.cond7.i
  %arrayidx12.i = getelementptr i32, ptr %new_types, i32 %i.1.i
  %65 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx12.i, align 4
  %add14.i = add nuw i32 %i.1.i, 1
  %arrayidx15.i = getelementptr %struct.mlx4_dev, ptr %1, i32 0, i32 3, i32 74, i32 %add14.i
  %67 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %arrayidx15.i, align 1
  %conv.i = zext i8 %68 to i32
  %and16.i = and i32 %66, %conv.i
  %tobool17.not.i = icmp eq i32 %and16.i, 0
  br i1 %tobool17.not.i, label %do.end21.i, label %for.body11.i.for.cond7.i_crit_edge

for.body11.i.for.cond7.i_crit_edge:               ; preds = %for.body11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond7.i

do.end21.i:                                       ; preds = %for.body11.i
  call void @__sanitizer_cov_trace_pc() #19
  %69 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %1, align 8
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %70, align 4
  %dev24.i = getelementptr inbounds %struct.pci_dev, ptr %72, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev24.i, ptr noundef nonnull @.str.9, i32 noundef %add14.i) #20
  br label %out

for.body84:                                       ; preds = %for.body84.for.body84_crit_edge, %for.cond79.preheader.for.body84_crit_edge
  %i.2159 = phi i32 [ %add86, %for.body84.for.body84_crit_edge ], [ 0, %for.cond79.preheader.for.body84_crit_edge ]
  %add86 = add nuw nsw i32 %i.2159, 1
  %tmp_type88 = getelementptr %struct.mlx4_priv, ptr %1, i32 0, i32 26, i32 %add86, i32 4
  %73 = ptrtoint ptr %tmp_type88 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 0, ptr %tmp_type88, align 4
  %74 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %num_ports, align 4
  %cmp82 = icmp slt i32 %add86, %75
  br i1 %cmp82, label %for.body84.for.body84_crit_edge, label %for.body84.for.end91_crit_edge

for.body84.for.end91_crit_edge:                   ; preds = %for.body84
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end91

for.body84.for.body84_crit_edge:                  ; preds = %for.body84
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body84

for.end91:                                        ; preds = %for.body84.for.end91_crit_edge, %for.cond79.preheader.for.end91_crit_edge
  %call93 = call i32 @mlx4_change_port_types(ptr noundef %1, ptr noundef nonnull %new_types)
  br label %out

out:                                              ; preds = %for.end91, %do.end21.i, %do.end.i, %do.end68
  %err.3 = phi i32 [ %err.1, %do.end68 ], [ %call93, %for.end91 ], [ -95, %do.end21.i ], [ -95, %do.end.i ]
  call void @mlx4_start_sense(ptr noundef %1) #17
  call void @mutex_unlock(ptr noundef %port_mutex) #17
  br label %cleanup

cleanup:                                          ; preds = %out, %do.end
  %retval.0 = phi i32 [ -95, %do.end ], [ %err.3, %out ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %new_types) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %types) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_do_sense_ports(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtoint(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_init_one(ptr noundef %pdev, ptr nocapture noundef readonly %id) #1 align 64 {
entry:
  %nvfs.i = alloca [3 x i32], align 4
  %prb_vf.i = alloca [3 x i32], align 4
  %param_map.i = alloca [3 x [3 x i32]], align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %.b81 = load i1, ptr @mlx4_init_one.__already_done, align 1
  br i1 %.b81, label %entry.if.end_crit_edge, label %if.then, !prof !1184

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mlx4_init_one.__already_done, align 1
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.512, ptr noundef nonnull @mlx4_version) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %call.i = tail call ptr @devlink_alloc_ns(ptr noundef nonnull @mlx4_devlink_ops, i32 noundef 74192, ptr noundef nonnull @init_net, ptr noundef %dev12) #17
  %tobool14.not = icmp eq ptr %call.i, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %call17 = tail call ptr @devlink_priv(ptr noundef nonnull %call.i) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 396) #22
  %1 = ptrtoint ptr %call17 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call7.i.i, ptr %call17, align 8
  %tobool21.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool21.not, label %if.end16.err_devlink_free_crit_edge, label %if.end23

if.end16.err_devlink_free_crit_edge:              ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_devlink_free

if.end23:                                         ; preds = %if.end16
  %2 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %pdev, ptr %call7.i.i, align 8
  %3 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %call17, align 8
  %dev27 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %dev27 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call17, ptr %dev27, align 4
  %6 = load ptr, ptr %call17, align 8
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %7 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %driver_data.i.i, align 4
  %driver_data = getelementptr inbounds %struct.pci_device_id, ptr %id, i32 0, i32 6
  %8 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %driver_data, align 4
  %pci_dev_data = getelementptr inbounds %struct.mlx4_priv, ptr %call17, i32 0, i32 4
  %10 = ptrtoint ptr %pci_dev_data to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %pci_dev_data, align 4
  %11 = load ptr, ptr %call17, align 8
  %device_state_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %11, i32 0, i32 8
  tail call void @__mutex_init(ptr noundef %device_state_mutex, ptr noundef nonnull @.str.514, ptr noundef nonnull @mlx4_init_one.__key) #17
  %12 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %call17, align 8
  %interface_state_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %13, i32 0, i32 10
  tail call void @__mutex_init(ptr noundef %interface_state_mutex, ptr noundef nonnull @.str.516, ptr noundef nonnull @mlx4_init_one.__key.515) #17
  %14 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %call17, align 8
  %pci_status_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %15, i32 0, i32 12
  tail call void @__mutex_init(ptr noundef %pci_status_mutex, ptr noundef nonnull @.str.518, ptr noundef nonnull @mlx4_init_one.__key.517) #17
  %call41 = tail call i32 @devlink_params_register(ptr noundef nonnull %call.i, ptr noundef nonnull @mlx4_devlink_params, i32 noundef 5) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end44, label %if.end23.err_devlink_unregister_crit_edge

if.end23.err_devlink_unregister_crit_edge:        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_devlink_unregister

if.end44:                                         ; preds = %if.end23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mlx4_internal_err_reset to i32))
  %16 = load i32, ptr @mlx4_internal_err_reset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i = icmp eq i32 %16, 0
  %value.sroa.0.sroa.0.0.insert.insert.i = select i1 %tobool.not.i, i32 16777215, i32 33554431
  %.fca.0.insert.i = insertvalue [8 x i32] poison, i32 %value.sroa.0.sroa.0.0.insert.insert.i, 0
  %.fca.1.insert.i = insertvalue [8 x i32] %.fca.0.insert.i, i32 -1, 1
  %.fca.2.insert.i = insertvalue [8 x i32] %.fca.1.insert.i, i32 -1, 2
  %.fca.3.insert.i = insertvalue [8 x i32] %.fca.2.insert.i, i32 -1, 3
  %.fca.4.insert.i = insertvalue [8 x i32] %.fca.3.insert.i, i32 -1, 4
  %.fca.5.insert.i = insertvalue [8 x i32] %.fca.4.insert.i, i32 -1, 5
  %.fca.6.insert.i = insertvalue [8 x i32] %.fca.5.insert.i, i32 -1, 6
  %.fca.7.insert.i = insertvalue [8 x i32] %.fca.6.insert.i, i32 -1, 7
  %call.i82 = tail call i32 @devlink_param_driverinit_value_set(ptr noundef nonnull %call.i, i32 noundef 0, [8 x i32] %.fca.7.insert.i) #17
  %17 = load i32, ptr @log_num_mac, align 4
  %shl.i = shl nuw i32 1, %17
  %value.sroa.0.sroa.13.0.insert.ext486.i = and i32 %shl.i, 16777215
  %.fca.0.insert12.i = insertvalue [8 x i32] poison, i32 %shl.i, 0
  %.fca.1.insert15.i = insertvalue [8 x i32] %.fca.0.insert12.i, i32 -1, 1
  %.fca.2.insert18.i = insertvalue [8 x i32] %.fca.1.insert15.i, i32 -1, 2
  %.fca.3.insert21.i = insertvalue [8 x i32] %.fca.2.insert18.i, i32 -1, 3
  %.fca.4.insert24.i = insertvalue [8 x i32] %.fca.3.insert21.i, i32 -1, 4
  %.fca.5.insert27.i = insertvalue [8 x i32] %.fca.4.insert24.i, i32 -1, 5
  %.fca.6.insert30.i = insertvalue [8 x i32] %.fca.5.insert27.i, i32 -1, 6
  %.fca.7.insert33.i = insertvalue [8 x i32] %.fca.6.insert30.i, i32 -1, 7
  %call2.i = tail call i32 @devlink_param_driverinit_value_set(ptr noundef nonnull %call.i, i32 noundef 1, [8 x i32] %.fca.7.insert33.i) #17
  %18 = load i8, ptr @enable_64b_cqe_eqe, align 1, !range !1168
  %value.sroa.0.sroa.0.0.insert.ext474.i = zext i8 %18 to i32
  %value.sroa.0.sroa.0.0.insert.shift475.i = shl nuw nsw i32 %value.sroa.0.sroa.0.0.insert.ext474.i, 24
  %value.sroa.0.sroa.0.0.insert.insert477.i = or i32 %value.sroa.0.sroa.0.0.insert.shift475.i, %value.sroa.0.sroa.13.0.insert.ext486.i
  %.fca.0.insert36.i = insertvalue [8 x i32] poison, i32 %value.sroa.0.sroa.0.0.insert.insert477.i, 0
  %.fca.1.insert39.i = insertvalue [8 x i32] %.fca.0.insert36.i, i32 -1, 1
  %.fca.2.insert42.i = insertvalue [8 x i32] %.fca.1.insert39.i, i32 -1, 2
  %.fca.3.insert45.i = insertvalue [8 x i32] %.fca.2.insert42.i, i32 -1, 3
  %.fca.4.insert48.i = insertvalue [8 x i32] %.fca.3.insert45.i, i32 -1, 4
  %.fca.5.insert51.i = insertvalue [8 x i32] %.fca.4.insert48.i, i32 -1, 5
  %.fca.6.insert54.i = insertvalue [8 x i32] %.fca.5.insert51.i, i32 -1, 6
  %.fca.7.insert57.i = insertvalue [8 x i32] %.fca.6.insert54.i, i32 -1, 7
  %call5.i = tail call i32 @devlink_param_driverinit_value_set(ptr noundef nonnull %call.i, i32 noundef 17, [8 x i32] %.fca.7.insert57.i) #17
  %19 = load i8, ptr @enable_4k_uar, align 1, !range !1168
  %value.sroa.0.sroa.0.0.insert.ext478.i = zext i8 %19 to i32
  %value.sroa.0.sroa.0.0.insert.shift479.i = shl nuw nsw i32 %value.sroa.0.sroa.0.0.insert.ext478.i, 24
  %value.sroa.0.sroa.0.0.insert.insert481.i = or i32 %value.sroa.0.sroa.0.0.insert.shift479.i, %value.sroa.0.sroa.13.0.insert.ext486.i
  %.fca.0.insert60.i = insertvalue [8 x i32] poison, i32 %value.sroa.0.sroa.0.0.insert.insert481.i, 0
  %.fca.1.insert63.i = insertvalue [8 x i32] %.fca.0.insert60.i, i32 -1, 1
  %.fca.2.insert66.i = insertvalue [8 x i32] %.fca.1.insert63.i, i32 -1, 2
  %.fca.3.insert69.i = insertvalue [8 x i32] %.fca.2.insert66.i, i32 -1, 3
  %.fca.4.insert72.i = insertvalue [8 x i32] %.fca.3.insert69.i, i32 -1, 4
  %.fca.5.insert75.i = insertvalue [8 x i32] %.fca.4.insert72.i, i32 -1, 5
  %.fca.6.insert78.i = insertvalue [8 x i32] %.fca.5.insert75.i, i32 -1, 6
  %.fca.7.insert81.i = insertvalue [8 x i32] %.fca.6.insert78.i, i32 -1, 7
  %call8.i = tail call i32 @devlink_param_driverinit_value_set(ptr noundef nonnull %call.i, i32 noundef 18, [8 x i32] %.fca.7.insert81.i) #17
  %.fca.0.insert84.i = insertvalue [8 x i32] poison, i32 %value.sroa.0.sroa.13.0.insert.ext486.i, 0
  %.fca.1.insert87.i = insertvalue [8 x i32] %.fca.0.insert84.i, i32 -1, 1
  %.fca.2.insert90.i = insertvalue [8 x i32] %.fca.1.insert87.i, i32 -1, 2
  %.fca.3.insert93.i = insertvalue [8 x i32] %.fca.2.insert90.i, i32 -1, 3
  %.fca.4.insert96.i = insertvalue [8 x i32] %.fca.3.insert93.i, i32 -1, 4
  %.fca.5.insert99.i = insertvalue [8 x i32] %.fca.4.insert96.i, i32 -1, 5
  %.fca.6.insert102.i = insertvalue [8 x i32] %.fca.5.insert99.i, i32 -1, 6
  %.fca.7.insert105.i = insertvalue [8 x i32] %.fca.6.insert102.i, i32 -1, 7
  %call9.i = tail call i32 @devlink_param_driverinit_value_set(ptr noundef nonnull %call.i, i32 noundef 3, [8 x i32] %.fca.7.insert105.i) #17
  %20 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %driver_data, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %nvfs.i) #17
  %22 = call ptr @memset(ptr %nvfs.i, i32 0, i32 12)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %prb_vf.i) #17
  %23 = call ptr @memset(ptr %prb_vf.i, i32 0, i32 12)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %param_map.i) #17
  %24 = getelementptr inbounds i8, ptr %param_map.i, i32 4
  %25 = call ptr @memset(ptr %24, i32 0, i32 24)
  %26 = ptrtoint ptr %param_map.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 2, ptr %param_map.i, align 4
  %27 = getelementptr inbounds [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 1, ptr %27, align 4
  %29 = getelementptr inbounds [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 1, i32 2
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 2, ptr %29, align 4
  %31 = getelementptr inbounds [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 2, i32 1
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 1, ptr %31, align 4
  %33 = getelementptr inbounds [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 2, i32 2
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 2, ptr %33, align 4
  %init_name.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 3
  %35 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %36, null
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.end44.pci_name.exit.i_crit_edge

if.end44.pci_name.exit.i_crit_edge:               ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #19
  br label %pci_name.exit.i

if.end.i.i.i:                                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #19
  %37 = ptrtoint ptr %dev12 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dev12, align 4
  br label %pci_name.exit.i

pci_name.exit.i:                                  ; preds = %if.end.i.i.i, %if.end44.pci_name.exit.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %38, %if.end.i.i.i ], [ %36, %if.end44.pci_name.exit.i_crit_edge ]
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.528, ptr noundef %retval.0.i.i.i) #20
  %39 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %call17, align 8
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %40, align 4
  %pci_status_mutex.i.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %40, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %pci_status_mutex.i.i, i32 noundef 0) #17
  %43 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %call17, align 8
  %pci_status.i.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %44, i32 0, i32 13
  %45 = ptrtoint ptr %pci_status.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %pci_status.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp.i.i = icmp eq i32 %46, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %pci_name.exit.i.mlx4_pci_enable_device.exit.i_crit_edge

pci_name.exit.i.mlx4_pci_enable_device.exit.i_crit_edge: ; preds = %pci_name.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_pci_enable_device.exit.i

if.then.i.i:                                      ; preds = %pci_name.exit.i
  %call.i.i = tail call i32 @pci_enable_device(ptr noundef %42) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.then4.i.i, label %if.then.i.i.mlx4_pci_enable_device.exit.i_crit_edge

if.then.i.i.mlx4_pci_enable_device.exit.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_pci_enable_device.exit.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %47 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %call17, align 8
  %pci_status6.i.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %48, i32 0, i32 13
  %49 = ptrtoint ptr %pci_status6.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 1, ptr %pci_status6.i.i, align 4
  br label %mlx4_pci_enable_device.exit.i

mlx4_pci_enable_device.exit.i:                    ; preds = %if.then4.i.i, %if.then.i.i.mlx4_pci_enable_device.exit.i_crit_edge, %pci_name.exit.i.mlx4_pci_enable_device.exit.i_crit_edge
  %err.0.i.i = phi i32 [ %call.i.i, %if.then.i.i.mlx4_pci_enable_device.exit.i_crit_edge ], [ 0, %if.then4.i.i ], [ 0, %pci_name.exit.i.mlx4_pci_enable_device.exit.i_crit_edge ]
  %50 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %call17, align 8
  %pci_status_mutex9.i.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %51, i32 0, i32 12
  tail call void @mutex_unlock(ptr noundef %pci_status_mutex9.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0.i.i)
  %tobool.not.i83 = icmp eq i32 %err.0.i.i, 0
  br i1 %tobool.not.i83, label %for.cond.preheader.i, label %do.end5.i

for.cond.preheader.i:                             ; preds = %mlx4_pci_enable_device.exit.i
  %52 = load i32, ptr @num_vfs_argc, align 4
  %sub.i = add i32 %52, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %exitcond.not.i = icmp eq i32 %52, 0
  br i1 %exitcond.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.body.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

do.end5.i:                                        ; preds = %mlx4_pci_enable_device.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.531) #20
  br label %err_params_unregister

for.body.i:                                       ; preds = %for.cond.preheader.i
  %53 = load i8, ptr @num_vfs, align 1
  %conv.i = zext i8 %53 to i32
  %arrayidx9.i = getelementptr [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 %sub.i, i32 0
  %54 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx9.i, align 4
  %arrayidx10.i = getelementptr [3 x i32], ptr %nvfs.i, i32 0, i32 %55
  %56 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %conv.i, ptr %arrayidx10.i, align 4
  %57 = ptrtoint ptr %nvfs.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %nvfs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %cmp12.i = icmp slt i32 %58, 0
  br i1 %cmp12.i, label %for.body.i.do.end17.i_crit_edge, label %for.inc.i

for.body.i.do.end17.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end17.i

do.end17.i:                                       ; preds = %for.body.2.i.do.end17.i_crit_edge, %for.body.1.i.do.end17.i_crit_edge, %for.body.i.do.end17.i_crit_edge
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.534) #20
  br label %err_disable_pdev.i

for.inc.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %exitcond.1.not.i = icmp eq i32 %52, 1
  br i1 %exitcond.1.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.body.1.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.body.1.i:                                     ; preds = %for.inc.i
  %59 = load i8, ptr getelementptr inbounds ([3 x i8], ptr @num_vfs, i32 0, i32 1), align 1
  %conv.1.i = zext i8 %59 to i32
  %arrayidx9.1.i = getelementptr [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 %sub.i, i32 1
  %60 = ptrtoint ptr %arrayidx9.1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx9.1.i, align 4
  %arrayidx10.1.i = getelementptr [3 x i32], ptr %nvfs.i, i32 0, i32 %61
  %62 = ptrtoint ptr %arrayidx10.1.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %conv.1.i, ptr %arrayidx10.1.i, align 4
  %arrayidx11.1.i = getelementptr inbounds [3 x i32], ptr %nvfs.i, i32 0, i32 1
  %63 = ptrtoint ptr %arrayidx11.1.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx11.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %cmp12.1.i = icmp slt i32 %64, 0
  br i1 %cmp12.1.i, label %for.body.1.i.do.end17.i_crit_edge, label %for.inc.1.i

for.body.1.i.do.end17.i_crit_edge:                ; preds = %for.body.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end17.i

for.inc.1.i:                                      ; preds = %for.body.1.i
  %add.1.i = add nuw nsw i32 %conv.1.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %52)
  %exitcond.2.not.i = icmp eq i32 %52, 2
  br i1 %exitcond.2.not.i, label %for.inc.1.i.for.end.i_crit_edge, label %for.body.2.i

for.inc.1.i.for.end.i_crit_edge:                  ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.body.2.i:                                     ; preds = %for.inc.1.i
  %65 = load i8, ptr getelementptr inbounds ([3 x i8], ptr @num_vfs, i32 0, i32 2), align 1
  %conv.2.i = zext i8 %65 to i32
  %arrayidx9.2.i = getelementptr [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 %sub.i, i32 2
  %66 = ptrtoint ptr %arrayidx9.2.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx9.2.i, align 4
  %arrayidx10.2.i = getelementptr [3 x i32], ptr %nvfs.i, i32 0, i32 %67
  %68 = ptrtoint ptr %arrayidx10.2.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %conv.2.i, ptr %arrayidx10.2.i, align 4
  %arrayidx11.2.i = getelementptr inbounds [3 x i32], ptr %nvfs.i, i32 0, i32 2
  %69 = ptrtoint ptr %arrayidx11.2.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx11.2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %cmp12.2.i = icmp slt i32 %70, 0
  br i1 %cmp12.2.i, label %for.body.2.i.do.end17.i_crit_edge, label %for.inc.2.i

for.body.2.i.do.end17.i_crit_edge:                ; preds = %for.body.2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end17.i

for.inc.2.i:                                      ; preds = %for.body.2.i
  call void @__sanitizer_cov_trace_pc() #19
  %add.2.i = add nuw nsw i32 %add.1.i, %conv.2.i
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.2.i, %for.inc.1.i.for.end.i_crit_edge, %for.inc.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %total_vfs.0.lcssa.i = phi i32 [ 0, %for.cond.preheader.i.for.end.i_crit_edge ], [ %conv.i, %for.inc.i.for.end.i_crit_edge ], [ %add.1.i, %for.inc.1.i.for.end.i_crit_edge ], [ %add.2.i, %for.inc.2.i ]
  %71 = load i32, ptr @probe_vfs_argc, align 4
  %sub34.i = add i32 %71, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %exitcond311.not.i = icmp eq i32 %71, 0
  br i1 %exitcond311.not.i, label %for.end.i.for.end53.i_crit_edge, label %for.body31.i

for.end.i.for.end53.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end53.i

for.cond24.i:                                     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %71)
  %exitcond311.1.not.i = icmp eq i32 %71, 1
  br i1 %exitcond311.1.not.i, label %for.cond24.i.for.end53.i_crit_edge, label %for.body31.1.i

for.cond24.i.for.end53.i_crit_edge:               ; preds = %for.cond24.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end53.i

for.body31.1.i:                                   ; preds = %for.cond24.i
  %72 = load i8, ptr getelementptr inbounds ([3 x i8], ptr @probe_vf, i32 0, i32 1), align 1
  %conv33.1.i = zext i8 %72 to i32
  %arrayidx36.1.i = getelementptr [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 %sub34.i, i32 1
  %73 = ptrtoint ptr %arrayidx36.1.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx36.1.i, align 4
  %arrayidx37.1.i = getelementptr [3 x i32], ptr %prb_vf.i, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx37.1.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %conv33.1.i, ptr %arrayidx37.1.i, align 4
  %arrayidx38.1.i = getelementptr inbounds [3 x i32], ptr %prb_vf.i, i32 0, i32 1
  %76 = ptrtoint ptr %arrayidx38.1.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %arrayidx38.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %cmp39.1.i = icmp slt i32 %77, 0
  br i1 %cmp39.1.i, label %for.body31.1.i.do.end48.i_crit_edge, label %lor.lhs.false.1.i

for.body31.1.i.do.end48.i_crit_edge:              ; preds = %for.body31.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end48.i

lor.lhs.false.1.i:                                ; preds = %for.body31.1.i
  %arrayidx42.1.i = getelementptr inbounds [3 x i32], ptr %nvfs.i, i32 0, i32 1
  %78 = ptrtoint ptr %arrayidx42.1.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx42.1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %77, i32 %79)
  %cmp43.1.i = icmp sgt i32 %77, %79
  br i1 %cmp43.1.i, label %lor.lhs.false.1.i.do.end48.i_crit_edge, label %for.cond24.1.i

lor.lhs.false.1.i.do.end48.i_crit_edge:           ; preds = %lor.lhs.false.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end48.i

for.cond24.1.i:                                   ; preds = %lor.lhs.false.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %71)
  %exitcond311.2.not.i = icmp eq i32 %71, 2
  br i1 %exitcond311.2.not.i, label %for.cond24.1.i.for.end53.i_crit_edge, label %for.body31.2.i

for.cond24.1.i.for.end53.i_crit_edge:             ; preds = %for.cond24.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end53.i

for.body31.2.i:                                   ; preds = %for.cond24.1.i
  %80 = load i8, ptr getelementptr inbounds ([3 x i8], ptr @probe_vf, i32 0, i32 2), align 1
  %conv33.2.i = zext i8 %80 to i32
  %arrayidx36.2.i = getelementptr [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 %sub34.i, i32 2
  %81 = ptrtoint ptr %arrayidx36.2.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx36.2.i, align 4
  %arrayidx37.2.i = getelementptr [3 x i32], ptr %prb_vf.i, i32 0, i32 %82
  %83 = ptrtoint ptr %arrayidx37.2.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %conv33.2.i, ptr %arrayidx37.2.i, align 4
  %arrayidx38.2.i = getelementptr inbounds [3 x i32], ptr %prb_vf.i, i32 0, i32 2
  %84 = ptrtoint ptr %arrayidx38.2.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %arrayidx38.2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %cmp39.2.i = icmp slt i32 %85, 0
  br i1 %cmp39.2.i, label %for.body31.2.i.do.end48.i_crit_edge, label %lor.lhs.false.2.i

for.body31.2.i.do.end48.i_crit_edge:              ; preds = %for.body31.2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end48.i

lor.lhs.false.2.i:                                ; preds = %for.body31.2.i
  %arrayidx42.2.i = getelementptr inbounds [3 x i32], ptr %nvfs.i, i32 0, i32 2
  %86 = ptrtoint ptr %arrayidx42.2.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %arrayidx42.2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %85, i32 %87)
  %cmp43.2.i = icmp sgt i32 %85, %87
  br i1 %cmp43.2.i, label %lor.lhs.false.2.i.do.end48.i_crit_edge, label %lor.lhs.false.2.i.for.end53.i_crit_edge

lor.lhs.false.2.i.for.end53.i_crit_edge:          ; preds = %lor.lhs.false.2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end53.i

lor.lhs.false.2.i.do.end48.i_crit_edge:           ; preds = %lor.lhs.false.2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end48.i

for.body31.i:                                     ; preds = %for.end.i
  %88 = load i8, ptr @probe_vf, align 1
  %conv33.i = zext i8 %88 to i32
  %arrayidx36.i = getelementptr [3 x [3 x i32]], ptr %param_map.i, i32 0, i32 %sub34.i, i32 0
  %89 = ptrtoint ptr %arrayidx36.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %arrayidx36.i, align 4
  %arrayidx37.i = getelementptr [3 x i32], ptr %prb_vf.i, i32 0, i32 %90
  %91 = ptrtoint ptr %arrayidx37.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %conv33.i, ptr %arrayidx37.i, align 4
  %92 = ptrtoint ptr %prb_vf.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %prb_vf.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %93)
  %cmp39.i = icmp slt i32 %93, 0
  br i1 %cmp39.i, label %for.body31.i.do.end48.i_crit_edge, label %lor.lhs.false.i

for.body31.i.do.end48.i_crit_edge:                ; preds = %for.body31.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end48.i

lor.lhs.false.i:                                  ; preds = %for.body31.i
  %94 = ptrtoint ptr %nvfs.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %nvfs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %93, i32 %95)
  %cmp43.i = icmp sgt i32 %93, %95
  br i1 %cmp43.i, label %lor.lhs.false.i.do.end48.i_crit_edge, label %for.cond24.i

lor.lhs.false.i.do.end48.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end48.i

do.end48.i:                                       ; preds = %lor.lhs.false.i.do.end48.i_crit_edge, %for.body31.i.do.end48.i_crit_edge, %lor.lhs.false.2.i.do.end48.i_crit_edge, %for.body31.2.i.do.end48.i_crit_edge, %lor.lhs.false.1.i.do.end48.i_crit_edge, %for.body31.1.i.do.end48.i_crit_edge
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.537) #20
  br label %err_disable_pdev.i

for.end53.i:                                      ; preds = %lor.lhs.false.2.i.for.end53.i_crit_edge, %for.cond24.1.i.for.end53.i_crit_edge, %for.cond24.i.for.end53.i_crit_edge, %for.end.i.for.end53.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 126, i32 %total_vfs.0.lcssa.i)
  %cmp54.i = icmp ugt i32 %total_vfs.0.lcssa.i, 126
  br i1 %cmp54.i, label %do.end59.i, label %for.cond62.preheader.i

for.cond62.preheader.i:                           ; preds = %for.end53.i
  %arrayidx67.i = getelementptr inbounds [3 x i32], ptr %nvfs.i, i32 0, i32 2
  %96 = ptrtoint ptr %arrayidx67.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %arrayidx67.i, align 4
  %98 = ptrtoint ptr %nvfs.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %nvfs.i, align 4
  %add68.i = add i32 %99, %97
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %add68.i)
  %cmp69.i = icmp sgt i32 %add68.i, 64
  br i1 %cmp69.i, label %for.cond62.preheader.i.do.end74.i_crit_edge, label %for.inc81.i

for.cond62.preheader.i.do.end74.i_crit_edge:      ; preds = %for.cond62.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end74.i

do.end59.i:                                       ; preds = %for.end53.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.540, i32 noundef %total_vfs.0.lcssa.i, i32 noundef 126) #20
  br label %err_disable_pdev.i

do.end74.i:                                       ; preds = %for.inc81.i.do.end74.i_crit_edge, %for.cond62.preheader.i.do.end74.i_crit_edge
  %i.2302.lcssa.i = phi i32 [ 1, %for.cond62.preheader.i.do.end74.i_crit_edge ], [ 2, %for.inc81.i.do.end74.i_crit_edge ]
  %add68.lcssa.i = phi i32 [ %add68.i, %for.cond62.preheader.i.do.end74.i_crit_edge ], [ %add68.1.i, %for.inc81.i.do.end74.i_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.543, i32 noundef %add68.lcssa.i, i32 noundef %i.2302.lcssa.i, i32 noundef 64) #20
  br label %err_disable_pdev.i

for.inc81.i:                                      ; preds = %for.cond62.preheader.i
  %arrayidx66.1.i = getelementptr inbounds [3 x i32], ptr %nvfs.i, i32 0, i32 1
  %100 = ptrtoint ptr %arrayidx66.1.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx66.1.i, align 4
  %add68.1.i = add i32 %101, %97
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %add68.1.i)
  %cmp69.1.i = icmp sgt i32 %add68.1.i, 64
  br i1 %cmp69.1.i, label %for.inc81.i.do.end74.i_crit_edge, label %for.inc81.1.i

for.inc81.i.do.end74.i_crit_edge:                 ; preds = %for.inc81.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end74.i

for.inc81.1.i:                                    ; preds = %for.inc81.i
  %and.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool84.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool84.not.i, label %land.lhs.true.i, label %for.inc81.1.i.if.end96.i_crit_edge

for.inc81.1.i.if.end96.i_crit_edge:               ; preds = %for.inc81.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end96.i

land.lhs.true.i:                                  ; preds = %for.inc81.1.i
  %flags.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 0, i32 3
  %102 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %flags.i, align 4
  %and86.i = and i32 %103, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86.i)
  %tobool87.not.i = icmp eq i32 %and86.i, 0
  br i1 %tobool87.not.i, label %do.end91.i, label %land.lhs.true.i.if.end96.i_crit_edge

land.lhs.true.i.if.end96.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end96.i

do.end91.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.546, i32 noundef %21, i32 noundef %103) #20
  br label %err_disable_pdev.i

if.end96.i:                                       ; preds = %land.lhs.true.i.if.end96.i_crit_edge, %for.inc81.1.i.if.end96.i_crit_edge
  %flags99.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 2, i32 3
  %104 = ptrtoint ptr %flags99.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %flags99.i, align 4
  %and100.i = and i32 %105, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and100.i)
  %tobool101.not.i = icmp eq i32 %and100.i, 0
  br i1 %tobool101.not.i, label %do.end105.i, label %if.end107.i

do.end105.i:                                      ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.549) #20
  br label %err_disable_pdev.i

if.end107.i:                                      ; preds = %if.end96.i
  %call108.i = tail call i32 @pci_request_regions(ptr noundef %pdev, ptr noundef nonnull @.str.1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call108.i)
  %tobool109.not.i = icmp eq i32 %call108.i, 0
  br i1 %tobool109.not.i, label %if.end115.i, label %do.end113.i

do.end113.i:                                      ; preds = %if.end107.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.552) #20
  br label %err_disable_pdev.i

if.end115.i:                                      ; preds = %if.end107.i
  tail call void @pci_set_master(ptr noundef %pdev) #17
  %call.i272.i = tail call i32 @dma_set_mask(ptr noundef %dev12, i64 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i272.i)
  %cmp.i273.i = icmp eq i32 %call.i272.i, 0
  br i1 %cmp.i273.i, label %if.end115.i.if.end133.i_crit_edge, label %do.end122.i

if.end115.i.if.end133.i_crit_edge:                ; preds = %if.end115.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end133.i

do.end122.i:                                      ; preds = %if.end115.i
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev12, ptr noundef nonnull @.str.555) #20
  %call.i275.i = tail call i32 @dma_set_mask(ptr noundef %dev12, i64 noundef 4294967295) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i275.i)
  %cmp.i276.i = icmp eq i32 %call.i275.i, 0
  br i1 %cmp.i276.i, label %do.end122.i.if.end133.i_crit_edge, label %do.end130.i

do.end122.i.if.end133.i_crit_edge:                ; preds = %do.end122.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end133.i

do.end130.i:                                      ; preds = %do.end122.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev12, ptr noundef nonnull @.str.558) #20
  br label %err_release_regions.i

if.end133.i:                                      ; preds = %do.end122.i.if.end133.i_crit_edge, %if.end115.i.if.end133.i_crit_edge
  %.sink.i = phi i64 [ -1, %if.end115.i.if.end133.i_crit_edge ], [ 4294967295, %do.end122.i.if.end133.i_crit_edge ]
  %call1.i277.i = tail call i32 @dma_set_coherent_mask(ptr noundef %dev12, i64 noundef %.sink.i) #17
  %dma_parms.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 22
  %106 = ptrtoint ptr %dma_parms.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %dma_parms.i.i, align 4
  %tobool.not.i280.i = icmp eq ptr %107, null
  br i1 %tobool.not.i280.i, label %if.end133.i.dma_set_max_seg_size.exit.i_crit_edge, label %if.then.i281.i

if.end133.i.dma_set_max_seg_size.exit.i_crit_edge: ; preds = %if.end133.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dma_set_max_seg_size.exit.i

if.then.i281.i:                                   ; preds = %if.end133.i
  call void @__sanitizer_cov_trace_pc() #19
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 1073741824, ptr %107, align 4
  br label %dma_set_max_seg_size.exit.i

dma_set_max_seg_size.exit.i:                      ; preds = %if.then.i281.i, %if.end133.i.dma_set_max_seg_size.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %total_vfs.0.lcssa.i)
  %tobool139.not.i = icmp eq i32 %total_vfs.0.lcssa.i, 0
  %or.cond.i = select i1 %tobool84.not.i, i1 true, i1 %tobool139.not.i
  br i1 %or.cond.i, label %dma_set_max_seg_size.exit.i.if.end174.i_crit_edge, label %for.cond141.preheader.i

dma_set_max_seg_size.exit.i.if.end174.i_crit_edge: ; preds = %dma_set_max_seg_size.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end174.i

for.cond141.preheader.i:                          ; preds = %dma_set_max_seg_size.exit.i
  %devfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 6
  %109 = ptrtoint ptr %devfn.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %devfn.i.i, align 4
  %add.i.i = and i32 %110, 255
  call void @__sanitizer_cov_trace_cmp4(i32 %99, i32 %add.i.i)
  %cmp148.i = icmp ult i32 %99, %add.i.i
  br i1 %cmp148.i, label %for.inc152.i, label %for.cond141.preheader.i.if.end160.i_crit_edge

for.cond141.preheader.i.if.end160.i_crit_edge:    ; preds = %for.cond141.preheader.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end160.i

for.inc152.i:                                     ; preds = %for.cond141.preheader.i
  %add146.1.i = add i32 %101, %99
  call void @__sanitizer_cov_trace_cmp4(i32 %add146.1.i, i32 %add.i.i)
  %cmp148.1.i = icmp ult i32 %add146.1.i, %add.i.i
  br i1 %cmp148.1.i, label %for.inc152.1.i, label %for.inc152.i.if.end160.i_crit_edge

for.inc152.i.if.end160.i_crit_edge:               ; preds = %for.inc152.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end160.i

for.inc152.1.i:                                   ; preds = %for.inc152.i
  %add146.2.i = add i32 %add146.1.i, %97
  call void @__sanitizer_cov_trace_cmp4(i32 %add146.2.i, i32 %add.i.i)
  %cmp148.2.i = icmp ult i32 %add146.2.i, %add.i.i
  br i1 %cmp148.2.i, label %for.inc152.1.i.err_release_regions.i_crit_edge, label %for.inc152.1.i.if.end160.i_crit_edge

for.inc152.1.i.if.end160.i_crit_edge:             ; preds = %for.inc152.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end160.i

for.inc152.1.i.err_release_regions.i_crit_edge:   ; preds = %for.inc152.1.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_release_regions.i

if.end160.i:                                      ; preds = %for.inc152.1.i.if.end160.i_crit_edge, %for.inc152.i.if.end160.i_crit_edge, %for.cond141.preheader.i.if.end160.i_crit_edge
  %vfs_offset.0304.lcssa.i = phi i32 [ 0, %for.cond141.preheader.i.if.end160.i_crit_edge ], [ %99, %for.inc152.i.if.end160.i_crit_edge ], [ %add146.1.i, %for.inc152.1.i.if.end160.i_crit_edge ]
  %i.3303.lcssa.i = phi i32 [ 0, %for.cond141.preheader.i.if.end160.i_crit_edge ], [ 1, %for.inc152.i.if.end160.i_crit_edge ], [ 2, %for.inc152.1.i.if.end160.i_crit_edge ]
  %sub162.i = sub i32 %add.i.i, %vfs_offset.0304.lcssa.i
  %arrayidx163.i = getelementptr [3 x i32], ptr %prb_vf.i, i32 0, i32 %i.3303.lcssa.i
  %111 = ptrtoint ptr %arrayidx163.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %arrayidx163.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub162.i, i32 %112)
  %cmp164.i = icmp ugt i32 %sub162.i, %112
  br i1 %cmp164.i, label %do.end169.i, label %if.end160.i.if.end174.i_crit_edge

if.end160.i.if.end174.i_crit_edge:                ; preds = %if.end160.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end174.i

do.end169.i:                                      ; preds = %if.end160.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev12, ptr noundef nonnull @.str.561, i32 noundef %add.i.i) #20
  br label %err_release_regions.i

if.end174.i:                                      ; preds = %if.end160.i.if.end174.i_crit_edge, %dma_set_max_seg_size.exit.i.if.end174.i_crit_edge
  %call176.i = tail call i32 @mlx4_crdump_init(ptr noundef %call17) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call176.i)
  %tobool177.not.i = icmp eq i32 %call176.i, 0
  br i1 %tobool177.not.i, label %if.end179.i, label %if.end174.i.err_release_regions.i_crit_edge

if.end174.i.err_release_regions.i_crit_edge:      ; preds = %if.end174.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_release_regions.i

if.end179.i:                                      ; preds = %if.end174.i
  %call181.i = tail call i32 @mlx4_catas_init(ptr noundef %call17) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call181.i)
  %tobool182.not.i = icmp eq i32 %call181.i, 0
  br i1 %tobool182.not.i, label %if.end184.i, label %if.end179.i.err_crdump.i_crit_edge

if.end179.i.err_crdump.i_crit_edge:               ; preds = %if.end179.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_crdump.i

if.end184.i:                                      ; preds = %if.end179.i
  %call185.i = call fastcc i32 @mlx4_load_one(ptr noundef %pdev, i32 noundef %21, i32 noundef %total_vfs.0.lcssa.i, ptr noundef nonnull %nvfs.i, ptr noundef %call17, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call185.i)
  %tobool186.not.i = icmp eq i32 %call185.i, 0
  br i1 %tobool186.not.i, label %if.end49, label %err_catas.i

err_catas.i:                                      ; preds = %if.end184.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mlx4_catas_end(ptr noundef %call17) #17
  br label %err_crdump.i

err_crdump.i:                                     ; preds = %err_catas.i, %if.end179.i.err_crdump.i_crit_edge
  %err.2.i = phi i32 [ %call181.i, %if.end179.i.err_crdump.i_crit_edge ], [ %call185.i, %err_catas.i ]
  tail call void @mlx4_crdump_end(ptr noundef %call17) #17
  br label %err_release_regions.i

err_release_regions.i:                            ; preds = %err_crdump.i, %if.end174.i.err_release_regions.i_crit_edge, %do.end169.i, %for.inc152.1.i.err_release_regions.i_crit_edge, %do.end130.i
  %err.3.i = phi i32 [ %call.i275.i, %do.end130.i ], [ %call176.i, %if.end174.i.err_release_regions.i_crit_edge ], [ %err.2.i, %err_crdump.i ], [ -19, %do.end169.i ], [ -19, %for.inc152.1.i.err_release_regions.i_crit_edge ]
  tail call void @pci_release_regions(ptr noundef %pdev) #17
  br label %err_disable_pdev.i

err_disable_pdev.i:                               ; preds = %err_release_regions.i, %do.end113.i, %do.end105.i, %do.end91.i, %do.end74.i, %do.end59.i, %do.end48.i, %do.end17.i
  %err.4.i = phi i32 [ -22, %do.end17.i ], [ -22, %do.end48.i ], [ -22, %do.end59.i ], [ -22, %do.end74.i ], [ %call108.i, %do.end113.i ], [ %err.3.i, %err_release_regions.i ], [ -19, %do.end105.i ], [ -19, %do.end91.i ]
  %113 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %call17, align 8
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %114, align 4
  %pci_status_mutex.i286.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %114, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %pci_status_mutex.i286.i, i32 noundef 0) #17
  %117 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %call17, align 8
  %pci_status.i287.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %118, i32 0, i32 13
  %119 = ptrtoint ptr %pci_status.i287.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %pci_status.i287.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %120)
  %cmp.i288.i = icmp eq i32 %120, 1
  br i1 %cmp.i288.i, label %if.then.i289.i, label %err_disable_pdev.i.mlx4_pci_disable_device.exit.i_crit_edge

err_disable_pdev.i.mlx4_pci_disable_device.exit.i_crit_edge: ; preds = %err_disable_pdev.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_pci_disable_device.exit.i

if.then.i289.i:                                   ; preds = %err_disable_pdev.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_disable_device(ptr noundef %116) #17
  %121 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %call17, align 8
  %pci_status5.i.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %122, i32 0, i32 13
  %123 = ptrtoint ptr %pci_status5.i.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store i32 0, ptr %pci_status5.i.i, align 4
  br label %mlx4_pci_disable_device.exit.i

mlx4_pci_disable_device.exit.i:                   ; preds = %if.then.i289.i, %err_disable_pdev.i.mlx4_pci_disable_device.exit.i_crit_edge
  %124 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %call17, align 8
  %pci_status_mutex7.i.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %125, i32 0, i32 12
  tail call void @mutex_unlock(ptr noundef %pci_status_mutex7.i.i) #17
  br label %err_params_unregister

if.end49:                                         ; preds = %if.end184.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %param_map.i) #17
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %prb_vf.i) #17
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %nvfs.i) #17
  %call50 = tail call i32 @pci_save_state(ptr noundef %pdev) #17
  tail call void @devlink_set_features(ptr noundef nonnull %call.i, i64 noundef 1) #17
  tail call void @devlink_register(ptr noundef nonnull %call.i) #17
  br label %cleanup

err_params_unregister:                            ; preds = %mlx4_pci_disable_device.exit.i, %do.end5.i
  %retval.0.i.ph = phi i32 [ %err.4.i, %mlx4_pci_disable_device.exit.i ], [ %err.0.i.i, %do.end5.i ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %param_map.i) #17
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %prb_vf.i) #17
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %nvfs.i) #17
  tail call void @devlink_params_unregister(ptr noundef nonnull %call.i, ptr noundef nonnull @mlx4_devlink_params, i32 noundef 5) #17
  br label %err_devlink_unregister

err_devlink_unregister:                           ; preds = %err_params_unregister, %if.end23.err_devlink_unregister_crit_edge
  %ret.0 = phi i32 [ %call41, %if.end23.err_devlink_unregister_crit_edge ], [ %retval.0.i.ph, %err_params_unregister ]
  %126 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %call17, align 8
  tail call void @kfree(ptr noundef %127) #17
  br label %err_devlink_free

err_devlink_free:                                 ; preds = %err_devlink_unregister, %if.end16.err_devlink_free_crit_edge
  %ret.1 = phi i32 [ %ret.0, %err_devlink_unregister ], [ -12, %if.end16.err_devlink_free_crit_edge ]
  tail call void @devlink_free(ptr noundef nonnull %call.i) #17
  br label %cleanup

cleanup:                                          ; preds = %err_devlink_free, %if.end49, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %err_devlink_free ], [ 0, %if.end49 ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx4_remove_one(ptr noundef %pdev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev1 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  %call3 = tail call ptr @priv_to_devlink(ptr noundef %3) #17
  tail call void @devlink_unregister(ptr noundef %call3) #17
  %flags.i = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %interface_state = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 11
  %6 = ptrtoint ptr %interface_state to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %interface_state, align 4
  %8 = or i8 %7, 4
  store i8 %8, ptr %interface_state, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %interface_state_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %interface_state_mutex, i32 noundef 0) #17
  %interface_state6 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 11
  %9 = ptrtoint ptr %interface_state6 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %interface_state6, align 4
  %11 = or i8 %10, 2
  store i8 %11, ptr %interface_state6, align 4
  tail call void @mutex_unlock(ptr noundef %interface_state_mutex) #17
  %12 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags.i, align 4
  %14 = and i32 %13, 20
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %14)
  %.not = icmp eq i32 %14, 20
  br i1 %.not, label %if.then14, label %if.end.if.end25_crit_edge

if.end.if.end25_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25

if.then14:                                        ; preds = %if.end
  %num_slaves.i = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 2
  %15 = ptrtoint ptr %num_slaves.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %num_slaves.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp12.i = icmp ugt i32 %16, 1
  br i1 %cmp12.i, label %for.body.lr.ph.i, label %if.then14.if.end25_crit_edge

if.then14.if.end25_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25

for.body.lr.ph.i:                                 ; preds = %if.then14
  %master.i = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 10, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %ret.015.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %ret.1.i, %for.inc.i.for.body.i_crit_edge ]
  %i.013.i = phi i32 [ 1, %for.body.lr.ph.i ], [ %inc4.i, %for.inc.i.for.body.i_crit_edge ]
  %17 = ptrtoint ptr %master.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %master.i, align 4
  %active.i = getelementptr %struct.mlx4_slave_state, ptr %18, i32 %i.013.i, i32 3
  %19 = ptrtoint ptr %active.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %active.i, align 1, !range !1168
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i = icmp eq i8 %20, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %land.lhs.true.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %last_cmd.i = getelementptr %struct.mlx4_slave_state, ptr %18, i32 %i.013.i, i32 1
  %21 = ptrtoint ptr %last_cmd.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %last_cmd.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %cmp1.not.i = icmp eq i8 %22, 0
  br i1 %cmp1.not.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %do.end.i

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

do.end.i:                                         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  %23 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %3, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 4
  %dev3.i = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev3.i, ptr noundef nonnull @.str.574, ptr noundef nonnull @.str.575, i32 noundef %i.013.i) #20
  %inc.i = add i32 %ret.015.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %do.end.i, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %ret.1.i = phi i32 [ %inc.i, %do.end.i ], [ %ret.015.i, %land.lhs.true.i.for.inc.i_crit_edge ], [ %ret.015.i, %for.body.i.for.inc.i_crit_edge ]
  %inc4.i = add nuw i32 %i.013.i, 1
  %27 = ptrtoint ptr %num_slaves.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_slaves.i, align 8
  %cmp.i = icmp ult i32 %inc4.i, %28
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %mlx4_how_many_lives_vf.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

mlx4_how_many_lives_vf.exit:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1.i)
  %tobool16.not = icmp eq i32 %ret.1.i, 0
  br i1 %tobool16.not, label %mlx4_how_many_lives_vf.exit.if.end25_crit_edge, label %do.end

mlx4_how_many_lives_vf.exit.if.end25_crit_edge:   ; preds = %mlx4_how_many_lives_vf.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25

do.end:                                           ; preds = %mlx4_how_many_lives_vf.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.563) #20
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.566) #20
  br label %if.end25

if.end25:                                         ; preds = %do.end, %mlx4_how_many_lives_vf.exit.if.end25_crit_edge, %if.then14.if.end25_crit_edge, %if.end.if.end25_crit_edge
  %tobool42.not = phi i1 [ false, %mlx4_how_many_lives_vf.exit.if.end25_crit_edge ], [ true, %do.end ], [ false, %if.end.if.end25_crit_edge ], [ false, %if.then14.if.end25_crit_edge ]
  %29 = ptrtoint ptr %interface_state6 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %interface_state6, align 4
  %31 = and i8 %30, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool29.not = icmp eq i8 %31, 0
  br i1 %tobool29.not, label %do.end33, label %if.then30

if.then30:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mlx4_unload_one(ptr noundef %pdev)
  br label %if.end37

do.end33:                                         ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #19
  %32 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %3, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 4
  %dev36 = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev36, ptr noundef nonnull @.str.569, ptr noundef nonnull @.str.564) #20
  br label %if.end37

if.end37:                                         ; preds = %do.end33, %if.then30
  tail call void @mlx4_catas_end(ptr noundef %3) #17
  tail call void @mlx4_crdump_end(ptr noundef %3) #17
  %36 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags.i, align 4
  %and39 = and i32 %37, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39)
  %tobool40.not = icmp eq i32 %and39, 0
  %brmerge = or i1 %tobool42.not, %tobool40.not
  br i1 %brmerge, label %if.end37.if.end50_crit_edge, label %do.end46

if.end37.if.end50_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end50

do.end46:                                         ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #19
  %38 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %3, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %dev49 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev49, ptr noundef nonnull @.str.572) #20
  tail call void @pci_disable_sriov(ptr noundef %pdev) #17
  br label %if.end50

if.end50:                                         ; preds = %do.end46, %if.end37.if.end50_crit_edge
  tail call void @pci_release_regions(ptr noundef %pdev) #17
  %42 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %3, align 8
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 4
  %pci_status_mutex.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %43, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %pci_status_mutex.i, i32 noundef 0) #17
  %46 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %3, align 8
  %pci_status.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %47, i32 0, i32 13
  %48 = ptrtoint ptr %pci_status.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %pci_status.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %49)
  %cmp.i76 = icmp eq i32 %49, 1
  br i1 %cmp.i76, label %if.then.i, label %if.end50.mlx4_pci_disable_device.exit_crit_edge

if.end50.mlx4_pci_disable_device.exit_crit_edge:  ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_pci_disable_device.exit

if.then.i:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_disable_device(ptr noundef %45) #17
  %50 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %3, align 8
  %pci_status5.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %51, i32 0, i32 13
  %52 = ptrtoint ptr %pci_status5.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 0, ptr %pci_status5.i, align 4
  br label %mlx4_pci_disable_device.exit

mlx4_pci_disable_device.exit:                     ; preds = %if.then.i, %if.end50.mlx4_pci_disable_device.exit_crit_edge
  %53 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %3, align 8
  %pci_status_mutex7.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %54, i32 0, i32 12
  tail call void @mutex_unlock(ptr noundef %pci_status_mutex7.i) #17
  tail call void @devlink_params_unregister(ptr noundef %call3, ptr noundef nonnull @mlx4_devlink_params, i32 noundef 5) #17
  %55 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %3, align 8
  tail call void @kfree(ptr noundef %56) #17
  tail call void @devlink_free(ptr noundef %call3) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx4_shutdown(ptr noundef %pdev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev1 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev5, ptr noundef nonnull @.str.576) #20
  %interface_state_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %interface_state_mutex, i32 noundef 0) #17
  %interface_state = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %interface_state to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %interface_state, align 4
  %10 = and i8 %9, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not = icmp eq i8 %10, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mlx4_unload_one(ptr noundef %pdev)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %interface_state_mutex) #17
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %3, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %pci_status_mutex.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %12, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %pci_status_mutex.i, i32 noundef 0) #17
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %3, align 8
  %pci_status.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %16, i32 0, i32 13
  %17 = ptrtoint ptr %pci_status.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %pci_status.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %18)
  %cmp.i = icmp eq i32 %18, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.mlx4_pci_disable_device.exit_crit_edge

if.end.mlx4_pci_disable_device.exit_crit_edge:    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_pci_disable_device.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_disable_device(ptr noundef %14) #17
  %19 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %3, align 8
  %pci_status5.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %20, i32 0, i32 13
  %21 = ptrtoint ptr %pci_status5.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %pci_status5.i, align 4
  br label %mlx4_pci_disable_device.exit

mlx4_pci_disable_device.exit:                     ; preds = %if.then.i, %if.end.mlx4_pci_disable_device.exit_crit_edge
  %22 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %3, align 8
  %pci_status_mutex7.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %23, i32 0, i32 12
  tail call void @mutex_unlock(ptr noundef %pci_status_mutex7.i) #17
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_params_register(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_save_state(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @devlink_set_features(ptr noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @devlink_register(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @devlink_params_unregister(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @devlink_free(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devlink_alloc_ns(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_devlink_reload_down(ptr noundef %devlink, i1 noundef zeroext %netns_change, i32 noundef %action, i32 noundef %limit, ptr noundef writeonly %extack) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @devlink_priv(ptr noundef %devlink) #17
  %0 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %call, align 8
  br i1 %netns_change, label %do.body, label %if.end5

do.body:                                          ; preds = %entry
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @mlx4_devlink_reload_down.__msg) #17
  %tobool3.not = icmp eq ptr %extack, null
  br i1 %tobool3.not, label %do.body.cleanup_crit_edge, label %if.then4

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then4:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %2 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @mlx4_devlink_reload_down.__msg, ptr %extack, align 4
  br label %cleanup

if.end5:                                          ; preds = %entry
  %num_vfs = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 3
  %3 = ptrtoint ptr %num_vfs to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_vfs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool6.not = icmp eq i32 %4, 0
  br i1 %tobool6.not, label %if.end5.if.end14_crit_edge, label %do.end10

if.end5.if.end14_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

do.end10:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %dev11 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %dev11 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev11, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %dev13 = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev13, ptr noundef nonnull @.str.519) #20
  br label %if.end14

if.end14:                                         ; preds = %do.end10, %if.end5.if.end14_crit_edge
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %1, align 4
  tail call fastcc void @mlx4_unload_one(ptr noundef %12) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then4, %do.body.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end14 ], [ -95, %if.then4 ], [ -95, %do.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_devlink_reload_up(ptr noundef %devlink, i32 noundef %action, i32 noundef %limit, ptr nocapture noundef writeonly %actions_performed, ptr nocapture noundef readnone %extack) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @devlink_priv(ptr noundef %devlink) #17
  %0 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %call, align 8
  %2 = ptrtoint ptr %actions_performed to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2, ptr %actions_performed, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 4
  %call3 = tail call fastcc i32 @mlx4_restart_one_up(ptr noundef %4, i1 noundef zeroext true, ptr noundef %devlink)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %dev4 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %dev4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev4, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %dev7 = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev7, ptr noundef nonnull @.str.521, i32 noundef %call3) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_devlink_port_type_set(ptr nocapture noundef %devlink_port, i32 noundef %port_type) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %switch.tableidx = add i32 %port_type, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %0 = icmp ult i32 %switch.tableidx, 3
  br i1 %0, label %switch.lookup, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr = getelementptr i8, ptr %devlink_port, i32 -5656
  %switch.offset = sub i32 4, %port_type
  %call = tail call fastcc i32 @__set_port_type(ptr noundef %add.ptr, i32 noundef %switch.offset)
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %switch.lookup ], [ -95, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_trace_netlink_extack(ptr noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mlx4_devlink_ierr_reset_get(ptr nocapture noundef readnone %devlink, i32 noundef %id, ptr nocapture noundef writeonly %ctx) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mlx4_internal_err_reset to i32))
  %0 = load i32, ptr @mlx4_internal_err_reset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool = icmp ne i32 %0, 0
  %frombool = zext i1 %tobool to i8
  %1 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 %frombool, ptr %ctx, align 4
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mlx4_devlink_ierr_reset_set(ptr nocapture noundef readnone %devlink, i32 noundef %id, ptr nocapture noundef readonly %ctx) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ctx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %ctx, align 4, !range !1168
  %2 = zext i8 %1 to i32
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @mlx4_internal_err_reset to i32))
  store i32 %2, ptr @mlx4_internal_err_reset, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_devlink_max_macs_validate(ptr nocapture noundef readnone %devlink, i32 noundef %id, [8 x i32] %val.coerce, ptr noundef writeonly %extack) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %val.coerce.fca.0.extract = extractvalue [8 x i32] %val.coerce, 0
  %0 = add i32 %val.coerce.fca.0.extract, -129
  call void @__sanitizer_cov_trace_const_cmp4(i32 -128, i32 %0)
  %1 = icmp ult i32 %0, -128
  br i1 %1, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = tail call i32 @llvm.ctpop.i32(i32 %val.coerce.fca.0.extract) #17, !range !1175
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %cmp1.i = icmp ult i32 %2, 2
  br i1 %cmp1.i, label %if.end.cleanup_crit_edge, label %do.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body:                                          ; preds = %if.end
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @mlx4_devlink_max_macs_validate.__msg) #17
  %tobool.not = icmp eq ptr %extack, null
  br i1 %tobool.not, label %do.body.cleanup_crit_edge, label %if.then3

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then3:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %3 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @mlx4_devlink_max_macs_validate.__msg, ptr %extack, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %do.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -34, %entry.cleanup_crit_edge ], [ -22, %if.then3 ], [ -22, %do.body.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_devlink_crdump_snapshot_get(ptr noundef %devlink, i32 noundef %id, ptr nocapture noundef writeonly %ctx) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @devlink_priv(ptr noundef %devlink) #17
  %0 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %call, align 8
  %crdump = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %crdump to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %crdump, align 4, !range !1168
  %4 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %3, ptr %ctx, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_devlink_crdump_snapshot_set(ptr noundef %devlink, i32 noundef %id, ptr nocapture noundef readonly %ctx) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @devlink_priv(ptr noundef %devlink) #17
  %0 = ptrtoint ptr %ctx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %ctx, align 4, !range !1168
  %2 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %call, align 8
  %crdump = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %crdump to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %1, ptr %crdump, align 4
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_param_driverinit_value_set(ptr noundef, i32 noundef, [8 x i32]) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_request_regions(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_set_master(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_crdump_init(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx4_catas_init(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_catas_end(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_crdump_end(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_release_regions(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_mask(ptr noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_coherent_mask(ptr noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_device(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @devlink_unregister(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_pci_err_detected(ptr noundef %pdev, i32 noundef %state) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %dev3 = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev3, ptr noundef nonnull @.str.578) #20
  tail call void @mlx4_enter_error_state(ptr noundef %1) #17
  %interface_state_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %interface_state_mutex, i32 noundef 0) #17
  %interface_state = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %interface_state to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %interface_state, align 4
  %10 = and i8 %9, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not = icmp eq i8 %10, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mlx4_unload_one(ptr noundef %pdev)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %interface_state_mutex) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %state)
  %cmp = icmp eq i32 %state, 3
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %11 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %pci_status_mutex.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %14, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %pci_status_mutex.i, i32 noundef 0) #17
  %17 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %12, align 8
  %pci_status.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %18, i32 0, i32 13
  %19 = ptrtoint ptr %pci_status.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pci_status.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp.i = icmp eq i32 %20, 1
  br i1 %cmp.i, label %if.then.i, label %if.end7.mlx4_pci_disable_device.exit_crit_edge

if.end7.mlx4_pci_disable_device.exit_crit_edge:   ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_pci_disable_device.exit

if.then.i:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_disable_device(ptr noundef %16) #17
  %21 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %12, align 8
  %pci_status5.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %22, i32 0, i32 13
  %23 = ptrtoint ptr %pci_status5.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %pci_status5.i, align 4
  br label %mlx4_pci_disable_device.exit

mlx4_pci_disable_device.exit:                     ; preds = %if.then.i, %if.end7.mlx4_pci_disable_device.exit_crit_edge
  %24 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %12, align 8
  %pci_status_mutex7.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %25, i32 0, i32 12
  tail call void @mutex_unlock(ptr noundef %pci_status_mutex7.i) #17
  br label %cleanup

cleanup:                                          ; preds = %mlx4_pci_disable_device.exit, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 3, %mlx4_pci_disable_device.exit ], [ 4, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_pci_slot_reset(ptr noundef %pdev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev1 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %dev4 = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev4, ptr noundef nonnull @.str.580) #20
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %pci_status_mutex.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %9, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %pci_status_mutex.i, i32 noundef 0) #17
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %3, align 8
  %pci_status.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %13, i32 0, i32 13
  %14 = ptrtoint ptr %pci_status.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pci_status.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp.i = icmp eq i32 %15, 0
  br i1 %cmp.i, label %if.then.i, label %entry.mlx4_pci_enable_device.exit_crit_edge

entry.mlx4_pci_enable_device.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_pci_enable_device.exit

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @pci_enable_device(ptr noundef %11) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then4.i, label %if.then.i.mlx4_pci_enable_device.exit_crit_edge

if.then.i.mlx4_pci_enable_device.exit_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mlx4_pci_enable_device.exit

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %16 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %3, align 8
  %pci_status6.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %17, i32 0, i32 13
  %18 = ptrtoint ptr %pci_status6.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %pci_status6.i, align 4
  br label %mlx4_pci_enable_device.exit

mlx4_pci_enable_device.exit:                      ; preds = %if.then4.i, %if.then.i.mlx4_pci_enable_device.exit_crit_edge, %entry.mlx4_pci_enable_device.exit_crit_edge
  %err.0.i = phi i32 [ %call.i, %if.then.i.mlx4_pci_enable_device.exit_crit_edge ], [ 0, %if.then4.i ], [ 0, %entry.mlx4_pci_enable_device.exit_crit_edge ]
  %19 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %3, align 8
  %pci_status_mutex9.i = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %20, i32 0, i32 12
  tail call void @mutex_unlock(ptr noundef %pci_status_mutex9.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0.i)
  %tobool.not = icmp eq i32 %err.0.i, 0
  br i1 %tobool.not, label %if.end, label %do.end8

do.end8:                                          ; preds = %mlx4_pci_enable_device.exit
  call void @__sanitizer_cov_trace_pc() #19
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %3, align 8
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %dev11 = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev11, ptr noundef nonnull @.str.583, i32 noundef %err.0.i) #20
  br label %cleanup

if.end:                                           ; preds = %mlx4_pci_enable_device.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @pci_set_master(ptr noundef %pdev) #17
  tail call void @pci_restore_state(ptr noundef %pdev) #17
  %call12 = tail call i32 @pci_save_state(ptr noundef %pdev) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end8
  %retval.0 = phi i32 [ 4, %do.end8 ], [ 5, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx4_pci_resume(ptr noundef %pdev) #1 align 64 {
entry:
  %nvfs = alloca [3 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev1 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %nvfs) #17
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.585, ptr noundef nonnull @.str.586) #20
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 8
  %num_vfs = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %num_vfs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_vfs, align 4
  %nvfs8 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %9, i32 0, i32 2
  %12 = call ptr @memcpy(ptr %nvfs, ptr %nvfs8, i32 12)
  %interface_state_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %interface_state_mutex, i32 noundef 0) #17
  %interface_state = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 11
  %13 = ptrtoint ptr %interface_state to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %interface_state, align 4
  %15 = and i8 %14, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not = icmp eq i8 %15, 0
  br i1 %tobool.not, label %if.then, label %entry.end_crit_edge

entry.end_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %end

if.then:                                          ; preds = %entry
  %pci_dev_data = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 4
  %16 = ptrtoint ptr %pci_dev_data to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pci_dev_data, align 4
  %call11 = call fastcc i32 @mlx4_load_one(ptr noundef %pdev, i32 noundef %17, i32 noundef %11, ptr noundef nonnull %nvfs, ptr noundef %3, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  %18 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %3, align 8
  br i1 %tobool12.not, label %if.end, label %do.end16

do.end16:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev19, ptr noundef nonnull @.str.588, ptr noundef nonnull @.str.586, i32 noundef %call11) #20
  br label %end

if.end:                                           ; preds = %if.then
  %curr_port_type = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %19, i32 0, i32 4
  %curr_port_poss_type = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %19, i32 0, i32 5
  tail call void @mlx4_stop_sense(ptr noundef %3) #17
  %port_mutex.i = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 28
  tail call void @mutex_lock_nested(ptr noundef %port_mutex.i, i32 noundef 0) #17
  %num_ports.i = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 2
  %22 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp14.i = icmp sgt i32 %23, 0
  br i1 %cmp14.i, label %if.end.for.body.i_crit_edge, label %if.end.restore_current_port_types.exit_crit_edge

if.end.restore_current_port_types.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %restore_current_port_types.exit

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %i.015.i = phi i32 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr i32, ptr %curr_port_poss_type, i32 %i.015.i
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i, align 4
  %add.i = add nuw nsw i32 %i.015.i, 1
  %arrayidx2.i = getelementptr %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 78, i32 %add.i
  %26 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx2.i, align 4
  %27 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_ports.i, align 4
  %cmp.i = icmp slt i32 %add.i, %28
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.restore_current_port_types.exit_crit_edge

for.body.i.restore_current_port_types.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %restore_current_port_types.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

restore_current_port_types.exit:                  ; preds = %for.body.i.restore_current_port_types.exit_crit_edge, %if.end.restore_current_port_types.exit_crit_edge
  %call3.i = tail call i32 @mlx4_change_port_types(ptr noundef %3, ptr noundef %curr_port_type) #17
  tail call void @mlx4_start_sense(ptr noundef %3) #17
  tail call void @mutex_unlock(ptr noundef %port_mutex.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool25.not = icmp eq i32 %call3.i, 0
  br i1 %tobool25.not, label %restore_current_port_types.exit.end_crit_edge, label %do.end29

restore_current_port_types.exit.end_crit_edge:    ; preds = %restore_current_port_types.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %end

do.end29:                                         ; preds = %restore_current_port_types.exit
  call void @__sanitizer_cov_trace_pc() #19
  %29 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %3, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 4
  %dev32 = getelementptr inbounds %struct.pci_dev, ptr %32, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev32, ptr noundef nonnull @.str.66, i32 noundef %call3.i) #20
  br label %end

end:                                              ; preds = %do.end29, %restore_current_port_types.exit.end_crit_edge, %do.end16, %entry.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %interface_state_mutex) #17
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %nvfs) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx4_enter_error_state(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_state(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_suspend(ptr noundef %dev_d) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr i8, ptr %dev_d, i32 164
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev1 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %dev4 = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev4, ptr noundef nonnull @.str.592) #20
  %interface_state_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %interface_state_mutex, i32 noundef 0) #17
  %interface_state = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %interface_state to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %interface_state, align 4
  %10 = and i8 %9, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not = icmp eq i8 %10, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr = getelementptr i8, ptr %dev_d, i32 -136
  tail call fastcc void @mlx4_unload_one(ptr noundef %add.ptr)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %interface_state_mutex) #17
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx4_resume(ptr noundef %dev_d) #1 align 64 {
entry:
  %nvfs = alloca [3 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr i8, ptr %dev_d, i32 164
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %dev1 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev1, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %nvfs) #17
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.594) #20
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 8
  %num_vfs = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %num_vfs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_vfs, align 4
  %nvfs8 = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %9, i32 0, i32 2
  %12 = call ptr @memcpy(ptr %nvfs, ptr %nvfs8, i32 12)
  %interface_state_mutex = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %interface_state_mutex, i32 noundef 0) #17
  %interface_state = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %1, i32 0, i32 11
  %13 = ptrtoint ptr %interface_state to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %interface_state, align 4
  %15 = and i8 %14, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not = icmp eq i8 %15, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end28_crit_edge

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28

if.then:                                          ; preds = %entry
  %add.ptr = getelementptr i8, ptr %dev_d, i32 -136
  %pci_dev_data = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 4
  %16 = ptrtoint ptr %pci_dev_data to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pci_dev_data, align 4
  %call11 = call fastcc i32 @mlx4_load_one(ptr noundef %add.ptr, i32 noundef %17, i32 noundef %11, ptr noundef nonnull %nvfs, ptr noundef %3, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.then13, label %if.then.if.end28_crit_edge

if.then.if.end28_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28

if.then13:                                        ; preds = %if.then
  %18 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %3, align 8
  %curr_port_type = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %19, i32 0, i32 4
  %curr_port_poss_type = getelementptr inbounds %struct.mlx4_dev_persistent, ptr %19, i32 0, i32 5
  tail call void @mlx4_stop_sense(ptr noundef %3) #17
  %port_mutex.i = getelementptr inbounds %struct.mlx4_priv, ptr %3, i32 0, i32 28
  tail call void @mutex_lock_nested(ptr noundef %port_mutex.i, i32 noundef 0) #17
  %num_ports.i = getelementptr inbounds %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 2
  %20 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp14.i = icmp sgt i32 %21, 0
  br i1 %cmp14.i, label %if.then13.for.body.i_crit_edge, label %if.then13.restore_current_port_types.exit_crit_edge

if.then13.restore_current_port_types.exit_crit_edge: ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #19
  br label %restore_current_port_types.exit

if.then13.for.body.i_crit_edge:                   ; preds = %if.then13
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then13.for.body.i_crit_edge
  %i.015.i = phi i32 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.then13.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr i32, ptr %curr_port_poss_type, i32 %i.015.i
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.i, align 4
  %add.i = add nuw nsw i32 %i.015.i, 1
  %arrayidx2.i = getelementptr %struct.mlx4_dev, ptr %3, i32 0, i32 3, i32 78, i32 %add.i
  %24 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx2.i, align 4
  %25 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %num_ports.i, align 4
  %cmp.i = icmp slt i32 %add.i, %26
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.restore_current_port_types.exit_crit_edge

for.body.i.restore_current_port_types.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %restore_current_port_types.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

restore_current_port_types.exit:                  ; preds = %for.body.i.restore_current_port_types.exit_crit_edge, %if.then13.restore_current_port_types.exit_crit_edge
  %call3.i = tail call i32 @mlx4_change_port_types(ptr noundef %3, ptr noundef %curr_port_type) #17
  tail call void @mlx4_start_sense(ptr noundef %3) #17
  tail call void @mutex_unlock(ptr noundef %port_mutex.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool19.not = icmp eq i32 %call3.i, 0
  br i1 %tobool19.not, label %restore_current_port_types.exit.if.end28_crit_edge, label %do.end23

restore_current_port_types.exit.if.end28_crit_edge: ; preds = %restore_current_port_types.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28

do.end23:                                         ; preds = %restore_current_port_types.exit
  call void @__sanitizer_cov_trace_pc() #19
  %27 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %3, align 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %dev26 = getelementptr inbounds %struct.pci_dev, ptr %30, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev26, ptr noundef nonnull @.str.597, i32 noundef %call3.i) #20
  br label %if.end28

if.end28:                                         ; preds = %do.end23, %restore_current_port_types.exit.if.end28_crit_edge, %if.then.if.end28_crit_edge, %entry.if.end28_crit_edge
  %ret.0 = phi i32 [ 0, %entry.if.end28_crit_edge ], [ %call11, %if.then.if.end28_crit_edge ], [ %call3.i, %do.end23 ], [ 0, %restore_current_port_types.exit.if.end28_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %interface_state_mutex) #17
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %nvfs) #17
  ret i32 %ret.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx4_verify_params() unnamed_addr #8 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @msi_x, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.600, i32 noundef %0) #20
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, ptr @log_num_mac, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %1)
  %2 = icmp ugt i32 %1, 7
  br i1 %2, label %do.end5, label %if.end8

do.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.603, i32 noundef %1) #20
  br label %return

if.end8:                                          ; preds = %if.end
  %3 = load i32, ptr @log_num_vlan, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp9.not = icmp eq i32 %3, 0
  br i1 %cmp9.not, label %if.end8.if.end15_crit_edge, label %do.end12

if.end8.if.end15_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15

do.end12:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.606, i32 noundef 7) #20
  br label %if.end15

if.end15:                                         ; preds = %do.end12, %if.end8.if.end15_crit_edge
  %4 = load i8, ptr @use_prio, align 1, !range !1168
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.end15.if.end23_crit_edge, label %do.end20

if.end15.if.end23_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end23

do.end20:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.609) #20
  br label %if.end23

if.end23:                                         ; preds = %do.end20, %if.end15.if.end23_crit_edge
  %5 = load i32, ptr @log_mtts_per_seg, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %5)
  %6 = icmp ugt i32 %5, 7
  br i1 %6, label %do.end31, label %if.end34

do.end31:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  %call33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.612, i32 noundef %5) #20
  br label %return

if.end34:                                         ; preds = %if.end23
  %7 = load i32, ptr @port_type_array, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp35 = icmp eq i32 %7, 0
  br i1 %cmp35, label %land.lhs.true, label %if.end34.if.end44_crit_edge

if.end34.if.end44_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44

land.lhs.true:                                    ; preds = %if.end34
  %8 = load i32, ptr getelementptr inbounds ([2 x i32], ptr @port_type_array, i32 0, i32 1), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp37 = icmp eq i32 %8, 1
  br i1 %cmp37, label %do.end41, label %land.lhs.true.if.end44_crit_edge

land.lhs.true.if.end44_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44

do.end41:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %call43 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.615) #20
  store i32 1, ptr @port_type_array, align 4
  br label %if.end44

if.end44:                                         ; preds = %do.end41, %land.lhs.true.if.end44_crit_edge, %if.end34.if.end44_crit_edge
  %9 = load i32, ptr @mlx4_log_num_mgm_entry_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -7, i32 %9)
  %cmp45 = icmp slt i32 %9, -7
  br i1 %cmp45, label %if.end44.do.end58_crit_edge, label %lor.lhs.false47

if.end44.do.end58_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end58

lor.lhs.false47:                                  ; preds = %if.end44
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp48 = icmp sgt i32 %9, 0
  %10 = add nsw i32 %9, -13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -6, i32 %10)
  %11 = icmp ult i32 %10, -6
  %or.cond = and i1 %cmp48, %11
  br i1 %or.cond, label %lor.lhs.false47.do.end58_crit_edge, label %lor.lhs.false47.return_crit_edge

lor.lhs.false47.return_crit_edge:                 ; preds = %lor.lhs.false47
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

lor.lhs.false47.do.end58_crit_edge:               ; preds = %lor.lhs.false47
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end58

do.end58:                                         ; preds = %lor.lhs.false47.do.end58_crit_edge, %if.end44.do.end58_crit_edge
  %call60 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.618, i32 noundef %9, i32 noundef 7, i32 noundef 12) #20
  br label %return

return:                                           ; preds = %do.end58, %lor.lhs.false47.return_crit_edge, %do.end31, %do.end5, %do.end
  %retval.0 = phi i32 [ -1, %do.end ], [ -1, %do.end5 ], [ -1, %do.end31 ], [ -1, %do.end58 ], [ 0, %lor.lhs.false47.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pci_register_driver(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind willreturn
declare ptr @strcpy(ptr noalias returned writeonly, ptr noalias nocapture readonly) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #9

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #17

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #18 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 542)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #18 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 542)
  ret void
}

attributes #0 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #13 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn }
attributes #17 = { nounwind }
attributes #18 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #19 = { nomerge }
attributes #20 = { cold nounwind }
attributes #21 = { cold }
attributes #22 = { nounwind allocsize(2) }
attributes #23 = { nounwind allocsize(0) }
attributes #24 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !9, !10, !11, !12, !13, !15, !16, !18, !20, !21, !23, !25, !26, !28, !30, !31, !33, !35, !36, !38, !40, !41, !43, !45, !46, !48, !50, !51, !53, !55, !56, !58, !60, !61, !63, !65, !67, !68, !70, !72, !73, !75, !77, !78, !79, !80, !81, !82, !83, !85, !86, !87, !89, !91, !93, !95, !97, !99, !101, !102, !103, !104, !106, !107, !108, !110, !111, !112, !113, !115, !116, !117, !119, !120, !121, !122, !124, !126, !127, !128, !129, !131, !132, !133, !134, !136, !137, !138, !140, !142, !143, !144, !145, !147, !148, !149, !151, !153, !155, !156, !157, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !178, !180, !182, !184, !185, !186, !188, !189, !190, !192, !194, !195, !196, !198, !200, !201, !203, !204, !206, !207, !208, !210, !211, !212, !213, !214, !215, !217, !219, !221, !223, !225, !226, !227, !228, !230, !231, !232, !234, !235, !236, !238, !239, !240, !241, !243, !244, !245, !247, !248, !249, !251, !252, !253, !254, !256, !257, !258, !259, !261, !262, !263, !264, !266, !267, !268, !270, !271, !273, !274, !276, !277, !279, !280, !282, !283, !285, !286, !288, !289, !290, !291, !293, !294, !295, !297, !298, !300, !301, !302, !304, !305, !306, !308, !309, !310, !312, !313, !314, !316, !317, !318, !320, !321, !322, !324, !325, !326, !328, !329, !331, !332, !333, !335, !336, !338, !339, !340, !342, !343, !344, !346, !347, !349, !350, !351, !353, !354, !355, !357, !358, !359, !361, !362, !363, !364, !365, !367, !368, !369, !371, !372, !373, !375, !376, !377, !379, !380, !381, !382, !384, !385, !386, !388, !389, !390, !392, !393, !394, !395, !397, !398, !399, !400, !402, !403, !404, !406, !407, !408, !410, !411, !412, !414, !415, !416, !418, !419, !420, !422, !423, !424, !425, !427, !428, !429, !431, !432, !433, !435, !436, !437, !439, !440, !441, !443, !444, !445, !447, !448, !449, !451, !452, !453, !455, !456, !457, !459, !460, !461, !463, !464, !465, !467, !468, !469, !471, !472, !473, !475, !476, !477, !479, !480, !481, !483, !484, !485, !487, !488, !489, !491, !492, !493, !495, !496, !497, !499, !500, !501, !503, !504, !505, !507, !508, !509, !511, !512, !513, !515, !516, !517, !519, !520, !521, !523, !524, !525, !527, !528, !529, !531, !532, !533, !534, !536, !537, !538, !539, !541, !542, !543, !545, !546, !547, !548, !550, !551, !552, !554, !555, !556, !558, !560, !562, !564, !566, !567, !568, !569, !570, !571, !573, !575, !577, !578, !579, !580, !582, !583, !584, !586, !587, !588, !590, !591, !592, !594, !595, !596, !598, !599, !600, !602, !603, !604, !606, !607, !608, !610, !611, !612, !614, !615, !616, !618, !619, !620, !622, !623, !624, !626, !627, !628, !630, !631, !632, !634, !635, !636, !638, !639, !640, !642, !643, !644, !645, !647, !648, !649, !650, !651, !653, !654, !655, !656, !658, !660, !662, !664, !666, !668, !670, !671, !672, !673, !675, !676, !677, !679, !680, !681, !683, !684, !685, !687, !688, !689, !691, !692, !693, !695, !696, !697, !698, !700, !701, !702, !703, !705, !706, !707, !709, !710, !711, !713, !714, !716, !717, !718, !720, !721, !722, !724, !725, !727, !728, !729, !731, !732, !733, !735, !736, !737, !739, !740, !742, !743, !744, !746, !747, !748, !750, !751, !752, !754, !755, !756, !758, !759, !760, !761, !762, !764, !765, !766, !767, !769, !770, !771, !773, !774, !775, !777, !778, !779, !780, !782, !784, !785, !786, !787, !789, !790, !792, !793, !794, !795, !797, !798, !799, !801, !802, !803, !805, !806, !807, !809, !810, !811, !813, !814, !815, !817, !818, !819, !821, !822, !823, !825, !826, !827, !829, !830, !831, !833, !834, !835, !837, !838, !839, !841, !842, !843, !845, !846, !847, !849, !850, !851, !853, !854, !855, !857, !858, !859, !861, !862, !863, !865, !866, !867, !869, !870, !871, !873, !874, !875, !877, !878, !880, !881, !882, !883, !885, !886, !887, !889, !890, !891, !893, !895, !897, !898, !899, !900, !902, !904, !906, !907, !908, !910, !911, !912, !914, !916, !918, !920, !921, !922, !923, !925, !926, !927, !929, !930, !931, !933, !935, !937, !939, !941, !943, !944, !945, !946, !948, !949, !950, !952, !953, !955, !956, !957, !959, !961, !963, !965, !966, !967, !968, !969, !971, !972, !974, !975, !977, !978, !980, !982, !984, !986, !987, !988, !989, !991, !992, !993, !994, !996, !998, !1000, !1002, !1004, !1006, !1008, !1010, !1011, !1012, !1013, !1015, !1016, !1017, !1019, !1020, !1021, !1023, !1024, !1025, !1027, !1028, !1029, !1031, !1032, !1033, !1035, !1036, !1037, !1039, !1040, !1041, !1043, !1044, !1045, !1047, !1048, !1049, !1051, !1052, !1053, !1055, !1056, !1057, !1059, !1060, !1061, !1062, !1064, !1065, !1066, !1068, !1069, !1070, !1072, !1073, !1074, !1076, !1077, !1078, !1079, !1081, !1082, !1083, !1084, !1086, !1088, !1089, !1090, !1091, !1093, !1094, !1095, !1096, !1098, !1099, !1100, !1102, !1103, !1104, !1105, !1107, !1108, !1109, !1111, !1112, !1114, !1116, !1117, !1118, !1119, !1121, !1122, !1123, !1124, !1126, !1127, !1128, !1130, !1132, !1133, !1134, !1135, !1137, !1138, !1139, !1141, !1142, !1143, !1145, !1146, !1147, !1149, !1150, !1151, !1153, !1154, !1155, !1157, !1158}
!llvm.module.flags = !{!1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166}
!llvm.ident = !{!1167}

!0 = !{ptr @__UNIQUE_ID_author347, !1, !"__UNIQUE_ID_author347", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 57, i32 1}
!2 = !{ptr @__UNIQUE_ID_description348, !3, !"__UNIQUE_ID_description348", i1 false, i1 false}
!3 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 58, i32 1}
!4 = !{ptr @__UNIQUE_ID_file349, !5, !"__UNIQUE_ID_file349", i1 false, i1 false}
!5 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 59, i32 1}
!6 = !{ptr @__UNIQUE_ID_license350, !5, !"__UNIQUE_ID_license350", i1 false, i1 false}
!7 = !{ptr @__UNIQUE_ID_version351, !8, !"__UNIQUE_ID_version351", i1 false, i1 false}
!8 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 60, i32 1}
!9 = !{ptr @.str, !8, !"<string literal>", i1 false, i1 false}
!10 = !{ptr @.str.1, !8, !"<string literal>", i1 false, i1 false}
!11 = !{ptr @.str.2, !8, !"<string literal>", i1 false, i1 false}
!12 = !{ptr @__modver_attr, !8, !"__modver_attr", i1 false, i1 false}
!13 = !{ptr @__param_debug_level, !14, !"__param_debug_level", i1 false, i1 false}
!14 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 67, i32 1}
!15 = !{ptr @__UNIQUE_ID_debug_leveltype352, !14, !"__UNIQUE_ID_debug_leveltype352", i1 false, i1 false}
!16 = !{ptr @__UNIQUE_ID_debug_level353, !17, !"__UNIQUE_ID_debug_level353", i1 false, i1 false}
!17 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 68, i32 1}
!18 = !{ptr @__param_msi_x, !19, !"__param_msi_x", i1 false, i1 false}
!19 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 75, i32 1}
!20 = !{ptr @__UNIQUE_ID_msi_xtype354, !19, !"__UNIQUE_ID_msi_xtype354", i1 false, i1 false}
!21 = !{ptr @__UNIQUE_ID_msi_x355, !22, !"__UNIQUE_ID_msi_x355", i1 false, i1 false}
!22 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 76, i32 1}
!23 = !{ptr @__param_num_vfs, !24, !"__param_num_vfs", i1 false, i1 false}
!24 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 86, i32 1}
!25 = !{ptr @__UNIQUE_ID_num_vfstype356, !24, !"__UNIQUE_ID_num_vfstype356", i1 false, i1 false}
!26 = !{ptr @__UNIQUE_ID_num_vfs357, !27, !"__UNIQUE_ID_num_vfs357", i1 false, i1 false}
!27 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 87, i32 1}
!28 = !{ptr @__param_probe_vf, !29, !"__param_probe_vf", i1 false, i1 false}
!29 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 92, i32 1}
!30 = !{ptr @__UNIQUE_ID_probe_vftype358, !29, !"__UNIQUE_ID_probe_vftype358", i1 false, i1 false}
!31 = !{ptr @__UNIQUE_ID_probe_vf359, !32, !"__UNIQUE_ID_probe_vf359", i1 false, i1 false}
!32 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 93, i32 1}
!33 = !{ptr @__param_log_num_mgm_entry_size, !34, !"__param_log_num_mgm_entry_size", i1 false, i1 false}
!34 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 97, i32 1}
!35 = !{ptr @__UNIQUE_ID_log_num_mgm_entry_sizetype360, !34, !"__UNIQUE_ID_log_num_mgm_entry_sizetype360", i1 false, i1 false}
!36 = !{ptr @__UNIQUE_ID_log_num_mgm_entry_size361, !37, !"__UNIQUE_ID_log_num_mgm_entry_size361", i1 false, i1 false}
!37 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 99, i32 1}
!38 = !{ptr @__param_enable_64b_cqe_eqe, !39, !"__param_enable_64b_cqe_eqe", i1 false, i1 false}
!39 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 107, i32 1}
!40 = !{ptr @__UNIQUE_ID_enable_64b_cqe_eqetype362, !39, !"__UNIQUE_ID_enable_64b_cqe_eqetype362", i1 false, i1 false}
!41 = !{ptr @__UNIQUE_ID_enable_64b_cqe_eqe363, !42, !"__UNIQUE_ID_enable_64b_cqe_eqe363", i1 false, i1 false}
!42 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 108, i32 1}
!43 = !{ptr @__param_enable_4k_uar, !44, !"__param_enable_4k_uar", i1 false, i1 false}
!44 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 112, i32 1}
!45 = !{ptr @__UNIQUE_ID_enable_4k_uartype364, !44, !"__UNIQUE_ID_enable_4k_uartype364", i1 false, i1 false}
!46 = !{ptr @__UNIQUE_ID_enable_4k_uar365, !47, !"__UNIQUE_ID_enable_4k_uar365", i1 false, i1 false}
!47 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 113, i32 1}
!48 = !{ptr @__param_log_num_mac, !49, !"__param_log_num_mac", i1 false, i1 false}
!49 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 147, i32 1}
!50 = !{ptr @__UNIQUE_ID_log_num_mactype366, !49, !"__UNIQUE_ID_log_num_mactype366", i1 false, i1 false}
!51 = !{ptr @__UNIQUE_ID_log_num_mac367, !52, !"__UNIQUE_ID_log_num_mac367", i1 false, i1 false}
!52 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 148, i32 1}
!53 = !{ptr @__param_log_num_vlan, !54, !"__param_log_num_vlan", i1 false, i1 false}
!54 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 151, i32 1}
!55 = !{ptr @__UNIQUE_ID_log_num_vlantype368, !54, !"__UNIQUE_ID_log_num_vlantype368", i1 false, i1 false}
!56 = !{ptr @__UNIQUE_ID_log_num_vlan369, !57, !"__UNIQUE_ID_log_num_vlan369", i1 false, i1 false}
!57 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 152, i32 1}
!58 = !{ptr @__param_use_prio, !59, !"__param_use_prio", i1 false, i1 false}
!59 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 159, i32 1}
!60 = !{ptr @__UNIQUE_ID_use_priotype370, !59, !"__UNIQUE_ID_use_priotype370", i1 false, i1 false}
!61 = !{ptr @__UNIQUE_ID_use_prio371, !62, !"__UNIQUE_ID_use_prio371", i1 false, i1 false}
!62 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 160, i32 1}
!63 = !{ptr @log_mtts_per_seg, !64, !"log_mtts_per_seg", i1 false, i1 false}
!64 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 162, i32 5}
!65 = !{ptr @__param_log_mtts_per_seg, !66, !"__param_log_mtts_per_seg", i1 false, i1 false}
!66 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 163, i32 1}
!67 = !{ptr @__UNIQUE_ID_log_mtts_per_segtype372, !66, !"__UNIQUE_ID_log_mtts_per_segtype372", i1 false, i1 false}
!68 = !{ptr @__UNIQUE_ID_log_mtts_per_seg373, !69, !"__UNIQUE_ID_log_mtts_per_seg373", i1 false, i1 false}
!69 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 164, i32 1}
!70 = !{ptr @__param_port_type_array, !71, !"__param_port_type_array", i1 false, i1 false}
!71 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 169, i32 1}
!72 = !{ptr @__UNIQUE_ID_port_type_arraytype374, !71, !"__UNIQUE_ID_port_type_arraytype374", i1 false, i1 false}
!73 = !{ptr @__UNIQUE_ID_port_type_array375, !74, !"__UNIQUE_ID_port_type_array375", i1 false, i1 false}
!74 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 170, i32 1}
!75 = !{ptr @.str.3, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 315, i32 5}
!77 = !{ptr @.str.4, !76, !"<string literal>", i1 false, i1 false}
!78 = !{ptr @.str.5, !76, !"<string literal>", i1 false, i1 false}
!79 = !{ptr @.str.6, !76, !"<string literal>", i1 false, i1 false}
!80 = !{ptr @.str.7, !76, !"<string literal>", i1 false, i1 false}
!81 = !{ptr @mlx4_check_port_params._entry, !76, !"_entry", i1 false, i1 false}
!82 = !{ptr @mlx4_check_port_params._entry_ptr, !76, !"_entry_ptr", i1 false, i1 false}
!83 = !{ptr @.str.9, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 323, i32 4}
!85 = !{ptr @mlx4_check_port_params._entry.8, !84, !"_entry", i1 false, i1 false}
!86 = !{ptr @mlx4_check_port_params._entry_ptr.10, !84, !"_entry_ptr", i1 false, i1 false}
!87 = !{ptr @__ksymtab_mlx4_get_parav_qkey, !88, !"__ksymtab_mlx4_get_parav_qkey", i1 false, i1 false}
!88 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 777, i32 1}
!89 = !{ptr @__ksymtab_mlx4_sync_pkey_table, !90, !"__ksymtab_mlx4_sync_pkey_table", i1 false, i1 false}
!90 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 788, i32 1}
!91 = !{ptr @__ksymtab_mlx4_put_slave_node_guid, !92, !"__ksymtab_mlx4_put_slave_node_guid", i1 false, i1 false}
!92 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 799, i32 1}
!93 = !{ptr @__ksymtab_mlx4_get_slave_node_guid, !94, !"__ksymtab_mlx4_get_slave_node_guid", i1 false, i1 false}
!94 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 810, i32 1}
!95 = !{ptr @__ksymtab_mlx4_is_slave_active, !96, !"__ksymtab_mlx4_is_slave_active", i1 false, i1 false}
!96 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 823, i32 1}
!97 = !{ptr @__ksymtab_mlx4_handle_eth_header_mcast_prio, !98, !"__ksymtab_mlx4_handle_eth_header_mcast_prio", i1 false, i1 false}
!98 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 840, i32 1}
!99 = !{ptr @.str.11, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1139, i32 5}
!101 = !{ptr @.str.12, !100, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @mlx4_change_port_types._entry, !100, !"_entry", i1 false, i1 false}
!103 = !{ptr @mlx4_change_port_types._entry_ptr, !100, !"_entry_ptr", i1 false, i1 false}
!104 = !{ptr @.str.14, !105, !"<string literal>", i1 false, i1 false}
!105 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1147, i32 4}
!106 = !{ptr @mlx4_change_port_types._entry.13, !105, !"_entry", i1 false, i1 false}
!107 = !{ptr @mlx4_change_port_types._entry_ptr.15, !105, !"_entry_ptr", i1 false, i1 false}
!108 = !{ptr @.str.16, !109, !"<string literal>", i1 false, i1 false}
!109 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1457, i32 4}
!110 = !{ptr @.str.17, !109, !"<string literal>", i1 false, i1 false}
!111 = !{ptr @mlx4_bond._entry, !109, !"_entry", i1 false, i1 false}
!112 = !{ptr @mlx4_bond._entry_ptr, !109, !"_entry_ptr", i1 false, i1 false}
!113 = !{ptr @.str.19, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1461, i32 5}
!115 = !{ptr @mlx4_bond._entry.18, !114, !"_entry", i1 false, i1 false}
!116 = !{ptr @mlx4_bond._entry_ptr.20, !114, !"_entry_ptr", i1 false, i1 false}
!117 = !{ptr @.str.22, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1469, i32 3}
!119 = !{ptr @.str.23, !118, !"<string literal>", i1 false, i1 false}
!120 = !{ptr @mlx4_bond._entry.21, !118, !"_entry", i1 false, i1 false}
!121 = !{ptr @mlx4_bond._entry_ptr.24, !118, !"_entry_ptr", i1 false, i1 false}
!122 = !{ptr @__ksymtab_mlx4_bond, !123, !"__ksymtab_mlx4_bond", i1 false, i1 false}
!123 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1473, i32 1}
!124 = !{ptr @.str.25, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1487, i32 4}
!126 = !{ptr @.str.26, !125, !"<string literal>", i1 false, i1 false}
!127 = !{ptr @mlx4_unbond._entry, !125, !"_entry", i1 false, i1 false}
!128 = !{ptr @mlx4_unbond._entry_ptr, !125, !"_entry_ptr", i1 false, i1 false}
!129 = !{ptr @.str.28, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1491, i32 4}
!131 = !{ptr @.str.29, !130, !"<string literal>", i1 false, i1 false}
!132 = !{ptr @mlx4_unbond._entry.27, !130, !"_entry", i1 false, i1 false}
!133 = !{ptr @mlx4_unbond._entry_ptr.30, !130, !"_entry_ptr", i1 false, i1 false}
!134 = !{ptr @.str.32, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1498, i32 3}
!136 = !{ptr @mlx4_unbond._entry.31, !135, !"_entry", i1 false, i1 false}
!137 = !{ptr @mlx4_unbond._entry_ptr.33, !135, !"_entry_ptr", i1 false, i1 false}
!138 = !{ptr @__ksymtab_mlx4_unbond, !139, !"__ksymtab_mlx4_unbond", i1 false, i1 false}
!139 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1502, i32 1}
!140 = !{ptr @.str.34, !141, !"<string literal>", i1 false, i1 false}
!141 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1535, i32 4}
!142 = !{ptr @.str.35, !141, !"<string literal>", i1 false, i1 false}
!143 = !{ptr @mlx4_port_map_set._entry, !141, !"_entry", i1 false, i1 false}
!144 = !{ptr @mlx4_port_map_set._entry_ptr, !141, !"_entry_ptr", i1 false, i1 false}
!145 = !{ptr @.str.37, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1540, i32 4}
!147 = !{ptr @mlx4_port_map_set._entry.36, !146, !"_entry", i1 false, i1 false}
!148 = !{ptr @mlx4_port_map_set._entry_ptr.38, !146, !"_entry_ptr", i1 false, i1 false}
!149 = !{ptr @__ksymtab_mlx4_port_map_set, !150, !"__ksymtab_mlx4_port_map_set", i1 false, i1 false}
!150 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1547, i32 1}
!151 = !{ptr @__ksymtab_mlx4_read_clock, !152, !"__ksymtab_mlx4_read_clock", i1 false, i1 false}
!152 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1926, i32 1}
!153 = !{ptr @.str.39, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1953, i32 3}
!155 = !{ptr @.str.40, !154, !"<string literal>", i1 false, i1 false}
!156 = !{ptr @mlx4_get_internal_clock_params._entry, !154, !"_entry", i1 false, i1 false}
!157 = !{ptr @mlx4_get_internal_clock_params._entry_ptr, !154, !"_entry_ptr", i1 false, i1 false}
!158 = !{ptr @__ksymtab_mlx4_get_internal_clock_params, !159, !"__ksymtab_mlx4_get_internal_clock_params", i1 false, i1 false}
!159 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1966, i32 1}
!160 = !{ptr @__ksymtab_mlx4_counter_alloc, !161, !"__ksymtab_mlx4_counter_alloc", i1 false, i1 false}
!161 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2614, i32 1}
!162 = !{ptr @__ksymtab_mlx4_counter_free, !163, !"__ksymtab_mlx4_counter_free", i1 false, i1 false}
!163 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2662, i32 1}
!164 = !{ptr @__ksymtab_mlx4_get_default_counter_index, !165, !"__ksymtab_mlx4_get_default_counter_index", i1 false, i1 false}
!165 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2670, i32 1}
!166 = !{ptr @__ksymtab_mlx4_set_admin_guid, !167, !"__ksymtab_mlx4_set_admin_guid", i1 false, i1 false}
!167 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2678, i32 1}
!168 = !{ptr @__ksymtab_mlx4_get_admin_guid, !169, !"__ksymtab_mlx4_get_admin_guid", i1 false, i1 false}
!169 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2686, i32 1}
!170 = !{ptr @__initcall__kmod_mlx4_core__390_4510_mlx4_init6, !171, !"__initcall__kmod_mlx4_core__390_4510_mlx4_init6", i1 false, i1 false}
!171 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4510, i32 1}
!172 = !{ptr @__exitcall_mlx4_cleanup, !173, !"__exitcall_mlx4_cleanup", i1 false, i1 false}
!173 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4511, i32 1}
!174 = !{ptr @mlx4_wq, !175, !"mlx4_wq", i1 false, i1 false}
!175 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 62, i32 26}
!176 = !{ptr @mlx4_debug_level, !177, !"mlx4_debug_level", i1 false, i1 false}
!177 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 66, i32 5}
!178 = !{ptr @enable_4k_uar, !179, !"enable_4k_uar", i1 false, i1 false}
!179 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 111, i32 13}
!180 = !{ptr @log_num_vlan, !181, !"log_num_vlan", i1 false, i1 false}
!181 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 150, i32 12}
!182 = !{ptr @use_prio, !183, !"use_prio", i1 false, i1 false}
!183 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 158, i32 13}
!184 = !{ptr @__param_str_debug_level, !14, !"__param_str_debug_level", i1 false, i1 false}
!185 = !{ptr @__param_str_msi_x, !19, !"__param_str_msi_x", i1 false, i1 false}
!186 = !{ptr @msi_x, !187, !"msi_x", i1 false, i1 false}
!187 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 74, i32 12}
!188 = !{ptr @__param_str_num_vfs, !24, !"__param_str_num_vfs", i1 false, i1 false}
!189 = !{ptr @__param_arr_num_vfs, !24, !"__param_arr_num_vfs", i1 false, i1 false}
!190 = !{ptr @num_vfs_argc, !191, !"num_vfs_argc", i1 false, i1 false}
!191 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 85, i32 12}
!192 = !{ptr @num_vfs, !193, !"num_vfs", i1 false, i1 false}
!193 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 84, i32 16}
!194 = !{ptr @__param_str_probe_vf, !29, !"__param_str_probe_vf", i1 false, i1 false}
!195 = !{ptr @__param_arr_probe_vf, !29, !"__param_arr_probe_vf", i1 false, i1 false}
!196 = !{ptr @probe_vfs_argc, !197, !"probe_vfs_argc", i1 false, i1 false}
!197 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 91, i32 12}
!198 = !{ptr @probe_vf, !199, !"probe_vf", i1 false, i1 false}
!199 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 90, i32 16}
!200 = !{ptr @__param_str_log_num_mgm_entry_size, !34, !"__param_str_log_num_mgm_entry_size", i1 false, i1 false}
!201 = !{ptr @mlx4_log_num_mgm_entry_size, !202, !"mlx4_log_num_mgm_entry_size", i1 false, i1 false}
!202 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 96, i32 12}
!203 = !{ptr @__param_str_enable_64b_cqe_eqe, !39, !"__param_str_enable_64b_cqe_eqe", i1 false, i1 false}
!204 = !{ptr @enable_64b_cqe_eqe, !205, !"enable_64b_cqe_eqe", i1 false, i1 false}
!205 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 106, i32 13}
!206 = !{ptr @__param_str_enable_4k_uar, !44, !"__param_str_enable_4k_uar", i1 false, i1 false}
!207 = !{ptr @__param_str_log_num_mac, !49, !"__param_str_log_num_mac", i1 false, i1 false}
!208 = !{ptr @log_num_mac, !209, !"log_num_mac", i1 false, i1 false}
!209 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 146, i32 12}
!210 = !{ptr @__param_str_log_num_vlan, !54, !"__param_str_log_num_vlan", i1 false, i1 false}
!211 = !{ptr @__param_str_use_prio, !59, !"__param_str_use_prio", i1 false, i1 false}
!212 = !{ptr @__param_str_log_mtts_per_seg, !66, !"__param_str_log_mtts_per_seg", i1 false, i1 false}
!213 = !{ptr @__param_str_port_type_array, !71, !"__param_str_port_type_array", i1 false, i1 false}
!214 = !{ptr @__param_arr_port_type_array, !71, !"__param_arr_port_type_array", i1 false, i1 false}
!215 = !{ptr @arr_argc, !216, !"arr_argc", i1 false, i1 false}
!216 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 168, i32 12}
!217 = !{ptr @port_type_array, !218, !"port_type_array", i1 false, i1 false}
!218 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 167, i32 12}
!219 = !{ptr @.str.41, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1110, i32 3}
!221 = !{ptr @.str.42, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1112, i32 3}
!223 = !{ptr @.str.43, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1387, i32 3}
!225 = !{ptr @.str.44, !224, !"<string literal>", i1 false, i1 false}
!226 = !{ptr @mlx4_mf_bond._entry, !224, !"_entry", i1 false, i1 false}
!227 = !{ptr @mlx4_mf_bond._entry_ptr, !224, !"_entry_ptr", i1 false, i1 false}
!228 = !{ptr @.str.46, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1399, i32 3}
!230 = !{ptr @mlx4_mf_bond._entry.45, !229, !"_entry", i1 false, i1 false}
!231 = !{ptr @mlx4_mf_bond._entry_ptr.47, !229, !"_entry_ptr", i1 false, i1 false}
!232 = !{ptr @.str.49, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1405, i32 3}
!234 = !{ptr @mlx4_mf_bond._entry.48, !233, !"_entry", i1 false, i1 false}
!235 = !{ptr @mlx4_mf_bond._entry_ptr.50, !233, !"_entry_ptr", i1 false, i1 false}
!236 = !{ptr @.str.51, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1433, i32 3}
!238 = !{ptr @.str.52, !237, !"<string literal>", i1 false, i1 false}
!239 = !{ptr @mlx4_mf_unbond._entry, !237, !"_entry", i1 false, i1 false}
!240 = !{ptr @mlx4_mf_unbond._entry_ptr, !237, !"_entry_ptr", i1 false, i1 false}
!241 = !{ptr @.str.54, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1436, i32 3}
!243 = !{ptr @mlx4_mf_unbond._entry.53, !242, !"_entry", i1 false, i1 false}
!244 = !{ptr @mlx4_mf_unbond._entry_ptr.55, !242, !"_entry_ptr", i1 false, i1 false}
!245 = !{ptr @.str.57, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1441, i32 3}
!247 = !{ptr @mlx4_mf_unbond._entry.56, !246, !"_entry", i1 false, i1 false}
!248 = !{ptr @mlx4_mf_unbond._entry_ptr.58, !246, !"_entry_ptr", i1 false, i1 false}
!249 = !{ptr @.str.59, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1876, i32 3}
!251 = !{ptr @.str.60, !250, !"<string literal>", i1 false, i1 false}
!252 = !{ptr @mlx4_slave_exit._entry, !250, !"_entry", i1 false, i1 false}
!253 = !{ptr @mlx4_slave_exit._entry_ptr, !250, !"_entry_ptr", i1 false, i1 false}
!254 = !{ptr @.str.61, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3212, i32 3}
!256 = !{ptr @.str.62, !255, !"<string literal>", i1 false, i1 false}
!257 = !{ptr @mlx4_free_ownership._entry, !255, !"_entry", i1 false, i1 false}
!258 = !{ptr @mlx4_free_ownership._entry_ptr, !255, !"_entry_ptr", i1 false, i1 false}
!259 = !{ptr @.str.63, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4219, i32 3}
!261 = !{ptr @.str.64, !260, !"<string literal>", i1 false, i1 false}
!262 = !{ptr @mlx4_restart_one_up._entry, !260, !"_entry", i1 false, i1 false}
!263 = !{ptr @mlx4_restart_one_up._entry_ptr, !260, !"_entry_ptr", i1 false, i1 false}
!264 = !{ptr @.str.66, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4227, i32 3}
!266 = !{ptr @mlx4_restart_one_up._entry.65, !265, !"_entry", i1 false, i1 false}
!267 = !{ptr @mlx4_restart_one_up._entry_ptr.67, !265, !"_entry_ptr", i1 false, i1 false}
!268 = !{ptr @mlx4_load_one.__key, !269, !"__key", i1 false, i1 false}
!269 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3347, i32 2}
!270 = !{ptr @.str.68, !269, !"<string literal>", i1 false, i1 false}
!271 = !{ptr @mlx4_load_one.__key.69, !272, !"__key", i1 false, i1 false}
!272 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3349, i32 2}
!273 = !{ptr @.str.70, !272, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @mlx4_load_one.__key.71, !275, !"__key", i1 false, i1 false}
!275 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3350, i32 2}
!276 = !{ptr @.str.72, !275, !"<string literal>", i1 false, i1 false}
!277 = !{ptr @mlx4_load_one.__key.73, !278, !"__key", i1 false, i1 false}
!278 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3353, i32 2}
!279 = !{ptr @.str.74, !278, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @mlx4_load_one.__key.75, !281, !"__key", i1 false, i1 false}
!281 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3354, i32 2}
!282 = !{ptr @.str.76, !281, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @mlx4_load_one.__key.77, !284, !"__key", i1 false, i1 false}
!284 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3357, i32 2}
!285 = !{ptr @.str.78, !284, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @.str.79, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3364, i32 3}
!288 = !{ptr @.str.80, !287, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @mlx4_load_one._entry, !287, !"_entry", i1 false, i1 false}
!290 = !{ptr @mlx4_load_one._entry_ptr, !287, !"_entry_ptr", i1 false, i1 false}
!291 = !{ptr @.str.82, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3375, i32 5}
!293 = !{ptr @mlx4_load_one._entry.81, !292, !"_entry", i1 false, i1 false}
!294 = !{ptr @mlx4_load_one._entry_ptr.83, !292, !"_entry_ptr", i1 false, i1 false}
!295 = !{ptr @mlx4_load_one.__key.84, !296, !"__key", i1 false, i1 false}
!296 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3381, i32 3}
!297 = !{ptr @.str.85, !296, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @.str.87, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3390, i32 4}
!300 = !{ptr @mlx4_load_one._entry.86, !299, !"_entry", i1 false, i1 false}
!301 = !{ptr @mlx4_load_one._entry_ptr.88, !299, !"_entry_ptr", i1 false, i1 false}
!302 = !{ptr @.str.90, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3411, i32 3}
!304 = !{ptr @mlx4_load_one._entry.89, !303, !"_entry", i1 false, i1 false}
!305 = !{ptr @mlx4_load_one._entry_ptr.91, !303, !"_entry_ptr", i1 false, i1 false}
!306 = !{ptr @.str.93, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3426, i32 5}
!308 = !{ptr @mlx4_load_one._entry.92, !307, !"_entry", i1 false, i1 false}
!309 = !{ptr @mlx4_load_one._entry_ptr.94, !307, !"_entry_ptr", i1 false, i1 false}
!310 = !{ptr @.str.96, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3434, i32 3}
!312 = !{ptr @mlx4_load_one._entry.95, !311, !"_entry", i1 false, i1 false}
!313 = !{ptr @mlx4_load_one._entry_ptr.97, !311, !"_entry_ptr", i1 false, i1 false}
!314 = !{ptr @.str.99, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3450, i32 5}
!316 = !{ptr @mlx4_load_one._entry.98, !315, !"_entry", i1 false, i1 false}
!317 = !{ptr @mlx4_load_one._entry_ptr.100, !315, !"_entry_ptr", i1 false, i1 false}
!318 = !{ptr @.str.102, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3467, i32 6}
!320 = !{ptr @mlx4_load_one._entry.101, !319, !"_entry", i1 false, i1 false}
!321 = !{ptr @mlx4_load_one._entry_ptr.103, !319, !"_entry_ptr", i1 false, i1 false}
!322 = !{ptr @.str.105, !323, !"<string literal>", i1 false, i1 false}
!323 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3472, i32 6}
!324 = !{ptr @mlx4_load_one._entry.104, !323, !"_entry", i1 false, i1 false}
!325 = !{ptr @mlx4_load_one._entry_ptr.106, !323, !"_entry_ptr", i1 false, i1 false}
!326 = !{ptr @mlx4_load_one._entry.107, !327, !"_entry", i1 false, i1 false}
!327 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3485, i32 5}
!328 = !{ptr @mlx4_load_one._entry_ptr.108, !327, !"_entry_ptr", i1 false, i1 false}
!329 = !{ptr @.str.110, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3529, i32 5}
!331 = !{ptr @mlx4_load_one._entry.109, !330, !"_entry", i1 false, i1 false}
!332 = !{ptr @mlx4_load_one._entry_ptr.111, !330, !"_entry_ptr", i1 false, i1 false}
!333 = !{ptr @mlx4_load_one._entry.112, !334, !"_entry", i1 false, i1 false}
!334 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3537, i32 4}
!335 = !{ptr @mlx4_load_one._entry_ptr.113, !334, !"_entry_ptr", i1 false, i1 false}
!336 = !{ptr @.str.115, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3556, i32 4}
!338 = !{ptr @mlx4_load_one._entry.114, !337, !"_entry", i1 false, i1 false}
!339 = !{ptr @mlx4_load_one._entry_ptr.116, !337, !"_entry_ptr", i1 false, i1 false}
!340 = !{ptr @.str.118, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3580, i32 4}
!342 = !{ptr @mlx4_load_one._entry.117, !341, !"_entry", i1 false, i1 false}
!343 = !{ptr @mlx4_load_one._entry_ptr.119, !341, !"_entry_ptr", i1 false, i1 false}
!344 = !{ptr @mlx4_load_one.__key.120, !345, !"__key", i1 false, i1 false}
!345 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3590, i32 2}
!346 = !{ptr @.str.121, !345, !"<string literal>", i1 false, i1 false}
!347 = !{ptr @.str.123, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3596, i32 3}
!349 = !{ptr @mlx4_load_one._entry.122, !348, !"_entry", i1 false, i1 false}
!350 = !{ptr @mlx4_load_one._entry_ptr.124, !348, !"_entry_ptr", i1 false, i1 false}
!351 = !{ptr @.str.126, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3626, i32 4}
!353 = !{ptr @mlx4_load_one._entry.125, !352, !"_entry", i1 false, i1 false}
!354 = !{ptr @mlx4_load_one._entry_ptr.127, !352, !"_entry_ptr", i1 false, i1 false}
!355 = !{ptr @.str.128, !356, !"<string literal>", i1 false, i1 false}
!356 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3192, i32 3}
!357 = !{ptr @mlx4_get_ownership._entry, !356, !"_entry", i1 false, i1 false}
!358 = !{ptr @mlx4_get_ownership._entry_ptr, !356, !"_entry_ptr", i1 false, i1 false}
!359 = !{ptr @.str.129, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2275, i32 5}
!361 = !{ptr @.str.130, !360, !"<string literal>", i1 false, i1 false}
!362 = !{ptr @.str.131, !360, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @mlx4_init_fw._entry, !360, !"_entry", i1 false, i1 false}
!364 = !{ptr @mlx4_init_fw._entry_ptr, !360, !"_entry_ptr", i1 false, i1 false}
!365 = !{ptr @.str.133, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2277, i32 5}
!367 = !{ptr @mlx4_init_fw._entry.132, !366, !"_entry", i1 false, i1 false}
!368 = !{ptr @mlx4_init_fw._entry_ptr.134, !366, !"_entry_ptr", i1 false, i1 false}
!369 = !{ptr @.str.136, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2283, i32 4}
!371 = !{ptr @mlx4_init_fw._entry.135, !370, !"_entry", i1 false, i1 false}
!372 = !{ptr @mlx4_init_fw._entry_ptr.137, !370, !"_entry_ptr", i1 false, i1 false}
!373 = !{ptr @.str.139, !374, !"<string literal>", i1 false, i1 false}
!374 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2291, i32 4}
!375 = !{ptr @mlx4_init_fw._entry.138, !374, !"_entry", i1 false, i1 false}
!376 = !{ptr @mlx4_init_fw._entry_ptr.140, !374, !"_entry_ptr", i1 false, i1 false}
!377 = !{ptr @.str.141, !378, !"<string literal>", i1 false, i1 false}
!378 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1557, i32 3}
!379 = !{ptr @.str.142, !378, !"<string literal>", i1 false, i1 false}
!380 = !{ptr @mlx4_load_fw._entry, !378, !"_entry", i1 false, i1 false}
!381 = !{ptr @mlx4_load_fw._entry_ptr, !378, !"_entry_ptr", i1 false, i1 false}
!382 = !{ptr @.str.144, !383, !"<string literal>", i1 false, i1 false}
!383 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1563, i32 3}
!384 = !{ptr @mlx4_load_fw._entry.143, !383, !"_entry", i1 false, i1 false}
!385 = !{ptr @mlx4_load_fw._entry_ptr.145, !383, !"_entry_ptr", i1 false, i1 false}
!386 = !{ptr @.str.147, !387, !"<string literal>", i1 false, i1 false}
!387 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1569, i32 3}
!388 = !{ptr @mlx4_load_fw._entry.146, !387, !"_entry", i1 false, i1 false}
!389 = !{ptr @mlx4_load_fw._entry_ptr.148, !387, !"_entry_ptr", i1 false, i1 false}
!390 = !{ptr @.str.149, !391, !"<string literal>", i1 false, i1 false}
!391 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3297, i32 3}
!392 = !{ptr @.str.150, !391, !"<string literal>", i1 false, i1 false}
!393 = !{ptr @mlx4_check_dev_cap._entry, !391, !"_entry", i1 false, i1 false}
!394 = !{ptr @mlx4_check_dev_cap._entry_ptr, !391, !"_entry_ptr", i1 false, i1 false}
!395 = !{ptr @.str.151, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3242, i32 4}
!397 = !{ptr @.str.152, !396, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @mlx4_enable_sriov._entry, !396, !"_entry", i1 false, i1 false}
!399 = !{ptr @mlx4_enable_sriov._entry_ptr, !396, !"_entry_ptr", i1 false, i1 false}
!400 = !{ptr @.str.154, !401, !"<string literal>", i1 false, i1 false}
!401 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3250, i32 3}
!402 = !{ptr @mlx4_enable_sriov._entry.153, !401, !"_entry", i1 false, i1 false}
!403 = !{ptr @mlx4_enable_sriov._entry_ptr.155, !401, !"_entry_ptr", i1 false, i1 false}
!404 = !{ptr @.str.157, !405, !"<string literal>", i1 false, i1 false}
!405 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3256, i32 4}
!406 = !{ptr @mlx4_enable_sriov._entry.156, !405, !"_entry", i1 false, i1 false}
!407 = !{ptr @mlx4_enable_sriov._entry_ptr.158, !405, !"_entry_ptr", i1 false, i1 false}
!408 = !{ptr @.str.160, !409, !"<string literal>", i1 false, i1 false}
!409 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3261, i32 3}
!410 = !{ptr @mlx4_enable_sriov._entry.159, !409, !"_entry", i1 false, i1 false}
!411 = !{ptr @mlx4_enable_sriov._entry_ptr.161, !409, !"_entry_ptr", i1 false, i1 false}
!412 = !{ptr @.str.163, !413, !"<string literal>", i1 false, i1 false}
!413 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3265, i32 3}
!414 = !{ptr @mlx4_enable_sriov._entry.162, !413, !"_entry", i1 false, i1 false}
!415 = !{ptr @mlx4_enable_sriov._entry_ptr.164, !413, !"_entry_ptr", i1 false, i1 false}
!416 = !{ptr @.str.166, !417, !"<string literal>", i1 false, i1 false}
!417 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3269, i32 3}
!418 = !{ptr @mlx4_enable_sriov._entry.165, !417, !"_entry", i1 false, i1 false}
!419 = !{ptr @mlx4_enable_sriov._entry_ptr.167, !417, !"_entry_ptr", i1 false, i1 false}
!420 = !{ptr @.str.168, !421, !"<string literal>", i1 false, i1 false}
!421 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2319, i32 4}
!422 = !{ptr @.str.169, !421, !"<string literal>", i1 false, i1 false}
!423 = !{ptr @mlx4_init_hca._entry, !421, !"_entry", i1 false, i1 false}
!424 = !{ptr @mlx4_init_hca._entry_ptr, !421, !"_entry_ptr", i1 false, i1 false}
!425 = !{ptr @.str.171, !426, !"<string literal>", i1 false, i1 false}
!426 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2332, i32 4}
!427 = !{ptr @mlx4_init_hca._entry.170, !426, !"_entry", i1 false, i1 false}
!428 = !{ptr @mlx4_init_hca._entry_ptr.172, !426, !"_entry_ptr", i1 false, i1 false}
!429 = !{ptr @.str.174, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2338, i32 4}
!431 = !{ptr @mlx4_init_hca._entry.173, !430, !"_entry", i1 false, i1 false}
!432 = !{ptr @mlx4_init_hca._entry_ptr.175, !430, !"_entry_ptr", i1 false, i1 false}
!433 = !{ptr @.str.177, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2374, i32 4}
!435 = !{ptr @mlx4_init_hca._entry.176, !434, !"_entry", i1 false, i1 false}
!436 = !{ptr @mlx4_init_hca._entry_ptr.178, !434, !"_entry_ptr", i1 false, i1 false}
!437 = !{ptr @.str.180, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2381, i32 5}
!439 = !{ptr @mlx4_init_hca._entry.179, !438, !"_entry", i1 false, i1 false}
!440 = !{ptr @mlx4_init_hca._entry_ptr.181, !438, !"_entry_ptr", i1 false, i1 false}
!441 = !{ptr @.str.183, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2397, i32 5}
!443 = !{ptr @mlx4_init_hca._entry.182, !442, !"_entry", i1 false, i1 false}
!444 = !{ptr @mlx4_init_hca._entry_ptr.184, !442, !"_entry_ptr", i1 false, i1 false}
!445 = !{ptr @.str.186, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2409, i32 5}
!447 = !{ptr @mlx4_init_hca._entry.185, !446, !"_entry", i1 false, i1 false}
!448 = !{ptr @mlx4_init_hca._entry_ptr.187, !446, !"_entry_ptr", i1 false, i1 false}
!449 = !{ptr @.str.189, !450, !"<string literal>", i1 false, i1 false}
!450 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2417, i32 5}
!451 = !{ptr @mlx4_init_hca._entry.188, !450, !"_entry", i1 false, i1 false}
!452 = !{ptr @mlx4_init_hca._entry_ptr.190, !450, !"_entry_ptr", i1 false, i1 false}
!453 = !{ptr @.str.192, !454, !"<string literal>", i1 false, i1 false}
!454 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2424, i32 5}
!455 = !{ptr @mlx4_init_hca._entry.191, !454, !"_entry", i1 false, i1 false}
!456 = !{ptr @mlx4_init_hca._entry_ptr.193, !454, !"_entry_ptr", i1 false, i1 false}
!457 = !{ptr @.str.195, !458, !"<string literal>", i1 false, i1 false}
!458 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2434, i32 4}
!459 = !{ptr @mlx4_init_hca._entry.194, !458, !"_entry", i1 false, i1 false}
!460 = !{ptr @mlx4_init_hca._entry_ptr.196, !458, !"_entry_ptr", i1 false, i1 false}
!461 = !{ptr @.str.198, !462, !"<string literal>", i1 false, i1 false}
!462 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2442, i32 5}
!463 = !{ptr @mlx4_init_hca._entry.197, !462, !"_entry", i1 false, i1 false}
!464 = !{ptr @mlx4_init_hca._entry_ptr.199, !462, !"_entry_ptr", i1 false, i1 false}
!465 = !{ptr @.str.201, !466, !"<string literal>", i1 false, i1 false}
!466 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2448, i32 4}
!467 = !{ptr @mlx4_init_hca._entry.200, !466, !"_entry", i1 false, i1 false}
!468 = !{ptr @mlx4_init_hca._entry_ptr.202, !466, !"_entry_ptr", i1 false, i1 false}
!469 = !{ptr @.str.204, !470, !"<string literal>", i1 false, i1 false}
!470 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2454, i32 3}
!471 = !{ptr @mlx4_init_hca._entry.203, !470, !"_entry", i1 false, i1 false}
!472 = !{ptr @mlx4_init_hca._entry_ptr.205, !470, !"_entry_ptr", i1 false, i1 false}
!473 = !{ptr @.str.207, !474, !"<string literal>", i1 false, i1 false}
!474 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2462, i32 3}
!475 = !{ptr @mlx4_init_hca._entry.206, !474, !"_entry", i1 false, i1 false}
!476 = !{ptr @mlx4_init_hca._entry_ptr.208, !474, !"_entry_ptr", i1 false, i1 false}
!477 = !{ptr @.str.210, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2469, i32 3}
!479 = !{ptr @mlx4_init_hca._entry.209, !478, !"_entry", i1 false, i1 false}
!480 = !{ptr @mlx4_init_hca._entry_ptr.211, !478, !"_entry_ptr", i1 false, i1 false}
!481 = !{ptr @.str.212, !482, !"<string literal>", i1 false, i1 false}
!482 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 464, i32 3}
!483 = !{ptr @mlx4_dev_cap._entry, !482, !"_entry", i1 false, i1 false}
!484 = !{ptr @mlx4_dev_cap._entry_ptr, !482, !"_entry_ptr", i1 false, i1 false}
!485 = !{ptr @.str.214, !486, !"<string literal>", i1 false, i1 false}
!486 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 470, i32 3}
!487 = !{ptr @mlx4_dev_cap._entry.213, !486, !"_entry", i1 false, i1 false}
!488 = !{ptr @mlx4_dev_cap._entry_ptr.215, !486, !"_entry_ptr", i1 false, i1 false}
!489 = !{ptr @.str.217, !490, !"<string literal>", i1 false, i1 false}
!490 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 475, i32 3}
!491 = !{ptr @mlx4_dev_cap._entry.216, !490, !"_entry", i1 false, i1 false}
!492 = !{ptr @mlx4_dev_cap._entry_ptr.218, !490, !"_entry_ptr", i1 false, i1 false}
!493 = !{ptr @.str.220, !494, !"<string literal>", i1 false, i1 false}
!494 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 481, i32 3}
!495 = !{ptr @mlx4_dev_cap._entry.219, !494, !"_entry", i1 false, i1 false}
!496 = !{ptr @mlx4_dev_cap._entry_ptr.221, !494, !"_entry_ptr", i1 false, i1 false}
!497 = !{ptr @.str.223, !498, !"<string literal>", i1 false, i1 false}
!498 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 496, i32 4}
!499 = !{ptr @mlx4_dev_cap._entry.222, !498, !"_entry", i1 false, i1 false}
!500 = !{ptr @mlx4_dev_cap._entry_ptr.224, !498, !"_entry_ptr", i1 false, i1 false}
!501 = !{ptr @.str.226, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 638, i32 4}
!503 = !{ptr @mlx4_dev_cap._entry.225, !502, !"_entry", i1 false, i1 false}
!504 = !{ptr @mlx4_dev_cap._entry_ptr.227, !502, !"_entry_ptr", i1 false, i1 false}
!505 = !{ptr @.str.229, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 643, i32 4}
!507 = !{ptr @mlx4_dev_cap._entry.228, !506, !"_entry", i1 false, i1 false}
!508 = !{ptr @mlx4_dev_cap._entry_ptr.230, !506, !"_entry_ptr", i1 false, i1 false}
!509 = !{ptr @.str.232, !510, !"<string literal>", i1 false, i1 false}
!510 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 651, i32 3}
!511 = !{ptr @mlx4_dev_cap._entry.231, !510, !"_entry", i1 false, i1 false}
!512 = !{ptr @mlx4_dev_cap._entry_ptr.233, !510, !"_entry_ptr", i1 false, i1 false}
!513 = !{ptr @.str.235, !514, !"<string literal>", i1 false, i1 false}
!514 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 700, i32 4}
!515 = !{ptr @mlx4_dev_cap._entry.234, !514, !"_entry", i1 false, i1 false}
!516 = !{ptr @mlx4_dev_cap._entry_ptr.236, !514, !"_entry_ptr", i1 false, i1 false}
!517 = !{ptr @.str.238, !518, !"<string literal>", i1 false, i1 false}
!518 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 708, i32 4}
!519 = !{ptr @mlx4_dev_cap._entry.237, !518, !"_entry", i1 false, i1 false}
!520 = !{ptr @mlx4_dev_cap._entry_ptr.239, !518, !"_entry_ptr", i1 false, i1 false}
!521 = !{ptr @.str.241, !522, !"<string literal>", i1 false, i1 false}
!522 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 727, i32 4}
!523 = !{ptr @mlx4_dev_cap._entry.240, !522, !"_entry", i1 false, i1 false}
!524 = !{ptr @mlx4_dev_cap._entry_ptr.242, !522, !"_entry_ptr", i1 false, i1 false}
!525 = !{ptr @.str.244, !526, !"<string literal>", i1 false, i1 false}
!526 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 728, i32 4}
!527 = !{ptr @mlx4_dev_cap._entry.243, !526, !"_entry", i1 false, i1 false}
!528 = !{ptr @mlx4_dev_cap._entry_ptr.245, !526, !"_entry_ptr", i1 false, i1 false}
!529 = !{ptr @.str.246, !530, !"<string literal>", i1 false, i1 false}
!530 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 382, i32 3}
!531 = !{ptr @.str.247, !530, !"<string literal>", i1 false, i1 false}
!532 = !{ptr @mlx4_enable_cqe_eqe_stride._entry, !530, !"_entry", i1 false, i1 false}
!533 = !{ptr @mlx4_enable_cqe_eqe_stride._entry_ptr, !530, !"_entry_ptr", i1 false, i1 false}
!534 = !{ptr @.str.248, !535, !"<string literal>", i1 false, i1 false}
!535 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 443, i32 3}
!536 = !{ptr @.str.249, !535, !"<string literal>", i1 false, i1 false}
!537 = !{ptr @mlx4_enable_ignore_fcs._entry, !535, !"_entry", i1 false, i1 false}
!538 = !{ptr @mlx4_enable_ignore_fcs._entry_ptr, !535, !"_entry_ptr", i1 false, i1 false}
!539 = !{ptr @.str.251, !540, !"<string literal>", i1 false, i1 false}
!540 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 449, i32 3}
!541 = !{ptr @mlx4_enable_ignore_fcs._entry.250, !540, !"_entry", i1 false, i1 false}
!542 = !{ptr @mlx4_enable_ignore_fcs._entry_ptr.252, !540, !"_entry_ptr", i1 false, i1 false}
!543 = !{ptr @.str.253, !544, !"<string literal>", i1 false, i1 false}
!544 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2178, i32 5}
!545 = !{ptr @.str.254, !544, !"<string literal>", i1 false, i1 false}
!546 = !{ptr @choose_steering_mode._entry, !544, !"_entry", i1 false, i1 false}
!547 = !{ptr @choose_steering_mode._entry_ptr, !544, !"_entry_ptr", i1 false, i1 false}
!548 = !{ptr @.str.256, !549, !"<string literal>", i1 false, i1 false}
!549 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2210, i32 5}
!550 = !{ptr @choose_steering_mode._entry.255, !549, !"_entry", i1 false, i1 false}
!551 = !{ptr @choose_steering_mode._entry_ptr.257, !549, !"_entry_ptr", i1 false, i1 false}
!552 = !{ptr @.str.259, !553, !"<string literal>", i1 false, i1 false}
!553 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2218, i32 2}
!554 = !{ptr @choose_steering_mode._entry.258, !553, !"_entry", i1 false, i1 false}
!555 = !{ptr @choose_steering_mode._entry_ptr.260, !553, !"_entry_ptr", i1 false, i1 false}
!556 = !{ptr @.str.261, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../include/linux/mlx4/device.h", i32 135, i32 10}
!558 = !{ptr @.str.262, !559, !"<string literal>", i1 false, i1 false}
!559 = !{!"../include/linux/mlx4/device.h", i32 138, i32 10}
!560 = !{ptr @.str.263, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../include/linux/mlx4/device.h", i32 141, i32 10}
!562 = !{ptr @.str.264, !563, !"<string literal>", i1 false, i1 false}
!563 = !{!"../include/linux/mlx4/device.h", i32 144, i32 10}
!564 = !{ptr @.str.265, !565, !"<string literal>", i1 false, i1 false}
!565 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2233, i32 2}
!566 = !{ptr @.str.266, !565, !"<string literal>", i1 false, i1 false}
!567 = !{ptr @choose_tunnel_offload_mode._entry, !565, !"_entry", i1 false, i1 false}
!568 = !{ptr @choose_tunnel_offload_mode._entry_ptr, !565, !"_entry_ptr", i1 false, i1 false}
!569 = !{ptr @.str.267, !565, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @.str.268, !565, !"<string literal>", i1 false, i1 false}
!571 = !{ptr @low_mem_profile, !572, !"low_mem_profile", i1 false, i1 false}
!572 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 136, i32 34}
!573 = !{ptr @default_profile, !574, !"default_profile", i1 false, i1 false}
!574 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 126, i32 34}
!575 = !{ptr @.str.269, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1652, i32 3}
!577 = !{ptr @.str.270, !576, !"<string literal>", i1 false, i1 false}
!578 = !{ptr @mlx4_init_icm._entry, !576, !"_entry", i1 false, i1 false}
!579 = !{ptr @mlx4_init_icm._entry_ptr, !576, !"_entry_ptr", i1 false, i1 false}
!580 = !{ptr @.str.272, !581, !"<string literal>", i1 false, i1 false}
!581 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1656, i32 2}
!582 = !{ptr @mlx4_init_icm._entry.271, !581, !"_entry", i1 false, i1 false}
!583 = !{ptr @mlx4_init_icm._entry_ptr.273, !581, !"_entry_ptr", i1 false, i1 false}
!584 = !{ptr @.str.275, !585, !"<string literal>", i1 false, i1 false}
!585 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1663, i32 3}
!586 = !{ptr @mlx4_init_icm._entry.274, !585, !"_entry", i1 false, i1 false}
!587 = !{ptr @mlx4_init_icm._entry_ptr.276, !585, !"_entry_ptr", i1 false, i1 false}
!588 = !{ptr @.str.278, !589, !"<string literal>", i1 false, i1 false}
!589 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1669, i32 3}
!590 = !{ptr @mlx4_init_icm._entry.277, !589, !"_entry", i1 false, i1 false}
!591 = !{ptr @mlx4_init_icm._entry_ptr.279, !589, !"_entry_ptr", i1 false, i1 false}
!592 = !{ptr @.str.281, !593, !"<string literal>", i1 false, i1 false}
!593 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1675, i32 3}
!594 = !{ptr @mlx4_init_icm._entry.280, !593, !"_entry", i1 false, i1 false}
!595 = !{ptr @mlx4_init_icm._entry_ptr.282, !593, !"_entry_ptr", i1 false, i1 false}
!596 = !{ptr @.str.284, !597, !"<string literal>", i1 false, i1 false}
!597 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1685, i32 3}
!598 = !{ptr @mlx4_init_icm._entry.283, !597, !"_entry", i1 false, i1 false}
!599 = !{ptr @mlx4_init_icm._entry_ptr.285, !597, !"_entry_ptr", i1 false, i1 false}
!600 = !{ptr @.str.287, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1706, i32 3}
!602 = !{ptr @mlx4_init_icm._entry.286, !601, !"_entry", i1 false, i1 false}
!603 = !{ptr @mlx4_init_icm._entry_ptr.288, !601, !"_entry_ptr", i1 false, i1 false}
!604 = !{ptr @.str.290, !605, !"<string literal>", i1 false, i1 false}
!605 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1716, i32 3}
!606 = !{ptr @mlx4_init_icm._entry.289, !605, !"_entry", i1 false, i1 false}
!607 = !{ptr @mlx4_init_icm._entry_ptr.291, !605, !"_entry_ptr", i1 false, i1 false}
!608 = !{ptr @.str.293, !609, !"<string literal>", i1 false, i1 false}
!609 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1727, i32 3}
!610 = !{ptr @mlx4_init_icm._entry.292, !609, !"_entry", i1 false, i1 false}
!611 = !{ptr @mlx4_init_icm._entry_ptr.294, !609, !"_entry_ptr", i1 false, i1 false}
!612 = !{ptr @.str.296, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1738, i32 3}
!614 = !{ptr @mlx4_init_icm._entry.295, !613, !"_entry", i1 false, i1 false}
!615 = !{ptr @mlx4_init_icm._entry_ptr.297, !613, !"_entry_ptr", i1 false, i1 false}
!616 = !{ptr @.str.299, !617, !"<string literal>", i1 false, i1 false}
!617 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1749, i32 3}
!618 = !{ptr @mlx4_init_icm._entry.298, !617, !"_entry", i1 false, i1 false}
!619 = !{ptr @mlx4_init_icm._entry_ptr.300, !617, !"_entry_ptr", i1 false, i1 false}
!620 = !{ptr @.str.302, !621, !"<string literal>", i1 false, i1 false}
!621 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1760, i32 3}
!622 = !{ptr @mlx4_init_icm._entry.301, !621, !"_entry", i1 false, i1 false}
!623 = !{ptr @mlx4_init_icm._entry_ptr.303, !621, !"_entry_ptr", i1 false, i1 false}
!624 = !{ptr @.str.305, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1770, i32 3}
!626 = !{ptr @mlx4_init_icm._entry.304, !625, !"_entry", i1 false, i1 false}
!627 = !{ptr @mlx4_init_icm._entry_ptr.306, !625, !"_entry_ptr", i1 false, i1 false}
!628 = !{ptr @.str.308, !629, !"<string literal>", i1 false, i1 false}
!629 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1780, i32 3}
!630 = !{ptr @mlx4_init_icm._entry.307, !629, !"_entry", i1 false, i1 false}
!631 = !{ptr @mlx4_init_icm._entry_ptr.309, !629, !"_entry_ptr", i1 false, i1 false}
!632 = !{ptr @.str.311, !633, !"<string literal>", i1 false, i1 false}
!633 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1798, i32 3}
!634 = !{ptr @mlx4_init_icm._entry.310, !633, !"_entry", i1 false, i1 false}
!635 = !{ptr @mlx4_init_icm._entry_ptr.312, !633, !"_entry_ptr", i1 false, i1 false}
!636 = !{ptr @.str.313, !637, !"<string literal>", i1 false, i1 false}
!637 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 351, i32 4}
!638 = !{ptr @mlx4_query_func._entry, !637, !"_entry", i1 false, i1 false}
!639 = !{ptr @mlx4_query_func._entry_ptr, !637, !"_entry_ptr", i1 false, i1 false}
!640 = !{ptr @.str.314, !641, !"<string literal>", i1 false, i1 false}
!641 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2247, i32 4}
!642 = !{ptr @.str.315, !641, !"<string literal>", i1 false, i1 false}
!643 = !{ptr @mlx4_validate_optimized_steering._entry, !641, !"_entry", i1 false, i1 false}
!644 = !{ptr @mlx4_validate_optimized_steering._entry_ptr, !641, !"_entry_ptr", i1 false, i1 false}
!645 = !{ptr @.str.317, !646, !"<string literal>", i1 false, i1 false}
!646 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2254, i32 4}
!647 = !{ptr @mlx4_validate_optimized_steering._entry.316, !646, !"_entry", i1 false, i1 false}
!648 = !{ptr @mlx4_validate_optimized_steering._entry_ptr.318, !646, !"_entry_ptr", i1 false, i1 false}
!649 = !{ptr @.str.319, !646, !"<string literal>", i1 false, i1 false}
!650 = !{ptr @.str.320, !646, !"<string literal>", i1 false, i1 false}
!651 = !{ptr @.str.321, !652, !"<string literal>", i1 false, i1 false}
!652 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 432, i32 3}
!653 = !{ptr @.str.322, !652, !"<string literal>", i1 false, i1 false}
!654 = !{ptr @mlx4_dev_port._entry, !652, !"_entry", i1 false, i1 false}
!655 = !{ptr @mlx4_dev_port._entry_ptr, !652, !"_entry_ptr", i1 false, i1 false}
!656 = !{ptr @.str.323, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2150, i32 10}
!658 = !{ptr @.str.324, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2153, i32 10}
!660 = !{ptr @.str.325, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2156, i32 10}
!662 = !{ptr @.str.326, !663, !"<string literal>", i1 false, i1 false}
!663 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2159, i32 10}
!664 = !{ptr @.str.327, !665, !"<string literal>", i1 false, i1 false}
!665 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2162, i32 10}
!666 = !{ptr @.str.328, !667, !"<string literal>", i1 false, i1 false}
!667 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2165, i32 10}
!668 = !{ptr @.str.329, !669, !"<string literal>", i1 false, i1 false}
!669 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2057, i32 3}
!670 = !{ptr @.str.330, !669, !"<string literal>", i1 false, i1 false}
!671 = !{ptr @mlx4_init_slave._entry, !669, !"_entry", i1 false, i1 false}
!672 = !{ptr @mlx4_init_slave._entry_ptr, !669, !"_entry_ptr", i1 false, i1 false}
!673 = !{ptr @.str.332, !674, !"<string literal>", i1 false, i1 false}
!674 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2064, i32 3}
!675 = !{ptr @mlx4_init_slave._entry.331, !674, !"_entry", i1 false, i1 false}
!676 = !{ptr @mlx4_init_slave._entry_ptr.333, !674, !"_entry_ptr", i1 false, i1 false}
!677 = !{ptr @.str.335, !678, !"<string literal>", i1 false, i1 false}
!678 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2069, i32 2}
!679 = !{ptr @mlx4_init_slave._entry.334, !678, !"_entry", i1 false, i1 false}
!680 = !{ptr @mlx4_init_slave._entry_ptr.336, !678, !"_entry_ptr", i1 false, i1 false}
!681 = !{ptr @.str.338, !682, !"<string literal>", i1 false, i1 false}
!682 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2076, i32 4}
!683 = !{ptr @mlx4_init_slave._entry.337, !682, !"_entry", i1 false, i1 false}
!684 = !{ptr @mlx4_init_slave._entry_ptr.339, !682, !"_entry_ptr", i1 false, i1 false}
!685 = !{ptr @.str.341, !686, !"<string literal>", i1 false, i1 false}
!686 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2090, i32 3}
!687 = !{ptr @mlx4_init_slave._entry.340, !686, !"_entry", i1 false, i1 false}
!688 = !{ptr @mlx4_init_slave._entry_ptr.342, !686, !"_entry_ptr", i1 false, i1 false}
!689 = !{ptr @.str.344, !690, !"<string literal>", i1 false, i1 false}
!690 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2094, i32 2}
!691 = !{ptr @mlx4_init_slave._entry.343, !690, !"_entry", i1 false, i1 false}
!692 = !{ptr @mlx4_init_slave._entry_ptr.345, !690, !"_entry_ptr", i1 false, i1 false}
!693 = !{ptr @.str.346, !694, !"<string literal>", i1 false, i1 false}
!694 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2028, i32 2}
!695 = !{ptr @.str.347, !694, !"<string literal>", i1 false, i1 false}
!696 = !{ptr @mlx4_comm_check_offline._entry, !694, !"_entry", i1 false, i1 false}
!697 = !{ptr @mlx4_comm_check_offline._entry_ptr, !694, !"_entry_ptr", i1 false, i1 false}
!698 = !{ptr @.str.348, !699, !"<string literal>", i1 false, i1 false}
!699 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 919, i32 3}
!700 = !{ptr @.str.349, !699, !"<string literal>", i1 false, i1 false}
!701 = !{ptr @mlx4_slave_cap._entry, !699, !"_entry", i1 false, i1 false}
!702 = !{ptr @mlx4_slave_cap._entry_ptr, !699, !"_entry_ptr", i1 false, i1 false}
!703 = !{ptr @.str.351, !704, !"<string literal>", i1 false, i1 false}
!704 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 926, i32 3}
!705 = !{ptr @mlx4_slave_cap._entry.350, !704, !"_entry", i1 false, i1 false}
!706 = !{ptr @mlx4_slave_cap._entry_ptr.352, !704, !"_entry_ptr", i1 false, i1 false}
!707 = !{ptr @.str.354, !708, !"<string literal>", i1 false, i1 false}
!708 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 934, i32 3}
!709 = !{ptr @mlx4_slave_cap._entry.353, !708, !"_entry", i1 false, i1 false}
!710 = !{ptr @mlx4_slave_cap._entry_ptr.355, !708, !"_entry_ptr", i1 false, i1 false}
!711 = !{ptr @mlx4_slave_cap._entry.356, !712, !"_entry", i1 false, i1 false}
!712 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 944, i32 3}
!713 = !{ptr @mlx4_slave_cap._entry_ptr.357, !712, !"_entry_ptr", i1 false, i1 false}
!714 = !{ptr @.str.359, !715, !"<string literal>", i1 false, i1 false}
!715 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 950, i32 3}
!716 = !{ptr @mlx4_slave_cap._entry.358, !715, !"_entry", i1 false, i1 false}
!717 = !{ptr @mlx4_slave_cap._entry_ptr.360, !715, !"_entry_ptr", i1 false, i1 false}
!718 = !{ptr @.str.362, !719, !"<string literal>", i1 false, i1 false}
!719 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 953, i32 2}
!720 = !{ptr @mlx4_slave_cap._entry.361, !719, !"_entry", i1 false, i1 false}
!721 = !{ptr @mlx4_slave_cap._entry_ptr.363, !719, !"_entry_ptr", i1 false, i1 false}
!722 = !{ptr @mlx4_slave_cap._entry.364, !723, !"_entry", i1 false, i1 false}
!723 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 955, i32 3}
!724 = !{ptr @mlx4_slave_cap._entry_ptr.365, !723, !"_entry_ptr", i1 false, i1 false}
!725 = !{ptr @.str.367, !726, !"<string literal>", i1 false, i1 false}
!726 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 966, i32 3}
!727 = !{ptr @mlx4_slave_cap._entry.366, !726, !"_entry", i1 false, i1 false}
!728 = !{ptr @mlx4_slave_cap._entry_ptr.368, !726, !"_entry_ptr", i1 false, i1 false}
!729 = !{ptr @.str.370, !730, !"<string literal>", i1 false, i1 false}
!730 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 983, i32 3}
!731 = !{ptr @mlx4_slave_cap._entry.369, !730, !"_entry", i1 false, i1 false}
!732 = !{ptr @mlx4_slave_cap._entry_ptr.371, !730, !"_entry_ptr", i1 false, i1 false}
!733 = !{ptr @.str.373, !734, !"<string literal>", i1 false, i1 false}
!734 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 990, i32 3}
!735 = !{ptr @mlx4_slave_cap._entry.372, !734, !"_entry", i1 false, i1 false}
!736 = !{ptr @mlx4_slave_cap._entry_ptr.374, !734, !"_entry_ptr", i1 false, i1 false}
!737 = !{ptr @mlx4_slave_cap._entry.375, !738, !"_entry", i1 false, i1 false}
!738 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1015, i32 3}
!739 = !{ptr @mlx4_slave_cap._entry_ptr.376, !738, !"_entry_ptr", i1 false, i1 false}
!740 = !{ptr @.str.378, !741, !"<string literal>", i1 false, i1 false}
!741 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1025, i32 3}
!742 = !{ptr @mlx4_slave_cap._entry.377, !741, !"_entry", i1 false, i1 false}
!743 = !{ptr @mlx4_slave_cap._entry_ptr.379, !741, !"_entry_ptr", i1 false, i1 false}
!744 = !{ptr @.str.381, !745, !"<string literal>", i1 false, i1 false}
!745 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1033, i32 3}
!746 = !{ptr @mlx4_slave_cap._entry.380, !745, !"_entry", i1 false, i1 false}
!747 = !{ptr @mlx4_slave_cap._entry_ptr.382, !745, !"_entry_ptr", i1 false, i1 false}
!748 = !{ptr @.str.384, !749, !"<string literal>", i1 false, i1 false}
!749 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1068, i32 2}
!750 = !{ptr @mlx4_slave_cap._entry.383, !749, !"_entry", i1 false, i1 false}
!751 = !{ptr @mlx4_slave_cap._entry_ptr.385, !749, !"_entry_ptr", i1 false, i1 false}
!752 = !{ptr @.str.387, !753, !"<string literal>", i1 false, i1 false}
!753 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1071, i32 2}
!754 = !{ptr @mlx4_slave_cap._entry.386, !753, !"_entry", i1 false, i1 false}
!755 = !{ptr @mlx4_slave_cap._entry_ptr.388, !753, !"_entry_ptr", i1 false, i1 false}
!756 = !{ptr @.str.390, !757, !"<string literal>", i1 false, i1 false}
!757 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1074, i32 2}
!758 = !{ptr @mlx4_slave_cap._entry.389, !757, !"_entry", i1 false, i1 false}
!759 = !{ptr @mlx4_slave_cap._entry_ptr.391, !757, !"_entry_ptr", i1 false, i1 false}
!760 = !{ptr @.str.392, !757, !"<string literal>", i1 false, i1 false}
!761 = !{ptr @.str.393, !757, !"<string literal>", i1 false, i1 false}
!762 = !{ptr @.str.394, !763, !"<string literal>", i1 false, i1 false}
!763 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 875, i32 3}
!764 = !{ptr @.str.395, !763, !"<string literal>", i1 false, i1 false}
!765 = !{ptr @mlx4_slave_special_qp_cap._entry, !763, !"_entry", i1 false, i1 false}
!766 = !{ptr @mlx4_slave_special_qp_cap._entry_ptr, !763, !"_entry_ptr", i1 false, i1 false}
!767 = !{ptr @.str.397, !768, !"<string literal>", i1 false, i1 false}
!768 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 883, i32 4}
!769 = !{ptr @mlx4_slave_special_qp_cap._entry.396, !768, !"_entry", i1 false, i1 false}
!770 = !{ptr @mlx4_slave_special_qp_cap._entry_ptr.398, !768, !"_entry_ptr", i1 false, i1 false}
!771 = !{ptr @.str.400, !772, !"<string literal>", i1 false, i1 false}
!772 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 894, i32 4}
!773 = !{ptr @mlx4_slave_special_qp_cap._entry.399, !772, !"_entry", i1 false, i1 false}
!774 = !{ptr @mlx4_slave_special_qp_cap._entry_ptr.401, !772, !"_entry_ptr", i1 false, i1 false}
!775 = !{ptr @.str.402, !776, !"<string literal>", i1 false, i1 false}
!776 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 855, i32 2}
!777 = !{ptr @.str.403, !776, !"<string literal>", i1 false, i1 false}
!778 = !{ptr @slave_adjust_steering_mode._entry, !776, !"_entry", i1 false, i1 false}
!779 = !{ptr @slave_adjust_steering_mode._entry_ptr, !776, !"_entry_ptr", i1 false, i1 false}
!780 = !{ptr @pf_loading, !781, !"pf_loading", i1 false, i1 false}
!781 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 179, i32 17}
!782 = !{ptr @.str.404, !783, !"<string literal>", i1 false, i1 false}
!783 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2989, i32 6}
!784 = !{ptr @.str.405, !783, !"<string literal>", i1 false, i1 false}
!785 = !{ptr @mlx4_enable_msi_x._entry, !783, !"_entry", i1 false, i1 false}
!786 = !{ptr @mlx4_enable_msi_x._entry_ptr, !783, !"_entry_ptr", i1 false, i1 false}
!787 = distinct !{null, !788, !"__already_done", i1 false, i1 false}
!788 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!789 = !{ptr @.str.406, !788, !"<string literal>", i1 false, i1 false}
!790 = !{ptr @.str.407, !791, !"<string literal>", i1 false, i1 false}
!791 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2712, i32 3}
!792 = !{ptr @.str.408, !791, !"<string literal>", i1 false, i1 false}
!793 = !{ptr @mlx4_setup_hca._entry, !791, !"_entry", i1 false, i1 false}
!794 = !{ptr @mlx4_setup_hca._entry_ptr, !791, !"_entry_ptr", i1 false, i1 false}
!795 = !{ptr @.str.410, !796, !"<string literal>", i1 false, i1 false}
!796 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2718, i32 3}
!797 = !{ptr @mlx4_setup_hca._entry.409, !796, !"_entry", i1 false, i1 false}
!798 = !{ptr @mlx4_setup_hca._entry_ptr.411, !796, !"_entry_ptr", i1 false, i1 false}
!799 = !{ptr @.str.413, !800, !"<string literal>", i1 false, i1 false}
!800 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2724, i32 3}
!801 = !{ptr @mlx4_setup_hca._entry.412, !800, !"_entry", i1 false, i1 false}
!802 = !{ptr @mlx4_setup_hca._entry_ptr.414, !800, !"_entry_ptr", i1 false, i1 false}
!803 = !{ptr @.str.416, !804, !"<string literal>", i1 false, i1 false}
!804 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2731, i32 3}
!805 = !{ptr @mlx4_setup_hca._entry.415, !804, !"_entry", i1 false, i1 false}
!806 = !{ptr @mlx4_setup_hca._entry_ptr.417, !804, !"_entry_ptr", i1 false, i1 false}
!807 = !{ptr @.str.419, !808, !"<string literal>", i1 false, i1 false}
!808 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2737, i32 3}
!809 = !{ptr @mlx4_setup_hca._entry.418, !808, !"_entry", i1 false, i1 false}
!810 = !{ptr @mlx4_setup_hca._entry_ptr.420, !808, !"_entry_ptr", i1 false, i1 false}
!811 = !{ptr @.str.422, !812, !"<string literal>", i1 false, i1 false}
!812 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2743, i32 3}
!813 = !{ptr @mlx4_setup_hca._entry.421, !812, !"_entry", i1 false, i1 false}
!814 = !{ptr @mlx4_setup_hca._entry_ptr.423, !812, !"_entry_ptr", i1 false, i1 false}
!815 = !{ptr @.str.425, !816, !"<string literal>", i1 false, i1 false}
!816 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2750, i32 4}
!817 = !{ptr @mlx4_setup_hca._entry.424, !816, !"_entry", i1 false, i1 false}
!818 = !{ptr @mlx4_setup_hca._entry_ptr.426, !816, !"_entry_ptr", i1 false, i1 false}
!819 = !{ptr @.str.428, !820, !"<string literal>", i1 false, i1 false}
!820 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2755, i32 4}
!821 = !{ptr @mlx4_setup_hca._entry.427, !820, !"_entry", i1 false, i1 false}
!822 = !{ptr @mlx4_setup_hca._entry_ptr.429, !820, !"_entry_ptr", i1 false, i1 false}
!823 = !{ptr @.str.431, !824, !"<string literal>", i1 false, i1 false}
!824 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2762, i32 3}
!825 = !{ptr @mlx4_setup_hca._entry.430, !824, !"_entry", i1 false, i1 false}
!826 = !{ptr @mlx4_setup_hca._entry_ptr.432, !824, !"_entry_ptr", i1 false, i1 false}
!827 = !{ptr @.str.434, !828, !"<string literal>", i1 false, i1 false}
!828 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2768, i32 3}
!829 = !{ptr @mlx4_setup_hca._entry.433, !828, !"_entry", i1 false, i1 false}
!830 = !{ptr @mlx4_setup_hca._entry_ptr.435, !828, !"_entry_ptr", i1 false, i1 false}
!831 = !{ptr @.str.437, !832, !"<string literal>", i1 false, i1 false}
!832 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2775, i32 4}
!833 = !{ptr @mlx4_setup_hca._entry.436, !832, !"_entry", i1 false, i1 false}
!834 = !{ptr @mlx4_setup_hca._entry_ptr.438, !832, !"_entry_ptr", i1 false, i1 false}
!835 = !{ptr @.str.440, !836, !"<string literal>", i1 false, i1 false}
!836 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2777, i32 4}
!837 = !{ptr @mlx4_setup_hca._entry.439, !836, !"_entry", i1 false, i1 false}
!838 = !{ptr @mlx4_setup_hca._entry_ptr.441, !836, !"_entry_ptr", i1 false, i1 false}
!839 = !{ptr @.str.443, !840, !"<string literal>", i1 false, i1 false}
!840 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2779, i32 4}
!841 = !{ptr @mlx4_setup_hca._entry.442, !840, !"_entry", i1 false, i1 false}
!842 = !{ptr @mlx4_setup_hca._entry_ptr.444, !840, !"_entry_ptr", i1 false, i1 false}
!843 = !{ptr @.str.446, !844, !"<string literal>", i1 false, i1 false}
!844 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2781, i32 4}
!845 = !{ptr @mlx4_setup_hca._entry.445, !844, !"_entry", i1 false, i1 false}
!846 = !{ptr @mlx4_setup_hca._entry_ptr.447, !844, !"_entry_ptr", i1 false, i1 false}
!847 = !{ptr @.str.449, !848, !"<string literal>", i1 false, i1 false}
!848 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2787, i32 2}
!849 = !{ptr @mlx4_setup_hca._entry.448, !848, !"_entry", i1 false, i1 false}
!850 = !{ptr @mlx4_setup_hca._entry_ptr.450, !848, !"_entry_ptr", i1 false, i1 false}
!851 = !{ptr @.str.452, !852, !"<string literal>", i1 false, i1 false}
!852 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2791, i32 3}
!853 = !{ptr @mlx4_setup_hca._entry.451, !852, !"_entry", i1 false, i1 false}
!854 = !{ptr @mlx4_setup_hca._entry_ptr.453, !852, !"_entry_ptr", i1 false, i1 false}
!855 = !{ptr @.str.455, !856, !"<string literal>", i1 false, i1 false}
!856 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2797, i32 3}
!857 = !{ptr @mlx4_setup_hca._entry.454, !856, !"_entry", i1 false, i1 false}
!858 = !{ptr @mlx4_setup_hca._entry_ptr.456, !856, !"_entry_ptr", i1 false, i1 false}
!859 = !{ptr @.str.458, !860, !"<string literal>", i1 false, i1 false}
!860 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2803, i32 3}
!861 = !{ptr @mlx4_setup_hca._entry.457, !860, !"_entry", i1 false, i1 false}
!862 = !{ptr @mlx4_setup_hca._entry_ptr.459, !860, !"_entry_ptr", i1 false, i1 false}
!863 = !{ptr @.str.461, !864, !"<string literal>", i1 false, i1 false}
!864 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2810, i32 4}
!865 = !{ptr @mlx4_setup_hca._entry.460, !864, !"_entry", i1 false, i1 false}
!866 = !{ptr @mlx4_setup_hca._entry_ptr.462, !864, !"_entry_ptr", i1 false, i1 false}
!867 = !{ptr @.str.464, !868, !"<string literal>", i1 false, i1 false}
!868 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2817, i32 3}
!869 = !{ptr @mlx4_setup_hca._entry.463, !868, !"_entry", i1 false, i1 false}
!870 = !{ptr @mlx4_setup_hca._entry_ptr.465, !868, !"_entry_ptr", i1 false, i1 false}
!871 = !{ptr @.str.467, !872, !"<string literal>", i1 false, i1 false}
!872 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2827, i32 5}
!873 = !{ptr @mlx4_setup_hca._entry.466, !872, !"_entry", i1 false, i1 false}
!874 = !{ptr @mlx4_setup_hca._entry_ptr.468, !872, !"_entry_ptr", i1 false, i1 false}
!875 = !{ptr @mlx4_setup_hca._entry.469, !876, !"_entry", i1 false, i1 false}
!876 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2850, i32 5}
!877 = !{ptr @mlx4_setup_hca._entry_ptr.470, !876, !"_entry_ptr", i1 false, i1 false}
!878 = !{ptr @.str.471, !879, !"<string literal>", i1 false, i1 false}
!879 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2563, i32 4}
!880 = !{ptr @.str.472, !879, !"<string literal>", i1 false, i1 false}
!881 = !{ptr @mlx4_allocate_default_counters._entry, !879, !"_entry", i1 false, i1 false}
!882 = !{ptr @mlx4_allocate_default_counters._entry_ptr, !879, !"_entry_ptr", i1 false, i1 false}
!883 = !{ptr @.str.474, !884, !"<string literal>", i1 false, i1 false}
!884 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2567, i32 4}
!885 = !{ptr @mlx4_allocate_default_counters._entry.473, !884, !"_entry", i1 false, i1 false}
!886 = !{ptr @mlx4_allocate_default_counters._entry_ptr.475, !884, !"_entry_ptr", i1 false, i1 false}
!887 = !{ptr @.str.477, !888, !"<string literal>", i1 false, i1 false}
!888 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 2573, i32 3}
!889 = !{ptr @mlx4_allocate_default_counters._entry.476, !888, !"_entry", i1 false, i1 false}
!890 = !{ptr @mlx4_allocate_default_counters._entry_ptr.478, !888, !"_entry_ptr", i1 false, i1 false}
!891 = !{ptr @.str.479, !892, !"<string literal>", i1 false, i1 false}
!892 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3060, i32 26}
!893 = !{ptr @mlx4_init_port_info.__key, !894, !"__key", i1 false, i1 false}
!894 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3069, i32 2}
!895 = !{ptr @.str.480, !896, !"<string literal>", i1 false, i1 false}
!896 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3073, i32 3}
!897 = !{ptr @.str.481, !896, !"<string literal>", i1 false, i1 false}
!898 = !{ptr @mlx4_init_port_info._entry, !896, !"_entry", i1 false, i1 false}
!899 = !{ptr @mlx4_init_port_info._entry_ptr, !896, !"_entry_ptr", i1 false, i1 false}
!900 = !{ptr @.str.482, !901, !"<string literal>", i1 false, i1 false}
!901 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3079, i32 30}
!902 = !{ptr @mlx4_init_port_info.__key.483, !903, !"__key", i1 false, i1 false}
!903 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3088, i32 2}
!904 = !{ptr @.str.485, !905, !"<string literal>", i1 false, i1 false}
!905 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3093, i32 3}
!906 = !{ptr @mlx4_init_port_info._entry.484, !905, !"_entry", i1 false, i1 false}
!907 = !{ptr @mlx4_init_port_info._entry_ptr.486, !905, !"_entry_ptr", i1 false, i1 false}
!908 = !{ptr @.str.487, !909, !"<string literal>", i1 false, i1 false}
!909 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1251, i32 9}
!910 = !{ptr @.str.488, !909, !"<string literal>", i1 false, i1 false}
!911 = !{ptr @set_port_type.set_port_type_mutex, !909, !"set_port_type_mutex", i1 false, i1 false}
!912 = !{ptr @.str.489, !913, !"<string literal>", i1 false, i1 false}
!913 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1256, i32 19}
!914 = !{ptr @.str.490, !915, !"<string literal>", i1 false, i1 false}
!915 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1258, i32 26}
!916 = !{ptr @.str.491, !917, !"<string literal>", i1 false, i1 false}
!917 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1260, i32 26}
!918 = !{ptr @.str.492, !919, !"<string literal>", i1 false, i1 false}
!919 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1263, i32 3}
!920 = !{ptr @.str.493, !919, !"<string literal>", i1 false, i1 false}
!921 = !{ptr @set_port_type._entry, !919, !"_entry", i1 false, i1 false}
!922 = !{ptr @set_port_type._entry_ptr, !919, !"_entry_ptr", i1 false, i1 false}
!923 = !{ptr @.str.494, !924, !"<string literal>", i1 false, i1 false}
!924 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1188, i32 3}
!925 = !{ptr @__set_port_type._entry, !924, !"_entry", i1 false, i1 false}
!926 = !{ptr @__set_port_type._entry_ptr, !924, !"_entry_ptr", i1 false, i1 false}
!927 = !{ptr @.str.496, !928, !"<string literal>", i1 false, i1 false}
!928 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1218, i32 3}
!929 = !{ptr @__set_port_type._entry.495, !928, !"_entry", i1 false, i1 false}
!930 = !{ptr @__set_port_type._entry_ptr.497, !928, !"_entry_ptr", i1 false, i1 false}
!931 = !{ptr @.str.498, !932, !"<string literal>", i1 false, i1 false}
!932 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1166, i32 16}
!933 = !{ptr @.str.499, !934, !"<string literal>", i1 false, i1 false}
!934 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1168, i32 3}
!935 = !{ptr @.str.500, !936, !"<string literal>", i1 false, i1 false}
!936 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1168, i32 10}
!937 = !{ptr @.str.501, !938, !"<string literal>", i1 false, i1 false}
!938 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1170, i32 16}
!939 = !{ptr @.str.502, !940, !"<string literal>", i1 false, i1 false}
!940 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1172, i32 16}
!941 = !{ptr @.str.503, !942, !"<string literal>", i1 false, i1 false}
!942 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1335, i32 3}
!943 = !{ptr @.str.504, !942, !"<string literal>", i1 false, i1 false}
!944 = !{ptr @set_port_ib_mtu._entry, !942, !"_entry", i1 false, i1 false}
!945 = !{ptr @set_port_ib_mtu._entry_ptr, !942, !"_entry_ptr", i1 false, i1 false}
!946 = !{ptr @.str.506, !947, !"<string literal>", i1 false, i1 false}
!947 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1344, i32 3}
!948 = !{ptr @set_port_ib_mtu._entry.505, !947, !"_entry", i1 false, i1 false}
!949 = !{ptr @set_port_ib_mtu._entry_ptr.507, !947, !"_entry_ptr", i1 false, i1 false}
!950 = !{ptr @set_port_ib_mtu._entry.508, !951, !"_entry", i1 false, i1 false}
!951 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1357, i32 4}
!952 = !{ptr @set_port_ib_mtu._entry_ptr.509, !951, !"_entry_ptr", i1 false, i1 false}
!953 = !{ptr @.str.510, !954, !"<string literal>", i1 false, i1 false}
!954 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1317, i32 3}
!955 = !{ptr @show_port_ib_mtu._entry, !954, !"_entry", i1 false, i1 false}
!956 = !{ptr @show_port_ib_mtu._entry_ptr, !954, !"_entry_ptr", i1 false, i1 false}
!957 = !{ptr @.str.511, !958, !"<string literal>", i1 false, i1 false}
!958 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 1319, i32 15}
!959 = !{ptr @mlx4_driver, !960, !"mlx4_driver", i1 false, i1 false}
!960 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4431, i32 26}
!961 = !{ptr @mlx4_pci_table, !962, !"mlx4_pci_table", i1 false, i1 false}
!962 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4243, i32 35}
!963 = distinct !{null, !964, !"__already_done", i1 false, i1 false}
!964 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3997, i32 2}
!965 = !{ptr @.str.512, !964, !"<string literal>", i1 false, i1 false}
!966 = !{ptr @.str.513, !964, !"<string literal>", i1 false, i1 false}
!967 = !{ptr @mlx4_init_one._entry, !964, !"_entry", i1 false, i1 false}
!968 = !{ptr @mlx4_init_one._entry_ptr, !964, !"_entry_ptr", i1 false, i1 false}
!969 = !{ptr @mlx4_init_one.__key, !970, !"__key", i1 false, i1 false}
!970 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4014, i32 2}
!971 = !{ptr @.str.514, !970, !"<string literal>", i1 false, i1 false}
!972 = !{ptr @mlx4_init_one.__key.515, !973, !"__key", i1 false, i1 false}
!973 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4015, i32 2}
!974 = !{ptr @.str.516, !973, !"<string literal>", i1 false, i1 false}
!975 = !{ptr @mlx4_init_one.__key.517, !976, !"__key", i1 false, i1 false}
!976 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4016, i32 2}
!977 = !{ptr @.str.518, !976, !"<string literal>", i1 false, i1 false}
!978 = !{ptr @mlx4_version, !979, !"mlx4_version", i1 false, i1 false}
!979 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 122, i32 13}
!980 = !{ptr @mlx4_devlink_ops, !981, !"mlx4_devlink_ops", i1 false, i1 false}
!981 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3983, i32 33}
!982 = !{ptr @mlx4_devlink_reload_down.__msg, !983, !"__msg", i1 false, i1 false}
!983 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3956, i32 3}
!984 = !{ptr @.str.519, !985, !"<string literal>", i1 false, i1 false}
!985 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3960, i32 3}
!986 = !{ptr @.str.520, !985, !"<string literal>", i1 false, i1 false}
!987 = !{ptr @mlx4_devlink_reload_down._entry, !985, !"_entry", i1 false, i1 false}
!988 = !{ptr @mlx4_devlink_reload_down._entry_ptr, !985, !"_entry_ptr", i1 false, i1 false}
!989 = !{ptr @.str.521, !990, !"<string literal>", i1 false, i1 false}
!990 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3977, i32 3}
!991 = !{ptr @.str.522, !990, !"<string literal>", i1 false, i1 false}
!992 = !{ptr @mlx4_devlink_reload_up._entry, !990, !"_entry", i1 false, i1 false}
!993 = !{ptr @mlx4_devlink_reload_up._entry_ptr, !990, !"_entry_ptr", i1 false, i1 false}
!994 = !{ptr @.str.523, !995, !"<string literal>", i1 false, i1 false}
!995 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 240, i32 2}
!996 = !{ptr @.str.524, !997, !"<string literal>", i1 false, i1 false}
!997 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 245, i32 2}
!998 = !{ptr @.str.525, !999, !"<string literal>", i1 false, i1 false}
!999 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 248, i32 2}
!1000 = !{ptr @.str.526, !1001, !"<string literal>", i1 false, i1 false}
!1001 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 253, i32 2}
!1002 = !{ptr @.str.527, !1003, !"<string literal>", i1 false, i1 false}
!1003 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 257, i32 2}
!1004 = !{ptr @mlx4_devlink_params, !1005, !"mlx4_devlink_params", i1 false, i1 false}
!1005 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 239, i32 35}
!1006 = !{ptr @mlx4_devlink_max_macs_validate.__msg, !1007, !"__msg", i1 false, i1 false}
!1007 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 226, i32 3}
!1008 = !{ptr @.str.528, !1009, !"<string literal>", i1 false, i1 false}
!1009 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3738, i32 2}
!1010 = !{ptr @.str.529, !1009, !"<string literal>", i1 false, i1 false}
!1011 = !{ptr @__mlx4_init_one._entry, !1009, !"_entry", i1 false, i1 false}
!1012 = !{ptr @__mlx4_init_one._entry_ptr, !1009, !"_entry_ptr", i1 false, i1 false}
!1013 = !{ptr @.str.531, !1014, !"<string literal>", i1 false, i1 false}
!1014 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3742, i32 3}
!1015 = !{ptr @__mlx4_init_one._entry.530, !1014, !"_entry", i1 false, i1 false}
!1016 = !{ptr @__mlx4_init_one._entry_ptr.532, !1014, !"_entry_ptr", i1 false, i1 false}
!1017 = !{ptr @.str.534, !1018, !"<string literal>", i1 false, i1 false}
!1018 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3754, i32 4}
!1019 = !{ptr @__mlx4_init_one._entry.533, !1018, !"_entry", i1 false, i1 false}
!1020 = !{ptr @__mlx4_init_one._entry_ptr.535, !1018, !"_entry_ptr", i1 false, i1 false}
!1021 = !{ptr @.str.537, !1022, !"<string literal>", i1 false, i1 false}
!1022 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3763, i32 4}
!1023 = !{ptr @__mlx4_init_one._entry.536, !1022, !"_entry", i1 false, i1 false}
!1024 = !{ptr @__mlx4_init_one._entry_ptr.538, !1022, !"_entry_ptr", i1 false, i1 false}
!1025 = !{ptr @.str.540, !1026, !"<string literal>", i1 false, i1 false}
!1026 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3769, i32 3}
!1027 = !{ptr @__mlx4_init_one._entry.539, !1026, !"_entry", i1 false, i1 false}
!1028 = !{ptr @__mlx4_init_one._entry_ptr.541, !1026, !"_entry_ptr", i1 false, i1 false}
!1029 = !{ptr @.str.543, !1030, !"<string literal>", i1 false, i1 false}
!1030 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3778, i32 4}
!1031 = !{ptr @__mlx4_init_one._entry.542, !1030, !"_entry", i1 false, i1 false}
!1032 = !{ptr @__mlx4_init_one._entry_ptr.544, !1030, !"_entry_ptr", i1 false, i1 false}
!1033 = !{ptr @.str.546, !1034, !"<string literal>", i1 false, i1 false}
!1034 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3790, i32 3}
!1035 = !{ptr @__mlx4_init_one._entry.545, !1034, !"_entry", i1 false, i1 false}
!1036 = !{ptr @__mlx4_init_one._entry_ptr.547, !1034, !"_entry_ptr", i1 false, i1 false}
!1037 = !{ptr @.str.549, !1038, !"<string literal>", i1 false, i1 false}
!1038 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3796, i32 3}
!1039 = !{ptr @__mlx4_init_one._entry.548, !1038, !"_entry", i1 false, i1 false}
!1040 = !{ptr @__mlx4_init_one._entry_ptr.550, !1038, !"_entry_ptr", i1 false, i1 false}
!1041 = !{ptr @.str.552, !1042, !"<string literal>", i1 false, i1 false}
!1042 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3803, i32 3}
!1043 = !{ptr @__mlx4_init_one._entry.551, !1042, !"_entry", i1 false, i1 false}
!1044 = !{ptr @__mlx4_init_one._entry_ptr.553, !1042, !"_entry_ptr", i1 false, i1 false}
!1045 = !{ptr @.str.555, !1046, !"<string literal>", i1 false, i1 false}
!1046 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3811, i32 3}
!1047 = !{ptr @__mlx4_init_one._entry.554, !1046, !"_entry", i1 false, i1 false}
!1048 = !{ptr @__mlx4_init_one._entry_ptr.556, !1046, !"_entry_ptr", i1 false, i1 false}
!1049 = !{ptr @.str.558, !1050, !"<string literal>", i1 false, i1 false}
!1050 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3814, i32 4}
!1051 = !{ptr @__mlx4_init_one._entry.557, !1050, !"_entry", i1 false, i1 false}
!1052 = !{ptr @__mlx4_init_one._entry_ptr.559, !1050, !"_entry_ptr", i1 false, i1 false}
!1053 = !{ptr @.str.561, !1054, !"<string literal>", i1 false, i1 false}
!1054 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 3839, i32 5}
!1055 = !{ptr @__mlx4_init_one._entry.560, !1054, !"_entry", i1 false, i1 false}
!1056 = !{ptr @__mlx4_init_one._entry_ptr.562, !1054, !"_entry_ptr", i1 false, i1 false}
!1057 = !{ptr @.str.563, !1058, !"<string literal>", i1 false, i1 false}
!1058 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4151, i32 4}
!1059 = !{ptr @.str.564, !1058, !"<string literal>", i1 false, i1 false}
!1060 = !{ptr @mlx4_remove_one._entry, !1058, !"_entry", i1 false, i1 false}
!1061 = !{ptr @mlx4_remove_one._entry_ptr, !1058, !"_entry_ptr", i1 false, i1 false}
!1062 = !{ptr @.str.566, !1063, !"<string literal>", i1 false, i1 false}
!1063 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4152, i32 4}
!1064 = !{ptr @mlx4_remove_one._entry.565, !1063, !"_entry", i1 false, i1 false}
!1065 = !{ptr @mlx4_remove_one._entry_ptr.567, !1063, !"_entry_ptr", i1 false, i1 false}
!1066 = !{ptr @.str.569, !1067, !"<string literal>", i1 false, i1 false}
!1067 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4162, i32 3}
!1068 = !{ptr @mlx4_remove_one._entry.568, !1067, !"_entry", i1 false, i1 false}
!1069 = !{ptr @mlx4_remove_one._entry_ptr.570, !1067, !"_entry_ptr", i1 false, i1 false}
!1070 = !{ptr @.str.572, !1071, !"<string literal>", i1 false, i1 false}
!1071 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4166, i32 3}
!1072 = !{ptr @mlx4_remove_one._entry.571, !1071, !"_entry", i1 false, i1 false}
!1073 = !{ptr @mlx4_remove_one._entry_ptr.573, !1071, !"_entry_ptr", i1 false, i1 false}
!1074 = !{ptr @.str.574, !1075, !"<string literal>", i1 false, i1 false}
!1075 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 753, i32 4}
!1076 = !{ptr @.str.575, !1075, !"<string literal>", i1 false, i1 false}
!1077 = !{ptr @mlx4_how_many_lives_vf._entry, !1075, !"_entry", i1 false, i1 false}
!1078 = !{ptr @mlx4_how_many_lives_vf._entry_ptr, !1075, !"_entry_ptr", i1 false, i1 false}
!1079 = !{ptr @.str.576, !1080, !"<string literal>", i1 false, i1 false}
!1080 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4369, i32 2}
!1081 = !{ptr @.str.577, !1080, !"<string literal>", i1 false, i1 false}
!1082 = !{ptr @mlx4_shutdown._entry, !1080, !"_entry", i1 false, i1 false}
!1083 = !{ptr @mlx4_shutdown._entry_ptr, !1080, !"_entry_ptr", i1 false, i1 false}
!1084 = !{ptr @mlx4_err_handler, !1085, !"mlx4_err_handler", i1 false, i1 false}
!1085 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4377, i32 40}
!1086 = !{ptr @.str.578, !1087, !"<string literal>", i1 false, i1 false}
!1087 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4296, i32 2}
!1088 = !{ptr @.str.579, !1087, !"<string literal>", i1 false, i1 false}
!1089 = !{ptr @mlx4_pci_err_detected._entry, !1087, !"_entry", i1 false, i1 false}
!1090 = !{ptr @mlx4_pci_err_detected._entry_ptr, !1087, !"_entry_ptr", i1 false, i1 false}
!1091 = !{ptr @.str.580, !1092, !"<string literal>", i1 false, i1 false}
!1092 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4317, i32 2}
!1093 = !{ptr @.str.581, !1092, !"<string literal>", i1 false, i1 false}
!1094 = !{ptr @mlx4_pci_slot_reset._entry, !1092, !"_entry", i1 false, i1 false}
!1095 = !{ptr @mlx4_pci_slot_reset._entry_ptr, !1092, !"_entry_ptr", i1 false, i1 false}
!1096 = !{ptr @.str.583, !1097, !"<string literal>", i1 false, i1 false}
!1097 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4320, i32 3}
!1098 = !{ptr @mlx4_pci_slot_reset._entry.582, !1097, !"_entry", i1 false, i1 false}
!1099 = !{ptr @mlx4_pci_slot_reset._entry_ptr.584, !1097, !"_entry_ptr", i1 false, i1 false}
!1100 = !{ptr @.str.585, !1101, !"<string literal>", i1 false, i1 false}
!1101 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4339, i32 2}
!1102 = !{ptr @.str.586, !1101, !"<string literal>", i1 false, i1 false}
!1103 = !{ptr @mlx4_pci_resume._entry, !1101, !"_entry", i1 false, i1 false}
!1104 = !{ptr @mlx4_pci_resume._entry_ptr, !1101, !"_entry_ptr", i1 false, i1 false}
!1105 = !{ptr @.str.588, !1106, !"<string literal>", i1 false, i1 false}
!1106 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4348, i32 4}
!1107 = !{ptr @mlx4_pci_resume._entry.587, !1106, !"_entry", i1 false, i1 false}
!1108 = !{ptr @mlx4_pci_resume._entry_ptr.589, !1106, !"_entry_ptr", i1 false, i1 false}
!1109 = !{ptr @mlx4_pci_resume._entry.590, !1110, !"_entry", i1 false, i1 false}
!1110 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4357, i32 4}
!1111 = !{ptr @mlx4_pci_resume._entry_ptr.591, !1110, !"_entry_ptr", i1 false, i1 false}
!1112 = !{ptr @mlx4_pm_ops, !1113, !"mlx4_pm_ops", i1 false, i1 false}
!1113 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4429, i32 8}
!1114 = !{ptr @.str.592, !1115, !"<string literal>", i1 false, i1 false}
!1115 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4389, i32 2}
!1116 = !{ptr @.str.593, !1115, !"<string literal>", i1 false, i1 false}
!1117 = !{ptr @mlx4_suspend._entry, !1115, !"_entry", i1 false, i1 false}
!1118 = !{ptr @mlx4_suspend._entry_ptr, !1115, !"_entry_ptr", i1 false, i1 false}
!1119 = !{ptr @.str.594, !1120, !"<string literal>", i1 false, i1 false}
!1120 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4408, i32 2}
!1121 = !{ptr @.str.595, !1120, !"<string literal>", i1 false, i1 false}
!1122 = !{ptr @mlx4_resume._entry, !1120, !"_entry", i1 false, i1 false}
!1123 = !{ptr @mlx4_resume._entry_ptr, !1120, !"_entry_ptr", i1 false, i1 false}
!1124 = !{ptr @.str.597, !1125, !"<string literal>", i1 false, i1 false}
!1125 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4421, i32 5}
!1126 = !{ptr @mlx4_resume._entry.596, !1125, !"_entry", i1 false, i1 false}
!1127 = !{ptr @mlx4_resume._entry_ptr.598, !1125, !"_entry_ptr", i1 false, i1 false}
!1128 = !{ptr @.str.599, !1129, !"<string literal>", i1 false, i1 false}
!1129 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4494, i32 12}
!1130 = !{ptr @.str.600, !1131, !"<string literal>", i1 false, i1 false}
!1131 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4444, i32 3}
!1132 = !{ptr @.str.601, !1131, !"<string literal>", i1 false, i1 false}
!1133 = !{ptr @mlx4_verify_params._entry, !1131, !"_entry", i1 false, i1 false}
!1134 = !{ptr @mlx4_verify_params._entry_ptr, !1131, !"_entry_ptr", i1 false, i1 false}
!1135 = !{ptr @.str.603, !1136, !"<string literal>", i1 false, i1 false}
!1136 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4449, i32 3}
!1137 = !{ptr @mlx4_verify_params._entry.602, !1136, !"_entry", i1 false, i1 false}
!1138 = !{ptr @mlx4_verify_params._entry_ptr.604, !1136, !"_entry_ptr", i1 false, i1 false}
!1139 = !{ptr @.str.606, !1140, !"<string literal>", i1 false, i1 false}
!1140 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4454, i32 3}
!1141 = !{ptr @mlx4_verify_params._entry.605, !1140, !"_entry", i1 false, i1 false}
!1142 = !{ptr @mlx4_verify_params._entry_ptr.607, !1140, !"_entry_ptr", i1 false, i1 false}
!1143 = !{ptr @.str.609, !1144, !"<string literal>", i1 false, i1 false}
!1144 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4458, i32 3}
!1145 = !{ptr @mlx4_verify_params._entry.608, !1144, !"_entry", i1 false, i1 false}
!1146 = !{ptr @mlx4_verify_params._entry_ptr.610, !1144, !"_entry_ptr", i1 false, i1 false}
!1147 = !{ptr @.str.612, !1148, !"<string literal>", i1 false, i1 false}
!1148 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4461, i32 3}
!1149 = !{ptr @mlx4_verify_params._entry.611, !1148, !"_entry", i1 false, i1 false}
!1150 = !{ptr @mlx4_verify_params._entry_ptr.613, !1148, !"_entry_ptr", i1 false, i1 false}
!1151 = !{ptr @.str.615, !1152, !"<string literal>", i1 false, i1 false}
!1152 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4468, i32 3}
!1153 = !{ptr @mlx4_verify_params._entry.614, !1152, !"_entry", i1 false, i1 false}
!1154 = !{ptr @mlx4_verify_params._entry_ptr.616, !1152, !"_entry_ptr", i1 false, i1 false}
!1155 = !{ptr @.str.618, !1156, !"<string literal>", i1 false, i1 false}
!1156 = !{!"../drivers/net/ethernet/mellanox/mlx4/main.c", i32 4476, i32 3}
!1157 = !{ptr @mlx4_verify_params._entry.617, !1156, !"_entry", i1 false, i1 false}
!1158 = !{ptr @mlx4_verify_params._entry_ptr.619, !1156, !"_entry_ptr", i1 false, i1 false}
!1159 = !{i32 1, !"wchar_size", i32 2}
!1160 = !{i32 1, !"min_enum_size", i32 4}
!1161 = !{i32 8, !"branch-target-enforcement", i32 0}
!1162 = !{i32 8, !"sign-return-address", i32 0}
!1163 = !{i32 8, !"sign-return-address-all", i32 0}
!1164 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1165 = !{i32 7, !"uwtable", i32 1}
!1166 = !{i32 7, !"frame-pointer", i32 2}
!1167 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1168 = !{i8 0, i8 2}
!1169 = !{i64 5104531}
!1170 = !{i64 2157083484}
!1171 = !{i64 2157084294}
!1172 = !{i64 2157085084}
!1173 = !{!"auto-init"}
!1174 = !{!"branch_weights", i32 2000, i32 2001, i32 1}
!1175 = !{i32 0, i32 33}
!1176 = !{i64 2157274204}
!1177 = !{i64 5104113}
!1178 = !{i64 2157272109}
!1179 = !{i64 2157091612}
!1180 = !{i64 2157094456}
!1181 = !{i64 2157107013}
!1182 = !{i64 2148466771, i64 2148466797, i64 2148466826, i64 2148466860, i64 2148466891, i64 2148466914}
!1183 = !{!"branch_weights", i32 1, i32 2000}
!1184 = !{!"branch_weights", i32 2000, i32 1}
!1185 = !{i64 2148464306, i64 2148464332, i64 2148464361, i64 2148464395, i64 2148464426, i64 2148464449}
